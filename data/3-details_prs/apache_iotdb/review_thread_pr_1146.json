{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNDE0NDE2", "number": 1146, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwNzo1MDozNlrOD4oeHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwNzo1MTo0OVrOD4oefw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzA5OTE3OnYy", "diffSide": "RIGHT", "path": "grafana/src/main/java/org/apache/iotdb/web/grafana/dao/impl/BasicDaoImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwNzo1MDozNlrOGPhS9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwODozNToyN1rOGPhjCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkyNzM1MQ==", "bodyText": "how about empty List?", "url": "https://github.com/apache/iotdb/pull/1146#discussion_r418927351", "createdAt": "2020-05-02T07:50:36Z", "author": {"login": "jixuan1989"}, "path": "grafana/src/main/java/org/apache/iotdb/web/grafana/dao/impl/BasicDaoImpl.java", "diffHunk": "@@ -98,8 +98,28 @@ public Object doInConnection(Connection connection) throws SQLException {\n     return (List<String>) jdbcTemplate.execute(connectionCallback);\n   }\n \n+  /**\n+   * Note: If the query fails this could be due to AGGREGATIION like AVG on booleayn field.\n+   * Thus, we then do a retry with FIRST aggregation.\n+   * This should be solved better in the long run.\n+   */\n   @Override\n   public List<TimeValues> querySeries(String s, Pair<ZonedDateTime, ZonedDateTime> timeRange) {\n+    try {\n+      return querySeriesInternal(s, timeRange, function);\n+    } catch (Exception e) {\n+      logger.info(\"Execution failed, trying now with FIRST Function!\");\n+      // Try it with FIRST\n+      try {\n+        return querySeriesInternal(s, timeRange, \"FIRST\");\n+      } catch (Exception e2) {\n+        logger.warn(\"Even FIRST query did not succeed, returning NULL now\", e2);\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1c2b782c59cfdc7b1cdd5cf08c152bee55603bf"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMTQ2Nw==", "bodyText": "+1, done", "url": "https://github.com/apache/iotdb/pull/1146#discussion_r418931467", "createdAt": "2020-05-02T08:35:27Z", "author": {"login": "JulianFeinauer"}, "path": "grafana/src/main/java/org/apache/iotdb/web/grafana/dao/impl/BasicDaoImpl.java", "diffHunk": "@@ -98,8 +98,28 @@ public Object doInConnection(Connection connection) throws SQLException {\n     return (List<String>) jdbcTemplate.execute(connectionCallback);\n   }\n \n+  /**\n+   * Note: If the query fails this could be due to AGGREGATIION like AVG on booleayn field.\n+   * Thus, we then do a retry with FIRST aggregation.\n+   * This should be solved better in the long run.\n+   */\n   @Override\n   public List<TimeValues> querySeries(String s, Pair<ZonedDateTime, ZonedDateTime> timeRange) {\n+    try {\n+      return querySeriesInternal(s, timeRange, function);\n+    } catch (Exception e) {\n+      logger.info(\"Execution failed, trying now with FIRST Function!\");\n+      // Try it with FIRST\n+      try {\n+        return querySeriesInternal(s, timeRange, \"FIRST\");\n+      } catch (Exception e2) {\n+        logger.warn(\"Even FIRST query did not succeed, returning NULL now\", e2);\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkyNzM1MQ=="}, "originalCommit": {"oid": "a1c2b782c59cfdc7b1cdd5cf08c152bee55603bf"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzEwMDE1OnYy", "diffSide": "RIGHT", "path": "grafana/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwNzo1MTo0OVrOGPhTZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwODozNTo0MVrOGPhjFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkyNzQ2Mw==", "bodyText": "add a comment here: if the data type does not support AVG, then FIRST will be used.", "url": "https://github.com/apache/iotdb/pull/1146#discussion_r418927463", "createdAt": "2020-05-02T07:51:49Z", "author": {"login": "jixuan1989"}, "path": "grafana/src/main/resources/application.properties", "diffHunk": "@@ -32,4 +32,4 @@ isDownSampling=true\n interval=1m\n # aggregation function to use to downsampling the data\n # COUNT, FIRST_VALUE, LAST_VALUE, MAX_TIME, MAX_VALUE, AVG, MIN_TIME, MIN_VALUE, NOW, SUM\n-function=avg\n\\ No newline at end of file\n+function=AVG", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1c2b782c59cfdc7b1cdd5cf08c152bee55603bf"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMTQ3Ng==", "bodyText": "done.", "url": "https://github.com/apache/iotdb/pull/1146#discussion_r418931476", "createdAt": "2020-05-02T08:35:41Z", "author": {"login": "JulianFeinauer"}, "path": "grafana/src/main/resources/application.properties", "diffHunk": "@@ -32,4 +32,4 @@ isDownSampling=true\n interval=1m\n # aggregation function to use to downsampling the data\n # COUNT, FIRST_VALUE, LAST_VALUE, MAX_TIME, MAX_VALUE, AVG, MIN_TIME, MIN_VALUE, NOW, SUM\n-function=avg\n\\ No newline at end of file\n+function=AVG", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkyNzQ2Mw=="}, "originalCommit": {"oid": "a1c2b782c59cfdc7b1cdd5cf08c152bee55603bf"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4938, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}