{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMzQ1MDAy", "number": 2063, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzozMzoxMlrOE6BGiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMDo1MTowN1rOE6TAzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MjcwOTIwOnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/apache/iotdb/db/query/executor/QueryRouter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzozMzoxMlrOH006hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzozOTowMlrOH01Jbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1NDk0OA==", "bodyText": "this may be used in cluster @jt2594838", "url": "https://github.com/apache/iotdb/pull/2063#discussion_r525154948", "createdAt": "2020-11-17T13:33:12Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/executor/QueryRouter.java", "diffHunk": "@@ -225,12 +225,8 @@ public QueryDataSet groupByFill(GroupByTimeFillPlan groupByFillPlan, QueryContex\n   @Override\n   public QueryDataSet lastQuery(LastQueryPlan lastQueryPlan, QueryContext context)\n       throws StorageEngineException, QueryProcessException, IOException {\n-    LastQueryExecutor lastQueryExecutor = getLastQueryExecutor(lastQueryPlan);\n+    LastQueryExecutor lastQueryExecutor = new LastQueryExecutor(lastQueryPlan);\n     return lastQueryExecutor.execute(context, lastQueryPlan);\n   }\n \n-  protected LastQueryExecutor getLastQueryExecutor(LastQueryPlan lastQueryPlan) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "370a06b56e648a8c6e3fdfe260c03590e9330b34"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1ODc2Ng==", "bodyText": "Yes, indeed. I hope you can make some interfaces out of it, which would better not be modified so frequently.", "url": "https://github.com/apache/iotdb/pull/2063#discussion_r525158766", "createdAt": "2020-11-17T13:39:02Z", "author": {"login": "jt2594838"}, "path": "server/src/main/java/org/apache/iotdb/db/query/executor/QueryRouter.java", "diffHunk": "@@ -225,12 +225,8 @@ public QueryDataSet groupByFill(GroupByTimeFillPlan groupByFillPlan, QueryContex\n   @Override\n   public QueryDataSet lastQuery(LastQueryPlan lastQueryPlan, QueryContext context)\n       throws StorageEngineException, QueryProcessException, IOException {\n-    LastQueryExecutor lastQueryExecutor = getLastQueryExecutor(lastQueryPlan);\n+    LastQueryExecutor lastQueryExecutor = new LastQueryExecutor(lastQueryPlan);\n     return lastQueryExecutor.execute(context, lastQueryPlan);\n   }\n \n-  protected LastQueryExecutor getLastQueryExecutor(LastQueryPlan lastQueryPlan) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1NDk0OA=="}, "originalCommit": {"oid": "370a06b56e648a8c6e3fdfe260c03590e9330b34"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTY0MzY0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMDo1MTowN1rOH1RerQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMDo1MTowN1rOH1RerQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYyMjk1Nw==", "bodyText": "it should be a Collections.single() instead of an emptySet()", "url": "https://github.com/apache/iotdb/pull/2063#discussion_r525622957", "createdAt": "2020-11-18T00:51:07Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "diffHunk": "@@ -107,8 +109,12 @@ static long getLastTimeStamp(MeasurementMNode node, QueryContext queryContext) {\n       return node.getCachedLast().getTimestamp();\n     } else {\n       try {\n-        last = calculateLastPairForOneSeriesLocally(node.getPartialPath(),\n-            node.getSchema().getType(), queryContext, null, Collections.emptySet());\n+        QueryDataSource dataSource = QueryResourceManager.getInstance().\n+                getQueryDataSource(node.getPartialPath(), queryContext, null);\n+        LastPointReader lastReader = new LastPointReader(node.getPartialPath(),\n+                node.getSchema().getType(), Collections.emptySet(), queryContext,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "370a06b56e648a8c6e3fdfe260c03590e9330b34"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 563, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}