{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1MzA1ODY1", "number": 1658, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMDowMjo1MVrOEdnPaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMzo1NzoyOFrOEeJZFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NDg3MDgzOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMDowMjo1MVrOHI3lzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMDowMjo1MVrOHI3lzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA2MTQ1NA==", "bodyText": "It's not a good way to get the index, measurements maybe very large. You should store the measurementSchema as a map", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479061454", "createdAt": "2020-08-28T10:02:51Z", "author": {"login": "mychaow"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -81,6 +82,43 @@ public Tablet(String deviceId, List<MeasurementSchema> timeseries) {\n     this(deviceId, timeseries, DEFAULT_SIZE);\n   }\n \n+  public void addTimestamp(int rowIndex, long timestamp) {\n+    timestamps[rowIndex - 1] = timestamp;\n+  }\n+\n+  public void addValue(MeasurementSchema measurementSchema, int rowIndex, Object value) {\n+\n+    int indexOfValue = schemas.indexOf(measurementSchema);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc403d30faa565a02c16c92386516b5fcbea849e"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NDg5MTA5OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMDowNTozOVrOHI3zRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMDowNTozOVrOHI3zRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA2NDkwMw==", "bodyText": "what is the meaning of this line?", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479064903", "createdAt": "2020-08-28T10:05:39Z", "author": {"login": "mychaow"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -81,6 +82,43 @@ public Tablet(String deviceId, List<MeasurementSchema> timeseries) {\n     this(deviceId, timeseries, DEFAULT_SIZE);\n   }\n \n+  public void addTimestamp(int rowIndex, long timestamp) {\n+    timestamps[rowIndex - 1] = timestamp;\n+  }\n+\n+  public void addValue(MeasurementSchema measurementSchema, int rowIndex, Object value) {\n+\n+    int indexOfValue = schemas.indexOf(measurementSchema);\n+    if (measurementSchema.getType() == INT64) {\n+      long[] sensor = (long[]) values[indexOfValue];\n+      sensor[rowIndex - 1] = (long) value;\n+      values[indexOfValue] = sensor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc403d30faa565a02c16c92386516b5fcbea849e"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NDkwMDA1OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMDowNjo0OFrOHI342A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMDowNjo0OFrOHI342A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA2NjMyOA==", "bodyText": "rowIndex maybe starts with 0?", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479066328", "createdAt": "2020-08-28T10:06:48Z", "author": {"login": "mychaow"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -81,6 +82,43 @@ public Tablet(String deviceId, List<MeasurementSchema> timeseries) {\n     this(deviceId, timeseries, DEFAULT_SIZE);\n   }\n \n+  public void addTimestamp(int rowIndex, long timestamp) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc403d30faa565a02c16c92386516b5fcbea849e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODE5ODgwOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMjozMjoyMlrOHJYP0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNjo1NjoyM1rOHJZhAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU5NjQ5Ng==", "bodyText": "switch (measurementSchema.getType())", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479596496", "createdAt": "2020-08-29T02:32:22Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -95,12 +103,48 @@ public Tablet(String deviceId, List<MeasurementSchema> schemas, int maxRowNumber\n     this.deviceId = deviceId;\n     this.schemas = schemas;\n     this.maxRowNumber = maxRowNumber;\n+    mschemawithindex=new HashMap<>();\n+\n+    for(int i=0;i<schemas.size();i++){\n+      mschemawithindex.put(schemas.get(i),i);\n+    }\n \n     createColumns();\n \n     reset();\n   }\n \n+  public void addTimestamp(int rowIndex, long timestamp) {\n+    timestamps[rowIndex] = timestamp;\n+  }\n+\n+  public void addValue(MeasurementSchema measurementSchema, int rowIndex, Object value) {\n+    int indexOfValue =mschemawithindex.get(measurementSchema);\n+\n+    if (measurementSchema.getType() == INT64) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxNzI4Mg==", "bodyText": "Thank you. I'll improve it", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479617282", "createdAt": "2020-08-29T06:56:23Z", "author": {"login": "yanhongwangg"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -95,12 +103,48 @@ public Tablet(String deviceId, List<MeasurementSchema> schemas, int maxRowNumber\n     this.deviceId = deviceId;\n     this.schemas = schemas;\n     this.maxRowNumber = maxRowNumber;\n+    mschemawithindex=new HashMap<>();\n+\n+    for(int i=0;i<schemas.size();i++){\n+      mschemawithindex.put(schemas.get(i),i);\n+    }\n \n     createColumns();\n \n     reset();\n   }\n \n+  public void addTimestamp(int rowIndex, long timestamp) {\n+    timestamps[rowIndex] = timestamp;\n+  }\n+\n+  public void addValue(MeasurementSchema measurementSchema, int rowIndex, Object value) {\n+    int indexOfValue =mschemawithindex.get(measurementSchema);\n+\n+    if (measurementSchema.getType() == INT64) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU5NjQ5Ng=="}, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODIwMTkwOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMjozNzoxNVrOHJYRTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzowMToyNFrOHJZiiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU5Njg3Ng==", "bodyText": "There is a java-google-style.xml under the root folder, import it as the default code style and format the code.\nIt should be something like this:\nfor(int i = 0; i < schemas.size(); i++){", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479596876", "createdAt": "2020-08-29T02:37:15Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -95,12 +103,48 @@ public Tablet(String deviceId, List<MeasurementSchema> schemas, int maxRowNumber\n     this.deviceId = deviceId;\n     this.schemas = schemas;\n     this.maxRowNumber = maxRowNumber;\n+    mschemawithindex=new HashMap<>();\n+\n+    for(int i=0;i<schemas.size();i++){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxNzY3Mg==", "bodyText": "copy that,thank you", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479617672", "createdAt": "2020-08-29T07:01:24Z", "author": {"login": "yanhongwangg"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -95,12 +103,48 @@ public Tablet(String deviceId, List<MeasurementSchema> schemas, int maxRowNumber\n     this.deviceId = deviceId;\n     this.schemas = schemas;\n     this.maxRowNumber = maxRowNumber;\n+    mschemawithindex=new HashMap<>();\n+\n+    for(int i=0;i<schemas.size();i++){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU5Njg3Ng=="}, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODIwMzg5OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMjo0MDoxOVrOHJYSMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzowMTozN1rOHJZiqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU5NzEwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void addValue(MeasurementSchema measurementSchema, int rowIndex, Object value) {\n          \n          \n            \n              public void addValue(String measurement, int rowIndex, Object value) {\n          \n      \n    \n    \n  \n\nUsing measurement id may be more friendly to users.", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479597106", "createdAt": "2020-08-29T02:40:19Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -95,12 +103,48 @@ public Tablet(String deviceId, List<MeasurementSchema> schemas, int maxRowNumber\n     this.deviceId = deviceId;\n     this.schemas = schemas;\n     this.maxRowNumber = maxRowNumber;\n+    mschemawithindex=new HashMap<>();\n+\n+    for(int i=0;i<schemas.size();i++){\n+      mschemawithindex.put(schemas.get(i),i);\n+    }\n \n     createColumns();\n \n     reset();\n   }\n \n+  public void addTimestamp(int rowIndex, long timestamp) {\n+    timestamps[rowIndex] = timestamp;\n+  }\n+\n+  public void addValue(MeasurementSchema measurementSchema, int rowIndex, Object value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxNzcwNA==", "bodyText": "copy that,thank you", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479617704", "createdAt": "2020-08-29T07:01:37Z", "author": {"login": "yanhongwangg"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -95,12 +103,48 @@ public Tablet(String deviceId, List<MeasurementSchema> schemas, int maxRowNumber\n     this.deviceId = deviceId;\n     this.schemas = schemas;\n     this.maxRowNumber = maxRowNumber;\n+    mschemawithindex=new HashMap<>();\n+\n+    for(int i=0;i<schemas.size();i++){\n+      mschemawithindex.put(schemas.get(i),i);\n+    }\n \n     createColumns();\n \n     reset();\n   }\n \n+  public void addTimestamp(int rowIndex, long timestamp) {\n+    timestamps[rowIndex] = timestamp;\n+  }\n+\n+  public void addValue(MeasurementSchema measurementSchema, int rowIndex, Object value) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU5NzEwNg=="}, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODIyNjU0OnYy", "diffSide": "LEFT", "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMzoxMTo1NlrOHJYcvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzowNDowMlrOHJZjWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU5OTgwNA==", "bodyText": "You should not delete the previous example, user also can use the previous way to add data.  You should add new code to show how to use.", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479599804", "createdAt": "2020-08-29T03:11:56Z", "author": {"login": "mychaow"}, "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "diffHunk": "@@ -247,15 +247,11 @@ private static void insertTablet() throws IoTDBConnectionException, StatementExe\n \n     Tablet tablet = new Tablet(\"root.sg1.d1\", schemaList, 100);\n \n-    long[] timestamps = tablet.timestamps;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxNzg4Mg==", "bodyText": "copy that,thank you", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479617882", "createdAt": "2020-08-29T07:04:02Z", "author": {"login": "yanhongwangg"}, "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "diffHunk": "@@ -247,15 +247,11 @@ private static void insertTablet() throws IoTDBConnectionException, StatementExe\n \n     Tablet tablet = new Tablet(\"root.sg1.d1\", schemaList, 100);\n \n-    long[] timestamps = tablet.timestamps;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU5OTgwNA=="}, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODIyODAyOnYy", "diffSide": "RIGHT", "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMzoxMzo0OFrOHJYdbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzowMjoxMFrOHJZi0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU5OTk4MA==", "bodyText": "It's not nesscessary to cast to long. You have done cast in the addValue.", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479599980", "createdAt": "2020-08-29T03:13:48Z", "author": {"login": "mychaow"}, "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "diffHunk": "@@ -247,15 +247,11 @@ private static void insertTablet() throws IoTDBConnectionException, StatementExe\n \n     Tablet tablet = new Tablet(\"root.sg1.d1\", schemaList, 100);\n \n-    long[] timestamps = tablet.timestamps;\n-    Object[] values = tablet.values;\n-\n     for (long time = 0; time < 100; time++) {\n-      int row = tablet.rowSize++;\n-      timestamps[row] = time;\n-      for (int i = 0; i < 3; i++) {\n-        long[] sensor = (long[]) values[i];\n-        sensor[row] = i;\n+      int rowIndex = tablet.rowSize++;\n+      tablet.addTimestamp(rowIndex, time);\n+      for (int s = 0; s < 3; s++) {\n+        tablet.addValue(schemaList.get(s), rowIndex, (long) s);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxNzc0Nw==", "bodyText": "copy that,thank you", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479617747", "createdAt": "2020-08-29T07:02:10Z", "author": {"login": "yanhongwangg"}, "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "diffHunk": "@@ -247,15 +247,11 @@ private static void insertTablet() throws IoTDBConnectionException, StatementExe\n \n     Tablet tablet = new Tablet(\"root.sg1.d1\", schemaList, 100);\n \n-    long[] timestamps = tablet.timestamps;\n-    Object[] values = tablet.values;\n-\n     for (long time = 0; time < 100; time++) {\n-      int row = tablet.rowSize++;\n-      timestamps[row] = time;\n-      for (int i = 0; i < 3; i++) {\n-        long[] sensor = (long[]) values[i];\n-        sensor[row] = i;\n+      int rowIndex = tablet.rowSize++;\n+      tablet.addTimestamp(rowIndex, time);\n+      for (int s = 0; s < 3; s++) {\n+        tablet.addValue(schemaList.get(s), rowIndex, (long) s);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU5OTk4MA=="}, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODIzMDQ0OnYy", "diffSide": "RIGHT", "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMzoxNjo1OVrOHJYeiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzowMjoxNVrOHJZi4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwMDI2Nw==", "bodyText": "same with the previous comment", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479600267", "createdAt": "2020-08-29T03:16:59Z", "author": {"login": "mychaow"}, "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -812,15 +811,11 @@ private void insertTabletTest1(String deviceId)\n \n     Tablet tablet = new Tablet(deviceId, schemaList, 100);\n \n-    long[] timestamps = tablet.timestamps;\n-    Object[] values = tablet.values;\n-\n     for (long time = 0; time < 100; time++) {\n-      int row = tablet.rowSize++;\n-      timestamps[row] = time;\n-      for (int i = 0; i < 3; i++) {\n-        long[] sensor = (long[]) values[i];\n-        sensor[row] = i;\n+      int rowIndex = tablet.rowSize++;\n+      tablet.addTimestamp(rowIndex, time);\n+      for (int s = 0; s < 3; s++) {\n+        tablet.addValue(schemaList.get(s), rowIndex, (long) s);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxNzc2Mg==", "bodyText": "copy that,thank you", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479617762", "createdAt": "2020-08-29T07:02:15Z", "author": {"login": "yanhongwangg"}, "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -812,15 +811,11 @@ private void insertTabletTest1(String deviceId)\n \n     Tablet tablet = new Tablet(deviceId, schemaList, 100);\n \n-    long[] timestamps = tablet.timestamps;\n-    Object[] values = tablet.values;\n-\n     for (long time = 0; time < 100; time++) {\n-      int row = tablet.rowSize++;\n-      timestamps[row] = time;\n-      for (int i = 0; i < 3; i++) {\n-        long[] sensor = (long[]) values[i];\n-        sensor[row] = i;\n+      int rowIndex = tablet.rowSize++;\n+      tablet.addTimestamp(rowIndex, time);\n+      for (int s = 0; s < 3; s++) {\n+        tablet.addValue(schemaList.get(s), rowIndex, (long) s);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwMDI2Nw=="}, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODIzMjEyOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMzoxOTo1M1rOHJYfXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzowMjoyMlrOHJZi7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwMDQ3Ng==", "bodyText": "code should be\nfor (int i = 0; i < schemas.size(); i++) {}.  It's not wasteful to add blank in the code.", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479600476", "createdAt": "2020-08-29T03:19:53Z", "author": {"login": "mychaow"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -95,12 +103,48 @@ public Tablet(String deviceId, List<MeasurementSchema> schemas, int maxRowNumber\n     this.deviceId = deviceId;\n     this.schemas = schemas;\n     this.maxRowNumber = maxRowNumber;\n+    mschemawithindex=new HashMap<>();\n+\n+    for(int i=0;i<schemas.size();i++){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxNzc3Mg==", "bodyText": "copy that,thank you", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479617772", "createdAt": "2020-08-29T07:02:22Z", "author": {"login": "yanhongwangg"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -95,12 +103,48 @@ public Tablet(String deviceId, List<MeasurementSchema> schemas, int maxRowNumber\n     this.deviceId = deviceId;\n     this.schemas = schemas;\n     this.maxRowNumber = maxRowNumber;\n+    mschemawithindex=new HashMap<>();\n+\n+    for(int i=0;i<schemas.size();i++){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwMDQ3Ng=="}, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODIzMjQwOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMzoyMDoxMVrOHJYffA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzowMjoyOVrOHJZi-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwMDUwOA==", "bodyText": "add blank", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479600508", "createdAt": "2020-08-29T03:20:11Z", "author": {"login": "mychaow"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -95,12 +103,48 @@ public Tablet(String deviceId, List<MeasurementSchema> schemas, int maxRowNumber\n     this.deviceId = deviceId;\n     this.schemas = schemas;\n     this.maxRowNumber = maxRowNumber;\n+    mschemawithindex=new HashMap<>();\n+\n+    for(int i=0;i<schemas.size();i++){\n+      mschemawithindex.put(schemas.get(i),i);\n+    }\n \n     createColumns();\n \n     reset();\n   }\n \n+  public void addTimestamp(int rowIndex, long timestamp) {\n+    timestamps[rowIndex] = timestamp;\n+  }\n+\n+  public void addValue(MeasurementSchema measurementSchema, int rowIndex, Object value) {\n+    int indexOfValue =mschemawithindex.get(measurementSchema);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxNzc4NQ==", "bodyText": "copy that,thank you", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479617785", "createdAt": "2020-08-29T07:02:29Z", "author": {"login": "yanhongwangg"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -95,12 +103,48 @@ public Tablet(String deviceId, List<MeasurementSchema> schemas, int maxRowNumber\n     this.deviceId = deviceId;\n     this.schemas = schemas;\n     this.maxRowNumber = maxRowNumber;\n+    mschemawithindex=new HashMap<>();\n+\n+    for(int i=0;i<schemas.size();i++){\n+      mschemawithindex.put(schemas.get(i),i);\n+    }\n \n     createColumns();\n \n     reset();\n   }\n \n+  public void addTimestamp(int rowIndex, long timestamp) {\n+    timestamps[rowIndex] = timestamp;\n+  }\n+\n+  public void addValue(MeasurementSchema measurementSchema, int rowIndex, Object value) {\n+    int indexOfValue =mschemawithindex.get(measurementSchema);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwMDUwOA=="}, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODI1MTc2OnYy", "diffSide": "RIGHT", "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMzo0ODowMVrOHJYorA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNzowMzowNlrOHJZjIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwMjg2MA==", "bodyText": "I think it's better to separate the rowIndex, the time column, and the value column, which would clearer to users.", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479602860", "createdAt": "2020-08-29T03:48:01Z", "author": {"login": "neuyilan"}, "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "diffHunk": "@@ -247,15 +247,11 @@ private static void insertTablet() throws IoTDBConnectionException, StatementExe\n \n     Tablet tablet = new Tablet(\"root.sg1.d1\", schemaList, 100);\n \n-    long[] timestamps = tablet.timestamps;\n-    Object[] values = tablet.values;\n-\n     for (long time = 0; time < 100; time++) {\n-      int row = tablet.rowSize++;\n-      timestamps[row] = time;\n-      for (int i = 0; i < 3; i++) {\n-        long[] sensor = (long[]) values[i];\n-        sensor[row] = i;\n+      int rowIndex = tablet.rowSize++;\n+      tablet.addTimestamp(rowIndex, time);\n+      for (int s = 0; s < 3; s++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxNzgyNw==", "bodyText": "copy that,thank you", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479617827", "createdAt": "2020-08-29T07:03:06Z", "author": {"login": "yanhongwangg"}, "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "diffHunk": "@@ -247,15 +247,11 @@ private static void insertTablet() throws IoTDBConnectionException, StatementExe\n \n     Tablet tablet = new Tablet(\"root.sg1.d1\", schemaList, 100);\n \n-    long[] timestamps = tablet.timestamps;\n-    Object[] values = tablet.values;\n-\n     for (long time = 0; time < 100; time++) {\n-      int row = tablet.rowSize++;\n-      timestamps[row] = time;\n-      for (int i = 0; i < 3; i++) {\n-        long[] sensor = (long[]) values[i];\n-        sensor[row] = i;\n+      int rowIndex = tablet.rowSize++;\n+      tablet.addTimestamp(rowIndex, time);\n+      for (int s = 0; s < 3; s++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwMjg2MA=="}, "originalCommit": {"oid": "ba862eff4807c7647835734846968c7692d5b61b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODUxNjIwOnYy", "diffSide": "RIGHT", "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMDoyMDowOVrOHJak3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMToyODozNFrOHJa6Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYzNDY1Mg==", "bodyText": "value always is initialize to be 0", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479634652", "createdAt": "2020-08-29T10:20:09Z", "author": {"login": "mychaow"}, "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -1087,15 +1086,13 @@ private void insertTabletTest2(String deviceId)\n \n     Tablet tablet = new Tablet(deviceId, schemaList, 256);\n \n-    long[] timestamps = tablet.timestamps;\n-    Object[] values = tablet.values;\n-\n     for (long time = 0; time < 1000; time++) {\n-      int row = tablet.rowSize++;\n-      timestamps[row] = time;\n-      for (int i = 0; i < 3; i++) {\n-        long[] sensor = (long[]) values[i];\n-        sensor[row] = i;\n+      int rowIndex = tablet.rowSize++;\n+      tablet.addTimestamp(rowIndex, time);\n+      for (int s = 0; s < 3; s++) {\n+        long value = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f55869ade6e5d8823c0fd0ab01cbc87d15e9ee4"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY0MDE1MQ==", "bodyText": "I added it after the loop", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479640151", "createdAt": "2020-08-29T11:28:34Z", "author": {"login": "yanhongwangg"}, "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -1087,15 +1086,13 @@ private void insertTabletTest2(String deviceId)\n \n     Tablet tablet = new Tablet(deviceId, schemaList, 256);\n \n-    long[] timestamps = tablet.timestamps;\n-    Object[] values = tablet.values;\n-\n     for (long time = 0; time < 1000; time++) {\n-      int row = tablet.rowSize++;\n-      timestamps[row] = time;\n-      for (int i = 0; i < 3; i++) {\n-        long[] sensor = (long[]) values[i];\n-        sensor[row] = i;\n+      int rowIndex = tablet.rowSize++;\n+      tablet.addTimestamp(rowIndex, time);\n+      for (int s = 0; s < 3; s++) {\n+        long value = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYzNDY1Mg=="}, "originalCommit": {"oid": "4f55869ade6e5d8823c0fd0ab01cbc87d15e9ee4"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODUxNjg2OnYy", "diffSide": "RIGHT", "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMDoyMTowOFrOHJalKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMDoyMTowOFrOHJalKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYzNDczMA==", "bodyText": "same with previous", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479634730", "createdAt": "2020-08-29T10:21:08Z", "author": {"login": "mychaow"}, "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -1119,15 +1116,13 @@ private void insertTabletTest3(String deviceId)\n \n     Tablet tablet = new Tablet(deviceId, schemaList, 200);\n \n-    long[] timestamps = tablet.timestamps;\n-    Object[] values = tablet.values;\n-\n     for (long time = 500; time < 1500; time++) {\n-      int row = tablet.rowSize++;\n-      timestamps[row] = time;\n-      for (int i = 0; i < 3; i++) {\n-        long[] sensor = (long[]) values[i];\n-        sensor[row] = i;\n+      int rowIndex = tablet.rowSize++;\n+      tablet.addTimestamp(rowIndex, time);\n+      for (int s = 0; s < 3; s++) {\n+        long value = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f55869ade6e5d8823c0fd0ab01cbc87d15e9ee4"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODUyMTg2OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMDoyOToyMFrOHJanmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMDozNDowM1rOHJapBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYzNTM1NQ==", "bodyText": "It's too ugly to create so many new variable names.\nyou could use {} in every case", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479635355", "createdAt": "2020-08-29T10:29:20Z", "author": {"login": "mychaow"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -95,12 +102,56 @@ public Tablet(String deviceId, List<MeasurementSchema> schemas, int maxRowNumber\n     this.deviceId = deviceId;\n     this.schemas = schemas;\n     this.maxRowNumber = maxRowNumber;\n+    mschemawithindex = new HashMap<>();\n+\n+    for (int i = 0; i < schemas.size(); i++) {\n+      mschemawithindex.put(schemas.get(i).getMeasurementId(), i);\n+    }\n \n     createColumns();\n \n     reset();\n   }\n \n+  public void addTimestamp(int rowIndex, long timestamp) {\n+    timestamps[rowIndex] = timestamp;\n+  }\n+\n+  public void addValue(String measurementId, int rowIndex, Object value) {\n+    int indexOfValue = mschemawithindex.get(measurementId);\n+    MeasurementSchema measurementSchema = schemas.get(indexOfValue);\n+\n+    switch (measurementSchema.getType()) {\n+      case TEXT:\n+        Binary[] sensort = (Binary[]) values[indexOfValue];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f55869ade6e5d8823c0fd0ab01cbc87d15e9ee4"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYzNTcxOQ==", "bodyText": "ok, i will improve that", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479635719", "createdAt": "2020-08-29T10:34:03Z", "author": {"login": "yanhongwangg"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -95,12 +102,56 @@ public Tablet(String deviceId, List<MeasurementSchema> schemas, int maxRowNumber\n     this.deviceId = deviceId;\n     this.schemas = schemas;\n     this.maxRowNumber = maxRowNumber;\n+    mschemawithindex = new HashMap<>();\n+\n+    for (int i = 0; i < schemas.size(); i++) {\n+      mschemawithindex.put(schemas.get(i).getMeasurementId(), i);\n+    }\n \n     createColumns();\n \n     reset();\n   }\n \n+  public void addTimestamp(int rowIndex, long timestamp) {\n+    timestamps[rowIndex] = timestamp;\n+  }\n+\n+  public void addValue(String measurementId, int rowIndex, Object value) {\n+    int indexOfValue = mschemawithindex.get(measurementId);\n+    MeasurementSchema measurementSchema = schemas.get(indexOfValue);\n+\n+    switch (measurementSchema.getType()) {\n+      case TEXT:\n+        Binary[] sensort = (Binary[]) values[indexOfValue];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYzNTM1NQ=="}, "originalCommit": {"oid": "4f55869ade6e5d8823c0fd0ab01cbc87d15e9ee4"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODYxMTUxOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMjo0Mzo1NVrOHJbRSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMjo1MjoxNVrOHJbUCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY0NjAyNA==", "bodyText": "mschemawithindex should be camel-case name, like mSchemaWithIndex.", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479646024", "createdAt": "2020-08-29T12:43:55Z", "author": {"login": "mychaow"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -52,6 +54,11 @@\n    */\n   private List<MeasurementSchema> schemas;\n \n+  /**\n+   * measurementId->indexOf(measurementSchema)\n+   */\n+  private Map<String, Integer> mschemawithindex;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac36f614b3386087358e6e6b0de98fb7241f1064"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY0NjcyOQ==", "bodyText": "copy that.", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479646729", "createdAt": "2020-08-29T12:52:15Z", "author": {"login": "yanhongwangg"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -52,6 +54,11 @@\n    */\n   private List<MeasurementSchema> schemas;\n \n+  /**\n+   * measurementId->indexOf(measurementSchema)\n+   */\n+  private Map<String, Integer> mschemawithindex;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY0NjAyNA=="}, "originalCommit": {"oid": "ac36f614b3386087358e6e6b0de98fb7241f1064"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDMzOTI5OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMjoyODoyNFrOHJoKmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNjo0ODoxOVrOHJsjjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg1NzMwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private Map<String, Integer> mSchemaWithIndex;\n          \n          \n            \n              private Map<String, Integer> measurementIndex;", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479857306", "createdAt": "2020-08-31T02:28:24Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -52,6 +54,11 @@\n    */\n   private List<MeasurementSchema> schemas;\n \n+  /**\n+   * measurementId->indexOf(measurementSchema)\n+   */\n+  private Map<String, Integer> mSchemaWithIndex;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eee90347ba1a47a9001ffb518c7c13ab393aea74"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkyOTIzMQ==", "bodyText": "thanks,i will improve that", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479929231", "createdAt": "2020-08-31T06:48:19Z", "author": {"login": "yanhongwangg"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -52,6 +54,11 @@\n    */\n   private List<MeasurementSchema> schemas;\n \n+  /**\n+   * measurementId->indexOf(measurementSchema)\n+   */\n+  private Map<String, Integer> mSchemaWithIndex;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg1NzMwNg=="}, "originalCommit": {"oid": "eee90347ba1a47a9001ffb518c7c13ab393aea74"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDQzMzc0OnYy", "diffSide": "RIGHT", "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMzozNToxNFrOHJo_cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNjo0OTo0MFrOHJsloA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg3MDgzNA==", "bodyText": "this test lacks an assert. You can do a select count(*) query and assert", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479870834", "createdAt": "2020-08-31T03:35:14Z", "author": {"login": "qiaojialin"}, "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -622,6 +622,17 @@ public void TestSessionInterfacesWithDisabledWAL()\n       tablet.rowSize++;\n     }\n \n+    for (int time = 101; time <= 200; time++) {\n+      int rowIndex = time - 1;\n+      tablet.addTimestamp(rowIndex, time);\n+      long value = 0;\n+      for (int s = 0; s < 3; s++) {\n+        tablet.addValue(schemaList.get(s).getMeasurementId(), rowIndex, value);\n+        value++;\n+      }\n+      tablet.rowSize++;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eee90347ba1a47a9001ffb518c7c13ab393aea74"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkyOTc2MA==", "bodyText": "i will fix it in PR IOTDB-856:Clear up the IoTDBSessionIT", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479929760", "createdAt": "2020-08-31T06:49:40Z", "author": {"login": "yanhongwangg"}, "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -622,6 +622,17 @@ public void TestSessionInterfacesWithDisabledWAL()\n       tablet.rowSize++;\n     }\n \n+    for (int time = 101; time <= 200; time++) {\n+      int rowIndex = time - 1;\n+      tablet.addTimestamp(rowIndex, time);\n+      long value = 0;\n+      for (int s = 0; s < 3; s++) {\n+        tablet.addValue(schemaList.get(s).getMeasurementId(), rowIndex, value);\n+        value++;\n+      }\n+      tablet.rowSize++;\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg3MDgzNA=="}, "originalCommit": {"oid": "eee90347ba1a47a9001ffb518c7c13ab393aea74"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDQ2NjE0OnYy", "diffSide": "RIGHT", "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMzo1NzoyOFrOHJpRFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNjo1MDoxNlrOHJsmnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg3NTM1MA==", "bodyText": "It's not intuitive where 14000 comes from.\nI feel that the IoTDBSessionIT is out of control gradually...\nIt's time to remove duplicated methods such as insertTabletTest1-2-3.\nBesides, there are some commented lines in test(), it should be cleaned.\nI create a jira issue:  https://issues.apache.org/jira/browse/IOTDB-856.\nBetter to fix it in this PR.", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479875350", "createdAt": "2020-08-31T03:57:28Z", "author": {"login": "qiaojialin"}, "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -1203,7 +1289,7 @@ private void queryForBatch() throws ClassNotFoundException, SQLException {\n       }\n       Assert.assertEquals(standard, resultStr.toString());\n       // d1 and d2 will align\n-      Assert.assertEquals(7000, count);\n+      Assert.assertEquals(14000, count);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eee90347ba1a47a9001ffb518c7c13ab393aea74"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkzMDAxMw==", "bodyText": "ok,i will fix it in that PR", "url": "https://github.com/apache/iotdb/pull/1658#discussion_r479930013", "createdAt": "2020-08-31T06:50:16Z", "author": {"login": "yanhongwangg"}, "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -1203,7 +1289,7 @@ private void queryForBatch() throws ClassNotFoundException, SQLException {\n       }\n       Assert.assertEquals(standard, resultStr.toString());\n       // d1 and d2 will align\n-      Assert.assertEquals(7000, count);\n+      Assert.assertEquals(14000, count);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg3NTM1MA=="}, "originalCommit": {"oid": "eee90347ba1a47a9001ffb518c7c13ab393aea74"}, "originalPosition": 162}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4674, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}