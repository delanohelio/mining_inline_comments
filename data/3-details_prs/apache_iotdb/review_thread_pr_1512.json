{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwNzQxMTgw", "number": 1512, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMzoxNzowNVrOEP7fqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMzoyNzo1MlrOEP7rfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MTM4ODU2OnYy", "diffSide": "RIGHT", "path": "cluster/src/main/java/org/apache/iotdb/cluster/client/async/AsyncDataHeartbeatClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMzoxNzowNVrOGz1ruA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMzozNzozOVrOGz2Jgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAxMDEwNA==", "bodyText": "I think maybe you can just extend AsyncDataClient and override the factory and constructor so there will be fewer duplicated codes.\nOr maybe you can extract heartbeat-related methods in RaftService into a new service, so it can be better decoupled.", "url": "https://github.com/apache/iotdb/pull/1512#discussion_r457010104", "createdAt": "2020-07-20T03:17:05Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/client/async/AsyncDataHeartbeatClient.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.cluster.client.async;\n+\n+import java.io.IOException;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import org.apache.iotdb.cluster.config.ClusterDescriptor;\n+import org.apache.iotdb.cluster.rpc.thrift.Node;\n+import org.apache.iotdb.cluster.rpc.thrift.RaftService;\n+import org.apache.iotdb.cluster.rpc.thrift.TSDataService.AsyncClient;\n+import org.apache.iotdb.cluster.server.RaftServer;\n+import org.apache.iotdb.cluster.utils.ClusterUtils;\n+import org.apache.thrift.async.TAsyncClientManager;\n+import org.apache.thrift.protocol.TProtocolFactory;\n+import org.apache.thrift.transport.TNonblockingSocket;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Notice: Because a client will be returned to a pool immediately after a successful request, you\n+ * should not cache it anywhere else or there may be conflicts.\n+ */\n+public class AsyncDataHeartbeatClient extends AsyncClient {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52d8de8871ca28740efaa6cc1a87fb83a05f7910"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAxNzczMQ==", "bodyText": "Good idea, I will resolve it.", "url": "https://github.com/apache/iotdb/pull/1512#discussion_r457017731", "createdAt": "2020-07-20T03:37:39Z", "author": {"login": "neuyilan"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/client/async/AsyncDataHeartbeatClient.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.cluster.client.async;\n+\n+import java.io.IOException;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import org.apache.iotdb.cluster.config.ClusterDescriptor;\n+import org.apache.iotdb.cluster.rpc.thrift.Node;\n+import org.apache.iotdb.cluster.rpc.thrift.RaftService;\n+import org.apache.iotdb.cluster.rpc.thrift.TSDataService.AsyncClient;\n+import org.apache.iotdb.cluster.server.RaftServer;\n+import org.apache.iotdb.cluster.utils.ClusterUtils;\n+import org.apache.thrift.async.TAsyncClientManager;\n+import org.apache.thrift.protocol.TProtocolFactory;\n+import org.apache.thrift.transport.TNonblockingSocket;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Notice: Because a client will be returned to a pool immediately after a successful request, you\n+ * should not cache it anywhere else or there may be conflicts.\n+ */\n+public class AsyncDataHeartbeatClient extends AsyncClient {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAxMDEwNA=="}, "originalCommit": {"oid": "52d8de8871ca28740efaa6cc1a87fb83a05f7910"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MTQxODg3OnYy", "diffSide": "RIGHT", "path": "cluster/src/main/java/org/apache/iotdb/cluster/utils/ClusterUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMzoyNzo1MlrOGz17UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMzozNzo0NFrOGz2Jpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAxNDA5Ng==", "bodyText": "How about using \"DATA_HEARTBEAT_PORT_OFFSET\" so it would be more clear what the port is for?", "url": "https://github.com/apache/iotdb/pull/1512#discussion_r457014096", "createdAt": "2020-07-20T03:27:52Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/utils/ClusterUtils.java", "diffHunk": "@@ -48,11 +50,24 @@\n \n   public static final long START_UP_CHECK_TIME_INTERVAL = 5; // second\n \n+  /**\n+   * the data group member's heartbeat offset relative to the {@link ClusterConfig#getLocalDataPort()},\n+   * which means the dataHeartbeatPort = getLocalDataPort() + DATA_HEARTBEAT_OFFSET.\n+   */\n+  public static final int DATA_HEARTBEAT_OFFSET = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52d8de8871ca28740efaa6cc1a87fb83a05f7910"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAxNzc2Nw==", "bodyText": "sure, i will change it", "url": "https://github.com/apache/iotdb/pull/1512#discussion_r457017767", "createdAt": "2020-07-20T03:37:44Z", "author": {"login": "neuyilan"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/utils/ClusterUtils.java", "diffHunk": "@@ -48,11 +50,24 @@\n \n   public static final long START_UP_CHECK_TIME_INTERVAL = 5; // second\n \n+  /**\n+   * the data group member's heartbeat offset relative to the {@link ClusterConfig#getLocalDataPort()},\n+   * which means the dataHeartbeatPort = getLocalDataPort() + DATA_HEARTBEAT_OFFSET.\n+   */\n+  public static final int DATA_HEARTBEAT_OFFSET = 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAxNDA5Ng=="}, "originalCommit": {"oid": "52d8de8871ca28740efaa6cc1a87fb83a05f7910"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4726, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}