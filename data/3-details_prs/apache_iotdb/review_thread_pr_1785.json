{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MjM5MjQ4", "number": 1785, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNToxNTozMlrOErA7Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNToxNTozMlrOErA7Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTM5Mzk5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNToxNTozMlrOHdi4RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMjowNTo0OVrOHe3tGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc0MjIxMg==", "bodyText": "We could use the default Encoding method for each data type.", "url": "https://github.com/apache/iotdb/pull/1785#discussion_r500742212", "createdAt": "2020-10-07T05:15:32Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java", "diffHunk": "@@ -1169,9 +1170,15 @@ private PartialPath parseFullPath(FullPathContext ctx) {\n   public void enterAttributeClauses(AttributeClausesContext ctx) {\n     super.enterAttributeClauses(ctx);\n     String dataType = ctx.dataType().getChild(0).getText().toUpperCase();\n-    String encoding = ctx.encoding().getChild(0).getText().toUpperCase();\n     createTimeSeriesOperator.setDataType(TSDataType.valueOf(dataType));\n-    createTimeSeriesOperator.setEncoding(TSEncoding.valueOf(encoding));\n+\n+    TSEncoding encoding = TSEncoding.PLAIN;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b82e895a740dfd61334a82fca651649b41a9b04b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjEzMTk5Mg==", "bodyText": "OK, I will assign a default value according to the data type", "url": "https://github.com/apache/iotdb/pull/1785#discussion_r502131992", "createdAt": "2020-10-09T02:05:49Z", "author": {"login": "yuqi1129"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java", "diffHunk": "@@ -1169,9 +1170,15 @@ private PartialPath parseFullPath(FullPathContext ctx) {\n   public void enterAttributeClauses(AttributeClausesContext ctx) {\n     super.enterAttributeClauses(ctx);\n     String dataType = ctx.dataType().getChild(0).getText().toUpperCase();\n-    String encoding = ctx.encoding().getChild(0).getText().toUpperCase();\n     createTimeSeriesOperator.setDataType(TSDataType.valueOf(dataType));\n-    createTimeSeriesOperator.setEncoding(TSEncoding.valueOf(encoding));\n+\n+    TSEncoding encoding = TSEncoding.PLAIN;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc0MjIxMg=="}, "originalCommit": {"oid": "b82e895a740dfd61334a82fca651649b41a9b04b"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 764, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}