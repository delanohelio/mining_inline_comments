{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MTk5MjI4", "number": 1161, "title": "[IOTDB-348] Fix DeleteTimeseriesPlan result inconsistent problem", "bodyText": "This pull request fixes DeleteTimeseriesPlan result inconsistent problem.\nSome meta data checks are skipped in the cluster version. Some messages sent to MManager are now replaced by broadcast in the cluster.", "createdAt": "2020-05-06T16:21:38Z", "url": "https://github.com/apache/iotdb/pull/1161", "merged": true, "mergeCommit": {"oid": "0d4a7dcd513331575255122eed75bcda18ab203a"}, "closed": true, "closedAt": "2020-05-07T08:07:30Z", "author": {"login": "Ring-k"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceqqrFAH2gAyNDE0MTk5MjI4OmMzN2U1OGQyMDE2NjNhMmQ5ODNjZDQ5NDQzYmU0MmMxMTM1Y2NhNmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABce395mAH2gAyNDE0MTk5MjI4OjcwNjBiMmM4ZGFjMDZiZTk1OTNiMWNkODg2MDY4MTI5MDQ3NzkzNzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c37e58d201663a2d983cd49443be42c1135cca6f", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/c37e58d201663a2d983cd49443be42c1135cca6f", "committedDate": "2020-05-06T15:46:26Z", "message": "fix delete timeseries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df10121f523d6f6868741e36515c1db011addef7", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/df10121f523d6f6868741e36515c1db011addef7", "committedDate": "2020-05-06T16:15:12Z", "message": "remove duplicated code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MTE5MDc4", "url": "https://github.com/apache/iotdb/pull/1161#pullrequestreview-407119078", "createdAt": "2020-05-07T03:00:43Z", "commit": {"oid": "df10121f523d6f6868741e36515c1db011addef7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMzowMDo0M1rOGRsqoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMzowMjoyMlrOGRssMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxMDc4NQ==", "bodyText": "As a node exists in multiple groups, a node will perform the same deletion several times and I am not sure if it is meaningful. Why not just send the deletion to each node in allNodes?", "url": "https://github.com/apache/iotdb/pull/1161#discussion_r421210785", "createdAt": "2020-05-07T03:00:43Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/query/ClusterPlanExecutor.java", "diffHunk": "@@ -373,8 +373,85 @@ protected void loadConfiguration(LoadConfigurationPlan plan) throws QueryProcess\n         break;\n       default:\n         throw new QueryProcessException(String\n-            .format(\"Unrecognized load configuration plan type: %s\",\n-                plan.getLoadConfigurationPlanType()));\n+                .format(\"Unrecognized load configuration plan type: %s\",\n+                        plan.getLoadConfigurationPlanType()));\n+    }\n+  }\n+\n+  @Override\n+  protected Pair<Set<String>, String> deleteTimeseries(String path) throws MetadataException {\n+    ConcurrentHashMap<String, Set<String>> resultPair = new ConcurrentHashMap<>();\n+    Pair<Set<String>, String> localPair = MManager.getInstance().deleteTimeseries(path);\n+    resultPair.put(localPair.right, localPair.left);\n+\n+    ExecutorService pool = new ScheduledThreadPoolExecutor(THREAD_POOL_SIZE);\n+\n+    for (PartitionGroup group : metaGroupMember.getPartitionTable().getGlobalGroups()) {\n+      Node header = group.getHeader();\n+      if (header.equals(metaGroupMember.getThisNode())) {\n+        continue;\n+      }\n+      pool.submit(() -> {\n+        DeleteTimeseriesHandler handler = new DeleteTimeseriesHandler();\n+        AtomicReference<DeleteTimeseriesRespPair> response = new AtomicReference<>(null);\n+        handler.setResponse(response);\n+\n+        for (Node node : group) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df10121f523d6f6868741e36515c1db011addef7"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxMTE4NQ==", "bodyText": "I think you should notify result when an error occurs.", "url": "https://github.com/apache/iotdb/pull/1161#discussion_r421211185", "createdAt": "2020-05-07T03:02:22Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/handlers/caller/DeleteTimeseriesHandler.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.cluster.server.handlers.caller;\n+\n+import org.apache.iotdb.cluster.rpc.thrift.DeleteTimeseriesRespPair;\n+import org.apache.iotdb.cluster.rpc.thrift.Node;\n+import org.apache.thrift.async.AsyncMethodCallback;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+public class DeleteTimeseriesHandler implements AsyncMethodCallback<DeleteTimeseriesRespPair> {\n+  private static final Logger logger = LoggerFactory.getLogger(DeleteTimeseriesHandler.class);\n+\n+  private Node contact;\n+  private AtomicReference<DeleteTimeseriesRespPair> result;\n+\n+  @Override\n+  public void onComplete(DeleteTimeseriesRespPair resp) {\n+    logger.info(\"Received delete timeseries result from {}\", contact);\n+    synchronized (result) {\n+      result.set(resp);\n+      result.notifyAll();\n+    }\n+  }\n+\n+  @Override\n+  public void onError(Exception exception) {\n+    logger.warn(\"Cannot delete timeseries from {}, because \", contact, exception);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df10121f523d6f6868741e36515c1db011addef7"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a80b157876a5afef5be27e8794132e9cce5f8013", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/a80b157876a5afef5be27e8794132e9cce5f8013", "committedDate": "2020-05-07T03:45:01Z", "message": "broadcast"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00de6d580501f4852729c1909f9b451dd02f7009", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/00de6d580501f4852729c1909f9b451dd02f7009", "committedDate": "2020-05-07T03:46:45Z", "message": "notify"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a8421d22d6161678cb731366c58aff1c8b0a2ac", "author": {"user": {"login": "jt2594838", "name": "Jiang Tian"}}, "url": "https://github.com/apache/iotdb/commit/8a8421d22d6161678cb731366c58aff1c8b0a2ac", "committedDate": "2020-05-07T03:54:43Z", "message": "Merge branch 'cluster_new' into cluster_new"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0aded60a4d18ffddce69dfcb86a7826571f35ead", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/0aded60a4d18ffddce69dfcb86a7826571f35ead", "committedDate": "2020-05-07T07:15:03Z", "message": "remove unnecessary broadcast"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7060b2c8dac06be9593b1cd88606812904779372", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/7060b2c8dac06be9593b1cd88606812904779372", "committedDate": "2020-05-07T07:16:12Z", "message": "Merge branch 'cluster_new' of https://github.com/Ring-k/incubator-iotdb into cluster_new"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3820, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}