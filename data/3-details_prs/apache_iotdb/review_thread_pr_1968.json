{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NjAyMzUw", "number": 1968, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMjo1MDozM1rOE2SuTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMjo1MDozM1rOE2SuTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MzY1MzI0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TimeSeriesMetadataCache.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMjo1MDozM1rOHvCfNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwODo0MTowNlrOIHqeTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NTg3Nw==", "bodyText": "this should be discussed.\nWe may have too many devices and the memory is limited..", "url": "https://github.com/apache/iotdb/pull/1968#discussion_r519085877", "createdAt": "2020-11-07T02:50:33Z", "author": {"login": "jixuan1989"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TimeSeriesMetadataCache.java", "diffHunk": "@@ -60,6 +64,7 @@\n \n   private final ReadWriteLock lock = new ReentrantReadWriteLock();\n \n+  private final Map<String, WeakReference<String>> devices = Collections.synchronizedMap(new WeakHashMap<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376426de99cb6f0282f7307cc590d3e2704ada7e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE1NjEzNg==", "bodyText": "Hi, @jixuan1989 . Thanks for your reply. Indeed, taking this into consideration, so WeakReference is used here, which is more GC friendly. Moreover, I think the previous method has the risk of deadlock and the memory usage is not small.", "url": "https://github.com/apache/iotdb/pull/1968#discussion_r519156136", "createdAt": "2020-11-07T09:11:11Z", "author": {"login": "asdf2014"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TimeSeriesMetadataCache.java", "diffHunk": "@@ -60,6 +64,7 @@\n \n   private final ReadWriteLock lock = new ReentrantReadWriteLock();\n \n+  private final Map<String, WeakReference<String>> devices = Collections.synchronizedMap(new WeakHashMap<>());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NTg3Nw=="}, "originalCommit": {"oid": "376426de99cb6f0282f7307cc590d3e2704ada7e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMwMTc4MA==", "bodyText": "Hi, can you give more details about the mentioned deadlock thing?", "url": "https://github.com/apache/iotdb/pull/1968#discussion_r521301780", "createdAt": "2020-11-11T11:45:18Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TimeSeriesMetadataCache.java", "diffHunk": "@@ -60,6 +64,7 @@\n \n   private final ReadWriteLock lock = new ReentrantReadWriteLock();\n \n+  private final Map<String, WeakReference<String>> devices = Collections.synchronizedMap(new WeakHashMap<>());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NTg3Nw=="}, "originalCommit": {"oid": "376426de99cb6f0282f7307cc590d3e2704ada7e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkwNjgzMQ==", "bodyText": "Hi, @JackieTien97 . FYI, https://stackoverflow.com/a/134154/4719867", "url": "https://github.com/apache/iotdb/pull/1968#discussion_r544906831", "createdAt": "2020-12-17T08:41:06Z", "author": {"login": "asdf2014"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TimeSeriesMetadataCache.java", "diffHunk": "@@ -60,6 +64,7 @@\n \n   private final ReadWriteLock lock = new ReentrantReadWriteLock();\n \n+  private final Map<String, WeakReference<String>> devices = Collections.synchronizedMap(new WeakHashMap<>());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NTg3Nw=="}, "originalCommit": {"oid": "376426de99cb6f0282f7307cc590d3e2704ada7e"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 602, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}