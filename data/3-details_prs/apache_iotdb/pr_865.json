{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMDg0NDM2", "number": 865, "title": "Several fixes.", "bodyText": "Fixed an issue in Utils and added test\nFixed BasicDaoImpl (query was invalid) in IoTDB-Grafana", "createdAt": "2020-03-01T19:30:42Z", "url": "https://github.com/apache/iotdb/pull/865", "merged": true, "mergeCommit": {"oid": "dc4247e2fe59a916a52a84c9c3ad0d7f1313cdba"}, "closed": true, "closedAt": "2020-03-02T15:19:54Z", "author": {"login": "JulianFeinauer"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJeB48gH2gAyMzgyMDg0NDM2Ojc5OWFkOTViOWJhZjBlODBmMjQ4YTJkNDM5ODViODNlNmYyZWM2Nzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJvPDjgFqTM2NzI3NTczNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "799ad95b9baf0e80f248a2d43985b83e6f2ec679", "author": {"user": {"login": "JulianFeinauer", "name": "Julian"}}, "url": "https://github.com/apache/iotdb/commit/799ad95b9baf0e80f248a2d43985b83e6f2ec679", "committedDate": "2020-03-01T19:10:37Z", "message": "Several fixes.\n- Fixed an issue in Utils and added test\n- Fixed BasicDaoImpl (query was invalid) in IoTDB-Grafana"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MjUyMjQ1", "url": "https://github.com/apache/iotdb/pull/865#pullrequestreview-367252245", "createdAt": "2020-03-02T14:45:04Z", "commit": {"oid": "799ad95b9baf0e80f248a2d43985b83e6f2ec679"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNDo0NTowNVrOFwiDAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNDo0NTowNVrOFwiDAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQzMzc5NA==", "bodyText": "currently, we can not get how many rows before we get the whole ResultSet.\nI have an idea, we may implement it by using the summaries (count of each page/chunk) info in IoTDB.\n@qiaojialin , how do you think?", "url": "https://github.com/apache/iotdb/pull/865#discussion_r386433794", "createdAt": "2020-03-02T14:45:05Z", "author": {"login": "jixuan1989"}, "path": "grafana/src/main/java/org/apache/iotdb/web/grafana/dao/impl/BasicDaoImpl.java", "diffHunk": "@@ -104,9 +103,10 @@ public Object doInConnection(Connection connection) throws SQLException {\n   public List<TimeValues> querySeries(String s, Pair<ZonedDateTime, ZonedDateTime> timeRange) {\n     Long from = zonedCovertToLong(timeRange.left);\n     Long to = zonedCovertToLong(timeRange.right);\n-    String sql = \"SELECT \" + s.substring(s.lastIndexOf('.') + 1) + \" FROM root.\"\n-        + s.substring(0, s.lastIndexOf('.')) + \" WHERE time > \" + from * TIMESTAMP_RADIX\n-        + \" and time < \" + to * TIMESTAMP_RADIX;\n+    // How many rows will the result have?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "799ad95b9baf0e80f248a2d43985b83e6f2ec679"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MjU2MTk3", "url": "https://github.com/apache/iotdb/pull/865#pullrequestreview-367256197", "createdAt": "2020-03-02T14:49:50Z", "commit": {"oid": "799ad95b9baf0e80f248a2d43985b83e6f2ec679"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3Mjc1NzM1", "url": "https://github.com/apache/iotdb/pull/865#pullrequestreview-367275735", "createdAt": "2020-03-02T15:13:23Z", "commit": {"oid": "799ad95b9baf0e80f248a2d43985b83e6f2ec679"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3138, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}