{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MDc2MDY1", "number": 825, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozMjo1OVrODhDW1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QxNTo0ODozOFrODiKWhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTg0NTk5OnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozMjo1OVrOFrmYdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozMjo1OVrOFrmYdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2MTk0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n          \n          \n            \n            ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a", "url": "https://github.com/apache/iotdb/pull/825#discussion_r381261940", "createdAt": "2020-02-19T12:32:59Z", "author": {"login": "Alima777"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTg1MjY5OnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozNTozNFrOFrmcnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozNTozNFrOFrmcnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2MzAwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            5. \u5bf9 WHERE \u5b50\u53e5\u4e2d\u8fc7\u6ee4\u6761\u4ef6\u91cc\u5305\u542b\u7684\u8def\u5f84\u505a\u8865\u5168\u3002\u6b64\u65f6\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n          \n          \n            \n            5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002", "url": "https://github.com/apache/iotdb/pull/825#discussion_r381263004", "createdAt": "2020-02-19T12:35:34Z", "author": {"login": "Alima777"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u4e2d\u8fc7\u6ee4\u6761\u4ef6\u91cc\u5305\u542b\u7684\u8def\u5f84\u505a\u8865\u5168\u3002\u6b64\u65f6\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTg1MzIxOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozNTo0M1rOFrmc5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwMjo0MDoyNlrOFtN7rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2MzA3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \u5728\u6570\u5b66\u903b\u8f91\u4e2d\uff0c\u4e3a\u4e86\u8868\u8fbe\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4e8b\u4ef6\u65f6\uff0c\u9700\u8981\u5c06\u4e8b\u4ef6\u62bd\u8c61\u4e3a**\u547d\u9898**\u3002\u5728\u6570\u636e\u5e93\u7684\u67e5\u8be2\u8bed\u53e5\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u9009\u62e9\u6761\u4ef6\u62bd\u8c61\u4e3a\u547d\u9898\uff0c\u5373 s<sub>1</sub> > 10 \u5c31\u662f\u4e00\u4e2a\u547d\u9898\u3002\u547d\u9898\u603b\u6709\u4e00\u4e2a\u201c\u503c\u201d\uff0c\u8be5\u503c\u8981\u4e48\u662f\u201c\u771f\u201d\uff0c\u8981\u4e48\u662f\u201c\u5047\u201d\u3002\u547d\u9898\u53ef\u4ee5\u7531\u5176\u4ed6\u547d\u9898\u901a\u8fc7**\u8054\u7ed3\u8bcd**\u8fdb\u884c\u8fde\u63a5\u6784\u6210\u3002\u5728\u67e5\u8be2\u8bed\u53e5\u4e2d\uff0c\u8fd9\u6837\u7684\u8fde\u63a5\u8bcd\u5305\u62ec\u5426\u5b9a(&not;)\uff0c\u5408\u53d6(&and;)\uff0c\u6790\u53d6(&or;)\u3002\u4e0d\u5305\u542b\u4efb\u4f55\u8054\u7ed3\u8bcd\u7684\u547d\u9898\u4e3a**\u539f\u5b50\u547d\u9898**\uff0c\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u8054\u7ed3\u8bcd\u7684\u547d\u9898\u79f0\u4f5c**\u590d\u5408\u547d\u9898**\u3002\n          \n          \n            \n                \u5728\u6570\u5b66\u903b\u8f91\u4e2d\uff0c\u4e3a\u4e86\u8868\u8fbe\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4e8b\u4ef6\u65f6\uff0c\u9700\u8981\u5c06\u4e8b\u4ef6\u62bd\u8c61\u4e3a**\u547d\u9898**\u3002\u5728\u6570\u636e\u5e93\u7684\u67e5\u8be2\u8bed\u53e5\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u9009\u62e9\u6761\u4ef6\u62bd\u8c61\u4e3a\u547d\u9898\uff0c\u5373 s<sub>1</sub> > 10 \u5c31\u662f\u4e00\u4e2a\u547d\u9898\u3002\u547d\u9898\u603b\u6709\u4e00\u4e2a\u201c\u503c\u201d\uff0c\u8be5\u503c\u8981\u4e48\u662f\u201c\u771f\u201d\uff0c\u8981\u4e48\u662f\u201c\u5047\u201d\u3002\u547d\u9898\u53ef\u4ee5\u7531\u5176\u4ed6\u547d\u9898\u901a\u8fc7**\u8054\u7ed3\u8bcd**\u8fdb\u884c\u8fde\u63a5\u6784\u6210\u3002\u5728\u67e5\u8be2\u8bed\u53e5\u4e2d\uff0c\u8fd9\u6837\u7684\u8fde\u63a5\u8bcd\u5305\u62ec\u5426\u5b9a(&not;)\uff0c\u5408\u53d6(&and;)\uff0c\u6790\u53d6(&or;)\u3002\u4e0d\u5305\u542b\u4efb\u4f55\u8054\u7ed3\u8bcd\u7684\u547d\u9898\u4e3a**\u539f\u5b50\u547d\u9898**\uff0c\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u8fde\u7ed3\u8bcd\u7684\u547d\u9898\u79f0\u4f5c**\u590d\u5408\u547d\u9898**\u3002", "url": "https://github.com/apache/iotdb/pull/825#discussion_r381263078", "createdAt": "2020-02-19T12:35:43Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -25,6 +25,24 @@\n \n \u5c06 SQL \u89e3\u6790\u51fa\u7684\u8bed\u6cd5\u6811\u8f6c\u5316\u6210\u903b\u8f91\u8ba1\u5212\uff0c\u903b\u8f91\u4f18\u5316\uff0c\u7269\u7406\u8ba1\u5212\u3002\n \n+## \u76f8\u5173\u6982\u5ff5\n+\n+* \u547d\u9898\n+    \n+    \u5728\u6570\u5b66\u903b\u8f91\u4e2d\uff0c\u4e3a\u4e86\u8868\u8fbe\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4e8b\u4ef6\u65f6\uff0c\u9700\u8981\u5c06\u4e8b\u4ef6\u62bd\u8c61\u4e3a**\u547d\u9898**\u3002\u5728\u6570\u636e\u5e93\u7684\u67e5\u8be2\u8bed\u53e5\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u9009\u62e9\u6761\u4ef6\u62bd\u8c61\u4e3a\u547d\u9898\uff0c\u5373 s<sub>1</sub> > 10 \u5c31\u662f\u4e00\u4e2a\u547d\u9898\u3002\u547d\u9898\u603b\u6709\u4e00\u4e2a\u201c\u503c\u201d\uff0c\u8be5\u503c\u8981\u4e48\u662f\u201c\u771f\u201d\uff0c\u8981\u4e48\u662f\u201c\u5047\u201d\u3002\u547d\u9898\u53ef\u4ee5\u7531\u5176\u4ed6\u547d\u9898\u901a\u8fc7**\u8054\u7ed3\u8bcd**\u8fdb\u884c\u8fde\u63a5\u6784\u6210\u3002\u5728\u67e5\u8be2\u8bed\u53e5\u4e2d\uff0c\u8fd9\u6837\u7684\u8fde\u63a5\u8bcd\u5305\u62ec\u5426\u5b9a(&not;)\uff0c\u5408\u53d6(&and;)\uff0c\u6790\u53d6(&or;)\u3002\u4e0d\u5305\u542b\u4efb\u4f55\u8054\u7ed3\u8bcd\u7684\u547d\u9898\u4e3a**\u539f\u5b50\u547d\u9898**\uff0c\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u8054\u7ed3\u8bcd\u7684\u547d\u9898\u79f0\u4f5c**\u590d\u5408\u547d\u9898**\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2NDAwMw==", "bodyText": "\u7edf\u4e00\u4e00\u4e0b\uff1a\u8054\u7ed3\u8bcd \u8fd8\u662f \u8fde\u63a5\u8bcd", "url": "https://github.com/apache/iotdb/pull/825#discussion_r381264003", "createdAt": "2020-02-19T12:37:51Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -25,6 +25,24 @@\n \n \u5c06 SQL \u89e3\u6790\u51fa\u7684\u8bed\u6cd5\u6811\u8f6c\u5316\u6210\u903b\u8f91\u8ba1\u5212\uff0c\u903b\u8f91\u4f18\u5316\uff0c\u7269\u7406\u8ba1\u5212\u3002\n \n+## \u76f8\u5173\u6982\u5ff5\n+\n+* \u547d\u9898\n+    \n+    \u5728\u6570\u5b66\u903b\u8f91\u4e2d\uff0c\u4e3a\u4e86\u8868\u8fbe\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4e8b\u4ef6\u65f6\uff0c\u9700\u8981\u5c06\u4e8b\u4ef6\u62bd\u8c61\u4e3a**\u547d\u9898**\u3002\u5728\u6570\u636e\u5e93\u7684\u67e5\u8be2\u8bed\u53e5\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u9009\u62e9\u6761\u4ef6\u62bd\u8c61\u4e3a\u547d\u9898\uff0c\u5373 s<sub>1</sub> > 10 \u5c31\u662f\u4e00\u4e2a\u547d\u9898\u3002\u547d\u9898\u603b\u6709\u4e00\u4e2a\u201c\u503c\u201d\uff0c\u8be5\u503c\u8981\u4e48\u662f\u201c\u771f\u201d\uff0c\u8981\u4e48\u662f\u201c\u5047\u201d\u3002\u547d\u9898\u53ef\u4ee5\u7531\u5176\u4ed6\u547d\u9898\u901a\u8fc7**\u8054\u7ed3\u8bcd**\u8fdb\u884c\u8fde\u63a5\u6784\u6210\u3002\u5728\u67e5\u8be2\u8bed\u53e5\u4e2d\uff0c\u8fd9\u6837\u7684\u8fde\u63a5\u8bcd\u5305\u62ec\u5426\u5b9a(&not;)\uff0c\u5408\u53d6(&and;)\uff0c\u6790\u53d6(&or;)\u3002\u4e0d\u5305\u542b\u4efb\u4f55\u8054\u7ed3\u8bcd\u7684\u547d\u9898\u4e3a**\u539f\u5b50\u547d\u9898**\uff0c\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u8054\u7ed3\u8bcd\u7684\u547d\u9898\u79f0\u4f5c**\u590d\u5408\u547d\u9898**\u3002", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2MzA3OA=="}, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk1ODUxMA==", "bodyText": "\u597d\u7684\uff0c\u7edf\u4e00\u4f7f\u7528\u201c\u8054\u7ed3\u8bcd\u201d\u3002", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382958510", "createdAt": "2020-02-23T02:40:26Z", "author": {"login": "Ring-k"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -25,6 +25,24 @@\n \n \u5c06 SQL \u89e3\u6790\u51fa\u7684\u8bed\u6cd5\u6811\u8f6c\u5316\u6210\u903b\u8f91\u8ba1\u5212\uff0c\u903b\u8f91\u4f18\u5316\uff0c\u7269\u7406\u8ba1\u5212\u3002\n \n+## \u76f8\u5173\u6982\u5ff5\n+\n+* \u547d\u9898\n+    \n+    \u5728\u6570\u5b66\u903b\u8f91\u4e2d\uff0c\u4e3a\u4e86\u8868\u8fbe\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4e8b\u4ef6\u65f6\uff0c\u9700\u8981\u5c06\u4e8b\u4ef6\u62bd\u8c61\u4e3a**\u547d\u9898**\u3002\u5728\u6570\u636e\u5e93\u7684\u67e5\u8be2\u8bed\u53e5\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u9009\u62e9\u6761\u4ef6\u62bd\u8c61\u4e3a\u547d\u9898\uff0c\u5373 s<sub>1</sub> > 10 \u5c31\u662f\u4e00\u4e2a\u547d\u9898\u3002\u547d\u9898\u603b\u6709\u4e00\u4e2a\u201c\u503c\u201d\uff0c\u8be5\u503c\u8981\u4e48\u662f\u201c\u771f\u201d\uff0c\u8981\u4e48\u662f\u201c\u5047\u201d\u3002\u547d\u9898\u53ef\u4ee5\u7531\u5176\u4ed6\u547d\u9898\u901a\u8fc7**\u8054\u7ed3\u8bcd**\u8fdb\u884c\u8fde\u63a5\u6784\u6210\u3002\u5728\u67e5\u8be2\u8bed\u53e5\u4e2d\uff0c\u8fd9\u6837\u7684\u8fde\u63a5\u8bcd\u5305\u62ec\u5426\u5b9a(&not;)\uff0c\u5408\u53d6(&and;)\uff0c\u6790\u53d6(&or;)\u3002\u4e0d\u5305\u542b\u4efb\u4f55\u8054\u7ed3\u8bcd\u7684\u547d\u9898\u4e3a**\u539f\u5b50\u547d\u9898**\uff0c\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u8054\u7ed3\u8bcd\u7684\u547d\u9898\u79f0\u4f5c**\u590d\u5408\u547d\u9898**\u3002", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2MzA3OA=="}, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTg1NDIzOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozNjowM1rOFrmdew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozNjowM1rOFrmdew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2MzIyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bbNOT\u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n          \n          \n            \n            RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a", "url": "https://github.com/apache/iotdb/pull/825#discussion_r381263227", "createdAt": "2020-02-19T12:36:03Z", "author": {"login": "Alima777"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u4e2d\u8fc7\u6ee4\u6761\u4ef6\u91cc\u5305\u542b\u7684\u8def\u5f84\u505a\u8865\u5168\u3002\u6b64\u65f6\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bbNOT\u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTg1ODMxOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozNzozNlrOFrmgEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozNzozNlrOFrmgEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2Mzg5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684Map\u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n          \n          \n            \n            1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.", "url": "https://github.com/apache/iotdb/pull/825#discussion_r381263891", "createdAt": "2020-02-19T12:37:36Z", "author": {"login": "Alima777"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u4e2d\u8fc7\u6ee4\u6761\u4ef6\u91cc\u5305\u542b\u7684\u8def\u5f84\u505a\u8865\u5168\u3002\u6b64\u65f6\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bbNOT\u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684Map\u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTg1OTIwOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozNzo1NlrOFrmgoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozNzo1NlrOFrmgoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2NDAzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664NOT\u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n          \n          \n            \n            4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002", "url": "https://github.com/apache/iotdb/pull/825#discussion_r381264032", "createdAt": "2020-02-19T12:37:56Z", "author": {"login": "Alima777"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u4e2d\u8fc7\u6ee4\u6761\u4ef6\u91cc\u5305\u542b\u7684\u8def\u5f84\u505a\u8865\u5168\u3002\u6b64\u65f6\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bbNOT\u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684Map\u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664NOT\u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTg2MjM3OnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozOTowNVrOFrmikw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwMzowMDoyNlrOFtN-6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2NDUzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n          \n          \n            \n            ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u58f0\u660e\u5982\u4e0b\uff1a\n          \n      \n    \n    \n  \n\n\u8fd8\u6709\u51e0\u5904\u7533\u660e", "url": "https://github.com/apache/iotdb/pull/825#discussion_r381264531", "createdAt": "2020-02-19T12:39:05Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2NDc5OA==", "bodyText": "\u52a0\u4e00\u4e2a Operator \u7684\u4ecb\u7ecd\u5427\uff0c\u6bd4\u5982\u4ec0\u4e48\u662f SFWOperator", "url": "https://github.com/apache/iotdb/pull/825#discussion_r381264798", "createdAt": "2020-02-19T12:39:40Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2NDUzMQ=="}, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk1OTMzOA==", "bodyText": "\u597d\u7684\u3002\u6211\u4f1a\u52a0\u4e0aOperator\u7684\u4ecb\u7ecd\u3002", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382959338", "createdAt": "2020-02-23T03:00:26Z", "author": {"login": "Ring-k"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2NDUzMQ=="}, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTg2NDY2OnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozOTo1NFrOFrmkAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozOTo1NFrOFrmkAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2NDg5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                - (2.1) \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n          \n          \n            \n                - (2.1) \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002", "url": "https://github.com/apache/iotdb/pull/825#discussion_r381264896", "createdAt": "2020-02-19T12:39:54Z", "author": {"login": "Alima777"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u4e2d\u8fc7\u6ee4\u6761\u4ef6\u91cc\u5305\u542b\u7684\u8def\u5f84\u505a\u8865\u5168\u3002\u6b64\u65f6\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bbNOT\u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684Map\u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664NOT\u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+- 1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+- 2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    - (2.1) \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTg2NjkzOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjo0MDo0MlrOFrmlZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjo0MDo0MlrOFrmlZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2NTI1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                - (3.1) \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n          \n          \n            \n                - (3.1) \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002", "url": "https://github.com/apache/iotdb/pull/825#discussion_r381265254", "createdAt": "2020-02-19T12:40:42Z", "author": {"login": "Alima777"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u4e2d\u8fc7\u6ee4\u6761\u4ef6\u91cc\u5305\u542b\u7684\u8def\u5f84\u505a\u8865\u5168\u3002\u6b64\u65f6\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bbNOT\u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684Map\u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664NOT\u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+- 1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+- 2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    - (2.1) \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    - (2.2) \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    - (2.3) \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+- 3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    - (3.1) \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTg3NzgzOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjo0NDoyOFrOFrmsLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjo0NDoyOFrOFrmsLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2Njk5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunctive() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n          \n          \n            \n            \u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunction() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a", "url": "https://github.com/apache/iotdb/pull/825#discussion_r381266991", "createdAt": "2020-02-19T12:44:28Z", "author": {"login": "Alima777"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u4e2d\u8fc7\u6ee4\u6761\u4ef6\u91cc\u5305\u542b\u7684\u8def\u5f84\u505a\u8865\u5168\u3002\u6b64\u65f6\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bbNOT\u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684Map\u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664NOT\u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+- 1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+- 2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    - (2.1) \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    - (2.2) \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    - (2.3) \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+- 3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    - (3.1) \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    - (3.2) \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        - (3.2.1) \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        - (3.2.2) \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        - (3.2.3) \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunctive() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    - (3.3) \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunctive() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTg4MjUxOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjo0NjowNFrOFrmu-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjo0NjowNFrOFrmu-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2NzcwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    - (3.2.3) \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunctive() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n          \n          \n            \n                    - (3.2.3) \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002", "url": "https://github.com/apache/iotdb/pull/825#discussion_r381267705", "createdAt": "2020-02-19T12:46:04Z", "author": {"login": "Alima777"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u4e2d\u8fc7\u6ee4\u6761\u4ef6\u91cc\u5305\u542b\u7684\u8def\u5f84\u505a\u8865\u5168\u3002\u6b64\u65f6\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bbNOT\u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684Map\u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664NOT\u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+- 1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+- 2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    - (2.1) \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    - (2.2) \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    - (2.3) \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+- 3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    - (3.1) \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    - (3.2) \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        - (3.2.1) \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        - (3.2.2) \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        - (3.2.3) \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunctive() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTg5MDUzOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjo0ODo1NVrOFrmz3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjo0ODo1NVrOFrmz3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2ODk1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u8be5\u65b9\u6cd5\u751f\u6210\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5e76\u5c06\u8f93\u5165\u7684\u4e24\u4e2a FilterOperator \u4f5c\u4e3a\u5176\u4e24\u4e2a\u5b50\u8282\u70b9\u3002\n          \n          \n            \n            \u8be5\u65b9\u6cd5\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u5b50\u5408\u53d6\u5f0f Operator \u5408\u5e76\u4e3a\u4e00\u4e2a\u5408\u53d6\u5f0f\uff0c\u4f8b\u5982\uff1a(a and b) merge (c) -> (a and b and c)", "url": "https://github.com/apache/iotdb/pull/825#discussion_r381268957", "createdAt": "2020-02-19T12:48:55Z", "author": {"login": "Alima777"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u4e2d\u8fc7\u6ee4\u6761\u4ef6\u91cc\u5305\u542b\u7684\u8def\u5f84\u505a\u8865\u5168\u3002\u6b64\u65f6\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bbNOT\u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684Map\u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664NOT\u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+- 1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+- 2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    - (2.1) \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    - (2.2) \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    - (2.3) \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+- 3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    - (3.1) \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    - (3.2) \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        - (3.2.1) \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        - (3.2.2) \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        - (3.2.3) \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunctive() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    - (3.3) \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunctive() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u751f\u6210\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5e76\u5c06\u8f93\u5165\u7684\u4e24\u4e2a FilterOperator \u4f5c\u4e3a\u5176\u4e24\u4e2a\u5b50\u8282\u70b9\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTg5NTM1OnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjo1MDozM1rOFrm2zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjo1MDozM1rOFrm2zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2OTcwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u79cd\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.\n          \n          \n            \n            1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u4e2d\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.", "url": "https://github.com/apache/iotdb/pull/825#discussion_r381269708", "createdAt": "2020-02-19T12:50:33Z", "author": {"login": "Alima777"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d SELECT \u5b50\u53e5\u3001FROM \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u4e2d\u8fc7\u6ee4\u6761\u4ef6\u91cc\u5305\u542b\u7684\u8def\u5f84\u505a\u8865\u5168\u3002\u6b64\u65f6\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bbNOT\u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684Map\u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664NOT\u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+- 1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+- 2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    - (2.1) \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    - (2.2) \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    - (2.3) \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+- 3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    - (3.1) \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    - (3.2) \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        - (3.2.1) \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        - (3.2.2) \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        - (3.2.3) \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunctive() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    - (3.3) \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunctive() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u751f\u6210\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5e76\u5c06\u8f93\u5165\u7684\u4e24\u4e2a FilterOperator \u4f5c\u4e3a\u5176\u4e24\u4e2a\u5b50\u8282\u70b9\u3002\n+\n+\n+### MergeSingleFilterOptimizer\n+\n+\n+MergeSingleFilterOptimizer \u7c7b\u4e3b\u8981\u901a\u8fc7 mergeSamePathFilter() \u65b9\u6cd5\u5bf9\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Path mergeSamePathFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u6362\uff08\u5408\u5e76\uff09\u7684 Filter\n+    \u8f93\u51fa\uff1a\u5904\u7406\u540e\uff08\u5408\u5e76\uff09\u7684 Filter\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u79cd\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816e8a9bd09e420805245326f6f26dfdd61ca401"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDM4OTUyOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMjozMTowNFrOFtJC1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwMjo0MTo0OFrOFtN7-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3ODQyMA==", "bodyText": "\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5462\uff1f", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382878420", "createdAt": "2020-02-22T02:31:04Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        1. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        2. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        3. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunction() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u5b50\u5408\u53d6\u5f0f Operator \u5408\u5e76\u4e3a\u4e00\u4e2a\u5408\u53d6\u5f0f\uff0c\u4f8b\u5982\uff1a(a and b) merge (c) -> (a and b and c)\n+\n+\n+### MergeSingleFilterOptimizer\n+\n+\n+MergeSingleFilterOptimizer \u7c7b\u4e3b\u8981\u901a\u8fc7 mergeSamePathFilter() \u65b9\u6cd5\u5bf9\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Path mergeSamePathFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u6362\uff08\u5408\u5e76\uff09\u7684 Filter\n+    \u8f93\u51fa\uff1a\u5904\u7406\u540e\uff08\u5408\u5e76\uff09\u7684 Filter\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u4e2d\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9e50163fa68fd24c8cd7fd9e1f5a194c6d85169"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk1ODU4NA==", "bodyText": "\u597d\u7684\u3002\u6211\u4f1a\u4fee\u6539\u8fd9\u90e8\u5206\u5185\u5bb9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42\u3002", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382958584", "createdAt": "2020-02-23T02:41:48Z", "author": {"login": "Ring-k"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        1. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        2. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        3. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunction() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u5b50\u5408\u53d6\u5f0f Operator \u5408\u5e76\u4e3a\u4e00\u4e2a\u5408\u53d6\u5f0f\uff0c\u4f8b\u5982\uff1a(a and b) merge (c) -> (a and b and c)\n+\n+\n+### MergeSingleFilterOptimizer\n+\n+\n+MergeSingleFilterOptimizer \u7c7b\u4e3b\u8981\u901a\u8fc7 mergeSamePathFilter() \u65b9\u6cd5\u5bf9\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Path mergeSamePathFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u6362\uff08\u5408\u5e76\uff09\u7684 Filter\n+    \u8f93\u51fa\uff1a\u5904\u7406\u540e\uff08\u5408\u5e76\uff09\u7684 Filter\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u4e2d\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3ODQyMA=="}, "originalCommit": {"oid": "d9e50163fa68fd24c8cd7fd9e1f5a194c6d85169"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDM5MzY4OnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMjozOTo0NlrOFtJFBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwMjo0MjowOFrOFtN8Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3ODk4MA==", "bodyText": "\u201c\u5728 measurementSetOfGivenSuffix \u6240\u4e3e\u793a\u4f8b\u4e2d\u201d  \u8fd9\u53e5\u8bdd\u770b\u4e0d\u61c2", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382878980", "createdAt": "2020-02-22T02:39:46Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        1. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        2. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        3. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunction() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u5b50\u5408\u53d6\u5f0f Operator \u5408\u5e76\u4e3a\u4e00\u4e2a\u5408\u53d6\u5f0f\uff0c\u4f8b\u5982\uff1a(a and b) merge (c) -> (a and b and c)\n+\n+\n+### MergeSingleFilterOptimizer\n+\n+\n+MergeSingleFilterOptimizer \u7c7b\u4e3b\u8981\u901a\u8fc7 mergeSamePathFilter() \u65b9\u6cd5\u5bf9\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Path mergeSamePathFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u6362\uff08\u5408\u5e76\uff09\u7684 Filter\n+    \u8f93\u51fa\uff1a\u5904\u7406\u540e\uff08\u5408\u5e76\uff09\u7684 Filter\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u4e2d\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5bf9\u5f53\u524d\u8282\u70b9\u4f9d\u6b21\u9012\u5f52\u5730\u4f7f\u7528 mergeSamePathFilter() \u65b9\u6cd5\u8bbf\u95ee\u5b50\u8282\u70b9\u5e76\u83b7\u53d6\u5b50\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\uff0c\u5982\u679c\u5b50\u8282\u70b9\u8def\u5f84\u4e0d\u540c\uff0c\u5219\u5c06\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\u8bbe\u4e3a null\uff0c\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8bbe\u4e3a\u5b50\u8282\u70b9\u7684\u516c\u5171\u8def\u5f84\uff0c\u5e76\u8fd4\u56de\u8be5\u8def\u5f84\u3002\n+3. \u5982\u679c\u5b50\u8282\u70b9\u5747\u4e3a BasicFunctionOperator\uff0c\u5219\u5bf9\u5b50\u8282\u70b9\u6309\u7167\u8def\u5f84\u8fdb\u884c\u6392\u5e8f\u3002\u8fdb\u5165\u6b65\u9aa44.\n+4. \u5bf9\u5f53\u524d\u8282\u70b9\u8c03\u7528 mergeSingleFilters() \u65b9\u6cd5\u83b7\u5f97\u5f53\u524d\u8282\u70b9\u5185\u5b50\u8282\u70b9\u8868\u793a\u7684\u8def\u5f84\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u8be5\u64cd\u4f5c\u4f1a\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u5408\u5e76\uff0c\u540c\u65f6\u4fdd\u7559\u8def\u5f84\u975e null \u5b50\u8282\u70b9\u3002\n+5. \u5c06\u5269\u4f59\u7684\u8def\u5f84\u4e3a null \u7684\u8282\u70b9\u4f9d\u6b21\u8bbe\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\n+\n+mergeSingleFilter() \u65b9\u6cd5\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u5c06\u751f\u6210\u65b0\u7684 FilterOperator \u4f5c\u4e3a\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u64cd\u4f5c\u7b26\u7c7b\u578b\u4e0e\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u76f8\u540c\uff0c\u518d\u5c06\u90a3\u4e9b\u8def\u5f84\u76f8\u540c\u7684\u5b50\u8282\u70b9\u8bbe\u4e3a\u65b0\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u6700\u540e\u8fd4\u56de\u5b50\u8282\u70b9\u4e2d\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u4f8b\u5982\uff0c\u4e0b\u56fe\u8868\u793a\u5408\u5e76\u540c\u8def\u5f84\u8fc7\u6ee4\u6761\u4ef6\u7684\u8fc7\u7a0b\uff08\u5706\u5f62\u8868\u793a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u957f\u65b9\u5f62\u8868\u793a\u53f6\u5b50\u8282\u70b9\u3002\u5192\u53f7\u524d\u8868\u793a\u8282\u70b9\u7684\u7c7b\u522b\u6216\u8fc7\u6ee4\u6761\u4ef6\uff0c\u5192\u53f7\u540e\u8868\u793a\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u8def\u5f84\uff09\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74820835-a5eb6780-533d-11ea-8173-6591e69fab5a.jpg)\n+\n+### \u4e3e\u4f8b\u8bf4\u660e\n+\n+\u5047\u8bbe\u8f93\u5165\u7684 SQL \u8bed\u53e5\u4e3a <center>SELECT * FROM root.v0.d0 WHERE (NOT time<200) AND (s1 < 10 OR s2 > 50 OR s1 > 20)</center>\n+\n+\u5219\u751f\u6210\u7684\u9009\u62e9\u6761\u4ef6\u6811\u72b6\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74821007-e8ad3f80-533d-11ea-9b5e-7565cf2d4fc3.jpg)\n+\n ## \u7269\u7406\u8ba1\u5212\u751f\u6210\u5668\n \n * org.apache.iotdb.db.qp.strategy.PhysicalGenerator\n \n+### TransformToPhysicalPlan()\n+\n+PhysicalGenerator \u7c7b\u4e2d\u7684 transformToPhysicalPlan() \u65b9\u6cd5\u5c06 Planner \u4e2d\u751f\u6210\u7684\u903b\u8f91\u8ba1\u5212\u8f6c\u5316\u4e3a\u7269\u7406\u8ba1\u5212\u3002\u5176\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+```java\n+PhysicalPlan transformToPhysicalPlan(Operator operator)\n+\u8f93\u5165\uff1aPlanner \u4e2d\u7ecf\u8fc7\u4f18\u5316\u7684\u903b\u8f91\u8ba1\u5212 operator\n+\u8f93\u51fa\uff1a\u901a\u8fc7\u89e3\u6790 operator \u751f\u6210\u7684\u7269\u7406\u8ba1\u5212\n+```\n+\n+transformToPhysicalPlan() \u65b9\u6cd5\u7684\u903b\u8f91\u8f83\u4e3a\u7b80\u5355\uff0c\u5373\u901a\u8fc7 operator.getType() \u65b9\u6cd5\u5224\u65ad\u903b\u8f91\u8ba1\u5212\u7684\u7c7b\u578b\uff0c\u7136\u540e\u521b\u5efa\u76f8\u5bf9\u5e94\u7684\u7269\u7406\u8ba1\u5212\u3002\n+\n+\u5176\u4e2d\u53ea\u6709 Query \u7c7b\u578b\u9700\u8981\u989d\u5916\u8c03\u7528 transformQuery() \u65b9\u6cd5\u8fdb\u884c\u8fdb\u4e00\u6b65\u8f6c\u5316\uff0c\u5176\u4f59\u7c7b\u578b\u5747\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u7269\u7406\u8ba1\u5212\u3002\n+\n+#### TransformQuery()\n+\n+transformQuery() \u65b9\u6cd5\u4e3b\u8981\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u539f\u59cb\u6570\u636e\u67e5\u8be2 RawDataQueryPlan \u7684\u8f6c\u5316\uff08\u6309\u65f6\u95f4\u5bf9\u9f50\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u6309\u8bbe\u5907\u5bf9\u9f50 AlignByDevicePlan \u7684\u8f6c\u5316\u3002\n+\n+RawDataQueryPlan \u6709\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5206\u522b\u4e3a GroupByPlan\u3001FillQueryPlan \u548c AggregationPlan\u3002\u5728\u5206\u5f00\u5904\u7406 RawDataQueryPlan \u548c AlignByDevicePlan \u524d\uff0c\u9996\u5148\u5904\u7406\u8fd9\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5c06\u9700\u8981\u7684\u53c2\u6570\u4fdd\u5b58\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002\n+\n+\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u5176\u4e2d\u8c03\u7528\u4e86 setInterval()\u3001setSlidingStep()\u3001setStartTime()\u3001setEndTime() \u65b9\u6cd5\u5b58\u50a8\u4e86 GroupByPlan \u7684\u65f6\u95f4\u95f4\u9694\u3001\u6b65\u957f\u3001\u5f00\u59cb\u65f6\u95f4\u3001\u7ed3\u675f\u65f6\u95f4\u7b49\u53c2\u6570\u3002\n+\n+##### AlignByDevicePlan \u8f6c\u5316\n+\n+\u9996\u5148\u89e3\u91ca\u4e00\u4e0b AlignByDevicePlan \u4e2d\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\u7684\u4f5c\u7528\u3002\n+\n+- prefixPaths\uff1aFROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\uff0c\u5982 root.*.*, root.sg.d1;\n+- devices\uff1a\u5bf9 prefixPaths \u8fdb\u884c\u53bb\u661f\u548c\u8bbe\u5907\u53bb\u91cd\u540e\u5f97\u5230\u7684\u8bbe\u5907\u5217\u8868;\n+- suffixPaths\uff1aSELECT \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\uff0c\u5982 s0, temperature, *;\n+- measurements\uff1a\u5b58\u50a8\u5b9e\u9645\u5b58\u5728\u4e14\u975e\u5e38\u91cf\u7684 Measurement\uff0c\u5728 measurementSetOfGivenSuffix \u6240\u4e3e\u793a\u4f8b\u4e2d\uff0cmeasurements = [s1,s2,s3,s1];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9e50163fa68fd24c8cd7fd9e1f5a194c6d85169"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3OTMxNQ==", "bodyText": "\u4e3a\u4ec0\u4e48\u4ece\u8fd9\u884c\u5f00\u59cb\u53d8\u6210\u659c\u4f53\u4e86\u3002\u3002\u3002\u6b63\u56de\u6765\u3002\u3002\u3002", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382879315", "createdAt": "2020-02-22T02:44:53Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        1. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        2. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        3. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunction() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u5b50\u5408\u53d6\u5f0f Operator \u5408\u5e76\u4e3a\u4e00\u4e2a\u5408\u53d6\u5f0f\uff0c\u4f8b\u5982\uff1a(a and b) merge (c) -> (a and b and c)\n+\n+\n+### MergeSingleFilterOptimizer\n+\n+\n+MergeSingleFilterOptimizer \u7c7b\u4e3b\u8981\u901a\u8fc7 mergeSamePathFilter() \u65b9\u6cd5\u5bf9\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Path mergeSamePathFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u6362\uff08\u5408\u5e76\uff09\u7684 Filter\n+    \u8f93\u51fa\uff1a\u5904\u7406\u540e\uff08\u5408\u5e76\uff09\u7684 Filter\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u4e2d\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5bf9\u5f53\u524d\u8282\u70b9\u4f9d\u6b21\u9012\u5f52\u5730\u4f7f\u7528 mergeSamePathFilter() \u65b9\u6cd5\u8bbf\u95ee\u5b50\u8282\u70b9\u5e76\u83b7\u53d6\u5b50\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\uff0c\u5982\u679c\u5b50\u8282\u70b9\u8def\u5f84\u4e0d\u540c\uff0c\u5219\u5c06\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\u8bbe\u4e3a null\uff0c\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8bbe\u4e3a\u5b50\u8282\u70b9\u7684\u516c\u5171\u8def\u5f84\uff0c\u5e76\u8fd4\u56de\u8be5\u8def\u5f84\u3002\n+3. \u5982\u679c\u5b50\u8282\u70b9\u5747\u4e3a BasicFunctionOperator\uff0c\u5219\u5bf9\u5b50\u8282\u70b9\u6309\u7167\u8def\u5f84\u8fdb\u884c\u6392\u5e8f\u3002\u8fdb\u5165\u6b65\u9aa44.\n+4. \u5bf9\u5f53\u524d\u8282\u70b9\u8c03\u7528 mergeSingleFilters() \u65b9\u6cd5\u83b7\u5f97\u5f53\u524d\u8282\u70b9\u5185\u5b50\u8282\u70b9\u8868\u793a\u7684\u8def\u5f84\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u8be5\u64cd\u4f5c\u4f1a\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u5408\u5e76\uff0c\u540c\u65f6\u4fdd\u7559\u8def\u5f84\u975e null \u5b50\u8282\u70b9\u3002\n+5. \u5c06\u5269\u4f59\u7684\u8def\u5f84\u4e3a null \u7684\u8282\u70b9\u4f9d\u6b21\u8bbe\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\n+\n+mergeSingleFilter() \u65b9\u6cd5\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u5c06\u751f\u6210\u65b0\u7684 FilterOperator \u4f5c\u4e3a\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u64cd\u4f5c\u7b26\u7c7b\u578b\u4e0e\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u76f8\u540c\uff0c\u518d\u5c06\u90a3\u4e9b\u8def\u5f84\u76f8\u540c\u7684\u5b50\u8282\u70b9\u8bbe\u4e3a\u65b0\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u6700\u540e\u8fd4\u56de\u5b50\u8282\u70b9\u4e2d\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u4f8b\u5982\uff0c\u4e0b\u56fe\u8868\u793a\u5408\u5e76\u540c\u8def\u5f84\u8fc7\u6ee4\u6761\u4ef6\u7684\u8fc7\u7a0b\uff08\u5706\u5f62\u8868\u793a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u957f\u65b9\u5f62\u8868\u793a\u53f6\u5b50\u8282\u70b9\u3002\u5192\u53f7\u524d\u8868\u793a\u8282\u70b9\u7684\u7c7b\u522b\u6216\u8fc7\u6ee4\u6761\u4ef6\uff0c\u5192\u53f7\u540e\u8868\u793a\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u8def\u5f84\uff09\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74820835-a5eb6780-533d-11ea-8173-6591e69fab5a.jpg)\n+\n+### \u4e3e\u4f8b\u8bf4\u660e\n+\n+\u5047\u8bbe\u8f93\u5165\u7684 SQL \u8bed\u53e5\u4e3a <center>SELECT * FROM root.v0.d0 WHERE (NOT time<200) AND (s1 < 10 OR s2 > 50 OR s1 > 20)</center>\n+\n+\u5219\u751f\u6210\u7684\u9009\u62e9\u6761\u4ef6\u6811\u72b6\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74821007-e8ad3f80-533d-11ea-9b5e-7565cf2d4fc3.jpg)\n+\n ## \u7269\u7406\u8ba1\u5212\u751f\u6210\u5668\n \n * org.apache.iotdb.db.qp.strategy.PhysicalGenerator\n \n+### TransformToPhysicalPlan()\n+\n+PhysicalGenerator \u7c7b\u4e2d\u7684 transformToPhysicalPlan() \u65b9\u6cd5\u5c06 Planner \u4e2d\u751f\u6210\u7684\u903b\u8f91\u8ba1\u5212\u8f6c\u5316\u4e3a\u7269\u7406\u8ba1\u5212\u3002\u5176\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+```java\n+PhysicalPlan transformToPhysicalPlan(Operator operator)\n+\u8f93\u5165\uff1aPlanner \u4e2d\u7ecf\u8fc7\u4f18\u5316\u7684\u903b\u8f91\u8ba1\u5212 operator\n+\u8f93\u51fa\uff1a\u901a\u8fc7\u89e3\u6790 operator \u751f\u6210\u7684\u7269\u7406\u8ba1\u5212\n+```\n+\n+transformToPhysicalPlan() \u65b9\u6cd5\u7684\u903b\u8f91\u8f83\u4e3a\u7b80\u5355\uff0c\u5373\u901a\u8fc7 operator.getType() \u65b9\u6cd5\u5224\u65ad\u903b\u8f91\u8ba1\u5212\u7684\u7c7b\u578b\uff0c\u7136\u540e\u521b\u5efa\u76f8\u5bf9\u5e94\u7684\u7269\u7406\u8ba1\u5212\u3002\n+\n+\u5176\u4e2d\u53ea\u6709 Query \u7c7b\u578b\u9700\u8981\u989d\u5916\u8c03\u7528 transformQuery() \u65b9\u6cd5\u8fdb\u884c\u8fdb\u4e00\u6b65\u8f6c\u5316\uff0c\u5176\u4f59\u7c7b\u578b\u5747\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u7269\u7406\u8ba1\u5212\u3002\n+\n+#### TransformQuery()\n+\n+transformQuery() \u65b9\u6cd5\u4e3b\u8981\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u539f\u59cb\u6570\u636e\u67e5\u8be2 RawDataQueryPlan \u7684\u8f6c\u5316\uff08\u6309\u65f6\u95f4\u5bf9\u9f50\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u6309\u8bbe\u5907\u5bf9\u9f50 AlignByDevicePlan \u7684\u8f6c\u5316\u3002\n+\n+RawDataQueryPlan \u6709\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5206\u522b\u4e3a GroupByPlan\u3001FillQueryPlan \u548c AggregationPlan\u3002\u5728\u5206\u5f00\u5904\u7406 RawDataQueryPlan \u548c AlignByDevicePlan \u524d\uff0c\u9996\u5148\u5904\u7406\u8fd9\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5c06\u9700\u8981\u7684\u53c2\u6570\u4fdd\u5b58\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002\n+\n+\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u5176\u4e2d\u8c03\u7528\u4e86 setInterval()\u3001setSlidingStep()\u3001setStartTime()\u3001setEndTime() \u65b9\u6cd5\u5b58\u50a8\u4e86 GroupByPlan \u7684\u65f6\u95f4\u95f4\u9694\u3001\u6b65\u957f\u3001\u5f00\u59cb\u65f6\u95f4\u3001\u7ed3\u675f\u65f6\u95f4\u7b49\u53c2\u6570\u3002\n+\n+##### AlignByDevicePlan \u8f6c\u5316\n+\n+\u9996\u5148\u89e3\u91ca\u4e00\u4e0b AlignByDevicePlan \u4e2d\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\u7684\u4f5c\u7528\u3002\n+\n+- prefixPaths\uff1aFROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\uff0c\u5982 root.*.*, root.sg.d1;\n+- devices\uff1a\u5bf9 prefixPaths \u8fdb\u884c\u53bb\u661f\u548c\u8bbe\u5907\u53bb\u91cd\u540e\u5f97\u5230\u7684\u8bbe\u5907\u5217\u8868;\n+- suffixPaths\uff1aSELECT \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\uff0c\u5982 s0, temperature, *;\n+- measurements\uff1a\u5b58\u50a8\u5b9e\u9645\u5b58\u5728\u4e14\u975e\u5e38\u91cf\u7684 Measurement\uff0c\u5728 measurementSetOfGivenSuffix \u6240\u4e3e\u793a\u4f8b\u4e2d\uff0cmeasurements = [s1,s2,s3,s1];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3ODk4MA=="}, "originalCommit": {"oid": "d9e50163fa68fd24c8cd7fd9e1f5a194c6d85169"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3OTY2OA==", "bodyText": "*\u524d\u9762\u53ef\u4ee5\u52a0\\\u4e0d\u7136\u4f1a\u88ab\u5f53\u6210\u659c\u4f53\u683c\u5f0f", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382879668", "createdAt": "2020-02-22T02:50:38Z", "author": {"login": "samperson1997"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        1. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        2. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        3. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunction() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u5b50\u5408\u53d6\u5f0f Operator \u5408\u5e76\u4e3a\u4e00\u4e2a\u5408\u53d6\u5f0f\uff0c\u4f8b\u5982\uff1a(a and b) merge (c) -> (a and b and c)\n+\n+\n+### MergeSingleFilterOptimizer\n+\n+\n+MergeSingleFilterOptimizer \u7c7b\u4e3b\u8981\u901a\u8fc7 mergeSamePathFilter() \u65b9\u6cd5\u5bf9\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Path mergeSamePathFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u6362\uff08\u5408\u5e76\uff09\u7684 Filter\n+    \u8f93\u51fa\uff1a\u5904\u7406\u540e\uff08\u5408\u5e76\uff09\u7684 Filter\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u4e2d\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5bf9\u5f53\u524d\u8282\u70b9\u4f9d\u6b21\u9012\u5f52\u5730\u4f7f\u7528 mergeSamePathFilter() \u65b9\u6cd5\u8bbf\u95ee\u5b50\u8282\u70b9\u5e76\u83b7\u53d6\u5b50\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\uff0c\u5982\u679c\u5b50\u8282\u70b9\u8def\u5f84\u4e0d\u540c\uff0c\u5219\u5c06\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\u8bbe\u4e3a null\uff0c\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8bbe\u4e3a\u5b50\u8282\u70b9\u7684\u516c\u5171\u8def\u5f84\uff0c\u5e76\u8fd4\u56de\u8be5\u8def\u5f84\u3002\n+3. \u5982\u679c\u5b50\u8282\u70b9\u5747\u4e3a BasicFunctionOperator\uff0c\u5219\u5bf9\u5b50\u8282\u70b9\u6309\u7167\u8def\u5f84\u8fdb\u884c\u6392\u5e8f\u3002\u8fdb\u5165\u6b65\u9aa44.\n+4. \u5bf9\u5f53\u524d\u8282\u70b9\u8c03\u7528 mergeSingleFilters() \u65b9\u6cd5\u83b7\u5f97\u5f53\u524d\u8282\u70b9\u5185\u5b50\u8282\u70b9\u8868\u793a\u7684\u8def\u5f84\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u8be5\u64cd\u4f5c\u4f1a\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u5408\u5e76\uff0c\u540c\u65f6\u4fdd\u7559\u8def\u5f84\u975e null \u5b50\u8282\u70b9\u3002\n+5. \u5c06\u5269\u4f59\u7684\u8def\u5f84\u4e3a null \u7684\u8282\u70b9\u4f9d\u6b21\u8bbe\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\n+\n+mergeSingleFilter() \u65b9\u6cd5\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u5c06\u751f\u6210\u65b0\u7684 FilterOperator \u4f5c\u4e3a\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u64cd\u4f5c\u7b26\u7c7b\u578b\u4e0e\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u76f8\u540c\uff0c\u518d\u5c06\u90a3\u4e9b\u8def\u5f84\u76f8\u540c\u7684\u5b50\u8282\u70b9\u8bbe\u4e3a\u65b0\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u6700\u540e\u8fd4\u56de\u5b50\u8282\u70b9\u4e2d\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u4f8b\u5982\uff0c\u4e0b\u56fe\u8868\u793a\u5408\u5e76\u540c\u8def\u5f84\u8fc7\u6ee4\u6761\u4ef6\u7684\u8fc7\u7a0b\uff08\u5706\u5f62\u8868\u793a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u957f\u65b9\u5f62\u8868\u793a\u53f6\u5b50\u8282\u70b9\u3002\u5192\u53f7\u524d\u8868\u793a\u8282\u70b9\u7684\u7c7b\u522b\u6216\u8fc7\u6ee4\u6761\u4ef6\uff0c\u5192\u53f7\u540e\u8868\u793a\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u8def\u5f84\uff09\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74820835-a5eb6780-533d-11ea-8173-6591e69fab5a.jpg)\n+\n+### \u4e3e\u4f8b\u8bf4\u660e\n+\n+\u5047\u8bbe\u8f93\u5165\u7684 SQL \u8bed\u53e5\u4e3a <center>SELECT * FROM root.v0.d0 WHERE (NOT time<200) AND (s1 < 10 OR s2 > 50 OR s1 > 20)</center>\n+\n+\u5219\u751f\u6210\u7684\u9009\u62e9\u6761\u4ef6\u6811\u72b6\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74821007-e8ad3f80-533d-11ea-9b5e-7565cf2d4fc3.jpg)\n+\n ## \u7269\u7406\u8ba1\u5212\u751f\u6210\u5668\n \n * org.apache.iotdb.db.qp.strategy.PhysicalGenerator\n \n+### TransformToPhysicalPlan()\n+\n+PhysicalGenerator \u7c7b\u4e2d\u7684 transformToPhysicalPlan() \u65b9\u6cd5\u5c06 Planner \u4e2d\u751f\u6210\u7684\u903b\u8f91\u8ba1\u5212\u8f6c\u5316\u4e3a\u7269\u7406\u8ba1\u5212\u3002\u5176\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+```java\n+PhysicalPlan transformToPhysicalPlan(Operator operator)\n+\u8f93\u5165\uff1aPlanner \u4e2d\u7ecf\u8fc7\u4f18\u5316\u7684\u903b\u8f91\u8ba1\u5212 operator\n+\u8f93\u51fa\uff1a\u901a\u8fc7\u89e3\u6790 operator \u751f\u6210\u7684\u7269\u7406\u8ba1\u5212\n+```\n+\n+transformToPhysicalPlan() \u65b9\u6cd5\u7684\u903b\u8f91\u8f83\u4e3a\u7b80\u5355\uff0c\u5373\u901a\u8fc7 operator.getType() \u65b9\u6cd5\u5224\u65ad\u903b\u8f91\u8ba1\u5212\u7684\u7c7b\u578b\uff0c\u7136\u540e\u521b\u5efa\u76f8\u5bf9\u5e94\u7684\u7269\u7406\u8ba1\u5212\u3002\n+\n+\u5176\u4e2d\u53ea\u6709 Query \u7c7b\u578b\u9700\u8981\u989d\u5916\u8c03\u7528 transformQuery() \u65b9\u6cd5\u8fdb\u884c\u8fdb\u4e00\u6b65\u8f6c\u5316\uff0c\u5176\u4f59\u7c7b\u578b\u5747\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u7269\u7406\u8ba1\u5212\u3002\n+\n+#### TransformQuery()\n+\n+transformQuery() \u65b9\u6cd5\u4e3b\u8981\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u539f\u59cb\u6570\u636e\u67e5\u8be2 RawDataQueryPlan \u7684\u8f6c\u5316\uff08\u6309\u65f6\u95f4\u5bf9\u9f50\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u6309\u8bbe\u5907\u5bf9\u9f50 AlignByDevicePlan \u7684\u8f6c\u5316\u3002\n+\n+RawDataQueryPlan \u6709\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5206\u522b\u4e3a GroupByPlan\u3001FillQueryPlan \u548c AggregationPlan\u3002\u5728\u5206\u5f00\u5904\u7406 RawDataQueryPlan \u548c AlignByDevicePlan \u524d\uff0c\u9996\u5148\u5904\u7406\u8fd9\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5c06\u9700\u8981\u7684\u53c2\u6570\u4fdd\u5b58\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002\n+\n+\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u5176\u4e2d\u8c03\u7528\u4e86 setInterval()\u3001setSlidingStep()\u3001setStartTime()\u3001setEndTime() \u65b9\u6cd5\u5b58\u50a8\u4e86 GroupByPlan \u7684\u65f6\u95f4\u95f4\u9694\u3001\u6b65\u957f\u3001\u5f00\u59cb\u65f6\u95f4\u3001\u7ed3\u675f\u65f6\u95f4\u7b49\u53c2\u6570\u3002\n+\n+##### AlignByDevicePlan \u8f6c\u5316\n+\n+\u9996\u5148\u89e3\u91ca\u4e00\u4e0b AlignByDevicePlan \u4e2d\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\u7684\u4f5c\u7528\u3002\n+\n+- prefixPaths\uff1aFROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\uff0c\u5982 root.*.*, root.sg.d1;\n+- devices\uff1a\u5bf9 prefixPaths \u8fdb\u884c\u53bb\u661f\u548c\u8bbe\u5907\u53bb\u91cd\u540e\u5f97\u5230\u7684\u8bbe\u5907\u5217\u8868;\n+- suffixPaths\uff1aSELECT \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\uff0c\u5982 s0, temperature, *;\n+- measurements\uff1a\u5b58\u50a8\u5b9e\u9645\u5b58\u5728\u4e14\u975e\u5e38\u91cf\u7684 Measurement\uff0c\u5728 measurementSetOfGivenSuffix \u6240\u4e3e\u793a\u4f8b\u4e2d\uff0cmeasurements = [s1,s2,s3,s1];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3ODk4MA=="}, "originalCommit": {"oid": "d9e50163fa68fd24c8cd7fd9e1f5a194c6d85169"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk1ODU5NA==", "bodyText": "\u597d\u7684\u3002", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382958594", "createdAt": "2020-02-23T02:42:08Z", "author": {"login": "Ring-k"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        1. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        2. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        3. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunction() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u5b50\u5408\u53d6\u5f0f Operator \u5408\u5e76\u4e3a\u4e00\u4e2a\u5408\u53d6\u5f0f\uff0c\u4f8b\u5982\uff1a(a and b) merge (c) -> (a and b and c)\n+\n+\n+### MergeSingleFilterOptimizer\n+\n+\n+MergeSingleFilterOptimizer \u7c7b\u4e3b\u8981\u901a\u8fc7 mergeSamePathFilter() \u65b9\u6cd5\u5bf9\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Path mergeSamePathFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u6362\uff08\u5408\u5e76\uff09\u7684 Filter\n+    \u8f93\u51fa\uff1a\u5904\u7406\u540e\uff08\u5408\u5e76\uff09\u7684 Filter\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u4e2d\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5bf9\u5f53\u524d\u8282\u70b9\u4f9d\u6b21\u9012\u5f52\u5730\u4f7f\u7528 mergeSamePathFilter() \u65b9\u6cd5\u8bbf\u95ee\u5b50\u8282\u70b9\u5e76\u83b7\u53d6\u5b50\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\uff0c\u5982\u679c\u5b50\u8282\u70b9\u8def\u5f84\u4e0d\u540c\uff0c\u5219\u5c06\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\u8bbe\u4e3a null\uff0c\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8bbe\u4e3a\u5b50\u8282\u70b9\u7684\u516c\u5171\u8def\u5f84\uff0c\u5e76\u8fd4\u56de\u8be5\u8def\u5f84\u3002\n+3. \u5982\u679c\u5b50\u8282\u70b9\u5747\u4e3a BasicFunctionOperator\uff0c\u5219\u5bf9\u5b50\u8282\u70b9\u6309\u7167\u8def\u5f84\u8fdb\u884c\u6392\u5e8f\u3002\u8fdb\u5165\u6b65\u9aa44.\n+4. \u5bf9\u5f53\u524d\u8282\u70b9\u8c03\u7528 mergeSingleFilters() \u65b9\u6cd5\u83b7\u5f97\u5f53\u524d\u8282\u70b9\u5185\u5b50\u8282\u70b9\u8868\u793a\u7684\u8def\u5f84\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u8be5\u64cd\u4f5c\u4f1a\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u5408\u5e76\uff0c\u540c\u65f6\u4fdd\u7559\u8def\u5f84\u975e null \u5b50\u8282\u70b9\u3002\n+5. \u5c06\u5269\u4f59\u7684\u8def\u5f84\u4e3a null \u7684\u8282\u70b9\u4f9d\u6b21\u8bbe\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\n+\n+mergeSingleFilter() \u65b9\u6cd5\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u5c06\u751f\u6210\u65b0\u7684 FilterOperator \u4f5c\u4e3a\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u64cd\u4f5c\u7b26\u7c7b\u578b\u4e0e\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u76f8\u540c\uff0c\u518d\u5c06\u90a3\u4e9b\u8def\u5f84\u76f8\u540c\u7684\u5b50\u8282\u70b9\u8bbe\u4e3a\u65b0\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u6700\u540e\u8fd4\u56de\u5b50\u8282\u70b9\u4e2d\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u4f8b\u5982\uff0c\u4e0b\u56fe\u8868\u793a\u5408\u5e76\u540c\u8def\u5f84\u8fc7\u6ee4\u6761\u4ef6\u7684\u8fc7\u7a0b\uff08\u5706\u5f62\u8868\u793a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u957f\u65b9\u5f62\u8868\u793a\u53f6\u5b50\u8282\u70b9\u3002\u5192\u53f7\u524d\u8868\u793a\u8282\u70b9\u7684\u7c7b\u522b\u6216\u8fc7\u6ee4\u6761\u4ef6\uff0c\u5192\u53f7\u540e\u8868\u793a\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u8def\u5f84\uff09\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74820835-a5eb6780-533d-11ea-8173-6591e69fab5a.jpg)\n+\n+### \u4e3e\u4f8b\u8bf4\u660e\n+\n+\u5047\u8bbe\u8f93\u5165\u7684 SQL \u8bed\u53e5\u4e3a <center>SELECT * FROM root.v0.d0 WHERE (NOT time<200) AND (s1 < 10 OR s2 > 50 OR s1 > 20)</center>\n+\n+\u5219\u751f\u6210\u7684\u9009\u62e9\u6761\u4ef6\u6811\u72b6\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74821007-e8ad3f80-533d-11ea-9b5e-7565cf2d4fc3.jpg)\n+\n ## \u7269\u7406\u8ba1\u5212\u751f\u6210\u5668\n \n * org.apache.iotdb.db.qp.strategy.PhysicalGenerator\n \n+### TransformToPhysicalPlan()\n+\n+PhysicalGenerator \u7c7b\u4e2d\u7684 transformToPhysicalPlan() \u65b9\u6cd5\u5c06 Planner \u4e2d\u751f\u6210\u7684\u903b\u8f91\u8ba1\u5212\u8f6c\u5316\u4e3a\u7269\u7406\u8ba1\u5212\u3002\u5176\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+```java\n+PhysicalPlan transformToPhysicalPlan(Operator operator)\n+\u8f93\u5165\uff1aPlanner \u4e2d\u7ecf\u8fc7\u4f18\u5316\u7684\u903b\u8f91\u8ba1\u5212 operator\n+\u8f93\u51fa\uff1a\u901a\u8fc7\u89e3\u6790 operator \u751f\u6210\u7684\u7269\u7406\u8ba1\u5212\n+```\n+\n+transformToPhysicalPlan() \u65b9\u6cd5\u7684\u903b\u8f91\u8f83\u4e3a\u7b80\u5355\uff0c\u5373\u901a\u8fc7 operator.getType() \u65b9\u6cd5\u5224\u65ad\u903b\u8f91\u8ba1\u5212\u7684\u7c7b\u578b\uff0c\u7136\u540e\u521b\u5efa\u76f8\u5bf9\u5e94\u7684\u7269\u7406\u8ba1\u5212\u3002\n+\n+\u5176\u4e2d\u53ea\u6709 Query \u7c7b\u578b\u9700\u8981\u989d\u5916\u8c03\u7528 transformQuery() \u65b9\u6cd5\u8fdb\u884c\u8fdb\u4e00\u6b65\u8f6c\u5316\uff0c\u5176\u4f59\u7c7b\u578b\u5747\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u7269\u7406\u8ba1\u5212\u3002\n+\n+#### TransformQuery()\n+\n+transformQuery() \u65b9\u6cd5\u4e3b\u8981\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u539f\u59cb\u6570\u636e\u67e5\u8be2 RawDataQueryPlan \u7684\u8f6c\u5316\uff08\u6309\u65f6\u95f4\u5bf9\u9f50\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u6309\u8bbe\u5907\u5bf9\u9f50 AlignByDevicePlan \u7684\u8f6c\u5316\u3002\n+\n+RawDataQueryPlan \u6709\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5206\u522b\u4e3a GroupByPlan\u3001FillQueryPlan \u548c AggregationPlan\u3002\u5728\u5206\u5f00\u5904\u7406 RawDataQueryPlan \u548c AlignByDevicePlan \u524d\uff0c\u9996\u5148\u5904\u7406\u8fd9\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5c06\u9700\u8981\u7684\u53c2\u6570\u4fdd\u5b58\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002\n+\n+\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u5176\u4e2d\u8c03\u7528\u4e86 setInterval()\u3001setSlidingStep()\u3001setStartTime()\u3001setEndTime() \u65b9\u6cd5\u5b58\u50a8\u4e86 GroupByPlan \u7684\u65f6\u95f4\u95f4\u9694\u3001\u6b65\u957f\u3001\u5f00\u59cb\u65f6\u95f4\u3001\u7ed3\u675f\u65f6\u95f4\u7b49\u53c2\u6570\u3002\n+\n+##### AlignByDevicePlan \u8f6c\u5316\n+\n+\u9996\u5148\u89e3\u91ca\u4e00\u4e0b AlignByDevicePlan \u4e2d\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\u7684\u4f5c\u7528\u3002\n+\n+- prefixPaths\uff1aFROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\uff0c\u5982 root.*.*, root.sg.d1;\n+- devices\uff1a\u5bf9 prefixPaths \u8fdb\u884c\u53bb\u661f\u548c\u8bbe\u5907\u53bb\u91cd\u540e\u5f97\u5230\u7684\u8bbe\u5907\u5217\u8868;\n+- suffixPaths\uff1aSELECT \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\uff0c\u5982 s0, temperature, *;\n+- measurements\uff1a\u5b58\u50a8\u5b9e\u9645\u5b58\u5728\u4e14\u975e\u5e38\u91cf\u7684 Measurement\uff0c\u5728 measurementSetOfGivenSuffix \u6240\u4e3e\u793a\u4f8b\u4e2d\uff0cmeasurements = [s1,s2,s3,s1];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3ODk4MA=="}, "originalCommit": {"oid": "d9e50163fa68fd24c8cd7fd9e1f5a194c6d85169"}, "originalPosition": 190}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDM5NDYxOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMjo0MDo1NVrOFtJFbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwMzo1Mjo0MVrOFtOHTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3OTA4Nw==", "bodyText": "\u8fd9\u4e2a\u662f\u4e0d\u662f\u8981\u63d0\u524d\u4ecb\u7ecd\u554a\uff0c\u653e\u5230 Measurements \u524d\u3002\n\u201c\u5bf9\u4e8e\u540e\u7f00 *, measurementSetOfGivenSuffix = {s1,s2,s3}\u201d  \u8fd9\u4e2a s1 s2 s3 \u54ea\u51fa\u6765\u7684\uff1f\u5728\u524d\u8fb9\u4ecb\u7ecd\u4e00\u4e0b\u7cfb\u7edf\u91cc\u6709\u54ea\u4e9b\u65f6\u95f4\u5e8f\u5217\u5427", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382879087", "createdAt": "2020-02-22T02:40:55Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        1. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        2. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        3. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunction() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u5b50\u5408\u53d6\u5f0f Operator \u5408\u5e76\u4e3a\u4e00\u4e2a\u5408\u53d6\u5f0f\uff0c\u4f8b\u5982\uff1a(a and b) merge (c) -> (a and b and c)\n+\n+\n+### MergeSingleFilterOptimizer\n+\n+\n+MergeSingleFilterOptimizer \u7c7b\u4e3b\u8981\u901a\u8fc7 mergeSamePathFilter() \u65b9\u6cd5\u5bf9\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Path mergeSamePathFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u6362\uff08\u5408\u5e76\uff09\u7684 Filter\n+    \u8f93\u51fa\uff1a\u5904\u7406\u540e\uff08\u5408\u5e76\uff09\u7684 Filter\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u4e2d\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5bf9\u5f53\u524d\u8282\u70b9\u4f9d\u6b21\u9012\u5f52\u5730\u4f7f\u7528 mergeSamePathFilter() \u65b9\u6cd5\u8bbf\u95ee\u5b50\u8282\u70b9\u5e76\u83b7\u53d6\u5b50\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\uff0c\u5982\u679c\u5b50\u8282\u70b9\u8def\u5f84\u4e0d\u540c\uff0c\u5219\u5c06\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\u8bbe\u4e3a null\uff0c\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8bbe\u4e3a\u5b50\u8282\u70b9\u7684\u516c\u5171\u8def\u5f84\uff0c\u5e76\u8fd4\u56de\u8be5\u8def\u5f84\u3002\n+3. \u5982\u679c\u5b50\u8282\u70b9\u5747\u4e3a BasicFunctionOperator\uff0c\u5219\u5bf9\u5b50\u8282\u70b9\u6309\u7167\u8def\u5f84\u8fdb\u884c\u6392\u5e8f\u3002\u8fdb\u5165\u6b65\u9aa44.\n+4. \u5bf9\u5f53\u524d\u8282\u70b9\u8c03\u7528 mergeSingleFilters() \u65b9\u6cd5\u83b7\u5f97\u5f53\u524d\u8282\u70b9\u5185\u5b50\u8282\u70b9\u8868\u793a\u7684\u8def\u5f84\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u8be5\u64cd\u4f5c\u4f1a\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u5408\u5e76\uff0c\u540c\u65f6\u4fdd\u7559\u8def\u5f84\u975e null \u5b50\u8282\u70b9\u3002\n+5. \u5c06\u5269\u4f59\u7684\u8def\u5f84\u4e3a null \u7684\u8282\u70b9\u4f9d\u6b21\u8bbe\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\n+\n+mergeSingleFilter() \u65b9\u6cd5\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u5c06\u751f\u6210\u65b0\u7684 FilterOperator \u4f5c\u4e3a\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u64cd\u4f5c\u7b26\u7c7b\u578b\u4e0e\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u76f8\u540c\uff0c\u518d\u5c06\u90a3\u4e9b\u8def\u5f84\u76f8\u540c\u7684\u5b50\u8282\u70b9\u8bbe\u4e3a\u65b0\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u6700\u540e\u8fd4\u56de\u5b50\u8282\u70b9\u4e2d\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u4f8b\u5982\uff0c\u4e0b\u56fe\u8868\u793a\u5408\u5e76\u540c\u8def\u5f84\u8fc7\u6ee4\u6761\u4ef6\u7684\u8fc7\u7a0b\uff08\u5706\u5f62\u8868\u793a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u957f\u65b9\u5f62\u8868\u793a\u53f6\u5b50\u8282\u70b9\u3002\u5192\u53f7\u524d\u8868\u793a\u8282\u70b9\u7684\u7c7b\u522b\u6216\u8fc7\u6ee4\u6761\u4ef6\uff0c\u5192\u53f7\u540e\u8868\u793a\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u8def\u5f84\uff09\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74820835-a5eb6780-533d-11ea-8173-6591e69fab5a.jpg)\n+\n+### \u4e3e\u4f8b\u8bf4\u660e\n+\n+\u5047\u8bbe\u8f93\u5165\u7684 SQL \u8bed\u53e5\u4e3a <center>SELECT * FROM root.v0.d0 WHERE (NOT time<200) AND (s1 < 10 OR s2 > 50 OR s1 > 20)</center>\n+\n+\u5219\u751f\u6210\u7684\u9009\u62e9\u6761\u4ef6\u6811\u72b6\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74821007-e8ad3f80-533d-11ea-9b5e-7565cf2d4fc3.jpg)\n+\n ## \u7269\u7406\u8ba1\u5212\u751f\u6210\u5668\n \n * org.apache.iotdb.db.qp.strategy.PhysicalGenerator\n \n+### TransformToPhysicalPlan()\n+\n+PhysicalGenerator \u7c7b\u4e2d\u7684 transformToPhysicalPlan() \u65b9\u6cd5\u5c06 Planner \u4e2d\u751f\u6210\u7684\u903b\u8f91\u8ba1\u5212\u8f6c\u5316\u4e3a\u7269\u7406\u8ba1\u5212\u3002\u5176\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+```java\n+PhysicalPlan transformToPhysicalPlan(Operator operator)\n+\u8f93\u5165\uff1aPlanner \u4e2d\u7ecf\u8fc7\u4f18\u5316\u7684\u903b\u8f91\u8ba1\u5212 operator\n+\u8f93\u51fa\uff1a\u901a\u8fc7\u89e3\u6790 operator \u751f\u6210\u7684\u7269\u7406\u8ba1\u5212\n+```\n+\n+transformToPhysicalPlan() \u65b9\u6cd5\u7684\u903b\u8f91\u8f83\u4e3a\u7b80\u5355\uff0c\u5373\u901a\u8fc7 operator.getType() \u65b9\u6cd5\u5224\u65ad\u903b\u8f91\u8ba1\u5212\u7684\u7c7b\u578b\uff0c\u7136\u540e\u521b\u5efa\u76f8\u5bf9\u5e94\u7684\u7269\u7406\u8ba1\u5212\u3002\n+\n+\u5176\u4e2d\u53ea\u6709 Query \u7c7b\u578b\u9700\u8981\u989d\u5916\u8c03\u7528 transformQuery() \u65b9\u6cd5\u8fdb\u884c\u8fdb\u4e00\u6b65\u8f6c\u5316\uff0c\u5176\u4f59\u7c7b\u578b\u5747\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u7269\u7406\u8ba1\u5212\u3002\n+\n+#### TransformQuery()\n+\n+transformQuery() \u65b9\u6cd5\u4e3b\u8981\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u539f\u59cb\u6570\u636e\u67e5\u8be2 RawDataQueryPlan \u7684\u8f6c\u5316\uff08\u6309\u65f6\u95f4\u5bf9\u9f50\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u6309\u8bbe\u5907\u5bf9\u9f50 AlignByDevicePlan \u7684\u8f6c\u5316\u3002\n+\n+RawDataQueryPlan \u6709\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5206\u522b\u4e3a GroupByPlan\u3001FillQueryPlan \u548c AggregationPlan\u3002\u5728\u5206\u5f00\u5904\u7406 RawDataQueryPlan \u548c AlignByDevicePlan \u524d\uff0c\u9996\u5148\u5904\u7406\u8fd9\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5c06\u9700\u8981\u7684\u53c2\u6570\u4fdd\u5b58\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002\n+\n+\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u5176\u4e2d\u8c03\u7528\u4e86 setInterval()\u3001setSlidingStep()\u3001setStartTime()\u3001setEndTime() \u65b9\u6cd5\u5b58\u50a8\u4e86 GroupByPlan \u7684\u65f6\u95f4\u95f4\u9694\u3001\u6b65\u957f\u3001\u5f00\u59cb\u65f6\u95f4\u3001\u7ed3\u675f\u65f6\u95f4\u7b49\u53c2\u6570\u3002\n+\n+##### AlignByDevicePlan \u8f6c\u5316\n+\n+\u9996\u5148\u89e3\u91ca\u4e00\u4e0b AlignByDevicePlan \u4e2d\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\u7684\u4f5c\u7528\u3002\n+\n+- prefixPaths\uff1aFROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\uff0c\u5982 root.*.*, root.sg.d1;\n+- devices\uff1a\u5bf9 prefixPaths \u8fdb\u884c\u53bb\u661f\u548c\u8bbe\u5907\u53bb\u91cd\u540e\u5f97\u5230\u7684\u8bbe\u5907\u5217\u8868;\n+- suffixPaths\uff1aSELECT \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\uff0c\u5982 s0, temperature, *;\n+- measurements\uff1a\u5b58\u50a8\u5b9e\u9645\u5b58\u5728\u4e14\u975e\u5e38\u91cf\u7684 Measurement\uff0c\u5728 measurementSetOfGivenSuffix \u6240\u4e3e\u793a\u4f8b\u4e2d\uff0cmeasurements = [s1,s2,s3,s1];\n+- deviceToMeasurementsMap\uff1a\u5b58\u50a8\u6bcf\u4e2a\u8bbe\u5907\u5bf9\u5e94\u7684 measurements;\n+- dataTypeConsistencyChecker\uff1a\u68c0\u9a8c\u4e0d\u540c\u8bbe\u5907\u7684\u540c\u540d Measurement \u7684\u6570\u636e\u7c7b\u578b\u4e00\u81f4\u6027\uff0c\u5982 root.sg1.d1.s0 \u4e3a INT32 \u7c7b\u578b\u800c root.sg2.d3.s0 \u4e3a FLOAT \u7c7b\u578b\u5219\u4e0d\u6ee1\u8db3\u4e00\u81f4\u6027;\n+- loc\uff1a\u6807\u8bb0\u5f53\u524d Measurement \u5728 SELECT \u540e\u7f00\u8def\u5f84\u4e2d\u7684\u4f4d\u7f6e;\n+- nonExistMeasurement\uff1a\u5b58\u50a8\u4e0d\u5b58\u5728\u7684 Measurement\uff0c\u6ce8\u610f\u5176\u5b9a\u4e49\u4f4d\u7f6e\u5728\u7b2c\u4e00\u5c42 suffixPaths \u5faa\u73af\uff0c\u4e14\u4e3a Set \u7c7b\u578b\uff0c\u76ee\u7684\u662f\u4e0d\u5bf9\u540c\u4e00\u4e2a suffix \u4e0b\u7684\u91cd\u590d Measurement \u6dfb\u52a0\u91cd\u590d\u8bb0\u5f55\uff0c\u4f46\u53ef\u4ee5\u5bf9\u591a\u6b21\u51fa\u73b0\u7684\u540c\u540d suffix \u589e\u52a0\u8bb0\u5f55\u3002\u5176\u5c06\u5728\u4e00\u4e2a suffix \u5faa\u73af\u7ed3\u675f\u540e\u5c06 Set \u96c6\u5408\u5185\u7684\u5143\u7d20\u4e00\u8d77\u6dfb\u52a0\u5230 AlignByDevicePlan \u4e2d;\n+- measurementSetOfGivenSuffix\uff1a\u8bb0\u5f55\u8be5 suffix \u5bf9\u5e94\u7684 measurements\uff0c\u5982 select *,s1 from root.sg.d0, root.sg.d1\uff0c\u5bf9\u4e8e\u540e\u7f00 *, measurementSetOfGivenSuffix = {s1,s2,s3}\uff0c\u5bf9\u4e8e\u540e\u7f00 s1, measurementSetOfGivenSuffix = {s1};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9e50163fa68fd24c8cd7fd9e1f5a194c6d85169"}, "originalPosition": 195}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2MTQ4Ng==", "bodyText": "\u52a0\u4e86\u53e5\u89e3\u91ca~", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382961486", "createdAt": "2020-02-23T03:52:41Z", "author": {"login": "Alima777"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        1. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        2. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        3. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunction() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u5b50\u5408\u53d6\u5f0f Operator \u5408\u5e76\u4e3a\u4e00\u4e2a\u5408\u53d6\u5f0f\uff0c\u4f8b\u5982\uff1a(a and b) merge (c) -> (a and b and c)\n+\n+\n+### MergeSingleFilterOptimizer\n+\n+\n+MergeSingleFilterOptimizer \u7c7b\u4e3b\u8981\u901a\u8fc7 mergeSamePathFilter() \u65b9\u6cd5\u5bf9\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Path mergeSamePathFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u6362\uff08\u5408\u5e76\uff09\u7684 Filter\n+    \u8f93\u51fa\uff1a\u5904\u7406\u540e\uff08\u5408\u5e76\uff09\u7684 Filter\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u4e2d\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5bf9\u5f53\u524d\u8282\u70b9\u4f9d\u6b21\u9012\u5f52\u5730\u4f7f\u7528 mergeSamePathFilter() \u65b9\u6cd5\u8bbf\u95ee\u5b50\u8282\u70b9\u5e76\u83b7\u53d6\u5b50\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\uff0c\u5982\u679c\u5b50\u8282\u70b9\u8def\u5f84\u4e0d\u540c\uff0c\u5219\u5c06\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\u8bbe\u4e3a null\uff0c\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8bbe\u4e3a\u5b50\u8282\u70b9\u7684\u516c\u5171\u8def\u5f84\uff0c\u5e76\u8fd4\u56de\u8be5\u8def\u5f84\u3002\n+3. \u5982\u679c\u5b50\u8282\u70b9\u5747\u4e3a BasicFunctionOperator\uff0c\u5219\u5bf9\u5b50\u8282\u70b9\u6309\u7167\u8def\u5f84\u8fdb\u884c\u6392\u5e8f\u3002\u8fdb\u5165\u6b65\u9aa44.\n+4. \u5bf9\u5f53\u524d\u8282\u70b9\u8c03\u7528 mergeSingleFilters() \u65b9\u6cd5\u83b7\u5f97\u5f53\u524d\u8282\u70b9\u5185\u5b50\u8282\u70b9\u8868\u793a\u7684\u8def\u5f84\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u8be5\u64cd\u4f5c\u4f1a\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u5408\u5e76\uff0c\u540c\u65f6\u4fdd\u7559\u8def\u5f84\u975e null \u5b50\u8282\u70b9\u3002\n+5. \u5c06\u5269\u4f59\u7684\u8def\u5f84\u4e3a null \u7684\u8282\u70b9\u4f9d\u6b21\u8bbe\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\n+\n+mergeSingleFilter() \u65b9\u6cd5\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u5c06\u751f\u6210\u65b0\u7684 FilterOperator \u4f5c\u4e3a\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u64cd\u4f5c\u7b26\u7c7b\u578b\u4e0e\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u76f8\u540c\uff0c\u518d\u5c06\u90a3\u4e9b\u8def\u5f84\u76f8\u540c\u7684\u5b50\u8282\u70b9\u8bbe\u4e3a\u65b0\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u6700\u540e\u8fd4\u56de\u5b50\u8282\u70b9\u4e2d\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u4f8b\u5982\uff0c\u4e0b\u56fe\u8868\u793a\u5408\u5e76\u540c\u8def\u5f84\u8fc7\u6ee4\u6761\u4ef6\u7684\u8fc7\u7a0b\uff08\u5706\u5f62\u8868\u793a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u957f\u65b9\u5f62\u8868\u793a\u53f6\u5b50\u8282\u70b9\u3002\u5192\u53f7\u524d\u8868\u793a\u8282\u70b9\u7684\u7c7b\u522b\u6216\u8fc7\u6ee4\u6761\u4ef6\uff0c\u5192\u53f7\u540e\u8868\u793a\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u8def\u5f84\uff09\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74820835-a5eb6780-533d-11ea-8173-6591e69fab5a.jpg)\n+\n+### \u4e3e\u4f8b\u8bf4\u660e\n+\n+\u5047\u8bbe\u8f93\u5165\u7684 SQL \u8bed\u53e5\u4e3a <center>SELECT * FROM root.v0.d0 WHERE (NOT time<200) AND (s1 < 10 OR s2 > 50 OR s1 > 20)</center>\n+\n+\u5219\u751f\u6210\u7684\u9009\u62e9\u6761\u4ef6\u6811\u72b6\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74821007-e8ad3f80-533d-11ea-9b5e-7565cf2d4fc3.jpg)\n+\n ## \u7269\u7406\u8ba1\u5212\u751f\u6210\u5668\n \n * org.apache.iotdb.db.qp.strategy.PhysicalGenerator\n \n+### TransformToPhysicalPlan()\n+\n+PhysicalGenerator \u7c7b\u4e2d\u7684 transformToPhysicalPlan() \u65b9\u6cd5\u5c06 Planner \u4e2d\u751f\u6210\u7684\u903b\u8f91\u8ba1\u5212\u8f6c\u5316\u4e3a\u7269\u7406\u8ba1\u5212\u3002\u5176\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+```java\n+PhysicalPlan transformToPhysicalPlan(Operator operator)\n+\u8f93\u5165\uff1aPlanner \u4e2d\u7ecf\u8fc7\u4f18\u5316\u7684\u903b\u8f91\u8ba1\u5212 operator\n+\u8f93\u51fa\uff1a\u901a\u8fc7\u89e3\u6790 operator \u751f\u6210\u7684\u7269\u7406\u8ba1\u5212\n+```\n+\n+transformToPhysicalPlan() \u65b9\u6cd5\u7684\u903b\u8f91\u8f83\u4e3a\u7b80\u5355\uff0c\u5373\u901a\u8fc7 operator.getType() \u65b9\u6cd5\u5224\u65ad\u903b\u8f91\u8ba1\u5212\u7684\u7c7b\u578b\uff0c\u7136\u540e\u521b\u5efa\u76f8\u5bf9\u5e94\u7684\u7269\u7406\u8ba1\u5212\u3002\n+\n+\u5176\u4e2d\u53ea\u6709 Query \u7c7b\u578b\u9700\u8981\u989d\u5916\u8c03\u7528 transformQuery() \u65b9\u6cd5\u8fdb\u884c\u8fdb\u4e00\u6b65\u8f6c\u5316\uff0c\u5176\u4f59\u7c7b\u578b\u5747\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u7269\u7406\u8ba1\u5212\u3002\n+\n+#### TransformQuery()\n+\n+transformQuery() \u65b9\u6cd5\u4e3b\u8981\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u539f\u59cb\u6570\u636e\u67e5\u8be2 RawDataQueryPlan \u7684\u8f6c\u5316\uff08\u6309\u65f6\u95f4\u5bf9\u9f50\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u6309\u8bbe\u5907\u5bf9\u9f50 AlignByDevicePlan \u7684\u8f6c\u5316\u3002\n+\n+RawDataQueryPlan \u6709\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5206\u522b\u4e3a GroupByPlan\u3001FillQueryPlan \u548c AggregationPlan\u3002\u5728\u5206\u5f00\u5904\u7406 RawDataQueryPlan \u548c AlignByDevicePlan \u524d\uff0c\u9996\u5148\u5904\u7406\u8fd9\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5c06\u9700\u8981\u7684\u53c2\u6570\u4fdd\u5b58\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002\n+\n+\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u5176\u4e2d\u8c03\u7528\u4e86 setInterval()\u3001setSlidingStep()\u3001setStartTime()\u3001setEndTime() \u65b9\u6cd5\u5b58\u50a8\u4e86 GroupByPlan \u7684\u65f6\u95f4\u95f4\u9694\u3001\u6b65\u957f\u3001\u5f00\u59cb\u65f6\u95f4\u3001\u7ed3\u675f\u65f6\u95f4\u7b49\u53c2\u6570\u3002\n+\n+##### AlignByDevicePlan \u8f6c\u5316\n+\n+\u9996\u5148\u89e3\u91ca\u4e00\u4e0b AlignByDevicePlan \u4e2d\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\u7684\u4f5c\u7528\u3002\n+\n+- prefixPaths\uff1aFROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\uff0c\u5982 root.*.*, root.sg.d1;\n+- devices\uff1a\u5bf9 prefixPaths \u8fdb\u884c\u53bb\u661f\u548c\u8bbe\u5907\u53bb\u91cd\u540e\u5f97\u5230\u7684\u8bbe\u5907\u5217\u8868;\n+- suffixPaths\uff1aSELECT \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\uff0c\u5982 s0, temperature, *;\n+- measurements\uff1a\u5b58\u50a8\u5b9e\u9645\u5b58\u5728\u4e14\u975e\u5e38\u91cf\u7684 Measurement\uff0c\u5728 measurementSetOfGivenSuffix \u6240\u4e3e\u793a\u4f8b\u4e2d\uff0cmeasurements = [s1,s2,s3,s1];\n+- deviceToMeasurementsMap\uff1a\u5b58\u50a8\u6bcf\u4e2a\u8bbe\u5907\u5bf9\u5e94\u7684 measurements;\n+- dataTypeConsistencyChecker\uff1a\u68c0\u9a8c\u4e0d\u540c\u8bbe\u5907\u7684\u540c\u540d Measurement \u7684\u6570\u636e\u7c7b\u578b\u4e00\u81f4\u6027\uff0c\u5982 root.sg1.d1.s0 \u4e3a INT32 \u7c7b\u578b\u800c root.sg2.d3.s0 \u4e3a FLOAT \u7c7b\u578b\u5219\u4e0d\u6ee1\u8db3\u4e00\u81f4\u6027;\n+- loc\uff1a\u6807\u8bb0\u5f53\u524d Measurement \u5728 SELECT \u540e\u7f00\u8def\u5f84\u4e2d\u7684\u4f4d\u7f6e;\n+- nonExistMeasurement\uff1a\u5b58\u50a8\u4e0d\u5b58\u5728\u7684 Measurement\uff0c\u6ce8\u610f\u5176\u5b9a\u4e49\u4f4d\u7f6e\u5728\u7b2c\u4e00\u5c42 suffixPaths \u5faa\u73af\uff0c\u4e14\u4e3a Set \u7c7b\u578b\uff0c\u76ee\u7684\u662f\u4e0d\u5bf9\u540c\u4e00\u4e2a suffix \u4e0b\u7684\u91cd\u590d Measurement \u6dfb\u52a0\u91cd\u590d\u8bb0\u5f55\uff0c\u4f46\u53ef\u4ee5\u5bf9\u591a\u6b21\u51fa\u73b0\u7684\u540c\u540d suffix \u589e\u52a0\u8bb0\u5f55\u3002\u5176\u5c06\u5728\u4e00\u4e2a suffix \u5faa\u73af\u7ed3\u675f\u540e\u5c06 Set \u96c6\u5408\u5185\u7684\u5143\u7d20\u4e00\u8d77\u6dfb\u52a0\u5230 AlignByDevicePlan \u4e2d;\n+- measurementSetOfGivenSuffix\uff1a\u8bb0\u5f55\u8be5 suffix \u5bf9\u5e94\u7684 measurements\uff0c\u5982 select *,s1 from root.sg.d0, root.sg.d1\uff0c\u5bf9\u4e8e\u540e\u7f00 *, measurementSetOfGivenSuffix = {s1,s2,s3}\uff0c\u5bf9\u4e8e\u540e\u7f00 s1, measurementSetOfGivenSuffix = {s1};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3OTA4Nw=="}, "originalCommit": {"oid": "d9e50163fa68fd24c8cd7fd9e1f5a194c6d85169"}, "originalPosition": 195}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDM5NTU5OnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMjo0MzoxM1rOFtJF6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwMzo1NDo0M1rOFtOHpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3OTIxMQ==", "bodyText": "\u5148\u4ecb\u7ecd AlignByDevicePlan \u5bf9\u5e94\u8bbe\u5907\u8868  time device  s1 s2 s3...", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382879211", "createdAt": "2020-02-22T02:43:13Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        1. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        2. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        3. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunction() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u5b50\u5408\u53d6\u5f0f Operator \u5408\u5e76\u4e3a\u4e00\u4e2a\u5408\u53d6\u5f0f\uff0c\u4f8b\u5982\uff1a(a and b) merge (c) -> (a and b and c)\n+\n+\n+### MergeSingleFilterOptimizer\n+\n+\n+MergeSingleFilterOptimizer \u7c7b\u4e3b\u8981\u901a\u8fc7 mergeSamePathFilter() \u65b9\u6cd5\u5bf9\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Path mergeSamePathFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u6362\uff08\u5408\u5e76\uff09\u7684 Filter\n+    \u8f93\u51fa\uff1a\u5904\u7406\u540e\uff08\u5408\u5e76\uff09\u7684 Filter\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u4e2d\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5bf9\u5f53\u524d\u8282\u70b9\u4f9d\u6b21\u9012\u5f52\u5730\u4f7f\u7528 mergeSamePathFilter() \u65b9\u6cd5\u8bbf\u95ee\u5b50\u8282\u70b9\u5e76\u83b7\u53d6\u5b50\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\uff0c\u5982\u679c\u5b50\u8282\u70b9\u8def\u5f84\u4e0d\u540c\uff0c\u5219\u5c06\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\u8bbe\u4e3a null\uff0c\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8bbe\u4e3a\u5b50\u8282\u70b9\u7684\u516c\u5171\u8def\u5f84\uff0c\u5e76\u8fd4\u56de\u8be5\u8def\u5f84\u3002\n+3. \u5982\u679c\u5b50\u8282\u70b9\u5747\u4e3a BasicFunctionOperator\uff0c\u5219\u5bf9\u5b50\u8282\u70b9\u6309\u7167\u8def\u5f84\u8fdb\u884c\u6392\u5e8f\u3002\u8fdb\u5165\u6b65\u9aa44.\n+4. \u5bf9\u5f53\u524d\u8282\u70b9\u8c03\u7528 mergeSingleFilters() \u65b9\u6cd5\u83b7\u5f97\u5f53\u524d\u8282\u70b9\u5185\u5b50\u8282\u70b9\u8868\u793a\u7684\u8def\u5f84\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u8be5\u64cd\u4f5c\u4f1a\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u5408\u5e76\uff0c\u540c\u65f6\u4fdd\u7559\u8def\u5f84\u975e null \u5b50\u8282\u70b9\u3002\n+5. \u5c06\u5269\u4f59\u7684\u8def\u5f84\u4e3a null \u7684\u8282\u70b9\u4f9d\u6b21\u8bbe\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\n+\n+mergeSingleFilter() \u65b9\u6cd5\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u5c06\u751f\u6210\u65b0\u7684 FilterOperator \u4f5c\u4e3a\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u64cd\u4f5c\u7b26\u7c7b\u578b\u4e0e\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u76f8\u540c\uff0c\u518d\u5c06\u90a3\u4e9b\u8def\u5f84\u76f8\u540c\u7684\u5b50\u8282\u70b9\u8bbe\u4e3a\u65b0\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u6700\u540e\u8fd4\u56de\u5b50\u8282\u70b9\u4e2d\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u4f8b\u5982\uff0c\u4e0b\u56fe\u8868\u793a\u5408\u5e76\u540c\u8def\u5f84\u8fc7\u6ee4\u6761\u4ef6\u7684\u8fc7\u7a0b\uff08\u5706\u5f62\u8868\u793a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u957f\u65b9\u5f62\u8868\u793a\u53f6\u5b50\u8282\u70b9\u3002\u5192\u53f7\u524d\u8868\u793a\u8282\u70b9\u7684\u7c7b\u522b\u6216\u8fc7\u6ee4\u6761\u4ef6\uff0c\u5192\u53f7\u540e\u8868\u793a\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u8def\u5f84\uff09\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74820835-a5eb6780-533d-11ea-8173-6591e69fab5a.jpg)\n+\n+### \u4e3e\u4f8b\u8bf4\u660e\n+\n+\u5047\u8bbe\u8f93\u5165\u7684 SQL \u8bed\u53e5\u4e3a <center>SELECT * FROM root.v0.d0 WHERE (NOT time<200) AND (s1 < 10 OR s2 > 50 OR s1 > 20)</center>\n+\n+\u5219\u751f\u6210\u7684\u9009\u62e9\u6761\u4ef6\u6811\u72b6\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74821007-e8ad3f80-533d-11ea-9b5e-7565cf2d4fc3.jpg)\n+\n ## \u7269\u7406\u8ba1\u5212\u751f\u6210\u5668\n \n * org.apache.iotdb.db.qp.strategy.PhysicalGenerator\n \n+### TransformToPhysicalPlan()\n+\n+PhysicalGenerator \u7c7b\u4e2d\u7684 transformToPhysicalPlan() \u65b9\u6cd5\u5c06 Planner \u4e2d\u751f\u6210\u7684\u903b\u8f91\u8ba1\u5212\u8f6c\u5316\u4e3a\u7269\u7406\u8ba1\u5212\u3002\u5176\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+```java\n+PhysicalPlan transformToPhysicalPlan(Operator operator)\n+\u8f93\u5165\uff1aPlanner \u4e2d\u7ecf\u8fc7\u4f18\u5316\u7684\u903b\u8f91\u8ba1\u5212 operator\n+\u8f93\u51fa\uff1a\u901a\u8fc7\u89e3\u6790 operator \u751f\u6210\u7684\u7269\u7406\u8ba1\u5212\n+```\n+\n+transformToPhysicalPlan() \u65b9\u6cd5\u7684\u903b\u8f91\u8f83\u4e3a\u7b80\u5355\uff0c\u5373\u901a\u8fc7 operator.getType() \u65b9\u6cd5\u5224\u65ad\u903b\u8f91\u8ba1\u5212\u7684\u7c7b\u578b\uff0c\u7136\u540e\u521b\u5efa\u76f8\u5bf9\u5e94\u7684\u7269\u7406\u8ba1\u5212\u3002\n+\n+\u5176\u4e2d\u53ea\u6709 Query \u7c7b\u578b\u9700\u8981\u989d\u5916\u8c03\u7528 transformQuery() \u65b9\u6cd5\u8fdb\u884c\u8fdb\u4e00\u6b65\u8f6c\u5316\uff0c\u5176\u4f59\u7c7b\u578b\u5747\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u7269\u7406\u8ba1\u5212\u3002\n+\n+#### TransformQuery()\n+\n+transformQuery() \u65b9\u6cd5\u4e3b\u8981\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u539f\u59cb\u6570\u636e\u67e5\u8be2 RawDataQueryPlan \u7684\u8f6c\u5316\uff08\u6309\u65f6\u95f4\u5bf9\u9f50\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u6309\u8bbe\u5907\u5bf9\u9f50 AlignByDevicePlan \u7684\u8f6c\u5316\u3002\n+\n+RawDataQueryPlan \u6709\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5206\u522b\u4e3a GroupByPlan\u3001FillQueryPlan \u548c AggregationPlan\u3002\u5728\u5206\u5f00\u5904\u7406 RawDataQueryPlan \u548c AlignByDevicePlan \u524d\uff0c\u9996\u5148\u5904\u7406\u8fd9\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5c06\u9700\u8981\u7684\u53c2\u6570\u4fdd\u5b58\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002\n+\n+\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u5176\u4e2d\u8c03\u7528\u4e86 setInterval()\u3001setSlidingStep()\u3001setStartTime()\u3001setEndTime() \u65b9\u6cd5\u5b58\u50a8\u4e86 GroupByPlan \u7684\u65f6\u95f4\u95f4\u9694\u3001\u6b65\u957f\u3001\u5f00\u59cb\u65f6\u95f4\u3001\u7ed3\u675f\u65f6\u95f4\u7b49\u53c2\u6570\u3002\n+\n+##### AlignByDevicePlan \u8f6c\u5316", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9e50163fa68fd24c8cd7fd9e1f5a194c6d85169"}, "originalPosition": 183}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2MTU3Mg==", "bodyText": "\u6dfb\u52a0\u5566", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382961572", "createdAt": "2020-02-23T03:54:43Z", "author": {"login": "Alima777"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        1. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        2. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        3. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunction() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u5b50\u5408\u53d6\u5f0f Operator \u5408\u5e76\u4e3a\u4e00\u4e2a\u5408\u53d6\u5f0f\uff0c\u4f8b\u5982\uff1a(a and b) merge (c) -> (a and b and c)\n+\n+\n+### MergeSingleFilterOptimizer\n+\n+\n+MergeSingleFilterOptimizer \u7c7b\u4e3b\u8981\u901a\u8fc7 mergeSamePathFilter() \u65b9\u6cd5\u5bf9\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Path mergeSamePathFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u6362\uff08\u5408\u5e76\uff09\u7684 Filter\n+    \u8f93\u51fa\uff1a\u5904\u7406\u540e\uff08\u5408\u5e76\uff09\u7684 Filter\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u4e2d\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5bf9\u5f53\u524d\u8282\u70b9\u4f9d\u6b21\u9012\u5f52\u5730\u4f7f\u7528 mergeSamePathFilter() \u65b9\u6cd5\u8bbf\u95ee\u5b50\u8282\u70b9\u5e76\u83b7\u53d6\u5b50\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\uff0c\u5982\u679c\u5b50\u8282\u70b9\u8def\u5f84\u4e0d\u540c\uff0c\u5219\u5c06\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\u8bbe\u4e3a null\uff0c\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8bbe\u4e3a\u5b50\u8282\u70b9\u7684\u516c\u5171\u8def\u5f84\uff0c\u5e76\u8fd4\u56de\u8be5\u8def\u5f84\u3002\n+3. \u5982\u679c\u5b50\u8282\u70b9\u5747\u4e3a BasicFunctionOperator\uff0c\u5219\u5bf9\u5b50\u8282\u70b9\u6309\u7167\u8def\u5f84\u8fdb\u884c\u6392\u5e8f\u3002\u8fdb\u5165\u6b65\u9aa44.\n+4. \u5bf9\u5f53\u524d\u8282\u70b9\u8c03\u7528 mergeSingleFilters() \u65b9\u6cd5\u83b7\u5f97\u5f53\u524d\u8282\u70b9\u5185\u5b50\u8282\u70b9\u8868\u793a\u7684\u8def\u5f84\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u8be5\u64cd\u4f5c\u4f1a\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u5408\u5e76\uff0c\u540c\u65f6\u4fdd\u7559\u8def\u5f84\u975e null \u5b50\u8282\u70b9\u3002\n+5. \u5c06\u5269\u4f59\u7684\u8def\u5f84\u4e3a null \u7684\u8282\u70b9\u4f9d\u6b21\u8bbe\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\n+\n+mergeSingleFilter() \u65b9\u6cd5\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u5c06\u751f\u6210\u65b0\u7684 FilterOperator \u4f5c\u4e3a\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u64cd\u4f5c\u7b26\u7c7b\u578b\u4e0e\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u76f8\u540c\uff0c\u518d\u5c06\u90a3\u4e9b\u8def\u5f84\u76f8\u540c\u7684\u5b50\u8282\u70b9\u8bbe\u4e3a\u65b0\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u6700\u540e\u8fd4\u56de\u5b50\u8282\u70b9\u4e2d\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u4f8b\u5982\uff0c\u4e0b\u56fe\u8868\u793a\u5408\u5e76\u540c\u8def\u5f84\u8fc7\u6ee4\u6761\u4ef6\u7684\u8fc7\u7a0b\uff08\u5706\u5f62\u8868\u793a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u957f\u65b9\u5f62\u8868\u793a\u53f6\u5b50\u8282\u70b9\u3002\u5192\u53f7\u524d\u8868\u793a\u8282\u70b9\u7684\u7c7b\u522b\u6216\u8fc7\u6ee4\u6761\u4ef6\uff0c\u5192\u53f7\u540e\u8868\u793a\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u8def\u5f84\uff09\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74820835-a5eb6780-533d-11ea-8173-6591e69fab5a.jpg)\n+\n+### \u4e3e\u4f8b\u8bf4\u660e\n+\n+\u5047\u8bbe\u8f93\u5165\u7684 SQL \u8bed\u53e5\u4e3a <center>SELECT * FROM root.v0.d0 WHERE (NOT time<200) AND (s1 < 10 OR s2 > 50 OR s1 > 20)</center>\n+\n+\u5219\u751f\u6210\u7684\u9009\u62e9\u6761\u4ef6\u6811\u72b6\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74821007-e8ad3f80-533d-11ea-9b5e-7565cf2d4fc3.jpg)\n+\n ## \u7269\u7406\u8ba1\u5212\u751f\u6210\u5668\n \n * org.apache.iotdb.db.qp.strategy.PhysicalGenerator\n \n+### TransformToPhysicalPlan()\n+\n+PhysicalGenerator \u7c7b\u4e2d\u7684 transformToPhysicalPlan() \u65b9\u6cd5\u5c06 Planner \u4e2d\u751f\u6210\u7684\u903b\u8f91\u8ba1\u5212\u8f6c\u5316\u4e3a\u7269\u7406\u8ba1\u5212\u3002\u5176\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+```java\n+PhysicalPlan transformToPhysicalPlan(Operator operator)\n+\u8f93\u5165\uff1aPlanner \u4e2d\u7ecf\u8fc7\u4f18\u5316\u7684\u903b\u8f91\u8ba1\u5212 operator\n+\u8f93\u51fa\uff1a\u901a\u8fc7\u89e3\u6790 operator \u751f\u6210\u7684\u7269\u7406\u8ba1\u5212\n+```\n+\n+transformToPhysicalPlan() \u65b9\u6cd5\u7684\u903b\u8f91\u8f83\u4e3a\u7b80\u5355\uff0c\u5373\u901a\u8fc7 operator.getType() \u65b9\u6cd5\u5224\u65ad\u903b\u8f91\u8ba1\u5212\u7684\u7c7b\u578b\uff0c\u7136\u540e\u521b\u5efa\u76f8\u5bf9\u5e94\u7684\u7269\u7406\u8ba1\u5212\u3002\n+\n+\u5176\u4e2d\u53ea\u6709 Query \u7c7b\u578b\u9700\u8981\u989d\u5916\u8c03\u7528 transformQuery() \u65b9\u6cd5\u8fdb\u884c\u8fdb\u4e00\u6b65\u8f6c\u5316\uff0c\u5176\u4f59\u7c7b\u578b\u5747\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u7269\u7406\u8ba1\u5212\u3002\n+\n+#### TransformQuery()\n+\n+transformQuery() \u65b9\u6cd5\u4e3b\u8981\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u539f\u59cb\u6570\u636e\u67e5\u8be2 RawDataQueryPlan \u7684\u8f6c\u5316\uff08\u6309\u65f6\u95f4\u5bf9\u9f50\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u6309\u8bbe\u5907\u5bf9\u9f50 AlignByDevicePlan \u7684\u8f6c\u5316\u3002\n+\n+RawDataQueryPlan \u6709\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5206\u522b\u4e3a GroupByPlan\u3001FillQueryPlan \u548c AggregationPlan\u3002\u5728\u5206\u5f00\u5904\u7406 RawDataQueryPlan \u548c AlignByDevicePlan \u524d\uff0c\u9996\u5148\u5904\u7406\u8fd9\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5c06\u9700\u8981\u7684\u53c2\u6570\u4fdd\u5b58\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002\n+\n+\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u5176\u4e2d\u8c03\u7528\u4e86 setInterval()\u3001setSlidingStep()\u3001setStartTime()\u3001setEndTime() \u65b9\u6cd5\u5b58\u50a8\u4e86 GroupByPlan \u7684\u65f6\u95f4\u95f4\u9694\u3001\u6b65\u957f\u3001\u5f00\u59cb\u65f6\u95f4\u3001\u7ed3\u675f\u65f6\u95f4\u7b49\u53c2\u6570\u3002\n+\n+##### AlignByDevicePlan \u8f6c\u5316", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3OTIxMQ=="}, "originalCommit": {"oid": "d9e50163fa68fd24c8cd7fd9e1f5a194c6d85169"}, "originalPosition": 183}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDM5NzEyOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMjo0NjoyNFrOFtJGuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNDowODo0MFrOFtOJ3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3OTQxNw==", "bodyText": "\u5728\u524d\u8fb9\u4ecb\u7ecd\u4e00\u4e0b\u4e00\u5171\u6709\u51e0\u79cd Measurement\uff0c  \u5e94\u8be5\u6709 4 \u79cd\u5427 \uff0c\u5b58\u5728\u7684\u786e\u5b9a\u7684 s1\uff0c\u4e0d\u5b58\u5728\u7684 s2\uff0c*\uff0c \u5e38\u91cf \"a\"\uff0c\u8fd9\u91cc\u5206\u522b\u4ecb\u7ecd4\u4e2d\u600e\u4e48\u5904\u7406", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382879417", "createdAt": "2020-02-22T02:46:24Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        1. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        2. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        3. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunction() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u5b50\u5408\u53d6\u5f0f Operator \u5408\u5e76\u4e3a\u4e00\u4e2a\u5408\u53d6\u5f0f\uff0c\u4f8b\u5982\uff1a(a and b) merge (c) -> (a and b and c)\n+\n+\n+### MergeSingleFilterOptimizer\n+\n+\n+MergeSingleFilterOptimizer \u7c7b\u4e3b\u8981\u901a\u8fc7 mergeSamePathFilter() \u65b9\u6cd5\u5bf9\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Path mergeSamePathFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u6362\uff08\u5408\u5e76\uff09\u7684 Filter\n+    \u8f93\u51fa\uff1a\u5904\u7406\u540e\uff08\u5408\u5e76\uff09\u7684 Filter\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u4e2d\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5bf9\u5f53\u524d\u8282\u70b9\u4f9d\u6b21\u9012\u5f52\u5730\u4f7f\u7528 mergeSamePathFilter() \u65b9\u6cd5\u8bbf\u95ee\u5b50\u8282\u70b9\u5e76\u83b7\u53d6\u5b50\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\uff0c\u5982\u679c\u5b50\u8282\u70b9\u8def\u5f84\u4e0d\u540c\uff0c\u5219\u5c06\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\u8bbe\u4e3a null\uff0c\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8bbe\u4e3a\u5b50\u8282\u70b9\u7684\u516c\u5171\u8def\u5f84\uff0c\u5e76\u8fd4\u56de\u8be5\u8def\u5f84\u3002\n+3. \u5982\u679c\u5b50\u8282\u70b9\u5747\u4e3a BasicFunctionOperator\uff0c\u5219\u5bf9\u5b50\u8282\u70b9\u6309\u7167\u8def\u5f84\u8fdb\u884c\u6392\u5e8f\u3002\u8fdb\u5165\u6b65\u9aa44.\n+4. \u5bf9\u5f53\u524d\u8282\u70b9\u8c03\u7528 mergeSingleFilters() \u65b9\u6cd5\u83b7\u5f97\u5f53\u524d\u8282\u70b9\u5185\u5b50\u8282\u70b9\u8868\u793a\u7684\u8def\u5f84\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u8be5\u64cd\u4f5c\u4f1a\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u5408\u5e76\uff0c\u540c\u65f6\u4fdd\u7559\u8def\u5f84\u975e null \u5b50\u8282\u70b9\u3002\n+5. \u5c06\u5269\u4f59\u7684\u8def\u5f84\u4e3a null \u7684\u8282\u70b9\u4f9d\u6b21\u8bbe\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\n+\n+mergeSingleFilter() \u65b9\u6cd5\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u5c06\u751f\u6210\u65b0\u7684 FilterOperator \u4f5c\u4e3a\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u64cd\u4f5c\u7b26\u7c7b\u578b\u4e0e\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u76f8\u540c\uff0c\u518d\u5c06\u90a3\u4e9b\u8def\u5f84\u76f8\u540c\u7684\u5b50\u8282\u70b9\u8bbe\u4e3a\u65b0\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u6700\u540e\u8fd4\u56de\u5b50\u8282\u70b9\u4e2d\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u4f8b\u5982\uff0c\u4e0b\u56fe\u8868\u793a\u5408\u5e76\u540c\u8def\u5f84\u8fc7\u6ee4\u6761\u4ef6\u7684\u8fc7\u7a0b\uff08\u5706\u5f62\u8868\u793a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u957f\u65b9\u5f62\u8868\u793a\u53f6\u5b50\u8282\u70b9\u3002\u5192\u53f7\u524d\u8868\u793a\u8282\u70b9\u7684\u7c7b\u522b\u6216\u8fc7\u6ee4\u6761\u4ef6\uff0c\u5192\u53f7\u540e\u8868\u793a\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u8def\u5f84\uff09\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74820835-a5eb6780-533d-11ea-8173-6591e69fab5a.jpg)\n+\n+### \u4e3e\u4f8b\u8bf4\u660e\n+\n+\u5047\u8bbe\u8f93\u5165\u7684 SQL \u8bed\u53e5\u4e3a <center>SELECT * FROM root.v0.d0 WHERE (NOT time<200) AND (s1 < 10 OR s2 > 50 OR s1 > 20)</center>\n+\n+\u5219\u751f\u6210\u7684\u9009\u62e9\u6761\u4ef6\u6811\u72b6\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74821007-e8ad3f80-533d-11ea-9b5e-7565cf2d4fc3.jpg)\n+\n ## \u7269\u7406\u8ba1\u5212\u751f\u6210\u5668\n \n * org.apache.iotdb.db.qp.strategy.PhysicalGenerator\n \n+### TransformToPhysicalPlan()\n+\n+PhysicalGenerator \u7c7b\u4e2d\u7684 transformToPhysicalPlan() \u65b9\u6cd5\u5c06 Planner \u4e2d\u751f\u6210\u7684\u903b\u8f91\u8ba1\u5212\u8f6c\u5316\u4e3a\u7269\u7406\u8ba1\u5212\u3002\u5176\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+```java\n+PhysicalPlan transformToPhysicalPlan(Operator operator)\n+\u8f93\u5165\uff1aPlanner \u4e2d\u7ecf\u8fc7\u4f18\u5316\u7684\u903b\u8f91\u8ba1\u5212 operator\n+\u8f93\u51fa\uff1a\u901a\u8fc7\u89e3\u6790 operator \u751f\u6210\u7684\u7269\u7406\u8ba1\u5212\n+```\n+\n+transformToPhysicalPlan() \u65b9\u6cd5\u7684\u903b\u8f91\u8f83\u4e3a\u7b80\u5355\uff0c\u5373\u901a\u8fc7 operator.getType() \u65b9\u6cd5\u5224\u65ad\u903b\u8f91\u8ba1\u5212\u7684\u7c7b\u578b\uff0c\u7136\u540e\u521b\u5efa\u76f8\u5bf9\u5e94\u7684\u7269\u7406\u8ba1\u5212\u3002\n+\n+\u5176\u4e2d\u53ea\u6709 Query \u7c7b\u578b\u9700\u8981\u989d\u5916\u8c03\u7528 transformQuery() \u65b9\u6cd5\u8fdb\u884c\u8fdb\u4e00\u6b65\u8f6c\u5316\uff0c\u5176\u4f59\u7c7b\u578b\u5747\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u7269\u7406\u8ba1\u5212\u3002\n+\n+#### TransformQuery()\n+\n+transformQuery() \u65b9\u6cd5\u4e3b\u8981\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u539f\u59cb\u6570\u636e\u67e5\u8be2 RawDataQueryPlan \u7684\u8f6c\u5316\uff08\u6309\u65f6\u95f4\u5bf9\u9f50\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u6309\u8bbe\u5907\u5bf9\u9f50 AlignByDevicePlan \u7684\u8f6c\u5316\u3002\n+\n+RawDataQueryPlan \u6709\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5206\u522b\u4e3a GroupByPlan\u3001FillQueryPlan \u548c AggregationPlan\u3002\u5728\u5206\u5f00\u5904\u7406 RawDataQueryPlan \u548c AlignByDevicePlan \u524d\uff0c\u9996\u5148\u5904\u7406\u8fd9\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5c06\u9700\u8981\u7684\u53c2\u6570\u4fdd\u5b58\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002\n+\n+\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u5176\u4e2d\u8c03\u7528\u4e86 setInterval()\u3001setSlidingStep()\u3001setStartTime()\u3001setEndTime() \u65b9\u6cd5\u5b58\u50a8\u4e86 GroupByPlan \u7684\u65f6\u95f4\u95f4\u9694\u3001\u6b65\u957f\u3001\u5f00\u59cb\u65f6\u95f4\u3001\u7ed3\u675f\u65f6\u95f4\u7b49\u53c2\u6570\u3002\n+\n+##### AlignByDevicePlan \u8f6c\u5316\n+\n+\u9996\u5148\u89e3\u91ca\u4e00\u4e0b AlignByDevicePlan \u4e2d\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\u7684\u4f5c\u7528\u3002\n+\n+- prefixPaths\uff1aFROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\uff0c\u5982 root.*.*, root.sg.d1;\n+- devices\uff1a\u5bf9 prefixPaths \u8fdb\u884c\u53bb\u661f\u548c\u8bbe\u5907\u53bb\u91cd\u540e\u5f97\u5230\u7684\u8bbe\u5907\u5217\u8868;\n+- suffixPaths\uff1aSELECT \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\uff0c\u5982 s0, temperature, *;\n+- measurements\uff1a\u5b58\u50a8\u5b9e\u9645\u5b58\u5728\u4e14\u975e\u5e38\u91cf\u7684 Measurement\uff0c\u5728 measurementSetOfGivenSuffix \u6240\u4e3e\u793a\u4f8b\u4e2d\uff0cmeasurements = [s1,s2,s3,s1];\n+- deviceToMeasurementsMap\uff1a\u5b58\u50a8\u6bcf\u4e2a\u8bbe\u5907\u5bf9\u5e94\u7684 measurements;\n+- dataTypeConsistencyChecker\uff1a\u68c0\u9a8c\u4e0d\u540c\u8bbe\u5907\u7684\u540c\u540d Measurement \u7684\u6570\u636e\u7c7b\u578b\u4e00\u81f4\u6027\uff0c\u5982 root.sg1.d1.s0 \u4e3a INT32 \u7c7b\u578b\u800c root.sg2.d3.s0 \u4e3a FLOAT \u7c7b\u578b\u5219\u4e0d\u6ee1\u8db3\u4e00\u81f4\u6027;\n+- loc\uff1a\u6807\u8bb0\u5f53\u524d Measurement \u5728 SELECT \u540e\u7f00\u8def\u5f84\u4e2d\u7684\u4f4d\u7f6e;\n+- nonExistMeasurement\uff1a\u5b58\u50a8\u4e0d\u5b58\u5728\u7684 Measurement\uff0c\u6ce8\u610f\u5176\u5b9a\u4e49\u4f4d\u7f6e\u5728\u7b2c\u4e00\u5c42 suffixPaths \u5faa\u73af\uff0c\u4e14\u4e3a Set \u7c7b\u578b\uff0c\u76ee\u7684\u662f\u4e0d\u5bf9\u540c\u4e00\u4e2a suffix \u4e0b\u7684\u91cd\u590d Measurement \u6dfb\u52a0\u91cd\u590d\u8bb0\u5f55\uff0c\u4f46\u53ef\u4ee5\u5bf9\u591a\u6b21\u51fa\u73b0\u7684\u540c\u540d suffix \u589e\u52a0\u8bb0\u5f55\u3002\u5176\u5c06\u5728\u4e00\u4e2a suffix \u5faa\u73af\u7ed3\u675f\u540e\u5c06 Set \u96c6\u5408\u5185\u7684\u5143\u7d20\u4e00\u8d77\u6dfb\u52a0\u5230 AlignByDevicePlan \u4e2d;\n+- measurementSetOfGivenSuffix\uff1a\u8bb0\u5f55\u8be5 suffix \u5bf9\u5e94\u7684 measurements\uff0c\u5982 select *,s1 from root.sg.d0, root.sg.d1\uff0c\u5bf9\u4e8e\u540e\u7f00 *, measurementSetOfGivenSuffix = {s1,s2,s3}\uff0c\u5bf9\u4e8e\u540e\u7f00 s1, measurementSetOfGivenSuffix = {s1};\n+\n+\u63a5\u4e0b\u6765\u4ecb\u7ecd AlignByDevicePlan \u7684\u8f6c\u5316\u8fc7\u7a0b\uff1a\n+\n+\u4e3a\u4e86\u907f\u514d\u5197\u4f59\uff0cAlignByDevicePlan \u5c06 GroupByPlan \u7b49\u4e09\u4e2a\u5b50\u7c7b\u67e5\u8be2\u8bbe\u7f6e\u4e3a\u5176\u4e2d\u7684\u53d8\u91cf\u800c\u975e\u5176\u5b50\u7c7b\uff0c\u56e0\u6b64\u5982\u679c\u67e5\u8be2\u7c7b\u578b\u662f\u4e09\u79cd\u5b50\u7c7b\u67e5\u8be2\uff0c\u5219\u9700\u8981\u5148\u5bf9 AlignByDevicePlan \u4e2d\u7684\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c\uff0c\u5e76\u4fee\u6539\u5176\u5bf9\u5e94\u7684\u67e5\u8be2\u7c7b\u578b\u3002\n+\n+\u540c\u6837\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u901a\u8fc7\u8c03\u7528 setGroupByPlan() \u65b9\u6cd5\u5bf9 AlignByDevicePlan \u4e2d\u7684 GroupByPlan \u8fdb\u884c\u8d4b\u503c\uff0c\u5e76\u8c03\u7528 setOperatorType(OperatorType.GROUPBY); \u5c06\u67e5\u8be2\u7c7b\u578b\u8bbe\u7f6e\u4e3a\u964d\u9891\u805a\u5408\u67e5\u8be2\u3002\n+\n+\u63a5\u4e0b\u6765\u5bf9 AlignByDevicePlan \u7684\u5904\u7406\u4e3b\u8981\u5305\u62ec\uff1a\n+\n+1. \u9996\u5148\u83b7\u53d6 FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\uff0cSELECT \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\uff0c\u4ee5\u53ca\u5305\u542b\u7684\u805a\u5408\u7c7b\u578b\u3002\u5728\u62ff\u5230\u524d\u7f00\u8def\u5f84 prefixPaths \u65f6\uff0c\u76f4\u63a5\u8c03\u7528 removeStarsInDeviceWithUnique() \u65b9\u6cd5\u5bf9\u524d\u7f00\u8def\u5f84\u8fdb\u884c\u89e3\u6790\u5e76\u53bb\u91cd\uff0c\u6700\u7ec8\u5f97\u5230\u975e\u91cd\u590d\u7684\u8bbe\u5907\u5217\u8868 devices\u3002\n+2. \u7136\u540e\u904d\u5386\u540e\u7f00\u8def\u5f84\u548c\u8bbe\u5907\u5217\u8868\u8fdb\u884c Path \u62fc\u63a5\uff0c\u5e76\u5bf9\u4e09\u79cd\u4e0d\u540c\u7c7b\u578b\u7684 Measurement \u8fdb\u884c\u5904\u7406\uff0c\u540c\u65f6\u8bbe\u7f6e\u53d8\u91cf loc \u6807\u8bb0\u6bcf\u4e2a Measurement \u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002\u5176\u4e2d\uff0c\u5982\u679c\u540e\u7f00\u8def\u5f84\u4ee5\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u5f00\u5934\uff0c\u5219\u5c06\u5176\u5b58\u50a8\u4e3a\u5e38\u91cf constMeasurement\uff1b\u5982\u679c\u62fc\u63a5\u540e\u7684\u8def\u5f84\u4e0d\u5b58\u5728\uff0c\u5219\u5c06\u5176\u5b58\u50a8\u4e3a nonExistMeasurement\uff1b\u5426\u5219\u89c6\u4e3a\u6b63\u5e38 Measurement \u8fdb\u5165\u6b65\u9aa43\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9e50163fa68fd24c8cd7fd9e1f5a194c6d85169"}, "originalPosition": 206}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2MjE0MA==", "bodyText": "\u5df2\u4fee\u6539\u3002", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382962140", "createdAt": "2020-02-23T04:08:40Z", "author": {"login": "Alima777"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        1. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        2. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        3. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunction() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u5b50\u5408\u53d6\u5f0f Operator \u5408\u5e76\u4e3a\u4e00\u4e2a\u5408\u53d6\u5f0f\uff0c\u4f8b\u5982\uff1a(a and b) merge (c) -> (a and b and c)\n+\n+\n+### MergeSingleFilterOptimizer\n+\n+\n+MergeSingleFilterOptimizer \u7c7b\u4e3b\u8981\u901a\u8fc7 mergeSamePathFilter() \u65b9\u6cd5\u5bf9\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Path mergeSamePathFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u6362\uff08\u5408\u5e76\uff09\u7684 Filter\n+    \u8f93\u51fa\uff1a\u5904\u7406\u540e\uff08\u5408\u5e76\uff09\u7684 Filter\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u4e2d\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5bf9\u5f53\u524d\u8282\u70b9\u4f9d\u6b21\u9012\u5f52\u5730\u4f7f\u7528 mergeSamePathFilter() \u65b9\u6cd5\u8bbf\u95ee\u5b50\u8282\u70b9\u5e76\u83b7\u53d6\u5b50\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\uff0c\u5982\u679c\u5b50\u8282\u70b9\u8def\u5f84\u4e0d\u540c\uff0c\u5219\u5c06\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\u8bbe\u4e3a null\uff0c\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8bbe\u4e3a\u5b50\u8282\u70b9\u7684\u516c\u5171\u8def\u5f84\uff0c\u5e76\u8fd4\u56de\u8be5\u8def\u5f84\u3002\n+3. \u5982\u679c\u5b50\u8282\u70b9\u5747\u4e3a BasicFunctionOperator\uff0c\u5219\u5bf9\u5b50\u8282\u70b9\u6309\u7167\u8def\u5f84\u8fdb\u884c\u6392\u5e8f\u3002\u8fdb\u5165\u6b65\u9aa44.\n+4. \u5bf9\u5f53\u524d\u8282\u70b9\u8c03\u7528 mergeSingleFilters() \u65b9\u6cd5\u83b7\u5f97\u5f53\u524d\u8282\u70b9\u5185\u5b50\u8282\u70b9\u8868\u793a\u7684\u8def\u5f84\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u8be5\u64cd\u4f5c\u4f1a\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u5408\u5e76\uff0c\u540c\u65f6\u4fdd\u7559\u8def\u5f84\u975e null \u5b50\u8282\u70b9\u3002\n+5. \u5c06\u5269\u4f59\u7684\u8def\u5f84\u4e3a null \u7684\u8282\u70b9\u4f9d\u6b21\u8bbe\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\n+\n+mergeSingleFilter() \u65b9\u6cd5\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u5c06\u751f\u6210\u65b0\u7684 FilterOperator \u4f5c\u4e3a\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u64cd\u4f5c\u7b26\u7c7b\u578b\u4e0e\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u76f8\u540c\uff0c\u518d\u5c06\u90a3\u4e9b\u8def\u5f84\u76f8\u540c\u7684\u5b50\u8282\u70b9\u8bbe\u4e3a\u65b0\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u6700\u540e\u8fd4\u56de\u5b50\u8282\u70b9\u4e2d\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u4f8b\u5982\uff0c\u4e0b\u56fe\u8868\u793a\u5408\u5e76\u540c\u8def\u5f84\u8fc7\u6ee4\u6761\u4ef6\u7684\u8fc7\u7a0b\uff08\u5706\u5f62\u8868\u793a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u957f\u65b9\u5f62\u8868\u793a\u53f6\u5b50\u8282\u70b9\u3002\u5192\u53f7\u524d\u8868\u793a\u8282\u70b9\u7684\u7c7b\u522b\u6216\u8fc7\u6ee4\u6761\u4ef6\uff0c\u5192\u53f7\u540e\u8868\u793a\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u8def\u5f84\uff09\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74820835-a5eb6780-533d-11ea-8173-6591e69fab5a.jpg)\n+\n+### \u4e3e\u4f8b\u8bf4\u660e\n+\n+\u5047\u8bbe\u8f93\u5165\u7684 SQL \u8bed\u53e5\u4e3a <center>SELECT * FROM root.v0.d0 WHERE (NOT time<200) AND (s1 < 10 OR s2 > 50 OR s1 > 20)</center>\n+\n+\u5219\u751f\u6210\u7684\u9009\u62e9\u6761\u4ef6\u6811\u72b6\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74821007-e8ad3f80-533d-11ea-9b5e-7565cf2d4fc3.jpg)\n+\n ## \u7269\u7406\u8ba1\u5212\u751f\u6210\u5668\n \n * org.apache.iotdb.db.qp.strategy.PhysicalGenerator\n \n+### TransformToPhysicalPlan()\n+\n+PhysicalGenerator \u7c7b\u4e2d\u7684 transformToPhysicalPlan() \u65b9\u6cd5\u5c06 Planner \u4e2d\u751f\u6210\u7684\u903b\u8f91\u8ba1\u5212\u8f6c\u5316\u4e3a\u7269\u7406\u8ba1\u5212\u3002\u5176\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+```java\n+PhysicalPlan transformToPhysicalPlan(Operator operator)\n+\u8f93\u5165\uff1aPlanner \u4e2d\u7ecf\u8fc7\u4f18\u5316\u7684\u903b\u8f91\u8ba1\u5212 operator\n+\u8f93\u51fa\uff1a\u901a\u8fc7\u89e3\u6790 operator \u751f\u6210\u7684\u7269\u7406\u8ba1\u5212\n+```\n+\n+transformToPhysicalPlan() \u65b9\u6cd5\u7684\u903b\u8f91\u8f83\u4e3a\u7b80\u5355\uff0c\u5373\u901a\u8fc7 operator.getType() \u65b9\u6cd5\u5224\u65ad\u903b\u8f91\u8ba1\u5212\u7684\u7c7b\u578b\uff0c\u7136\u540e\u521b\u5efa\u76f8\u5bf9\u5e94\u7684\u7269\u7406\u8ba1\u5212\u3002\n+\n+\u5176\u4e2d\u53ea\u6709 Query \u7c7b\u578b\u9700\u8981\u989d\u5916\u8c03\u7528 transformQuery() \u65b9\u6cd5\u8fdb\u884c\u8fdb\u4e00\u6b65\u8f6c\u5316\uff0c\u5176\u4f59\u7c7b\u578b\u5747\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u7269\u7406\u8ba1\u5212\u3002\n+\n+#### TransformQuery()\n+\n+transformQuery() \u65b9\u6cd5\u4e3b\u8981\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u539f\u59cb\u6570\u636e\u67e5\u8be2 RawDataQueryPlan \u7684\u8f6c\u5316\uff08\u6309\u65f6\u95f4\u5bf9\u9f50\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u6309\u8bbe\u5907\u5bf9\u9f50 AlignByDevicePlan \u7684\u8f6c\u5316\u3002\n+\n+RawDataQueryPlan \u6709\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5206\u522b\u4e3a GroupByPlan\u3001FillQueryPlan \u548c AggregationPlan\u3002\u5728\u5206\u5f00\u5904\u7406 RawDataQueryPlan \u548c AlignByDevicePlan \u524d\uff0c\u9996\u5148\u5904\u7406\u8fd9\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5c06\u9700\u8981\u7684\u53c2\u6570\u4fdd\u5b58\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002\n+\n+\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u5176\u4e2d\u8c03\u7528\u4e86 setInterval()\u3001setSlidingStep()\u3001setStartTime()\u3001setEndTime() \u65b9\u6cd5\u5b58\u50a8\u4e86 GroupByPlan \u7684\u65f6\u95f4\u95f4\u9694\u3001\u6b65\u957f\u3001\u5f00\u59cb\u65f6\u95f4\u3001\u7ed3\u675f\u65f6\u95f4\u7b49\u53c2\u6570\u3002\n+\n+##### AlignByDevicePlan \u8f6c\u5316\n+\n+\u9996\u5148\u89e3\u91ca\u4e00\u4e0b AlignByDevicePlan \u4e2d\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\u7684\u4f5c\u7528\u3002\n+\n+- prefixPaths\uff1aFROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\uff0c\u5982 root.*.*, root.sg.d1;\n+- devices\uff1a\u5bf9 prefixPaths \u8fdb\u884c\u53bb\u661f\u548c\u8bbe\u5907\u53bb\u91cd\u540e\u5f97\u5230\u7684\u8bbe\u5907\u5217\u8868;\n+- suffixPaths\uff1aSELECT \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\uff0c\u5982 s0, temperature, *;\n+- measurements\uff1a\u5b58\u50a8\u5b9e\u9645\u5b58\u5728\u4e14\u975e\u5e38\u91cf\u7684 Measurement\uff0c\u5728 measurementSetOfGivenSuffix \u6240\u4e3e\u793a\u4f8b\u4e2d\uff0cmeasurements = [s1,s2,s3,s1];\n+- deviceToMeasurementsMap\uff1a\u5b58\u50a8\u6bcf\u4e2a\u8bbe\u5907\u5bf9\u5e94\u7684 measurements;\n+- dataTypeConsistencyChecker\uff1a\u68c0\u9a8c\u4e0d\u540c\u8bbe\u5907\u7684\u540c\u540d Measurement \u7684\u6570\u636e\u7c7b\u578b\u4e00\u81f4\u6027\uff0c\u5982 root.sg1.d1.s0 \u4e3a INT32 \u7c7b\u578b\u800c root.sg2.d3.s0 \u4e3a FLOAT \u7c7b\u578b\u5219\u4e0d\u6ee1\u8db3\u4e00\u81f4\u6027;\n+- loc\uff1a\u6807\u8bb0\u5f53\u524d Measurement \u5728 SELECT \u540e\u7f00\u8def\u5f84\u4e2d\u7684\u4f4d\u7f6e;\n+- nonExistMeasurement\uff1a\u5b58\u50a8\u4e0d\u5b58\u5728\u7684 Measurement\uff0c\u6ce8\u610f\u5176\u5b9a\u4e49\u4f4d\u7f6e\u5728\u7b2c\u4e00\u5c42 suffixPaths \u5faa\u73af\uff0c\u4e14\u4e3a Set \u7c7b\u578b\uff0c\u76ee\u7684\u662f\u4e0d\u5bf9\u540c\u4e00\u4e2a suffix \u4e0b\u7684\u91cd\u590d Measurement \u6dfb\u52a0\u91cd\u590d\u8bb0\u5f55\uff0c\u4f46\u53ef\u4ee5\u5bf9\u591a\u6b21\u51fa\u73b0\u7684\u540c\u540d suffix \u589e\u52a0\u8bb0\u5f55\u3002\u5176\u5c06\u5728\u4e00\u4e2a suffix \u5faa\u73af\u7ed3\u675f\u540e\u5c06 Set \u96c6\u5408\u5185\u7684\u5143\u7d20\u4e00\u8d77\u6dfb\u52a0\u5230 AlignByDevicePlan \u4e2d;\n+- measurementSetOfGivenSuffix\uff1a\u8bb0\u5f55\u8be5 suffix \u5bf9\u5e94\u7684 measurements\uff0c\u5982 select *,s1 from root.sg.d0, root.sg.d1\uff0c\u5bf9\u4e8e\u540e\u7f00 *, measurementSetOfGivenSuffix = {s1,s2,s3}\uff0c\u5bf9\u4e8e\u540e\u7f00 s1, measurementSetOfGivenSuffix = {s1};\n+\n+\u63a5\u4e0b\u6765\u4ecb\u7ecd AlignByDevicePlan \u7684\u8f6c\u5316\u8fc7\u7a0b\uff1a\n+\n+\u4e3a\u4e86\u907f\u514d\u5197\u4f59\uff0cAlignByDevicePlan \u5c06 GroupByPlan \u7b49\u4e09\u4e2a\u5b50\u7c7b\u67e5\u8be2\u8bbe\u7f6e\u4e3a\u5176\u4e2d\u7684\u53d8\u91cf\u800c\u975e\u5176\u5b50\u7c7b\uff0c\u56e0\u6b64\u5982\u679c\u67e5\u8be2\u7c7b\u578b\u662f\u4e09\u79cd\u5b50\u7c7b\u67e5\u8be2\uff0c\u5219\u9700\u8981\u5148\u5bf9 AlignByDevicePlan \u4e2d\u7684\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c\uff0c\u5e76\u4fee\u6539\u5176\u5bf9\u5e94\u7684\u67e5\u8be2\u7c7b\u578b\u3002\n+\n+\u540c\u6837\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u901a\u8fc7\u8c03\u7528 setGroupByPlan() \u65b9\u6cd5\u5bf9 AlignByDevicePlan \u4e2d\u7684 GroupByPlan \u8fdb\u884c\u8d4b\u503c\uff0c\u5e76\u8c03\u7528 setOperatorType(OperatorType.GROUPBY); \u5c06\u67e5\u8be2\u7c7b\u578b\u8bbe\u7f6e\u4e3a\u964d\u9891\u805a\u5408\u67e5\u8be2\u3002\n+\n+\u63a5\u4e0b\u6765\u5bf9 AlignByDevicePlan \u7684\u5904\u7406\u4e3b\u8981\u5305\u62ec\uff1a\n+\n+1. \u9996\u5148\u83b7\u53d6 FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\uff0cSELECT \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\uff0c\u4ee5\u53ca\u5305\u542b\u7684\u805a\u5408\u7c7b\u578b\u3002\u5728\u62ff\u5230\u524d\u7f00\u8def\u5f84 prefixPaths \u65f6\uff0c\u76f4\u63a5\u8c03\u7528 removeStarsInDeviceWithUnique() \u65b9\u6cd5\u5bf9\u524d\u7f00\u8def\u5f84\u8fdb\u884c\u89e3\u6790\u5e76\u53bb\u91cd\uff0c\u6700\u7ec8\u5f97\u5230\u975e\u91cd\u590d\u7684\u8bbe\u5907\u5217\u8868 devices\u3002\n+2. \u7136\u540e\u904d\u5386\u540e\u7f00\u8def\u5f84\u548c\u8bbe\u5907\u5217\u8868\u8fdb\u884c Path \u62fc\u63a5\uff0c\u5e76\u5bf9\u4e09\u79cd\u4e0d\u540c\u7c7b\u578b\u7684 Measurement \u8fdb\u884c\u5904\u7406\uff0c\u540c\u65f6\u8bbe\u7f6e\u53d8\u91cf loc \u6807\u8bb0\u6bcf\u4e2a Measurement \u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002\u5176\u4e2d\uff0c\u5982\u679c\u540e\u7f00\u8def\u5f84\u4ee5\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u5f00\u5934\uff0c\u5219\u5c06\u5176\u5b58\u50a8\u4e3a\u5e38\u91cf constMeasurement\uff1b\u5982\u679c\u62fc\u63a5\u540e\u7684\u8def\u5f84\u4e0d\u5b58\u5728\uff0c\u5219\u5c06\u5176\u5b58\u50a8\u4e3a nonExistMeasurement\uff1b\u5426\u5219\u89c6\u4e3a\u6b63\u5e38 Measurement \u8fdb\u5165\u6b65\u9aa43\u3002", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3OTQxNw=="}, "originalCommit": {"oid": "d9e50163fa68fd24c8cd7fd9e1f5a194c6d85169"}, "originalPosition": 206}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDM5NzY2OnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMjo0Nzo0MlrOFtJG_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwMzo1OTowM1rOFtOIdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3OTQ4Nw==", "bodyText": "\u4e3e\u4e2a\u4f8b\u5b50   from root.sg.d1  where s1 = 1 and time = 1 and root.sg.d1.s2 = 1  \u62fc\u63a5\u51fa\u6765\u5c31\u662f  root.sg.d1.s1=1 and time = 1 and root.sg.d1.s2 = 1\uff0c\u6bcf\u79cd\u60c5\u51b5\u90fd\u8986\u76d6\u5230", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382879487", "createdAt": "2020-02-22T02:47:42Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        1. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        2. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        3. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunction() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u5b50\u5408\u53d6\u5f0f Operator \u5408\u5e76\u4e3a\u4e00\u4e2a\u5408\u53d6\u5f0f\uff0c\u4f8b\u5982\uff1a(a and b) merge (c) -> (a and b and c)\n+\n+\n+### MergeSingleFilterOptimizer\n+\n+\n+MergeSingleFilterOptimizer \u7c7b\u4e3b\u8981\u901a\u8fc7 mergeSamePathFilter() \u65b9\u6cd5\u5bf9\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Path mergeSamePathFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u6362\uff08\u5408\u5e76\uff09\u7684 Filter\n+    \u8f93\u51fa\uff1a\u5904\u7406\u540e\uff08\u5408\u5e76\uff09\u7684 Filter\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u4e2d\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5bf9\u5f53\u524d\u8282\u70b9\u4f9d\u6b21\u9012\u5f52\u5730\u4f7f\u7528 mergeSamePathFilter() \u65b9\u6cd5\u8bbf\u95ee\u5b50\u8282\u70b9\u5e76\u83b7\u53d6\u5b50\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\uff0c\u5982\u679c\u5b50\u8282\u70b9\u8def\u5f84\u4e0d\u540c\uff0c\u5219\u5c06\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\u8bbe\u4e3a null\uff0c\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8bbe\u4e3a\u5b50\u8282\u70b9\u7684\u516c\u5171\u8def\u5f84\uff0c\u5e76\u8fd4\u56de\u8be5\u8def\u5f84\u3002\n+3. \u5982\u679c\u5b50\u8282\u70b9\u5747\u4e3a BasicFunctionOperator\uff0c\u5219\u5bf9\u5b50\u8282\u70b9\u6309\u7167\u8def\u5f84\u8fdb\u884c\u6392\u5e8f\u3002\u8fdb\u5165\u6b65\u9aa44.\n+4. \u5bf9\u5f53\u524d\u8282\u70b9\u8c03\u7528 mergeSingleFilters() \u65b9\u6cd5\u83b7\u5f97\u5f53\u524d\u8282\u70b9\u5185\u5b50\u8282\u70b9\u8868\u793a\u7684\u8def\u5f84\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u8be5\u64cd\u4f5c\u4f1a\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u5408\u5e76\uff0c\u540c\u65f6\u4fdd\u7559\u8def\u5f84\u975e null \u5b50\u8282\u70b9\u3002\n+5. \u5c06\u5269\u4f59\u7684\u8def\u5f84\u4e3a null \u7684\u8282\u70b9\u4f9d\u6b21\u8bbe\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\n+\n+mergeSingleFilter() \u65b9\u6cd5\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u5c06\u751f\u6210\u65b0\u7684 FilterOperator \u4f5c\u4e3a\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u64cd\u4f5c\u7b26\u7c7b\u578b\u4e0e\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u76f8\u540c\uff0c\u518d\u5c06\u90a3\u4e9b\u8def\u5f84\u76f8\u540c\u7684\u5b50\u8282\u70b9\u8bbe\u4e3a\u65b0\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u6700\u540e\u8fd4\u56de\u5b50\u8282\u70b9\u4e2d\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u4f8b\u5982\uff0c\u4e0b\u56fe\u8868\u793a\u5408\u5e76\u540c\u8def\u5f84\u8fc7\u6ee4\u6761\u4ef6\u7684\u8fc7\u7a0b\uff08\u5706\u5f62\u8868\u793a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u957f\u65b9\u5f62\u8868\u793a\u53f6\u5b50\u8282\u70b9\u3002\u5192\u53f7\u524d\u8868\u793a\u8282\u70b9\u7684\u7c7b\u522b\u6216\u8fc7\u6ee4\u6761\u4ef6\uff0c\u5192\u53f7\u540e\u8868\u793a\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u8def\u5f84\uff09\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74820835-a5eb6780-533d-11ea-8173-6591e69fab5a.jpg)\n+\n+### \u4e3e\u4f8b\u8bf4\u660e\n+\n+\u5047\u8bbe\u8f93\u5165\u7684 SQL \u8bed\u53e5\u4e3a <center>SELECT * FROM root.v0.d0 WHERE (NOT time<200) AND (s1 < 10 OR s2 > 50 OR s1 > 20)</center>\n+\n+\u5219\u751f\u6210\u7684\u9009\u62e9\u6761\u4ef6\u6811\u72b6\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74821007-e8ad3f80-533d-11ea-9b5e-7565cf2d4fc3.jpg)\n+\n ## \u7269\u7406\u8ba1\u5212\u751f\u6210\u5668\n \n * org.apache.iotdb.db.qp.strategy.PhysicalGenerator\n \n+### TransformToPhysicalPlan()\n+\n+PhysicalGenerator \u7c7b\u4e2d\u7684 transformToPhysicalPlan() \u65b9\u6cd5\u5c06 Planner \u4e2d\u751f\u6210\u7684\u903b\u8f91\u8ba1\u5212\u8f6c\u5316\u4e3a\u7269\u7406\u8ba1\u5212\u3002\u5176\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+```java\n+PhysicalPlan transformToPhysicalPlan(Operator operator)\n+\u8f93\u5165\uff1aPlanner \u4e2d\u7ecf\u8fc7\u4f18\u5316\u7684\u903b\u8f91\u8ba1\u5212 operator\n+\u8f93\u51fa\uff1a\u901a\u8fc7\u89e3\u6790 operator \u751f\u6210\u7684\u7269\u7406\u8ba1\u5212\n+```\n+\n+transformToPhysicalPlan() \u65b9\u6cd5\u7684\u903b\u8f91\u8f83\u4e3a\u7b80\u5355\uff0c\u5373\u901a\u8fc7 operator.getType() \u65b9\u6cd5\u5224\u65ad\u903b\u8f91\u8ba1\u5212\u7684\u7c7b\u578b\uff0c\u7136\u540e\u521b\u5efa\u76f8\u5bf9\u5e94\u7684\u7269\u7406\u8ba1\u5212\u3002\n+\n+\u5176\u4e2d\u53ea\u6709 Query \u7c7b\u578b\u9700\u8981\u989d\u5916\u8c03\u7528 transformQuery() \u65b9\u6cd5\u8fdb\u884c\u8fdb\u4e00\u6b65\u8f6c\u5316\uff0c\u5176\u4f59\u7c7b\u578b\u5747\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u7269\u7406\u8ba1\u5212\u3002\n+\n+#### TransformQuery()\n+\n+transformQuery() \u65b9\u6cd5\u4e3b\u8981\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u539f\u59cb\u6570\u636e\u67e5\u8be2 RawDataQueryPlan \u7684\u8f6c\u5316\uff08\u6309\u65f6\u95f4\u5bf9\u9f50\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u6309\u8bbe\u5907\u5bf9\u9f50 AlignByDevicePlan \u7684\u8f6c\u5316\u3002\n+\n+RawDataQueryPlan \u6709\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5206\u522b\u4e3a GroupByPlan\u3001FillQueryPlan \u548c AggregationPlan\u3002\u5728\u5206\u5f00\u5904\u7406 RawDataQueryPlan \u548c AlignByDevicePlan \u524d\uff0c\u9996\u5148\u5904\u7406\u8fd9\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5c06\u9700\u8981\u7684\u53c2\u6570\u4fdd\u5b58\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002\n+\n+\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u5176\u4e2d\u8c03\u7528\u4e86 setInterval()\u3001setSlidingStep()\u3001setStartTime()\u3001setEndTime() \u65b9\u6cd5\u5b58\u50a8\u4e86 GroupByPlan \u7684\u65f6\u95f4\u95f4\u9694\u3001\u6b65\u957f\u3001\u5f00\u59cb\u65f6\u95f4\u3001\u7ed3\u675f\u65f6\u95f4\u7b49\u53c2\u6570\u3002\n+\n+##### AlignByDevicePlan \u8f6c\u5316\n+\n+\u9996\u5148\u89e3\u91ca\u4e00\u4e0b AlignByDevicePlan \u4e2d\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\u7684\u4f5c\u7528\u3002\n+\n+- prefixPaths\uff1aFROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\uff0c\u5982 root.*.*, root.sg.d1;\n+- devices\uff1a\u5bf9 prefixPaths \u8fdb\u884c\u53bb\u661f\u548c\u8bbe\u5907\u53bb\u91cd\u540e\u5f97\u5230\u7684\u8bbe\u5907\u5217\u8868;\n+- suffixPaths\uff1aSELECT \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\uff0c\u5982 s0, temperature, *;\n+- measurements\uff1a\u5b58\u50a8\u5b9e\u9645\u5b58\u5728\u4e14\u975e\u5e38\u91cf\u7684 Measurement\uff0c\u5728 measurementSetOfGivenSuffix \u6240\u4e3e\u793a\u4f8b\u4e2d\uff0cmeasurements = [s1,s2,s3,s1];\n+- deviceToMeasurementsMap\uff1a\u5b58\u50a8\u6bcf\u4e2a\u8bbe\u5907\u5bf9\u5e94\u7684 measurements;\n+- dataTypeConsistencyChecker\uff1a\u68c0\u9a8c\u4e0d\u540c\u8bbe\u5907\u7684\u540c\u540d Measurement \u7684\u6570\u636e\u7c7b\u578b\u4e00\u81f4\u6027\uff0c\u5982 root.sg1.d1.s0 \u4e3a INT32 \u7c7b\u578b\u800c root.sg2.d3.s0 \u4e3a FLOAT \u7c7b\u578b\u5219\u4e0d\u6ee1\u8db3\u4e00\u81f4\u6027;\n+- loc\uff1a\u6807\u8bb0\u5f53\u524d Measurement \u5728 SELECT \u540e\u7f00\u8def\u5f84\u4e2d\u7684\u4f4d\u7f6e;\n+- nonExistMeasurement\uff1a\u5b58\u50a8\u4e0d\u5b58\u5728\u7684 Measurement\uff0c\u6ce8\u610f\u5176\u5b9a\u4e49\u4f4d\u7f6e\u5728\u7b2c\u4e00\u5c42 suffixPaths \u5faa\u73af\uff0c\u4e14\u4e3a Set \u7c7b\u578b\uff0c\u76ee\u7684\u662f\u4e0d\u5bf9\u540c\u4e00\u4e2a suffix \u4e0b\u7684\u91cd\u590d Measurement \u6dfb\u52a0\u91cd\u590d\u8bb0\u5f55\uff0c\u4f46\u53ef\u4ee5\u5bf9\u591a\u6b21\u51fa\u73b0\u7684\u540c\u540d suffix \u589e\u52a0\u8bb0\u5f55\u3002\u5176\u5c06\u5728\u4e00\u4e2a suffix \u5faa\u73af\u7ed3\u675f\u540e\u5c06 Set \u96c6\u5408\u5185\u7684\u5143\u7d20\u4e00\u8d77\u6dfb\u52a0\u5230 AlignByDevicePlan \u4e2d;\n+- measurementSetOfGivenSuffix\uff1a\u8bb0\u5f55\u8be5 suffix \u5bf9\u5e94\u7684 measurements\uff0c\u5982 select *,s1 from root.sg.d0, root.sg.d1\uff0c\u5bf9\u4e8e\u540e\u7f00 *, measurementSetOfGivenSuffix = {s1,s2,s3}\uff0c\u5bf9\u4e8e\u540e\u7f00 s1, measurementSetOfGivenSuffix = {s1};\n+\n+\u63a5\u4e0b\u6765\u4ecb\u7ecd AlignByDevicePlan \u7684\u8f6c\u5316\u8fc7\u7a0b\uff1a\n+\n+\u4e3a\u4e86\u907f\u514d\u5197\u4f59\uff0cAlignByDevicePlan \u5c06 GroupByPlan \u7b49\u4e09\u4e2a\u5b50\u7c7b\u67e5\u8be2\u8bbe\u7f6e\u4e3a\u5176\u4e2d\u7684\u53d8\u91cf\u800c\u975e\u5176\u5b50\u7c7b\uff0c\u56e0\u6b64\u5982\u679c\u67e5\u8be2\u7c7b\u578b\u662f\u4e09\u79cd\u5b50\u7c7b\u67e5\u8be2\uff0c\u5219\u9700\u8981\u5148\u5bf9 AlignByDevicePlan \u4e2d\u7684\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c\uff0c\u5e76\u4fee\u6539\u5176\u5bf9\u5e94\u7684\u67e5\u8be2\u7c7b\u578b\u3002\n+\n+\u540c\u6837\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u901a\u8fc7\u8c03\u7528 setGroupByPlan() \u65b9\u6cd5\u5bf9 AlignByDevicePlan \u4e2d\u7684 GroupByPlan \u8fdb\u884c\u8d4b\u503c\uff0c\u5e76\u8c03\u7528 setOperatorType(OperatorType.GROUPBY); \u5c06\u67e5\u8be2\u7c7b\u578b\u8bbe\u7f6e\u4e3a\u964d\u9891\u805a\u5408\u67e5\u8be2\u3002\n+\n+\u63a5\u4e0b\u6765\u5bf9 AlignByDevicePlan \u7684\u5904\u7406\u4e3b\u8981\u5305\u62ec\uff1a\n+\n+1. \u9996\u5148\u83b7\u53d6 FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\uff0cSELECT \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\uff0c\u4ee5\u53ca\u5305\u542b\u7684\u805a\u5408\u7c7b\u578b\u3002\u5728\u62ff\u5230\u524d\u7f00\u8def\u5f84 prefixPaths \u65f6\uff0c\u76f4\u63a5\u8c03\u7528 removeStarsInDeviceWithUnique() \u65b9\u6cd5\u5bf9\u524d\u7f00\u8def\u5f84\u8fdb\u884c\u89e3\u6790\u5e76\u53bb\u91cd\uff0c\u6700\u7ec8\u5f97\u5230\u975e\u91cd\u590d\u7684\u8bbe\u5907\u5217\u8868 devices\u3002\n+2. \u7136\u540e\u904d\u5386\u540e\u7f00\u8def\u5f84\u548c\u8bbe\u5907\u5217\u8868\u8fdb\u884c Path \u62fc\u63a5\uff0c\u5e76\u5bf9\u4e09\u79cd\u4e0d\u540c\u7c7b\u578b\u7684 Measurement \u8fdb\u884c\u5904\u7406\uff0c\u540c\u65f6\u8bbe\u7f6e\u53d8\u91cf loc \u6807\u8bb0\u6bcf\u4e2a Measurement \u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002\u5176\u4e2d\uff0c\u5982\u679c\u540e\u7f00\u8def\u5f84\u4ee5\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u5f00\u5934\uff0c\u5219\u5c06\u5176\u5b58\u50a8\u4e3a\u5e38\u91cf constMeasurement\uff1b\u5982\u679c\u62fc\u63a5\u540e\u7684\u8def\u5f84\u4e0d\u5b58\u5728\uff0c\u5219\u5c06\u5176\u5b58\u50a8\u4e3a nonExistMeasurement\uff1b\u5426\u5219\u89c6\u4e3a\u6b63\u5e38 Measurement \u8fdb\u5165\u6b65\u9aa43\u3002\n+3. \u901a\u8fc7\u62fc\u63a5 Path \u5f97\u5230 actualPaths \u8fdb\u884c\u904d\u5386\u3002\u9996\u5148\u9700\u8981\u68c0\u9a8c\u6570\u636e\u7c7b\u578b\u7684\u4e00\u81f4\u6027\uff0c\u4e0d\u6ee1\u8db3\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff0c\u6ee1\u8db3\u5219\u8bb0\u5f55\u4e0b\u8be5 Measurement\uff0c\u5bf9 measurementSetOfGivenSuffix, deviceToMeasurementsMap \u7b49\u8fdb\u884c\u66f4\u65b0\u3002\n+4. \u5faa\u73af\u7ed3\u675f\u540e\uff0c\u5c06\u5faa\u73af\u4e2d\u5f97\u5230\u7684\u53d8\u91cf\u4fe1\u606f\u8d4b\u503c\u5230 AlignByDevicePlan \u4e2d\u3002\n+5. \u6700\u540e\u8c03\u7528 concatFilterByDevice() \u65b9\u6cd5\u8ba1\u7b97 deviceToFilterMap\uff0c\u5f97\u5230\u5c06\u6bcf\u4e2a\u8bbe\u5907\u5206\u522b\u62fc\u63a5\u540e\u5bf9\u5e94\u7684 Filter \u4fe1\u606f\u3002\n+\n+```java\n+Map<String, IExpression> concatFilterByDevice(List<String> devices,\n+      FilterOperator operator)\n+\u8f93\u5165\uff1a\u53bb\u91cd\u540e\u7684 devices \u5217\u8868\u548c\u672a\u62fc\u63a5\u7684 FilterOperator\n+\u8f93\u5165\uff1a\u7ecf\u8fc7\u62fc\u63a5\u540e\u7684 deviceToFilterMap\uff0c\u8bb0\u5f55\u4e86\u6bcf\u4e2a\u8bbe\u5907\u5bf9\u5e94\u7684 Filter \u4fe1\u606f\n+```\n+\n+concatFilterByDevice() \u65b9\u6cd5\u7684\u4e3b\u8981\u5904\u7406\u903b\u8f91\u5728 concatFilterPath() \u4e2d\uff1a\n+\n+concatFilterPath() \u65b9\u6cd5\u904d\u5386\u672a\u62fc\u63a5\u7684 FilterOperator \u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u53d6\u8be5\u53f6\u5b50\u7ed3\u70b9\u7684\u8def\u5f84\uff0c\u5982\u679c\u8def\u5f84\u4ee5 time \u6216 root \u5f00\u5934\u5219\u4e0d\u505a\u5904\u7406\uff0c\u5426\u5219\u5c06\u8bbe\u5907\u540d\u4e0e\u8282\u70b9\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u540e\u8fd4\u56de\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5219\u5bf9\u8be5\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u8fdb\u884c\u8fed\u4ee3\u5904\u7406\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9e50163fa68fd24c8cd7fd9e1f5a194c6d85169"}, "originalPosition": 220}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2MTc4Mg==", "bodyText": "\u5df2\u6dfb\u52a0\u5b9e\u4f8b\u3002", "url": "https://github.com/apache/iotdb/pull/825#discussion_r382961782", "createdAt": "2020-02-23T03:59:03Z", "author": {"login": "Alima777"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +68,193 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer\n+\n+DNF \u662f Disjuctive Normal Form \u7684\u7f29\u5199\uff0c\u5373\u6790\u53d6\u8303\u5f0f\u3002DnfFilterOptimizer \u4e2d\u7684 optimize() \u65b9\u6cd5\u6765\u4f9d\u9760 getDnf() \u6765\u5b9e\u73b0\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u7684\u5f62\u5f0f\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator getDnf(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684 FilterOperator\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\u7684 FilterOperator\uff0c\u4ee5\u6790\u53d6\u8303\u5f0f\u4e3a\u5f62\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u5f53\u524d\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\n+2. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002\u5982\u679c\u5b50\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff1b\u5426\u5219\uff0c\u8bf4\u660e\u8be5\u5b50\u8282\u70b9\u7684\u5173\u7cfb\u4e3a\u201c\u6216\u201d\uff0c\u5219\u5c06\u5b50\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u4e5f\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u3002\u5373 (OR (OR A, B), C) \u8f6c\u6362\u4e3a (OR A, B, C)\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+3. \u5982\u679c\u5f53\u524d\u8282\u70b9\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\n+    1. \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u6240\u6709\u7684\u5b50\u8282\u70b9\uff08\u5b50\u8282\u70b9\u6570\u76ee\u4e3a2\uff09\uff0c\u5e76\u5bf9\u5de6\u53f3\u5b50\u8282\u70b9\u5206\u522b\u9012\u5f52\u5730\u8c03\u7528 getDnf() \u65b9\u6cd5\uff0c\u4f7f\u5f97\u5de6\u53f3\u5b57\u8282\u70b9\u90fd\u4e3a\u6790\u53d6\u8303\u5f0f\u3002    \n+    2. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u548c\u53f3\u5b50\u8282\u70b9\u5206\u522b\u5206\u6790\u3002    \n+        1. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u4e0d\u662f\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8bf4\u660e\u5de6\u53f3\u5b50\u8282\u70b9\u8981\u4e48\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u8981\u4e48\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4fdd\u6301\u4e0d\u53d8\uff0c\u5982\u679c\u662f\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u5219\u5c06\u8be5\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6dfb\u52a0\u5230\u5f53\u524d\u8282\u70b9\u7684\u5b69\u5b50\u8282\u70b9\u4e2d\uff0c\u5982 (AND A, (AND B, C)) \u5c31\u8f6c\u5316\u4e3a (AND A, B, C)\u3002\n+        2. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e3a\u4e24\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a A \u548c B \uff0c\u53e6\u4e00\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a C \u548c D\uff0c\u5219\u5c06 {A, B} \u4e0e {C, D} \u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c(A, C), (A, D), (B, C), (B, D), \u5bf9\u6bcf\u4e00\u7ec4\u7ec4\u5408\u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR A, B), (OR C, D)) \u8f6c\u6362\u4e3a (OR (AND A, C), (AND A, D), (AND B, C), (AND B, D))\u3002\n+        3. \u5982\u679c\u5de6\u53f3\u5b50\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e00\u4e2a\u201c\u4e0e\u201d\u5173\u7cfb\u6216\u53f6\u5b50\u8282\u70b9\u3002\u5c06\u201c\u6216\u201d\u5b50\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a X, Y\uff0c\u5c06\u53e6\u4e00\u5b50\u8282\u70b9\u6807\u8bb0\u4e3a Z\uff0c\u5219\u53ea\u8981\u5c06 {X, Y} \u4e0e {Z} \u96c6\u5408\u79cd\u7684\u5143\u7d20\u4e24\u4e24\u7ec4\u5408\uff0c\u5bf9 (X, Z), (Y,Z) \u8c03\u7528 mergeToConjunction() \u65b9\u6cd5\u751f\u6210\u5408\u53d6\u5f0f\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u5173\u7cfb\u201c\u6216\u201d\uff0c\u5373\uff0c\u628a (AND (OR X, Y), Z) \u8f6c\u6362\u4e3a (OR (AND X, Z), (AND Y, Z))\u3002\n+    3. \u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\n+\n+\n+\u5bf9\u4e8e\u4ee5\u4e0a\u63d0\u5230\u7684 mergeToConjunction() \u65b9\u6cd5\uff0c\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator mergeToConjunction(FilterOperator operator1, FilterOperator operator2)\n+    \u8f93\u5165\uff1a\u4e24\u4e2a\u5b50 FilterOperator\n+    \u8f93\u51fa\uff1a\u5408\u5e76\u540e\u7684\u5408\u53d6\u5f0f\n+\n+\u8be5\u65b9\u6cd5\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u5b50\u5408\u53d6\u5f0f Operator \u5408\u5e76\u4e3a\u4e00\u4e2a\u5408\u53d6\u5f0f\uff0c\u4f8b\u5982\uff1a(a and b) merge (c) -> (a and b and c)\n+\n+\n+### MergeSingleFilterOptimizer\n+\n+\n+MergeSingleFilterOptimizer \u7c7b\u4e3b\u8981\u901a\u8fc7 mergeSamePathFilter() \u65b9\u6cd5\u5bf9\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u8be5\u65b9\u6cd5\u7684\u7533\u660e\u5982\u4e0b\uff1a\n+\n+    Path mergeSamePathFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u6362\uff08\u5408\u5e76\uff09\u7684 Filter\n+    \u8f93\u51fa\uff1a\u5904\u7406\u540e\uff08\u5408\u5e76\uff09\u7684 Filter\n+\n+\u8be5\u65b9\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u5982\u679c\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u8282\u70b9\u4e2d\u5305\u542b\u7684\u8def\u5f84\uff0c\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5bf9\u5f53\u524d\u8282\u70b9\u4f9d\u6b21\u9012\u5f52\u5730\u4f7f\u7528 mergeSamePathFilter() \u65b9\u6cd5\u8bbf\u95ee\u5b50\u8282\u70b9\u5e76\u83b7\u53d6\u5b50\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\uff0c\u5982\u679c\u5b50\u8282\u70b9\u8def\u5f84\u4e0d\u540c\uff0c\u5219\u5c06\u5f53\u524d\u8282\u70b9\u6240\u8868\u793a\u7684\u8def\u5f84\u8bbe\u4e3a null\uff0c\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8bbe\u4e3a\u5b50\u8282\u70b9\u7684\u516c\u5171\u8def\u5f84\uff0c\u5e76\u8fd4\u56de\u8be5\u8def\u5f84\u3002\n+3. \u5982\u679c\u5b50\u8282\u70b9\u5747\u4e3a BasicFunctionOperator\uff0c\u5219\u5bf9\u5b50\u8282\u70b9\u6309\u7167\u8def\u5f84\u8fdb\u884c\u6392\u5e8f\u3002\u8fdb\u5165\u6b65\u9aa44.\n+4. \u5bf9\u5f53\u524d\u8282\u70b9\u8c03\u7528 mergeSingleFilters() \u65b9\u6cd5\u83b7\u5f97\u5f53\u524d\u8282\u70b9\u5185\u5b50\u8282\u70b9\u8868\u793a\u7684\u8def\u5f84\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u8be5\u64cd\u4f5c\u4f1a\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u5408\u5e76\uff0c\u540c\u65f6\u4fdd\u7559\u8def\u5f84\u975e null \u5b50\u8282\u70b9\u3002\n+5. \u5c06\u5269\u4f59\u7684\u8def\u5f84\u4e3a null \u7684\u8282\u70b9\u4f9d\u6b21\u8bbe\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\n+\n+mergeSingleFilter() \u65b9\u6cd5\u5c06\u5b50\u8282\u70b9\u4e2d\u8def\u5f84\u76f8\u540c\u7684\u8282\u70b9\u8fdb\u884c\u5408\u5e76\u3002\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u5c06\u751f\u6210\u65b0\u7684 FilterOperator \u4f5c\u4e3a\u5b50\u8282\u70b9\uff0c\u5e76\u5c06\u64cd\u4f5c\u7b26\u7c7b\u578b\u4e0e\u5f53\u524d\u8282\u70b9\u8bbe\u4e3a\u76f8\u540c\uff0c\u518d\u5c06\u90a3\u4e9b\u8def\u5f84\u76f8\u540c\u7684\u5b50\u8282\u70b9\u8bbe\u4e3a\u65b0\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u6700\u540e\u8fd4\u56de\u5b50\u8282\u70b9\u4e2d\u975e null \u7684\u6700\u5927\u5e8f\u53f7\u3002\u4f8b\u5982\uff0c\u4e0b\u56fe\u8868\u793a\u5408\u5e76\u540c\u8def\u5f84\u8fc7\u6ee4\u6761\u4ef6\u7684\u8fc7\u7a0b\uff08\u5706\u5f62\u8868\u793a\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u957f\u65b9\u5f62\u8868\u793a\u53f6\u5b50\u8282\u70b9\u3002\u5192\u53f7\u524d\u8868\u793a\u8282\u70b9\u7684\u7c7b\u522b\u6216\u8fc7\u6ee4\u6761\u4ef6\uff0c\u5192\u53f7\u540e\u8868\u793a\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684\u8def\u5f84\uff09\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74820835-a5eb6780-533d-11ea-8173-6591e69fab5a.jpg)\n+\n+### \u4e3e\u4f8b\u8bf4\u660e\n+\n+\u5047\u8bbe\u8f93\u5165\u7684 SQL \u8bed\u53e5\u4e3a <center>SELECT * FROM root.v0.d0 WHERE (NOT time<200) AND (s1 < 10 OR s2 > 50 OR s1 > 20)</center>\n+\n+\u5219\u751f\u6210\u7684\u9009\u62e9\u6761\u4ef6\u6811\u72b6\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+![image](https://user-images.githubusercontent.com/36235611/74821007-e8ad3f80-533d-11ea-9b5e-7565cf2d4fc3.jpg)\n+\n ## \u7269\u7406\u8ba1\u5212\u751f\u6210\u5668\n \n * org.apache.iotdb.db.qp.strategy.PhysicalGenerator\n \n+### TransformToPhysicalPlan()\n+\n+PhysicalGenerator \u7c7b\u4e2d\u7684 transformToPhysicalPlan() \u65b9\u6cd5\u5c06 Planner \u4e2d\u751f\u6210\u7684\u903b\u8f91\u8ba1\u5212\u8f6c\u5316\u4e3a\u7269\u7406\u8ba1\u5212\u3002\u5176\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+```java\n+PhysicalPlan transformToPhysicalPlan(Operator operator)\n+\u8f93\u5165\uff1aPlanner \u4e2d\u7ecf\u8fc7\u4f18\u5316\u7684\u903b\u8f91\u8ba1\u5212 operator\n+\u8f93\u51fa\uff1a\u901a\u8fc7\u89e3\u6790 operator \u751f\u6210\u7684\u7269\u7406\u8ba1\u5212\n+```\n+\n+transformToPhysicalPlan() \u65b9\u6cd5\u7684\u903b\u8f91\u8f83\u4e3a\u7b80\u5355\uff0c\u5373\u901a\u8fc7 operator.getType() \u65b9\u6cd5\u5224\u65ad\u903b\u8f91\u8ba1\u5212\u7684\u7c7b\u578b\uff0c\u7136\u540e\u521b\u5efa\u76f8\u5bf9\u5e94\u7684\u7269\u7406\u8ba1\u5212\u3002\n+\n+\u5176\u4e2d\u53ea\u6709 Query \u7c7b\u578b\u9700\u8981\u989d\u5916\u8c03\u7528 transformQuery() \u65b9\u6cd5\u8fdb\u884c\u8fdb\u4e00\u6b65\u8f6c\u5316\uff0c\u5176\u4f59\u7c7b\u578b\u5747\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u7269\u7406\u8ba1\u5212\u3002\n+\n+#### TransformQuery()\n+\n+transformQuery() \u65b9\u6cd5\u4e3b\u8981\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u539f\u59cb\u6570\u636e\u67e5\u8be2 RawDataQueryPlan \u7684\u8f6c\u5316\uff08\u6309\u65f6\u95f4\u5bf9\u9f50\uff09\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u6309\u8bbe\u5907\u5bf9\u9f50 AlignByDevicePlan \u7684\u8f6c\u5316\u3002\n+\n+RawDataQueryPlan \u6709\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5206\u522b\u4e3a GroupByPlan\u3001FillQueryPlan \u548c AggregationPlan\u3002\u5728\u5206\u5f00\u5904\u7406 RawDataQueryPlan \u548c AlignByDevicePlan \u524d\uff0c\u9996\u5148\u5904\u7406\u8fd9\u4e09\u4e2a\u5b50\u7c7b\uff0c\u5c06\u9700\u8981\u7684\u53c2\u6570\u4fdd\u5b58\u4f9b\u4e4b\u540e\u4f7f\u7528\u3002\n+\n+\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u5176\u4e2d\u8c03\u7528\u4e86 setInterval()\u3001setSlidingStep()\u3001setStartTime()\u3001setEndTime() \u65b9\u6cd5\u5b58\u50a8\u4e86 GroupByPlan \u7684\u65f6\u95f4\u95f4\u9694\u3001\u6b65\u957f\u3001\u5f00\u59cb\u65f6\u95f4\u3001\u7ed3\u675f\u65f6\u95f4\u7b49\u53c2\u6570\u3002\n+\n+##### AlignByDevicePlan \u8f6c\u5316\n+\n+\u9996\u5148\u89e3\u91ca\u4e00\u4e0b AlignByDevicePlan \u4e2d\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\u7684\u4f5c\u7528\u3002\n+\n+- prefixPaths\uff1aFROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\uff0c\u5982 root.*.*, root.sg.d1;\n+- devices\uff1a\u5bf9 prefixPaths \u8fdb\u884c\u53bb\u661f\u548c\u8bbe\u5907\u53bb\u91cd\u540e\u5f97\u5230\u7684\u8bbe\u5907\u5217\u8868;\n+- suffixPaths\uff1aSELECT \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\uff0c\u5982 s0, temperature, *;\n+- measurements\uff1a\u5b58\u50a8\u5b9e\u9645\u5b58\u5728\u4e14\u975e\u5e38\u91cf\u7684 Measurement\uff0c\u5728 measurementSetOfGivenSuffix \u6240\u4e3e\u793a\u4f8b\u4e2d\uff0cmeasurements = [s1,s2,s3,s1];\n+- deviceToMeasurementsMap\uff1a\u5b58\u50a8\u6bcf\u4e2a\u8bbe\u5907\u5bf9\u5e94\u7684 measurements;\n+- dataTypeConsistencyChecker\uff1a\u68c0\u9a8c\u4e0d\u540c\u8bbe\u5907\u7684\u540c\u540d Measurement \u7684\u6570\u636e\u7c7b\u578b\u4e00\u81f4\u6027\uff0c\u5982 root.sg1.d1.s0 \u4e3a INT32 \u7c7b\u578b\u800c root.sg2.d3.s0 \u4e3a FLOAT \u7c7b\u578b\u5219\u4e0d\u6ee1\u8db3\u4e00\u81f4\u6027;\n+- loc\uff1a\u6807\u8bb0\u5f53\u524d Measurement \u5728 SELECT \u540e\u7f00\u8def\u5f84\u4e2d\u7684\u4f4d\u7f6e;\n+- nonExistMeasurement\uff1a\u5b58\u50a8\u4e0d\u5b58\u5728\u7684 Measurement\uff0c\u6ce8\u610f\u5176\u5b9a\u4e49\u4f4d\u7f6e\u5728\u7b2c\u4e00\u5c42 suffixPaths \u5faa\u73af\uff0c\u4e14\u4e3a Set \u7c7b\u578b\uff0c\u76ee\u7684\u662f\u4e0d\u5bf9\u540c\u4e00\u4e2a suffix \u4e0b\u7684\u91cd\u590d Measurement \u6dfb\u52a0\u91cd\u590d\u8bb0\u5f55\uff0c\u4f46\u53ef\u4ee5\u5bf9\u591a\u6b21\u51fa\u73b0\u7684\u540c\u540d suffix \u589e\u52a0\u8bb0\u5f55\u3002\u5176\u5c06\u5728\u4e00\u4e2a suffix \u5faa\u73af\u7ed3\u675f\u540e\u5c06 Set \u96c6\u5408\u5185\u7684\u5143\u7d20\u4e00\u8d77\u6dfb\u52a0\u5230 AlignByDevicePlan \u4e2d;\n+- measurementSetOfGivenSuffix\uff1a\u8bb0\u5f55\u8be5 suffix \u5bf9\u5e94\u7684 measurements\uff0c\u5982 select *,s1 from root.sg.d0, root.sg.d1\uff0c\u5bf9\u4e8e\u540e\u7f00 *, measurementSetOfGivenSuffix = {s1,s2,s3}\uff0c\u5bf9\u4e8e\u540e\u7f00 s1, measurementSetOfGivenSuffix = {s1};\n+\n+\u63a5\u4e0b\u6765\u4ecb\u7ecd AlignByDevicePlan \u7684\u8f6c\u5316\u8fc7\u7a0b\uff1a\n+\n+\u4e3a\u4e86\u907f\u514d\u5197\u4f59\uff0cAlignByDevicePlan \u5c06 GroupByPlan \u7b49\u4e09\u4e2a\u5b50\u7c7b\u67e5\u8be2\u8bbe\u7f6e\u4e3a\u5176\u4e2d\u7684\u53d8\u91cf\u800c\u975e\u5176\u5b50\u7c7b\uff0c\u56e0\u6b64\u5982\u679c\u67e5\u8be2\u7c7b\u578b\u662f\u4e09\u79cd\u5b50\u7c7b\u67e5\u8be2\uff0c\u5219\u9700\u8981\u5148\u5bf9 AlignByDevicePlan \u4e2d\u7684\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c\uff0c\u5e76\u4fee\u6539\u5176\u5bf9\u5e94\u7684\u67e5\u8be2\u7c7b\u578b\u3002\n+\n+\u540c\u6837\u4ee5 GroupByPlan \u4e3a\u4f8b\uff0c\u901a\u8fc7\u8c03\u7528 setGroupByPlan() \u65b9\u6cd5\u5bf9 AlignByDevicePlan \u4e2d\u7684 GroupByPlan \u8fdb\u884c\u8d4b\u503c\uff0c\u5e76\u8c03\u7528 setOperatorType(OperatorType.GROUPBY); \u5c06\u67e5\u8be2\u7c7b\u578b\u8bbe\u7f6e\u4e3a\u964d\u9891\u805a\u5408\u67e5\u8be2\u3002\n+\n+\u63a5\u4e0b\u6765\u5bf9 AlignByDevicePlan \u7684\u5904\u7406\u4e3b\u8981\u5305\u62ec\uff1a\n+\n+1. \u9996\u5148\u83b7\u53d6 FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\uff0cSELECT \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\uff0c\u4ee5\u53ca\u5305\u542b\u7684\u805a\u5408\u7c7b\u578b\u3002\u5728\u62ff\u5230\u524d\u7f00\u8def\u5f84 prefixPaths \u65f6\uff0c\u76f4\u63a5\u8c03\u7528 removeStarsInDeviceWithUnique() \u65b9\u6cd5\u5bf9\u524d\u7f00\u8def\u5f84\u8fdb\u884c\u89e3\u6790\u5e76\u53bb\u91cd\uff0c\u6700\u7ec8\u5f97\u5230\u975e\u91cd\u590d\u7684\u8bbe\u5907\u5217\u8868 devices\u3002\n+2. \u7136\u540e\u904d\u5386\u540e\u7f00\u8def\u5f84\u548c\u8bbe\u5907\u5217\u8868\u8fdb\u884c Path \u62fc\u63a5\uff0c\u5e76\u5bf9\u4e09\u79cd\u4e0d\u540c\u7c7b\u578b\u7684 Measurement \u8fdb\u884c\u5904\u7406\uff0c\u540c\u65f6\u8bbe\u7f6e\u53d8\u91cf loc \u6807\u8bb0\u6bcf\u4e2a Measurement \u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002\u5176\u4e2d\uff0c\u5982\u679c\u540e\u7f00\u8def\u5f84\u4ee5\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u5f00\u5934\uff0c\u5219\u5c06\u5176\u5b58\u50a8\u4e3a\u5e38\u91cf constMeasurement\uff1b\u5982\u679c\u62fc\u63a5\u540e\u7684\u8def\u5f84\u4e0d\u5b58\u5728\uff0c\u5219\u5c06\u5176\u5b58\u50a8\u4e3a nonExistMeasurement\uff1b\u5426\u5219\u89c6\u4e3a\u6b63\u5e38 Measurement \u8fdb\u5165\u6b65\u9aa43\u3002\n+3. \u901a\u8fc7\u62fc\u63a5 Path \u5f97\u5230 actualPaths \u8fdb\u884c\u904d\u5386\u3002\u9996\u5148\u9700\u8981\u68c0\u9a8c\u6570\u636e\u7c7b\u578b\u7684\u4e00\u81f4\u6027\uff0c\u4e0d\u6ee1\u8db3\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff0c\u6ee1\u8db3\u5219\u8bb0\u5f55\u4e0b\u8be5 Measurement\uff0c\u5bf9 measurementSetOfGivenSuffix, deviceToMeasurementsMap \u7b49\u8fdb\u884c\u66f4\u65b0\u3002\n+4. \u5faa\u73af\u7ed3\u675f\u540e\uff0c\u5c06\u5faa\u73af\u4e2d\u5f97\u5230\u7684\u53d8\u91cf\u4fe1\u606f\u8d4b\u503c\u5230 AlignByDevicePlan \u4e2d\u3002\n+5. \u6700\u540e\u8c03\u7528 concatFilterByDevice() \u65b9\u6cd5\u8ba1\u7b97 deviceToFilterMap\uff0c\u5f97\u5230\u5c06\u6bcf\u4e2a\u8bbe\u5907\u5206\u522b\u62fc\u63a5\u540e\u5bf9\u5e94\u7684 Filter \u4fe1\u606f\u3002\n+\n+```java\n+Map<String, IExpression> concatFilterByDevice(List<String> devices,\n+      FilterOperator operator)\n+\u8f93\u5165\uff1a\u53bb\u91cd\u540e\u7684 devices \u5217\u8868\u548c\u672a\u62fc\u63a5\u7684 FilterOperator\n+\u8f93\u5165\uff1a\u7ecf\u8fc7\u62fc\u63a5\u540e\u7684 deviceToFilterMap\uff0c\u8bb0\u5f55\u4e86\u6bcf\u4e2a\u8bbe\u5907\u5bf9\u5e94\u7684 Filter \u4fe1\u606f\n+```\n+\n+concatFilterByDevice() \u65b9\u6cd5\u7684\u4e3b\u8981\u5904\u7406\u903b\u8f91\u5728 concatFilterPath() \u4e2d\uff1a\n+\n+concatFilterPath() \u65b9\u6cd5\u904d\u5386\u672a\u62fc\u63a5\u7684 FilterOperator \u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u53d6\u8be5\u53f6\u5b50\u7ed3\u70b9\u7684\u8def\u5f84\uff0c\u5982\u679c\u8def\u5f84\u4ee5 time \u6216 root \u5f00\u5934\u5219\u4e0d\u505a\u5904\u7406\uff0c\u5426\u5219\u5c06\u8bbe\u5907\u540d\u4e0e\u8282\u70b9\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u540e\u8fd4\u56de\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5219\u5bf9\u8be5\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u8fdb\u884c\u8fed\u4ee3\u5904\u7406\u3002", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg3OTQ4Nw=="}, "originalCommit": {"oid": "d9e50163fa68fd24c8cd7fd9e1f5a194c6d85169"}, "originalPosition": 220}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MTQ3NzgzOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QxNTo0ODozOFrOFtRaQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNDoxOToxMVrOFtiKng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAxNTQ4OQ==", "bodyText": "\u5bf9\u4e8e\u8fd9\u4e2a\u4f18\u5316\u5668\uff0c\u6211\u89c9\u5f97\u53ef\u4ee5\u5199\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u505a\u8fd9\u4e2a\u4f18\u5316\uff0c\u5f53\u65f6\u505aspark\u662f\u4e3a\u4e86\u5b9e\u73b0\u7a84\u8868\u7684\u8fc7\u6ee4\u6761\u4ef6\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5bf9\u539f\u59cb\u6570\u636e\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u6211\u89c9\u5f97\u8fd9\u4e2a\u8f6c\u5316\u53cd\u800c\u4f1a\u589e\u52a0\u8fc7\u6ee4\u8282\u70b9\uff0c\u5176\u597d\u5904\u662f\u4ec0\u4e48\u5462\uff1f", "url": "https://github.com/apache/iotdb/pull/825#discussion_r383015489", "createdAt": "2020-02-23T15:48:38Z", "author": {"login": "SilverNarcissus"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +72,203 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55410c56289a40ad3089ff658e7612d22dcc5de2"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI5MDAxNA==", "bodyText": "\u4f60\u8bf4\u5f97\u5f88\u6709\u9053\u7406\u3002\u5bf9\u4e8e\u4e0d\u540c\u7684\u67e5\u8be2\uff0c\u5982\u679c\u8f6c\u5316\u4e3aDNF\u6216\u8bb8\u53ef\u4ee5\u8d77\u5230\u4f18\u5316\u7684\u6548\u679c\uff0c\u6216\u8bb8\u4f1a\u52a0\u5927\u67e5\u8be2\u7684\u5f00\u9500\u9002\u5f97\u5176\u53cd\u3002\u5bf9\u4e8e\u67e5\u8be2\u7684\u8fdb\u4e00\u6b65\u4f18\u5316\u6211\u4eec\u5c06\u5728\u672a\u6765\u505a\u8fdb\u4e00\u6b65\u7814\u7a76\u3002\u76ee\u524d\u7684\u6587\u6863\u662f\u5bf9\u73b0\u6709\u4ee3\u7801\u5b9e\u73b0\u6b65\u9aa4\u7684\u8bf4\u660e\u3002", "url": "https://github.com/apache/iotdb/pull/825#discussion_r383290014", "createdAt": "2020-02-24T14:19:11Z", "author": {"login": "Ring-k"}, "path": "docs/Documentation-CHN/SystemDesign/2-QueryEngine/2-Planner.md", "diffHunk": "@@ -50,14 +72,203 @@ mvn clean compile \u4e4b\u540e\u751f\u6210\u4ee3\u7801\u4f4d\u7f6e\uff1aserver/target/generated-sources/ant\n \t\u8c13\u8bcd\u53bb\u975e\u4f18\u5316\u5668\uff0c\u5c06\u8c13\u8bcd\u903b\u8f91\u4e2d\u7684\u975e\u64cd\u4f5c\u7b26\u53bb\u6389\u3002\n \n * org.apache.iotdb.db.qp.strategy.optimizer.DnfFilterOptimizer\n-\t\n+\n \t\u5c06\u8c13\u8bcd\u8f6c\u5316\u4e3a\u6790\u53d6\u8303\u5f0f\u3002\n-\t\n+\n * org.apache.iotdb.db.qp.strategy.optimizer.MergeSingleFilterOptimizer\n \n \t\u5c06\u76f8\u540c\u8def\u5f84\u7684\u8c13\u8bcd\u903b\u8f91\u5408\u5e76\u3002\n-\t\n+\n+### ConcatPathOptimizer\n+\n+ConcatPathOptimizer \u4f7f\u7528\u5176\u4e2d\u7684 transform() \u65b9\u6cd5\u5c06\u7ed9\u5b9a\u67e5\u8be2\u4e2d FROM \u5b50\u53e5\u4e2d\u7684\u524d\u7f00\u8def\u5f84\u4e0e SELECT \u5b50\u53e5\uff0c WHERE \u5b50\u53e5\u4e2d\u7684\u540e\u7f00\u8def\u5f84\u8fdb\u884c\u62fc\u63a5\u3002\u8be5\u65b9\u6cd5\u7684\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+    Operator transform(Operator operator)\n+    \u8f93\u5165\uff1a\u5f85\u8f6c\u5316\u7684 SFWOperator \n+    \u8f93\u51fa\uff1a\u8def\u5f84\u7ecf\u8fc7\u8fde\u63a5\u5904\u7406\u540e\u7684 SFWOperator\n+\n+\n+\u8be5\u65b9\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n+\n+1. \u53d6\u51fa FROM \u5b50\u53e5\u548c SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\uff0c\u524d\u8005\u79f0\u4e3a\u524d\u7f00\u8def\u5f84\uff0c\u540e\u8005\u79f0\u4e3a\u540e\u7f00\u8def\u5f84\u3002\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5305\u542b ALIGN BY DEVICE \u5b50\u53e5\u3002\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5219\u53ef\u8fdb\u5165\u6b65\u9aa43\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa44.\n+3. \u5219\u8c03\u7528 concatSelect() \u65b9\u6cd5\u5c06\u524d\u7f00\u8def\u5f84\u548c\u540e\u7f00\u8def\u5f84\u5408\u5e76\u8865\u5168\uff08\u5305\u62ec\u5e26 * \u7684\u8def\u5f84\uff09\uff0c\u5f62\u6210\u5168\u8def\u5f84\u3002\u5982\u679c\u67e5\u8be2\u4e2d\u5305\u542b SLIMIT \u5b50\u53e5\uff0c\u5219\u5bf9 SELECT \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u505a\u76f8\u5e94\u7684\u7b5b\u9009\u3002\u8fdb\u5165\u6b65\u9aa45.\n+4. \u5bf9\u6bcf\u4e00\u6761 FROM \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u5206\u6790\u5176\u8bbe\u5907\u540d\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\u3002\u8fdb\u5165\u6b65\u9aa45.\n+5. \u5bf9 WHERE \u5b50\u53e5\u8fc7\u6ee4\u6761\u4ef6\u4e2d\u5305\u542b\u7684\u540e\u7f00\u8def\u5f84\u505a\u8865\u5168\u3002\u5b8c\u6210\u540e\uff0cSELECT \u5b50\u53e5\u548c WHERE \u5b50\u53e5\u4e2d\u7684\u8def\u5f84\u90fd\u662f\u5b8c\u6574\u7684\u8def\u5f84\u3002\n+\n+### RemoveNotOptimizer\n+\n+RemoveNotOptimizer \u7c7b\u4e2d\u7684 removeNot() \u548c reverseFilter() \u65b9\u6cd5\u5171\u540c\u5b9e\u73b0\u4e86\u5220\u53bb NOT \u5173\u952e\u5b57\u7684\u529f\u80fd\u3002removeNot() \u65b9\u6cd5\u7684\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator removeNot(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u4f18\u5316\u7684\u53ef\u80fd\u542b\u6709 NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+    \u8f93\u51fa\uff1a\u4f18\u5316\u540e\uff0c\u4e0d\u5305\u542b NOT \u5173\u952e\u5b57\u7684\u8c13\u8bcd\n+\n+\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u4e3a\u5f85\u4f18\u5316\u7684\u8c13\u8bcd\uff0c\u5e76\u4e14\u9012\u5f52\u5730\u4f18\u5316\u8be5\u8c13\u8bcd\u4e2d\u7684\u6bcf\u4e2a\u5b50\u90e8\u5206\u3002\u5c06\u8f93\u5165\u7684\u8c13\u8bcd\u770b\u4f5c\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u662f BasicFunctionOperator \uff08\u5982 s0 > 10\uff09\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u64cd\u4f5c\u7b26\u3002 \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\u3002\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fd4\u56de\u8be5\u8282\u70b9\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5224\u65ad\u5173\u7cfb\u7c7b\u578b\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u3001\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u6b64\u65f6\u7684\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\u4e00\u5b9a\u5305\u542b2\u4e2a\u5b69\u5b50\u8282\u70b9\u3002\u5bf9\u5de6\u53f3\u5b69\u5b50\u9012\u5f52\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u53bb\u9664\u5de6\u53f3\u5b50\u6811\u4e2d\u7684 NOT \u5173\u952e\u8bcd\uff0c\u518d\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u8be5\u8282\u70b9\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u53d6\u53cd\uff0c\u5e76\u4e14\u53bb\u9664 NOT \u5173\u952e\u5b57\u3002\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u58f0\u660e\u5982\u4e0b\uff1a\n+\n+    FilterOperator reverseFilter(FilterOperator filter)\n+    \u8f93\u5165\uff1a\u5f85\u53d6\u53cd\u7684\u8282\u70b9\n+    \u8f93\u51fa\uff1a\u8be5\u8282\u70b9\u53d6\u53cd\u540e\u7684\u7ed3\u679c\n+\n+reverseFilter() \u65b9\u6cd5\u7684\u903b\u8f91\u5982\u4e0b\uff1a\n+\n+1. \u5224\u65ad\u8282\u70b9\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u8c03\u7528\u8be5\u8282\u70b9\u81ea\u8eab\u7684 reverseFunc() \u65b9\u6cd5\u53d6\u53cd\u3002\u5176\u4e2d\uff0creverseFunc() \u65b9\u6cd5\u53ea\u7528\u8bbe\u5b9a\u7684 Map \u6765\u5bf9\u5173\u952e\u5b57\u53d6\u53cd\uff0c\u5982\u5c06 < \u6620\u5c04\u4e3a >= ,\u5c06 AND \u6620\u5c04\u4e3a OR\u3002\u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fdb\u5165\u6b65\u9aa42.\n+2. \u5982\u679c\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u5982\u679c\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u5219\u8fdb\u5165\u6b65\u9aa43\uff1b\u5982\u679c\u662f\u201c\u975e\u201d\u5173\u7cfb\u5219\u8fdb\u5165\u6b65\u9aa44\uff1b\u5982\u679c\u65e2\u4e0d\u662f\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u5173\u7cfb\uff0c\u4e5f\u4e0d\u662f\u201c\u975e\u201d\u5173\u7cfb\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n+3. \u5bf9\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u9012\u5f52\u8c03\u7528 reverseFilter() \u65b9\u6cd5\uff0c\u5f97\u5230\u4e24\u4e2a\u53d6\u53cd\u540e\u7684\u5b50\u6811\uff0c\u5e76\u5c06\u8be5\u8282\u70b9\u8fd4\u56de\u3002\n+4. \u5bf9\u5b69\u5b50\u8282\u70b9\u8c03\u7528 removeNot() \u65b9\u6cd5\uff0c\u5e76\u5c06\u53bb\u9664 NOT \u5173\u952e\u5b57\u7684\u5b69\u5b50\u8282\u70b9\u8fd4\u56de\u3002\n+\n+removeNot() \u548c reverseFilter() \u4e4b\u95f4\u5b58\u5728\u4e00\u5b9a\u7684\u8026\u5408\u5173\u7cfb\u3002removeNot() \u8bbf\u95ee\u975e NOT \u5173\u7cfb\u7684\u8282\u70b9\uff0c\u786e\u4fdd\u4e0d\u542b\u6709 NOT \u5173\u952e\u5b57\uff1breverseFilter() \u8bbf\u95ee NOT \u5173\u7cfb\u8282\u70b9\u4ee5\u53ca\u5b50\u8282\u70b9\uff0c\u5e76\u8fdb\u884c\u53d6\u53cd\u8f6c\u6362\uff0c\u5220\u53bb NOT \u5173\u952e\u5b57\u3002\n+\n+### DnfFilterOptimizer", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAxNTQ4OQ=="}, "originalCommit": {"oid": "55410c56289a40ad3089ff658e7612d22dcc5de2"}, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 231, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}