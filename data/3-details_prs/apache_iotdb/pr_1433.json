{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMTk3NDEx", "number": 1433, "title": "Abstract InsertPlan", "bodyText": "Hi, this PR is working on an abstraction of InsertPlan and InsertTabletPlan, which will rename InsertPlan to InsertRowPlan and make an abstraction from the two plans", "createdAt": "2020-06-29T05:06:25Z", "url": "https://github.com/apache/iotdb/pull/1433", "merged": true, "mergeCommit": {"oid": "58b10ff72ae515d52b847f01e951e1b9c4c28475"}, "closed": true, "closedAt": "2020-06-30T11:30:31Z", "author": {"login": "LebronAl"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcv6T8YAH2gAyNDQxMTk3NDExOmViM2VmYTg1ZmVjNzY1MzFlOTkwNTFlZjFmNjExMzEyMjdmNDY2MGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwT9bEAFqTQzOTkyMzEzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "eb3efa85fec76531e99051ef1f61131227f4660d", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/eb3efa85fec76531e99051ef1f61131227f4660d", "committedDate": "2020-06-29T05:36:48Z", "message": "Abstract insertPlan"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a3e0d3e27694be3631160c78cb718cc4b73fb177", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/a3e0d3e27694be3631160c78cb718cc4b73fb177", "committedDate": "2020-06-29T05:05:30Z", "message": "Abstract insertPlan"}, "afterCommit": {"oid": "eb3efa85fec76531e99051ef1f61131227f4660d", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/eb3efa85fec76531e99051ef1f61131227f4660d", "committedDate": "2020-06-29T05:36:48Z", "message": "Abstract insertPlan"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4OTIyNjYz", "url": "https://github.com/apache/iotdb/pull/1433#pullrequestreview-438922663", "createdAt": "2020-06-29T06:41:51Z", "commit": {"oid": "eb3efa85fec76531e99051ef1f61131227f4660d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNjo0MTo1MVrOGqGvhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNjo0MTo1MVrOGqGvhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwMzg0NQ==", "bodyText": "maybe you should use \"markFailedMeasurementInsertion\"", "url": "https://github.com/apache/iotdb/pull/1433#discussion_r446803845", "createdAt": "2020-06-29T06:41:51Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/crud/InsertPlan.java", "diffHunk": "@@ -369,97 +81,16 @@ public int getFailedMeasurementNumber() {\n     return failedMeasurements == null ? 0 : failedMeasurements.size();\n   }\n \n-  public TSDataType[] getTypes() {\n-    return types;\n-  }\n-\n-  public void setTypes(TSDataType[] types) {\n-    this.types = types;\n-  }\n-\n-  public void setValues(ByteBuffer buffer) throws QueryProcessException {\n-    for (int i = 0; i < measurements.length; i++) {\n-      types[i] = ReadWriteIOUtils.readDataType(buffer);\n-      switch (types[i]) {\n-        case BOOLEAN:\n-          values[i] = ReadWriteIOUtils.readBool(buffer);\n-          break;\n-        case INT32:\n-          values[i] = ReadWriteIOUtils.readInt(buffer);\n-          break;\n-        case INT64:\n-          values[i] = ReadWriteIOUtils.readLong(buffer);\n-          break;\n-        case FLOAT:\n-          values[i] = ReadWriteIOUtils.readFloat(buffer);\n-          break;\n-        case DOUBLE:\n-          values[i] = ReadWriteIOUtils.readDouble(buffer);\n-          break;\n-        case TEXT:\n-          values[i] = ReadWriteIOUtils.readBinary(buffer);\n-          break;\n-        default:\n-          throw new QueryProcessException(\"Unsupported data type:\" + types[i]);\n-      }\n-    }\n-  }\n-\n-  @Override\n-  public void serialize(ByteBuffer buffer) {\n-    int type = PhysicalPlanType.INSERT.ordinal();\n-    buffer.put((byte) type);\n-    buffer.putLong(time);\n-\n-    putString(buffer, deviceId);\n-\n-    buffer.putInt(measurements.length - (failedMeasurements == null ? 0 : failedMeasurements.size()));\n-\n-    for (String measurement : measurements) {\n-      if (measurement != null) {\n-        putString(buffer, measurement);\n-      }\n-    }\n-\n-    try {\n-      putValues(buffer);\n-    } catch (QueryProcessException e) {\n-      e.printStackTrace();\n-    }\n-  }\n-\n-  @Override\n-  public void deserialize(ByteBuffer buffer) {\n-    this.time = buffer.getLong();\n-    this.deviceId = readString(buffer);\n-\n-    int measurementSize = buffer.getInt();\n-\n-    this.measurements = new String[measurementSize];\n-    for (int i = 0; i < measurementSize; i++) {\n-      measurements[i] = readString(buffer);\n-    }\n-\n-    this.types = new TSDataType[measurementSize];\n-    this.values = new Object[measurementSize];\n-    try {\n-      setValues(buffer);\n-    } catch (QueryProcessException e) {\n-      e.printStackTrace();\n+  /**\n+   * @param index failed measurement index\n+   */\n+  public void markMeasurementInsertionFailed(int index) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb3efa85fec76531e99051ef1f61131227f4660d"}, "originalPosition": 448}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44c3ce3414df3962e8e0d00beb53af93c209e352", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/44c3ce3414df3962e8e0d00beb53af93c209e352", "committedDate": "2020-06-29T16:08:39Z", "message": "rename markMeasurementInsertionFailed to markFailedMeasurementInsertion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5ODM2ODEy", "url": "https://github.com/apache/iotdb/pull/1433#pullrequestreview-439836812", "createdAt": "2020-06-30T09:27:44Z", "commit": {"oid": "44c3ce3414df3962e8e0d00beb53af93c209e352"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5OTIzMTM3", "url": "https://github.com/apache/iotdb/pull/1433#pullrequestreview-439923137", "createdAt": "2020-06-30T11:29:44Z", "commit": {"oid": "44c3ce3414df3962e8e0d00beb53af93c209e352"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3660, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}