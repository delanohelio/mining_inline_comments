{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NTI5NjY1", "number": 1744, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTowMjozMFrOFB0vcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMToxODo1N1rOFD8Hkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDU3MDA5OnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.hadoop.distribution/src/main/java/org/talend/hadoop/distribution/dynamic/template/modulegroup/node/spark/DynamicSparkNodeModuleGroup.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTowMjozMFrOIArB6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxODozODoyOFrOIA04iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3NTkxNA==", "bodyText": "Collections.emptySet<>() return immutable collection, so if super.getModuleGroups().add(val) is called - then UnsupportedOperationExpcetion will be raised. I guess it should be just a new HashSet<>(); Agree?", "url": "https://github.com/Talend/tbd-studio-se/pull/1744#discussion_r537575914", "createdAt": "2020-12-07T15:02:30Z", "author": {"login": "amedvedenko"}, "path": "main/plugins/org.talend.hadoop.distribution/src/main/java/org/talend/hadoop/distribution/dynamic/template/modulegroup/node/spark/DynamicSparkNodeModuleGroup.java", "diffHunk": "@@ -0,0 +1,47 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.hadoop.distribution.dynamic.template.modulegroup.node.spark;\n+\n+import java.util.Collections;\n+import java.util.Set;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.talend.hadoop.distribution.DistributionModuleGroup;\n+import org.talend.hadoop.distribution.dynamic.adapter.DynamicPluginAdapter;\n+import org.talend.hadoop.distribution.dynamic.template.modulegroup.DynamicModuleGroupConstant;\n+import org.talend.hadoop.distribution.dynamic.template.modulegroup.IDynamicModuleGroupConstant;\n+import org.talend.hadoop.distribution.dynamic.template.modulegroup.node.AbstractNodeModuleGroup;\n+import org.talend.hadoop.distribution.utils.ModuleGroupsUtils;\n+\n+public class DynamicSparkNodeModuleGroup extends AbstractNodeModuleGroup {\n+\n+    public DynamicSparkNodeModuleGroup(DynamicPluginAdapter pluginAdapter) {\n+        super(pluginAdapter);\n+    }\n+\n+    public Set<DistributionModuleGroup> getModuleGroups(String distribution, String version, IDynamicModuleGroupConstant moduleGroup, String condition) throws Exception {\n+        DynamicPluginAdapter pluginAdapter = getPluginAdapter();\n+\n+        String moduleGroupRuntimeId = pluginAdapter\n+                .getRuntimeModuleGroupIdByTemplateId(moduleGroup.getModuleName());\n+\n+        checkRuntimeId(moduleGroupRuntimeId);\n+\n+        if (StringUtils.isNotBlank(moduleGroupRuntimeId)) {\n+            return ModuleGroupsUtils.getModuleGroups(distribution, version, condition, moduleGroupRuntimeId, true);\n+        } else {\n+            return Collections.emptySet();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9c82a17e71ad64d209834b160b08c2a3c4e415d"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3NzMxMg==", "bodyText": "if UnsupportedOperationException is expected in case of add - then I agree with emptySet. But it seems it isn't expected", "url": "https://github.com/Talend/tbd-studio-se/pull/1744#discussion_r537577312", "createdAt": "2020-12-07T15:04:19Z", "author": {"login": "amedvedenko"}, "path": "main/plugins/org.talend.hadoop.distribution/src/main/java/org/talend/hadoop/distribution/dynamic/template/modulegroup/node/spark/DynamicSparkNodeModuleGroup.java", "diffHunk": "@@ -0,0 +1,47 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.hadoop.distribution.dynamic.template.modulegroup.node.spark;\n+\n+import java.util.Collections;\n+import java.util.Set;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.talend.hadoop.distribution.DistributionModuleGroup;\n+import org.talend.hadoop.distribution.dynamic.adapter.DynamicPluginAdapter;\n+import org.talend.hadoop.distribution.dynamic.template.modulegroup.DynamicModuleGroupConstant;\n+import org.talend.hadoop.distribution.dynamic.template.modulegroup.IDynamicModuleGroupConstant;\n+import org.talend.hadoop.distribution.dynamic.template.modulegroup.node.AbstractNodeModuleGroup;\n+import org.talend.hadoop.distribution.utils.ModuleGroupsUtils;\n+\n+public class DynamicSparkNodeModuleGroup extends AbstractNodeModuleGroup {\n+\n+    public DynamicSparkNodeModuleGroup(DynamicPluginAdapter pluginAdapter) {\n+        super(pluginAdapter);\n+    }\n+\n+    public Set<DistributionModuleGroup> getModuleGroups(String distribution, String version, IDynamicModuleGroupConstant moduleGroup, String condition) throws Exception {\n+        DynamicPluginAdapter pluginAdapter = getPluginAdapter();\n+\n+        String moduleGroupRuntimeId = pluginAdapter\n+                .getRuntimeModuleGroupIdByTemplateId(moduleGroup.getModuleName());\n+\n+        checkRuntimeId(moduleGroupRuntimeId);\n+\n+        if (StringUtils.isNotBlank(moduleGroupRuntimeId)) {\n+            return ModuleGroupsUtils.getModuleGroups(distribution, version, condition, moduleGroupRuntimeId, true);\n+        } else {\n+            return Collections.emptySet();\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3NTkxNA=="}, "originalCommit": {"oid": "d9c82a17e71ad64d209834b160b08c2a3c4e415d"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwODg3NA==", "bodyText": "I honestly generalized what was done in DynamicSparkDynamoDBNodeModuleGroup so I guess immutability is not an issue here. I will try to clarify but thank you to go into such details", "url": "https://github.com/Talend/tbd-studio-se/pull/1744#discussion_r537708874", "createdAt": "2020-12-07T17:55:18Z", "author": {"login": "lbourgeois"}, "path": "main/plugins/org.talend.hadoop.distribution/src/main/java/org/talend/hadoop/distribution/dynamic/template/modulegroup/node/spark/DynamicSparkNodeModuleGroup.java", "diffHunk": "@@ -0,0 +1,47 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.hadoop.distribution.dynamic.template.modulegroup.node.spark;\n+\n+import java.util.Collections;\n+import java.util.Set;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.talend.hadoop.distribution.DistributionModuleGroup;\n+import org.talend.hadoop.distribution.dynamic.adapter.DynamicPluginAdapter;\n+import org.talend.hadoop.distribution.dynamic.template.modulegroup.DynamicModuleGroupConstant;\n+import org.talend.hadoop.distribution.dynamic.template.modulegroup.IDynamicModuleGroupConstant;\n+import org.talend.hadoop.distribution.dynamic.template.modulegroup.node.AbstractNodeModuleGroup;\n+import org.talend.hadoop.distribution.utils.ModuleGroupsUtils;\n+\n+public class DynamicSparkNodeModuleGroup extends AbstractNodeModuleGroup {\n+\n+    public DynamicSparkNodeModuleGroup(DynamicPluginAdapter pluginAdapter) {\n+        super(pluginAdapter);\n+    }\n+\n+    public Set<DistributionModuleGroup> getModuleGroups(String distribution, String version, IDynamicModuleGroupConstant moduleGroup, String condition) throws Exception {\n+        DynamicPluginAdapter pluginAdapter = getPluginAdapter();\n+\n+        String moduleGroupRuntimeId = pluginAdapter\n+                .getRuntimeModuleGroupIdByTemplateId(moduleGroup.getModuleName());\n+\n+        checkRuntimeId(moduleGroupRuntimeId);\n+\n+        if (StringUtils.isNotBlank(moduleGroupRuntimeId)) {\n+            return ModuleGroupsUtils.getModuleGroups(distribution, version, condition, moduleGroupRuntimeId, true);\n+        } else {\n+            return Collections.emptySet();\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3NTkxNA=="}, "originalCommit": {"oid": "d9c82a17e71ad64d209834b160b08c2a3c4e415d"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzczNzM1Mw==", "bodyText": "ok, if immutability is ok then it's ok, LGTM", "url": "https://github.com/Talend/tbd-studio-se/pull/1744#discussion_r537737353", "createdAt": "2020-12-07T18:38:28Z", "author": {"login": "amedvedenko"}, "path": "main/plugins/org.talend.hadoop.distribution/src/main/java/org/talend/hadoop/distribution/dynamic/template/modulegroup/node/spark/DynamicSparkNodeModuleGroup.java", "diffHunk": "@@ -0,0 +1,47 @@\n+// ============================================================================\n+//\n+// Copyright (C) 2006-2019 Talend Inc. - www.talend.com\n+//\n+// This source code is available under agreement available at\n+// %InstallDIR%\\features\\org.talend.rcp.branding.%PRODUCTNAME%\\%PRODUCTNAME%license.txt\n+//\n+// You should have received a copy of the agreement\n+// along with this program; if not, write to Talend SA\n+// 9 rue Pages 92150 Suresnes, France\n+//\n+// ============================================================================\n+package org.talend.hadoop.distribution.dynamic.template.modulegroup.node.spark;\n+\n+import java.util.Collections;\n+import java.util.Set;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.talend.hadoop.distribution.DistributionModuleGroup;\n+import org.talend.hadoop.distribution.dynamic.adapter.DynamicPluginAdapter;\n+import org.talend.hadoop.distribution.dynamic.template.modulegroup.DynamicModuleGroupConstant;\n+import org.talend.hadoop.distribution.dynamic.template.modulegroup.IDynamicModuleGroupConstant;\n+import org.talend.hadoop.distribution.dynamic.template.modulegroup.node.AbstractNodeModuleGroup;\n+import org.talend.hadoop.distribution.utils.ModuleGroupsUtils;\n+\n+public class DynamicSparkNodeModuleGroup extends AbstractNodeModuleGroup {\n+\n+    public DynamicSparkNodeModuleGroup(DynamicPluginAdapter pluginAdapter) {\n+        super(pluginAdapter);\n+    }\n+\n+    public Set<DistributionModuleGroup> getModuleGroups(String distribution, String version, IDynamicModuleGroupConstant moduleGroup, String condition) throws Exception {\n+        DynamicPluginAdapter pluginAdapter = getPluginAdapter();\n+\n+        String moduleGroupRuntimeId = pluginAdapter\n+                .getRuntimeModuleGroupIdByTemplateId(moduleGroup.getModuleName());\n+\n+        checkRuntimeId(moduleGroupRuntimeId);\n+\n+        if (StringUtils.isNotBlank(moduleGroupRuntimeId)) {\n+            return ModuleGroupsUtils.getModuleGroups(distribution, version, condition, moduleGroupRuntimeId, true);\n+        } else {\n+            return Collections.emptySet();\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3NTkxNA=="}, "originalCommit": {"oid": "d9c82a17e71ad64d209834b160b08c2a3c4e415d"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDY0NDU0OnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.hadoop.distribution.hdpx/resources/builtin/hdpx/Hortonworks_HDP_2_6_0_3_8.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNToxNjozOFrOIArtpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxODowMDowNlrOIAzXTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU4NzExMA==", "bodyText": "in resulting file, there is a duplicate of HDFS-NOT-SPARK-1-6-LIB-DYNAMIC, I think it's a mistake. Could you please look at it?", "url": "https://github.com/Talend/tbd-studio-se/pull/1744#discussion_r537587110", "createdAt": "2020-12-07T15:16:38Z", "author": {"login": "amedvedenko"}, "path": "main/plugins/org.talend.hadoop.distribution.hdpx/resources/builtin/hdpx/Hortonworks_HDP_2_6_0_3_8.json", "diffHunk": "@@ -861,13 +893,13 @@\n     }, {\n       \"childNodes\" : [ {\n         \"childNodes\" : [ ],\n-        \"id\" : \"DYNAMIC_HDP_2_6_0_3_8_talend_bigdata_aws_lib_1_0_1\",\n+        \"id\" : \"DYNAMIC_HDP_2_6_0_3_8_jackson_core_2_6_6_jar\",\n         \"tagName\" : \"library\"\n       } ],\n-      \"description\" : \"\",\n-      \"id\" : \"DYNAMIC_HDP_2_6_0_3_8_SPARK-S3-LIB-MRREQUIRED-DYNAMIC\",\n+      \"description\" : \"Hdfs libraries for every execution engine except Spark 1.6\",\n+      \"id\" : \"DYNAMIC_HDP_2_6_0_3_8_HDFS_NOT_SPARK_1_6_LIB_DYNAMIC\",\n       \"tagName\" : \"libraryNeededGroup\",\n-      \"templateId\" : \"SPARK-S3-LIB-MRREQUIRED-DYNAMIC\"\n+      \"templateId\" : \"HDFS-NOT-SPARK-1-6-LIB-DYNAMIC\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9c82a17e71ad64d209834b160b08c2a3c4e415d"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcxMjQ2Mg==", "bodyText": "Indeed in template there are 2 HDFS-NOT-SPARK-1-6-LIB-DYNAMIC module group definition.\nNot related to this PR but I will fix it in that PR.\nGood catch", "url": "https://github.com/Talend/tbd-studio-se/pull/1744#discussion_r537712462", "createdAt": "2020-12-07T18:00:06Z", "author": {"login": "lbourgeois"}, "path": "main/plugins/org.talend.hadoop.distribution.hdpx/resources/builtin/hdpx/Hortonworks_HDP_2_6_0_3_8.json", "diffHunk": "@@ -861,13 +893,13 @@\n     }, {\n       \"childNodes\" : [ {\n         \"childNodes\" : [ ],\n-        \"id\" : \"DYNAMIC_HDP_2_6_0_3_8_talend_bigdata_aws_lib_1_0_1\",\n+        \"id\" : \"DYNAMIC_HDP_2_6_0_3_8_jackson_core_2_6_6_jar\",\n         \"tagName\" : \"library\"\n       } ],\n-      \"description\" : \"\",\n-      \"id\" : \"DYNAMIC_HDP_2_6_0_3_8_SPARK-S3-LIB-MRREQUIRED-DYNAMIC\",\n+      \"description\" : \"Hdfs libraries for every execution engine except Spark 1.6\",\n+      \"id\" : \"DYNAMIC_HDP_2_6_0_3_8_HDFS_NOT_SPARK_1_6_LIB_DYNAMIC\",\n       \"tagName\" : \"libraryNeededGroup\",\n-      \"templateId\" : \"SPARK-S3-LIB-MRREQUIRED-DYNAMIC\"\n+      \"templateId\" : \"HDFS-NOT-SPARK-1-6-LIB-DYNAMIC\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU4NzExMA=="}, "originalCommit": {"oid": "d9c82a17e71ad64d209834b160b08c2a3c4e415d"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDY0ODA4OnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.hadoop.distribution.hdpx/resources/builtin/hdpx/Hortonworks_HDP_2_6_0_3_8.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNToxNzoxMVrOIArvnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxODowNDowOFrOIAzh6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU4NzYxNQ==", "bodyText": "why the version is change?", "url": "https://github.com/Talend/tbd-studio-se/pull/1744#discussion_r537587615", "createdAt": "2020-12-07T15:17:11Z", "author": {"login": "amedvedenko"}, "path": "main/plugins/org.talend.hadoop.distribution.hdpx/resources/builtin/hdpx/Hortonworks_HDP_2_6_0_3_8.json", "diffHunk": "@@ -5,7 +5,7 @@\n     \"id\" : \"HDP_2_6_0_3_8\",\n     \"name\" : \"Hortonworks Data Platform V2.6.0.3-8\",\n     \"repository\" : \"https://talend-update.talend.com/nexus/content/groups/dynamicdistribution/\",\n-    \"selectedSparkVersions\" : [ \"SPARK_2_1\" ],\n+    \"selectedSparkVersions\" : [ \"SPARK_2_3\" ],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9c82a17e71ad64d209834b160b08c2a3c4e415d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcxNTE3Ng==", "bodyText": "Indeed it should not change. I remember some discussions around that some time ago. Will try to clarify", "url": "https://github.com/Talend/tbd-studio-se/pull/1744#discussion_r537715176", "createdAt": "2020-12-07T18:04:08Z", "author": {"login": "lbourgeois"}, "path": "main/plugins/org.talend.hadoop.distribution.hdpx/resources/builtin/hdpx/Hortonworks_HDP_2_6_0_3_8.json", "diffHunk": "@@ -5,7 +5,7 @@\n     \"id\" : \"HDP_2_6_0_3_8\",\n     \"name\" : \"Hortonworks Data Platform V2.6.0.3-8\",\n     \"repository\" : \"https://talend-update.talend.com/nexus/content/groups/dynamicdistribution/\",\n-    \"selectedSparkVersions\" : [ \"SPARK_2_1\" ],\n+    \"selectedSparkVersions\" : [ \"SPARK_2_3\" ],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU4NzYxNQ=="}, "originalCommit": {"oid": "d9c82a17e71ad64d209834b160b08c2a3c4e415d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Njc1MDI3OnYy", "diffSide": "RIGHT", "path": "main/plugins/org.talend.hadoop.distribution.emr5290/src/main/java/org/talend/hadoop/distribution/emr5290/EMR5290Distribution.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMToxODo1N1rOID0dJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMTo0OTo1NFrOID1ddA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3NjA2OQ==", "bodyText": "Were these imports missing in this class?\nI don't see you add their usage, maybe they are redundant?", "url": "https://github.com/Talend/tbd-studio-se/pull/1744#discussion_r540876069", "createdAt": "2020-12-11T11:18:57Z", "author": {"login": "hliashchuk"}, "path": "main/plugins/org.talend.hadoop.distribution.emr5290/src/main/java/org/talend/hadoop/distribution/emr5290/EMR5290Distribution.java", "diffHunk": "@@ -35,11 +36,15 @@\n import org.talend.hadoop.distribution.component.SparkStreamingComponent;\n import org.talend.hadoop.distribution.component.SqoopComponent;\n import org.talend.hadoop.distribution.condition.ComponentCondition;\n+import org.talend.hadoop.distribution.condition.common.SparkBatchLinkedNodeCondition;\n import org.talend.hadoop.distribution.constants.HDFSConstant;\n import org.talend.hadoop.distribution.constants.MRConstant;\n import org.talend.hadoop.distribution.constants.SparkBatchConstant;\n import org.talend.hadoop.distribution.constants.SparkStreamingConstant;\n import org.talend.hadoop.distribution.constants.emr.IAmazonEMRDistribution;\n+import org.talend.hadoop.distribution.dynamic.template.modulegroup.DynamicModuleGroupConstant;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72dd912bc0511e43caf55afa817f25c289687454"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg5MjUzMg==", "bodyText": "You're right, some are not needed, good catch", "url": "https://github.com/Talend/tbd-studio-se/pull/1744#discussion_r540892532", "createdAt": "2020-12-11T11:49:54Z", "author": {"login": "lbourgeois"}, "path": "main/plugins/org.talend.hadoop.distribution.emr5290/src/main/java/org/talend/hadoop/distribution/emr5290/EMR5290Distribution.java", "diffHunk": "@@ -35,11 +36,15 @@\n import org.talend.hadoop.distribution.component.SparkStreamingComponent;\n import org.talend.hadoop.distribution.component.SqoopComponent;\n import org.talend.hadoop.distribution.condition.ComponentCondition;\n+import org.talend.hadoop.distribution.condition.common.SparkBatchLinkedNodeCondition;\n import org.talend.hadoop.distribution.constants.HDFSConstant;\n import org.talend.hadoop.distribution.constants.MRConstant;\n import org.talend.hadoop.distribution.constants.SparkBatchConstant;\n import org.talend.hadoop.distribution.constants.SparkStreamingConstant;\n import org.talend.hadoop.distribution.constants.emr.IAmazonEMRDistribution;\n+import org.talend.hadoop.distribution.dynamic.template.modulegroup.DynamicModuleGroupConstant;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3NjA2OQ=="}, "originalCommit": {"oid": "72dd912bc0511e43caf55afa817f25c289687454"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4750, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}