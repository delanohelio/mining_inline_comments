{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MTQ5OTA2", "number": 392, "title": "Expose all GraphQL error properties", "bodyText": "Description of changes:\nThe 2018 GraphQL spec specifies that the error type has 4 fields: message, location, path, extensions).   The extensions field is designed to point to a Map, and can contain any custom error information, as desired by the implementor.   AppSync added some additional fields at the root (errorType, errorInfo, data) of the error object, which goes against the 2018 GraphQL specification (likely because AppSync implemented it prior to 2018, when extensions was not part of the spec).   This PR handles this by merged all non-expected fields into the extensions map.  If the same field exist in both places, the field inside of extensions take precedence, and the field at the root level is discarded.\nAfter deserialization, the extensions data is stored as a Map<String, Object>.  I considered adding a type parameter, E, to represent the data inside of extensions, but I did not end up going with this approach because it would have needed to be added as a second type parameter to all of the APICategoryBehavior method response types, and that seemed overly complex.  I'm open to other suggestions for how to make this work though, there may be another approach I'm not thinking of.\nI did create an AppSyncExtensions model object (currently only used by the unit test), which can be used by DataStore to convert from a Map to a strongly-typed object.\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-04-22T09:00:49Z", "url": "https://github.com/aws-amplify/amplify-android/pull/392", "merged": true, "mergeCommit": {"oid": "e97b980fb5370768efc9e9d388cd3bd625f36577"}, "closed": true, "closedAt": "2020-04-24T20:17:10Z", "author": {"login": "richardmcclellan"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaEay2AH2gAyNDA3MTQ5OTA2OjQ3M2Y3M2I3ODFmMDUyODc4ZDJkZGQ2NmE4Mjg0OGI5MmJlMzQxYzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABca3Zx5gFqTQwMDI0MTg0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "473f73b781f052878d2ddd66a82848b92be341c7", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/473f73b781f052878d2ddd66a82848b92be341c7", "committedDate": "2020-04-22T08:57:00Z", "message": "Expose all GraphQL error properties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3OTk1MTIz", "url": "https://github.com/aws-amplify/amplify-android/pull/392#pullrequestreview-397995123", "createdAt": "2020-04-22T09:11:26Z", "commit": {"oid": "473f73b781f052878d2ddd66a82848b92be341c7"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOToxMToyNlrOGJr_UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOToyNjoxM1rOGJsn_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxMTA4OQ==", "bodyText": "can it be final?", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r412811089", "createdAt": "2020-04-22T09:11:26Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/error/GraphQLLocation.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.graphql.error;\n+\n+/**\n+ * Location mapping to a particular line and column in the request.\n+ */\n+public class GraphQLLocation {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "473f73b781f052878d2ddd66a82848b92be341c7"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxMjk2MA==", "bodyText": "Maybe ClassCastException might be a better fit?", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r412812960", "createdAt": "2020-04-22T09:14:14Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/error/GraphQLPathSegment.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.graphql.error;\n+\n+public class GraphQLPathSegment {\n+    private final Object value;\n+\n+    public GraphQLPathSegment(int value) {\n+        this.value = Integer.valueOf(value);\n+    }\n+\n+    public GraphQLPathSegment(String value) {\n+        this.value = value;\n+    }\n+\n+    /**\n+     * Used before calling getAsInt() to confirm if value is int.\n+     *\n+     * @return boolean, whether segment is an int\n+     */\n+    public boolean isInteger() {\n+        return value instanceof Integer;\n+    }\n+\n+    /**\n+     * Used before calling getAsString() to confirm if value is String.\n+     *\n+     * @return boolean, whether segment is a String\n+     */\n+    public boolean isString() {\n+        return value instanceof String;\n+    }\n+\n+    /**\n+     * Convenience method to get this element as a String.\n+     *\n+     * @return get this element as a String\n+     * @throws IllegalStateException if the value contained is not a String.\n+     */\n+    public String getAsString() {\n+        if (isString()) {\n+            return (String) value;\n+        }\n+        throw new IllegalStateException(\"Not a String: \" + value.getClass().getSimpleName());\n+    }\n+\n+    /**\n+     * Convenience method to get this element as an int.\n+     *\n+     * @return get this element as an int\n+     * @throws IllegalStateException if the value contained is not an Integer.\n+     */\n+    public int getAsInt() {\n+        if (isInteger()) {\n+            return ((Integer) value).intValue();\n+        }\n+        throw new IllegalStateException(\"Not an int: \" + value.getClass().getSimpleName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "473f73b781f052878d2ddd66a82848b92be341c7"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxMzE2MQ==", "bodyText": "final?", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r412813161", "createdAt": "2020-04-22T09:14:31Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/error/GraphQLPathSegment.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.graphql.error;\n+\n+public class GraphQLPathSegment {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "473f73b781f052878d2ddd66a82848b92be341c7"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxNjAwNw==", "bodyText": "@Nullable annotation on the rest of the parameters would be helpful, since it is a public constructor", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r412816007", "createdAt": "2020-04-22T09:18:24Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/GraphQLResponse.java", "diffHunk": "@@ -110,24 +113,73 @@ public int hashCode() {\n      * See https://graphql.github.io/graphql-spec/June2018/#sec-Response-Format\n      */\n     public static final class Error {\n+        // Description of the error\n         private final String message;\n \n+        // list of locations describing the syntax element\n+        private final List<GraphQLLocation> locations;\n+\n+        // Details the key path of the response field with error.\n+        private final List<GraphQLPathSegment> path;\n+\n+        // Additional error map, reserved for implementors to use however they see fit.\n+        private final Map<String, Object> extensions;\n+\n         /**\n          * Constructs error response in accordance with GraphQL specs.\n          * @param message error message\n+         * @param locations list of locations describing the syntax element\n+         * @param path The key path of the response field with error.\n+         * @param extensions additional error map, reserved for implementors.\n          */\n-        public Error(@NonNull String message) {\n+        public Error(@NonNull String message, List<GraphQLLocation> locations, List<GraphQLPathSegment> path,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "473f73b781f052878d2ddd66a82848b92be341c7"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxNzIxMA==", "bodyText": "Let's make the list properties immutable. Luckily, we have nice Immutable utility class to help with that :)\nreturn Immutable.of(locations);", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r412817210", "createdAt": "2020-04-22T09:20:10Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/GraphQLResponse.java", "diffHunk": "@@ -110,24 +113,73 @@ public int hashCode() {\n      * See https://graphql.github.io/graphql-spec/June2018/#sec-Response-Format\n      */\n     public static final class Error {\n+        // Description of the error\n         private final String message;\n \n+        // list of locations describing the syntax element\n+        private final List<GraphQLLocation> locations;\n+\n+        // Details the key path of the response field with error.\n+        private final List<GraphQLPathSegment> path;\n+\n+        // Additional error map, reserved for implementors to use however they see fit.\n+        private final Map<String, Object> extensions;\n+\n         /**\n          * Constructs error response in accordance with GraphQL specs.\n          * @param message error message\n+         * @param locations list of locations describing the syntax element\n+         * @param path The key path of the response field with error.\n+         * @param extensions additional error map, reserved for implementors.\n          */\n-        public Error(@NonNull String message) {\n+        public Error(@NonNull String message, List<GraphQLLocation> locations, List<GraphQLPathSegment> path,\n+                     Map<String, Object> extensions) {\n             this.message = Objects.requireNonNull(message);\n+            this.locations = locations;\n+            this.path = path;\n+            this.extensions = extensions;\n         }\n \n         /**\n          * Gets the error message.\n+         *\n          * @return error message\n          */\n         public String getMessage() {\n             return message;\n         }\n \n+        /**\n+         * Gets the list of locations where each location describes the beginning of an associated\n+         * syntax element.\n+         *\n+         * @return locations\n+         */\n+        public List<GraphQLLocation> getLocations() {\n+            return locations;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "473f73b781f052878d2ddd66a82848b92be341c7"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxNzQ5NA==", "bodyText": "^", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r412817494", "createdAt": "2020-04-22T09:20:35Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/GraphQLResponse.java", "diffHunk": "@@ -110,24 +113,73 @@ public int hashCode() {\n      * See https://graphql.github.io/graphql-spec/June2018/#sec-Response-Format\n      */\n     public static final class Error {\n+        // Description of the error\n         private final String message;\n \n+        // list of locations describing the syntax element\n+        private final List<GraphQLLocation> locations;\n+\n+        // Details the key path of the response field with error.\n+        private final List<GraphQLPathSegment> path;\n+\n+        // Additional error map, reserved for implementors to use however they see fit.\n+        private final Map<String, Object> extensions;\n+\n         /**\n          * Constructs error response in accordance with GraphQL specs.\n          * @param message error message\n+         * @param locations list of locations describing the syntax element\n+         * @param path The key path of the response field with error.\n+         * @param extensions additional error map, reserved for implementors.\n          */\n-        public Error(@NonNull String message) {\n+        public Error(@NonNull String message, List<GraphQLLocation> locations, List<GraphQLPathSegment> path,\n+                     Map<String, Object> extensions) {\n             this.message = Objects.requireNonNull(message);\n+            this.locations = locations;\n+            this.path = path;\n+            this.extensions = extensions;\n         }\n \n         /**\n          * Gets the error message.\n+         *\n          * @return error message\n          */\n         public String getMessage() {\n             return message;\n         }\n \n+        /**\n+         * Gets the list of locations where each location describes the beginning of an associated\n+         * syntax element.\n+         *\n+         * @return locations\n+         */\n+        public List<GraphQLLocation> getLocations() {\n+            return locations;\n+        }\n+\n+        /**\n+         * Gets the key path of the response field which experienced the error.  This allows clients\n+         * to identify whether a null result is intentional or caused by a runtime error.  The\n+         * values are either strings or 0-index integers.\n+         *\n+         * @return path\n+         */\n+        public List<GraphQLPathSegment> getPath() {\n+            return path;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "473f73b781f052878d2ddd66a82848b92be341c7"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxNzU0Mg==", "bodyText": "^", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r412817542", "createdAt": "2020-04-22T09:20:41Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/GraphQLResponse.java", "diffHunk": "@@ -110,24 +113,73 @@ public int hashCode() {\n      * See https://graphql.github.io/graphql-spec/June2018/#sec-Response-Format\n      */\n     public static final class Error {\n+        // Description of the error\n         private final String message;\n \n+        // list of locations describing the syntax element\n+        private final List<GraphQLLocation> locations;\n+\n+        // Details the key path of the response field with error.\n+        private final List<GraphQLPathSegment> path;\n+\n+        // Additional error map, reserved for implementors to use however they see fit.\n+        private final Map<String, Object> extensions;\n+\n         /**\n          * Constructs error response in accordance with GraphQL specs.\n          * @param message error message\n+         * @param locations list of locations describing the syntax element\n+         * @param path The key path of the response field with error.\n+         * @param extensions additional error map, reserved for implementors.\n          */\n-        public Error(@NonNull String message) {\n+        public Error(@NonNull String message, List<GraphQLLocation> locations, List<GraphQLPathSegment> path,\n+                     Map<String, Object> extensions) {\n             this.message = Objects.requireNonNull(message);\n+            this.locations = locations;\n+            this.path = path;\n+            this.extensions = extensions;\n         }\n \n         /**\n          * Gets the error message.\n+         *\n          * @return error message\n          */\n         public String getMessage() {\n             return message;\n         }\n \n+        /**\n+         * Gets the list of locations where each location describes the beginning of an associated\n+         * syntax element.\n+         *\n+         * @return locations\n+         */\n+        public List<GraphQLLocation> getLocations() {\n+            return locations;\n+        }\n+\n+        /**\n+         * Gets the key path of the response field which experienced the error.  This allows clients\n+         * to identify whether a null result is intentional or caused by a runtime error.  The\n+         * values are either strings or 0-index integers.\n+         *\n+         * @return path\n+         */\n+        public List<GraphQLPathSegment> getPath() {\n+            return path;\n+        }\n+\n+        /**\n+         * Returns additional error information of type E.  Reserved for GraphQL implementors to\n+         * add details however they see fit.  No additional restrictions on its contents.\n+         *\n+         * @return extensions\n+         */\n+        public Map<String, Object> getExtensions() {\n+            return extensions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "473f73b781f052878d2ddd66a82848b92be341c7"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxODEyMA==", "bodyText": "Also might be helpful to mark the return type as @Nullable, along with the other properties.", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r412818120", "createdAt": "2020-04-22T09:21:22Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/GraphQLResponse.java", "diffHunk": "@@ -110,24 +113,73 @@ public int hashCode() {\n      * See https://graphql.github.io/graphql-spec/June2018/#sec-Response-Format\n      */\n     public static final class Error {\n+        // Description of the error\n         private final String message;\n \n+        // list of locations describing the syntax element\n+        private final List<GraphQLLocation> locations;\n+\n+        // Details the key path of the response field with error.\n+        private final List<GraphQLPathSegment> path;\n+\n+        // Additional error map, reserved for implementors to use however they see fit.\n+        private final Map<String, Object> extensions;\n+\n         /**\n          * Constructs error response in accordance with GraphQL specs.\n          * @param message error message\n+         * @param locations list of locations describing the syntax element\n+         * @param path The key path of the response field with error.\n+         * @param extensions additional error map, reserved for implementors.\n          */\n-        public Error(@NonNull String message) {\n+        public Error(@NonNull String message, List<GraphQLLocation> locations, List<GraphQLPathSegment> path,\n+                     Map<String, Object> extensions) {\n             this.message = Objects.requireNonNull(message);\n+            this.locations = locations;\n+            this.path = path;\n+            this.extensions = extensions;\n         }\n \n         /**\n          * Gets the error message.\n+         *\n          * @return error message\n          */\n         public String getMessage() {\n             return message;\n         }\n \n+        /**\n+         * Gets the list of locations where each location describes the beginning of an associated\n+         * syntax element.\n+         *\n+         * @return locations\n+         */\n+        public List<GraphQLLocation> getLocations() {\n+            return locations;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxNzIxMA=="}, "originalCommit": {"oid": "473f73b781f052878d2ddd66a82848b92be341c7"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgyMTUwMQ==", "bodyText": "So I see this class doesn't have a real constructor that allows instantiation with specific line + column. This is functional for now since we use GSON to directly write these values. Still, we should provide a constructor or static factory method for other plugin implementers that may not rely on a deserializer.", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r412821501", "createdAt": "2020-04-22T09:26:13Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/error/GraphQLLocation.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.graphql.error;\n+\n+/**\n+ * Location mapping to a particular line and column in the request.\n+ */\n+public class GraphQLLocation {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "473f73b781f052878d2ddd66a82848b92be341c7"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4a171faad72e71f1a765ca1cceb781be3292ab0", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/d4a171faad72e71f1a765ca1cceb781be3292ab0", "committedDate": "2020-04-22T16:54:14Z", "message": "Add Nullable, NonNull annotations, return Immutable types, other fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NDg4NDU3", "url": "https://github.com/aws-amplify/amplify-android/pull/392#pullrequestreview-398488457", "createdAt": "2020-04-22T19:00:01Z", "commit": {"oid": "d4a171faad72e71f1a765ca1cceb781be3292ab0"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxOTowMDo1OVrOGKGTmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxOTo1MTo1NFrOGKIf3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI0MjI2Nw==", "bodyText": "Ah crumbs. When I did the checkstyle rules last year,  I think I had intended to include\nMissingJavadocType, so that we remembered to make Javadocs on public entities. I suspect we are missing some around the code base. Anyway, if a user will get this GraphQLPathSegment back in response, it would be nice to have doco for any public entity they might access. (For this object, I would not expect a user to need the constructor (well, that could be documented though.) But, class-level doco may benefit the them?)", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r413242267", "createdAt": "2020-04-22T19:00:59Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/error/GraphQLPathSegment.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.graphql.error;\n+\n+import androidx.annotation.NonNull;\n+\n+public final class GraphQLPathSegment {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4a171faad72e71f1a765ca1cceb781be3292ab0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI1MDk3Mg==", "bodyText": "It'd be good to avoid putting this in the core module, if possible. Can we put it under aws-api, instead?", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r413250972", "createdAt": "2020-04-22T19:14:51Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/error/AppSyncExtensions.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.graphql.error;\n+\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.util.Immutable;\n+\n+import java.util.Map;\n+\n+public final class AppSyncExtensions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4a171faad72e71f1a765ca1cceb781be3292ab0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI1MTc3Nw==", "bodyText": "Did this JavaDoc get left over from a previous dev iteration, pre-commit?", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r413251777", "createdAt": "2020-04-22T19:16:06Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/GraphQLResponse.java", "diffHunk": "@@ -110,24 +114,79 @@ public int hashCode() {\n      * See https://graphql.github.io/graphql-spec/June2018/#sec-Response-Format\n      */\n     public static final class Error {\n+        // Description of the error\n         private final String message;\n \n+        // list of locations describing the syntax element\n+        private final List<GraphQLLocation> locations;\n+\n+        // Details the key path of the response field with error.\n+        private final List<GraphQLPathSegment> path;\n+\n+        // Additional error map, reserved for implementors to use however they see fit.\n+        private final Map<String, Object> extensions;\n+\n         /**\n          * Constructs error response in accordance with GraphQL specs.\n          * @param message error message\n+         * @param locations list of locations describing the syntax element\n+         * @param path The key path of the response field with error.\n+         * @param extensions additional error map, reserved for implementors.\n          */\n-        public Error(@NonNull String message) {\n+        public Error(@NonNull String message,\n+                     @Nullable List<GraphQLLocation> locations,\n+                     @Nullable List<GraphQLPathSegment> path,\n+                     @Nullable Map<String, Object> extensions) {\n             this.message = Objects.requireNonNull(message);\n+            this.locations = locations;\n+            this.path = path;\n+            this.extensions = extensions;\n         }\n \n         /**\n          * Gets the error message.\n+         *\n          * @return error message\n          */\n+        @NonNull\n         public String getMessage() {\n             return message;\n         }\n \n+        /**\n+         * Gets the list of locations where each location describes the beginning of an associated\n+         * syntax element.\n+         *\n+         * @return locations\n+         */\n+        @Nullable\n+        public List<GraphQLLocation> getLocations() {\n+            return Immutable.of(locations);\n+        }\n+\n+        /**\n+         * Gets the key path of the response field which experienced the error.  This allows clients\n+         * to identify whether a null result is intentional or caused by a runtime error.  The\n+         * values are either strings or 0-index integers.\n+         *\n+         * @return path\n+         */\n+        @Nullable\n+        public List<GraphQLPathSegment> getPath() {\n+            return Immutable.of(path);\n+        }\n+\n+        /**\n+         * Returns additional error information of type E.  Reserved for GraphQL implementors to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4a171faad72e71f1a765ca1cceb781be3292ab0"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI2NTQ5OA==", "bodyText": "(TLDR Ignore this, no action needed.)\n\nI just realized how we could do this 100% to spec. It ends up being way overkill, and I still do think we should stick what you have, here.\nIt would be possible for us to strongly-model the extensions as a native GraphQL entity. To do so, we would need Java models for all of the various types defined in the GraphQL spec.\niOS uses the type JSONValue, here. While GraphQL and JSON share some similarities, the type definitions are not the same. As a simple example, even the scalar definitions are slightly different (ref: GraphQL, JSON.) The String-Object Map in Java is a looser specification of typing than the GraphQL spec.\nPart of the scope of work we have taken up with Amplify is to create a lightweight GraphQL client. The AppSync SDK leverages an Apollo distribution for this purpose. While we are building our GraphQL client, we have identified needed functionalities by breadth-first discovery. But in instances like this, we sometimes uncover considerable depth needed to fully model all of the parts of the spec.\nI hadn't checked until now. But for what its worth, Apollo also does use a String-Object Map for this model, too.", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r413265498", "createdAt": "2020-04-22T19:35:31Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/GraphQLResponse.java", "diffHunk": "@@ -110,24 +114,79 @@ public int hashCode() {\n      * See https://graphql.github.io/graphql-spec/June2018/#sec-Response-Format\n      */\n     public static final class Error {\n+        // Description of the error\n         private final String message;\n \n+        // list of locations describing the syntax element\n+        private final List<GraphQLLocation> locations;\n+\n+        // Details the key path of the response field with error.\n+        private final List<GraphQLPathSegment> path;\n+\n+        // Additional error map, reserved for implementors to use however they see fit.\n+        private final Map<String, Object> extensions;\n+\n         /**\n          * Constructs error response in accordance with GraphQL specs.\n          * @param message error message\n+         * @param locations list of locations describing the syntax element\n+         * @param path The key path of the response field with error.\n+         * @param extensions additional error map, reserved for implementors.\n          */\n-        public Error(@NonNull String message) {\n+        public Error(@NonNull String message,\n+                     @Nullable List<GraphQLLocation> locations,\n+                     @Nullable List<GraphQLPathSegment> path,\n+                     @Nullable Map<String, Object> extensions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4a171faad72e71f1a765ca1cceb781be3292ab0"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI3MDM3MA==", "bodyText": "You can add a checkstyle suppression if you want to keep this {} together. Or, we could update the checkstyle rules to not enforce this rule for class bodies.\nFor the first option, either @SuppressWarnings(\"checkstyle:WhitespaceAround\") or maybe a // noinspect WhitespaceAround would work here? (Not sure about the second method.)\nFor the second option --\nI think this is WhitespaceAround right? Might be addressed by adding a property for allowEmptyTypes as true?", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r413270370", "createdAt": "2020-04-22T19:42:16Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/GsonErrorDeserializer.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws;\n+\n+import com.amplifyframework.api.graphql.GraphQLResponse;\n+import com.amplifyframework.api.graphql.error.GraphQLLocation;\n+import com.amplifyframework.api.graphql.error.GraphQLPathSegment;\n+\n+import com.google.gson.JsonDeserializationContext;\n+import com.google.gson.JsonDeserializer;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParseException;\n+import com.google.gson.JsonPrimitive;\n+import com.google.gson.reflect.TypeToken;\n+\n+import java.lang.reflect.Type;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+public final class GsonErrorDeserializer implements JsonDeserializer<GraphQLResponse.Error> {\n+    private static final String MESSAGE_KEY = \"message\";\n+    private static final String LOCATIONS_KEY = \"locations\";\n+    private static final String PATH_KEY = \"path\";\n+    private static final String EXTENSIONS_KEY = \"extensions\";\n+\n+    @Override\n+    public GraphQLResponse.Error deserialize(JsonElement json,\n+                 Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n+        if (!(json.isJsonObject())) {\n+            throw new JsonParseException(\"Expected a JSONObject but found a \" +\n+                    json.getClass().getName() + \" while deserializing error\");\n+        }\n+\n+        String message = null;\n+        List<GraphQLLocation> locations = null;\n+        List<GraphQLPathSegment> path = null;\n+        Map<String, Object> extensions = null;\n+        JsonObject extensionsJson = new JsonObject();\n+        JsonObject nonSpecifiedData = new JsonObject();\n+\n+        JsonObject error = json.getAsJsonObject();\n+\n+        for (String key : error.keySet()) {\n+            JsonElement value = error.get(key);\n+            if (value != null && !value.isJsonNull()) {\n+                if (key.equals(MESSAGE_KEY)) {\n+                    message = context.deserialize(value, String.class);\n+                } else if (key.equals(LOCATIONS_KEY)) {\n+                    Type locationsType = new TypeToken<List<GraphQLLocation>>() { }.getType();\n+                    locations = context.deserialize(value, locationsType);\n+                } else if (key.equals(PATH_KEY)) {\n+                    path = getPath(value);\n+                } else if (key.equals(EXTENSIONS_KEY)) {\n+                    extensionsJson = value.getAsJsonObject();\n+                } else {\n+                    nonSpecifiedData.add(key, value);\n+                }\n+            }\n+        }\n+\n+        // Merge nonSpecifiedData into extensions, but don't overwrite anything already there.\n+        for (String key : nonSpecifiedData.keySet()) {\n+            if (!extensionsJson.has(key)) {\n+                extensionsJson.add(key, nonSpecifiedData.get(key));\n+            }\n+        }\n+\n+        // Deserialize the extensions JSON to a Map\n+        if (extensionsJson.size() > 0) {\n+            Type extensionType = new TypeToken<Map<String, Object>>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4a171faad72e71f1a765ca1cceb781be3292ab0"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI3MTU0OA==", "bodyText": "These are backwards, the meaning of the arguments are assertEquals(expectedValue, actualValue) -- \"failed\" is the one you expected to find, error.getMessage() is the actual value under test.", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r413271548", "createdAt": "2020-04-22T19:44:14Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/test/java/com/amplifyframework/api/aws/GsonGraphQLResponseFactoryTest.java", "diffHunk": "@@ -122,15 +123,59 @@ public void partialResponseRendersWithTodoDataAndErrors() throws ApiException {\n         // Assert that we parsed the errors successfully.\n         assertNotNull(response.getErrors());\n \n-        final List<GraphQLResponse.Error> expectedErrors = Arrays.asList(\n-            new GraphQLResponse.Error(\"failed\"),\n-            new GraphQLResponse.Error(\"failed\"),\n-            new GraphQLResponse.Error(\"failed\")\n-        );\n+        for (GraphQLResponse.Error error : response.getErrors()) {\n+            assertEquals(error.getMessage(), \"failed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4a171faad72e71f1a765ca1cceb781be3292ab0"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI3ODE3Mw==", "bodyText": "Under the hood, assertEquals(..., ...) is basically just this:\nif (!expect.equals(actual)) {\n    throw new AssertionError(providedMessage);\n}\n\nSo, so long as your objects have a sensible equals() implementation (they do!), you can make high-level assertions on objects using jUnit's assertEquals(...) methods.\nHere, what I propose is to reword this into one bit assertion statement, like:\nassertEquals(\n    /* expected */ new GraphQLResponse(\n        null,\n        Arrays.asList(\n            new GraphQLError(\"Confict resolver rejects ...\", ,, ) // build these up, from the fields in your assertions\n        )\n    ),\n    actualResponse /* built the same exact way you are now, in the Act portion. */\n);", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r413278173", "createdAt": "2020-04-22T19:51:54Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/test/java/com/amplifyframework/api/aws/GsonGraphQLResponseFactoryTest.java", "diffHunk": "@@ -122,15 +123,59 @@ public void partialResponseRendersWithTodoDataAndErrors() throws ApiException {\n         // Assert that we parsed the errors successfully.\n         assertNotNull(response.getErrors());\n \n-        final List<GraphQLResponse.Error> expectedErrors = Arrays.asList(\n-            new GraphQLResponse.Error(\"failed\"),\n-            new GraphQLResponse.Error(\"failed\"),\n-            new GraphQLResponse.Error(\"failed\")\n-        );\n+        for (GraphQLResponse.Error error : response.getErrors()) {\n+            assertEquals(error.getMessage(), \"failed\");\n+        }\n+    }\n \n-        final List<GraphQLResponse.Error> actualErrors = response.getErrors();\n+    /**\n+     * This tests the GsonErrorDeserializer.  The test JSON response has 4 errors, which are all in\n+     * different formats, but are expected to be parsed into the same resulting object:\n+     * 1. Error contains errorType, errorInfo, data (AppSync specific fields) at root level\n+     * 2. Error contains errorType, errorInfo, data inside extensions object\n+     * 3. Error contains errorType, errorInfo, data at root AND inside extensions (fields inside\n+     * extensions take precedence)\n+     * 4. Error contains errorType at root, and errorInfo, data inside extensions (all should be\n+     * merged into extensions)\n+     *\n+     * @throws ApiException From API configuration\n+     */\n+    @Test\n+    public void errorResponseDeserializesExtensionsMap() throws ApiException {\n+        // Arrange some JSON string from a \"server\"\n+        final String partialResponseJson =\n+                Resources.readAsString(\"error-extensions-gql-response.json\");\n+\n+        // Act! Parse it into a model.\n+        final GraphQLResponse<ListTodosResult> response =\n+                responseFactory.buildSingleItemResponse(partialResponseJson, ListTodosResult.class);\n \n-        assertEquals(expectedErrors, actualErrors);\n+        // Assert that the response contained things...\n+        assertNotNull(response);\n+        assertNotNull(response.getErrors());\n+        assertEquals(response.getErrors().size(), 4);\n+\n+        // Assert that each error is has been parsed to the same output object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4a171faad72e71f1a765ca1cceb781be3292ab0"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b85f6e46291321fe7e6559be6dfc0eebbc1d1731", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/b85f6e46291321fe7e6559be6dfc0eebbc1d1731", "committedDate": "2020-04-23T20:07:14Z", "message": "fixups"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMTg4OTkw", "url": "https://github.com/aws-amplify/amplify-android/pull/392#pullrequestreview-400188990", "createdAt": "2020-04-24T18:45:07Z", "commit": {"oid": "b85f6e46291321fe7e6559be6dfc0eebbc1d1731"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMjQxODQ4", "url": "https://github.com/aws-amplify/amplify-android/pull/392#pullrequestreview-400241848", "createdAt": "2020-04-24T20:14:26Z", "commit": {"oid": "b85f6e46291321fe7e6559be6dfc0eebbc1d1731"}, "state": "APPROVED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDoxNDoyNlrOGLnm1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDoyMDoyMVrOGLnybg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzNjQzOA==", "bodyText": "Assuming that GraphQLResponse.Error's equals() implementation considers all of message, extensions, path, locations, you should only need L211, and not L207-210.", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r414836438", "createdAt": "2020-04-24T20:14:26Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/test/java/com/amplifyframework/api/aws/GsonGraphQLResponseFactoryTest.java", "diffHunk": "@@ -122,15 +126,94 @@ public void partialResponseRendersWithTodoDataAndErrors() throws ApiException {\n         // Assert that we parsed the errors successfully.\n         assertNotNull(response.getErrors());\n \n-        final List<GraphQLResponse.Error> expectedErrors = Arrays.asList(\n-            new GraphQLResponse.Error(\"failed\"),\n-            new GraphQLResponse.Error(\"failed\"),\n-            new GraphQLResponse.Error(\"failed\")\n+        final List<GraphQLResponse.Error> expectedErrors = new ArrayList<>();\n+        for (int i = 0; i < 3; i++) {\n+            String message = \"failed\";\n+            List<GraphQLLocation> locations = Arrays.asList(\n+                    new GraphQLLocation(5, 7));\n+            List<GraphQLPathSegment> path = Arrays.asList(\n+                    new GraphQLPathSegment(\"listTodos\"),\n+                    new GraphQLPathSegment(\"items\"),\n+                    new GraphQLPathSegment(i),\n+                    new GraphQLPathSegment(\"name\")\n+            );\n+            Map<String, Object> extensions = new LinkedTreeMap<>();\n+            extensions.put(\"errorType\", null);\n+            extensions.put(\"errorInfo\", null);\n+            extensions.put(\"data\", null);\n+            expectedErrors.add(new GraphQLResponse.Error(message, locations, path, extensions));\n+        }\n+\n+        assertEquals(expectedErrors, response.getErrors());\n+    }\n+\n+    /**\n+     * This tests the GsonErrorDeserializer.  The test JSON response has 4 errors, which are all in\n+     * different formats, but are expected to be parsed into the same resulting object:\n+     * 1. Error contains errorType, errorInfo, data (AppSync specific fields) at root level\n+     * 2. Error contains errorType, errorInfo, data inside extensions object\n+     * 3. Error contains errorType, errorInfo, data at root AND inside extensions (fields inside\n+     * extensions take precedence)\n+     * 4. Error contains errorType at root, and errorInfo, data inside extensions (all should be\n+     * merged into extensions)\n+     *\n+     * @throws ApiException From API configuration\n+     */\n+    @Test\n+    public void errorResponseDeserializesExtensionsMap() throws ApiException {\n+        // Arrange some JSON string from a \"server\"\n+        final String partialResponseJson =\n+                Resources.readAsString(\"error-extensions-gql-response.json\");\n+\n+        // Act! Parse it into a model.\n+        final GraphQLResponse<ListTodosResult> response =\n+                responseFactory.buildSingleItemResponse(partialResponseJson, ListTodosResult.class);\n+\n+        // Assert that the response contained things...\n+        String message = \"Conflict resolver rejects mutation.\";\n+        List<GraphQLLocation> locations = Arrays.asList(\n+                new GraphQLLocation(11, 3));\n+        List<GraphQLPathSegment> path = Arrays.asList(\n+                new GraphQLPathSegment(\"listTodos\"),\n+                new GraphQLPathSegment(\"items\"),\n+                new GraphQLPathSegment(0),\n+                new GraphQLPathSegment(\"name\")\n         );\n \n-        final List<GraphQLResponse.Error> actualErrors = response.getErrors();\n+        Map<String, Object> data = new LinkedTreeMap<>();\n+        data.put(\"id\", \"EF48518C-92EB-4F7A-A64E-D1B9325205CF\");\n+        data.put(\"title\", \"new3\");\n+        data.put(\"content\", \"Original content from DataStoreEndToEndTests at 2020-03-26 21:55:47 \" +\n+                \"+0000\");\n+        data.put(\"_version\", 2.0);\n+\n+        Map<String, Object> extensions = new LinkedTreeMap<>();\n+        extensions.put(\"errorType\", \"ConflictUnhandled\");\n+        extensions.put(\"errorInfo\", null);\n+        extensions.put(\"data\", data);\n+\n+        GraphQLResponse.Error expectedError = new GraphQLResponse.Error(message, locations, path, extensions);\n+        GraphQLResponse<ListTodosResult> expectedResponse = new GraphQLResponse<>(null,\n+                Arrays.asList(expectedError, expectedError, expectedError, expectedError));\n+\n+        assertNotNull(response);\n+        assertNotNull(response.getErrors());\n+        assertEquals(expectedResponse.getErrors().size(), response.getErrors().size());\n+\n+        // Assert that each error has been parsed to the same output object.\n+        for (int i = 0; i < response.getErrors().size(); i++) {\n+            GraphQLResponse.Error actual = response.getErrors().get(i);\n+            GraphQLResponse.Error expected = expectedResponse.getErrors().get(i);\n+            assertEquals(\"Unexpected message on error[\" + i + \"]\", expected.getMessage(), actual.getMessage());\n+            assertEquals(\"Unexpected extensions on error[\" + i + \"]\", expected.getExtensions(), actual.getExtensions());\n+            assertEquals(\"Unexpected path on error[\" + i + \"]\", expected.getPath(), actual.getPath());\n+            assertEquals(\"Unexpected locations on error[\" + i + \"]\", expected.getLocations(), actual.getLocations());\n+            assertEquals(\"Unexpected error[\" + i + \"]\", expected, actual);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85f6e46291321fe7e6559be6dfc0eebbc1d1731"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzNjkxNw==", "bodyText": "Can you provide a toString() implementation, as well?", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r414836917", "createdAt": "2020-04-24T20:15:27Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSyncExtensions.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.appsync;\n+\n+import androidx.annotation.Nullable;\n+import androidx.core.util.ObjectsCompat;\n+\n+import com.amplifyframework.util.Immutable;\n+\n+import java.util.Map;\n+\n+/**\n+ * Model representing a AppSync specific extensions map.  This data may be included on a\n+ * GraphQLResponse.Error object, and is represented as a Map&lt;String, Object&gt;.  This class can be\n+ * used to create a strongly typed model by passing the Map&lt;String, Object&gt; to the constructor.\n+ */\n+public final class AppSyncExtensions {\n+    private static final String ERROR_TYPE_KEY = \"errorType\";\n+    private static final String ERROR_INFO_KEY = \"errorInfo\";\n+    private static final String DATA_KEY = \"data\";\n+\n+    private final String errorType;\n+    private final String errorInfo;\n+    private final Map<String, Object> data;\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public AppSyncExtensions(Map<String, Object> extensions) {\n+        this.errorType = (String) extensions.get(ERROR_TYPE_KEY);\n+        this.errorInfo = (String) extensions.get(ERROR_INFO_KEY);\n+        this.data = (Map<String, Object>) extensions.get(DATA_KEY);\n+    }\n+\n+    public AppSyncExtensions(String errorType, String errorInfo, Map<String, Object> data) {\n+        this.errorType = errorType;\n+        this.errorInfo = errorInfo;\n+        this.data = data;\n+    }\n+\n+    /**\n+     * Returns the specific AppSync error type, often related to handling conflicts.\n+     * https://docs.aws.amazon.com/appsync/latest/devguide/conflict-detection-and-sync.html#errors\n+     *\n+     * @return errorType\n+     */\n+    @Nullable\n+    public String getErrorType() {\n+        return errorType;\n+    }\n+\n+    /**\n+     * Returns more info about the error.\n+     *\n+     * @return errorInfo\n+     */\n+    @Nullable\n+    public String getErrorInfo() {\n+        return errorInfo;\n+    }\n+\n+    /**\n+     * For conflict unhandled errors, returns a map containing the same fields as the model type.\n+     *\n+     * @return data\n+     */\n+    @Nullable\n+    public Map<String, Object> getData() {\n+        return Immutable.of(data);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85f6e46291321fe7e6559be6dfc0eebbc1d1731"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzNzY0OA==", "bodyText": "Need to update GraphQLResponse.Error's toString() as well, I think. Right now it just only prints the message , but not any of your new fields.", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r414837648", "createdAt": "2020-04-24T20:16:46Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/GraphQLResponse.java", "diffHunk": "@@ -139,12 +199,19 @@ public boolean equals(Object thatObject) {\n \n             Error error = (Error) thatObject;\n \n-            return message.equals(error.message);\n+            return ObjectsCompat.equals(message, error.message) &&\n+                   ObjectsCompat.equals(path, error.path) &&\n+                   ObjectsCompat.equals(extensions, error.extensions) &&\n+                   ObjectsCompat.equals(locations, error.locations);\n         }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85f6e46291321fe7e6559be6dfc0eebbc1d1731"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzODI2NA==", "bodyText": "Since GraphQLResponse is at com.amplifyframework.api.graphql, and since Error lives in it, that means Error is com.amplifyframework.api.graphql. All of these inner components should live in the same package as well.\nIn other words, I think this package should be com.amplifyframework.api.graphql.", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r414838264", "createdAt": "2020-04-24T20:18:06Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/error/GraphQLLocation.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.graphql.error;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85f6e46291321fe7e6559be6dfc0eebbc1d1731"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzODM2MQ==", "bodyText": "toString() ?", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r414838361", "createdAt": "2020-04-24T20:18:15Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/error/GraphQLLocation.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.graphql.error;\n+\n+/**\n+ * Location mapping to a particular line and column in the request.\n+ */\n+public final class GraphQLLocation {\n+    private int line;\n+    private int column;\n+\n+    public GraphQLLocation(int line, int column) {\n+        this.line = line;\n+        this.column = column;\n+    }\n+\n+    /**\n+     * Returns line number corresponding to position in the request where an error occurred.\n+     *\n+     * @return line\n+     */\n+    public int getLine() {\n+        return line;\n+    }\n+\n+    /**\n+     * Returns column number corresponding to position in the request where an error occurred.\n+     *\n+     * @return column\n+     */\n+    public int getColumn() {\n+        return column;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85f6e46291321fe7e6559be6dfc0eebbc1d1731"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzODUzMQ==", "bodyText": "toString() impl?", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r414838531", "createdAt": "2020-04-24T20:18:36Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/api/graphql/error/GraphQLPathSegment.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.graphql.error;\n+\n+import androidx.annotation.NonNull;\n+import androidx.core.util.ObjectsCompat;\n+\n+/**\n+ * If a GraphQLResponse contains an error that can be associated with a particular field in the\n+ * requested GraphQL document, it will contain an entry with the key, path.  This entry should be a\n+ * list of GraphQLPathSegments starting at the root of the response and ending with the field\n+ * associated with the error.  This allows clients to determine whether a null result is intentional\n+ * or caused by a runtime error.  Path segments that represent fields should be strings, and path\n+ * segments that represent list indices should be 0\u2010indexed integers.\n+ * https://spec.graphql.org/June2018/#sec-Errors\n+ */\n+public final class GraphQLPathSegment {\n+    private final Object value;\n+\n+    public GraphQLPathSegment(int value) {\n+        this.value = Integer.valueOf(value);\n+    }\n+\n+    public GraphQLPathSegment(@NonNull String value) {\n+        this.value = value;\n+    }\n+\n+    /**\n+     * Used before calling getAsInt() to confirm if value is int.\n+     *\n+     * @return boolean, whether segment is an int\n+     */\n+    public boolean isInteger() {\n+        return value instanceof Integer;\n+    }\n+\n+    /**\n+     * Used before calling getAsString() to confirm if value is String.\n+     *\n+     * @return boolean, whether segment is a String\n+     */\n+    public boolean isString() {\n+        return value instanceof String;\n+    }\n+\n+    /**\n+     * Convenience method to get this element as a String.\n+     *\n+     * @return get this element as a String\n+     * @throws ClassCastException if the value contained is not a String.\n+     */\n+    @NonNull\n+    public String getAsString() {\n+        if (isString()) {\n+            return (String) value;\n+        }\n+        throw new ClassCastException(\"Not a String: \" + value.getClass().getSimpleName());\n+    }\n+\n+    /**\n+     * Convenience method to get this element as an int.\n+     *\n+     * @return get this element as an int\n+     * @throws ClassCastException if the value contained is not an Integer.\n+     */\n+    public int getAsInt() {\n+        if (isInteger()) {\n+            return ((Integer) value).intValue();\n+        }\n+        throw new ClassCastException(\"Not an int: \" + value.getClass().getSimpleName());\n+    }\n+\n+    @Override\n+    public boolean equals(Object thatObject) {\n+        if (this == thatObject) {\n+            return true;\n+        }\n+        if (thatObject == null || getClass() != thatObject.getClass()) {\n+            return false;\n+        }\n+\n+        GraphQLPathSegment segment = (GraphQLPathSegment) thatObject;\n+\n+        if (isString() && segment.isString()) {\n+            return ObjectsCompat.equals(getAsString(), segment.getAsString());\n+        }\n+        if (isInteger() && segment.isInteger()) {\n+            return ObjectsCompat.equals(getAsInt(), segment.getAsInt());\n+        }\n+        return false;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85f6e46291321fe7e6559be6dfc0eebbc1d1731"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzOTQwNg==", "bodyText": "The AppSyncExtensions utility and its test are \"above\" the abstraction of Gson, at this point. So, we should not import any Gson components as that's a leaking abstraction. If you need a map which preserves insertion order, consider a LinkedHashMap, or if you need one that preserves a natural ordering of keys, look at a (Java Collections) TreeMap.", "url": "https://github.com/aws-amplify/amplify-android/pull/392#discussion_r414839406", "createdAt": "2020-04-24T20:20:21Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/appsync/AppSyncExtensionsTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.appsync;\n+\n+import com.google.gson.internal.LinkedTreeMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85f6e46291321fe7e6559be6dfc0eebbc1d1731"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2709, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}