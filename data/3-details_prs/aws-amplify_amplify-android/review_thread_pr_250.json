{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MzQ5Mzg1", "number": 250, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOTowNzo1NVrODcBvfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNjowMDowMVrODgcHCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzE1MjYyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/category/Category.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOTowNzo1NVrOFj2hww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMDo0MDozOFrOFk_ONw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzNzg1OQ==", "bodyText": "We discussed a bug about this :)\nShould have validateConfigured() and throwIfConfigured() separately to clearly indicate two validation cases", "url": "https://github.com/aws-amplify/amplify-android/pull/250#discussion_r373137859", "createdAt": "2020-01-30T19:07:55Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/core/category/Category.java", "diffHunk": "@@ -167,35 +162,56 @@ public final P getPlugin(@NonNull final String pluginKey) {\n      */\n     @NonNull\n     public final Set<P> getPlugins() {\n-        return new HashSet<>(plugins.values());\n+        return Immutable.of(new HashSet<>(plugins.values()));\n     }\n \n     /**\n      * Obtain the registered plugin for this category.\n      * @return The only registered plugin for this category\n      * @throws IllegalStateException\n      *         If the category is not configured, or if there are no\n-     *         plugins associated to the category\n+     *         plugins associated to the category, or if Amplify has not\n+     *         been configured\n      */\n     @NonNull\n-    protected final P getSelectedPlugin() {\n-        if (!isConfigured) {\n-            throw new IllegalStateException(\"This category is not yet configured.\" +\n-                    \"Make sure you added it with Amplify.addPlugin and then called Amplify.config\");\n+    protected final P getSelectedPlugin() throws IllegalStateException {\n+        try {\n+            validateConfigurationState(ConfigurationState.CONFIGURED);\n+        } catch (AmplifyException amplifyException) {\n+            // Every category behavior calls getSelectedPlugin(), so we can't realistically\n+            // ask each one to catch a (checked) AmplifyException.\n+            throw new IllegalStateException(amplifyException);\n         }\n+\n         if (plugins.isEmpty()) {\n             throw new IllegalStateException(\n-                    \"Tried to get a plugin but that plugin was not present.\" +\n-                    \"Check if the plugin was added originally or perhaps was already removed.\"\n+                \"Tried to get a plugin but that plugin was not present. \" +\n+                \"Check if the plugin was added originally or perhaps was already removed.\"\n             );\n-        }\n-        if (plugins.size() > 1) {\n+        } else if (plugins.size() > 1) {\n             throw new IllegalStateException(\n-                    \"Tried to get a default plugin but there are more than one to choose from in this category.\" +\n-                    \"Call getPlugin(pluginKey) to choose the specific plugin you want to use in this case.\"\n+                \"Tried to get a default plugin but there are more than one to choose from in this category. \" +\n+                \"Call getPlugin(pluginKey) to choose the specific plugin you want to use in this case.\"\n             );\n         }\n \n         return getPlugins().iterator().next();\n     }\n+\n+    private void validateConfigurationState(ConfigurationState targetState) throws AmplifyException {\n+        synchronized (configurationState) {\n+            if (!configurationState.get().equals(targetState)) {\n+                throw new AmplifyException(\n+                    \"Amplify was already configured.\",\n+                    \"Be sure to only call Amplify.configure once\"\n+                );\n+            }\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "933556349e7ee1399904fa086e746c8a54f2d636"}, "originalPosition": 183}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyODg4Nw==", "bodyText": "Fixing! Thanks for the catch.", "url": "https://github.com/aws-amplify/amplify-android/pull/250#discussion_r374328887", "createdAt": "2020-02-03T20:40:38Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/category/Category.java", "diffHunk": "@@ -167,35 +162,56 @@ public final P getPlugin(@NonNull final String pluginKey) {\n      */\n     @NonNull\n     public final Set<P> getPlugins() {\n-        return new HashSet<>(plugins.values());\n+        return Immutable.of(new HashSet<>(plugins.values()));\n     }\n \n     /**\n      * Obtain the registered plugin for this category.\n      * @return The only registered plugin for this category\n      * @throws IllegalStateException\n      *         If the category is not configured, or if there are no\n-     *         plugins associated to the category\n+     *         plugins associated to the category, or if Amplify has not\n+     *         been configured\n      */\n     @NonNull\n-    protected final P getSelectedPlugin() {\n-        if (!isConfigured) {\n-            throw new IllegalStateException(\"This category is not yet configured.\" +\n-                    \"Make sure you added it with Amplify.addPlugin and then called Amplify.config\");\n+    protected final P getSelectedPlugin() throws IllegalStateException {\n+        try {\n+            validateConfigurationState(ConfigurationState.CONFIGURED);\n+        } catch (AmplifyException amplifyException) {\n+            // Every category behavior calls getSelectedPlugin(), so we can't realistically\n+            // ask each one to catch a (checked) AmplifyException.\n+            throw new IllegalStateException(amplifyException);\n         }\n+\n         if (plugins.isEmpty()) {\n             throw new IllegalStateException(\n-                    \"Tried to get a plugin but that plugin was not present.\" +\n-                    \"Check if the plugin was added originally or perhaps was already removed.\"\n+                \"Tried to get a plugin but that plugin was not present. \" +\n+                \"Check if the plugin was added originally or perhaps was already removed.\"\n             );\n-        }\n-        if (plugins.size() > 1) {\n+        } else if (plugins.size() > 1) {\n             throw new IllegalStateException(\n-                    \"Tried to get a default plugin but there are more than one to choose from in this category.\" +\n-                    \"Call getPlugin(pluginKey) to choose the specific plugin you want to use in this case.\"\n+                \"Tried to get a default plugin but there are more than one to choose from in this category. \" +\n+                \"Call getPlugin(pluginKey) to choose the specific plugin you want to use in this case.\"\n             );\n         }\n \n         return getPlugins().iterator().next();\n     }\n+\n+    private void validateConfigurationState(ConfigurationState targetState) throws AmplifyException {\n+        synchronized (configurationState) {\n+            if (!configurationState.get().equals(targetState)) {\n+                throw new AmplifyException(\n+                    \"Amplify was already configured.\",\n+                    \"Be sure to only call Amplify.configure once\"\n+                );\n+            }\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzNzg1OQ=="}, "originalCommit": {"oid": "933556349e7ee1399904fa086e746c8a54f2d636"}, "originalPosition": 183}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMjA4NTQyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/category/Category.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxOToxOTo0MlrOFmEDkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODowODozMlrOFmlBgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1NjY1Nw==", "bodyText": "isn't this just\nif (!isConfigured()) {\n    throw ...\n}\n\n?", "url": "https://github.com/aws-amplify/amplify-android/pull/250#discussion_r375456657", "createdAt": "2020-02-05T19:19:42Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/core/category/Category.java", "diffHunk": "@@ -167,35 +176,46 @@ public final P getPlugin(@NonNull final String pluginKey) {\n      */\n     @NonNull\n     public final Set<P> getPlugins() {\n-        return new HashSet<>(plugins.values());\n+        return Immutable.of(new HashSet<>(plugins.values()));\n     }\n \n     /**\n      * Obtain the registered plugin for this category.\n      * @return The only registered plugin for this category\n      * @throws IllegalStateException\n      *         If the category is not configured, or if there are no\n-     *         plugins associated to the category\n+     *         plugins associated to the category, or if Amplify has not\n+     *         been configured\n      */\n     @NonNull\n-    protected final P getSelectedPlugin() {\n-        if (!isConfigured) {\n-            throw new IllegalStateException(\"This category is not yet configured.\" +\n-                    \"Make sure you added it with Amplify.addPlugin and then called Amplify.config\");\n+    protected final P getSelectedPlugin() throws IllegalStateException {\n+        synchronized (configurationState) {\n+            if (!ConfigurationState.CONFIGURED.equals(configurationState.get())) {\n+                throw new IllegalStateException(\n+                    \"Category \" + getCategoryType() + \" is not configured. \" +\n+                    \"Ensure that you have configured the category before trying to use it.\"\n+                );\n+            }\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c46ab6d17685a1a11cf8bd43eab58badc3f0301"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5NjgwMg==", "bodyText": "Yes! I'll do it this way instead.", "url": "https://github.com/aws-amplify/amplify-android/pull/250#discussion_r375996802", "createdAt": "2020-02-06T18:08:32Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/category/Category.java", "diffHunk": "@@ -167,35 +176,46 @@ public final P getPlugin(@NonNull final String pluginKey) {\n      */\n     @NonNull\n     public final Set<P> getPlugins() {\n-        return new HashSet<>(plugins.values());\n+        return Immutable.of(new HashSet<>(plugins.values()));\n     }\n \n     /**\n      * Obtain the registered plugin for this category.\n      * @return The only registered plugin for this category\n      * @throws IllegalStateException\n      *         If the category is not configured, or if there are no\n-     *         plugins associated to the category\n+     *         plugins associated to the category, or if Amplify has not\n+     *         been configured\n      */\n     @NonNull\n-    protected final P getSelectedPlugin() {\n-        if (!isConfigured) {\n-            throw new IllegalStateException(\"This category is not yet configured.\" +\n-                    \"Make sure you added it with Amplify.addPlugin and then called Amplify.config\");\n+    protected final P getSelectedPlugin() throws IllegalStateException {\n+        synchronized (configurationState) {\n+            if (!ConfigurationState.CONFIGURED.equals(configurationState.get())) {\n+                throw new IllegalStateException(\n+                    \"Category \" + getCategoryType() + \" is not configured. \" +\n+                    \"Ensure that you have configured the category before trying to use it.\"\n+                );\n+            }\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1NjY1Nw=="}, "originalCommit": {"oid": "0c46ab6d17685a1a11cf8bd43eab58badc3f0301"}, "originalPosition": 165}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzQxNTc5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/category/Category.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNjowMDowMVrOFqpWbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNjoxMjozNVrOFqpvcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI2MTk5Ng==", "bodyText": "What's the benefit to specifying the runtime exception in the method header? Also, that won't force calling methods to catch/throw it will it?", "url": "https://github.com/aws-amplify/amplify-android/pull/250#discussion_r380261996", "createdAt": "2020-02-17T16:00:01Z", "author": {"login": "TrekSoft"}, "path": "core/src/main/java/com/amplifyframework/core/category/Category.java", "diffHunk": "@@ -146,17 +153,17 @@ public final void removePlugin(@NonNull P plugin) {\n      * Retrieve a plugin by its key.\n      * @param pluginKey A key that identifies a plugin implementation\n      * @return The plugin object associated to pluginKey, if registered\n-     * @throws IllegalStateException If there is no plugin with the given key\n+     * @throws IllegalStateException If the requested plugin does not exist\n      */\n     @NonNull\n-    public final P getPlugin(@NonNull final String pluginKey) {\n+    public final P getPlugin(@NonNull final String pluginKey) throws IllegalStateException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5418eb1360ada4fbc32f23fa8eddb848ae3d875f"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI2ODQwMA==", "bodyText": "My intention here was just to provide clear documentation on what can happen. Since IllegalStateException derives from RuntimeException, the caller still won't need to try-catch it explicitly.\nHowever, I didn't honestly know the best practice on this. Should one put runtime exceptions on the method signature, or not? Apparently, the guidance is to not do this. Here's a StackOverflow post about it, which contains this quote from Oracle documentation:\n\nHaving to add runtime exceptions in every method declaration would reduce a program's clarity.\n\nAnyway, these are all over the code-base at this point. I'll do a separate CR to remove them all in one pass.", "url": "https://github.com/aws-amplify/amplify-android/pull/250#discussion_r380268400", "createdAt": "2020-02-17T16:12:35Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/category/Category.java", "diffHunk": "@@ -146,17 +153,17 @@ public final void removePlugin(@NonNull P plugin) {\n      * Retrieve a plugin by its key.\n      * @param pluginKey A key that identifies a plugin implementation\n      * @return The plugin object associated to pluginKey, if registered\n-     * @throws IllegalStateException If there is no plugin with the given key\n+     * @throws IllegalStateException If the requested plugin does not exist\n      */\n     @NonNull\n-    public final P getPlugin(@NonNull final String pluginKey) {\n+    public final P getPlugin(@NonNull final String pluginKey) throws IllegalStateException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI2MTk5Ng=="}, "originalCommit": {"oid": "5418eb1360ada4fbc32f23fa8eddb848ae3d875f"}, "originalPosition": 118}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1520, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}