{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzOTU4ODE0", "number": 432, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNTo0Njo0N1rOD6hU7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOToyMTo1MVrOD7yr9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjkwMDI4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/predictions/result/TextToSpeechResult.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNTo0Njo0N1rOGSZ3IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNzo0MjozM1rOGSclgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1MTI2NQ==", "bodyText": "(unrelated to this PR)\nThoughts on renaming Result to Response (and all subclasses) or something else?   I don't really like Result because it might cause some customer confusion with Kotlin's Result class.", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421951265", "createdAt": "2020-05-08T05:46:47Z", "author": {"login": "richardmcclellan"}, "path": "core/src/main/java/com/amplifyframework/predictions/result/TextToSpeechResult.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.result;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.async.Result;\n+\n+import java.io.InputStream;\n+import java.util.Objects;\n+\n+/**\n+ * The result of the call to synthesize speech from text.\n+ */\n+public final class TextToSpeechResult implements Result {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk4MTg3Ng==", "bodyText": "^ I agree... Result doesn't really serve any purpose.\nMeanwhile, calling the actual classes <purpose>Result is in alignment with what iOS has, so I don't think I will be changing that to Response. Especially if we are removing Result class, then there shouldn't be namespace conflict with Kotlin anymore right?", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421981876", "createdAt": "2020-05-08T07:10:38Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/predictions/result/TextToSpeechResult.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.result;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.async.Result;\n+\n+import java.io.InputStream;\n+import java.util.Objects;\n+\n+/**\n+ * The result of the call to synthesize speech from text.\n+ */\n+public final class TextToSpeechResult implements Result {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1MTI2NQ=="}, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk5NTkwNA==", "bodyText": "#440", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421995904", "createdAt": "2020-05-08T07:42:33Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/predictions/result/TextToSpeechResult.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.result;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.async.Result;\n+\n+import java.io.InputStream;\n+import java.util.Objects;\n+\n+/**\n+ * The result of the call to synthesize speech from text.\n+ */\n+public final class TextToSpeechResult implements Result {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1MTI2NQ=="}, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjkxNzI3OnYy", "diffSide": "RIGHT", "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/models/VoiceType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNTo1NToxM1rOGSaAvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNTo1NToxM1rOGSaAvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1MzcyNg==", "bodyText": "As discussed offline, it'd be best for this to support voices that are multi-lingual.", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421953726", "createdAt": "2020-05-08T05:55:13Z", "author": {"login": "richardmcclellan"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/models/VoiceType.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.models;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+/**\n+ * Types of voice to synthesize speech with.\n+ *\n+ * @see <a href=https://docs.aws.amazon.com/polly/latest/dg/voicelist.html>Voices in Amazon Polly</a>\n+ */\n+@SuppressWarnings(\"JavadocVariable\")\n+public enum VoiceType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjk0Mjk3OnYy", "diffSide": "RIGHT", "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSPollyService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNjowNzo0M1rOGSaPtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNjowNzo0M1rOGSaPtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1NzU1OA==", "bodyText": "Woah, TIL about underscore literals :)", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421957558", "createdAt": "2020-05-08T06:07:43Z", "author": {"login": "richardmcclellan"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSPollyService.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.service;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.predictions.PredictionsException;\n+import com.amplifyframework.predictions.aws.AWSPredictionsPluginConfiguration;\n+import com.amplifyframework.predictions.aws.configuration.SpeechGeneratorConfiguration;\n+import com.amplifyframework.predictions.aws.models.VoiceType;\n+import com.amplifyframework.predictions.result.TextToSpeechResult;\n+import com.amplifyframework.util.UserAgent;\n+\n+import com.amazonaws.AmazonClientException;\n+import com.amazonaws.ClientConfiguration;\n+import com.amazonaws.auth.AWSCredentialsProvider;\n+import com.amazonaws.mobile.client.AWSMobileClient;\n+import com.amazonaws.services.polly.AmazonPollyClient;\n+import com.amazonaws.services.polly.AmazonPollyPresigningClient;\n+import com.amazonaws.services.polly.model.OutputFormat;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechRequest;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechResult;\n+import com.amazonaws.services.polly.model.TextType;\n+\n+import java.io.InputStream;\n+\n+/**\n+ * Predictions service for performing text to speech conversion.\n+ */\n+final class AWSPollyService {\n+    private static final int MP3_SAMPLE_RATE = 24_000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjk1Mzk1OnYy", "diffSide": "RIGHT", "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSPollyService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNjoxMjozOVrOGSaV1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNzozNzo0MFrOGScc7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1OTEyNQ==", "bodyText": "Could you represent an unknown VoiceType with null instead of a UNKNOWN type?", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421959125", "createdAt": "2020-05-08T06:12:39Z", "author": {"login": "richardmcclellan"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSPollyService.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.service;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.predictions.PredictionsException;\n+import com.amplifyframework.predictions.aws.AWSPredictionsPluginConfiguration;\n+import com.amplifyframework.predictions.aws.configuration.SpeechGeneratorConfiguration;\n+import com.amplifyframework.predictions.aws.models.VoiceType;\n+import com.amplifyframework.predictions.result.TextToSpeechResult;\n+import com.amplifyframework.util.UserAgent;\n+\n+import com.amazonaws.AmazonClientException;\n+import com.amazonaws.ClientConfiguration;\n+import com.amazonaws.auth.AWSCredentialsProvider;\n+import com.amazonaws.mobile.client.AWSMobileClient;\n+import com.amazonaws.services.polly.AmazonPollyClient;\n+import com.amazonaws.services.polly.AmazonPollyPresigningClient;\n+import com.amazonaws.services.polly.model.OutputFormat;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechRequest;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechResult;\n+import com.amazonaws.services.polly.model.TextType;\n+\n+import java.io.InputStream;\n+\n+/**\n+ * Predictions service for performing text to speech conversion.\n+ */\n+final class AWSPollyService {\n+    private static final int MP3_SAMPLE_RATE = 24_000;\n+\n+    private final AmazonPollyClient polly;\n+    private final AWSPredictionsPluginConfiguration pluginConfiguration;\n+\n+    AWSPollyService(AWSPredictionsPluginConfiguration pluginConfiguration) {\n+        this.polly = createPollyClient();\n+        this.pluginConfiguration = pluginConfiguration;\n+    }\n+\n+    private AmazonPollyClient createPollyClient() {\n+        AWSCredentialsProvider credentialsProvider = AWSMobileClient.getInstance();\n+        ClientConfiguration configuration = new ClientConfiguration();\n+        configuration.setUserAgent(UserAgent.string());\n+        return new AmazonPollyPresigningClient(credentialsProvider, configuration);\n+    }\n+\n+    void synthesizeSpeech(\n+            @NonNull String text,\n+            @NonNull VoiceType voiceType,\n+            @NonNull Consumer<TextToSpeechResult> onSuccess,\n+            @NonNull Consumer<PredictionsException> onError\n+    ) {\n+        try {\n+            InputStream data = synthesizeSpeech(text, voiceType);\n+            onSuccess.accept(TextToSpeechResult.fromAudioData(data));\n+        } catch (PredictionsException exception) {\n+            onError.accept(exception);\n+        }\n+    }\n+\n+    private InputStream synthesizeSpeech(String text, VoiceType voiceType) throws PredictionsException {\n+        final String languageCode;\n+        final String voiceId;\n+        if (VoiceType.UNKNOWN.equals(voiceType)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk5MzcwOA==", "bodyText": "I'd prefer to leave all instances where a VoiceType is expected to be @NonNull as to minimize null-checking", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421993708", "createdAt": "2020-05-08T07:37:40Z", "author": {"login": "raphkim"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSPollyService.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.service;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.predictions.PredictionsException;\n+import com.amplifyframework.predictions.aws.AWSPredictionsPluginConfiguration;\n+import com.amplifyframework.predictions.aws.configuration.SpeechGeneratorConfiguration;\n+import com.amplifyframework.predictions.aws.models.VoiceType;\n+import com.amplifyframework.predictions.result.TextToSpeechResult;\n+import com.amplifyframework.util.UserAgent;\n+\n+import com.amazonaws.AmazonClientException;\n+import com.amazonaws.ClientConfiguration;\n+import com.amazonaws.auth.AWSCredentialsProvider;\n+import com.amazonaws.mobile.client.AWSMobileClient;\n+import com.amazonaws.services.polly.AmazonPollyClient;\n+import com.amazonaws.services.polly.AmazonPollyPresigningClient;\n+import com.amazonaws.services.polly.model.OutputFormat;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechRequest;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechResult;\n+import com.amazonaws.services.polly.model.TextType;\n+\n+import java.io.InputStream;\n+\n+/**\n+ * Predictions service for performing text to speech conversion.\n+ */\n+final class AWSPollyService {\n+    private static final int MP3_SAMPLE_RATE = 24_000;\n+\n+    private final AmazonPollyClient polly;\n+    private final AWSPredictionsPluginConfiguration pluginConfiguration;\n+\n+    AWSPollyService(AWSPredictionsPluginConfiguration pluginConfiguration) {\n+        this.polly = createPollyClient();\n+        this.pluginConfiguration = pluginConfiguration;\n+    }\n+\n+    private AmazonPollyClient createPollyClient() {\n+        AWSCredentialsProvider credentialsProvider = AWSMobileClient.getInstance();\n+        ClientConfiguration configuration = new ClientConfiguration();\n+        configuration.setUserAgent(UserAgent.string());\n+        return new AmazonPollyPresigningClient(credentialsProvider, configuration);\n+    }\n+\n+    void synthesizeSpeech(\n+            @NonNull String text,\n+            @NonNull VoiceType voiceType,\n+            @NonNull Consumer<TextToSpeechResult> onSuccess,\n+            @NonNull Consumer<PredictionsException> onError\n+    ) {\n+        try {\n+            InputStream data = synthesizeSpeech(text, voiceType);\n+            onSuccess.accept(TextToSpeechResult.fromAudioData(data));\n+        } catch (PredictionsException exception) {\n+            onError.accept(exception);\n+        }\n+    }\n+\n+    private InputStream synthesizeSpeech(String text, VoiceType voiceType) throws PredictionsException {\n+        final String languageCode;\n+        final String voiceId;\n+        if (VoiceType.UNKNOWN.equals(voiceType)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1OTEyNQ=="}, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjk2MjE2OnYy", "diffSide": "RIGHT", "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/AWSPredictionsTextToSpeechTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNjoxNjozMlrOGSaanw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNzoyMDo1NVrOGScAKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk2MDM1MQ==", "bodyText": "When I was in Alexa, we had some tests that used AWS services to do TTS and ASR. This was a ~fair external verification, since they were ~separate services. Here, we don't have such an external verification mechanism.\nHowever, we do have mechanisms to:\n\nConvert text to speech;\nConvert speech to text.\n\nyou can have a test that does the \"does speech to text work?\" by providing an input wav, and expecting some valid text back.\nFor the \"convert text to speech,\" you can assume the \"speech to text\" part works. Then do:\n\nArrange some text.\nAct: convert it to speech.\nRun speech to text (assuming that this component works), and get text back.\nAssert that the returned text is ~close to the arranged text.", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421960351", "createdAt": "2020-05-08T06:16:32Z", "author": {"login": "jamesonwilliams"}, "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/AWSPredictionsTextToSpeechTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws;\n+\n+import android.content.Context;\n+\n+import com.amplifyframework.predictions.PredictionsCategory;\n+import com.amplifyframework.predictions.PredictionsException;\n+import com.amplifyframework.predictions.aws.test.R;\n+import com.amplifyframework.predictions.result.TextToSpeechResult;\n+import com.amplifyframework.testutils.Assets;\n+import com.amplifyframework.testutils.sync.SynchronousMobileClient;\n+import com.amplifyframework.testutils.sync.SynchronousPredictions;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.io.InputStream;\n+\n+import static androidx.test.core.app.ApplicationProvider.getApplicationContext;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * Tests that Predictions text-to-speech conversion\n+ * delivers a non-null result for valid input.\n+ */\n+public final class AWSPredictionsTextToSpeechTest {\n+\n+    private SynchronousPredictions predictions;\n+\n+    /**\n+     * Configure Predictions category before each test.\n+     * @throws Exception if mobile client initialization fails\n+     */\n+    @Before\n+    public void setUp() throws Exception {\n+        Context context = getApplicationContext();\n+\n+        // Set up Auth\n+        SynchronousMobileClient.instance().initialize();\n+\n+        // Delegate to Predictions category\n+        PredictionsCategory asyncDelegate =\n+                TestPredictionsCategory.create(context, R.raw.amplifyconfiguration);\n+        predictions = SynchronousPredictions.delegatingTo(asyncDelegate);\n+    }\n+\n+    /**\n+     * This is a placeholder test case for text-to-speech conversion.\n+     * @throws PredictionsException if prediction fails\n+     */\n+    @Test\n+    public void testTextToSpeechReturnsNonNullResult() throws PredictionsException {\n+        // Interpret english text and assert non-null result\n+        final String englishText = Assets.readAsString(\"sample-text-en.txt\");\n+        TextToSpeechResult result = predictions.convertTextToSpeech(englishText);\n+\n+        // Assert non-null audio data\n+        InputStream audioData = result.getAudioData();\n+        assertNotNull(audioData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk4MjQyMw==", "bodyText": "I was thinking about this... but it turns out we won't be able to support speech to text for GA... Android SDK doesn't have transcribe-streaming implemented", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421982423", "createdAt": "2020-05-08T07:11:46Z", "author": {"login": "raphkim"}, "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/AWSPredictionsTextToSpeechTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws;\n+\n+import android.content.Context;\n+\n+import com.amplifyframework.predictions.PredictionsCategory;\n+import com.amplifyframework.predictions.PredictionsException;\n+import com.amplifyframework.predictions.aws.test.R;\n+import com.amplifyframework.predictions.result.TextToSpeechResult;\n+import com.amplifyframework.testutils.Assets;\n+import com.amplifyframework.testutils.sync.SynchronousMobileClient;\n+import com.amplifyframework.testutils.sync.SynchronousPredictions;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.io.InputStream;\n+\n+import static androidx.test.core.app.ApplicationProvider.getApplicationContext;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * Tests that Predictions text-to-speech conversion\n+ * delivers a non-null result for valid input.\n+ */\n+public final class AWSPredictionsTextToSpeechTest {\n+\n+    private SynchronousPredictions predictions;\n+\n+    /**\n+     * Configure Predictions category before each test.\n+     * @throws Exception if mobile client initialization fails\n+     */\n+    @Before\n+    public void setUp() throws Exception {\n+        Context context = getApplicationContext();\n+\n+        // Set up Auth\n+        SynchronousMobileClient.instance().initialize();\n+\n+        // Delegate to Predictions category\n+        PredictionsCategory asyncDelegate =\n+                TestPredictionsCategory.create(context, R.raw.amplifyconfiguration);\n+        predictions = SynchronousPredictions.delegatingTo(asyncDelegate);\n+    }\n+\n+    /**\n+     * This is a placeholder test case for text-to-speech conversion.\n+     * @throws PredictionsException if prediction fails\n+     */\n+    @Test\n+    public void testTextToSpeechReturnsNonNullResult() throws PredictionsException {\n+        // Interpret english text and assert non-null result\n+        final String englishText = Assets.readAsString(\"sample-text-en.txt\");\n+        TextToSpeechResult result = predictions.convertTextToSpeech(englishText);\n+\n+        // Assert non-null audio data\n+        InputStream audioData = result.getAudioData();\n+        assertNotNull(audioData);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk2MDM1MQ=="}, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk4NjM0NA==", "bodyText": "Ah okay! Makes sense", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421986344", "createdAt": "2020-05-08T07:20:55Z", "author": {"login": "jamesonwilliams"}, "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/AWSPredictionsTextToSpeechTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws;\n+\n+import android.content.Context;\n+\n+import com.amplifyframework.predictions.PredictionsCategory;\n+import com.amplifyframework.predictions.PredictionsException;\n+import com.amplifyframework.predictions.aws.test.R;\n+import com.amplifyframework.predictions.result.TextToSpeechResult;\n+import com.amplifyframework.testutils.Assets;\n+import com.amplifyframework.testutils.sync.SynchronousMobileClient;\n+import com.amplifyframework.testutils.sync.SynchronousPredictions;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.io.InputStream;\n+\n+import static androidx.test.core.app.ApplicationProvider.getApplicationContext;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * Tests that Predictions text-to-speech conversion\n+ * delivers a non-null result for valid input.\n+ */\n+public final class AWSPredictionsTextToSpeechTest {\n+\n+    private SynchronousPredictions predictions;\n+\n+    /**\n+     * Configure Predictions category before each test.\n+     * @throws Exception if mobile client initialization fails\n+     */\n+    @Before\n+    public void setUp() throws Exception {\n+        Context context = getApplicationContext();\n+\n+        // Set up Auth\n+        SynchronousMobileClient.instance().initialize();\n+\n+        // Delegate to Predictions category\n+        PredictionsCategory asyncDelegate =\n+                TestPredictionsCategory.create(context, R.raw.amplifyconfiguration);\n+        predictions = SynchronousPredictions.delegatingTo(asyncDelegate);\n+    }\n+\n+    /**\n+     * This is a placeholder test case for text-to-speech conversion.\n+     * @throws PredictionsException if prediction fails\n+     */\n+    @Test\n+    public void testTextToSpeechReturnsNonNullResult() throws PredictionsException {\n+        // Interpret english text and assert non-null result\n+        final String englishText = Assets.readAsString(\"sample-text-en.txt\");\n+        TextToSpeechResult result = predictions.convertTextToSpeech(englishText);\n+\n+        // Assert non-null audio data\n+        InputStream audioData = result.getAudioData();\n+        assertNotNull(audioData);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk2MDM1MQ=="}, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjk2MzgxOnYy", "diffSide": "RIGHT", "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSPollyService.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNjoxNzoxNFrOGSabiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODo0MTozOFrOGToq-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk2MDU4NQ==", "bodyText": "I think this should be \"Amazon Polly\", not \"AWS Polly\".   And not just for Polly, for the same change should probably be made for all the other Predictions Services as well.  Maybe something to address in a separate PR.", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421960585", "createdAt": "2020-05-08T06:17:14Z", "author": {"login": "richardmcclellan"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSPollyService.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.service;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.predictions.PredictionsException;\n+import com.amplifyframework.predictions.aws.AWSPredictionsPluginConfiguration;\n+import com.amplifyframework.predictions.aws.configuration.SpeechGeneratorConfiguration;\n+import com.amplifyframework.predictions.aws.models.VoiceType;\n+import com.amplifyframework.predictions.result.TextToSpeechResult;\n+import com.amplifyframework.util.UserAgent;\n+\n+import com.amazonaws.AmazonClientException;\n+import com.amazonaws.ClientConfiguration;\n+import com.amazonaws.auth.AWSCredentialsProvider;\n+import com.amazonaws.mobile.client.AWSMobileClient;\n+import com.amazonaws.services.polly.AmazonPollyClient;\n+import com.amazonaws.services.polly.AmazonPollyPresigningClient;\n+import com.amazonaws.services.polly.model.OutputFormat;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechRequest;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechResult;\n+import com.amazonaws.services.polly.model.TextType;\n+\n+import java.io.InputStream;\n+\n+/**\n+ * Predictions service for performing text to speech conversion.\n+ */\n+final class AWSPollyService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk3NzM4MQ==", "bodyText": "Verified against our internal tech writers' page -- all of the services in this category are branded as Amazon whatevers.", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421977381", "createdAt": "2020-05-08T06:59:20Z", "author": {"login": "jamesonwilliams"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSPollyService.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.service;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.predictions.PredictionsException;\n+import com.amplifyframework.predictions.aws.AWSPredictionsPluginConfiguration;\n+import com.amplifyframework.predictions.aws.configuration.SpeechGeneratorConfiguration;\n+import com.amplifyframework.predictions.aws.models.VoiceType;\n+import com.amplifyframework.predictions.result.TextToSpeechResult;\n+import com.amplifyframework.util.UserAgent;\n+\n+import com.amazonaws.AmazonClientException;\n+import com.amazonaws.ClientConfiguration;\n+import com.amazonaws.auth.AWSCredentialsProvider;\n+import com.amazonaws.mobile.client.AWSMobileClient;\n+import com.amazonaws.services.polly.AmazonPollyClient;\n+import com.amazonaws.services.polly.AmazonPollyPresigningClient;\n+import com.amazonaws.services.polly.model.OutputFormat;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechRequest;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechResult;\n+import com.amazonaws.services.polly.model.TextType;\n+\n+import java.io.InputStream;\n+\n+/**\n+ * Predictions service for performing text to speech conversion.\n+ */\n+final class AWSPollyService {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk2MDU4NQ=="}, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk5MzkzNw==", "bodyText": "shoot! I'll have to go through the code to fix those ugh", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421993937", "createdAt": "2020-05-08T07:38:09Z", "author": {"login": "raphkim"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSPollyService.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.service;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.predictions.PredictionsException;\n+import com.amplifyframework.predictions.aws.AWSPredictionsPluginConfiguration;\n+import com.amplifyframework.predictions.aws.configuration.SpeechGeneratorConfiguration;\n+import com.amplifyframework.predictions.aws.models.VoiceType;\n+import com.amplifyframework.predictions.result.TextToSpeechResult;\n+import com.amplifyframework.util.UserAgent;\n+\n+import com.amazonaws.AmazonClientException;\n+import com.amazonaws.ClientConfiguration;\n+import com.amazonaws.auth.AWSCredentialsProvider;\n+import com.amazonaws.mobile.client.AWSMobileClient;\n+import com.amazonaws.services.polly.AmazonPollyClient;\n+import com.amazonaws.services.polly.AmazonPollyPresigningClient;\n+import com.amazonaws.services.polly.model.OutputFormat;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechRequest;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechResult;\n+import com.amazonaws.services.polly.model.TextType;\n+\n+import java.io.InputStream;\n+\n+/**\n+ * Predictions service for performing text to speech conversion.\n+ */\n+final class AWSPollyService {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk2MDU4NQ=="}, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI0MjQ5MA==", "bodyText": "(to be done in a separate PR as to not introduce non-polly stuff in this PR)", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r423242490", "createdAt": "2020-05-11T18:41:38Z", "author": {"login": "raphkim"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSPollyService.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.service;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.predictions.PredictionsException;\n+import com.amplifyframework.predictions.aws.AWSPredictionsPluginConfiguration;\n+import com.amplifyframework.predictions.aws.configuration.SpeechGeneratorConfiguration;\n+import com.amplifyframework.predictions.aws.models.VoiceType;\n+import com.amplifyframework.predictions.result.TextToSpeechResult;\n+import com.amplifyframework.util.UserAgent;\n+\n+import com.amazonaws.AmazonClientException;\n+import com.amazonaws.ClientConfiguration;\n+import com.amazonaws.auth.AWSCredentialsProvider;\n+import com.amazonaws.mobile.client.AWSMobileClient;\n+import com.amazonaws.services.polly.AmazonPollyClient;\n+import com.amazonaws.services.polly.AmazonPollyPresigningClient;\n+import com.amazonaws.services.polly.model.OutputFormat;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechRequest;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechResult;\n+import com.amazonaws.services.polly.model.TextType;\n+\n+import java.io.InputStream;\n+\n+/**\n+ * Predictions service for performing text to speech conversion.\n+ */\n+final class AWSPollyService {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk2MDU4NQ=="}, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjk2NjExOnYy", "diffSide": "RIGHT", "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/configuration/SpeechGeneratorConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNjoxODoxNFrOGSac0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNzoxMjozM1rOGSbyBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk2MDkxNQ==", "bodyText": "If you have enums for these things, why not just use them everywhere?", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421960915", "createdAt": "2020-05-08T06:18:14Z", "author": {"login": "jamesonwilliams"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/configuration/SpeechGeneratorConfiguration.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.configuration;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.predictions.aws.NetworkPolicy;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+/**\n+ * Configures the behavior for speech generation.\n+ */\n+public final class SpeechGeneratorConfiguration {\n+    private static final String CONFIG_NAME = \"speechGenerator\";\n+\n+    private final String voice;\n+    private final String language;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk4MjcyNg==", "bodyText": "Enum is scoped to the plugin, since these names only make sense in the context of AWS Polly, and \"voice\" is a configurable value in core category options for text-to-speech...", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421982726", "createdAt": "2020-05-08T07:12:33Z", "author": {"login": "raphkim"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/configuration/SpeechGeneratorConfiguration.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.configuration;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.predictions.aws.NetworkPolicy;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+/**\n+ * Configures the behavior for speech generation.\n+ */\n+public final class SpeechGeneratorConfiguration {\n+    private static final String CONFIG_NAME = \"speechGenerator\";\n+\n+    private final String voice;\n+    private final String language;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk2MDkxNQ=="}, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjk3NTIxOnYy", "diffSide": "RIGHT", "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/request/AWSPollyRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNjoyMTo1OFrOGSah7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNzoxMzowNFrOGSbyxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk2MjIyMw==", "bodyText": "Don't forget to do equals, hashCode, toString on all of your models, request and response types.", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421962223", "createdAt": "2020-05-08T06:21:58Z", "author": {"login": "jamesonwilliams"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/request/AWSPollyRequest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.request;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.predictions.aws.models.VoiceType;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Simple request instance for speech synthesis operation.\n+ */\n+public final class AWSPollyRequest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk4MjkxOQ==", "bodyText": "After this PR + dummy transcribe PR, I will go through every model to add them!", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421982919", "createdAt": "2020-05-08T07:13:04Z", "author": {"login": "raphkim"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/request/AWSPollyRequest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.request;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.predictions.aws.models.VoiceType;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Simple request instance for speech synthesis operation.\n+ */\n+public final class AWSPollyRequest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk2MjIyMw=="}, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjk4MjE0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/predictions/options/TextToSpeechOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNjoyNDo0MlrOGSal5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNzo0Nzo0M1rOGScutA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk2MzIzOQ==", "bodyText": "This is String since VoiceType is in the plugin, right? Any other options? (I agree, this is better than including the current VoiceType into core!)", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421963239", "createdAt": "2020-05-08T06:24:42Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/predictions/options/TextToSpeechOptions.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.options;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.core.async.Options;\n+\n+/**\n+ * Options for text to speech conversion operation.\n+ */\n+public final class TextToSpeechOptions implements Options {\n+    private final String voiceType;\n+\n+    private TextToSpeechOptions(final Builder builder) {\n+        this.voiceType = builder.getVoiceType();\n+    }\n+\n+    /**\n+     * Gets the custom voice type if specified.\n+     * Null otherwise.\n+     * @return the custom voice type\n+     */\n+    @Nullable\n+    public String getVoiceType() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk5ODI2MA==", "bodyText": "I figured it out! VoiceType is now a core predictions interface with String getVoice(); method, and AWSVoiceType implements that voice type inside the plugin!", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r421998260", "createdAt": "2020-05-08T07:47:43Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/predictions/options/TextToSpeechOptions.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.options;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.core.async.Options;\n+\n+/**\n+ * Options for text to speech conversion operation.\n+ */\n+public final class TextToSpeechOptions implements Options {\n+    private final String voiceType;\n+\n+    private TextToSpeechOptions(final Builder builder) {\n+        this.voiceType = builder.getVoiceType();\n+    }\n+\n+    /**\n+     * Gets the custom voice type if specified.\n+     * Null otherwise.\n+     * @return the custom voice type\n+     */\n+    @Nullable\n+    public String getVoiceType() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk2MzIzOQ=="}, "originalCommit": {"oid": "79442dd35395f611fcec8549c095515f194e0687"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNzI0NjM0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/predictions/models/VoiceType.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNzo1Nzo0NFrOGSdA4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzoyMjoyOFrOGStLIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAwMjkxNA==", "bodyText": "Should this have both a getVoiceName() and getLanguageCode(), to mirror the values that are in the AWSVoiceType?", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r422002914", "createdAt": "2020-05-08T07:57:44Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/predictions/models/VoiceType.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.models;\n+\n+import androidx.annotation.NonNull;\n+\n+/**\n+ * Contains details about a specific voice to be\n+ * used for synthesizing speech.\n+ */\n+public interface VoiceType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "380b19f17d84f2dcb25b27d0314b408ceff2a90c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI1NDI0MA==", "bodyText": "iOS's core VoiceType doesn't contain anything about language. Strangely enough, even the plugin's extension doesn't seem to contain language code (outside of the constant name that is), which means that they won't be able to support bilingual TTS feature.", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r422254240", "createdAt": "2020-05-08T16:55:19Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/predictions/models/VoiceType.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.models;\n+\n+import androidx.annotation.NonNull;\n+\n+/**\n+ * Contains details about a specific voice to be\n+ * used for synthesizing speech.\n+ */\n+public interface VoiceType {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAwMjkxNA=="}, "originalCommit": {"oid": "380b19f17d84f2dcb25b27d0314b408ceff2a90c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI2NzY4Mw==", "bodyText": "Since it wasn't clear whether the intention was to completely remove language from the equation or if they wanted to keep core VoiceType as generic as possible, I decided to keep the core VoiceType interface match up with iOS and only introduce the language code in the plugin specific voice type.\nThis allows us to support bilingual voices by separating AWSVoiceType#HINDI_ADITI and AWSVoiceType#INDIAN_ENGLISH_ADITI", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r422267683", "createdAt": "2020-05-08T17:22:28Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/predictions/models/VoiceType.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.models;\n+\n+import androidx.annotation.NonNull;\n+\n+/**\n+ * Contains details about a specific voice to be\n+ * used for synthesizing speech.\n+ */\n+public interface VoiceType {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAwMjkxNA=="}, "originalCommit": {"oid": "380b19f17d84f2dcb25b27d0314b408ceff2a90c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDIyMTcxOnYy", "diffSide": "RIGHT", "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/models/AWSVoiceType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOToxOToyMVrOGUVYXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjoxMToyNVrOGUayWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3NTAwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                CHINESE_ZHIYU(\"Zhiyu\", \"cmn-CN\"),\n          \n          \n            \n                MANDARIN_CHINESE_ZHIYU(\"Zhiyu\", \"cmn-CN\"),", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r423975004", "createdAt": "2020-05-12T19:19:21Z", "author": {"login": "richardmcclellan"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/models/AWSVoiceType.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.models;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.predictions.models.VoiceType;\n+\n+/**\n+ * Types of voice to synthesize speech with.\n+ *\n+ * @see <a href=https://docs.aws.amazon.com/polly/latest/dg/voicelist.html>Voices in Amazon Polly</a>\n+ */\n+@SuppressWarnings(\"JavadocVariable\")\n+public enum AWSVoiceType implements VoiceType {\n+    ARABIC_ZEINA(\"Zeina\", \"arb\"),\n+    CHINESE_ZHIYU(\"Zhiyu\", \"cmn-CN\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34314451140ee133040a4627be6edf11a220b677"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA2MzU3Ng==", "bodyText": "good suggestion! Makes sense since we are following {VARIATION}_{LANGUAGE}_{NAME} scheme", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r424063576", "createdAt": "2020-05-12T22:11:25Z", "author": {"login": "raphkim"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/models/AWSVoiceType.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.models;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.predictions.models.VoiceType;\n+\n+/**\n+ * Types of voice to synthesize speech with.\n+ *\n+ * @see <a href=https://docs.aws.amazon.com/polly/latest/dg/voicelist.html>Voices in Amazon Polly</a>\n+ */\n+@SuppressWarnings(\"JavadocVariable\")\n+public enum AWSVoiceType implements VoiceType {\n+    ARABIC_ZEINA(\"Zeina\", \"arb\"),\n+    CHINESE_ZHIYU(\"Zhiyu\", \"cmn-CN\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3NTAwNA=="}, "originalCommit": {"oid": "34314451140ee133040a4627be6edf11a220b677"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDIzMDI4OnYy", "diffSide": "RIGHT", "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSPollyService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOToyMTo1MVrOGUVd8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjoxMTo0NlrOGUay8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3NjQzMw==", "bodyText": "Apparently languageCode is an optional parameter, and if you don't include it, multilingual voices will fall back to a default language.  I guess this is how iOS is able to not include this parameter at all, and still have a mostly working implementation.\nI like that we now have multilingual support for Android.  I'd suggest reaching out to iOS and suggesting that they add similar support.", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r423976433", "createdAt": "2020-05-12T19:21:51Z", "author": {"login": "richardmcclellan"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSPollyService.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.service;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.predictions.PredictionsException;\n+import com.amplifyframework.predictions.aws.AWSPredictionsPluginConfiguration;\n+import com.amplifyframework.predictions.aws.configuration.SpeechGeneratorConfiguration;\n+import com.amplifyframework.predictions.aws.models.AWSVoiceType;\n+import com.amplifyframework.predictions.result.TextToSpeechResult;\n+import com.amplifyframework.util.UserAgent;\n+\n+import com.amazonaws.AmazonClientException;\n+import com.amazonaws.ClientConfiguration;\n+import com.amazonaws.auth.AWSCredentialsProvider;\n+import com.amazonaws.mobile.client.AWSMobileClient;\n+import com.amazonaws.services.polly.AmazonPollyClient;\n+import com.amazonaws.services.polly.AmazonPollyPresigningClient;\n+import com.amazonaws.services.polly.model.OutputFormat;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechRequest;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechResult;\n+import com.amazonaws.services.polly.model.TextType;\n+\n+import java.io.InputStream;\n+\n+/**\n+ * Predictions service for performing text to speech conversion.\n+ */\n+final class AWSPollyService {\n+    private static final int MP3_SAMPLE_RATE = 24_000;\n+\n+    private final AmazonPollyClient polly;\n+    private final AWSPredictionsPluginConfiguration pluginConfiguration;\n+\n+    AWSPollyService(AWSPredictionsPluginConfiguration pluginConfiguration) {\n+        this.polly = createPollyClient();\n+        this.pluginConfiguration = pluginConfiguration;\n+    }\n+\n+    private AmazonPollyClient createPollyClient() {\n+        AWSCredentialsProvider credentialsProvider = AWSMobileClient.getInstance();\n+        ClientConfiguration configuration = new ClientConfiguration();\n+        configuration.setUserAgent(UserAgent.string());\n+        return new AmazonPollyPresigningClient(credentialsProvider, configuration);\n+    }\n+\n+    void synthesizeSpeech(\n+            @NonNull String text,\n+            @NonNull AWSVoiceType voiceType,\n+            @NonNull Consumer<TextToSpeechResult> onSuccess,\n+            @NonNull Consumer<PredictionsException> onError\n+    ) {\n+        try {\n+            InputStream data = synthesizeSpeech(text, voiceType);\n+            onSuccess.accept(TextToSpeechResult.fromAudioData(data));\n+        } catch (PredictionsException exception) {\n+            onError.accept(exception);\n+        }\n+    }\n+\n+    private InputStream synthesizeSpeech(String text, AWSVoiceType voiceType) throws PredictionsException {\n+        final String languageCode;\n+        final String voiceId;\n+        if (AWSVoiceType.UNKNOWN.equals(voiceType)) {\n+            // Obtain voice + language from plugin configuration by default\n+            SpeechGeneratorConfiguration config = pluginConfiguration.getSpeechGeneratorConfiguration();\n+            languageCode = config.getLanguage();\n+            voiceId = config.getVoice();\n+        } else {\n+            // Override configuration defaults if explicitly specified in the options\n+            languageCode = voiceType.getLanguageCode();\n+            voiceId = voiceType.getName();\n+        }\n+\n+        SynthesizeSpeechRequest request = new SynthesizeSpeechRequest()\n+                 .withText(text)\n+                 .withTextType(TextType.Text)\n+                 .withLanguageCode(languageCode)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34314451140ee133040a4627be6edf11a220b677"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA2MzcyOA==", "bodyText": "yep! I also noticed this shortly after. It should definitely be supported by both platforms ideally.", "url": "https://github.com/aws-amplify/amplify-android/pull/432#discussion_r424063728", "createdAt": "2020-05-12T22:11:46Z", "author": {"login": "raphkim"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSPollyService.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.service;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.predictions.PredictionsException;\n+import com.amplifyframework.predictions.aws.AWSPredictionsPluginConfiguration;\n+import com.amplifyframework.predictions.aws.configuration.SpeechGeneratorConfiguration;\n+import com.amplifyframework.predictions.aws.models.AWSVoiceType;\n+import com.amplifyframework.predictions.result.TextToSpeechResult;\n+import com.amplifyframework.util.UserAgent;\n+\n+import com.amazonaws.AmazonClientException;\n+import com.amazonaws.ClientConfiguration;\n+import com.amazonaws.auth.AWSCredentialsProvider;\n+import com.amazonaws.mobile.client.AWSMobileClient;\n+import com.amazonaws.services.polly.AmazonPollyClient;\n+import com.amazonaws.services.polly.AmazonPollyPresigningClient;\n+import com.amazonaws.services.polly.model.OutputFormat;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechRequest;\n+import com.amazonaws.services.polly.model.SynthesizeSpeechResult;\n+import com.amazonaws.services.polly.model.TextType;\n+\n+import java.io.InputStream;\n+\n+/**\n+ * Predictions service for performing text to speech conversion.\n+ */\n+final class AWSPollyService {\n+    private static final int MP3_SAMPLE_RATE = 24_000;\n+\n+    private final AmazonPollyClient polly;\n+    private final AWSPredictionsPluginConfiguration pluginConfiguration;\n+\n+    AWSPollyService(AWSPredictionsPluginConfiguration pluginConfiguration) {\n+        this.polly = createPollyClient();\n+        this.pluginConfiguration = pluginConfiguration;\n+    }\n+\n+    private AmazonPollyClient createPollyClient() {\n+        AWSCredentialsProvider credentialsProvider = AWSMobileClient.getInstance();\n+        ClientConfiguration configuration = new ClientConfiguration();\n+        configuration.setUserAgent(UserAgent.string());\n+        return new AmazonPollyPresigningClient(credentialsProvider, configuration);\n+    }\n+\n+    void synthesizeSpeech(\n+            @NonNull String text,\n+            @NonNull AWSVoiceType voiceType,\n+            @NonNull Consumer<TextToSpeechResult> onSuccess,\n+            @NonNull Consumer<PredictionsException> onError\n+    ) {\n+        try {\n+            InputStream data = synthesizeSpeech(text, voiceType);\n+            onSuccess.accept(TextToSpeechResult.fromAudioData(data));\n+        } catch (PredictionsException exception) {\n+            onError.accept(exception);\n+        }\n+    }\n+\n+    private InputStream synthesizeSpeech(String text, AWSVoiceType voiceType) throws PredictionsException {\n+        final String languageCode;\n+        final String voiceId;\n+        if (AWSVoiceType.UNKNOWN.equals(voiceType)) {\n+            // Obtain voice + language from plugin configuration by default\n+            SpeechGeneratorConfiguration config = pluginConfiguration.getSpeechGeneratorConfiguration();\n+            languageCode = config.getLanguage();\n+            voiceId = config.getVoice();\n+        } else {\n+            // Override configuration defaults if explicitly specified in the options\n+            languageCode = voiceType.getLanguageCode();\n+            voiceId = voiceType.getName();\n+        }\n+\n+        SynthesizeSpeechRequest request = new SynthesizeSpeechRequest()\n+                 .withText(text)\n+                 .withTextType(TextType.Text)\n+                 .withLanguageCode(languageCode)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3NjQzMw=="}, "originalCommit": {"oid": "34314451140ee133040a4627be6edf11a220b677"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1208, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}