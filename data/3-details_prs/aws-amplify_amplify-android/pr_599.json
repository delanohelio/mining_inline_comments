{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMTQ3MzE0", "number": 599, "title": "DataStore race condition fix and other stability-related fixes", "bodyText": "Issue #, if available: #541 #581 Maybe: #589 #563\nDescription of changes:\n1 - Modified clear() operation so it doesn\u2019t invoke beforeOperation like all the other API calls. This is because we need to stop the Orchestrator anyways before we can delete the database. After we remove the database and re-initialize the storage adapter, we then make a call to re-initialize the orchestrator asynchronously.\n2 - Modified beforeOperation so it doesn't call initializeOrchestrator. My thought is that operations against the DataStore should have little to no dependency on what the orchestrator is currently doing (with the exception of clear). I believe this was in place as a mechanism to ensure the synchronization processes remain alive or are restarted as needed. I will put a separate PR together to fill this gap.\n3 - Added a semaphore to the Orchestrator to prevent race conditions when calling start(). This shouldn't happen often except for cases where clear() is called immediately after Amplify initializes.\n4 - The change in SubscriptionProcessor is probably the most abstract one of the bunch. It has to do with the issues mentioned above, which are related to how RxJava lifecycle rules work. I'm basically wrapping the envent emitter so I can check whether I can check whether the downstream subscriber has already been disposed, which happens when one of the AppSync subscriptions fails. I added a comment to AmplifyDisposables to go into more detail.\nAs I mentioned, there will be a follow-up to this PR to fill the gap I mentioned in item 2. A more long term solution would be to re-structure how we wire the streams, but it would require a fair amount of refactoring. I'm hoping this will help with the fatal app crashes in the short term.\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-06-25T17:00:32Z", "url": "https://github.com/aws-amplify/amplify-android/pull/599", "merged": true, "mergeCommit": {"oid": "0d560a667f0a856fbe72b543622dd3166d11bab2"}, "closed": true, "closedAt": "2020-07-16T01:42:05Z", "author": {"login": "rjuliano"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuxaaoAH2gAyNDQwMTQ3MzE0OmIzNTlhZjEyZWIxNWI2MTc4ZGIyZGUxMDQ0OTU0Y2Q2ZmY1Mjk2NTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1UFSsgFqTQ0OTQyOTQ3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b359af12eb15b6178db2de1044954cd6ff529650", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/b359af12eb15b6178db2de1044954cd6ff529650", "committedDate": "2020-06-25T16:40:48Z", "message": "fix(datastore) Fix race condition on orchestrator init"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTUxMjQx", "url": "https://github.com/aws-amplify/amplify-android/pull/599#pullrequestreview-437951241", "createdAt": "2020-06-26T00:56:05Z", "commit": {"oid": "b359af12eb15b6178db2de1044954cd6ff529650"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDo1NjowNlrOGpQeDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDo1NjowNlrOGpQeDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkxNDYzOQ==", "bodyText": "Augustus De Morgan sez:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!permitAcquired || !status.compareAndSet(OrchestratorStatus.STOPPED, OrchestratorStatus.STARTING)) {\n          \n          \n            \n                    if (!(permitAcquired && status.compareAndSet(OrchestratorStatus.STOPPED, OrchestratorStatus.STARTING)) {", "url": "https://github.com/aws-amplify/amplify-android/pull/599#discussion_r445914639", "createdAt": "2020-06-26T00:56:06Z", "author": {"login": "jpignata"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/Orchestrator.java", "diffHunk": "@@ -115,15 +119,21 @@ public boolean isStarted() {\n      * @return A Completable operation to start the sync engine orchestrator\n      */\n     @NonNull\n-    public Completable start() {\n-        // Only start if it's stopped.\n-        if (!OrchestratorStatus.STOPPED.equals(status.get())) {\n-            return initializationCompletable;\n+    public synchronized Completable start() {\n+        boolean permitAcquired = acquirePermit(OrchestratorAction.START);\n+        // Only start if it's stopped AND if we can get a permit.\n+        if (!permitAcquired || !status.compareAndSet(OrchestratorStatus.STOPPED, OrchestratorStatus.STARTING)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b359af12eb15b6178db2de1044954cd6ff529650"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTUxOTQz", "url": "https://github.com/aws-amplify/amplify-android/pull/599#pullrequestreview-437951943", "createdAt": "2020-06-26T00:58:34Z", "commit": {"oid": "b359af12eb15b6178db2de1044954cd6ff529650"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDo1ODozNFrOGpQgUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDo1ODozNFrOGpQgUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkxNTIxOQ==", "bodyText": "It seems like OrchestratorStatus needs some helpers like isStopped(), isStarting(), etc.", "url": "https://github.com/aws-amplify/amplify-android/pull/599#discussion_r445915219", "createdAt": "2020-06-26T00:58:34Z", "author": {"login": "jpignata"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/Orchestrator.java", "diffHunk": "@@ -115,15 +119,21 @@ public boolean isStarted() {\n      * @return A Completable operation to start the sync engine orchestrator\n      */\n     @NonNull\n-    public Completable start() {\n-        // Only start if it's stopped.\n-        if (!OrchestratorStatus.STOPPED.equals(status.get())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b359af12eb15b6178db2de1044954cd6ff529650"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTUyNDc1", "url": "https://github.com/aws-amplify/amplify-android/pull/599#pullrequestreview-437952475", "createdAt": "2020-06-26T01:00:28Z", "commit": {"oid": "b359af12eb15b6178db2de1044954cd6ff529650"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMTowMDoyOVrOGpQiBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMTowMDoyOVrOGpQiBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkxNTY1Mw==", "bodyText": "Can we wrapped the compareAndSet operation in the same method that grabs the semaphore so it can release it as needed?", "url": "https://github.com/aws-amplify/amplify-android/pull/599#discussion_r445915653", "createdAt": "2020-06-26T01:00:29Z", "author": {"login": "jpignata"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/Orchestrator.java", "diffHunk": "@@ -147,25 +157,50 @@ public Completable start() {\n                     subscriptionProcessor.startDrainingMutationBuffer();\n                 }\n                 status.compareAndSet(OrchestratorStatus.STARTING, OrchestratorStatus.STARTED);\n+                LOG.debug(\"Orchestrator started.\");\n             })\n-        );\n+        ).doFinally(startStopSemaphore::release);\n         return initializationCompletable;\n     }\n \n     /**\n      * Stop all model synchronization.\n      */\n-    public void stop() {\n-        if (isStarted()) {\n+    public synchronized void stop() {\n+        boolean permitAcquired = acquirePermit(OrchestratorAction.STOP);\n+        // only stop if it's started AND if we can get a permit.\n+        if (!permitAcquired || !status.compareAndSet(OrchestratorStatus.STARTED, OrchestratorStatus.STOPPING)) {\n+            LOG.warn(String.format(\"Orchestrator could not be stopped. Orchestrator status: %s\", status.get()));\n+            // If we acquired the permit but failed to set the status, let's release the permit.\n+            if (permitAcquired) {\n+                startStopSemaphore.release();\n+            }\n+            return;\n+        }\n+        try {\n             LOG.info(\"Intentionally stopping cloud synchronization, now.\");\n-            status.compareAndSet(OrchestratorStatus.STARTED, OrchestratorStatus.STOPPING);\n             subscriptionProcessor.stopAllSubscriptionActivity();\n             storageObserver.stopObservingStorageChanges();\n             mutationProcessor.stopDrainingMutationOutbox();\n             status.compareAndSet(OrchestratorStatus.STOPPING, OrchestratorStatus.STOPPED);\n             LOG.debug(\"Stopped remote synchronization.\");\n+        } finally {\n+            startStopSemaphore.release();\n         }\n+    }\n \n+    private boolean acquirePermit(OrchestratorAction action) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b359af12eb15b6178db2de1044954cd6ff529650"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c258bc35473c6db6dfc7eb49fa44458ba1868a9", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/3c258bc35473c6db6dfc7eb49fa44458ba1868a9", "committedDate": "2020-06-26T13:26:54Z", "message": "Don't try to initialize orchestrator in beforeOperation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a1f4a054450d1a1fcdb85eb6cc6d9f832d50b5c", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/3a1f4a054450d1a1fcdb85eb6cc6d9f832d50b5c", "committedDate": "2020-06-26T14:00:37Z", "message": "Update aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/Orchestrator.java\r\n\r\nDe Morgan's Laws\n\nCo-authored-by: John Pignata <john@pignata.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a26a83fd7ab1b774a33d30f6d1b09c46fb4e24be", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/a26a83fd7ab1b774a33d30f6d1b09c46fb4e24be", "committedDate": "2020-06-26T14:37:49Z", "message": "Refactored some stop/start logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63a79689fdd4a5475fdcffcc5dfcf681a53bffc0", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/63a79689fdd4a5475fdcffcc5dfcf681a53bffc0", "committedDate": "2020-06-26T14:39:05Z", "message": "Merge branch 'rjuliano/bugfix_startcrash' of github.com:aws-amplify/amplify-android into rjuliano/bugfix_startcrash"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97f643e75288b3cc7aec465fbf15284f0639abd0", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/97f643e75288b3cc7aec465fbf15284f0639abd0", "committedDate": "2020-06-26T15:47:13Z", "message": "Checkstyle fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NzE2Mzkx", "url": "https://github.com/aws-amplify/amplify-android/pull/599#pullrequestreview-438716391", "createdAt": "2020-06-27T18:34:47Z", "commit": {"oid": "b359af12eb15b6178db2de1044954cd6ff529650"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxODozNDo0N1rOGp3giQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxODozNDo0N1rOGp3giQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU1NDI0OQ==", "bodyText": "I saw this pattern in multiple place in Amplify Android's source code. Is there any reason why we want to perform observeOn and subscribeOn at the same place with the same scheduler?\nShould'nt\norchestrator.start()\n                  .subscribeOn(Schedulers.io());\n\nDo the work? Unless you were using a Subject which may change the threading so you have to reset the scheduler in observeOn but i dont see any Subject in orchestrator", "url": "https://github.com/aws-amplify/amplify-android/pull/599#discussion_r446554249", "createdAt": "2020-06-27T18:34:47Z", "author": {"login": "richardissuperman"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AWSDataStorePlugin.java", "diffHunk": "@@ -449,7 +450,10 @@ private Completable initializeOrchestrator() {\n         if (api.getPlugins().isEmpty()) {\n             return Completable.complete();\n         } else {\n-            return orchestrator.start();\n+            // Let's prevent the orchestrator startup from possibly running in main.\n+            return orchestrator.start()\n+                .observeOn(Schedulers.io())\n+                .subscribeOn(Schedulers.io());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b359af12eb15b6178db2de1044954cd6ff529650"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4OTc4NjQ4", "url": "https://github.com/aws-amplify/amplify-android/pull/599#pullrequestreview-438978648", "createdAt": "2020-06-29T08:13:58Z", "commit": {"oid": "97f643e75288b3cc7aec465fbf15284f0639abd0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODoxMzo1OFrOGqJe8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODoxMzo1OFrOGqJe8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg0ODc1Mg==", "bodyText": "nit: call call", "url": "https://github.com/aws-amplify/amplify-android/pull/599#discussion_r446848752", "createdAt": "2020-06-29T08:13:58Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AWSDataStorePlugin.java", "diffHunk": "@@ -425,19 +426,22 @@ public void observe(\n     @Override\n     public void clear(@NonNull Action onComplete,\n                       @NonNull Consumer<DataStoreException> onError) {\n-        beforeOperation(() -> {\n-            orchestrator.stop();\n-            sqliteStorageAdapter.clear(onComplete, onError);\n-        });\n+        // We shouldn't call call beforeOperation when clearing the DataStore. The", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97f643e75288b3cc7aec465fbf15284f0639abd0"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTQ5Njcz", "url": "https://github.com/aws-amplify/amplify-android/pull/599#pullrequestreview-440549673", "createdAt": "2020-07-01T05:10:07Z", "commit": {"oid": "97f643e75288b3cc7aec465fbf15284f0639abd0"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNToxMDowN1rOGrW-aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNToxODo1N1rOGrXHRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExODM3Ng==", "bodyText": "Even before, we weren't checking the return value here -- wether or not the latch actually counted down. Should we be, now?", "url": "https://github.com/aws-amplify/amplify-android/pull/599#discussion_r448118376", "createdAt": "2020-07-01T05:10:07Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessor.java", "diffHunk": "@@ -117,14 +117,19 @@ void startSubscriptions() {\n                 clazz,\n                 token -> latch.countDown(),\n                 emitter::onNext,\n-                emitter::onError,\n+                AmplifyDisposables.onErrorConsumerWrapperFor(emitter),\n                 emitter::onComplete\n             );\n             // When the observable is disposed, we need to call cancel() on the subscription\n             // so it can properly dispose of resources if necessary. For the AWS API plugin,\n             // this means means closing the underlying network connection.\n             emitter.setDisposable(AmplifyDisposables.fromCancelable(cancelable));\n-            latch.await(SUBSCRIPTION_START_TIMEOUT_MS, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97f643e75288b3cc7aec465fbf15284f0639abd0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExOTAyNQ==", "bodyText": "Is it an AmplifyDisposables thing, really? It doesn't build a Disposable. If you only use it from the SubscriptionProcessor, maybe it should live as a static utility method on that class, instead?", "url": "https://github.com/aws-amplify/amplify-android/pull/599#discussion_r448119025", "createdAt": "2020-07-01T05:12:20Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AmplifyDisposables.java", "diffHunk": "@@ -61,4 +71,47 @@ public boolean isDisposed() {\n             }\n         };\n     }\n+\n+    /**\n+     * This function that creates a {@link Consumer} which wraps the {@link ObservableEmitter#onError(Throwable)}\n+     * to prevent it from calling observers that have already been disposed.\n+     *\n+     * <p>\n+     * The scenario is that we have multiple event sources (1 AppSync subscription\n+     * for each model+operation type combination) being consumed by a single downstream\n+     * oberserver. Once the first subscription emits an error, the downstream subscriber\n+     * is placed in a disposed state and will not receive any further notifications.\n+     * In a situation such as loss of connectivity, it's innevitable that multiple subscriptions will fail.\n+     * With that said, after the first failure, the other events sources (AppSync subscriptions)\n+     * will attempt to invoke the downstream onError handler which then results in an\n+     * {@link io.reactivex.exceptions.UndeliverableException} being thrown.\n+     * </p>\n+     *\n+     * <p>\n+     * This method takes a reference of the observable that represents the AppSync subscription,\n+     * wraps it and returns a {@link Consumer} that is used as the onError parameter. The returned\n+     * {@link Consumer} function will delegate the onError call to the downstream observers if it's\n+     * still available, otherwise it logs a warning.\n+     * </p>\n+     *\n+     * @param realEmitter The emitter which will have it's onError function proxied by the return\n+     *                    value of this function.\n+     * @param <T> The type of model handled by the emitter.\n+     * @param <E> The type of exception for the onError consumer\n+     * @return A {@link Consumer} that proxies the {@link ObservableEmitter#onError(Throwable)} call\n+     * to the {@code realEmitter} if it's not disposed or logs a warning.\n+     * @see <a href=\"https://github.com/aws-amplify/amplify-android/issues/541\">GitHub issue #541</a>\n+     *\n+     */\n+    @NonNull\n+    public static <T extends Model, E extends AmplifyException> Consumer<E> onErrorConsumerWrapperFor(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97f643e75288b3cc7aec465fbf15284f0639abd0"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExOTIwOA==", "bodyText": "Should we be checking the return value here to tell whether or not the latch did count down? What are the appropriate actions to take if so, vs. if not?", "url": "https://github.com/aws-amplify/amplify-android/pull/599#discussion_r448119208", "createdAt": "2020-07-01T05:13:11Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AWSDataStorePlugin.java", "diffHunk": "@@ -425,19 +426,22 @@ public void observe(\n     @Override\n     public void clear(@NonNull Action onComplete,\n                       @NonNull Consumer<DataStoreException> onError) {\n-        beforeOperation(() -> {\n-            orchestrator.stop();\n-            sqliteStorageAdapter.clear(onComplete, onError);\n-        });\n+        // We shouldn't call call beforeOperation when clearing the DataStore. The\n+        // only thing we have to wait for is the category initialization latch.\n+        try {\n+            categoryInitializationsPending.await();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97f643e75288b3cc7aec465fbf15284f0639abd0"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExOTYxOQ==", "bodyText": "Should onComplete.call() be fired as a result of the subscription, when the initialization of the orchestrator completes, later? That is,\ninitializeOrchestrator().subscribe(onComplete::call);", "url": "https://github.com/aws-amplify/amplify-android/pull/599#discussion_r448119619", "createdAt": "2020-07-01T05:14:58Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AWSDataStorePlugin.java", "diffHunk": "@@ -425,19 +426,22 @@ public void observe(\n     @Override\n     public void clear(@NonNull Action onComplete,\n                       @NonNull Consumer<DataStoreException> onError) {\n-        beforeOperation(() -> {\n-            orchestrator.stop();\n-            sqliteStorageAdapter.clear(onComplete, onError);\n-        });\n+        // We shouldn't call call beforeOperation when clearing the DataStore. The\n+        // only thing we have to wait for is the category initialization latch.\n+        try {\n+            categoryInitializationsPending.await();\n+        } catch (InterruptedException exception) {\n+            LOG.warn(\"Execution interrupted while waiting for DataStore to be initialized.\");\n+        }\n+        orchestrator.stop();\n+        sqliteStorageAdapter.clear(() -> {\n+            initializeOrchestrator().subscribe();\n+            onComplete.call();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97f643e75288b3cc7aec465fbf15284f0639abd0"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyMDQxMg==", "bodyText": "Can you get rid of the OrchestratorAction entirely, if you make this:\nprivate boolean transitionToState(OrchestratorState targetState) {\n?", "url": "https://github.com/aws-amplify/amplify-android/pull/599#discussion_r448120412", "createdAt": "2020-07-01T05:17:59Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/Orchestrator.java", "diffHunk": "@@ -147,25 +149,56 @@ public Completable start() {\n                     subscriptionProcessor.startDrainingMutationBuffer();\n                 }\n                 status.compareAndSet(OrchestratorStatus.STARTING, OrchestratorStatus.STARTED);\n+                LOG.debug(\"Orchestrator started.\");\n             })\n-        );\n-        return initializationCompletable;\n+        ).doFinally(startStopSemaphore::release);\n     }\n \n     /**\n      * Stop all model synchronization.\n      */\n-    public void stop() {\n-        if (isStarted()) {\n+    public synchronized void stop() {\n+        if (!performAction(OrchestratorAction.STOP)) {\n+            return;\n+        }\n+        try {\n             LOG.info(\"Intentionally stopping cloud synchronization, now.\");\n-            status.compareAndSet(OrchestratorStatus.STARTED, OrchestratorStatus.STOPPING);\n             subscriptionProcessor.stopAllSubscriptionActivity();\n             storageObserver.stopObservingStorageChanges();\n             mutationProcessor.stopDrainingMutationOutbox();\n             status.compareAndSet(OrchestratorStatus.STOPPING, OrchestratorStatus.STOPPED);\n             LOG.debug(\"Stopped remote synchronization.\");\n+        } finally {\n+            startStopSemaphore.release();\n         }\n+    }\n \n+    private boolean performAction(OrchestratorAction intendedAction) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97f643e75288b3cc7aec465fbf15284f0639abd0"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyMDY0Nw==", "bodyText": "This might be an error, if the user is expecting cloud sync to function? Should we wire this back to the user error handler somehow, too?", "url": "https://github.com/aws-amplify/amplify-android/pull/599#discussion_r448120647", "createdAt": "2020-07-01T05:18:57Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/Orchestrator.java", "diffHunk": "@@ -147,25 +149,56 @@ public Completable start() {\n                     subscriptionProcessor.startDrainingMutationBuffer();\n                 }\n                 status.compareAndSet(OrchestratorStatus.STARTING, OrchestratorStatus.STARTED);\n+                LOG.debug(\"Orchestrator started.\");\n             })\n-        );\n-        return initializationCompletable;\n+        ).doFinally(startStopSemaphore::release);\n     }\n \n     /**\n      * Stop all model synchronization.\n      */\n-    public void stop() {\n-        if (isStarted()) {\n+    public synchronized void stop() {\n+        if (!performAction(OrchestratorAction.STOP)) {\n+            return;\n+        }\n+        try {\n             LOG.info(\"Intentionally stopping cloud synchronization, now.\");\n-            status.compareAndSet(OrchestratorStatus.STARTED, OrchestratorStatus.STOPPING);\n             subscriptionProcessor.stopAllSubscriptionActivity();\n             storageObserver.stopObservingStorageChanges();\n             mutationProcessor.stopDrainingMutationOutbox();\n             status.compareAndSet(OrchestratorStatus.STOPPING, OrchestratorStatus.STOPPED);\n             LOG.debug(\"Stopped remote synchronization.\");\n+        } finally {\n+            startStopSemaphore.release();\n         }\n+    }\n \n+    private boolean performAction(OrchestratorAction intendedAction) {\n+        OrchestratorStatus expectedCurrentStatus = OrchestratorAction.START.equals(intendedAction) ?\n+            OrchestratorStatus.STOPPED : OrchestratorStatus.STARTED;\n+        try {\n+            LOG.debug(String.format(\"Trying to %s the orchestrator.\", intendedAction.name()));\n+            boolean permitAcquired = startStopSemaphore.tryAcquire(ACQUIRE_PERMIT_TIMEOUT_MS, TimeUnit.MILLISECONDS);\n+            if (!permitAcquired) {\n+                LOG.warn(String.format(\"Unable to acquire permit to %s the orchestrator. \", intendedAction.name()));\n+                return false;\n+            }\n+            boolean statusSet = status.compareAndSet(intendedAction.expectedCurrentStatus, intendedAction.targetStatus);\n+            // only stop if it's started AND if we can get a permit.\n+            if (!statusSet) {\n+                LOG.warn(String.format(\"Failed %s orchestrator. Current status: %s\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97f643e75288b3cc7aec465fbf15284f0639abd0"}, "originalPosition": 99}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3aff4bdde6b9c73a6791221f39e4264c2ce12d5", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/c3aff4bdde6b9c73a6791221f39e4264c2ce12d5", "committedDate": "2020-07-01T13:31:24Z", "message": "PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b99355025c2f031616ba91e4fdfb40b5237fde5a", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/b99355025c2f031616ba91e4fdfb40b5237fde5a", "committedDate": "2020-07-09T03:53:07Z", "message": "Retry logic for subscription processor. Modified start/stop sequence"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80e53ece4faf44f7da70c7a5430ea6f356a6bcf4", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/80e53ece4faf44f7da70c7a5430ea6f356a6bcf4", "committedDate": "2020-07-09T03:55:36Z", "message": "Remove file that was incorrectly checked in"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f546f8d2efeb8f22211f7df6d3d432972e2a58f", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/6f546f8d2efeb8f22211f7df6d3d432972e2a58f", "committedDate": "2020-07-09T04:25:43Z", "message": "Fixing lint warnings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "074fae16941849ecac7b83cfe3bb04b50bcb4a54", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/074fae16941849ecac7b83cfe3bb04b50bcb4a54", "committedDate": "2020-07-09T11:27:30Z", "message": "Checkstyle issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a4848025c79e928a9ed3d69267a924628241188", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/6a4848025c79e928a9ed3d69267a924628241188", "committedDate": "2020-07-09T14:11:06Z", "message": "Fixing tests by introduce a delay to wait for orchestrator to start."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81391e7b6aaa891df32cc43da3c6d771d68b7b56", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/81391e7b6aaa891df32cc43da3c6d771d68b7b56", "committedDate": "2020-07-09T15:25:33Z", "message": "Merge branch 'main' into rjuliano/bugfix_startcrash"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODYxMTIz", "url": "https://github.com/aws-amplify/amplify-android/pull/599#pullrequestreview-445861123", "createdAt": "2020-07-09T18:20:28Z", "commit": {"oid": "6a4848025c79e928a9ed3d69267a924628241188"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODoyMDoyOFrOGvcqjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODoyNTowMFrOGvc0aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwNTkwMQ==", "bodyText": "Do you have anyConsumer() available here? I forget where that utility lives.", "url": "https://github.com/aws-amplify/amplify-android/pull/599#discussion_r452405901", "createdAt": "2020-07-09T18:20:28Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/appsync/AppSyncMocking.java", "diffHunk": "@@ -248,5 +249,25 @@ public SyncConfigurator mockSuccessResponses() {\n             );\n             return SyncConfigurator.this;\n         }\n+\n+        /**\n+         * Triggers an exception when invoking the sync method.\n+         * @param <T> Type of models for which a response is mocked\n+         * @return The same Configurator instance, to enable chaining of calls\n+         */\n+        public <T extends Model> SyncConfigurator mockFailure() {\n+            doAnswer(invocation -> {\n+                final int errorConsumerPosition = 3;\n+                final Consumer<DataStoreException> consumer = invocation.getArgument(errorConsumerPosition);\n+                consumer.accept(new DataStoreException(\"Something timed out during sync.\", \"Nothing to do.\"));\n+                return new NoOpCancelable();\n+            }).when(appSync).sync(\n+                any(), // Item class to sync\n+                any(), // last sync time\n+                any(), // Consumer<Iterable<ModelWithMetadata<T>>>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a4848025c79e928a9ed3d69267a924628241188"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwNjUzNA==", "bodyText": "Can you change to accept a DataStoreException, and then pass in the failure when you make the call? That way, the AppSyncMocking can remain as utility software, with any specific values codified external to its implementation.", "url": "https://github.com/aws-amplify/amplify-android/pull/599#discussion_r452406534", "createdAt": "2020-07-09T18:21:27Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/appsync/AppSyncMocking.java", "diffHunk": "@@ -248,5 +249,25 @@ public SyncConfigurator mockSuccessResponses() {\n             );\n             return SyncConfigurator.this;\n         }\n+\n+        /**\n+         * Triggers an exception when invoking the sync method.\n+         * @param <T> Type of models for which a response is mocked\n+         * @return The same Configurator instance, to enable chaining of calls\n+         */\n+        public <T extends Model> SyncConfigurator mockFailure() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a4848025c79e928a9ed3d69267a924628241188"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwNzgzNw==", "bodyText": "We should keep this event driven, even from test. There is an initialization event that is published, currently. The intent of that event was to prevent the need for waits, in test. Between it, and the HubAccumulator, you should be able to await the initialization results. It's a more determinist mechanism than tuning ASSERTION_TIMEOUT_MS.", "url": "https://github.com/aws-amplify/amplify-android/pull/599#discussion_r452407837", "createdAt": "2020-07-09T18:23:55Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/AWSDataStorePluginTest.java", "diffHunk": "@@ -242,6 +247,8 @@ private void assertRemoteSubscriptionsCancelled() {\n     }\n \n     private void assertRemoteSubscriptionsStarted() {\n+        // Introduce a delay to allow the orchestrator to start since this is done in a non-blocking manner now.\n+        Single.just(true).delay(ASSERTION_TIMEOUT_MS, TimeUnit.MILLISECONDS).blockingGet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a4848025c79e928a9ed3d69267a924628241188"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwODQyNA==", "bodyText": "Can getConfiguration() ever return null? Is there a need to guard against that scenario, here, to prevent a NullPointerException?", "url": "https://github.com/aws-amplify/amplify-android/pull/599#discussion_r452408424", "createdAt": "2020-07-09T18:25:00Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SyncProcessor.java", "diffHunk": "@@ -113,9 +114,18 @@ Completable hydrate() {\n                         .flatMapCompletable(merger::merge)\n                     )\n                     .andThen(syncTimeRegistry.saveLastSyncTime(modelClass, SyncTime.now()))\n-                    .doOnError(failureToSync ->\n-                        LOG.warn(\"Initial cloud sync failed.\", failureToSync)\n-                    )\n+                    .doOnError(failureToSync -> {\n+                        LOG.warn(\"Initial cloud sync failed.\", failureToSync);\n+                        DataStoreErrorHandler dataStoreErrorHandler =\n+                            dataStoreConfigurationProvider.getConfiguration().getDataStoreErrorHandler();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a4848025c79e928a9ed3d69267a924628241188"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb57a46fcfb0c14f60be27ca6e905acd365e20cd", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/bb57a46fcfb0c14f60be27ca6e905acd365e20cd", "committedDate": "2020-07-14T19:12:34Z", "message": "Addressing PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49a37809b53fa4c71d2986d370b5d2449edfce01", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/49a37809b53fa4c71d2986d370b5d2449edfce01", "committedDate": "2020-07-14T19:14:25Z", "message": "Merge branch 'rjuliano/bugfix_startcrash' of github.com:aws-amplify/amplify-android into rjuliano/bugfix_startcrash"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ce46782c0fe5dbd6ddf3efb5ac28e27eeb3c57c", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/6ce46782c0fe5dbd6ddf3efb5ac28e27eeb3c57c", "committedDate": "2020-07-14T19:22:15Z", "message": "Add new hub event message types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "890c58d104c30157b4ef471d7d9370887c8be259", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/890c58d104c30157b4ef471d7d9370887c8be259", "committedDate": "2020-07-15T13:09:55Z", "message": "Changes related to subscription connectivity problems (#615)\n\n* Changes to the API module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ec27f4164b334754c935de426396150309179d5", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/8ec27f4164b334754c935de426396150309179d5", "committedDate": "2020-07-15T14:41:02Z", "message": "Adding basic unit tests for retry handler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "576ed5583dcfd1ca814a791e27d6d40fc3f0b4e2", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/576ed5583dcfd1ca814a791e27d6d40fc3f0b4e2", "committedDate": "2020-07-15T14:49:44Z", "message": "Checkstyle fixes :("}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e0999e0b22a0be339040397b82ef79cf7f4ae73", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/2e0999e0b22a0be339040397b82ef79cf7f4ae73", "committedDate": "2020-07-15T22:23:22Z", "message": "Fixing another race condition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NDI5NDc1", "url": "https://github.com/aws-amplify/amplify-android/pull/599#pullrequestreview-449429475", "createdAt": "2020-07-16T00:27:57Z", "commit": {"oid": "2e0999e0b22a0be339040397b82ef79cf7f4ae73"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1829, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}