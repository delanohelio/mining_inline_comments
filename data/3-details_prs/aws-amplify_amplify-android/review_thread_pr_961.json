{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMDY1NTAx", "number": 961, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQyMjoxMzoxN1rOE5ACNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODoyMjoxMVrOE5nj5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MjA0ODUyOnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQyMjoxMzoxN1rOHzOB6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMzowMzo1NlrOH0aNrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ2OTI4OQ==", "bodyText": "The response from AppSync doesn't contain any information about what type it is. Previously, we used to know this because of the <T>. Now, I have to hack the modelSchema back in at this higher level. The SubscriptionProcessor knows which subscription the data came back on, so it can append the schema, here.", "url": "https://github.com/aws-amplify/amplify-android/pull/961#discussion_r523469289", "createdAt": "2020-11-14T22:13:17Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessor.java", "diffHunk": "@@ -224,7 +224,19 @@ void startDrainingMutationBuffer(Action onPipelineBroken) {\n                 .doOnSubscribe(disposable ->\n                     LOG.info(\"Starting processing subscription data buffer.\")\n                 )\n-                .flatMapCompletable(mutation -> merger.merge(mutation.modelWithMetadata()))\n+                .flatMapCompletable(mutation -> {\n+                    ModelWithMetadata<? extends Model> original = mutation.modelWithMetadata();\n+                    if (original.getModel() instanceof SerializedModel) {\n+                        SerializedModel originalModel = (SerializedModel) original.getModel();\n+                        SerializedModel newModel = SerializedModel.builder()\n+                            .serializedData(originalModel.getSerializedData())\n+                            .modelSchema(mutation.modelSchema())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24817665c6692cb99c876e31a6e53f2885253ce0"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc2OTAyMQ==", "bodyText": "Just a clarification...are the terms new and original referring to the type of model you're working with (i.e. SerializedModel vs POJO) or is it referring to the data (i.e. original = existing data and new = updated data)?", "url": "https://github.com/aws-amplify/amplify-android/pull/961#discussion_r523769021", "createdAt": "2020-11-15T14:49:47Z", "author": {"login": "rjuliano"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessor.java", "diffHunk": "@@ -224,7 +224,19 @@ void startDrainingMutationBuffer(Action onPipelineBroken) {\n                 .doOnSubscribe(disposable ->\n                     LOG.info(\"Starting processing subscription data buffer.\")\n                 )\n-                .flatMapCompletable(mutation -> merger.merge(mutation.modelWithMetadata()))\n+                .flatMapCompletable(mutation -> {\n+                    ModelWithMetadata<? extends Model> original = mutation.modelWithMetadata();\n+                    if (original.getModel() instanceof SerializedModel) {\n+                        SerializedModel originalModel = (SerializedModel) original.getModel();\n+                        SerializedModel newModel = SerializedModel.builder()\n+                            .serializedData(originalModel.getSerializedData())\n+                            .modelSchema(mutation.modelSchema())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ2OTI4OQ=="}, "originalCommit": {"oid": "24817665c6692cb99c876e31a6e53f2885253ce0"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgzMzAzMA==", "bodyText": "originalModel means \"before I patch this SerializedModel instance's modelSchema field,\" and newModel means \"the SerializedModel we got back from the sync command, but with a patched-up modelSchema field.\"", "url": "https://github.com/aws-amplify/amplify-android/pull/961#discussion_r523833030", "createdAt": "2020-11-15T23:48:16Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessor.java", "diffHunk": "@@ -224,7 +224,19 @@ void startDrainingMutationBuffer(Action onPipelineBroken) {\n                 .doOnSubscribe(disposable ->\n                     LOG.info(\"Starting processing subscription data buffer.\")\n                 )\n-                .flatMapCompletable(mutation -> merger.merge(mutation.modelWithMetadata()))\n+                .flatMapCompletable(mutation -> {\n+                    ModelWithMetadata<? extends Model> original = mutation.modelWithMetadata();\n+                    if (original.getModel() instanceof SerializedModel) {\n+                        SerializedModel originalModel = (SerializedModel) original.getModel();\n+                        SerializedModel newModel = SerializedModel.builder()\n+                            .serializedData(originalModel.getSerializedData())\n+                            .modelSchema(mutation.modelSchema())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ2OTI4OQ=="}, "originalCommit": {"oid": "24817665c6692cb99c876e31a6e53f2885253ce0"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDcxNzQ4Ng==", "bodyText": "Not a blocker for this PR, but it would be nice to see a newBuilder() method on the SerializedModel class, so you could simplify this to:\nSerializedModel newModel = originalModel.newBuilder()\n    .modelSchema(mutation.modelSchema())\n    .build();", "url": "https://github.com/aws-amplify/amplify-android/pull/961#discussion_r524717486", "createdAt": "2020-11-16T23:03:56Z", "author": {"login": "richardmcclellan"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SubscriptionProcessor.java", "diffHunk": "@@ -224,7 +224,19 @@ void startDrainingMutationBuffer(Action onPipelineBroken) {\n                 .doOnSubscribe(disposable ->\n                     LOG.info(\"Starting processing subscription data buffer.\")\n                 )\n-                .flatMapCompletable(mutation -> merger.merge(mutation.modelWithMetadata()))\n+                .flatMapCompletable(mutation -> {\n+                    ModelWithMetadata<? extends Model> original = mutation.modelWithMetadata();\n+                    if (original.getModel() instanceof SerializedModel) {\n+                        SerializedModel originalModel = (SerializedModel) original.getModel();\n+                        SerializedModel newModel = SerializedModel.builder()\n+                            .serializedData(originalModel.getSerializedData())\n+                            .modelSchema(mutation.modelSchema())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ2OTI4OQ=="}, "originalCommit": {"oid": "24817665c6692cb99c876e31a6e53f2885253ce0"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MjA0ODY3OnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SyncProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQyMjoxMzozMlrOHzOB-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQyMjoxMzozMlrOHzOB-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ2OTMwNQ==", "bodyText": "Same basic situation as in the SubscriptionProcessor.", "url": "https://github.com/aws-amplify/amplify-android/pull/961#discussion_r523469305", "createdAt": "2020-11-14T22:13:32Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/SyncProcessor.java", "diffHunk": "@@ -140,9 +141,20 @@ private Completable createHydrationTask(ModelSchema schema) {\n                 // Sync all the pages\n                 return syncModel(schema, lastSyncTime)\n                     // For each ModelWithMetadata, merge it into the local store.\n-                    .flatMapCompletable(modelWithMetadata ->\n-                        merger.merge(modelWithMetadata, metricsAccumulator::increment)\n-                    )\n+                    .flatMapCompletable(original -> {\n+                        ModelWithMetadata<? extends Model> updated;\n+                        if (original.getModel() instanceof SerializedModel) {\n+                            SerializedModel originalModel = (SerializedModel) original.getModel();\n+                            SerializedModel newModel = SerializedModel.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24817665c6692cb99c876e31a6e53f2885253ce0"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MjA1MDIwOnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/HybridCloudSyncInstrumentationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQyMjoxNToxOVrOHzOCoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQyMjoxNToxOVrOHzOCoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ2OTQ3Mw==", "bodyText": "The key change in this PR is that the schema are being read from JSON. The JSON files no longer say com.path.to.some.generated.java.model.JavaPojo. (Previously, the test had passed, with those queues.)\nNow, the stated type for a model is a serialized model.", "url": "https://github.com/aws-amplify/amplify-android/pull/961#discussion_r523469473", "createdAt": "2020-11-14T22:15:19Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/HybridCloudSyncInstrumentationTest.java", "diffHunk": "@@ -116,11 +116,12 @@ public void setup() throws AmplifyException {\n         api = SynchronousApi.delegatingTo(apiCategory);\n         appSync = SynchronousAppSync.using(AppSyncClient.via(apiCategory));\n \n+        schemaProvider = SchemaLoader.loadFromAssetsDirectory(\"schemas/commentsblog\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24817665c6692cb99c876e31a6e53f2885253ce0"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MjA1MDk5OnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/amplifyframework/testutils/Assets.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQyMjoxNjozNlrOHzODAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQyMjoxNjozNlrOHzODAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ2OTU2OA==", "bodyText": "This utility is used by the SchemaLoader. The schema loader reads the schema JSON from disk with this list(...) utility. It will then build ModelSchema instances, from each.", "url": "https://github.com/aws-amplify/amplify-android/pull/961#discussion_r523469568", "createdAt": "2020-11-14T22:16:36Z", "author": {"login": "jamesonwilliams"}, "path": "testutils/src/main/java/com/amplifyframework/testutils/Assets.java", "diffHunk": "@@ -79,5 +81,30 @@ public static Bitmap readAsBitmap(final String name) throws RuntimeException {\n             throw new RuntimeException(\"Failed to load asset \" + name, ioException);\n         }\n     }\n-}\n \n+    /**\n+     * Lists the files in the assets directory.\n+     * @param path Directory path under assets/.\n+     * @return A list of files found\n+     */\n+    @NonNull\n+    public static List<String> list(String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24817665c6692cb99c876e31a6e53f2885253ce0"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODUyNDU1OnYy", "diffSide": "RIGHT", "path": "aws-api-appsync/src/main/java/com/amplifyframework/datastore/appsync/ModelWithMetadataAdapter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODoyMjoxMVrOH0LswA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNjo0MTowN1rOH125rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ3OTY4MA==", "bodyText": "Hmm, why is this change necessary?  Shouldn't the SerializedModelAdapter already handle this?\nIf this is needed here, then I think we would probably also need a similar change in any other adapter that deserializes a Class that could contain a Model (e.g. PaginatedResult, Iterable, GraphQLResponse)", "url": "https://github.com/aws-amplify/amplify-android/pull/961#discussion_r524479680", "createdAt": "2020-11-16T18:22:11Z", "author": {"login": "richardmcclellan"}, "path": "aws-api-appsync/src/main/java/com/amplifyframework/datastore/appsync/ModelWithMetadataAdapter.java", "diffHunk": "@@ -60,7 +61,15 @@ public static void register(@NonNull GsonBuilder builder) {\n             throw new JsonParseException(\"Expected a parameterized type during ModelWithMetadata deserialization.\");\n         }\n \n-        Model model = context.deserialize(json, modelClassType);\n+        final Model model;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24817665c6692cb99c876e31a6e53f2885253ce0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg3MDQxMA==", "bodyText": "Alright, I studied this change a bit more. I think, for now at least, it probably makes sense to leave it as is.\nThe SerializedModelAdapter currently stores modelSchema and serializedData,into a JSON structure like this:\n{\n    \"modelSchema\": {\n        ...\n    },\n    \"serializedData\": {\n    }\n}\nHowever, the format of the ModelWithMetadata is like:\n{\n    \"flatDataKey1\": \"dataVal\",\n    \"flatDataKey2\": \"dataVal\",\n    \"_metadataStuff1\": \"metadata\",\n    \"_metadataStuff2\": \"metadata\"\n}\nThe GSON deserialization will cascade through the adapters you mention, and will try to deserialize a GraphQLResponse<Iterable<ModelWithMetadata<SerializedModel>>>. It knows how to do all of that just fine, except when it gets to the inner-most adapter. At that point, it looks for a field called serializedData in that second JSON structure (which doesn't exist.)\nSo I think TLDR: I am actually doing some custom deserialization only for ModelWithMetadata.\nAnd, it isn't needed for other adapters, since DataStore will always envelope in the ModelWithMetadata.\n\nI can think of a few others ways we could do this.\n\n\nAt a higher level, pass the T as Map<String, Object>, s.t. we try to deserialize GraphQLResponse<Iterable<ModelWithMetadata<Map<String, Object>>>>. Then, we could rectify the map data back into a SerializedModel.builder().serializedData(theResponseContent).build() at a higher level in the stack.\n\n\nRip <T> out of almost all of the system, in future work. This is what I actually want to do. With this, the SQL layer and the AppSync sync layer will just know about SerializedModel only, but not any model types. (I also propose that we rename SerializedModel to maybe just Blob, but that's a separate matter.) Only the highest layer of the system (just under the DataStore API) would know about Java-language data-modeling. At that high-level, it would quickly convert to schema/blob object pairs. Sync engine & storage adapter would operate wholly on those.", "url": "https://github.com/aws-amplify/amplify-android/pull/961#discussion_r525870410", "createdAt": "2020-11-18T07:42:06Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api-appsync/src/main/java/com/amplifyframework/datastore/appsync/ModelWithMetadataAdapter.java", "diffHunk": "@@ -60,7 +61,15 @@ public static void register(@NonNull GsonBuilder builder) {\n             throw new JsonParseException(\"Expected a parameterized type during ModelWithMetadata deserialization.\");\n         }\n \n-        Model model = context.deserialize(json, modelClassType);\n+        final Model model;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ3OTY4MA=="}, "originalCommit": {"oid": "24817665c6692cb99c876e31a6e53f2885253ce0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIzNjA3OQ==", "bodyText": "Got it, thanks for investigating it :). I'm good to leave it as is for now.\n\nRip  out of almost all of the system, in future work.\n\nI agree this is the right direction to move towards.\n\nI also propose that we rename SerializedModel to maybe just Blob, but that's a separate matter.\n\n\ud83d\udc4d\nI wonder if we could also eliminate ModelWithMetadata entirely, and just store the metadata as a part of the Blob.  We aren't able to do this when working with the generated Java models, but perhaps we could with a Blob.   It would be closer to how the data is modeled on the AppSync side anyway.   Seems like this could simplify a lot too.", "url": "https://github.com/aws-amplify/amplify-android/pull/961#discussion_r526236079", "createdAt": "2020-11-18T16:41:07Z", "author": {"login": "richardmcclellan"}, "path": "aws-api-appsync/src/main/java/com/amplifyframework/datastore/appsync/ModelWithMetadataAdapter.java", "diffHunk": "@@ -60,7 +61,15 @@ public static void register(@NonNull GsonBuilder builder) {\n             throw new JsonParseException(\"Expected a parameterized type during ModelWithMetadata deserialization.\");\n         }\n \n-        Model model = context.deserialize(json, modelClassType);\n+        final Model model;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ3OTY4MA=="}, "originalCommit": {"oid": "24817665c6692cb99c876e31a6e53f2885253ce0"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 801, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}