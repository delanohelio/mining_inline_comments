{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNzc2NTk2", "number": 496, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo1OTowMlrOD-w_-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzo0NToyM1rOD-yP4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQxMTE0OnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo1OTowMlrOGZEXfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjowNToxMlrOGZIcfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzOTEzMw==", "bodyText": "Nit: inconsistent capitalization of model", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428939133", "createdAt": "2020-05-21T21:59:02Z", "author": {"login": "jpignata"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "diffHunk": "@@ -93,8 +94,23 @@ public static SynchronousAppSync using(@NonNull AppSync appSync) {\n     @NonNull\n     public <T extends Model> GraphQLResponse<ModelWithMetadata<T>> update(\n         @NonNull T model, @NonNull Integer version) throws DataStoreException {\n+        return update(model, version, null);\n+    }\n+\n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     * @param model An instance of the Model with the values to mutate", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwNTk0OA==", "bodyText": "Yeah...there's about 16 or so of those. If it's ok, I would like to handle stuff like this in a follow up PR. I fixed the one I added, but I'll leave the other ones for alone for now as to not bloat the PR (any more than it already is) \ud83e\udd26", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r429005948", "createdAt": "2020-05-22T02:05:12Z", "author": {"login": "rjuliano"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "diffHunk": "@@ -93,8 +94,23 @@ public static SynchronousAppSync using(@NonNull AppSync appSync) {\n     @NonNull\n     public <T extends Model> GraphQLResponse<ModelWithMetadata<T>> update(\n         @NonNull T model, @NonNull Integer version) throws DataStoreException {\n+        return update(model, version, null);\n+    }\n+\n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     * @param model An instance of the Model with the values to mutate", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzOTEzMw=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQxMzA2OnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo1OTo1MVrOGZEYpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzozODozNlrOGZGQ_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzOTQyOA==", "bodyText": "Is there a standard order where these kinds of type parameters should be listed?", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428939428", "createdAt": "2020-05-21T21:59:51Z", "author": {"login": "jpignata"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "diffHunk": "@@ -93,8 +94,23 @@ public static SynchronousAppSync using(@NonNull AppSync appSync) {\n     @NonNull\n     public <T extends Model> GraphQLResponse<ModelWithMetadata<T>> update(\n         @NonNull T model, @NonNull Integer version) throws DataStoreException {\n+        return update(model, version, null);\n+    }\n+\n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     * @param model An instance of the Model with the values to mutate\n+     * @param version The version of the model we have\n+     * @param <T> The type of data in the response. Must extend Model.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MDIzOQ==", "bodyText": "Conventionally, the type params are usually after all other @param.\nCheckstyle has the AtClause rule to compare JavaDoc @foo and @bar, but not within @foos.", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428970239", "createdAt": "2020-05-21T23:38:36Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "diffHunk": "@@ -93,8 +94,23 @@ public static SynchronousAppSync using(@NonNull AppSync appSync) {\n     @NonNull\n     public <T extends Model> GraphQLResponse<ModelWithMetadata<T>> update(\n         @NonNull T model, @NonNull Integer version) throws DataStoreException {\n+        return update(model, version, null);\n+    }\n+\n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     * @param model An instance of the Model with the values to mutate\n+     * @param version The version of the model we have\n+     * @param <T> The type of data in the response. Must extend Model.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzOTQyOA=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQxNzcyOnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowMToyN1rOGZEbbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjowNjozMFrOGZIdpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MDE0MQ==", "bodyText": "Is this necessary? Seems shorter in your revision.", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428940141", "createdAt": "2020-05-21T22:01:27Z", "author": {"login": "jpignata"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "diffHunk": "@@ -107,11 +123,31 @@ public static SynchronousAppSync using(@NonNull AppSync appSync) {\n      * @return Response data from AppSync.\n      * @throws DataStoreException On failure to obtain response data\n      */\n+    @SuppressWarnings(\"LineLength\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwNjI0Ng==", "bodyText": "Removed it.", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r429006246", "createdAt": "2020-05-22T02:06:30Z", "author": {"login": "rjuliano"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "diffHunk": "@@ -107,11 +123,31 @@ public static SynchronousAppSync using(@NonNull AppSync appSync) {\n      * @return Response data from AppSync.\n      * @throws DataStoreException On failure to obtain response data\n      */\n+    @SuppressWarnings(\"LineLength\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MDE0MQ=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQxOTUzOnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowMjoyMFrOGZEcqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjoxMDo1OFrOGZIhdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MDQ1Nw==", "bodyText": "Anyway to avoid this? (newline before the throws?)", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428940457", "createdAt": "2020-05-21T22:02:20Z", "author": {"login": "jpignata"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "diffHunk": "@@ -107,11 +123,31 @@ public static SynchronousAppSync using(@NonNull AppSync appSync) {\n      * @return Response data from AppSync.\n      * @throws DataStoreException On failure to obtain response data\n      */\n+    @SuppressWarnings(\"LineLength\")\n     @NonNull\n     <T extends Model> GraphQLResponse<ModelWithMetadata<T>> delete(\n-            @NonNull Class<T> clazz, @NonNull String objectId, @NonNull Integer version) throws DataStoreException {\n+        @NonNull Class<T> clazz, @NonNull String objectId, @NonNull Integer version) throws DataStoreException {\n+        return delete(clazz, objectId, version, null);\n+    }\n+\n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     * @param clazz The class of the object being deleted\n+     * @param objectId ID id of the object to delete\n+     * @param version The version of the model we have\n+     * @param predicate The condition to be applied to the delete.\n+     * @param <T> The type of data in the response. Must extend Model.\n+     * @return Response data from AppSync.\n+     * @throws DataStoreException On failure to obtain response data\n+     */\n+    @SuppressWarnings(\"LineLength\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MTUwNQ==", "bodyText": "We can swing the params down onto a new line.\nMy personal style is to indent +8 off the method block, which differentiates it from the method body, and the method signature.\n@NonNull\n<T extends Model> GraphQLResponse<ModelWithMetadata<T>> delete(\n        @NonNull Class<T> clazz,\n        @NonNull String objectId,\n        @NonNull Integer version,\n        @Nullable QueryPredicate predicate)\n        throws DataStoreException {\n    doStuffHereAtPlus4();\n    coolStuffOnly();\n    thatIs();\n}\n\nThe rule is basically \"Chomp down vars in a method signature, and indent by 8.\"\nI know of no tool that is able to uniquely distinguish this case, from other line-wrapping or indentation cases.\nMy personal style is to use +4 spaces as indentation in all other situations in a Java document.\nWell,\nfinal class MyClass implements\n        SameTypeOfThing,\n        Here {\n    public void soThatYouCanTellItIsntThisMethodEasily() {\n    }\n}", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428971505", "createdAt": "2020-05-21T23:43:23Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "diffHunk": "@@ -107,11 +123,31 @@ public static SynchronousAppSync using(@NonNull AppSync appSync) {\n      * @return Response data from AppSync.\n      * @throws DataStoreException On failure to obtain response data\n      */\n+    @SuppressWarnings(\"LineLength\")\n     @NonNull\n     <T extends Model> GraphQLResponse<ModelWithMetadata<T>> delete(\n-            @NonNull Class<T> clazz, @NonNull String objectId, @NonNull Integer version) throws DataStoreException {\n+        @NonNull Class<T> clazz, @NonNull String objectId, @NonNull Integer version) throws DataStoreException {\n+        return delete(clazz, objectId, version, null);\n+    }\n+\n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     * @param clazz The class of the object being deleted\n+     * @param objectId ID id of the object to delete\n+     * @param version The version of the model we have\n+     * @param predicate The condition to be applied to the delete.\n+     * @param <T> The type of data in the response. Must extend Model.\n+     * @return Response data from AppSync.\n+     * @throws DataStoreException On failure to obtain response data\n+     */\n+    @SuppressWarnings(\"LineLength\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MDQ1Nw=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwNzIyMA==", "bodyText": "Fixed.", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r429007220", "createdAt": "2020-05-22T02:10:58Z", "author": {"login": "rjuliano"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "diffHunk": "@@ -107,11 +123,31 @@ public static SynchronousAppSync using(@NonNull AppSync appSync) {\n      * @return Response data from AppSync.\n      * @throws DataStoreException On failure to obtain response data\n      */\n+    @SuppressWarnings(\"LineLength\")\n     @NonNull\n     <T extends Model> GraphQLResponse<ModelWithMetadata<T>> delete(\n-            @NonNull Class<T> clazz, @NonNull String objectId, @NonNull Integer version) throws DataStoreException {\n+        @NonNull Class<T> clazz, @NonNull String objectId, @NonNull Integer version) throws DataStoreException {\n+        return delete(clazz, objectId, version, null);\n+    }\n+\n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     * @param clazz The class of the object being deleted\n+     * @param objectId ID id of the object to delete\n+     * @param version The version of the model we have\n+     * @param predicate The condition to be applied to the delete.\n+     * @param <T> The type of data in the response. Must extend Model.\n+     * @return Response data from AppSync.\n+     * @throws DataStoreException On failure to obtain response data\n+     */\n+    @SuppressWarnings(\"LineLength\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MDQ1Nw=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQyMDg5OnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSyncClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowMjo0OFrOGZEdcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNTowMDoxNlrOGZaVZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MDY1Nw==", "bodyText": "it feels like buildUpdateDoc should take the predicate and not a boolean indicating there's a predicate.\nI guess ideally buildUpdateDocument should return a GraphQLDocument or something like that, instead a String, the it would build the buildDocument would be a self-contained document factory.\nI understand this can be a big undertaking for the moment, so feel free to take this feedback for a future improvement (maybe create a ticket?)", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428940657", "createdAt": "2020-05-21T22:02:48Z", "author": {"login": "drochetti"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSyncClient.java", "diffHunk": "@@ -143,16 +144,36 @@ public static AppSyncClient via(@NonNull GraphQLBehavior api) {\n         return new NoOpCancelable();\n     }\n \n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     *\n+     * @param model      An instance of the Model with the values to mutate\n+     * @param version    The version of the model we have\n+     * @param onResponse Invoked when response data is available.\n+     * @param onFailure  Invoked on failure to obtain response data\n+     * @return A {@link Cancelable} to provide a means to cancel the asynchronous operation\n+     */\n+    @NonNull\n+    @Override\n+    public <T extends Model> Cancelable update(\n+            @NonNull T model,\n+            @NonNull Integer version,\n+            @NonNull Consumer<GraphQLResponse<ModelWithMetadata<T>>> onResponse,\n+            @NonNull Consumer<DataStoreException> onFailure) {\n+        return update(model, version, null, onResponse, onFailure);\n+    }\n+\n     @SuppressWarnings(\"unchecked\") // (Class<T>)\n     @NonNull\n     @Override\n     public <T extends Model> Cancelable update(\n             @NonNull T model,\n             @NonNull Integer version,\n+            @Nullable QueryPredicate predicate,\n             @NonNull Consumer<GraphQLResponse<ModelWithMetadata<T>>> onResponse,\n             @NonNull Consumer<DataStoreException> onFailure) {\n         try {\n-            final String doc = AppSyncRequestFactory.buildUpdateDoc(model.getClass());\n+            final String doc = AppSyncRequestFactory.buildUpdateDoc(model.getClass(), predicate != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MjEwMg==", "bodyText": "^ I agree with this.", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428972102", "createdAt": "2020-05-21T23:45:40Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSyncClient.java", "diffHunk": "@@ -143,16 +144,36 @@ public static AppSyncClient via(@NonNull GraphQLBehavior api) {\n         return new NoOpCancelable();\n     }\n \n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     *\n+     * @param model      An instance of the Model with the values to mutate\n+     * @param version    The version of the model we have\n+     * @param onResponse Invoked when response data is available.\n+     * @param onFailure  Invoked on failure to obtain response data\n+     * @return A {@link Cancelable} to provide a means to cancel the asynchronous operation\n+     */\n+    @NonNull\n+    @Override\n+    public <T extends Model> Cancelable update(\n+            @NonNull T model,\n+            @NonNull Integer version,\n+            @NonNull Consumer<GraphQLResponse<ModelWithMetadata<T>>> onResponse,\n+            @NonNull Consumer<DataStoreException> onFailure) {\n+        return update(model, version, null, onResponse, onFailure);\n+    }\n+\n     @SuppressWarnings(\"unchecked\") // (Class<T>)\n     @NonNull\n     @Override\n     public <T extends Model> Cancelable update(\n             @NonNull T model,\n             @NonNull Integer version,\n+            @Nullable QueryPredicate predicate,\n             @NonNull Consumer<GraphQLResponse<ModelWithMetadata<T>>> onResponse,\n             @NonNull Consumer<DataStoreException> onFailure) {\n         try {\n-            final String doc = AppSyncRequestFactory.buildUpdateDoc(model.getClass());\n+            final String doc = AppSyncRequestFactory.buildUpdateDoc(model.getClass(), predicate != null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MDY1Nw=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5OTA0Nw==", "bodyText": "My original intent was to do just that. However, as I started going through the interactions with the API category, it looked like it was going to require a larger refactor. I'm going to create an issue so we can track this though.", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r429299047", "createdAt": "2020-05-22T15:00:16Z", "author": {"login": "rjuliano"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSyncClient.java", "diffHunk": "@@ -143,16 +144,36 @@ public static AppSyncClient via(@NonNull GraphQLBehavior api) {\n         return new NoOpCancelable();\n     }\n \n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     *\n+     * @param model      An instance of the Model with the values to mutate\n+     * @param version    The version of the model we have\n+     * @param onResponse Invoked when response data is available.\n+     * @param onFailure  Invoked on failure to obtain response data\n+     * @return A {@link Cancelable} to provide a means to cancel the asynchronous operation\n+     */\n+    @NonNull\n+    @Override\n+    public <T extends Model> Cancelable update(\n+            @NonNull T model,\n+            @NonNull Integer version,\n+            @NonNull Consumer<GraphQLResponse<ModelWithMetadata<T>>> onResponse,\n+            @NonNull Consumer<DataStoreException> onFailure) {\n+        return update(model, version, null, onResponse, onFailure);\n+    }\n+\n     @SuppressWarnings(\"unchecked\") // (Class<T>)\n     @NonNull\n     @Override\n     public <T extends Model> Cancelable update(\n             @NonNull T model,\n             @NonNull Integer version,\n+            @Nullable QueryPredicate predicate,\n             @NonNull Consumer<GraphQLResponse<ModelWithMetadata<T>>> onResponse,\n             @NonNull Consumer<DataStoreException> onFailure) {\n         try {\n-            final String doc = AppSyncRequestFactory.buildUpdateDoc(model.getClass());\n+            final String doc = AppSyncRequestFactory.buildUpdateDoc(model.getClass(), predicate != null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MDY1Nw=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQyMzIxOnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowMzo0M1rOGZEe5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjowOTo0MFrOGZIgUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MTAyOQ==", "bodyText": "\"Id ID id\" ;)", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428941029", "createdAt": "2020-05-21T22:03:43Z", "author": {"login": "jpignata"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "diffHunk": "@@ -107,11 +123,31 @@ public static SynchronousAppSync using(@NonNull AppSync appSync) {\n      * @return Response data from AppSync.\n      * @throws DataStoreException On failure to obtain response data\n      */\n+    @SuppressWarnings(\"LineLength\")\n     @NonNull\n     <T extends Model> GraphQLResponse<ModelWithMetadata<T>> delete(\n-            @NonNull Class<T> clazz, @NonNull String objectId, @NonNull Integer version) throws DataStoreException {\n+        @NonNull Class<T> clazz, @NonNull String objectId, @NonNull Integer version) throws DataStoreException {\n+        return delete(clazz, objectId, version, null);\n+    }\n+\n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     * @param clazz The class of the object being deleted\n+     * @param objectId ID id of the object to delete", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwNjkzMQ==", "bodyText": "Oh the possibilities \ud83d\ude03 I'll fix IT though.", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r429006931", "createdAt": "2020-05-22T02:09:40Z", "author": {"login": "rjuliano"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/appsync/SynchronousAppSync.java", "diffHunk": "@@ -107,11 +123,31 @@ public static SynchronousAppSync using(@NonNull AppSync appSync) {\n      * @return Response data from AppSync.\n      * @throws DataStoreException On failure to obtain response data\n      */\n+    @SuppressWarnings(\"LineLength\")\n     @NonNull\n     <T extends Model> GraphQLResponse<ModelWithMetadata<T>> delete(\n-            @NonNull Class<T> clazz, @NonNull String objectId, @NonNull Integer version) throws DataStoreException {\n+        @NonNull Class<T> clazz, @NonNull String objectId, @NonNull Integer version) throws DataStoreException {\n+        return delete(clazz, objectId, version, null);\n+    }\n+\n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     * @param clazz The class of the object being deleted\n+     * @param objectId ID id of the object to delete", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MTAyOQ=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQzMDMxOnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSyncClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowNjo1MFrOGZEjkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMzowMToyNFrOGZJNaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MjIyNw==", "bodyText": "Can you extract a local here to communicate what this bool does? Alternatively, should we pass something other than a bool here to avoid the construction here on 238?", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428942227", "createdAt": "2020-05-21T22:06:50Z", "author": {"login": "jpignata"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSyncClient.java", "diffHunk": "@@ -173,22 +197,47 @@ public static AppSyncClient via(@NonNull GraphQLBehavior api) {\n         return new NoOpCancelable();\n     }\n \n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     *\n+     * @param clazz      The class of the object being deleted\n+     * @param objectId   ID id of the object to delete\n+     * @param version    The version of the model we have\n+     * @param onResponse Invoked when response data is available.\n+     * @param onFailure  Invoked on failure to obtain response data\n+     * @return A {@link Cancelable} to provide a means to cancel the asynchronous operation\n+     */\n+    @NonNull\n+    @Override\n+    public <T extends Model> Cancelable delete(\n+            @NonNull Class<T> clazz,\n+            @NonNull String objectId,\n+            @NonNull Integer version,\n+            @NonNull Consumer<GraphQLResponse<ModelWithMetadata<T>>> onResponse,\n+            @NonNull Consumer<DataStoreException> onFailure) {\n+        return delete(clazz, objectId, version, null, onResponse, onFailure);\n+    }\n+\n     @NonNull\n     @Override\n     public <T extends Model> Cancelable delete(\n             @NonNull Class<T> clazz,\n             @NonNull String objectId,\n             @NonNull Integer version,\n+            @Nullable QueryPredicate predicate,\n             @NonNull Consumer<GraphQLResponse<ModelWithMetadata<T>>> onResponse,\n             @NonNull Consumer<DataStoreException> onFailure) {\n         try {\n-            final String doc = AppSyncRequestFactory.buildDeletionDoc(clazz);\n+            final String doc = AppSyncRequestFactory.buildDeletionDoc(clazz, predicate != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MjY4Mw==", "bodyText": "Daniel and I agree we should just pass down the predicate, here. Even if it just means predicate != null is checked as a method-local implementation detail.\nAlternately, I am always tryign to get people to do:\nenum LabeledBoolean {\n    STATE_A,\n    STATE_B\n}\n\nwith\nexerciseBehavior(LabeledBoolean.STATE_A);\n\nIt's a more legible experience to read that, than exerciseBeahvior(false) -- the false is meaningless until I read the code.", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428972683", "createdAt": "2020-05-21T23:47:46Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSyncClient.java", "diffHunk": "@@ -173,22 +197,47 @@ public static AppSyncClient via(@NonNull GraphQLBehavior api) {\n         return new NoOpCancelable();\n     }\n \n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     *\n+     * @param clazz      The class of the object being deleted\n+     * @param objectId   ID id of the object to delete\n+     * @param version    The version of the model we have\n+     * @param onResponse Invoked when response data is available.\n+     * @param onFailure  Invoked on failure to obtain response data\n+     * @return A {@link Cancelable} to provide a means to cancel the asynchronous operation\n+     */\n+    @NonNull\n+    @Override\n+    public <T extends Model> Cancelable delete(\n+            @NonNull Class<T> clazz,\n+            @NonNull String objectId,\n+            @NonNull Integer version,\n+            @NonNull Consumer<GraphQLResponse<ModelWithMetadata<T>>> onResponse,\n+            @NonNull Consumer<DataStoreException> onFailure) {\n+        return delete(clazz, objectId, version, null, onResponse, onFailure);\n+    }\n+\n     @NonNull\n     @Override\n     public <T extends Model> Cancelable delete(\n             @NonNull Class<T> clazz,\n             @NonNull String objectId,\n             @NonNull Integer version,\n+            @Nullable QueryPredicate predicate,\n             @NonNull Consumer<GraphQLResponse<ModelWithMetadata<T>>> onResponse,\n             @NonNull Consumer<DataStoreException> onFailure) {\n         try {\n-            final String doc = AppSyncRequestFactory.buildDeletionDoc(clazz);\n+            final String doc = AppSyncRequestFactory.buildDeletionDoc(clazz, predicate != null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MjIyNw=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxODQ3Mw==", "bodyText": "I had something like that stashed away somewhere but can't seem to find it. I'll get it changed though.", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r429018473", "createdAt": "2020-05-22T03:01:24Z", "author": {"login": "rjuliano"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSyncClient.java", "diffHunk": "@@ -173,22 +197,47 @@ public static AppSyncClient via(@NonNull GraphQLBehavior api) {\n         return new NoOpCancelable();\n     }\n \n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     *\n+     * @param clazz      The class of the object being deleted\n+     * @param objectId   ID id of the object to delete\n+     * @param version    The version of the model we have\n+     * @param onResponse Invoked when response data is available.\n+     * @param onFailure  Invoked on failure to obtain response data\n+     * @return A {@link Cancelable} to provide a means to cancel the asynchronous operation\n+     */\n+    @NonNull\n+    @Override\n+    public <T extends Model> Cancelable delete(\n+            @NonNull Class<T> clazz,\n+            @NonNull String objectId,\n+            @NonNull Integer version,\n+            @NonNull Consumer<GraphQLResponse<ModelWithMetadata<T>>> onResponse,\n+            @NonNull Consumer<DataStoreException> onFailure) {\n+        return delete(clazz, objectId, version, null, onResponse, onFailure);\n+    }\n+\n     @NonNull\n     @Override\n     public <T extends Model> Cancelable delete(\n             @NonNull Class<T> clazz,\n             @NonNull String objectId,\n             @NonNull Integer version,\n+            @Nullable QueryPredicate predicate,\n             @NonNull Consumer<GraphQLResponse<ModelWithMetadata<T>>> onResponse,\n             @NonNull Consumer<DataStoreException> onFailure) {\n         try {\n-            final String doc = AppSyncRequestFactory.buildDeletionDoc(clazz);\n+            final String doc = AppSyncRequestFactory.buildDeletionDoc(clazz, predicate != null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MjIyNw=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQzMTAyOnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/syncengine/PersistentMutationOutboxTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowNzoxNFrOGZEkDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNTowMjowOVrOGZaZgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MjM0OQ==", "bodyText": "this is repeat often it seems, maybe an overload is worth it?", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428942349", "createdAt": "2020-05-21T22:07:14Z", "author": {"login": "drochetti"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/syncengine/PersistentMutationOutboxTest.java", "diffHunk": "@@ -294,7 +294,7 @@ public void existingUpdateIncomingCreationYieldsError() throws DataStoreExceptio\n             .name(\"Tony with improvements applied\")\n             .build();\n         PendingMutation<BlogOwner> existingUpdate =\n-            PendingMutation.update(modelInExistingMutation, BlogOwner.class);\n+            PendingMutation.update(modelInExistingMutation, BlogOwner.class, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3Mzk4NQ==", "bodyText": "^ Agree.\nFor these predicates, around the entire code base, we either need to:\n\n\nProvide overloads. One does not require a predicate, the other requires a non-null predicate. This makes it clear to the user what's going on, and we refuse to have our user supply a semantic null.\n\n\nDon't provide an overload, just have a required param. If we do this, we need  a factory which can create a non-null sentinel, e.g.\n\n\nQueryPredicates.matchAll() // returns something that is not `null`.\n\nThen internally, we can do like:\nif (isSentinelValue(queryPredicate)) {\n    // do whatever the null meant.\n}\n\nin practice, that is:\nif QueryPredicates.matchAll().equals(queryPredicate)) {\n    // match all!\n}", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428973985", "createdAt": "2020-05-21T23:52:36Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/syncengine/PersistentMutationOutboxTest.java", "diffHunk": "@@ -294,7 +294,7 @@ public void existingUpdateIncomingCreationYieldsError() throws DataStoreExceptio\n             .name(\"Tony with improvements applied\")\n             .build();\n         PendingMutation<BlogOwner> existingUpdate =\n-            PendingMutation.update(modelInExistingMutation, BlogOwner.class);\n+            PendingMutation.update(modelInExistingMutation, BlogOwner.class, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MjM0OQ=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMwMDA5Nw==", "bodyText": "I addressed this by adding overloads for now.", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r429300097", "createdAt": "2020-05-22T15:02:09Z", "author": {"login": "rjuliano"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/syncengine/PersistentMutationOutboxTest.java", "diffHunk": "@@ -294,7 +294,7 @@ public void existingUpdateIncomingCreationYieldsError() throws DataStoreExceptio\n             .name(\"Tony with improvements applied\")\n             .build();\n         PendingMutation<BlogOwner> existingUpdate =\n-            PendingMutation.update(modelInExistingMutation, BlogOwner.class);\n+            PendingMutation.update(modelInExistingMutation, BlogOwner.class, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MjM0OQ=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQzNjg5OnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/test/resources/update-blog-owner-with-predicate.txt", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowOTo1NFrOGZEnyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMDoyNTo0NVrOGZHBvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MzMwNg==", "bodyText": "wea?", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428943306", "createdAt": "2020-05-21T22:09:54Z", "author": {"login": "jpignata"}, "path": "aws-datastore/src/test/resources/update-blog-owner-with-predicate.txt", "diffHunk": "@@ -0,0 +1,13 @@\n+mutation UpdateBlogOwner($input:UpdateBlogOwnerInput!, $condition:ModelBlogOwnerConditionInput) {\n+  updateBlogOwner(input:$input, condition:$condition) {\n+    blog {\n+      id\n+    }\n+    id\n+    name\n+    wea", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3NDM2MQ==", "bodyText": "Heh. So, I grabbed this schema from a developer. Francisco, I think?  He was actively testing something. Anyway, our BlogOwner has a wea field baked into it. I don't recall where I got the schema, or what was being tested with the wea.", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428974361", "createdAt": "2020-05-21T23:54:00Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/resources/update-blog-owner-with-predicate.txt", "diffHunk": "@@ -0,0 +1,13 @@\n+mutation UpdateBlogOwner($input:UpdateBlogOwnerInput!, $condition:ModelBlogOwnerConditionInput) {\n+  updateBlogOwner(input:$input, condition:$condition) {\n+    blog {\n+      id\n+    }\n+    id\n+    name\n+    wea", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MzMwNg=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4MjcxNg==", "bodyText": "In the jungle, the mighty jungle.. o-wimowea\n, o-wimowea.", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428982716", "createdAt": "2020-05-22T00:25:45Z", "author": {"login": "jpignata"}, "path": "aws-datastore/src/test/resources/update-blog-owner-with-predicate.txt", "diffHunk": "@@ -0,0 +1,13 @@\n+mutation UpdateBlogOwner($input:UpdateBlogOwnerInput!, $condition:ModelBlogOwnerConditionInput) {\n+  updateBlogOwner(input:$input, condition:$condition) {\n+    blog {\n+      id\n+    }\n+    id\n+    name\n+    wea", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MzMwNg=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQ0MTgxOnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/syncengine/PersistentMutationOutboxTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjoxMjoxM1rOGZErCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjoxMjoxM1rOGZErCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0NDEzNg==", "bodyText": "This is a lot of null passing. Maybe we need to support this signature sans predicate?", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428944136", "createdAt": "2020-05-21T22:12:13Z", "author": {"login": "jpignata"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/syncengine/PersistentMutationOutboxTest.java", "diffHunk": "@@ -691,13 +694,13 @@ public void nextItemForModelIdReturnsFirstEnqueued() throws DataStoreException {\n         BlogOwner originalJoe = BlogOwner.builder()\n             .name(\"Joe Swanson\")\n             .build();\n-        PendingMutation<BlogOwner> firstMutation = PendingMutation.update(originalJoe, BlogOwner.class);\n+        PendingMutation<BlogOwner> firstMutation = PendingMutation.update(originalJoe, BlogOwner.class, null);\n         storage.save(originalJoe, converter.toRecord(firstMutation));\n \n         BlogOwner updatedJoe = originalJoe.copyOfBuilder()\n             .name(\"Joe Swanson, MD. (He finished med school, I guess?)\")\n             .build();\n-        PendingMutation<BlogOwner> secondMutation = PendingMutation.update(updatedJoe, BlogOwner.class);\n+        PendingMutation<BlogOwner> secondMutation = PendingMutation.update(updatedJoe, BlogOwner.class, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 193}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTYwNTM0OnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/AppSyncClientInstrumentationTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzozOToyMFrOGZGRqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMzoxMTowMlrOGZJVyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MDQwOQ==", "bodyText": "Can this be stripped, now?", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428970409", "createdAt": "2020-05-21T23:39:20Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/AppSyncClientInstrumentationTest.java", "diffHunk": "@@ -249,12 +256,20 @@ public void testAllOperations() throws DataStoreException {\n      * @return Model hat was deleted from endpoint, coupled with metadata about the deletion\n      * @throws DataStoreException If API delete call fails to render any response from AppSync endpoint\n      */\n+    @NonNull\n+    private <T extends Model> ModelWithMetadata<T> delete(\n+        @NonNull Class<T> clazz, String modelId, int version)\n+        throws DataStoreException {\n+        return delete(clazz, modelId, version, null);\n+    }\n+\n     @SuppressWarnings(\"SameParameterValue\") // Reads better with details in one place", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwNTE1Ng==", "bodyText": "I'll give it a shot", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r429005156", "createdAt": "2020-05-22T02:01:20Z", "author": {"login": "rjuliano"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/AppSyncClientInstrumentationTest.java", "diffHunk": "@@ -249,12 +256,20 @@ public void testAllOperations() throws DataStoreException {\n      * @return Model hat was deleted from endpoint, coupled with metadata about the deletion\n      * @throws DataStoreException If API delete call fails to render any response from AppSync endpoint\n      */\n+    @NonNull\n+    private <T extends Model> ModelWithMetadata<T> delete(\n+        @NonNull Class<T> clazz, String modelId, int version)\n+        throws DataStoreException {\n+        return delete(clazz, modelId, version, null);\n+    }\n+\n     @SuppressWarnings(\"SameParameterValue\") // Reads better with details in one place", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MDQwOQ=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyMDYxNw==", "bodyText": "Removed it.", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r429020617", "createdAt": "2020-05-22T03:11:02Z", "author": {"login": "rjuliano"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/AppSyncClientInstrumentationTest.java", "diffHunk": "@@ -249,12 +256,20 @@ public void testAllOperations() throws DataStoreException {\n      * @return Model hat was deleted from endpoint, coupled with metadata about the deletion\n      * @throws DataStoreException If API delete call fails to render any response from AppSync endpoint\n      */\n+    @NonNull\n+    private <T extends Model> ModelWithMetadata<T> delete(\n+        @NonNull Class<T> clazz, String modelId, int version)\n+        throws DataStoreException {\n+        return delete(clazz, modelId, version, null);\n+    }\n+\n     @SuppressWarnings(\"SameParameterValue\") // Reads better with details in one place", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MDQwOQ=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTYxNTAwOnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSync.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzo0NDo1OFrOGZGXdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzo0NDo1OFrOGZGXdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MTg5Mw==", "bodyText": "\"Uses Amplify API\"-- isn't true, in the interface. Even theAppSyncClientonly needs aGraphQLBehavior, doesn't it? Amplify.APIis a very specificGraphQLBehavior. mock(GraphQLBehavior)is one counter-example; this may be used to fulfill theupdate` contract.", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428971893", "createdAt": "2020-05-21T23:44:58Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSync.java", "diffHunk": "@@ -92,11 +93,50 @@\n             @NonNull Consumer<DataStoreException> onFailure\n     );\n \n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTYxNTI5OnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSync.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzo0NTowN1rOGZGXoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzo0NTowN1rOGZGXoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MTkzNw==", "bodyText": "Same here", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428971937", "createdAt": "2020-05-21T23:45:07Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSync.java", "diffHunk": "@@ -92,11 +93,50 @@\n             @NonNull Consumer<DataStoreException> onFailure\n     );\n \n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     * @param model An instance of the Model with the values to mutate\n+     * @param version The version of the model we have\n+     * @param predicate Condition to use for the update.\n+     * @param onResponse Invoked when response data is available.\n+     * @param onFailure Invoked on failure to obtain response data\n+     * @param <T> The type of data in the response. Must extend Model.\n+     * @return A {@link Cancelable} to provide a means to cancel the asynchronous operation\n+     */\n+    @NonNull\n+    <T extends Model> Cancelable update(\n+            @NonNull T model,\n+            @NonNull Integer version,\n+            @Nullable QueryPredicate predicate,\n+            @NonNull Consumer<GraphQLResponse<ModelWithMetadata<T>>> onResponse,\n+            @NonNull Consumer<DataStoreException> onFailure\n+    );\n+\n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTYxNTcxOnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSync.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzo0NToyM1rOGZGX5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjo1OTo1N1rOGZJMCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MjAwNg==", "bodyText": "The other ones in this doc are using +8 off the method start", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r428972006", "createdAt": "2020-05-21T23:45:23Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSync.java", "diffHunk": "@@ -92,11 +93,50 @@\n             @NonNull Consumer<DataStoreException> onFailure\n     );\n \n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     * @param model An instance of the Model with the values to mutate\n+     * @param version The version of the model we have\n+     * @param predicate Condition to use for the update.\n+     * @param onResponse Invoked when response data is available.\n+     * @param onFailure Invoked on failure to obtain response data\n+     * @param <T> The type of data in the response. Must extend Model.\n+     * @return A {@link Cancelable} to provide a means to cancel the asynchronous operation\n+     */\n+    @NonNull\n+    <T extends Model> Cancelable update(\n+            @NonNull T model,\n+            @NonNull Integer version,\n+            @Nullable QueryPredicate predicate,\n+            @NonNull Consumer<GraphQLResponse<ModelWithMetadata<T>>> onResponse,\n+            @NonNull Consumer<DataStoreException> onFailure\n+    );\n+\n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     * @param clazz The class of the object being deleted\n+     * @param objectId ID id of the object to delete\n+     * @param version The version of the model we have\n+     * @param onResponse Invoked when response data is available.\n+     * @param onFailure Invoked on failure to obtain response data\n+     * @param <T> The type of data in the response. Must extend Model.\n+     * @return A {@link Cancelable} to provide a means to cancel the asynchronous operation\n+     */\n+    @NonNull\n+    <T extends Model> Cancelable delete(\n+        @NonNull Class<T> clazz,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxODEyMg==", "bodyText": "Fixed", "url": "https://github.com/aws-amplify/amplify-android/pull/496#discussion_r429018122", "createdAt": "2020-05-22T02:59:57Z", "author": {"login": "rjuliano"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/appsync/AppSync.java", "diffHunk": "@@ -92,11 +93,50 @@\n             @NonNull Consumer<DataStoreException> onFailure\n     );\n \n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     * @param model An instance of the Model with the values to mutate\n+     * @param version The version of the model we have\n+     * @param predicate Condition to use for the update.\n+     * @param onResponse Invoked when response data is available.\n+     * @param onFailure Invoked on failure to obtain response data\n+     * @param <T> The type of data in the response. Must extend Model.\n+     * @return A {@link Cancelable} to provide a means to cancel the asynchronous operation\n+     */\n+    @NonNull\n+    <T extends Model> Cancelable update(\n+            @NonNull T model,\n+            @NonNull Integer version,\n+            @Nullable QueryPredicate predicate,\n+            @NonNull Consumer<GraphQLResponse<ModelWithMetadata<T>>> onResponse,\n+            @NonNull Consumer<DataStoreException> onFailure\n+    );\n+\n+    /**\n+     * Uses Amplify API to make a mutation which will only apply if the version sent matches the server version.\n+     * @param clazz The class of the object being deleted\n+     * @param objectId ID id of the object to delete\n+     * @param version The version of the model we have\n+     * @param onResponse Invoked when response data is available.\n+     * @param onFailure Invoked on failure to obtain response data\n+     * @param <T> The type of data in the response. Must extend Model.\n+     * @return A {@link Cancelable} to provide a means to cancel the asynchronous operation\n+     */\n+    @NonNull\n+    <T extends Model> Cancelable delete(\n+        @NonNull Class<T> clazz,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MjAwNg=="}, "originalCommit": {"oid": "1f5f3e39b1bfa8b595f365833c6752654b93287e"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1284, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}