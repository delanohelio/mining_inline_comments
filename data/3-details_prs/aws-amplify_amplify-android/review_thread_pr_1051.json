{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3MzU2NjMz", "number": 1051, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMTozNzowOVrOFETpCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMTozNzowOVrOFETpCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDYwNDI2OnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/MutationProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMTozNzowOVrOIEYtvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMTozNzowOVrOIEYtvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ3MDE0Mw==", "bodyText": "You could also fix merger.merge() to not do anything until subscribed to.", "url": "https://github.com/aws-amplify/amplify-android/pull/1051#discussion_r541470143", "createdAt": "2020-12-12T01:37:09Z", "author": {"login": "kjones"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/MutationProcessor.java", "diffHunk": "@@ -134,12 +134,13 @@ private Completable drainMutationOutbox() {\n         return mutationOutbox.markInFlight(mutationOutboxItem.getMutationId())\n             // Then, put it \"into flight\"\n             .andThen(publishToNetwork(mutationOutboxItem)\n+                .map(modelWithMetadata -> ensureModelHasSchema(mutationOutboxItem, modelWithMetadata))\n                 .flatMapCompletable(modelWithMetadata ->\n                     // Once the server knows about it, it's safe to remove from the outbox.\n                     // This is done before merging, because the merger will refuse to merge\n                     // if there are outstanding mutations in the outbox.\n                     mutationOutbox.remove(mutationOutboxItem.getMutationId())\n-                        .andThen(merger.merge(modelWithMetadata))\n+                        .andThen(Completable.defer(() -> merger.merge(modelWithMetadata)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f43d558e3d83b13899535db47b6e56ce81deda7"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 851, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}