{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNDAzMjk3", "number": 931, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNjo1ODo1MFrOEydIVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzowMzoyNFrOEydQMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzQxNTI1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/datastore/DataStoreChannelEventName.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNjo1ODo1MFrOHpG03A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoyNDoyOVrOHpH7rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg2NTUwMA==", "bodyText": "can we clarify that this is not shared across the platforms and that this is for internal use only?", "url": "https://github.com/aws-amplify/amplify-android/pull/931#discussion_r512865500", "createdAt": "2020-10-27T16:58:50Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/datastore/DataStoreChannelEventName.java", "diffHunk": "@@ -51,14 +42,16 @@\n     NETWORK_STATUS(\"networkStatus\"),\n \n     /**\n-     * The websocket connection has been established and all the graphql subscriptions too.\n+     * The WebSocket connection has been established, in addition to all of the GraphQL\n+     * subscriptions it hosts.\n      */\n     SUBSCRIPTIONS_ESTABLISHED(\"subscriptionsEstablished\"),\n \n     /**\n-     * The DataStore as a whole (not just the sync piece) is ready. At this point all data is available.\n+     * The server sent the client data over the WebSocket subscription. The data was\n+     * successfully melded back into the local store.\n      */\n-    READY(\"ready\"),\n+    SUBSCRIPTION_DATA_PROCESSED(\"subscriptionDataProcessed\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc3552a5673783698963df5eb6cd080b77062ed1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4MzYzMA==", "bodyText": "I think we can achieve that by omitting it from the public docs, for now. It might make sense for the other platforms to add this, later?", "url": "https://github.com/aws-amplify/amplify-android/pull/931#discussion_r512883630", "createdAt": "2020-10-27T17:24:29Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/datastore/DataStoreChannelEventName.java", "diffHunk": "@@ -51,14 +42,16 @@\n     NETWORK_STATUS(\"networkStatus\"),\n \n     /**\n-     * The websocket connection has been established and all the graphql subscriptions too.\n+     * The WebSocket connection has been established, in addition to all of the GraphQL\n+     * subscriptions it hosts.\n      */\n     SUBSCRIPTIONS_ESTABLISHED(\"subscriptionsEstablished\"),\n \n     /**\n-     * The DataStore as a whole (not just the sync piece) is ready. At this point all data is available.\n+     * The server sent the client data over the WebSocket subscription. The data was\n+     * successfully melded back into the local store.\n      */\n-    READY(\"ready\"),\n+    SUBSCRIPTION_DATA_PROCESSED(\"subscriptionDataProcessed\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg2NTUwMA=="}, "originalCommit": {"oid": "bc3552a5673783698963df5eb6cd080b77062ed1"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzQyMzI4OnYy", "diffSide": "LEFT", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/syncengine/MutationProcessorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzowMDoyOVrOHpG5qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoyNTozNlrOHpH_Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg2NjczMQ==", "bodyText": "wouldn't this have been a stronger assertion?", "url": "https://github.com/aws-amplify/amplify-android/pull/931#discussion_r512866731", "createdAt": "2020-10-27T17:00:29Z", "author": {"login": "raphkim"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/syncengine/MutationProcessorTest.java", "diffHunk": "@@ -154,11 +153,7 @@ public void canDrainMutationOutbox() throws DataStoreException {\n         mutationProcessor.startDrainingMutationOutbox();\n \n         // Assert: the event was published\n-        List<HubEvent<?>> events = accumulator.await();\n-        assertEquals(1, events.size());\n-        @SuppressWarnings(\"unchecked\")\n-        PendingMutation<BlogOwner> mutation = (PendingMutation<BlogOwner>) events.get(0).getData();\n-        assertEquals(createTony, mutation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc3552a5673783698963df5eb6cd080b77062ed1"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4NDUzNQ==", "bodyText": "It was duplicative logic. The isProcessed filter already checks for the model type and ID. So if the accumulator even gets an event, it means we did find this match, already.\nIn other words, this assertion is sort of just testing the isProcessed filter again.", "url": "https://github.com/aws-amplify/amplify-android/pull/931#discussion_r512884535", "createdAt": "2020-10-27T17:25:36Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/syncengine/MutationProcessorTest.java", "diffHunk": "@@ -154,11 +153,7 @@ public void canDrainMutationOutbox() throws DataStoreException {\n         mutationProcessor.startDrainingMutationOutbox();\n \n         // Assert: the event was published\n-        List<HubEvent<?>> events = accumulator.await();\n-        assertEquals(1, events.size());\n-        @SuppressWarnings(\"unchecked\")\n-        PendingMutation<BlogOwner> mutation = (PendingMutation<BlogOwner>) events.get(0).getData();\n-        assertEquals(createTony, mutation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg2NjczMQ=="}, "originalCommit": {"oid": "bc3552a5673783698963df5eb6cd080b77062ed1"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzQyNzI3OnYy", "diffSide": "LEFT", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/Merger.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzowMToyNFrOHpG8Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoyMzozNVrOHpH4pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg2NzM0Mg==", "bodyText": "where was this being used before?", "url": "https://github.com/aws-amplify/amplify-android/pull/931#discussion_r512867342", "createdAt": "2020-10-27T17:01:24Z", "author": {"login": "raphkim"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/Merger.java", "diffHunk": "@@ -180,22 +180,4 @@\n             }\n         }, failure -> onNotPresent.call());\n     }\n-\n-    /**\n-     * The strategy to use while merging. Whether to consider the contents of the mutation\n-     * outbox before saving data locally, or, to ignore it.\n-     */\n-    enum MergeStrategy {\n-        /**\n-         * When merging, the contents of the mutation outbox will *not* be considered.\n-         */\n-        IGNORE_PENDING_MUTATIONS,\n-\n-        /**\n-         * When merging, the contents of the mutation outbox will be considered.\n-         * If there is already a pending mutation in the mutation outbox, for a model of the\n-         * same ID as the model being merged -- then the merge will *not* modify the existing model.\n-         */\n-        CONSIDER_PENDING_MUTATIONS\n-    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc3552a5673783698963df5eb6cd080b77062ed1"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4Mjg1Mg==", "bodyText": "There use to be some logic to change the behavior depending on whether the change was outbound, or inbound.\nIf outbound, the mutation outbox would have a pending mutation, while being merged. So, we'd have to not consider it.\nThe issue was later remedied by changing the sequence of events, so that the event gets removed from the outbox before being merged.\nBut, this enum apparently didn't removed in that previous change.", "url": "https://github.com/aws-amplify/amplify-android/pull/931#discussion_r512882852", "createdAt": "2020-10-27T17:23:35Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/Merger.java", "diffHunk": "@@ -180,22 +180,4 @@\n             }\n         }, failure -> onNotPresent.call());\n     }\n-\n-    /**\n-     * The strategy to use while merging. Whether to consider the contents of the mutation\n-     * outbox before saving data locally, or, to ignore it.\n-     */\n-    enum MergeStrategy {\n-        /**\n-         * When merging, the contents of the mutation outbox will *not* be considered.\n-         */\n-        IGNORE_PENDING_MUTATIONS,\n-\n-        /**\n-         * When merging, the contents of the mutation outbox will be considered.\n-         * If there is already a pending mutation in the mutation outbox, for a model of the\n-         * same ID as the model being merged -- then the merge will *not* modify the existing model.\n-         */\n-        CONSIDER_PENDING_MUTATIONS\n-    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg2NzM0Mg=="}, "originalCommit": {"oid": "bc3552a5673783698963df5eb6cd080b77062ed1"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzQzNTM3OnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/AWSDataStorePluginInstrumentedTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzowMzoyNFrOHpHBbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoyNjoyOVrOHpICwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg2ODcxNg==", "bodyText": "should we put all these inside TestHubEventFilters as isProcessed() and isReceived() for consistency?", "url": "https://github.com/aws-amplify/amplify-android/pull/931#discussion_r512868716", "createdAt": "2020-10-27T17:03:24Z", "author": {"login": "raphkim"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/AWSDataStorePluginInstrumentedTest.java", "diffHunk": "@@ -195,34 +195,42 @@ public void syncDownFromCloudIsWorking() throws AmplifyException {\n     private <T extends Model> HubEventFilter publicationOf(T model) {\n         return event -> {\n             DataStoreChannelEventName actualEventName = DataStoreChannelEventName.fromString(event.getName());\n-            if (!DataStoreChannelEventName.PUBLISHED_TO_CLOUD.equals(actualEventName)) {\n+            if (!DataStoreChannelEventName.OUTBOX_MUTATION_PROCESSED.equals(actualEventName)) {\n                 return false;\n             }\n-            @SuppressWarnings(\"unchecked\")\n-            PendingMutation<T> pendingMutation = (PendingMutation<T>) event.getData();\n-            if (pendingMutation == null) {\n-                return false;\n-            } else if (!model.getClass().isAssignableFrom(pendingMutation.getMutatedItem().getClass())) {\n-                return false;\n-            }\n-            return model.getId().equals(pendingMutation.getMutatedItem().getId());\n+            return hasModelData(model, (OutboxMutationEvent<? extends Model>) event.getData());\n         };\n     }\n \n     private <T extends Model> HubEventFilter receiptOf(T model) {\n         return event -> {\n             DataStoreChannelEventName actualEventName = DataStoreChannelEventName.fromString(event.getName());\n-            if (!DataStoreChannelEventName.RECEIVED_FROM_CLOUD.equals(actualEventName)) {\n-                return false;\n-            }\n-            @SuppressWarnings(\"unchecked\")\n-            ModelWithMetadata<T> modelWithMetadata = (ModelWithMetadata<T>) event.getData();\n-            if (modelWithMetadata == null) {\n-                return false;\n-            } else if (!model.getClass().isAssignableFrom(modelWithMetadata.getModel().getClass())) {\n+            if (!DataStoreChannelEventName.SUBSCRIPTION_DATA_PROCESSED.equals(actualEventName)) {\n                 return false;\n             }\n-            return model.getId().equals(modelWithMetadata.getModel().getId());\n+            return hasModelData(model, (ModelWithMetadata<? extends Model>) event.getData());\n         };\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc3552a5673783698963df5eb6cd080b77062ed1"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4MTA3MQ==", "bodyText": "I wish. The problem is that TestHubEventFilters lives in aws-datastore/src/test, and this file is in aws-datastore/src/androidTest. I evaluated a few workaround to that hurdle, but none were very elegant. If I moved it to testutils, then testutils needs to depend on the DataStore plugin module, and that doesn't seem right.", "url": "https://github.com/aws-amplify/amplify-android/pull/931#discussion_r512881071", "createdAt": "2020-10-27T17:21:18Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/AWSDataStorePluginInstrumentedTest.java", "diffHunk": "@@ -195,34 +195,42 @@ public void syncDownFromCloudIsWorking() throws AmplifyException {\n     private <T extends Model> HubEventFilter publicationOf(T model) {\n         return event -> {\n             DataStoreChannelEventName actualEventName = DataStoreChannelEventName.fromString(event.getName());\n-            if (!DataStoreChannelEventName.PUBLISHED_TO_CLOUD.equals(actualEventName)) {\n+            if (!DataStoreChannelEventName.OUTBOX_MUTATION_PROCESSED.equals(actualEventName)) {\n                 return false;\n             }\n-            @SuppressWarnings(\"unchecked\")\n-            PendingMutation<T> pendingMutation = (PendingMutation<T>) event.getData();\n-            if (pendingMutation == null) {\n-                return false;\n-            } else if (!model.getClass().isAssignableFrom(pendingMutation.getMutatedItem().getClass())) {\n-                return false;\n-            }\n-            return model.getId().equals(pendingMutation.getMutatedItem().getId());\n+            return hasModelData(model, (OutboxMutationEvent<? extends Model>) event.getData());\n         };\n     }\n \n     private <T extends Model> HubEventFilter receiptOf(T model) {\n         return event -> {\n             DataStoreChannelEventName actualEventName = DataStoreChannelEventName.fromString(event.getName());\n-            if (!DataStoreChannelEventName.RECEIVED_FROM_CLOUD.equals(actualEventName)) {\n-                return false;\n-            }\n-            @SuppressWarnings(\"unchecked\")\n-            ModelWithMetadata<T> modelWithMetadata = (ModelWithMetadata<T>) event.getData();\n-            if (modelWithMetadata == null) {\n-                return false;\n-            } else if (!model.getClass().isAssignableFrom(modelWithMetadata.getModel().getClass())) {\n+            if (!DataStoreChannelEventName.SUBSCRIPTION_DATA_PROCESSED.equals(actualEventName)) {\n                 return false;\n             }\n-            return model.getId().equals(modelWithMetadata.getModel().getId());\n+            return hasModelData(model, (ModelWithMetadata<? extends Model>) event.getData());\n         };\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg2ODcxNg=="}, "originalCommit": {"oid": "bc3552a5673783698963df5eb6cd080b77062ed1"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4NTQ0Mg==", "bodyText": "Ah shoot, I think I vaguely remember this being an issue when I was writing the tests :/", "url": "https://github.com/aws-amplify/amplify-android/pull/931#discussion_r512885442", "createdAt": "2020-10-27T17:26:29Z", "author": {"login": "raphkim"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/AWSDataStorePluginInstrumentedTest.java", "diffHunk": "@@ -195,34 +195,42 @@ public void syncDownFromCloudIsWorking() throws AmplifyException {\n     private <T extends Model> HubEventFilter publicationOf(T model) {\n         return event -> {\n             DataStoreChannelEventName actualEventName = DataStoreChannelEventName.fromString(event.getName());\n-            if (!DataStoreChannelEventName.PUBLISHED_TO_CLOUD.equals(actualEventName)) {\n+            if (!DataStoreChannelEventName.OUTBOX_MUTATION_PROCESSED.equals(actualEventName)) {\n                 return false;\n             }\n-            @SuppressWarnings(\"unchecked\")\n-            PendingMutation<T> pendingMutation = (PendingMutation<T>) event.getData();\n-            if (pendingMutation == null) {\n-                return false;\n-            } else if (!model.getClass().isAssignableFrom(pendingMutation.getMutatedItem().getClass())) {\n-                return false;\n-            }\n-            return model.getId().equals(pendingMutation.getMutatedItem().getId());\n+            return hasModelData(model, (OutboxMutationEvent<? extends Model>) event.getData());\n         };\n     }\n \n     private <T extends Model> HubEventFilter receiptOf(T model) {\n         return event -> {\n             DataStoreChannelEventName actualEventName = DataStoreChannelEventName.fromString(event.getName());\n-            if (!DataStoreChannelEventName.RECEIVED_FROM_CLOUD.equals(actualEventName)) {\n-                return false;\n-            }\n-            @SuppressWarnings(\"unchecked\")\n-            ModelWithMetadata<T> modelWithMetadata = (ModelWithMetadata<T>) event.getData();\n-            if (modelWithMetadata == null) {\n-                return false;\n-            } else if (!model.getClass().isAssignableFrom(modelWithMetadata.getModel().getClass())) {\n+            if (!DataStoreChannelEventName.SUBSCRIPTION_DATA_PROCESSED.equals(actualEventName)) {\n                 return false;\n             }\n-            return model.getId().equals(modelWithMetadata.getModel().getId());\n+            return hasModelData(model, (ModelWithMetadata<? extends Model>) event.getData());\n         };\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg2ODcxNg=="}, "originalCommit": {"oid": "bc3552a5673783698963df5eb6cd080b77062ed1"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1002, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}