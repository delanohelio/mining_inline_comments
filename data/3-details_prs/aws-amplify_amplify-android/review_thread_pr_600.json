{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMTk4NjY4", "number": 600, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDozNTo1OFrOEI96YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDo0MDo0MVrOEI99Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODM4NDMzOnYy", "diffSide": "RIGHT", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/utils/RestRequestFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDozNTo1OFrOGpQLOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNzowNToyM1rOGqaKnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwOTgxOQ==", "bodyText": "Suggestion for readability (eschew regular expression):\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return path.replaceAll(\"^[\\\\\\\\/]+\", \"\");\n          \n          \n            \n                    if (path.startsWith(\"/\") || path.startsWith(\"\\\\\")) {\n          \n          \n            \n                        return path.substring(1);\n          \n          \n            \n                    }\n          \n          \n            \n                    \n          \n          \n            \n                    return path;", "url": "https://github.com/aws-amplify/amplify-android/pull/600#discussion_r445909819", "createdAt": "2020-06-26T00:35:58Z", "author": {"login": "jpignata"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/utils/RestRequestFactory.java", "diffHunk": "@@ -125,12 +129,20 @@ public static Request createRequest(\n     private static void populateBody(\n             Request.Builder builder,\n             byte[] data,\n-            BodyCreationStrategy strategy) {\n+            BodyCreationStrategy strategy\n+    ) {\n         if (data != null) {\n             strategy.buildRequest(builder, data);\n         }\n     }\n \n+    // Segment separator can be either '/' or '\\'.\n+    // HttpUrl.Builder assumes an empty URL if path segments\n+    // begin with either character. Strip them before appending.\n+    private static String stripLeadingSlashes(final String path) {\n+        return path.replaceAll(\"^[\\\\\\\\/]+\", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7b430867aaa0541b9eea75cfeb9391edc41d6c1"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEyMjA3Ng==", "bodyText": "I know this is excessive, but it works for any combination of any number of slashes in the beginning. This way I REALLY ensure that the path doesn't begin with \"/\" or \"\" or any combination of those two.\nThis way the method name actually makes sense, since it wants to completely strip the left side of any slashes.", "url": "https://github.com/aws-amplify/amplify-android/pull/600#discussion_r447122076", "createdAt": "2020-06-29T17:05:23Z", "author": {"login": "raphkim"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/utils/RestRequestFactory.java", "diffHunk": "@@ -125,12 +129,20 @@ public static Request createRequest(\n     private static void populateBody(\n             Request.Builder builder,\n             byte[] data,\n-            BodyCreationStrategy strategy) {\n+            BodyCreationStrategy strategy\n+    ) {\n         if (data != null) {\n             strategy.buildRequest(builder, data);\n         }\n     }\n \n+    // Segment separator can be either '/' or '\\'.\n+    // HttpUrl.Builder assumes an empty URL if path segments\n+    // begin with either character. Strip them before appending.\n+    private static String stripLeadingSlashes(final String path) {\n+        return path.replaceAll(\"^[\\\\\\\\/]+\", \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwOTgxOQ=="}, "originalCommit": {"oid": "a7b430867aaa0541b9eea75cfeb9391edc41d6c1"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODM5MTcwOnYy", "diffSide": "RIGHT", "path": "aws-api/src/test/java/com/amplifyframework/api/aws/utils/RestRequestFactoryTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDo0MDo0MVrOGpQPpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNzowNzozOFrOGqaPMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkxMDk1MA==", "bodyText": "Why is this invalid? No scheme?", "url": "https://github.com/aws-amplify/amplify-android/pull/600#discussion_r445910950", "createdAt": "2020-06-26T00:40:41Z", "author": {"login": "jpignata"}, "path": "aws-api/src/test/java/com/amplifyframework/api/aws/utils/RestRequestFactoryTest.java", "diffHunk": "@@ -83,9 +97,9 @@ public void createValidURLWithQuery() throws MalformedURLException {\n      * @throws MalformedURLException Should throw since the URL is invalid.\n      */\n     @Test(expected = MalformedURLException.class)\n-    public void createInValidURL() throws MalformedURLException {\n+    public void createInvalidURL() throws MalformedURLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7b430867aaa0541b9eea75cfeb9391edc41d6c1"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEyMzI0OQ==", "bodyText": "I did not write this test, but I think OkHttp doesn't like it when the endpoint is missing the http", "url": "https://github.com/aws-amplify/amplify-android/pull/600#discussion_r447123249", "createdAt": "2020-06-29T17:07:38Z", "author": {"login": "raphkim"}, "path": "aws-api/src/test/java/com/amplifyframework/api/aws/utils/RestRequestFactoryTest.java", "diffHunk": "@@ -83,9 +97,9 @@ public void createValidURLWithQuery() throws MalformedURLException {\n      * @throws MalformedURLException Should throw since the URL is invalid.\n      */\n     @Test(expected = MalformedURLException.class)\n-    public void createInValidURL() throws MalformedURLException {\n+    public void createInvalidURL() throws MalformedURLException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkxMDk1MA=="}, "originalCommit": {"oid": "a7b430867aaa0541b9eea75cfeb9391edc41d6c1"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1046, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}