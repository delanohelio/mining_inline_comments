{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNTA5MDUx", "number": 285, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMzoyOToyNVrODjR9Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMzozMDoxOFrODjR91g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzIwOTY3OnYy", "diffSide": "RIGHT", "path": "aws-storage-s3/src/main/java/com/amplifyframework/storage/s3/utils/S3RequestUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMzoyOToyNVrOFvAKHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMDoyOToxMFrOFvBTpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyOTk4MA==", "bodyText": "Will the run time exception get caught for sure? Or should you just throw a storage exception directly, to be sure/safe? Same for all in this file", "url": "https://github.com/aws-amplify/amplify-android/pull/285#discussion_r384829980", "createdAt": "2020-02-26T23:29:25Z", "author": {"login": "jamesonwilliams"}, "path": "aws-storage-s3/src/main/java/com/amplifyframework/storage/s3/utils/S3RequestUtils.java", "diffHunk": "@@ -64,9 +83,30 @@ private static String getAccessLevelPrefix(\n             @NonNull String identityId\n     ) {\n         if (accessLevel.equals(StorageAccessLevel.PRIVATE) || accessLevel.equals(StorageAccessLevel.PROTECTED)) {\n-            return accessLevel.name().toLowerCase(Locale.US) + \"/\" + identityId + \"/\";\n+            return accessLevel.name().toLowerCase(Locale.US) + BUCKET_SEPARATOR + identityId;\n         } else {\n-            return accessLevel.name().toLowerCase(Locale.US) + \"/\";\n+            return accessLevel.name().toLowerCase(Locale.US);\n         }\n     }\n+\n+    @NonNull\n+    private static String getAccessLevelPrefix(@NonNull StorageOptions options) {\n+        StorageAccessLevel accessLevel = options.getAccessLevel();\n+        if (accessLevel == null) {\n+            throw new RuntimeException(new StorageException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cc1b5dea34bcf16c0efc41f4d8cad4b22be804a"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg0ODgwNg==", "bodyText": "These utility methods aren't yet used anywhere to be honest. I just remembered that I went through the trouble of abstracting out options to make it easier to test, but I realized that I didn't actually use it anywhere. I think this will be used later on in one of the refactors once we are done with the testing shenanigans, so we'll see exactly how this utility gets used.", "url": "https://github.com/aws-amplify/amplify-android/pull/285#discussion_r384848806", "createdAt": "2020-02-27T00:29:10Z", "author": {"login": "raphkim"}, "path": "aws-storage-s3/src/main/java/com/amplifyframework/storage/s3/utils/S3RequestUtils.java", "diffHunk": "@@ -64,9 +83,30 @@ private static String getAccessLevelPrefix(\n             @NonNull String identityId\n     ) {\n         if (accessLevel.equals(StorageAccessLevel.PRIVATE) || accessLevel.equals(StorageAccessLevel.PROTECTED)) {\n-            return accessLevel.name().toLowerCase(Locale.US) + \"/\" + identityId + \"/\";\n+            return accessLevel.name().toLowerCase(Locale.US) + BUCKET_SEPARATOR + identityId;\n         } else {\n-            return accessLevel.name().toLowerCase(Locale.US) + \"/\";\n+            return accessLevel.name().toLowerCase(Locale.US);\n         }\n     }\n+\n+    @NonNull\n+    private static String getAccessLevelPrefix(@NonNull StorageOptions options) {\n+        StorageAccessLevel accessLevel = options.getAccessLevel();\n+        if (accessLevel == null) {\n+            throw new RuntimeException(new StorageException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyOTk4MA=="}, "originalCommit": {"oid": "4cc1b5dea34bcf16c0efc41f4d8cad4b22be804a"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzIxMTEwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/storage/options/StorageOptions.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMzozMDoxOFrOFvALGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMDozMTo0N1rOFvBW0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgzMDIzNQ==", "bodyText": "I think this could be non-public, since only the sub classes get used outside of this package. Right?", "url": "https://github.com/aws-amplify/amplify-android/pull/285#discussion_r384830235", "createdAt": "2020-02-26T23:30:18Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/storage/options/StorageOptions.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.options;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.core.async.Options;\n+import com.amplifyframework.storage.StorageAccessLevel;\n+\n+/**\n+ * Storage options interface requires that every\n+ * storage operation will inspect the provided options\n+ * instance for access level and target ID.\n+ */\n+public abstract class StorageOptions implements Options {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cc1b5dea34bcf16c0efc41f4d8cad4b22be804a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg0OTAxOQ==", "bodyText": "ah shoot you are right. I'm pretty sure I fixed it before, but not sure why its public again now.", "url": "https://github.com/aws-amplify/amplify-android/pull/285#discussion_r384849019", "createdAt": "2020-02-27T00:29:51Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/storage/options/StorageOptions.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.options;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.core.async.Options;\n+import com.amplifyframework.storage.StorageAccessLevel;\n+\n+/**\n+ * Storage options interface requires that every\n+ * storage operation will inspect the provided options\n+ * instance for access level and target ID.\n+ */\n+public abstract class StorageOptions implements Options {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgzMDIzNQ=="}, "originalCommit": {"oid": "4cc1b5dea34bcf16c0efc41f4d8cad4b22be804a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg0OTYxNw==", "bodyText": "OH it's because I added the bit for S3RequestUtils... I'll just get rid of that since I don't plan on using it just yet.", "url": "https://github.com/aws-amplify/amplify-android/pull/285#discussion_r384849617", "createdAt": "2020-02-27T00:31:47Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/storage/options/StorageOptions.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.options;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.core.async.Options;\n+import com.amplifyframework.storage.StorageAccessLevel;\n+\n+/**\n+ * Storage options interface requires that every\n+ * storage operation will inspect the provided options\n+ * instance for access level and target ID.\n+ */\n+public abstract class StorageOptions implements Options {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgzMDIzNQ=="}, "originalCommit": {"oid": "4cc1b5dea34bcf16c0efc41f4d8cad4b22be804a"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1555, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}