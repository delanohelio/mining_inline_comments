{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0OTQxNzY1", "number": 438, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzo1Mjo1MFrOD6df4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzozMjowNlrOD6uAmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjI3Mjk2OnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/SynchronousStorageAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzo1Mjo1MFrOGSUNKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzo1Mjo1MFrOGSUNKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg1ODYwMQ==", "bodyText": "Maybe, matchAll(), to disambiguate from \"apply all of the options\"?\nElsewhere, we use WhateverOptions.defaults(), too. That's become sort of a convention at this point.", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421858601", "createdAt": "2020-05-07T23:52:50Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/SynchronousStorageAdapter.java", "diffHunk": "@@ -177,25 +178,24 @@ public void terminate() throws DataStoreException {\n      * @throws DataStoreException On any failure to query storage adapter\n      */\n     public <T extends Model> List<T> query(@NonNull Class<T> modelClass) throws DataStoreException {\n-        //noinspection ConstantConditions\n-        return query(modelClass, null);\n+        return query(modelClass, QueryOptions.all());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjI3ODM0OnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterModelConverterTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzo1NToyOFrOGSUQMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNjowNzoyM1rOGSaPWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg1OTM3Ng==", "bodyText": "This could also be expressed as where(Todo.ID.eq(todo.getId()), right?\nWe could potentially make Where into a class name, to avoid the static import.\nfinal class Where {\n    private Where() {}\n    \n    QueryOptions id(String matchingId) {\n        return QueryOptions.byId(matchingId);\n    }\n}", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421859376", "createdAt": "2020-05-07T23:55:28Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterModelConverterTest.java", "diffHunk": "@@ -70,7 +71,7 @@ public void saveModelWithAllTypesThenQuery() throws DataStoreException {\n         final Todo todo = createTestTodoModel();\n         this.adapter.save(todo);\n \n-        final List<Todo> result = this.adapter.query(Todo.class, Todo.ID.eq(todo.getId()));\n+        final List<Todo> result = this.adapter.query(Todo.class, byId(todo.getId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1NzQ2NQ==", "bodyText": "I like the concept of the Where as a class to avoid the static imports (even though I'm torn about the reasons why the Java community perceives static imports a something generally bad).\nI updated the readme with more details and will push an update to this PR introducing this way to build the DSL.", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421957465", "createdAt": "2020-05-08T06:07:23Z", "author": {"login": "drochetti"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterModelConverterTest.java", "diffHunk": "@@ -70,7 +71,7 @@ public void saveModelWithAllTypesThenQuery() throws DataStoreException {\n         final Todo todo = createTestTodoModel();\n         this.adapter.save(todo);\n \n-        final List<Todo> result = this.adapter.query(Todo.class, Todo.ID.eq(todo.getId()));\n+        final List<Todo> result = this.adapter.query(Todo.class, byId(todo.getId()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg1OTM3Ng=="}, "originalCommit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjI5MTE1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMDowMTo1NlrOGSUXrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMDowMTo1NlrOGSUXrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg2MTI5NQ==", "bodyText": "If it is not intended for these values to ever be null, I think you could use int instead of Integer, everywhere in the class.", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421861295", "createdAt": "2020-05-08T00:01:56Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model.query;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.util.Objects;\n+\n+/**\n+ * A simple data structure that holds pagination information that can be applied queries.\n+ */\n+public class QueryPaginationInput {\n+\n+    /**\n+     * The default page size.\n+     */\n+    public static final Integer DEFAULT_LIMIT = 100;\n+\n+    private final Integer page;\n+    private final Integer limit;\n+\n+    private QueryPaginationInput(@NonNull Integer page, @NonNull Integer limit) {\n+        this.page = page;\n+        this.limit = limit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjI5MzAyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMDowMjo1N1rOGSUYzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMDowMjo1N1rOGSUYzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg2MTU4MQ==", "bodyText": "Can we use the term \"page size\", instead of limit? \"limit\" is ambiguous. It would either be a max results, or a number of results per page. I guess here it means limit for each page.", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421861581", "createdAt": "2020-05-08T00:02:57Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model.query;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.util.Objects;\n+\n+/**\n+ * A simple data structure that holds pagination information that can be applied queries.\n+ */\n+public class QueryPaginationInput {\n+\n+    /**\n+     * The default page size.\n+     */\n+    public static final Integer DEFAULT_LIMIT = 100;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjI5ODQ2OnYy", "diffSide": "LEFT", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMDowNTozNVrOGSUcDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMDowNTozNVrOGSUcDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg2MjQxNA==", "bodyText": "Can you uncomment it, and assert the non-null state, now that you have @NonNull? Also thank you for making this API improvement. The null-ness of this param has always bothered me.", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421862414", "createdAt": "2020-05-08T00:05:35Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapter.java", "diffHunk": "@@ -367,16 +370,16 @@ public synchronized void initialize(\n     @Override\n     public <T extends Model> void query(\n             @NonNull Class<T> itemClass,\n-            @Nullable QueryPredicate predicate,\n+            @NonNull QueryOptions options,\n             @NonNull Consumer<Iterator<T>> onSuccess,\n             @NonNull Consumer<DataStoreException> onError) {\n         Objects.requireNonNull(itemClass);\n-        // Objects.requireNonNull(predicate); It is not required!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjMwNTQ2OnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterQueryTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMDowOTowNVrOGSUgFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNjoxMTo0OVrOGSaU0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg2MzQ0NQ==", "bodyText": "I like this style, but I'd change the method names for the pagination. To me, this would be more clear:\nWhere.allMatch().paginated(startAtPage(0).withPageSize(pageSize))\n\nOr:\nWhere.allMatch().paginated(intoPagesOfSize(pageSize).startingAtPage(0))\n\nOr:\nWhere.allMatch().paginated(intoPagesSized(pageSize).startingAtPage(0))", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421863445", "createdAt": "2020-05-08T00:09:05Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterQueryTest.java", "diffHunk": "@@ -237,10 +252,57 @@ public void queryWithMaliciousPredicates() throws DataStoreException {\n         adapter.save(jane);\n \n         QueryPredicate predicate = BlogOwner.NAME.eq(\"Jane; DROP TABLE Person; --\");\n-        final List<BlogOwner> resultOfMaliciousQuery = adapter.query(BlogOwner.class, predicate);\n+        final List<BlogOwner> resultOfMaliciousQuery = adapter.query(BlogOwner.class, where(predicate));\n         assertTrue(resultOfMaliciousQuery.isEmpty());\n \n         final List<BlogOwner> resultAfterMaliciousQuery = adapter.query(BlogOwner.class);\n         assertTrue(resultAfterMaliciousQuery.contains(jane));\n     }\n+\n+    @Test\n+    public void queryWithPaginationWithCustomValues() throws DataStoreException {\n+        final int pageSize = 10;\n+        createBlogOwnerRecords(pageSize * 2);\n+\n+        List<BlogOwner> result = adapter.query(\n+            BlogOwner.class,\n+            all().paginated(page(0).withLimit(pageSize))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk1ODg2Nw==", "bodyText": "I like your suggestion better than the current implementation. My only concern is that JS went GA with the page/limit pagination API. I'm not strongly opposed to change it into something more expressive, but I'd say we should align iOS and Android in that case.", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421958867", "createdAt": "2020-05-08T06:11:49Z", "author": {"login": "drochetti"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterQueryTest.java", "diffHunk": "@@ -237,10 +252,57 @@ public void queryWithMaliciousPredicates() throws DataStoreException {\n         adapter.save(jane);\n \n         QueryPredicate predicate = BlogOwner.NAME.eq(\"Jane; DROP TABLE Person; --\");\n-        final List<BlogOwner> resultOfMaliciousQuery = adapter.query(BlogOwner.class, predicate);\n+        final List<BlogOwner> resultOfMaliciousQuery = adapter.query(BlogOwner.class, where(predicate));\n         assertTrue(resultOfMaliciousQuery.isEmpty());\n \n         final List<BlogOwner> resultAfterMaliciousQuery = adapter.query(BlogOwner.class);\n         assertTrue(resultAfterMaliciousQuery.contains(jane));\n     }\n+\n+    @Test\n+    public void queryWithPaginationWithCustomValues() throws DataStoreException {\n+        final int pageSize = 10;\n+        createBlogOwnerRecords(pageSize * 2);\n+\n+        List<BlogOwner> result = adapter.query(\n+            BlogOwner.class,\n+            all().paginated(page(0).withLimit(pageSize))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg2MzQ0NQ=="}, "originalCommit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODk3ODE2OnYy", "diffSide": "RIGHT", "path": "configuration/checkstyle-rules.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzozMjowNlrOGSteiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxOTozMTo1NVrOGSxFGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3MjY0OA==", "bodyText": "This doesn't actually happen under the source tree, though, does it? (I couldn't spot it.) If not -- I'd say, remove these. The src/test has checkstyle-suppressions.xml rules which allow static imports in test code. (Mockito, for example, is designed for use with static imports.)", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r422272648", "createdAt": "2020-05-08T17:32:06Z", "author": {"login": "jamesonwilliams"}, "path": "configuration/checkstyle-rules.xml", "diffHunk": "@@ -184,7 +184,10 @@\n             how the code is composed, with only a quick visual inspection.\n         -->\n         <module name=\"AvoidStarImport\" />\n-        <module name=\"AvoidStaticImport\" />\n+        <module name=\"AvoidStaticImport\">\n+            <property name=\"excludes\" value=\"com.amplifyframework.core.model.query.QueryOptions.*\" />\n+            <property name=\"excludes\" value=\"com.amplifyframework.core.model.query.QueryPaginationInput.*\" />\n+        </module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99e050295c6a69cdb395e7da65363fdb2f6cbab9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMzMTY3NA==", "bodyText": "That's correct, I forgot to remove them, thanks for catching it!", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r422331674", "createdAt": "2020-05-08T19:31:55Z", "author": {"login": "drochetti"}, "path": "configuration/checkstyle-rules.xml", "diffHunk": "@@ -184,7 +184,10 @@\n             how the code is composed, with only a quick visual inspection.\n         -->\n         <module name=\"AvoidStarImport\" />\n-        <module name=\"AvoidStaticImport\" />\n+        <module name=\"AvoidStaticImport\">\n+            <property name=\"excludes\" value=\"com.amplifyframework.core.model.query.QueryOptions.*\" />\n+            <property name=\"excludes\" value=\"com.amplifyframework.core.model.query.QueryPaginationInput.*\" />\n+        </module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3MjY0OA=="}, "originalCommit": {"oid": "99e050295c6a69cdb395e7da65363fdb2f6cbab9"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1222, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}