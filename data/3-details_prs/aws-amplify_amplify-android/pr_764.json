{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NTIyODE1", "number": 764, "title": "chore(rxbindings): cleanup adapters and align datastore apis", "bodyText": "Refactor RxAdapters, to clearly distinguish beteween cancelable and\nvoid behaviors.\nUpdate all bindings to make more deliberate use of the updated\nRxAdapters\nUpdate the RxDataStoreCategoryBehavior and RxDataStoreBinding with\nnew APIs that had been added to the vanilla category spec, but did\nnot make their way into the Rx spec.\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-08-27T07:57:18Z", "url": "https://github.com/aws-amplify/amplify-android/pull/764", "merged": true, "mergeCommit": {"oid": "08ef5adeb90397b3c6f98d5678da481654156599"}, "closed": true, "closedAt": "2020-08-27T15:14:45Z", "author": {"login": "jamesonwilliams"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdC7uS7gH2gAyNDc0NTIyODE1Ojk3NzUzMWI3ZGNmMmJjM2ViYWYxMjJlODIyYzU2ZmY3YmM1NmIyNmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDB5OUgH2gAyNDc0NTIyODE1Ojg0MGViM2RmMTI1MWNjNzRkYWVkOTJmODBiZjdiZDk5N2Y2NWNmZDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "977531b7dcf2bc3ebaf122e822c56ff7bc56b26b", "author": {"user": {"login": "jamesonwilliams", "name": "Jameson Williams"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/977531b7dcf2bc3ebaf122e822c56ff7bc56b26b", "committedDate": "2020-08-27T08:00:03Z", "message": "chore(rxbindings): cleanup adapters and align datastore apis\n\n1. Refactor RxAdapters, to clearly distinguish beteween cancelable and\n   void behaviors.\n2. Update all bindings to make more deliberate use of the updated\n   RxAdapters\n3. Update the RxDataStoreCategoryBehavior and RxDataStoreBinding with\n   new APIs that had been added to the vanilla category spec, but did\n   not make their way into the Rx spec."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "977531b7dcf2bc3ebaf122e822c56ff7bc56b26b", "author": {"user": {"login": "jamesonwilliams", "name": "Jameson Williams"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/977531b7dcf2bc3ebaf122e822c56ff7bc56b26b", "committedDate": "2020-08-27T08:00:03Z", "message": "chore(rxbindings): cleanup adapters and align datastore apis\n\n1. Refactor RxAdapters, to clearly distinguish beteween cancelable and\n   void behaviors.\n2. Update all bindings to make more deliberate use of the updated\n   RxAdapters\n3. Update the RxDataStoreCategoryBehavior and RxDataStoreBinding with\n   new APIs that had been added to the vanilla category spec, but did\n   not make their way into the Rx spec."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NjYyNTAz", "url": "https://github.com/aws-amplify/amplify-android/pull/764#pullrequestreview-476662503", "createdAt": "2020-08-27T12:19:03Z", "commit": {"oid": "977531b7dcf2bc3ebaf122e822c56ff7bc56b26b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjoxOTowM1rOHINsdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjoxOTowM1rOHINsdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM3NTAyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * Describes a behavior emits a notification of start to an {@link Consumer},\n          \n          \n            \n                     * Describes a behavior which emits a notification of start to an {@link Consumer},", "url": "https://github.com/aws-amplify/amplify-android/pull/764#discussion_r478375029", "createdAt": "2020-08-27T12:19:03Z", "author": {"login": "rjuliano"}, "path": "rxbindings/src/main/java/com/amplifyframework/rx/RxAdapters.java", "diffHunk": "@@ -25,80 +25,142 @@\n import io.reactivex.rxjava3.core.Single;\n \n /**\n- * Utility method to convert between behaviors that use the Amplify framework's native\n- * {@link Consumer} and {@link Action}, into {@link Single} and {@link Observable}.\n+ * Utilities for modeling Amplify category behaviors, and converting\n+ * those category behaviors into Rx objects (Observable, Single, Completable).\n  */\n final class RxAdapters {\n     private RxAdapters() {}\n \n-    static <T, E extends Throwable> Completable toCompletable(VoidResultEmitter<T, E> voidResultEmitter) {\n-        return Completable.defer(() -> Completable.create(emitter ->\n-            voidResultEmitter.emitTo(result -> emitter.onComplete(), emitter::onError)\n-        ));\n-    }\n+    /**\n+     * Cancelable behaviors are those Amplify category behaviors which return a cancelable\n+     * operation. For example, most behaviors in Storage and Predictions will return\n+     * a cancelable operation, whereas DataStore and Auth do not.\n+     */\n+    static final class CancelableBehaviors {\n+        private CancelableBehaviors() {}\n \n-    static <T, E extends Throwable> Single<T> toSingle(CancelableResultEmitter<T, E> cancelableResultEmitter) {\n-        return Single.defer(() -> Single.create(emitter -> {\n-            final Cancelable cancelable =\n-                cancelableResultEmitter.emitTo(emitter::onSuccess, emitter::onError);\n-            emitter.setDisposable(AmplifyDisposables.fromCancelable(cancelable));\n-        }));\n-    }\n+        static <E extends Throwable> Completable toCompletable(ActionEmitter<E> behavior) {\n+            return Completable.create(subscriber -> {\n+                Cancelable cancelable = behavior.emitTo(subscriber::onComplete, subscriber::onError);\n+                subscriber.setDisposable(AmplifyDisposables.fromCancelable(cancelable));\n+            });\n+        }\n \n-    static <S, T, E extends Throwable> Observable<T> toObservable(\n-            CancelableStreamEmitter<S, T, E> cancelableStreamEmitter) {\n-        return Observable.defer(() -> Observable.create(emitter -> {\n-            Cancelable cancelable = cancelableStreamEmitter.streamTo(\n-                NoOpConsumer.create(),\n-                emitter::onNext,\n-                emitter::onError,\n-                emitter::onComplete\n-            );\n-            emitter.setDisposable(AmplifyDisposables.fromCancelable(cancelable));\n-        }));\n-    }\n+        static <T, E extends Throwable> Single<T> toSingle(ResultEmitter<T, E> behavior) {\n+            return Single.create(subscriber -> {\n+                Cancelable cancelable = behavior.emitTo(subscriber::onSuccess, subscriber::onError);\n+                subscriber.setDisposable(AmplifyDisposables.fromCancelable(cancelable));\n+            });\n+        }\n \n-    /**\n-     * A behavior which emits to a result listener, but returns no value, itself.\n-     */\n-    interface VoidResultEmitter<T, E extends Throwable> {\n-        void emitTo(Consumer<T> onResult, Consumer<E> onError);\n-    }\n+        static <S, T, E extends Throwable> Observable<T> toObservable(StreamEmitter<S, T, E> behavior) {\n+            return Observable.create(subscriber -> {\n+                Cancelable cancelable = behavior.streamTo(\n+                    NoOpConsumer.create(),\n+                    subscriber::onNext,\n+                    subscriber::onError,\n+                    subscriber::onComplete\n+                );\n+                subscriber.setDisposable(AmplifyDisposables.fromCancelable(cancelable));\n+            });\n+        }\n \n-    /**\n-     * Describes a behavior which emits results to a result or error {@link Consumer},\n-     * and can be canceled via an {@link Cancelable}. Such a method\n-     * may be wrapped into an {@link Single} in a uniform way such as by the\n-     * {@link RxAdapters#toSingle(CancelableResultEmitter)} method.\n-     * @param <T> Type of result accepted by result consumer\n-     * @param <E> Type of error accepted by error consumer\n-     */\n-    interface CancelableResultEmitter<T, E extends Throwable> {\n-        Cancelable emitTo(Consumer<T> onResult, Consumer<E> onError);\n-    }\n+        /**\n+         * Describes a behavior emits a notification of start to an {@link Consumer},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "977531b7dcf2bc3ebaf122e822c56ff7bc56b26b"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "840eb3df1251cc74daed92f80bf7bd997f65cfd6", "author": {"user": {"login": "jamesonwilliams", "name": "Jameson Williams"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/840eb3df1251cc74daed92f80bf7bd997f65cfd6", "committedDate": "2020-08-27T15:11:25Z", "message": "Update rxbindings/src/main/java/com/amplifyframework/rx/RxAdapters.java\n\nCo-authored-by: Rafael Juliano <r_juliano@hotmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3413, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}