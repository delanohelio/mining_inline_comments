{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MzI0MjM2", "number": 248, "title": "[Storage] Support getUrl()", "bodyText": "Issue #, if available:\n#240\nDescription of changes:\nAdd the items related to obtaining pre-signed URL for an S3 object.\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-01-29T01:06:14Z", "url": "https://github.com/aws-amplify/amplify-android/pull/248", "merged": true, "mergeCommit": {"oid": "29529e5690bd0ceaacaad2def4fb38fbec2d6fa5"}, "closed": true, "closedAt": "2020-02-28T22:02:25Z", "author": {"login": "raphkim"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-8PbDgFqTM0OTgyMDIwMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcI1XPnAFqTM2NjY0Mjk4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODIwMjAz", "url": "https://github.com/aws-amplify/amplify-android/pull/248#pullrequestreview-349820203", "createdAt": "2020-01-29T01:48:07Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMTo0ODowN1rOFi6aMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMTo1OToxMlrOFi6kFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1Mjg4Mw==", "bodyText": "Tighten scope of url to be local to this try block, instead of class-scope. One you call onResult.accept(..) you shouldn't need to hang onto it any longer.", "url": "https://github.com/aws-amplify/amplify-android/pull/248#discussion_r372152883", "createdAt": "2020-01-29T01:48:07Z", "author": {"login": "jamesonwilliams"}, "path": "aws-storage-s3/src/main/java/com/amplifyframework/storage/s3/operation/AWSS3StorageGetUrlOperation.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.s3.operation;\n+\n+import android.annotation.SuppressLint;\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.storage.StorageException;\n+import com.amplifyframework.storage.operation.StorageGetUrlOperation;\n+import com.amplifyframework.storage.result.StorageGetUrlResult;\n+import com.amplifyframework.storage.s3.request.AWSS3StorageGetUrlRequest;\n+import com.amplifyframework.storage.s3.service.AWSS3StorageService;\n+import com.amplifyframework.storage.s3.utils.S3RequestUtils;\n+\n+import com.amazonaws.mobile.client.AWSMobileClient;\n+\n+import java.net.URL;\n+\n+/**\n+ * An operation to retrieve pre-signed object URL from AWS S3.\n+ */\n+public final class AWSS3StorageGetUrlOperation\n+        extends StorageGetUrlOperation<AWSS3StorageGetUrlRequest> {\n+    private final AWSS3StorageService storageService;\n+    private final Consumer<StorageGetUrlResult> onResult;\n+    private final Consumer<StorageException> onError;\n+    private URL url;\n+\n+    /**\n+     * Constructs a new AWSS3StorageGetUrlOperation.\n+     * @param storageService S3 client wrapper\n+     * @param request getUrl request parameters\n+     * @param onSuccess Notified when URL is generated.\n+     * @param onError Notified upon URL generation error\n+     */\n+    public AWSS3StorageGetUrlOperation(\n+            @NonNull AWSS3StorageService storageService,\n+            @NonNull AWSS3StorageGetUrlRequest request,\n+            @NonNull Consumer<StorageGetUrlResult> onSuccess,\n+            @NonNull Consumer<StorageException> onError) {\n+        super(request);\n+        this.storageService = storageService;\n+        this.onResult = onSuccess;\n+        this.onError = onError;\n+        this.url = null;\n+    }\n+\n+    @SuppressLint(\"SyntheticAccessor\")\n+    @Override\n+    public void start() {\n+        final String identityId;\n+        final String serviceKey;\n+\n+        try {\n+            // Obtain S3 service key for storage service\n+            identityId = AWSMobileClient.getInstance().getIdentityId();\n+            serviceKey = S3RequestUtils.getServiceKey(\n+                    getRequest().getAccessLevel(),\n+                    identityId,\n+                    getRequest().getKey(),\n+                    getRequest().getTargetIdentityId()\n+            );\n+\n+            try {\n+                this.url = storageService.getPresignedUrl(serviceKey, getRequest().getExpires());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1MzI0Ng==", "bodyText": "For all places where it is used in this PR, Exception is too loose; try to catch something specific. That way, your recovery suggestion can be targeted. \"Look at the call stack\" isn't too great of a recovery suggestion. (This said, I myself have often found it difficult to come up with good recovery exception messages.)", "url": "https://github.com/aws-amplify/amplify-android/pull/248#discussion_r372153246", "createdAt": "2020-01-29T01:49:49Z", "author": {"login": "jamesonwilliams"}, "path": "aws-storage-s3/src/main/java/com/amplifyframework/storage/s3/operation/AWSS3StorageGetUrlOperation.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.s3.operation;\n+\n+import android.annotation.SuppressLint;\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.storage.StorageException;\n+import com.amplifyframework.storage.operation.StorageGetUrlOperation;\n+import com.amplifyframework.storage.result.StorageGetUrlResult;\n+import com.amplifyframework.storage.s3.request.AWSS3StorageGetUrlRequest;\n+import com.amplifyframework.storage.s3.service.AWSS3StorageService;\n+import com.amplifyframework.storage.s3.utils.S3RequestUtils;\n+\n+import com.amazonaws.mobile.client.AWSMobileClient;\n+\n+import java.net.URL;\n+\n+/**\n+ * An operation to retrieve pre-signed object URL from AWS S3.\n+ */\n+public final class AWSS3StorageGetUrlOperation\n+        extends StorageGetUrlOperation<AWSS3StorageGetUrlRequest> {\n+    private final AWSS3StorageService storageService;\n+    private final Consumer<StorageGetUrlResult> onResult;\n+    private final Consumer<StorageException> onError;\n+    private URL url;\n+\n+    /**\n+     * Constructs a new AWSS3StorageGetUrlOperation.\n+     * @param storageService S3 client wrapper\n+     * @param request getUrl request parameters\n+     * @param onSuccess Notified when URL is generated.\n+     * @param onError Notified upon URL generation error\n+     */\n+    public AWSS3StorageGetUrlOperation(\n+            @NonNull AWSS3StorageService storageService,\n+            @NonNull AWSS3StorageGetUrlRequest request,\n+            @NonNull Consumer<StorageGetUrlResult> onSuccess,\n+            @NonNull Consumer<StorageException> onError) {\n+        super(request);\n+        this.storageService = storageService;\n+        this.onResult = onSuccess;\n+        this.onError = onError;\n+        this.url = null;\n+    }\n+\n+    @SuppressLint(\"SyntheticAccessor\")\n+    @Override\n+    public void start() {\n+        final String identityId;\n+        final String serviceKey;\n+\n+        try {\n+            // Obtain S3 service key for storage service\n+            identityId = AWSMobileClient.getInstance().getIdentityId();\n+            serviceKey = S3RequestUtils.getServiceKey(\n+                    getRequest().getAccessLevel(),\n+                    identityId,\n+                    getRequest().getKey(),\n+                    getRequest().getTargetIdentityId()\n+            );\n+\n+            try {\n+                this.url = storageService.getPresignedUrl(serviceKey, getRequest().getExpires());\n+                onResult.accept(StorageGetUrlResult.fromUrl(url));\n+            } catch (Exception exception) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1MzUyMA==", "bodyText": "Do we even need to spec this on the client side? Doesn't S3 have its own value that it will choose on the backend, if we don't provide one in outgoing request, at all?", "url": "https://github.com/aws-amplify/amplify-android/pull/248#discussion_r372153520", "createdAt": "2020-01-29T01:50:51Z", "author": {"login": "jamesonwilliams"}, "path": "aws-storage-s3/src/main/java/com/amplifyframework/storage/s3/AWSS3StoragePlugin.java", "diffHunk": "@@ -141,6 +148,36 @@ public AmazonS3Client getEscapeHatch() {\n         return storageService.getClient();\n     }\n \n+    @NonNull\n+    @Override\n+    public StorageGetUrlOperation<?> getUrl(\n+            @NonNull String key,\n+            @NonNull Consumer<StorageGetUrlResult> onSuccess,\n+            @NonNull Consumer<StorageException> onError) {\n+        return getUrl(key, StorageGetUrlOptions.defaultInstance(), onSuccess, onError);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public StorageGetUrlOperation<?> getUrl(\n+            @NonNull String key,\n+            @NonNull StorageGetUrlOptions options,\n+            @NonNull Consumer<StorageGetUrlResult> onSuccess,\n+            @NonNull Consumer<StorageException> onError) {\n+        AWSS3StorageGetUrlRequest request = new AWSS3StorageGetUrlRequest(\n+                key,\n+                options.getAccessLevel() != null ? options.getAccessLevel() : defaultAccessLevel,\n+                options.getTargetIdentityId(),\n+                options.getExpires() != 0 ? options.getExpires() : DEFAULT_EXPIRE_IN_SECONDS", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1Mzk3Mg==", "bodyText": "It is not common practice to nest try-catch like this. See if you can unwrap the inner one, so that you are at most one try-catch deep in the method body at one time.", "url": "https://github.com/aws-amplify/amplify-android/pull/248#discussion_r372153972", "createdAt": "2020-01-29T01:52:55Z", "author": {"login": "jamesonwilliams"}, "path": "aws-storage-s3/src/main/java/com/amplifyframework/storage/s3/operation/AWSS3StorageGetUrlOperation.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.s3.operation;\n+\n+import android.annotation.SuppressLint;\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.storage.StorageException;\n+import com.amplifyframework.storage.operation.StorageGetUrlOperation;\n+import com.amplifyframework.storage.result.StorageGetUrlResult;\n+import com.amplifyframework.storage.s3.request.AWSS3StorageGetUrlRequest;\n+import com.amplifyframework.storage.s3.service.AWSS3StorageService;\n+import com.amplifyframework.storage.s3.utils.S3RequestUtils;\n+\n+import com.amazonaws.mobile.client.AWSMobileClient;\n+\n+import java.net.URL;\n+\n+/**\n+ * An operation to retrieve pre-signed object URL from AWS S3.\n+ */\n+public final class AWSS3StorageGetUrlOperation\n+        extends StorageGetUrlOperation<AWSS3StorageGetUrlRequest> {\n+    private final AWSS3StorageService storageService;\n+    private final Consumer<StorageGetUrlResult> onResult;\n+    private final Consumer<StorageException> onError;\n+    private URL url;\n+\n+    /**\n+     * Constructs a new AWSS3StorageGetUrlOperation.\n+     * @param storageService S3 client wrapper\n+     * @param request getUrl request parameters\n+     * @param onSuccess Notified when URL is generated.\n+     * @param onError Notified upon URL generation error\n+     */\n+    public AWSS3StorageGetUrlOperation(\n+            @NonNull AWSS3StorageService storageService,\n+            @NonNull AWSS3StorageGetUrlRequest request,\n+            @NonNull Consumer<StorageGetUrlResult> onSuccess,\n+            @NonNull Consumer<StorageException> onError) {\n+        super(request);\n+        this.storageService = storageService;\n+        this.onResult = onSuccess;\n+        this.onError = onError;\n+        this.url = null;\n+    }\n+\n+    @SuppressLint(\"SyntheticAccessor\")\n+    @Override\n+    public void start() {\n+        final String identityId;\n+        final String serviceKey;\n+\n+        try {\n+            // Obtain S3 service key for storage service\n+            identityId = AWSMobileClient.getInstance().getIdentityId();\n+            serviceKey = S3RequestUtils.getServiceKey(\n+                    getRequest().getAccessLevel(),\n+                    identityId,\n+                    getRequest().getKey(),\n+                    getRequest().getTargetIdentityId()\n+            );\n+\n+            try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1NDA4NQ==", "bodyText": "I guess this one has to stay if you make a call to the mobile client, since it is part of the mobile client's method signature. (eyeroll)", "url": "https://github.com/aws-amplify/amplify-android/pull/248#discussion_r372154085", "createdAt": "2020-01-29T01:53:22Z", "author": {"login": "jamesonwilliams"}, "path": "aws-storage-s3/src/main/java/com/amplifyframework/storage/s3/operation/AWSS3StorageGetUrlOperation.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.s3.operation;\n+\n+import android.annotation.SuppressLint;\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.storage.StorageException;\n+import com.amplifyframework.storage.operation.StorageGetUrlOperation;\n+import com.amplifyframework.storage.result.StorageGetUrlResult;\n+import com.amplifyframework.storage.s3.request.AWSS3StorageGetUrlRequest;\n+import com.amplifyframework.storage.s3.service.AWSS3StorageService;\n+import com.amplifyframework.storage.s3.utils.S3RequestUtils;\n+\n+import com.amazonaws.mobile.client.AWSMobileClient;\n+\n+import java.net.URL;\n+\n+/**\n+ * An operation to retrieve pre-signed object URL from AWS S3.\n+ */\n+public final class AWSS3StorageGetUrlOperation\n+        extends StorageGetUrlOperation<AWSS3StorageGetUrlRequest> {\n+    private final AWSS3StorageService storageService;\n+    private final Consumer<StorageGetUrlResult> onResult;\n+    private final Consumer<StorageException> onError;\n+    private URL url;\n+\n+    /**\n+     * Constructs a new AWSS3StorageGetUrlOperation.\n+     * @param storageService S3 client wrapper\n+     * @param request getUrl request parameters\n+     * @param onSuccess Notified when URL is generated.\n+     * @param onError Notified upon URL generation error\n+     */\n+    public AWSS3StorageGetUrlOperation(\n+            @NonNull AWSS3StorageService storageService,\n+            @NonNull AWSS3StorageGetUrlRequest request,\n+            @NonNull Consumer<StorageGetUrlResult> onSuccess,\n+            @NonNull Consumer<StorageException> onError) {\n+        super(request);\n+        this.storageService = storageService;\n+        this.onResult = onSuccess;\n+        this.onError = onError;\n+        this.url = null;\n+    }\n+\n+    @SuppressLint(\"SyntheticAccessor\")\n+    @Override\n+    public void start() {\n+        final String identityId;\n+        final String serviceKey;\n+\n+        try {\n+            // Obtain S3 service key for storage service\n+            identityId = AWSMobileClient.getInstance().getIdentityId();\n+            serviceKey = S3RequestUtils.getServiceKey(\n+                    getRequest().getAccessLevel(),\n+                    identityId,\n+                    getRequest().getKey(),\n+                    getRequest().getTargetIdentityId()\n+            );\n+\n+            try {\n+                this.url = storageService.getPresignedUrl(serviceKey, getRequest().getExpires());\n+                onResult.accept(StorageGetUrlResult.fromUrl(url));\n+            } catch (Exception exception) {\n+                onError.accept(new StorageException(\n+                        \"Encountered an issue while generating pre-signed URL\",\n+                        exception,\n+                        \"See included exception for more details and suggestions to fix.\"\n+                ));\n+            }\n+        } catch (Exception exception) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1NDQzMg==", "bodyText": "Since this class is meant to be particular to the details of S3, here, you could even name this like AWSS3GetPresignedUrlOperation or something.", "url": "https://github.com/aws-amplify/amplify-android/pull/248#discussion_r372154432", "createdAt": "2020-01-29T01:54:52Z", "author": {"login": "jamesonwilliams"}, "path": "aws-storage-s3/src/main/java/com/amplifyframework/storage/s3/operation/AWSS3StorageGetUrlOperation.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.s3.operation;\n+\n+import android.annotation.SuppressLint;\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.storage.StorageException;\n+import com.amplifyframework.storage.operation.StorageGetUrlOperation;\n+import com.amplifyframework.storage.result.StorageGetUrlResult;\n+import com.amplifyframework.storage.s3.request.AWSS3StorageGetUrlRequest;\n+import com.amplifyframework.storage.s3.service.AWSS3StorageService;\n+import com.amplifyframework.storage.s3.utils.S3RequestUtils;\n+\n+import com.amazonaws.mobile.client.AWSMobileClient;\n+\n+import java.net.URL;\n+\n+/**\n+ * An operation to retrieve pre-signed object URL from AWS S3.\n+ */\n+public final class AWSS3StorageGetUrlOperation", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1NDY5Nw==", "bodyText": "Maybe it can be named urlLifetimeInSeconds instead of expires, for greater clarity?", "url": "https://github.com/aws-amplify/amplify-android/pull/248#discussion_r372154697", "createdAt": "2020-01-29T01:56:03Z", "author": {"login": "jamesonwilliams"}, "path": "aws-storage-s3/src/main/java/com/amplifyframework/storage/s3/request/AWSS3StorageGetUrlRequest.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.s3.request;\n+\n+import com.amplifyframework.storage.StorageAccessLevel;\n+\n+/**\n+ * Parameters to provide to S3 that describe a request to retrieve\n+ * pre-signed object URL.\n+ */\n+public final class AWSS3StorageGetUrlRequest {\n+    private final String key;\n+    private final StorageAccessLevel accessLevel;\n+    private final String targetIdentityId;\n+    private final int expires;\n+\n+    /**\n+     * Constructs a new AWSS3StorageGetUrlRequest.\n+     * @param key key for item to obtain URL for\n+     * @param accessLevel Storage access level\n+     * @param targetIdentityId The user id for the user this URL should be generated for\n+     *                         (to override it from assuming the currently logged in user)\n+     * @param expires The number of seconds before the URL expires", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1NTM1MQ==", "bodyText": "Should probably copy over the .expires(...) as well?", "url": "https://github.com/aws-amplify/amplify-android/pull/248#discussion_r372155351", "createdAt": "2020-01-29T01:58:55Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/storage/options/StorageGetUrlOptions.java", "diffHunk": "@@ -0,0 +1,163 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.options;\n+\n+import com.amplifyframework.core.async.Options;\n+import com.amplifyframework.storage.StorageAccessLevel;\n+\n+/**\n+ * Options to specify attributes of get URL API invocation.\n+ */\n+public final class StorageGetUrlOptions implements Options {\n+    private final StorageAccessLevel accessLevel;\n+    private final String targetIdentityId;\n+    private final int expires;\n+\n+    StorageGetUrlOptions(final Builder builder) {\n+        this.accessLevel = builder.getAccessLevel();\n+        this.targetIdentityId = builder.getTargetIdentityId();\n+        this.expires = builder.getExpires();\n+    }\n+\n+    /**\n+     * Gets the storage access level.\n+     * @return Storage access level\n+     */\n+    public StorageAccessLevel getAccessLevel() {\n+        return accessLevel;\n+    }\n+\n+    /**\n+     * Gets the target identity ID.\n+     * @return target identity ID\n+     */\n+    public String getTargetIdentityId() {\n+        return targetIdentityId;\n+    }\n+\n+    /**\n+     * Gets the number of seconds before the URL expires.\n+     * @return number of seconds before the URL expires\n+     */\n+    public int getExpires() {\n+        return expires;\n+    }\n+\n+    /**\n+     * Factory method to create a new instance of the\n+     * {@link StorageGetUrlOptions.Builder}.  The builder can be\n+     * used to configure properties and then construct a new immutable\n+     * instance of the StorageGetUrlOptions.\n+     * @return An instance of the {@link StorageGetUrlOptions.Builder}\n+     */\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    /**\n+     * Factory method to create builder which is configured to prepare\n+     * object instances with the same field values as the provided\n+     * options. This can be used as a starting ground to create a\n+     * new clone of the provided options, which shares some common\n+     * configuration.\n+     * @param options Options to populate into a new builder configuration\n+     * @return A Builder instance that has been configured using the\n+     *         values in the provided options\n+     */\n+    public static Builder from(StorageGetUrlOptions options) {\n+        return builder()\n+            .accessLevel(options.getAccessLevel())\n+            .targetIdentityId(options.getTargetIdentityId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE1NTQxMg==", "bodyText": "Can remove", "url": "https://github.com/aws-amplify/amplify-android/pull/248#discussion_r372155412", "createdAt": "2020-01-29T01:59:12Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/storage/options/StorageGetUrlOptions.java", "diffHunk": "@@ -0,0 +1,163 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.options;\n+\n+import com.amplifyframework.core.async.Options;\n+import com.amplifyframework.storage.StorageAccessLevel;\n+\n+/**\n+ * Options to specify attributes of get URL API invocation.\n+ */\n+public final class StorageGetUrlOptions implements Options {\n+    private final StorageAccessLevel accessLevel;\n+    private final String targetIdentityId;\n+    private final int expires;\n+\n+    StorageGetUrlOptions(final Builder builder) {\n+        this.accessLevel = builder.getAccessLevel();\n+        this.targetIdentityId = builder.getTargetIdentityId();\n+        this.expires = builder.getExpires();\n+    }\n+\n+    /**\n+     * Gets the storage access level.\n+     * @return Storage access level\n+     */\n+    public StorageAccessLevel getAccessLevel() {\n+        return accessLevel;\n+    }\n+\n+    /**\n+     * Gets the target identity ID.\n+     * @return target identity ID\n+     */\n+    public String getTargetIdentityId() {\n+        return targetIdentityId;\n+    }\n+\n+    /**\n+     * Gets the number of seconds before the URL expires.\n+     * @return number of seconds before the URL expires\n+     */\n+    public int getExpires() {\n+        return expires;\n+    }\n+\n+    /**\n+     * Factory method to create a new instance of the\n+     * {@link StorageGetUrlOptions.Builder}.  The builder can be\n+     * used to configure properties and then construct a new immutable\n+     * instance of the StorageGetUrlOptions.\n+     * @return An instance of the {@link StorageGetUrlOptions.Builder}\n+     */\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    /**\n+     * Factory method to create builder which is configured to prepare\n+     * object instances with the same field values as the provided\n+     * options. This can be used as a starting ground to create a\n+     * new clone of the provided options, which shares some common\n+     * configuration.\n+     * @param options Options to populate into a new builder configuration\n+     * @return A Builder instance that has been configured using the\n+     *         values in the provided options\n+     */\n+    public static Builder from(StorageGetUrlOptions options) {\n+        return builder()\n+            .accessLevel(options.getAccessLevel())\n+            .targetIdentityId(options.getTargetIdentityId());\n+    }\n+\n+    /**\n+     * Constructs a default instance of the {@link StorageGetUrlOptions}.\n+     * @return default instance of StorageGetUrlOptions\n+     */\n+    public static StorageGetUrlOptions defaultInstance() {\n+        return builder().build();\n+    }\n+\n+    /**\n+     * A utility that can be used to configure and construct immutable\n+     * instances of the {@link StorageGetUrlOptions}, by chaining\n+     * fluent configuration method calls.\n+     */\n+    public static final class Builder {\n+        private StorageAccessLevel accessLevel;\n+        private String targetIdentityId;\n+        private int expires;\n+\n+        Builder() {\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 106}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffc04058fd1b54b5351e11ed1bf11181c51f9eb6", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/ffc04058fd1b54b5351e11ed1bf11181c51f9eb6", "committedDate": "2020-02-11T22:22:32Z", "message": "[Storage] Support getUrl()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d493155341c0525728e622ba3dfe5c61ee417458", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/d493155341c0525728e622ba3dfe5c61ee417458", "committedDate": "2020-02-11T22:56:19Z", "message": "Make getURL non-blocking operation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f010c3bb60e9bb6377d45703537734adda59c31", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/1f010c3bb60e9bb6377d45703537734adda59c31", "committedDate": "2020-02-11T22:56:38Z", "message": "Fix inaccurate copyright year for newly added classes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "d157f01b9119ba3c02f16586a92fc4ef1e3733b9", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/d157f01b9119ba3c02f16586a92fc4ef1e3733b9", "committedDate": "2020-02-11T23:26:22Z", "message": "Minor cleanup"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "d157f01b9119ba3c02f16586a92fc4ef1e3733b9", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/d157f01b9119ba3c02f16586a92fc4ef1e3733b9", "committedDate": "2020-02-11T23:26:22Z", "message": "Minor cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MjAxMjMx", "url": "https://github.com/aws-amplify/amplify-android/pull/248#pullrequestreview-359201231", "createdAt": "2020-02-14T20:29:18Z", "commit": {"oid": "d157f01b9119ba3c02f16586a92fc4ef1e3733b9"}, "state": "DISMISSED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMDoyOToxOFrOFqCzxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMDozNjozNFrOFqC-Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYzMDUzNQ==", "bodyText": "Later there is getRequest().weBelieveItsNotNull() so if the superclass constructor doesn\u2019t require non-null, then this constructor should.", "url": "https://github.com/aws-amplify/amplify-android/pull/248#discussion_r379630535", "createdAt": "2020-02-14T20:29:18Z", "author": {"login": "jamesonwilliams"}, "path": "aws-storage-s3/src/main/java/com/amplifyframework/storage/s3/operation/AWSS3StorageGetPresignedUrlOperation.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.s3.operation;\n+\n+import android.annotation.SuppressLint;\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.storage.StorageException;\n+import com.amplifyframework.storage.operation.StorageGetUrlOperation;\n+import com.amplifyframework.storage.result.StorageGetUrlResult;\n+import com.amplifyframework.storage.s3.request.AWSS3StorageGetPresignedUrlRequest;\n+import com.amplifyframework.storage.s3.service.StorageService;\n+import com.amplifyframework.storage.s3.utils.S3RequestUtils;\n+\n+import java.net.URL;\n+import java.util.concurrent.ExecutorService;\n+\n+/**\n+ * An operation to retrieve pre-signed object URL from AWS S3.\n+ */\n+public final class AWSS3StorageGetPresignedUrlOperation\n+        extends StorageGetUrlOperation<AWSS3StorageGetPresignedUrlRequest> {\n+    private final StorageService storageService;\n+    private final ExecutorService executorService;\n+    private final Consumer<StorageGetUrlResult> onResult;\n+    private final Consumer<StorageException> onError;\n+\n+    /**\n+     * Constructs a new AWSS3StorageGetUrlOperation.\n+     * @param storageService S3 client wrapper\n+     * @param executorService Executor service used for running\n+     *                        blocking operations on a separate thread\n+     * @param request getUrl request parameters\n+     * @param onSuccess Notified when URL is generated.\n+     * @param onError Notified upon URL generation error\n+     */\n+    public AWSS3StorageGetPresignedUrlOperation(\n+            @NonNull StorageService storageService,\n+            @NonNull ExecutorService executorService,\n+            @NonNull AWSS3StorageGetPresignedUrlRequest request,\n+            @NonNull Consumer<StorageGetUrlResult> onSuccess,\n+            @NonNull Consumer<StorageException> onError\n+    ) {\n+        super(request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d157f01b9119ba3c02f16586a92fc4ef1e3733b9"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYzMjA0OQ==", "bodyText": "Should it be called generatePresignedUrl to make clear that the URL doesn\u2019t already exist. Otherwise right now this looks like an accessory method to a cached variable", "url": "https://github.com/aws-amplify/amplify-android/pull/248#discussion_r379632049", "createdAt": "2020-02-14T20:33:29Z", "author": {"login": "jamesonwilliams"}, "path": "aws-storage-s3/src/main/java/com/amplifyframework/storage/s3/service/StorageService.java", "diffHunk": "@@ -32,6 +33,14 @@\n  */\n public interface StorageService {\n \n+    /**\n+     * Generate pre-signed download URL for an object.\n+     * @param serviceKey key to uniquely specify item to generate URL for\n+     * @param expires Number of seconds before URL expires\n+     * @return A pre-signed URL\n+     */\n+    URL getPresignedUrl(@NonNull String serviceKey, int expires);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d157f01b9119ba3c02f16586a92fc4ef1e3733b9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYzMjQxMw==", "bodyText": "Frequently these are ordered towards the top to sit near the constructor(s), if any.", "url": "https://github.com/aws-amplify/amplify-android/pull/248#discussion_r379632413", "createdAt": "2020-02-14T20:34:23Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/storage/result/StorageGetUrlResult.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.result;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.async.Result;\n+\n+import java.net.URL;\n+import java.util.Objects;\n+\n+/**\n+ * The result of a call to get an item's URL from the Storage category.\n+ */\n+public final class StorageGetUrlResult implements Result {\n+    private final URL url;\n+\n+    private StorageGetUrlResult(URL url) {\n+        this.url = url;\n+    }\n+\n+    /**\n+     * Gets the presigned URL.\n+     * @return presigned URL\n+     */\n+    @NonNull\n+    public URL getUrl() {\n+        return url;\n+    }\n+\n+    /**\n+     * Creates a new StorageGetUrlResult containing the presigned URL\n+     * of requested object.\n+     * @param url The presigned URL\n+     * @return A StorageGetUrlResult\n+     */\n+    @NonNull\n+    public static StorageGetUrlResult fromUrl(@NonNull URL url) {\n+        return new StorageGetUrlResult(Objects.requireNonNull(url));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d157f01b9119ba3c02f16586a92fc4ef1e3733b9"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYzMzE5NQ==", "bodyText": "Do you want to validate anything about the provided values before you build the instance? I.e. a range on the int, null-ness is the provided objects?", "url": "https://github.com/aws-amplify/amplify-android/pull/248#discussion_r379633195", "createdAt": "2020-02-14T20:36:34Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/storage/options/StorageGetUrlOptions.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.options;\n+\n+import com.amplifyframework.core.async.Options;\n+import com.amplifyframework.storage.StorageAccessLevel;\n+\n+/**\n+ * Options to specify attributes of get URL API invocation.\n+ */\n+public final class StorageGetUrlOptions implements Options {\n+    private final StorageAccessLevel accessLevel;\n+    private final String targetIdentityId;\n+    private final int expires;\n+\n+    StorageGetUrlOptions(final Builder builder) {\n+        this.accessLevel = builder.getAccessLevel();\n+        this.targetIdentityId = builder.getTargetIdentityId();\n+        this.expires = builder.getExpires();\n+    }\n+\n+    /**\n+     * Gets the storage access level.\n+     * @return Storage access level\n+     */\n+    public StorageAccessLevel getAccessLevel() {\n+        return accessLevel;\n+    }\n+\n+    /**\n+     * Gets the target identity ID.\n+     * @return target identity ID\n+     */\n+    public String getTargetIdentityId() {\n+        return targetIdentityId;\n+    }\n+\n+    /**\n+     * Gets the number of seconds before the URL expires.\n+     * @return number of seconds before the URL expires\n+     */\n+    public int getExpires() {\n+        return expires;\n+    }\n+\n+    /**\n+     * Factory method to create a new instance of the\n+     * {@link StorageGetUrlOptions.Builder}.  The builder can be\n+     * used to configure properties and then construct a new immutable\n+     * instance of the StorageGetUrlOptions.\n+     * @return An instance of the {@link StorageGetUrlOptions.Builder}\n+     */\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    /**\n+     * Factory method to create builder which is configured to prepare\n+     * object instances with the same field values as the provided\n+     * options. This can be used as a starting ground to create a\n+     * new clone of the provided options, which shares some common\n+     * configuration.\n+     * @param options Options to populate into a new builder configuration\n+     * @return A Builder instance that has been configured using the\n+     *         values in the provided options\n+     */\n+    public static Builder from(StorageGetUrlOptions options) {\n+        return builder()\n+            .accessLevel(options.getAccessLevel())\n+            .targetIdentityId(options.getTargetIdentityId())\n+            .expires(options.getExpires());\n+    }\n+\n+    /**\n+     * Constructs a default instance of the {@link StorageGetUrlOptions}.\n+     * @return default instance of StorageGetUrlOptions\n+     */\n+    public static StorageGetUrlOptions defaultInstance() {\n+        return builder().build();\n+    }\n+\n+    /**\n+     * A utility that can be used to configure and construct immutable\n+     * instances of the {@link StorageGetUrlOptions}, by chaining\n+     * fluent configuration method calls.\n+     */\n+    public static final class Builder {\n+        private StorageAccessLevel accessLevel;\n+        private String targetIdentityId;\n+        private int expires;\n+\n+        /**\n+         * Configures the storage access level to set on new\n+         * StorageGetUrlOptions instances.\n+         * @param accessLevel Storage access level for new StorageGetUrlOptions instances\n+         * @return Current Builder instance, for fluent method chaining\n+         */\n+        public Builder accessLevel(StorageAccessLevel accessLevel) {\n+            this.accessLevel = accessLevel;\n+            return this;\n+        }\n+\n+        /**\n+         * Configures the target identity ID that will be used on newly\n+         * built StorageGetUrlOptions.\n+         * @param targetIdentityId Target identity ID for new StorageGetUrlOptions instances\n+         * @return Current Builder instance, for fluent method chaining\n+         */\n+        public Builder targetIdentityId(String targetIdentityId) {\n+            this.targetIdentityId = targetIdentityId;\n+            return this;\n+        }\n+\n+        /**\n+         * Configures the number of seconds left until URL expires on new\n+         * StorageGetUrlOptions instances.\n+         * StorageGetUrlOptions instances.\n+         * @param accessLevel Storage access level for new StorageGetUrlOptions instances\n+         * @return Current Builder instance, for fluent method chaining\n+         */\n+        public Builder expires(int accessLevel) {\n+            this.expires = expires;\n+            return this;\n+        }\n+\n+        /**\n+         * Constructs and returns a new immutable instance of the\n+         * StorageGetUrlOptions, using the configurations that\n+         * have been provided the current instance of the Builder.\n+         * @return A new immutable instance of StorageGetUrlOptions\n+         */\n+        public StorageGetUrlOptions build() {\n+            return new StorageGetUrlOptions(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d157f01b9119ba3c02f16586a92fc4ef1e3733b9"}, "originalPosition": 146}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "434c411bd1cf260538e2c3024d802f65768c9774", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/434c411bd1cf260538e2c3024d802f65768c9774", "committedDate": "2020-02-14T22:30:15Z", "message": "Merge branch 'master' of https://github.com/aws-amplify/amplify-android into geturl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55cbd1fbae54cf0d0bf1361de69a22ec19cf8284", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/55cbd1fbae54cf0d0bf1361de69a22ec19cf8284", "committedDate": "2020-02-27T19:11:52Z", "message": "Merge branch 'master' of https://github.com/aws-amplify/amplify-android into geturl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6047604b361f1efcab8ef871769589a439b89c28", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/6047604b361f1efcab8ef871769589a439b89c28", "committedDate": "2020-02-27T23:29:53Z", "message": "Add getUrl to Storage component test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afc024c0d1e2cecddae70a2f514fadad0d9098e3", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/afc024c0d1e2cecddae70a2f514fadad0d9098e3", "committedDate": "2020-02-27T23:36:03Z", "message": "Fix error in get URL options"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52d855b8261e191d979c8ff63069155cadd0b5b4", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/52d855b8261e191d979c8ff63069155cadd0b5b4", "committedDate": "2020-02-27T23:51:51Z", "message": "Minor fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5ac332b08f4d9531972f3b2b4c6e3ff6e1c8884", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/f5ac332b08f4d9531972f3b2b4c6e3ff6e1c8884", "committedDate": "2020-02-28T19:05:00Z", "message": "Merge branch 'master' of https://github.com/aws-amplify/amplify-android into geturl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02653e56d8047d4fd96482c09cfabb2d4f553ce7", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/02653e56d8047d4fd96482c09cfabb2d4f553ce7", "committedDate": "2020-02-28T19:30:25Z", "message": "Update StorageGetUrlOptions to match refactored pattern"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "02653e56d8047d4fd96482c09cfabb2d4f553ce7", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/02653e56d8047d4fd96482c09cfabb2d4f553ce7", "committedDate": "2020-02-28T19:30:25Z", "message": "Update StorageGetUrlOptions to match refactored pattern"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NjQyOTg2", "url": "https://github.com/aws-amplify/amplify-android/pull/248#pullrequestreview-366642986", "createdAt": "2020-02-28T19:46:29Z", "commit": {"oid": "02653e56d8047d4fd96482c09cfabb2d4f553ce7"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTo0NjoyOVrOFwAw4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTo0NjoyOVrOFwAw4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4ODQ4MA==", "bodyText": "It would probably work without this random URL if you use Robolectric, which will provide an implementation of andorid's URL. (But, Robolectric is slow. So I do like your solution, too.)\nYou could pull this out to a RandomURL.url() test util! Like:\npublic static URL url() {\n    try {\n        return new URL(... params ...);\n    } catch (MalformedURLException exception) {\n        throw new RuntimeException(exception);\n    }\n}", "url": "https://github.com/aws-amplify/amplify-android/pull/248#discussion_r385888480", "createdAt": "2020-02-28T19:46:29Z", "author": {"login": "jamesonwilliams"}, "path": "aws-storage-s3/src/test/java/com/amplifyframework/storage/s3/StorageComponentTest.java", "diffHunk": "@@ -93,6 +97,48 @@ private static StorageCategoryConfiguration buildConfiguration() {\n         return configuration;\n     }\n \n+    /**\n+     * Test that calling get URL method from Storage category correctly invokes\n+     * the registered AWSS3StoragePlugin instance and returns a {@link URL}\n+     * instance for that download.\n+     * @throws StorageException when an error is encountered while generating\n+     *         URL from storage service\n+     */\n+    @Test\n+    public void testGenerateUrlGetsPresignedUrl() throws StorageException {\n+        final String fromRemoteKey = RandomString.string();\n+        final URL urlFromRemoteKey;\n+        try {\n+            // URL instance cannot be mocked so just make one\n+            // https://{random-host}:0/{fromRemoteKey}\n+            urlFromRemoteKey = new URL(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02653e56d8047d4fd96482c09cfabb2d4f553ce7"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2808, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}