{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNTU0MzE1", "number": 505, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo0OToyNlrOD-w2Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjoxMzoyMFrOD-xM-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTM4NjUxOnYy", "diffSide": "RIGHT", "path": "amplify-tools/.gitignore", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo0OToyNlrOGZEILg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo1Nzo1M1rOGZEVtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzNTIxNA==", "bodyText": "This is a subset of the main .gitignore, kill it?", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428935214", "createdAt": "2020-05-21T21:49:26Z", "author": {"login": "jpignata"}, "path": "amplify-tools/.gitignore", "diffHunk": "@@ -0,0 +1,9 @@\n+*.iml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzODY3Ng==", "bodyText": "Some discussion here -- https://stackoverflow.com/a/3307252/695787\nThe reasons Jakub provides to use multiple .gitignore don't apply to us, here, I don't think.\nSo I'd kill this.", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428938676", "createdAt": "2020-05-21T21:57:53Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/.gitignore", "diffHunk": "@@ -0,0 +1,9 @@\n+*.iml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzNTIxNA=="}, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTM4NzkyOnYy", "diffSide": "RIGHT", "path": "amplify-tools/amplify-tools-gradle-plugin/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo1MDowM1rOGZEJEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzo1MTo1MFrOGZGe1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzNTQ0Mg==", "bodyText": "Sup with the \"-SNAPSHOT?\"", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428935442", "createdAt": "2020-05-21T21:50:03Z", "author": {"login": "jpignata"}, "path": "amplify-tools/amplify-tools-gradle-plugin/build.gradle", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+apply plugin: 'groovy'\n+apply plugin: 'idea'\n+apply plugin: 'java-gradle-plugin'\n+apply plugin: 'maven-publish'\n+\n+apply from: rootProject.file('gradle-mvn-push.gradle')\n+\n+sourceSets.main.groovy.srcDirs = [\"src/main/groovy\"]\n+\n+dependencies {\n+    implementation 'androidx.appcompat:appcompat:1.1.0'\n+}\n+\n+publishing {\n+    publications {\n+        pluginPublication(MavenPublication) {\n+            from components.java\n+            groupId 'com.amplifyframework'\n+            artifactId 'amplify-tools-gradle-plugin'\n+            version VERSION_NAME + \"-SNAPSHOT\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3Mzc4MQ==", "bodyText": "Removing", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428973781", "createdAt": "2020-05-21T23:51:50Z", "author": {"login": "nikhname"}, "path": "amplify-tools/amplify-tools-gradle-plugin/build.gradle", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+apply plugin: 'groovy'\n+apply plugin: 'idea'\n+apply plugin: 'java-gradle-plugin'\n+apply plugin: 'maven-publish'\n+\n+apply from: rootProject.file('gradle-mvn-push.gradle')\n+\n+sourceSets.main.groovy.srcDirs = [\"src/main/groovy\"]\n+\n+dependencies {\n+    implementation 'androidx.appcompat:appcompat:1.1.0'\n+}\n+\n+publishing {\n+    publications {\n+        pluginPublication(MavenPublication) {\n+            from components.java\n+            groupId 'com.amplifyframework'\n+            artifactId 'amplify-tools-gradle-plugin'\n+            version VERSION_NAME + \"-SNAPSHOT\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzNTQ0Mg=="}, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTM4OTI3OnYy", "diffSide": "RIGHT", "path": "amplify-tools/amplify-tools-gradle-plugin/gradle.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo1MDozNVrOGZEJ7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo1MDozNVrOGZEJ7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzNTY2MQ==", "bodyText": "Lowercase t tools, please.", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428935661", "createdAt": "2020-05-21T21:50:35Z", "author": {"login": "jpignata"}, "path": "amplify-tools/amplify-tools-gradle-plugin/gradle.properties", "diffHunk": "@@ -0,0 +1,4 @@\n+POM_ARTIFACT_ID=amplify-tools-gradle-plugin\n+POM_NAME=Amplify Tools for Android - Gradle Plugin", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTM4OTcxOnYy", "diffSide": "RIGHT", "path": "amplify-tools/amplify-tools-gradle-plugin/proguard-rules.pro", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo1MDo0N1rOGZEKNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowMjo1NVrOGZEdnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzNTczMw==", "bodyText": "Is this needed?", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428935733", "createdAt": "2020-05-21T21:50:47Z", "author": {"login": "jpignata"}, "path": "amplify-tools/amplify-tools-gradle-plugin/proguard-rules.pro", "diffHunk": "@@ -0,0 +1,21 @@\n+# Add project specific ProGuard rules here.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MDcwMQ==", "bodyText": "Doubtful, for a plugin. Since the plugin will only be deployed to a developer's machine, and not a customer's mobile phone. If we succeed to integrate Proguard here, it will purely hamper our ability to debug the plugin, while providing no benefit.\nTLDR we can safely remove this file.", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428940701", "createdAt": "2020-05-21T22:02:55Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/amplify-tools-gradle-plugin/proguard-rules.pro", "diffHunk": "@@ -0,0 +1,21 @@\n+# Add project specific ProGuard rules here.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzNTczMw=="}, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTM5MTMxOnYy", "diffSide": "RIGHT", "path": "amplify-tools/gradle.properties", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo1MTozMlrOGZELNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzo1NDoyM1rOGZGhdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzNTk4OQ==", "bodyText": "What is this?", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428935989", "createdAt": "2020-05-21T21:51:32Z", "author": {"login": "jpignata"}, "path": "amplify-tools/gradle.properties", "diffHunk": "@@ -0,0 +1,36 @@\n+# Project-wide Gradle settings.\n+# IDE (e.g. Android Studio) users:\n+# Gradle settings configured through the IDE *will override*\n+# any settings specified in this file.\n+# For more details on how to configure your build environment visit\n+# http://www.gradle.org/docs/current/userguide/build_environment.html\n+# Specifies the JVM arguments used for the daemon process.\n+# The setting is particularly useful for tweaking memory settings.\n+org.gradle.jvmargs=-Xmx1536m\n+# When configured, Gradle will run in incubating parallel mode.\n+# This option should only be used with decoupled projects. More details, visit\n+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n+# org.gradle.parallel=true\n+# AndroidX package structure to make it clearer which packages are bundled with the\n+# Android operating system, and which are packaged with your app's APK\n+# https://developer.android.com/topic/libraries/support-library/androidx-rn\n+android.useAndroidX=true\n+# Automatically convert third-party libraries to use AndroidX\n+android.enableJetifier=true\n+\n+GROUP=com.amplifyframework\n+VERSION_NAME=1.0.0\n+AWS_CORE_SDK_VERSION=2.16.3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3NDQ1NA==", "bodyText": "Removing", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428974454", "createdAt": "2020-05-21T23:54:23Z", "author": {"login": "nikhname"}, "path": "amplify-tools/gradle.properties", "diffHunk": "@@ -0,0 +1,36 @@\n+# Project-wide Gradle settings.\n+# IDE (e.g. Android Studio) users:\n+# Gradle settings configured through the IDE *will override*\n+# any settings specified in this file.\n+# For more details on how to configure your build environment visit\n+# http://www.gradle.org/docs/current/userguide/build_environment.html\n+# Specifies the JVM arguments used for the daemon process.\n+# The setting is particularly useful for tweaking memory settings.\n+org.gradle.jvmargs=-Xmx1536m\n+# When configured, Gradle will run in incubating parallel mode.\n+# This option should only be used with decoupled projects. More details, visit\n+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n+# org.gradle.parallel=true\n+# AndroidX package structure to make it clearer which packages are bundled with the\n+# Android operating system, and which are packaged with your app's APK\n+# https://developer.android.com/topic/libraries/support-library/androidx-rn\n+android.useAndroidX=true\n+# Automatically convert third-party libraries to use AndroidX\n+android.enableJetifier=true\n+\n+GROUP=com.amplifyframework\n+VERSION_NAME=1.0.0\n+AWS_CORE_SDK_VERSION=2.16.3", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzNTk4OQ=="}, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQxMDY0OnYy", "diffSide": "RIGHT", "path": "amplify-tools/amplify-tools-gradle-plugin/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo1ODo0NlrOGZEXHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo1ODo0NlrOGZEXHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzOTAzOQ==", "bodyText": "The most trivial of nits: prefer single quotes?", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428939039", "createdAt": "2020-05-21T21:58:46Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/amplify-tools-gradle-plugin/build.gradle", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+apply plugin: 'groovy'\n+apply plugin: 'idea'\n+apply plugin: 'java-gradle-plugin'\n+apply plugin: 'maven-publish'\n+\n+apply from: rootProject.file('gradle-mvn-push.gradle')\n+\n+sourceSets.main.groovy.srcDirs = [\"src/main/groovy\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQxMjcyOnYy", "diffSide": "RIGHT", "path": "amplify-tools/amplify-tools-gradle-plugin/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo1OTo0MlrOGZEYcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo1OTo0MlrOGZEYcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzOTM3Nw==", "bodyText": "I doubt this is used. I think you could kill the whole block.", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428939377", "createdAt": "2020-05-21T21:59:42Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/amplify-tools-gradle-plugin/build.gradle", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+apply plugin: 'groovy'\n+apply plugin: 'idea'\n+apply plugin: 'java-gradle-plugin'\n+apply plugin: 'maven-publish'\n+\n+apply from: rootProject.file('gradle-mvn-push.gradle')\n+\n+sourceSets.main.groovy.srcDirs = [\"src/main/groovy\"]\n+\n+dependencies {\n+    implementation 'androidx.appcompat:appcompat:1.1.0'\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQxNjU0OnYy", "diffSide": "RIGHT", "path": "amplify-tools/amplify-tools-gradle-plugin/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowMDo1NFrOGZEanA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjozMzo1N1rOGZFHtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzOTkzMg==", "bodyText": "We have a default publishing rule available int configuration/publishing.gradle. If you import that file, at the top of this one, then you don't need a separate block, here.\nThe other modules use gradle.properties to define Maven publishing fields, and then include that central publishing script, which is a more elaborate version of this block, here.\n\nUpdate: oh, right, this is a separate project. Never-mind!", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428939932", "createdAt": "2020-05-21T22:00:54Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/amplify-tools-gradle-plugin/build.gradle", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+apply plugin: 'groovy'\n+apply plugin: 'idea'\n+apply plugin: 'java-gradle-plugin'\n+apply plugin: 'maven-publish'\n+\n+apply from: rootProject.file('gradle-mvn-push.gradle')\n+\n+sourceSets.main.groovy.srcDirs = [\"src/main/groovy\"]\n+\n+dependencies {\n+    implementation 'androidx.appcompat:appcompat:1.1.0'\n+}\n+\n+publishing {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk1MTQ3OQ==", "bodyText": "you're not thinking fourth dimensionally", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428951479", "createdAt": "2020-05-21T22:33:57Z", "author": {"login": "jpignata"}, "path": "amplify-tools/amplify-tools-gradle-plugin/build.gradle", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+apply plugin: 'groovy'\n+apply plugin: 'idea'\n+apply plugin: 'java-gradle-plugin'\n+apply plugin: 'maven-publish'\n+\n+apply from: rootProject.file('gradle-mvn-push.gradle')\n+\n+sourceSets.main.groovy.srcDirs = [\"src/main/groovy\"]\n+\n+dependencies {\n+    implementation 'androidx.appcompat:appcompat:1.1.0'\n+}\n+\n+publishing {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzOTkzMg=="}, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQxODAxOnYy", "diffSide": "RIGHT", "path": "amplify-tools/amplify-tools-gradle-plugin/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowMTozOFrOGZEbqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzo0NzowM1rOGZGZtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MDIwMA==", "bodyText": "Hm, Groovy, compatible with Java 1.7? Or does \"1.7\" mean version 51 byte code? Are these needed?", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428940200", "createdAt": "2020-05-21T22:01:38Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/amplify-tools-gradle-plugin/build.gradle", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+apply plugin: 'groovy'\n+apply plugin: 'idea'\n+apply plugin: 'java-gradle-plugin'\n+apply plugin: 'maven-publish'\n+\n+apply from: rootProject.file('gradle-mvn-push.gradle')\n+\n+sourceSets.main.groovy.srcDirs = [\"src/main/groovy\"]\n+\n+dependencies {\n+    implementation 'androidx.appcompat:appcompat:1.1.0'\n+}\n+\n+publishing {\n+    publications {\n+        pluginPublication(MavenPublication) {\n+            from components.java\n+            groupId 'com.amplifyframework'\n+            artifactId 'amplify-tools-gradle-plugin'\n+            version VERSION_NAME + \"-SNAPSHOT\"\n+        }\n+    }\n+}\n+\n+sourceCompatibility = \"1.7\"\n+targetCompatibility = \"1.7\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk3MjQ2OQ==", "bodyText": "It means the plugin is compiled with Java 7, its necessary so that we can fix down the plugin compatibility", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428972469", "createdAt": "2020-05-21T23:47:03Z", "author": {"login": "nikhname"}, "path": "amplify-tools/amplify-tools-gradle-plugin/build.gradle", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+apply plugin: 'groovy'\n+apply plugin: 'idea'\n+apply plugin: 'java-gradle-plugin'\n+apply plugin: 'maven-publish'\n+\n+apply from: rootProject.file('gradle-mvn-push.gradle')\n+\n+sourceSets.main.groovy.srcDirs = [\"src/main/groovy\"]\n+\n+dependencies {\n+    implementation 'androidx.appcompat:appcompat:1.1.0'\n+}\n+\n+publishing {\n+    publications {\n+        pluginPublication(MavenPublication) {\n+            from components.java\n+            groupId 'com.amplifyframework'\n+            artifactId 'amplify-tools-gradle-plugin'\n+            version VERSION_NAME + \"-SNAPSHOT\"\n+        }\n+    }\n+}\n+\n+sourceCompatibility = \"1.7\"\n+targetCompatibility = \"1.7\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MDIwMA=="}, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQyMzgzOnYy", "diffSide": "RIGHT", "path": "amplify-tools/amplify-tools-gradle-plugin/src/main/groovy/com/amplifyframework/tools/gradle/plugin/amplifytools.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowNDowMVrOGZEfXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowNDowMVrOGZEfXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MTE0OQ==", "bodyText": "This is a weird name for a groovy class. Does it match some other token, somewhere else? Is this intentional? I would expect this to be in Pascal case, like Plugin<Project> is. AmplifyToolsPlugin implements Plugin<Project>, something like that?", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428941149", "createdAt": "2020-05-21T22:04:01Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/amplify-tools-gradle-plugin/src/main/groovy/com/amplifyframework/tools/gradle/plugin/amplifytools.groovy", "diffHunk": "@@ -0,0 +1,246 @@\n+import org.gradle.api.Plugin\n+import org.gradle.api.Project\n+import org.apache.tools.ant.taskdefs.condition.Os\n+import groovy.json.JsonSlurper\n+import groovy.json.JsonOutput\n+\n+class amplifytools implements Plugin<Project> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQyODAxOnYy", "diffSide": "RIGHT", "path": "amplify-tools/amplify-tools-gradle-plugin/src/main/groovy/com/amplifyframework/tools/gradle/plugin/amplifytools.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowNTo1MVrOGZEiFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowNTo1MVrOGZEiFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MTg0NQ==", "bodyText": "You actually run npx, not node, later. So, it'd be better to check if npx is available.\nWhen I used this plugin, npx wasn't available.\nI do have node installed, but that's only part of the requirement.", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428941845", "createdAt": "2020-05-21T22:05:51Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/amplify-tools-gradle-plugin/src/main/groovy/com/amplifyframework/tools/gradle/plugin/amplifytools.groovy", "diffHunk": "@@ -0,0 +1,246 @@\n+import org.gradle.api.Plugin\n+import org.gradle.api.Project\n+import org.apache.tools.ant.taskdefs.condition.Os\n+import groovy.json.JsonSlurper\n+import groovy.json.JsonOutput\n+\n+class amplifytools implements Plugin<Project> {\n+    void apply(Project project) {\n+        def doesNodeExist = true\n+        def doesGradleConfigExist\n+\n+        // profile name can be changed in amplify-gradle-config\n+        def profile = 'default'\n+        def accessKeyId = null\n+        def secretAccessKey = null\n+        def region = null\n+        def envName = 'amplify'\n+        def syncEnabled = 'true'\n+\n+        project.task('verifyNode') {\n+            try {\n+                project.exec {\n+                    commandLine 'node', '-v'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQzMDUyOnYy", "diffSide": "RIGHT", "path": "amplify-tools/amplify-tools-gradle-plugin/src/main/groovy/com/amplifyframework/tools/gradle/plugin/amplifytools.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowNzowMFrOGZEjwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowNzowMFrOGZEjwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MjI3NA==", "bodyText": "Nit: in all places, substitute if( with if (.", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428942274", "createdAt": "2020-05-21T22:07:00Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/amplify-tools-gradle-plugin/src/main/groovy/com/amplifyframework/tools/gradle/plugin/amplifytools.groovy", "diffHunk": "@@ -0,0 +1,246 @@\n+import org.gradle.api.Plugin\n+import org.gradle.api.Project\n+import org.apache.tools.ant.taskdefs.condition.Os\n+import groovy.json.JsonSlurper\n+import groovy.json.JsonOutput\n+\n+class amplifytools implements Plugin<Project> {\n+    void apply(Project project) {\n+        def doesNodeExist = true\n+        def doesGradleConfigExist\n+\n+        // profile name can be changed in amplify-gradle-config\n+        def profile = 'default'\n+        def accessKeyId = null\n+        def secretAccessKey = null\n+        def region = null\n+        def envName = 'amplify'\n+        def syncEnabled = 'true'\n+\n+        project.task('verifyNode') {\n+            try {\n+                project.exec {\n+                    commandLine 'node', '-v'\n+                    standardOutput = new ByteArrayOutputStream()\n+                }\n+            } catch (commandLineFailure) {\n+                doesNodeExist = false\n+                println(\"Node is not installed. Visit https://nodejs.org/en/download/ to install it\")\n+            }\n+        }\n+\n+        project.task('createAmplifyApp') {\n+            doesGradleConfigExist = project.file('amplify-gradle-config.json').isFile()\n+            if (doesNodeExist && !doesGradleConfigExist) {\n+                if(Os.isFamily(Os.FAMILY_WINDOWS)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQzNTEyOnYy", "diffSide": "RIGHT", "path": "amplify-tools/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowOTowMFrOGZEmlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowOTowMFrOGZEmlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0Mjk5Nw==", "bodyText": "Kill this", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428942997", "createdAt": "2020-05-21T22:09:00Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/build.gradle", "diffHunk": "@@ -0,0 +1,27 @@\n+// Top-level build file where you can add configuration options common to all sub-projects/modules.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQzNTQzOnYy", "diffSide": "RIGHT", "path": "amplify-tools/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowOTowOVrOGZEmzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowOTowOVrOGZEmzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MzA1NQ==", "bodyText": "Kill this", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428943055", "createdAt": "2020-05-21T22:09:09Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/build.gradle", "diffHunk": "@@ -0,0 +1,27 @@\n+// Top-level build file where you can add configuration options common to all sub-projects/modules.\n+\n+buildscript {\n+    repositories {\n+        google()\n+        jcenter()\n+        \n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:3.6.3'\n+        \n+        // NOTE: Do not place your application dependencies here; they belong\n+        // in the individual module build.gradle files", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQzNjAxOnYy", "diffSide": "RIGHT", "path": "amplify-tools/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowOToyNFrOGZEnMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjowOToyNFrOGZEnMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0MzE1NA==", "bodyText": "kill this empty line", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428943154", "createdAt": "2020-05-21T22:09:24Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/build.gradle", "diffHunk": "@@ -0,0 +1,27 @@\n+// Top-level build file where you can add configuration options common to all sub-projects/modules.\n+\n+buildscript {\n+    repositories {\n+        google()\n+        jcenter()\n+        \n+    }\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:3.6.3'\n+        \n+        // NOTE: Do not place your application dependencies here; they belong\n+        // in the individual module build.gradle files\n+    }\n+}\n+\n+allprojects {\n+    repositories {\n+        google()\n+        jcenter()\n+        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQ0MTEwOnYy", "diffSide": "RIGHT", "path": "amplify-tools/gradle-mvn-push.gradle", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjoxMjowMFrOGZEqpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMTowODozNlrOGZHqcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0NDAzOQ==", "bodyText": "It is a little troubling to watch a second copy of this script come into the git repository. Is this identically the same as the configuration/publishing.gradle in the main project?\nI don't think there's anything ~reasonable we can do to prevent it, unfortunately.\nWe can make sure that the files are identical in contents and name, thought.\nThis one at least has a different name.", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428944039", "createdAt": "2020-05-21T22:12:00Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/gradle-mvn-push.gradle", "diffHunk": "@@ -0,0 +1,233 @@\n+/*\n+ * Copyright 2013 Chris Banes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk1MDYzNg==", "bodyText": "We could symlink it, no?", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428950636", "createdAt": "2020-05-21T22:31:24Z", "author": {"login": "jpignata"}, "path": "amplify-tools/gradle-mvn-push.gradle", "diffHunk": "@@ -0,0 +1,233 @@\n+/*\n+ * Copyright 2013 Chris Banes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0NDAzOQ=="}, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4MzA1Nw==", "bodyText": "Yea, I guess I like that better. It's ~a little weird, but it solves the problem.", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428983057", "createdAt": "2020-05-22T00:27:03Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/gradle-mvn-push.gradle", "diffHunk": "@@ -0,0 +1,233 @@\n+/*\n+ * Copyright 2013 Chris Banes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0NDAzOQ=="}, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk5MzEzNg==", "bodyText": "We would be able to use configuration/publishing.gradle if not for the publishing block that seems to require an aar artifact. I think it makes sense to make the file identical in name and content except for that block", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428993136", "createdAt": "2020-05-22T01:08:36Z", "author": {"login": "nikhname"}, "path": "amplify-tools/gradle-mvn-push.gradle", "diffHunk": "@@ -0,0 +1,233 @@\n+/*\n+ * Copyright 2013 Chris Banes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0NDAzOQ=="}, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQ0MjYxOnYy", "diffSide": "RIGHT", "path": "amplify-tools/gradle-mvn-push.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjoxMjozN1rOGZErig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMDoyNzozMVrOGZHDhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0NDI2Ng==", "bodyText": "Ah yea, it not only has a different file name -- but the contents of this script is different from configuration/publishing.gradle, too.", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428944266", "createdAt": "2020-05-21T22:12:37Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/gradle-mvn-push.gradle", "diffHunk": "@@ -0,0 +1,233 @@\n+/*\n+ * Copyright 2013 Chris Banes\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: 'maven'\n+apply plugin: 'signing'\n+\n+version = VERSION_NAME\n+group = GROUP\n+\n+def isReleaseBuild() {\n+    return VERSION_NAME.contains(\"SNAPSHOT\") == false\n+}\n+\n+def getReleaseRepositoryUrl() {\n+    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL :\n+            \"https://aws.oss.sonatype.org/service/local/staging/deploy/maven2/\"\n+}\n+\n+def getSnapshotRepositoryUrl() {\n+    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL :\n+            \"https://aws.oss.sonatype.org/content/repositories/snapshots/\"\n+}\n+\n+def getRepositoryUsername() {\n+    return hasProperty('SONATYPE_NEXUS_USERNAME') ? SONATYPE_NEXUS_USERNAME : \"\"\n+}\n+\n+def getRepositoryPassword() {\n+    return hasProperty('SONATYPE_NEXUS_PASSWORD') ? SONATYPE_NEXUS_PASSWORD : \"\"\n+}\n+\n+archivesBaseName = POM_ARTIFACT_ID\n+\n+afterEvaluate { project ->\n+    uploadArchives {\n+        repositories {\n+            if (project.hasProperty('SONATYPE_NEXUS_USERNAME')) {\n+                mavenDeployer {\n+                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }\n+\n+                    pom.groupId = GROUP\n+                    pom.artifactId = POM_ARTIFACT_ID\n+                    pom.version = VERSION_NAME\n+\n+                    repository(url: getReleaseRepositoryUrl()) {\n+                        authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())\n+                    }\n+                    snapshotRepository(url: getSnapshotRepositoryUrl()) {\n+                        authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())\n+                    }\n+\n+                    pom.project {\n+                        name POM_NAME\n+                        packaging POM_PACKAGING\n+                        description POM_DESCRIPTION\n+                        url POM_URL\n+\n+                        scm {\n+                            url POM_SCM_URL\n+                            connection POM_SCM_CONNECTION\n+                            developerConnection POM_SCM_DEV_CONNECTION\n+                        }\n+\n+                        licenses {\n+                            license {\n+                                name POM_LICENCE_NAME\n+                                url POM_LICENCE_URL\n+                                distribution POM_LICENCE_DIST\n+                            }\n+                        }\n+\n+                        developers {\n+                            developer {\n+                                id POM_DEVELOPER_ID\n+                                organizationUrl POM_DEVELOPER_ORGANIZATION_URL\n+                                roles {\n+                                    role \"developer\"\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+            } else {\n+                mavenInstaller {\n+                    pom.groupId = GROUP\n+                    pom.artifactId = POM_ARTIFACT_ID\n+                    pom.version = VERSION_NAME\n+                }\n+            }\n+        }\n+    }\n+\n+    signing {\n+        required { isReleaseBuild() && gradle.taskGraph.hasTask(\"uploadArchives\") }\n+        sign configurations.archives\n+    }\n+\n+    if (project.getPlugins().hasPlugin('com.android.application') ||\n+            project.getPlugins().hasPlugin('com.android.library')) {\n+        task install(type: Upload, dependsOn: assemble) {\n+            repositories.mavenInstaller {\n+                configuration = configurations.archives\n+\n+                pom.groupId = GROUP\n+                pom.artifactId = POM_ARTIFACT_ID\n+                pom.version = VERSION_NAME\n+\n+                pom.project {\n+                    name POM_NAME\n+                    packaging POM_PACKAGING\n+                    description POM_DESCRIPTION\n+                    url POM_URL\n+\n+                    scm {\n+                        url POM_SCM_URL\n+                        connection POM_SCM_CONNECTION\n+                        developerConnection POM_SCM_DEV_CONNECTION\n+                    }\n+\n+                    licenses {\n+                        license {\n+                            name POM_LICENCE_NAME\n+                            url POM_LICENCE_URL\n+                            distribution POM_LICENCE_DIST\n+                        }\n+                    }\n+\n+                    developers {\n+                        developer {\n+                            id POM_DEVELOPER_ID\n+                            organization POM_DEVELOPER_ORGANIZATION\n+                            organizationUrl POM_DEVELOPER_ORGANIZATION_URL\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        task androidJavadocs(type: Javadoc) {\n+            source = android.sourceSets.main.java.source\n+            classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n+        }\n+\n+        task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {\n+            classifier = 'javadoc'\n+            from androidJavadocs.destinationDir\n+        }\n+\n+        task androidSourcesJar(type: Jar) {\n+            classifier = 'sources'\n+            from android.sourceSets.main.java.source\n+        }\n+    } else {\n+        install {\n+            repositories.mavenInstaller {\n+                pom.groupId = GROUP\n+                pom.artifactId = POM_ARTIFACT_ID\n+                pom.version = VERSION_NAME\n+\n+                pom.project {\n+                    name POM_NAME\n+                    packaging POM_PACKAGING\n+                    description POM_DESCRIPTION\n+                    url POM_URL\n+\n+                    scm {\n+                        url POM_SCM_URL\n+                        connection POM_SCM_CONNECTION\n+                        developerConnection POM_SCM_DEV_CONNECTION\n+                    }\n+\n+                    licenses {\n+                        license {\n+                            name POM_LICENCE_NAME\n+                            url POM_LICENCE_URL\n+                            distribution POM_LICENCE_DIST\n+                        }\n+                    }\n+\n+                    developers {\n+                        developer {\n+                            id POM_DEVELOPER_ID\n+                            organization POM_DEVELOPER_ORGANIZATION\n+                            organizationUrl POM_DEVELOPER_ORGANIZATION_URL\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        task sourcesJar(type: Jar, dependsOn: classes) {\n+            classifier = 'sources'\n+            from sourceSets.main.allSource\n+        }\n+\n+        task javadocJar(type: Jar, dependsOn: javadoc) {\n+            classifier = 'javadoc'\n+            from javadoc.destinationDir\n+        }\n+    }\n+\n+    if (JavaVersion.current().isJava8Compatible()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 215}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk1MDcyNw==", "bodyText": "Oh, nevermind.", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428950727", "createdAt": "2020-05-21T22:31:39Z", "author": {"login": "jpignata"}, "path": "amplify-tools/gradle-mvn-push.gradle", "diffHunk": "@@ -0,0 +1,233 @@\n+/*\n+ * Copyright 2013 Chris Banes\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: 'maven'\n+apply plugin: 'signing'\n+\n+version = VERSION_NAME\n+group = GROUP\n+\n+def isReleaseBuild() {\n+    return VERSION_NAME.contains(\"SNAPSHOT\") == false\n+}\n+\n+def getReleaseRepositoryUrl() {\n+    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL :\n+            \"https://aws.oss.sonatype.org/service/local/staging/deploy/maven2/\"\n+}\n+\n+def getSnapshotRepositoryUrl() {\n+    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL :\n+            \"https://aws.oss.sonatype.org/content/repositories/snapshots/\"\n+}\n+\n+def getRepositoryUsername() {\n+    return hasProperty('SONATYPE_NEXUS_USERNAME') ? SONATYPE_NEXUS_USERNAME : \"\"\n+}\n+\n+def getRepositoryPassword() {\n+    return hasProperty('SONATYPE_NEXUS_PASSWORD') ? SONATYPE_NEXUS_PASSWORD : \"\"\n+}\n+\n+archivesBaseName = POM_ARTIFACT_ID\n+\n+afterEvaluate { project ->\n+    uploadArchives {\n+        repositories {\n+            if (project.hasProperty('SONATYPE_NEXUS_USERNAME')) {\n+                mavenDeployer {\n+                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }\n+\n+                    pom.groupId = GROUP\n+                    pom.artifactId = POM_ARTIFACT_ID\n+                    pom.version = VERSION_NAME\n+\n+                    repository(url: getReleaseRepositoryUrl()) {\n+                        authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())\n+                    }\n+                    snapshotRepository(url: getSnapshotRepositoryUrl()) {\n+                        authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())\n+                    }\n+\n+                    pom.project {\n+                        name POM_NAME\n+                        packaging POM_PACKAGING\n+                        description POM_DESCRIPTION\n+                        url POM_URL\n+\n+                        scm {\n+                            url POM_SCM_URL\n+                            connection POM_SCM_CONNECTION\n+                            developerConnection POM_SCM_DEV_CONNECTION\n+                        }\n+\n+                        licenses {\n+                            license {\n+                                name POM_LICENCE_NAME\n+                                url POM_LICENCE_URL\n+                                distribution POM_LICENCE_DIST\n+                            }\n+                        }\n+\n+                        developers {\n+                            developer {\n+                                id POM_DEVELOPER_ID\n+                                organizationUrl POM_DEVELOPER_ORGANIZATION_URL\n+                                roles {\n+                                    role \"developer\"\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+            } else {\n+                mavenInstaller {\n+                    pom.groupId = GROUP\n+                    pom.artifactId = POM_ARTIFACT_ID\n+                    pom.version = VERSION_NAME\n+                }\n+            }\n+        }\n+    }\n+\n+    signing {\n+        required { isReleaseBuild() && gradle.taskGraph.hasTask(\"uploadArchives\") }\n+        sign configurations.archives\n+    }\n+\n+    if (project.getPlugins().hasPlugin('com.android.application') ||\n+            project.getPlugins().hasPlugin('com.android.library')) {\n+        task install(type: Upload, dependsOn: assemble) {\n+            repositories.mavenInstaller {\n+                configuration = configurations.archives\n+\n+                pom.groupId = GROUP\n+                pom.artifactId = POM_ARTIFACT_ID\n+                pom.version = VERSION_NAME\n+\n+                pom.project {\n+                    name POM_NAME\n+                    packaging POM_PACKAGING\n+                    description POM_DESCRIPTION\n+                    url POM_URL\n+\n+                    scm {\n+                        url POM_SCM_URL\n+                        connection POM_SCM_CONNECTION\n+                        developerConnection POM_SCM_DEV_CONNECTION\n+                    }\n+\n+                    licenses {\n+                        license {\n+                            name POM_LICENCE_NAME\n+                            url POM_LICENCE_URL\n+                            distribution POM_LICENCE_DIST\n+                        }\n+                    }\n+\n+                    developers {\n+                        developer {\n+                            id POM_DEVELOPER_ID\n+                            organization POM_DEVELOPER_ORGANIZATION\n+                            organizationUrl POM_DEVELOPER_ORGANIZATION_URL\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        task androidJavadocs(type: Javadoc) {\n+            source = android.sourceSets.main.java.source\n+            classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n+        }\n+\n+        task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {\n+            classifier = 'javadoc'\n+            from androidJavadocs.destinationDir\n+        }\n+\n+        task androidSourcesJar(type: Jar) {\n+            classifier = 'sources'\n+            from android.sourceSets.main.java.source\n+        }\n+    } else {\n+        install {\n+            repositories.mavenInstaller {\n+                pom.groupId = GROUP\n+                pom.artifactId = POM_ARTIFACT_ID\n+                pom.version = VERSION_NAME\n+\n+                pom.project {\n+                    name POM_NAME\n+                    packaging POM_PACKAGING\n+                    description POM_DESCRIPTION\n+                    url POM_URL\n+\n+                    scm {\n+                        url POM_SCM_URL\n+                        connection POM_SCM_CONNECTION\n+                        developerConnection POM_SCM_DEV_CONNECTION\n+                    }\n+\n+                    licenses {\n+                        license {\n+                            name POM_LICENCE_NAME\n+                            url POM_LICENCE_URL\n+                            distribution POM_LICENCE_DIST\n+                        }\n+                    }\n+\n+                    developers {\n+                        developer {\n+                            id POM_DEVELOPER_ID\n+                            organization POM_DEVELOPER_ORGANIZATION\n+                            organizationUrl POM_DEVELOPER_ORGANIZATION_URL\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        task sourcesJar(type: Jar, dependsOn: classes) {\n+            classifier = 'sources'\n+            from sourceSets.main.allSource\n+        }\n+\n+        task javadocJar(type: Jar, dependsOn: javadoc) {\n+            classifier = 'javadoc'\n+            from javadoc.destinationDir\n+        }\n+    }\n+\n+    if (JavaVersion.current().isJava8Compatible()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0NDI2Ng=="}, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 215}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk4MzE3NQ==", "bodyText": "^ I don't think it needs to be. It just currently is. I suspect the differences are not intentional?", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428983175", "createdAt": "2020-05-22T00:27:31Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/gradle-mvn-push.gradle", "diffHunk": "@@ -0,0 +1,233 @@\n+/*\n+ * Copyright 2013 Chris Banes\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+apply plugin: 'maven'\n+apply plugin: 'signing'\n+\n+version = VERSION_NAME\n+group = GROUP\n+\n+def isReleaseBuild() {\n+    return VERSION_NAME.contains(\"SNAPSHOT\") == false\n+}\n+\n+def getReleaseRepositoryUrl() {\n+    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL :\n+            \"https://aws.oss.sonatype.org/service/local/staging/deploy/maven2/\"\n+}\n+\n+def getSnapshotRepositoryUrl() {\n+    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL :\n+            \"https://aws.oss.sonatype.org/content/repositories/snapshots/\"\n+}\n+\n+def getRepositoryUsername() {\n+    return hasProperty('SONATYPE_NEXUS_USERNAME') ? SONATYPE_NEXUS_USERNAME : \"\"\n+}\n+\n+def getRepositoryPassword() {\n+    return hasProperty('SONATYPE_NEXUS_PASSWORD') ? SONATYPE_NEXUS_PASSWORD : \"\"\n+}\n+\n+archivesBaseName = POM_ARTIFACT_ID\n+\n+afterEvaluate { project ->\n+    uploadArchives {\n+        repositories {\n+            if (project.hasProperty('SONATYPE_NEXUS_USERNAME')) {\n+                mavenDeployer {\n+                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }\n+\n+                    pom.groupId = GROUP\n+                    pom.artifactId = POM_ARTIFACT_ID\n+                    pom.version = VERSION_NAME\n+\n+                    repository(url: getReleaseRepositoryUrl()) {\n+                        authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())\n+                    }\n+                    snapshotRepository(url: getSnapshotRepositoryUrl()) {\n+                        authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())\n+                    }\n+\n+                    pom.project {\n+                        name POM_NAME\n+                        packaging POM_PACKAGING\n+                        description POM_DESCRIPTION\n+                        url POM_URL\n+\n+                        scm {\n+                            url POM_SCM_URL\n+                            connection POM_SCM_CONNECTION\n+                            developerConnection POM_SCM_DEV_CONNECTION\n+                        }\n+\n+                        licenses {\n+                            license {\n+                                name POM_LICENCE_NAME\n+                                url POM_LICENCE_URL\n+                                distribution POM_LICENCE_DIST\n+                            }\n+                        }\n+\n+                        developers {\n+                            developer {\n+                                id POM_DEVELOPER_ID\n+                                organizationUrl POM_DEVELOPER_ORGANIZATION_URL\n+                                roles {\n+                                    role \"developer\"\n+                                }\n+                            }\n+                        }\n+                    }\n+                }\n+            } else {\n+                mavenInstaller {\n+                    pom.groupId = GROUP\n+                    pom.artifactId = POM_ARTIFACT_ID\n+                    pom.version = VERSION_NAME\n+                }\n+            }\n+        }\n+    }\n+\n+    signing {\n+        required { isReleaseBuild() && gradle.taskGraph.hasTask(\"uploadArchives\") }\n+        sign configurations.archives\n+    }\n+\n+    if (project.getPlugins().hasPlugin('com.android.application') ||\n+            project.getPlugins().hasPlugin('com.android.library')) {\n+        task install(type: Upload, dependsOn: assemble) {\n+            repositories.mavenInstaller {\n+                configuration = configurations.archives\n+\n+                pom.groupId = GROUP\n+                pom.artifactId = POM_ARTIFACT_ID\n+                pom.version = VERSION_NAME\n+\n+                pom.project {\n+                    name POM_NAME\n+                    packaging POM_PACKAGING\n+                    description POM_DESCRIPTION\n+                    url POM_URL\n+\n+                    scm {\n+                        url POM_SCM_URL\n+                        connection POM_SCM_CONNECTION\n+                        developerConnection POM_SCM_DEV_CONNECTION\n+                    }\n+\n+                    licenses {\n+                        license {\n+                            name POM_LICENCE_NAME\n+                            url POM_LICENCE_URL\n+                            distribution POM_LICENCE_DIST\n+                        }\n+                    }\n+\n+                    developers {\n+                        developer {\n+                            id POM_DEVELOPER_ID\n+                            organization POM_DEVELOPER_ORGANIZATION\n+                            organizationUrl POM_DEVELOPER_ORGANIZATION_URL\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        task androidJavadocs(type: Javadoc) {\n+            source = android.sourceSets.main.java.source\n+            classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n+        }\n+\n+        task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {\n+            classifier = 'javadoc'\n+            from androidJavadocs.destinationDir\n+        }\n+\n+        task androidSourcesJar(type: Jar) {\n+            classifier = 'sources'\n+            from android.sourceSets.main.java.source\n+        }\n+    } else {\n+        install {\n+            repositories.mavenInstaller {\n+                pom.groupId = GROUP\n+                pom.artifactId = POM_ARTIFACT_ID\n+                pom.version = VERSION_NAME\n+\n+                pom.project {\n+                    name POM_NAME\n+                    packaging POM_PACKAGING\n+                    description POM_DESCRIPTION\n+                    url POM_URL\n+\n+                    scm {\n+                        url POM_SCM_URL\n+                        connection POM_SCM_CONNECTION\n+                        developerConnection POM_SCM_DEV_CONNECTION\n+                    }\n+\n+                    licenses {\n+                        license {\n+                            name POM_LICENCE_NAME\n+                            url POM_LICENCE_URL\n+                            distribution POM_LICENCE_DIST\n+                        }\n+                    }\n+\n+                    developers {\n+                        developer {\n+                            id POM_DEVELOPER_ID\n+                            organization POM_DEVELOPER_ORGANIZATION\n+                            organizationUrl POM_DEVELOPER_ORGANIZATION_URL\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        task sourcesJar(type: Jar, dependsOn: classes) {\n+            classifier = 'sources'\n+            from sourceSets.main.allSource\n+        }\n+\n+        task javadocJar(type: Jar, dependsOn: javadoc) {\n+            classifier = 'javadoc'\n+            from javadoc.destinationDir\n+        }\n+    }\n+\n+    if (JavaVersion.current().isJava8Compatible()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0NDI2Ng=="}, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 215}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQ0Mzg4OnYy", "diffSide": "RIGHT", "path": "amplify-tools/gradle.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjoxMzowN1rOGZEsPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjoxMzowN1rOGZEsPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0NDQ0NA==", "bodyText": "I don't think your plugin uses Android X. You can remove the lines about AndroidX and Jettifier.", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428944444", "createdAt": "2020-05-21T22:13:07Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/gradle.properties", "diffHunk": "@@ -0,0 +1,36 @@\n+# Project-wide Gradle settings.\n+# IDE (e.g. Android Studio) users:\n+# Gradle settings configured through the IDE *will override*\n+# any settings specified in this file.\n+# For more details on how to configure your build environment visit\n+# http://www.gradle.org/docs/current/userguide/build_environment.html\n+# Specifies the JVM arguments used for the daemon process.\n+# The setting is particularly useful for tweaking memory settings.\n+org.gradle.jvmargs=-Xmx1536m\n+# When configured, Gradle will run in incubating parallel mode.\n+# This option should only be used with decoupled projects. More details, visit\n+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n+# org.gradle.parallel=true\n+# AndroidX package structure to make it clearer which packages are bundled with the\n+# Android operating system, and which are packaged with your app's APK\n+# https://developer.android.com/topic/libraries/support-library/androidx-rn\n+android.useAndroidX=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTQ0NDQwOnYy", "diffSide": "RIGHT", "path": "amplify-tools/gradle.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjoxMzoyMVrOGZEsjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMjoxMzoyMVrOGZEsjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk0NDUyNw==", "bodyText": "Update these so that they are correct and refer to the current state of the project in amplify-android.", "url": "https://github.com/aws-amplify/amplify-android/pull/505#discussion_r428944527", "createdAt": "2020-05-21T22:13:21Z", "author": {"login": "jamesonwilliams"}, "path": "amplify-tools/gradle.properties", "diffHunk": "@@ -0,0 +1,36 @@\n+# Project-wide Gradle settings.\n+# IDE (e.g. Android Studio) users:\n+# Gradle settings configured through the IDE *will override*\n+# any settings specified in this file.\n+# For more details on how to configure your build environment visit\n+# http://www.gradle.org/docs/current/userguide/build_environment.html\n+# Specifies the JVM arguments used for the daemon process.\n+# The setting is particularly useful for tweaking memory settings.\n+org.gradle.jvmargs=-Xmx1536m\n+# When configured, Gradle will run in incubating parallel mode.\n+# This option should only be used with decoupled projects. More details, visit\n+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n+# org.gradle.parallel=true\n+# AndroidX package structure to make it clearer which packages are bundled with the\n+# Android operating system, and which are packaged with your app's APK\n+# https://developer.android.com/topic/libraries/support-library/androidx-rn\n+android.useAndroidX=true\n+# Automatically convert third-party libraries to use AndroidX\n+android.enableJetifier=true\n+\n+GROUP=com.amplifyframework\n+VERSION_NAME=1.0.0\n+AWS_CORE_SDK_VERSION=2.16.3\n+\n+POM_URL=https://github.com/aws-amplify/amplify-cli/\n+POM_SCM_URL=https://github.com/aws-amplify/amplify-cli/\n+POM_SCM_CONNECTION=scm:git:git://github.com/aws-amplify/amplify-cli.git\n+POM_SCM_DEV_CONNECTION=scm:git:ssh://git@github.com/aws-amplify/amplify-cli.git", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba1fcb4458c53bf5e04f9d81f16fafb3c77eb4ab"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1300, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}