{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5OTI2MDkz", "number": 1014, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNToyMDo0NlrOE_NAPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNToyMDo0NlrOE_NAPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NzA4Nzk5OnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/Merger.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNToyMDo0NlrOH8x-nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNToyMDo0NlrOH8x-nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ5NTQ1NQ==", "bodyText": "This PR has two main changes:\n\nRemove the ifPresent(...) check;\nOnly log this failure, instead of calling emitter.onError(...).", "url": "https://github.com/aws-amplify/amplify-android/pull/1014#discussion_r533495455", "createdAt": "2020-12-01T15:20:46Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/Merger.java", "diffHunk": "@@ -128,63 +126,35 @@\n     }\n \n     // Delete a model.\n-    private <T extends Model> Completable delete(T model, Consumer<StorageItemChange<T>> onStorageItemChange) {\n-        return Completable.defer(() -> Completable.create(emitter -> {\n-            // First, check if the thing exists.\n-            // If we don't, we'll get an exception saying basically,\n-            // \"failed to delete a non-existing thing.\"\n-            ifPresent(model,\n-                () -> localStorageAdapter.delete(\n-                    model,\n-                    StorageItemChange.Initiator.SYNC_ENGINE,\n-                    QueryPredicates.all(),\n-                    storageItemChange -> {\n-                        onStorageItemChange.accept(storageItemChange);\n-                        emitter.onComplete();\n-                    },\n-                    emitter::onError\n-                ),\n-                emitter::onComplete\n-            );\n-        }));\n+    private <T extends Model> Completable delete(T model, Consumer<StorageItemChange.Type> changeTypeConsumer) {\n+        return Completable.create(emitter ->\n+            localStorageAdapter.delete(model, StorageItemChange.Initiator.SYNC_ENGINE, QueryPredicates.all(),\n+                storageItemChange -> {\n+                    changeTypeConsumer.accept(storageItemChange.type());\n+                    emitter.onComplete();\n+                },\n+                failure -> {\n+                    LOG.verbose(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1bacae287843e48a5eea922185fab8214a22109"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 817, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}