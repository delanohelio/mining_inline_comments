{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNjI5NDA2", "number": 365, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNToyOTozM1rODv1mtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMToyMTo1NlrODv8rdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDg3OTI3OnYy", "diffSide": "RIGHT", "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/FeatureAssert.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNToyOTozM1rOGCff1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNTo1Mzo0OFrOGCf8Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2NjM4OA==", "bodyText": "Maybe this could be named assertFeatureValue(T expectedValue, Feature<T> actualFeature)?", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405266388", "createdAt": "2020-04-08T05:29:33Z", "author": {"login": "jamesonwilliams"}, "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/FeatureAssert.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws;\n+\n+import com.amplifyframework.predictions.models.Feature;\n+\n+import java.util.Collection;\n+import java.util.Iterator;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * Utility class to assert that two features have matching values\n+ * without regarding their IDs or confidence scores.\n+ */\n+final class FeatureAssert {\n+    private FeatureAssert() {}\n+\n+    /**\n+     * Assert that a given value equals the feature's assigned value.\n+     * @param expectedValue the value to expect in a feature\n+     * @param actual the actual feature\n+     * @param <T> the type of expected value\n+     */\n+    static <T> void assertMatches(T expectedValue, Feature<T> actual) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27a4b117e4479ae6b4a5b3b602f8af289b0d44bc"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI3MzY4Ng==", "bodyText": "haha, I feel like there should be a verb to make grammatical sense (i.e. \"matches\"). I was actually considering assertValueMatches or assertFeatureValueMatches, but I thought that was a bit too long. Besides, this method is static, so calling FeatureAssert first would imply that we are asserting to see if features match.", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405273686", "createdAt": "2020-04-08T05:53:48Z", "author": {"login": "raphkim"}, "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/FeatureAssert.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws;\n+\n+import com.amplifyframework.predictions.models.Feature;\n+\n+import java.util.Collection;\n+import java.util.Iterator;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * Utility class to assert that two features have matching values\n+ * without regarding their IDs or confidence scores.\n+ */\n+final class FeatureAssert {\n+    private FeatureAssert() {}\n+\n+    /**\n+     * Assert that a given value equals the feature's assigned value.\n+     * @param expectedValue the value to expect in a feature\n+     * @param actual the actual feature\n+     * @param <T> the type of expected value\n+     */\n+    static <T> void assertMatches(T expectedValue, Feature<T> actual) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2NjM4OA=="}, "originalCommit": {"oid": "27a4b117e4479ae6b4a5b3b602f8af289b0d44bc"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDg4OTMwOnYy", "diffSide": "RIGHT", "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/FeatureAssert.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNTozNToyMlrOGCfl7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNTo1NjoxM1rOGCf_tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2Nzk0OQ==", "bodyText": "Maybe, assertValuesForFeatures(...), or assertFeatureValues(...)?\nHm, I wonder if you can do\nstatic <F extends Feature<T>, T> void assertFeatureValues(T... values, F... features);\n\n? I don't think you can have two varargs like that ...", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405267949", "createdAt": "2020-04-08T05:35:22Z", "author": {"login": "jamesonwilliams"}, "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/FeatureAssert.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws;\n+\n+import com.amplifyframework.predictions.models.Feature;\n+\n+import java.util.Collection;\n+import java.util.Iterator;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * Utility class to assert that two features have matching values\n+ * without regarding their IDs or confidence scores.\n+ */\n+final class FeatureAssert {\n+    private FeatureAssert() {}\n+\n+    /**\n+     * Assert that a given value equals the feature's assigned value.\n+     * @param expectedValue the value to expect in a feature\n+     * @param actual the actual feature\n+     * @param <T> the type of expected value\n+     */\n+    static <T> void assertMatches(T expectedValue, Feature<T> actual) {\n+        assertNotNull(expectedValue);\n+        assertNotNull(actual);\n+        assertEquals(expectedValue, actual.getValue());\n+    }\n+\n+    /**\n+     * Assert that a list of features all match the expected values.\n+     * @param expected the list of feature values to expect\n+     * @param actual the list of actual features\n+     * @param <F> the data type of the feature\n+     * @param <T> the data type of the value of the feature\n+     */\n+    static <F extends Feature<T>, T> void assertMatches(Collection<T> expected, Collection<F> actual) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27a4b117e4479ae6b4a5b3b602f8af289b0d44bc"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI3NDU0OA==", "bodyText": "Yea the varargs would not work since it is required to be the last parameter only.\nI was modeling this after Assert#assertEquals(Object, Object), which works for pretty much anything (list, or singular struct) even with the same name. I wanted to maintain this simplicity in the assertion name.", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405274548", "createdAt": "2020-04-08T05:56:13Z", "author": {"login": "raphkim"}, "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/FeatureAssert.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws;\n+\n+import com.amplifyframework.predictions.models.Feature;\n+\n+import java.util.Collection;\n+import java.util.Iterator;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+/**\n+ * Utility class to assert that two features have matching values\n+ * without regarding their IDs or confidence scores.\n+ */\n+final class FeatureAssert {\n+    private FeatureAssert() {}\n+\n+    /**\n+     * Assert that a given value equals the feature's assigned value.\n+     * @param expectedValue the value to expect in a feature\n+     * @param actual the actual feature\n+     * @param <T> the type of expected value\n+     */\n+    static <T> void assertMatches(T expectedValue, Feature<T> actual) {\n+        assertNotNull(expectedValue);\n+        assertNotNull(actual);\n+        assertEquals(expectedValue, actual.getValue());\n+    }\n+\n+    /**\n+     * Assert that a list of features all match the expected values.\n+     * @param expected the list of feature values to expect\n+     * @param actual the list of actual features\n+     * @param <F> the data type of the feature\n+     * @param <T> the data type of the value of the feature\n+     */\n+    static <F extends Feature<T>, T> void assertMatches(Collection<T> expected, Collection<F> actual) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2Nzk0OQ=="}, "originalCommit": {"oid": "27a4b117e4479ae6b4a5b3b602f8af289b0d44bc"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDg5Mjg1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/predictions/models/TextFeature.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNTozNzoyNFrOGCfoGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNTo1MTo0NVrOGCf52A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2ODUwNw==", "bodyText": "We'd talked about calling this like TestPortion or TextSelection or TextSection or TextSegment or something ... now that it has the positioning info embedded, worth revisiting? Or no?", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405268507", "createdAt": "2020-04-08T05:37:24Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/predictions/models/TextFeature.java", "diffHunk": "@@ -28,20 +28,41 @@\n  */\n @SuppressWarnings(\"unchecked\")\n public abstract class TextFeature<T> extends Feature<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27a4b117e4479ae6b4a5b3b602f8af289b0d44bc"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI3MzA0OA==", "bodyText": "Hmm, are you talking about renaming the TextFeature class? It is still a feature, so I would like to keep that word in the name. I believe our old discussion was regarding the name of TargetText class, but that on longer exists.", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405273048", "createdAt": "2020-04-08T05:51:45Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/predictions/models/TextFeature.java", "diffHunk": "@@ -28,20 +28,41 @@\n  */\n @SuppressWarnings(\"unchecked\")\n public abstract class TextFeature<T> extends Feature<T> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2ODUwNw=="}, "originalCommit": {"oid": "27a4b117e4479ae6b4a5b3b602f8af289b0d44bc"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDg5OTI0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/predictions/models/TextFeature.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNTo0MDoyNVrOGCfsAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNTo0ODozN1rOGCf1tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2OTUwNA==", "bodyText": "So the targetText starts at startIndex within a (>= size) input text?", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405269504", "createdAt": "2020-04-08T05:40:25Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/predictions/models/TextFeature.java", "diffHunk": "@@ -28,20 +28,41 @@\n  */\n @SuppressWarnings(\"unchecked\")\n public abstract class TextFeature<T> extends Feature<T> {\n-    private final TargetText target;\n+    private final String targetText;\n+    private final int startIndex;\n+    private final int length;\n \n     TextFeature(Builder<?, ? extends TextFeature<T>, T> builder) {\n         super(builder);\n-        this.target = builder.getTarget();\n+        this.targetText = builder.getTargetText();\n+        this.startIndex = builder.getStartIndex();\n+        this.length = targetText.length();\n     }\n \n     /**\n-     * Gets the target text and associated index.\n-     * @return the target text\n+     * Gets the target text to which this feature applies.\n+     * @return the target portion of the input text\n      */\n     @NonNull\n-    public final TargetText getTarget() {\n-        return target;\n+    public final String getTargetText() {\n+        return targetText;\n+    }\n+\n+    /**\n+     * Gets the starting position of the target text\n+     * with respect to the full input text.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27a4b117e4479ae6b4a5b3b602f8af289b0d44bc"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI3MTk4OA==", "bodyText": "yep!", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405271988", "createdAt": "2020-04-08T05:48:37Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/predictions/models/TextFeature.java", "diffHunk": "@@ -28,20 +28,41 @@\n  */\n @SuppressWarnings(\"unchecked\")\n public abstract class TextFeature<T> extends Feature<T> {\n-    private final TargetText target;\n+    private final String targetText;\n+    private final int startIndex;\n+    private final int length;\n \n     TextFeature(Builder<?, ? extends TextFeature<T>, T> builder) {\n         super(builder);\n-        this.target = builder.getTarget();\n+        this.targetText = builder.getTargetText();\n+        this.startIndex = builder.getStartIndex();\n+        this.length = targetText.length();\n     }\n \n     /**\n-     * Gets the target text and associated index.\n-     * @return the target text\n+     * Gets the target text to which this feature applies.\n+     * @return the target portion of the input text\n      */\n     @NonNull\n-    public final TargetText getTarget() {\n-        return target;\n+    public final String getTargetText() {\n+        return targetText;\n+    }\n+\n+    /**\n+     * Gets the starting position of the target text\n+     * with respect to the full input text.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2OTUwNA=="}, "originalCommit": {"oid": "27a4b117e4479ae6b4a5b3b602f8af289b0d44bc"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNTk4NzgwOnYy", "diffSide": "RIGHT", "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/AWSPredictionsInterpretTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMTowNToyM1rOGCqNIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMTowNToyM1rOGCqNIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ0MTgyNg==", "bodyText": "Seems before your time.", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405441826", "createdAt": "2020-04-08T11:05:23Z", "author": {"login": "jpignata"}, "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/AWSPredictionsInterpretTest.java", "diffHunk": "@@ -168,17 +165,24 @@ public void testNegativeSentimentDetection() throws Exception {\n      */\n     @Test\n     public void testKeyPhraseDetection() throws Exception {\n+        final String sampleText = \"My mama always said life was like a box of chocolates.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "facf1f8a222bb6ca25cdbf6cfbd3d987c12140ab"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNjAzODI5OnYy", "diffSide": "RIGHT", "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/AWSPredictionsInterpretTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMToyMTo1NlrOGCqs6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjo0NDoxMVrOGC30JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ0OTk2Mg==", "bodyText": "Idle thought: Does Comprehend provide a guarantee around what it considers a \"key phrase?\" Will we regret coupling our test to whatever Comprehend's models return for a given sentence. For example, in the future, could Comprehend omit articles from key phrases and just return the noun? Perhaps the answer is, \"idk? We'd just update the test.\"", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405449962", "createdAt": "2020-04-08T11:21:56Z", "author": {"login": "jpignata"}, "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/AWSPredictionsInterpretTest.java", "diffHunk": "@@ -168,17 +165,24 @@ public void testNegativeSentimentDetection() throws Exception {\n      */\n     @Test\n     public void testKeyPhraseDetection() throws Exception {\n+        final String sampleText = \"My mama always said life was like a box of chocolates.\";\n+\n         // Interpret sample text and assert non-null result\n         InterpretResult result = predictions.interpret(\n-                Assets.readAsString(\"sample-text-en.txt\"),\n+                sampleText,\n                 InterpretOptions.defaults()\n         );\n         assertNotNull(result);\n \n-        // Assert detected key phrases are not empty\n-        List<KeyPhrase> keyPhrases = result.getKeyPhrases();\n-        assertNotNull(keyPhrases);\n-        assertFalse(keyPhrases.isEmpty());\n+        // Assert key phrase detection\n+        List<KeyPhrase> actual = result.getKeyPhrases();\n+        List<String> expected = Arrays.asList(\n+                \"My mama\",\n+                \"life\",\n+                \"a box\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "facf1f8a222bb6ca25cdbf6cfbd3d987c12140ab"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY2NDgwNQ==", "bodyText": "That's my approach for now haha. We'll keep this the way is until the tests break -> update the tests. If it becomes a semi-frequent enough issue, we will revisit to see if we can have a \"snapshot\" of the comprehend model", "url": "https://github.com/aws-amplify/amplify-android/pull/365#discussion_r405664805", "createdAt": "2020-04-08T16:44:11Z", "author": {"login": "raphkim"}, "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/AWSPredictionsInterpretTest.java", "diffHunk": "@@ -168,17 +165,24 @@ public void testNegativeSentimentDetection() throws Exception {\n      */\n     @Test\n     public void testKeyPhraseDetection() throws Exception {\n+        final String sampleText = \"My mama always said life was like a box of chocolates.\";\n+\n         // Interpret sample text and assert non-null result\n         InterpretResult result = predictions.interpret(\n-                Assets.readAsString(\"sample-text-en.txt\"),\n+                sampleText,\n                 InterpretOptions.defaults()\n         );\n         assertNotNull(result);\n \n-        // Assert detected key phrases are not empty\n-        List<KeyPhrase> keyPhrases = result.getKeyPhrases();\n-        assertNotNull(keyPhrases);\n-        assertFalse(keyPhrases.isEmpty());\n+        // Assert key phrase detection\n+        List<KeyPhrase> actual = result.getKeyPhrases();\n+        List<String> expected = Arrays.asList(\n+                \"My mama\",\n+                \"life\",\n+                \"a box\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ0OTk2Mg=="}, "originalCommit": {"oid": "facf1f8a222bb6ca25cdbf6cfbd3d987c12140ab"}, "originalPosition": 92}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1415, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}