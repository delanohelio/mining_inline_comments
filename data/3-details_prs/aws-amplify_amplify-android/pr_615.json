{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMTgyMjYw", "number": 615, "title": "Changes related to subscription connectivity problems", "bodyText": "Issue #, if available:\nDescription of changes:\nThis PR is an attempt to fix a couple issues that have an impact on DataStore\n1 - Subscriptions that failed on startup were left in memory. To address this, I'm keeping track of the Future returned by the executorService (in SubscriptionOperation) so we can cancel it before releasing the subscription. I'm also keeping track of the subscriptionIds that are pending initial connectivity (in SubscriptionEndpoint). Once a failure occurs for a subscription, it gets removed and the client needs to re-create it. I attempted to swap out the underlying websocket connection so I would make that transparent, but didn't have much luck with that approach.\n2a - The websocket connection we were using was not recovering once a failure occurred. This is the behavior of the OkHttp library. Recommendation is to recreate the websocket and listener once the onFailure event is triggered. If you don't do that, any interactions with the socket from that point forward are just ignored without emitting errors.\n2b - The CountdownLatch was being initialized in the SubscriptionEndpoint constructor. The SubscriptionEndpoint is only instantiated once from the API plugin. If an app started up without issues, the latch would countdown as expected. If the app lost connectivity after that, the latch was already counted down so it \"assumed\" the connection was still good.\nTo address the websocket-related issues, I refactored SubscriptionEndpoint and created a subclass of WebsocketListenener (called it AmplifyWebSocketListener for now) that encapsulates some of the logic necessary to reset the connection. All we have to do is call newWebSocket passing in a new instance of AmplifyWebSocketListener.\nI tried to add a retry with backoff from the DataStore side, but that surfaced another issue. Because the initial setup never completed, we don't have a way to cancel those stale subscriptions because we don't have their subscription IDs (subscriptionId is only returned when the subscription is successfully established.) To address this, I'm generating the subscriptionId in SubscriptionOperation and passing it to SubscriptionEndpoint. This allows us to cancel the subscriptions in situations like that.\nThis way, when cancel is invoked, the SubscriptionOperation can try to call releaseSubscription with that id. This surfaced another problem: if the app attempts to invoke clear() in the DataStore before the initial subscription setup completes, the pending call will proceed because it's never really canceled. New subscriptions are added in addition to the ones that are there. They eventually fail because they're trying to invoke a callback that's no longer available, but they could potentially leak resources or keep another user's subscriptions active. NOT APPLICABLE ANYMORE\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-06-29T04:04:04Z", "url": "https://github.com/aws-amplify/amplify-android/pull/615", "merged": true, "mergeCommit": {"oid": "890c58d104c30157b4ef471d7d9370887c8be259"}, "closed": true, "closedAt": "2020-07-15T13:09:56Z", "author": {"login": "rjuliano"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcv8B0mgFqTQzODk1MzgyOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1KCSWgH2gAyNDQxMTgyMjYwOmQyZTRjNGFlN2NmODA0ZWQ5ODA4OTQ3YTM5YzkyNWU4Njk2NWYwYWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4OTUzODI5", "url": "https://github.com/aws-amplify/amplify-android/pull/615#pullrequestreview-438953829", "createdAt": "2020-06-29T07:36:49Z", "commit": {"oid": "97f643e75288b3cc7aec465fbf15284f0639abd0"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29b6272cc1b41c3319e7acd14f17ff797a185d3c", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/29b6272cc1b41c3319e7acd14f17ff797a185d3c", "committedDate": "2020-06-29T13:32:59Z", "message": "Changes to the API module"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NDE3OTAw", "url": "https://github.com/aws-amplify/amplify-android/pull/615#pullrequestreview-439417900", "createdAt": "2020-06-29T18:58:49Z", "commit": {"oid": "29b6272cc1b41c3319e7acd14f17ff797a185d3c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxODo1ODo0OVrOGqeF3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxOTo1MjoyMVrOGqf1DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE4NjM5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final Logger LOG = Amplify.Logging.forNamespace(\"aws-api:websocket\");\n          \n          \n            \n                private static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:aws-api:websocket\");", "url": "https://github.com/aws-amplify/amplify-android/pull/615#discussion_r447186397", "createdAt": "2020-06-29T18:58:49Z", "author": {"login": "richardmcclellan"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SubscriptionEndpoint.java", "diffHunk": "@@ -53,6 +57,7 @@\n  * and multiple GraphQL subscriptions that work on top of it.\n  */\n final class SubscriptionEndpoint {\n+    private static final Logger LOG = Amplify.Logging.forNamespace(\"aws-api:websocket\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b6272cc1b41c3319e7acd14f17ff797a185d3c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxNDQxMg==", "bodyText": "Is there a reason you need to pass in subscriptionId?  It seems like that could be handled internally within SubscriptionEndpoint.  It doesn't appear that subscriptionId is actually used anywhere else in SubscriptionOperation, except for checking if it's null in cancel(), which doesn't seem like a necessary check anyway.", "url": "https://github.com/aws-amplify/amplify-android/pull/615#discussion_r447214412", "createdAt": "2020-06-29T19:51:32Z", "author": {"login": "richardmcclellan"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SubscriptionOperation.java", "diffHunk": "@@ -76,14 +79,12 @@ public synchronized void start() {\n             ));\n             return;\n         }\n-        executorService.submit(() -> {\n+        subscriptionFuture = executorService.submit(() -> {\n             LOG.debug(\"Requesting subscription: \" + getRequest().getContent());\n             subscriptionEndpoint.requestSubscription(\n+                subscriptionId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b6272cc1b41c3319e7acd14f17ff797a185d3c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxNDg2MA==", "bodyText": "Possible NPE since subscriptionFuture could be null?", "url": "https://github.com/aws-amplify/amplify-android/pull/615#discussion_r447214860", "createdAt": "2020-06-29T19:52:21Z", "author": {"login": "richardmcclellan"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SubscriptionOperation.java", "diffHunk": "@@ -95,6 +96,9 @@ public synchronized void start() {\n     public synchronized void cancel() {\n         if (subscriptionId != null && !canceled) {\n             canceled = true;\n+            if (subscriptionFuture.cancel(true)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b6272cc1b41c3319e7acd14f17ff797a185d3c"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTQxODUw", "url": "https://github.com/aws-amplify/amplify-android/pull/615#pullrequestreview-440541850", "createdAt": "2020-07-01T04:43:32Z", "commit": {"oid": "29b6272cc1b41c3319e7acd14f17ff797a185d3c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNDo0MzozMlrOGrWlFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNDo0Nzo1MlrOGrWpiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExMTg5Mw==", "bodyText": "Naming: pendingSubscriptionIds?", "url": "https://github.com/aws-amplify/amplify-android/pull/615#discussion_r448111893", "createdAt": "2020-07-01T04:43:32Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SubscriptionEndpoint.java", "diffHunk": "@@ -62,67 +67,86 @@\n     private final GraphQLResponse.Factory responseFactory;\n     private final TimeoutWatchdog timeoutWatchdog;\n     private final CountDownLatch connectionResponse;\n+    private final Set<String> pendingSubscriptions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b6272cc1b41c3319e7acd14f17ff797a185d3c"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExMjgzMg==", "bodyText": "Ahh. Nice catch.", "url": "https://github.com/aws-amplify/amplify-android/pull/615#discussion_r448112832", "createdAt": "2020-07-01T04:47:05Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SubscriptionEndpoint.java", "diffHunk": "@@ -305,34 +335,42 @@ private void notifySubscriptionData(String subscriptionId, String data) throws A\n     }\n \n     synchronized void releaseSubscription(String subscriptionId) throws ApiException {\n-        final Subscription<?> subscription = subscriptions.get(subscriptionId);\n-        if (subscription == null) {\n+        // First thing we should do is remove it from the subscriptions collections so\n+        // the other methods can't grab a hold of the subscription.\n+        final Subscription<?> subscription = subscriptions.remove(subscriptionId);\n+        boolean wasSubscriptionPending = pendingSubscriptions.remove(subscriptionId);\n+        // If the subscription was not in the subscriptions collections AND was also\n+        // not in the pending collection.\n+        if (subscription == null && !wasSubscriptionPending) {\n             throw new ApiException(\n                 \"No existing subscription with the given id.\",\n                 AmplifyException.TODO_RECOVERY_SUGGESTION\n             );\n         }\n \n-        try {\n-            webSocket.send(new JSONObject()\n-                .put(\"type\", \"stop\")\n-                .put(\"id\", subscriptionId)\n-                .toString());\n-        } catch (JSONException jsonException) {\n-            throw new ApiException(\n-                \"Failed to construct subscription release message.\",\n-                jsonException,\n-                AmplifyException.TODO_RECOVERY_SUGGESTION\n-            );\n+        // Only do this if the subscription was NOT pending.\n+        // Otherwise it would probably fail since it was never established in the first place.\n+        if (!wasSubscriptionPending) {\n+            try {\n+                webSocket.send(new JSONObject()\n+                    .put(\"type\", \"stop\")\n+                    .put(\"id\", subscriptionId)\n+                    .toString());\n+            } catch (JSONException jsonException) {\n+                throw new ApiException(\n+                    \"Failed to construct subscription release message.\",\n+                    jsonException,\n+                    AmplifyException.TODO_RECOVERY_SUGGESTION\n+                );\n+            }\n+            subscription.awaitSubscriptionCompleted();\n         }\n \n-        subscription.awaitSubscriptionCompleted();\n-        subscriptions.remove(subscriptionId);\n-\n         // If we have zero subscriptions, close the WebSocket\n         if (subscriptions.size() == 0) {\n             timeoutWatchdog.stop();\n             webSocket.close(NORMAL_CLOSURE_STATUS, \"No active subscriptions\");\n+            webSocket = null; //force creation of a new websocket", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b6272cc1b41c3319e7acd14f17ff797a185d3c"}, "originalPosition": 234}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExMzAzMg==", "bodyText": "Can this be final now that you assign it in the operation constructor?", "url": "https://github.com/aws-amplify/amplify-android/pull/615#discussion_r448113032", "createdAt": "2020-07-01T04:47:52Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SubscriptionOperation.java", "diffHunk": "@@ -41,6 +43,7 @@\n \n     private String subscriptionId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b6272cc1b41c3319e7acd14f17ff797a185d3c"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9684174634920d50a8ecf0141abb157b64611a32", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/9684174634920d50a8ecf0141abb157b64611a32", "committedDate": "2020-07-01T20:39:36Z", "message": "Merge branch 'rjuliano/bugfix_startcrash' into rjuliano/api_fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09739e83c6247088969b14833a4940fde19435c3", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/09739e83c6247088969b14833a4940fde19435c3", "committedDate": "2020-07-08T20:54:48Z", "message": "Fixing websocket connection issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec7f19a2f1d002fd14b2f8bf16e2e7c2e0138570", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/ec7f19a2f1d002fd14b2f8bf16e2e7c2e0138570", "committedDate": "2020-07-08T20:59:08Z", "message": "Revert previous changes made to test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8de1b81a7277e94ecb7bed756fc39b35386f6ed", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/e8de1b81a7277e94ecb7bed756fc39b35386f6ed", "committedDate": "2020-07-08T21:02:14Z", "message": "Renamed variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "175dc2398777ea748004e7c4d8934bd4bfa34295", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/175dc2398777ea748004e7c4d8934bd4bfa34295", "committedDate": "2020-07-08T23:02:05Z", "message": "cleaned up unused variable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjAwMDQ1", "url": "https://github.com/aws-amplify/amplify-android/pull/615#pullrequestreview-445200045", "createdAt": "2020-07-08T23:44:37Z", "commit": {"oid": "175dc2398777ea748004e7c4d8934bd4bfa34295"}, "state": "APPROVED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMzo0NDozN1rOGu82dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMjo1Njo1NFrOGu_9YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4NDY2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import org.jetbrains.annotations.NotNull;\n          \n          \n            \n            import androidx.annotation.NonNull;", "url": "https://github.com/aws-amplify/amplify-android/pull/615#discussion_r451884662", "createdAt": "2020-07-08T23:44:37Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SubscriptionEndpoint.java", "diffHunk": "@@ -25,22 +25,28 @@\n import com.amplifyframework.api.graphql.GraphQLRequest;\n import com.amplifyframework.api.graphql.GraphQLResponse;\n import com.amplifyframework.core.Action;\n+import com.amplifyframework.core.Amplify;\n import com.amplifyframework.core.Consumer;\n+import com.amplifyframework.logging.Logger;\n import com.amplifyframework.util.UserAgent;\n \n+import org.jetbrains.annotations.NotNull;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175dc2398777ea748004e7c4d8934bd4bfa34295"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4NTIzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private OkHttpClient okHttpClient;\n          \n          \n            \n                private final OkHttpClient okHttpClient;", "url": "https://github.com/aws-amplify/amplify-android/pull/615#discussion_r451885239", "createdAt": "2020-07-08T23:46:37Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SubscriptionEndpoint.java", "diffHunk": "@@ -61,21 +68,34 @@\n     private final Map<String, Subscription<?>> subscriptions;\n     private final GraphQLResponse.Factory responseFactory;\n     private final TimeoutWatchdog timeoutWatchdog;\n-    private final CountDownLatch connectionResponse;\n+    private final Set<String> pendingSubscriptionIds;\n+    private final Request websocketInitRequest;\n+    private final String subscriptionUrl;\n     private String connectionFailure;\n     private WebSocket webSocket;\n+    private AmplifyWebSocketListener webSocketListener;\n+    private OkHttpClient okHttpClient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175dc2398777ea748004e7c4d8934bd4bfa34295"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg4NTQ1OA==", "bodyText": "I don't think you need to store this on the class. You could just pass a new ...Request() at the call site. Isn't that so?", "url": "https://github.com/aws-amplify/amplify-android/pull/615#discussion_r451885458", "createdAt": "2020-07-08T23:47:25Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SubscriptionEndpoint.java", "diffHunk": "@@ -61,21 +68,34 @@\n     private final Map<String, Subscription<?>> subscriptions;\n     private final GraphQLResponse.Factory responseFactory;\n     private final TimeoutWatchdog timeoutWatchdog;\n-    private final CountDownLatch connectionResponse;\n+    private final Set<String> pendingSubscriptionIds;\n+    private final Request websocketInitRequest;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175dc2398777ea748004e7c4d8934bd4bfa34295"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkzMjkyNg==", "bodyText": "This is a topic I haven't closed in my own mind, yet:\nIf a cancellable object encounters an error, or terminates gracefully, is it canceled?\n\nYes! Of course, since it can't be useful anymore;\nNo; no-one asked for it to stop (cancellation), it just did.\n\n\ud83d\ude16\n\nIf you do (1), though, should you also mark canceld.set(true) for the onSubscriptionComplete path?", "url": "https://github.com/aws-amplify/amplify-android/pull/615#discussion_r451932926", "createdAt": "2020-07-09T02:46:57Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SubscriptionOperation.java", "diffHunk": "@@ -85,21 +87,31 @@ public synchronized void start() {\n                     onSubscriptionStart.accept(subscriptionId);\n                 },\n                 onNextItem,\n-                onSubscriptionError,\n+                apiException -> {\n+                    // Guard against calling something that's been cancelled already.\n+                    if (!canceled.get()) {\n+                        canceled.set(true);\n+                        onSubscriptionError.accept(apiException);\n+                    }\n+                },\n                 onSubscriptionComplete", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175dc2398777ea748004e7c4d8934bd4bfa34295"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkzMzA3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private AtomicBoolean canceled;\n          \n          \n            \n                private final AtomicBoolean canceled;", "url": "https://github.com/aws-amplify/amplify-android/pull/615#discussion_r451933074", "createdAt": "2020-07-09T02:47:24Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SubscriptionOperation.java", "diffHunk": "@@ -40,7 +42,8 @@\n     private final Action onSubscriptionComplete;\n \n     private String subscriptionId;\n-    private boolean canceled;\n+    private AtomicBoolean canceled;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175dc2398777ea748004e7c4d8934bd4bfa34295"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkzNDAzNw==", "bodyText": "If you don't need a reference to the CountDownLatch param, you could do:\nAmplifyWebSocketListener(CountDownLatch latch) {\n    this.latch = latch;\n}\n\nAmplifyWebSocketListener() {\n    this(new CountDownLatch(1));\n}", "url": "https://github.com/aws-amplify/amplify-android/pull/615#discussion_r451934037", "createdAt": "2020-07-09T02:50:46Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SubscriptionEndpoint.java", "diffHunk": "@@ -90,39 +110,25 @@\n         Objects.requireNonNull(onSubscriptionError);\n         Objects.requireNonNull(onSubscriptionComplete);\n \n-        if (webSocket == null) {\n-            try {\n-                connectionFailure = null;\n-                webSocket = createWebSocket();\n-            } catch (ApiException exception) {\n-                onSubscriptionError.accept(new ApiException(\n-                        \"Failed to create websocket for subscription\",\n-                        exception,\n-                        AmplifyException.TODO_RECOVERY_SUGGESTION\n-                ));\n-                return;\n-            }\n-\n-            try {\n-                connectionResponse.await(CONNECTION_ACKNOWLEDGEMENT_TIMEOUT, TimeUnit.SECONDS);\n-            } catch (InterruptedException interruptedException) {\n-                // Outcome is inspected below\n-            }\n-            if (connectionResponse.getCount() != 0) {\n-                onSubscriptionError.accept(new ApiException(\n-                    \"Subscription timed out waiting for acknowledgement\",\n-                    AmplifyException.TODO_RECOVERY_SUGGESTION\n-                ));\n-                return;\n-            } else if (connectionFailure != null) {\n-                onSubscriptionError.accept(new ApiException(\n-                    connectionFailure, \"Check if you are authorized to make this subscription\"\n-                ));\n+        // The first call to subscribe OR a disconnected websocket listener will\n+        // force a new connection to be created.\n+        if (webSocketListener == null || webSocketListener.isDisconnectedState()) {\n+            webSocketListener = new AmplifyWebSocketListener(new CountDownLatch(1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175dc2398777ea748004e7c4d8934bd4bfa34295"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkzNTIyMA==", "bodyText": "Could you have waitForConnectionReady return like a Connection object? It could have a status, and optionally, this failure detail. On L122, you could do like:\nConnection connection = webSocketListener.waitForConnection();\nif (connection.hasFailure()) {\n    ...\nThen, here,\nnew ApiException(connection.getFailureDetail(), ...)\nThe point of this would be so that you don't have to cache it inside of the listener.", "url": "https://github.com/aws-amplify/amplify-android/pull/615#discussion_r451935220", "createdAt": "2020-07-09T02:55:23Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SubscriptionEndpoint.java", "diffHunk": "@@ -90,39 +110,25 @@\n         Objects.requireNonNull(onSubscriptionError);\n         Objects.requireNonNull(onSubscriptionComplete);\n \n-        if (webSocket == null) {\n-            try {\n-                connectionFailure = null;\n-                webSocket = createWebSocket();\n-            } catch (ApiException exception) {\n-                onSubscriptionError.accept(new ApiException(\n-                        \"Failed to create websocket for subscription\",\n-                        exception,\n-                        AmplifyException.TODO_RECOVERY_SUGGESTION\n-                ));\n-                return;\n-            }\n-\n-            try {\n-                connectionResponse.await(CONNECTION_ACKNOWLEDGEMENT_TIMEOUT, TimeUnit.SECONDS);\n-            } catch (InterruptedException interruptedException) {\n-                // Outcome is inspected below\n-            }\n-            if (connectionResponse.getCount() != 0) {\n-                onSubscriptionError.accept(new ApiException(\n-                    \"Subscription timed out waiting for acknowledgement\",\n-                    AmplifyException.TODO_RECOVERY_SUGGESTION\n-                ));\n-                return;\n-            } else if (connectionFailure != null) {\n-                onSubscriptionError.accept(new ApiException(\n-                    connectionFailure, \"Check if you are authorized to make this subscription\"\n-                ));\n+        // The first call to subscribe OR a disconnected websocket listener will\n+        // force a new connection to be created.\n+        if (webSocketListener == null || webSocketListener.isDisconnectedState()) {\n+            webSocketListener = new AmplifyWebSocketListener(new CountDownLatch(1));\n+            webSocket = okHttpClient.newWebSocket(websocketInitRequest, webSocketListener);\n+        }\n+        final String subscriptionId = UUID.randomUUID().toString();\n+        pendingSubscriptionIds.add(subscriptionId);\n+        // Every request waits here for the connection to be ready.\n+        if (!webSocketListener.waitForConnectionReady()) {\n+            // If the latch didn't count all the way down\n+            if (pendingSubscriptionIds.remove(subscriptionId)) {\n+                // The subscription was pending, so we need to emit an error.\n+                onSubscriptionError.accept(\n+                    new ApiException(webSocketListener.getFailureDetail(), AmplifyException.TODO_RECOVERY_SUGGESTION));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175dc2398777ea748004e7c4d8934bd4bfa34295"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkzNTU4NA==", "bodyText": "When does this situation arise? And if the the subscription was not still pending, but we're in this catch block, isn't there still some error case?", "url": "https://github.com/aws-amplify/amplify-android/pull/615#discussion_r451935584", "createdAt": "2020-07-09T02:56:54Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/SubscriptionEndpoint.java", "diffHunk": "@@ -134,11 +140,15 @@\n                 .toString()\n             );\n         } catch (JSONException | ApiException exception) {\n-            onSubscriptionError.accept(new ApiException(\n+            // If the subscriptionId was still pending, then we can call the onSubscriptionError", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175dc2398777ea748004e7c4d8934bd4bfa34295"}, "originalPosition": 135}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f7d6af468459c0ad448d6d6aefe7ef071c8fa43", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/2f7d6af468459c0ad448d6d6aefe7ef071c8fa43", "committedDate": "2020-07-09T14:26:32Z", "message": "Merge branch 'rjuliano/bugfix_startcrash' into rjuliano/api_fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5628513695b876bee5d36cdac34ce284f21ba5de", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/5628513695b876bee5d36cdac34ce284f21ba5de", "committedDate": "2020-07-09T15:09:43Z", "message": "PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2e4c4ae7cf804ed9808947a39c925e86965f0ae", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/d2e4c4ae7cf804ed9808947a39c925e86965f0ae", "committedDate": "2020-07-15T12:45:37Z", "message": "Merge branch 'rjuliano/bugfix_startcrash' into rjuliano/api_fix"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1844, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}