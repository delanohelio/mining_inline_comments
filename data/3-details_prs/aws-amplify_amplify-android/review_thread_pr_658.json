{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NTY3OTQ3", "number": 658, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMjowOTo1NFrOEQ3KYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMjoxNToxMlrOEQ3N8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTE2NDUwOnYy", "diffSide": "RIGHT", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/sigv4/AppSyncSigV4SignerInterceptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMjowOTo1NFrOG1QHoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMjowOTo1NFrOG1QHoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ5MTgwOA==", "bodyText": "This enters the project from a transitive dependency. IMO we should minimize our use of com.amazonaws.* overall, and try to stick to public APIs related to the per-category functionalities.\nSince you're only using it for an isBlank(...) check, use our Empty.check(...) instead.", "url": "https://github.com/aws-amplify/amplify-android/pull/658#discussion_r458491808", "createdAt": "2020-07-22T02:09:54Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/sigv4/AppSyncSigV4SignerInterceptor.java", "diffHunk": "@@ -25,9 +25,15 @@\n import com.amazonaws.auth.AWSCredentialsProvider;\n import com.amazonaws.http.HttpMethodName;\n import com.amazonaws.util.IOUtils;\n+import com.amazonaws.util.StringUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fed76a6d34c712bbe63c45bf0fe8c0de2376868"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTE3MzYyOnYy", "diffSide": "RIGHT", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/sigv4/AppSyncSigV4SignerInterceptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMjoxNToxMlrOG1QNLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMjoxNToxMlrOG1QNLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ5MzIzMQ==", "bodyText": "I had some similar code recently and @richardmcclellan raised some good points: what would happen here if the URL were malformed? Is a null pointer or out-of-range error thrown?", "url": "https://github.com/aws-amplify/amplify-android/pull/658#discussion_r458493231", "createdAt": "2020-07-22T02:15:12Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/sigv4/AppSyncSigV4SignerInterceptor.java", "diffHunk": "@@ -221,23 +236,23 @@ public Response intercept(Chain chain) throws IOException {\n         return chain.proceed(okReqBuilder.build());\n     }\n \n-    // Utility method to convert string to human-readable format\n-    private String toHumanReadableAscii(String str) {\n-        for (int i = 0, length = str.length(), c; i < length; i += Character.charCount(c)) {\n-            c = str.codePointAt(i);\n-            if (c > '\\u001f' && c < '\\u007f') {\n-                continue;\n-            }\n-            Buffer buffer = new Buffer();\n-            buffer.writeUtf8(str, 0, i);\n-            for (int j = i; j < length; j += Character.charCount(c)) {\n-                c = str.codePointAt(j);\n-                if (c > '\\u001f' && c < '\\u007f') {\n-                    buffer.writeUtf8CodePoint(c);\n-                }\n-            }\n-            return buffer.readUtf8();\n+    // Extracts query string parameters from a URL.\n+    // Source: https://stackoverflow.com/questions/13592236/parse-a-uri-string-into-name-value-collection\n+    @NonNull\n+    private static Map<String, String> splitQuery(URL url) throws UnsupportedEncodingException {\n+        Map<String, String> queryPairs = new LinkedHashMap<>();\n+        String query = url.getQuery();\n+        if (StringUtils.isBlank(query)) {\n+            return Collections.emptyMap();\n+        }\n+        String[] pairs = query.split(\"&\");\n+        for (String pair : pairs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fed76a6d34c712bbe63c45bf0fe8c0de2376868"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1103, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}