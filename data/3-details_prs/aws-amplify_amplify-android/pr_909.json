{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MTkyMjY0", "number": 909, "title": "feat(datastore) Add start and stop, and stop starting on configure and clear", "bodyText": "Summary\n\nAdded void DataStore::start(Action onComplete, Consumer<DataStoreException> onError) API\nAdded void DataStore::stop(Action onComplete, Consumer<DataStoreException> onError) API\nAdded Completable RxDataStore::start() and Completable RxDataStore::stop() API\nModified DataStore::configure() so that it does not call start anymore\nModified DataStore::clear() so that it does not call start anymore\nThe following scenarios now bubble up an exception to the user provided Consumer<DataStoreException>, instead of just logging a warning:\n\nTimeout acquiring lock in Orchestrator::start()\nTimeout starting DataStore\nAny other unexpected error while starting DataStore\n\n\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-10-17T03:37:09Z", "url": "https://github.com/aws-amplify/amplify-android/pull/909", "merged": true, "mergeCommit": {"oid": "83b27fb64c752714ae8ce4337e10caee3d685328"}, "closed": true, "closedAt": "2020-10-29T04:45:40Z", "author": {"login": "richardmcclellan"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTOKZ_AH2gAyNTA1MTkyMjY0OjllMzkxZmJkOWE3ZWNmM2FlZTkwZjYyNmFhNjFkMjAzZWE2NzE5ZTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXJxU5gH2gAyNTA1MTkyMjY0OjM3YWEzOTY0NjYyNWM3NzUzMDk0Y2Q2ZDcxOWY3MGU2NGMyMjI5Mzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9e391fbd9a7ecf3aee90f626aa61d203ea6719e8", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/9e391fbd9a7ecf3aee90f626aa61d203ea6719e8", "committedDate": "2020-10-16T22:31:50Z", "message": "feat(datastore) Add start and stop, and stop starting on configure and clear"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMDIxMTI3", "url": "https://github.com/aws-amplify/amplify-android/pull/909#pullrequestreview-512021127", "createdAt": "2020-10-19T17:56:25Z", "commit": {"oid": "9e391fbd9a7ecf3aee90f626aa61d203ea6719e8"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzo1NjoyNVrOHka6wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo0OTo0MlrOHkdBPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk1MTgxMA==", "bodyText": "I think the others currently use : instead of -:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:datastore-test\");\n          \n          \n            \n                private static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:datastore:test\");", "url": "https://github.com/aws-amplify/amplify-android/pull/909#discussion_r507951810", "createdAt": "2020-10-19T17:56:25Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/AWSDataStorePluginTest.java", "diffHunk": "@@ -79,6 +82,8 @@\n @SuppressWarnings(\"SameParameterValue\")\n @RunWith(RobolectricTestRunner.class)\n public final class AWSDataStorePluginTest {\n+    private static final Logger LOG = Amplify.Logging.forNamespace(\"amplify:datastore-test\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e391fbd9a7ecf3aee90f626aa61d203ea6719e8"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk2Mzg4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            //        //Configure DataStore with an empty config (All defaults)\n          \n          \n            \n                    // Configure DataStore with an empty config (All defaults)", "url": "https://github.com/aws-amplify/amplify-android/pull/909#discussion_r507963882", "createdAt": "2020-10-19T18:12:27Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/AWSDataStorePluginTest.java", "diffHunk": "@@ -102,25 +107,37 @@ public void setup() {\n     }\n \n     /**\n-     * Configuring and initializing the plugin succeeds without freezing or\n-     * crashing the calling thread. Basic. \ud83d\ude44\n-     * @throws AmplifyException Not expected; on failure to configure of initialize plugin.\n+     * Configuring and initializing the plugin succeeds without freezing or crashing the calling thread. Basic. \ud83d\ude44\n+     * @throws AmplifyException On failure to configure or initialize plugin.\n      */\n     @Test\n-    public void configureAndInitializeInLocalMode() throws AmplifyException {\n+    public void configureAndInitialize() throws AmplifyException {\n         //Configure DataStore with an empty config (All defaults)\n+        ApiCategory emptyApiCategory = spy(ApiCategory.class);\n+        AWSDataStorePlugin standAloneDataStorePlugin = new AWSDataStorePlugin(modelProvider, emptyApiCategory);\n+        standAloneDataStorePlugin.configure(new JSONObject(), context);\n+        standAloneDataStorePlugin.initialize(context);\n+    }\n+\n+    /**\n+     * Starting the plugin in local mode (no API plugin) works without freezing or crashing the calling thread.\n+     * @throws AmplifyException Not expected; on failure to configure of initialize plugin.\n+     */\n+    @Test\n+    public void startInLocalMode() throws AmplifyException {\n+//        //Configure DataStore with an empty config (All defaults)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e391fbd9a7ecf3aee90f626aa61d203ea6719e8"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk3MzgzMQ==", "bodyText": "Line 223 still says \"synchronization processes are restarted\"; could you update the Javadoc?", "url": "https://github.com/aws-amplify/amplify-android/pull/909#discussion_r507973831", "createdAt": "2020-10-19T18:28:54Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/AWSDataStorePluginTest.java", "diffHunk": "@@ -204,7 +225,7 @@ public void configureAndInitializeInApiModeWithoutApi() throws JSONException, Am\n      * @throws AmplifyException on failure to arrange API plugin via Amplify facade\n      */\n     @Test\n-    public void clearStopsSyncUntilNextInteraction() throws AmplifyException, JSONException {\n+    public void clearStopsSyncAndDeletesDatabase() throws AmplifyException, JSONException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e391fbd9a7ecf3aee90f626aa61d203ea6719e8"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk3ODU3MQ==", "bodyText": "This won't actually fail the test. jUnit will only report a test failure if the assertion error is raised on the test runner's thread. This will crash the new Thread, but it won't get reported.\nIf you don't rely on the fail for the test to be useful, I'd suggest changing this fail to a comment, like:\n// This doesn't matter, we'll catch the failure later when we validate (thing you'll validate later).\nIf you are expecting this fail to catch a bad state, you'd have to coalesce it back into control flow on the test runner thread, somehow.", "url": "https://github.com/aws-amplify/amplify-android/pull/909#discussion_r507978571", "createdAt": "2020-10-19T18:36:21Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/syncengine/OrchestratorTest.java", "diffHunk": "@@ -156,7 +158,13 @@ public void preventConcurrentStateTransitions() throws AmplifyException {\n         orchestrator.start();\n \n         // Try to start it in a new thread.\n-        new Thread(() -> orchestrator.start()).start();\n+        new Thread(() -> {\n+            try {\n+                orchestrator.start();\n+            } catch (DataStoreException exception) {\n+                fail(\"Error occurred starting the orchestrator.\" + exception);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e391fbd9a7ecf3aee90f626aa61d203ea6719e8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk3ODk0Ng==", "bodyText": "Maybe we should order these nearer to configure(...) and initialize(...) in the document, since they are more lifecycle-oriented?", "url": "https://github.com/aws-amplify/amplify-android/pull/909#discussion_r507978946", "createdAt": "2020-10-19T18:37:04Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/datastore/DataStoreCategory.java", "diffHunk": "@@ -183,6 +183,16 @@ public void observe(\n             onObservationStarted, onDataStoreItemChange, onObservationFailure, onObservationCompleted);\n     }\n \n+    @Override\n+    public void start(@NonNull Action onComplete, @NonNull Consumer<DataStoreException> onError) {\n+        getSelectedPlugin().start(onComplete, onError);\n+    }\n+\n+    @Override\n+    public void stop(@NonNull Action onComplete, @NonNull Consumer<DataStoreException> onError) {\n+        getSelectedPlugin().stop(onComplete, onError);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e391fbd9a7ecf3aee90f626aa61d203ea6719e8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MjQ5Ng==", "bodyText": "Suggest a few tweaks to language to:\n\nRemove use of \"it\", which increases cognitive buffering in dense technical writing, and\nTalk explicitly about synchronization with a remote system. Currently, there is not enough differentiation from configure() or initialize().\n\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Starts the DataStore.  This only needs to be called if you wish to start eagerly.  If you don't call it,\n          \n          \n            \n                 * it will be called automatically prior to executing any other operations (#query, #save, #delete, #observe).\n          \n          \n            \n                 * Starts the DataStore's synchronization with a remote system, if DataStore is configured to support\n          \n          \n            \n                 * remote synchronization. This only needs to be called if you wish to start the synchronization eagerly.\n          \n          \n            \n                 * If you don't call start(), the synchronization will start automatically, prior to executing any other\n          \n          \n            \n                 * operations (#query, #save, #delete, #observe).\n          \n      \n    \n    \n  \n\nI might suggest going back and updating configure(), initialize() (well, it's on the category), and clear(), to more explicitly highlight their relationship to the new start() and stop().", "url": "https://github.com/aws-amplify/amplify-android/pull/909#discussion_r507982496", "createdAt": "2020-10-19T18:43:25Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/datastore/DataStoreCategoryBehavior.java", "diffHunk": "@@ -227,7 +227,29 @@ void observe(\n     );\n \n     /**\n-     * Resets the underlying DataStore to its pre-initialized state such that no data remains on the local\n+     * Starts the DataStore.  This only needs to be called if you wish to start eagerly.  If you don't call it,\n+     * it will be called automatically prior to executing any other operations (#query, #save, #delete, #observe).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e391fbd9a7ecf3aee90f626aa61d203ea6719e8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NDk2NA==", "bodyText": "Similar thoughts as above, about the onComplete, here. But also: what's the DX for this callback, why would someone use it? Shouldn't start(...) wait until model synchronization is fully started, to invoke this? Otherwise, why wouldn't I just always use the READY event? And if I should always prefer READY, then couldn't we remove this callback? Lastly, we now have:\n\nConfigured\nInitialized\nStarted\nReady\n\nAll of which mean different things. That might be okay internally to our code, but I wonder if we can eliminate ~2 of these entirely from the user's view.", "url": "https://github.com/aws-amplify/amplify-android/pull/909#discussion_r507984964", "createdAt": "2020-10-19T18:47:29Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/datastore/DataStoreCategoryBehavior.java", "diffHunk": "@@ -227,7 +227,29 @@ void observe(\n     );\n \n     /**\n-     * Resets the underlying DataStore to its pre-initialized state such that no data remains on the local\n+     * Starts the DataStore.  This only needs to be called if you wish to start eagerly.  If you don't call it,\n+     * it will be called automatically prior to executing any other operations (#query, #save, #delete, #observe).\n+     *\n+     * @param onComplete Invoked after DataStore is initialized.  This does not block until subscriptions and\n+     *                  sync are complete.  To block until sync and subscriptions are complete, use\n+     *                   Amplify.Hub.subscribe to listen for the DataStoreChannelEventName.READY event on\n+     *                   HubChannel.DATASTORE.\n+     * @param onError Invoked if an exception occurs.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e391fbd9a7ecf3aee90f626aa61d203ea6719e8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NjIzOA==", "bodyText": "Nice!! I think there are a few places where I could have used this, around the code base. I can go back and patch them up, now that you've added this.", "url": "https://github.com/aws-amplify/amplify-android/pull/909#discussion_r507986238", "createdAt": "2020-10-19T18:49:42Z", "author": {"login": "jamesonwilliams"}, "path": "testutils/src/main/java/com/amplifyframework/testutils/VoidResult.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.testutils;\n+\n+/**\n+ * Result placeholder to be used when there is no value emitted from a task, but we are interested in the completion of\n+ * the task.\n+ */\n+public final class VoidResult {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e391fbd9a7ecf3aee90f626aa61d203ea6719e8"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3742a3ed0b9827029fc9d0346e41777e1e7f25a6", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/3742a3ed0b9827029fc9d0346e41777e1e7f25a6", "committedDate": "2020-10-19T19:50:05Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Jameson Williams <jhwill@amazon.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "456dcf8cc5ff6af75b0d44f2912751ef4d7c3115", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/456dcf8cc5ff6af75b0d44f2912751ef4d7c3115", "committedDate": "2020-10-19T21:09:03Z", "message": "method reordering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eab859fba669d539ba6a2d45e6bfb98f997c6680", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/eab859fba669d539ba6a2d45e6bfb98f997c6680", "committedDate": "2020-10-20T19:21:37Z", "message": "spacing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNjA3Mzk3", "url": "https://github.com/aws-amplify/amplify-android/pull/909#pullrequestreview-513607397", "createdAt": "2020-10-21T12:12:30Z", "commit": {"oid": "456dcf8cc5ff6af75b0d44f2912751ef4d7c3115"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMjoxMjozMFrOHlordg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzowMzoyNFrOHlqsLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTIyNTg0Ng==", "bodyText": "The idea behind this test was to check that concurrent calls start the orchestrator would only result in the orchestrator starting once. This is checked by the assertion on line 172 which checks that the query method on the API was called only once.\nSince start now throws a DataStoreException, you may just need to add that exception to the throws statement of the test declaration.\nOr if you want to wait for the orchestrator.start() from the thread to finish (line 163) , you can use a CountdownLatch that gets counted down right after the call completes.", "url": "https://github.com/aws-amplify/amplify-android/pull/909#discussion_r509225846", "createdAt": "2020-10-21T12:12:30Z", "author": {"login": "rjuliano"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/syncengine/OrchestratorTest.java", "diffHunk": "@@ -156,7 +158,13 @@ public void preventConcurrentStateTransitions() throws AmplifyException {\n         orchestrator.start();\n \n         // Try to start it in a new thread.\n-        new Thread(() -> orchestrator.start()).start();\n+        new Thread(() -> {\n+            try {\n+                orchestrator.start();\n+            } catch (DataStoreException exception) {\n+                fail(\"Error occurred starting the orchestrator.\" + exception);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk3ODU3MQ=="}, "originalCommit": {"oid": "9e391fbd9a7ecf3aee90f626aa61d203ea6719e8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI1MjA5Mw==", "bodyText": "Could both onComplete and onError fire for the same call? I think onComplete will always fire, but if an exception is thrown by orchestrator.start() the onError(...) callback will also be invoked which could lead to devs assuming that if onComplete() fires, they're OK to move on with the rest of their call flow.\nThis is a tough one to sort out. Maybe instead of having two callbacks, we have a onStatus(status) callback that emits different statuses based on where we are in the initialization process of the sync engine?\nOr we just go with no callbacks and tell devs to rely on hub events to track the state of the sync engine.", "url": "https://github.com/aws-amplify/amplify-android/pull/909#discussion_r509252093", "createdAt": "2020-10-21T12:53:31Z", "author": {"login": "rjuliano"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AWSDataStorePlugin.java", "diffHunk": "@@ -238,6 +236,68 @@ private Completable initializeStorageAdapter(Context context) {\n         ));\n     }\n \n+    private void waitForInitialization(@NonNull Action onComplete, @NonNull Consumer<DataStoreException> onError) {\n+        Completable.create(emitter -> {\n+            categoryInitializationsPending.await();\n+            emitter.onComplete();\n+        })\n+                .timeout(LIFECYCLE_TIMEOUT_MS, TimeUnit.MILLISECONDS)\n+                .subscribeOn(Schedulers.io())\n+                .subscribe(\n+                        () -> onComplete.call(),\n+                        throwable -> onError.accept(new DataStoreException(\"Request failed because DataStore is not \" +\n+                                \"initialized.\", throwable, \"Retry your request.\"))\n+                );\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public void start(@NonNull Action onComplete, @NonNull Consumer<DataStoreException> onError) {\n+        waitForInitialization(() -> {\n+            try {\n+                orchestrator.start();\n+            } catch (DataStoreException exception) {\n+                onError.accept(exception);\n+                return;\n+            }\n+            onComplete.call();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456dcf8cc5ff6af75b0d44f2912751ef4d7c3115"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI1ODc5Ng==", "bodyText": "I've struggled with this one. If the intent is to align with JS (as much as possible), start() really means startSyncEngine(), but the naming is besides the point here. One of the things we discussed is that for the mobile platforms, blocking execution during the entirety of the initialization of sync engine could lead to poor UX.\nIn the past, I've advocated for blocking only until StorageObserver starts since that's the bare minimum we would need to ensure no customer data is lost. That being said, that would give the onComplete callback yet another meaning, so I'm not too sure about that.\nLooking at the plugin code, it looks like the onComplete callback basically lets them know that we've received their request to start the sync engine. I commented under the start method of the plugin as well, but there may be a scenario which both onComplete and onError can fire for the same call, which could lead to confusion.\nMaybe the \"easy\" answer is to have no callbacks on start and stop, and tell devs to listen to sync engine events on the Hub.", "url": "https://github.com/aws-amplify/amplify-android/pull/909#discussion_r509258796", "createdAt": "2020-10-21T13:03:24Z", "author": {"login": "rjuliano"}, "path": "core/src/main/java/com/amplifyframework/datastore/DataStoreCategoryBehavior.java", "diffHunk": "@@ -227,7 +227,29 @@ void observe(\n     );\n \n     /**\n-     * Resets the underlying DataStore to its pre-initialized state such that no data remains on the local\n+     * Starts the DataStore.  This only needs to be called if you wish to start eagerly.  If you don't call it,\n+     * it will be called automatically prior to executing any other operations (#query, #save, #delete, #observe).\n+     *\n+     * @param onComplete Invoked after DataStore is initialized.  This does not block until subscriptions and\n+     *                  sync are complete.  To block until sync and subscriptions are complete, use\n+     *                   Amplify.Hub.subscribe to listen for the DataStoreChannelEventName.READY event on\n+     *                   HubChannel.DATASTORE.\n+     * @param onError Invoked if an exception occurs.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NDk2NA=="}, "originalCommit": {"oid": "9e391fbd9a7ecf3aee90f626aa61d203ea6719e8"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f682b54ebbc2a5bc21b737bc14be37f159056e8", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/1f682b54ebbc2a5bc21b737bc14be37f159056e8", "committedDate": "2020-10-22T21:19:23Z", "message": "Update test to fail if error is thrown in separate thread"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40f7e83a9c77d0eae7621d5720ef2a75c6e556f1", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/40f7e83a9c77d0eae7621d5720ef2a75c6e556f1", "committedDate": "2020-10-28T22:15:47Z", "message": "Merge branch 'main' into rm/ds-start"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MTI3Mjg0", "url": "https://github.com/aws-amplify/amplify-android/pull/909#pullrequestreview-519127284", "createdAt": "2020-10-28T22:19:13Z", "commit": {"oid": "40f7e83a9c77d0eae7621d5720ef2a75c6e556f1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MTQzMzky", "url": "https://github.com/aws-amplify/amplify-android/pull/909#pullrequestreview-519143392", "createdAt": "2020-10-28T22:54:31Z", "commit": {"oid": "40f7e83a9c77d0eae7621d5720ef2a75c6e556f1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMjo1NDozMVrOHqAb3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMjo1NDozMVrOHqAb3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzgwOTM3Mg==", "bodyText": "How about:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    CountDownLatch startOrchestratorInNewThreadLatch = new CountDownLatch(1);\n          \n          \n            \n                    new Thread(() -> {\n          \n          \n            \n                        try {\n          \n          \n            \n                            orchestrator.start();\n          \n          \n            \n                            startOrchestratorInNewThreadLatch.countDown();\n          \n          \n            \n                        } catch (DataStoreException exception) {\n          \n          \n            \n                            // No need to do anything here.  Test will fail down below when latch times out.\n          \n          \n            \n                        }\n          \n          \n            \n                    }).start();\n          \n          \n            \n            \n          \n          \n            \n                    // Try to start it again on a current thread.\n          \n          \n            \n                    orchestrator.start();\n          \n          \n            \n            \n          \n          \n            \n                    if (!startOrchestratorInNewThreadLatch.await(2, TimeUnit.SECONDS)) {\n          \n          \n            \n                        fail(\"Failed to start orchestrator on a background thread.\");\n          \n          \n            \n                    }\n          \n          \n            \n                    Completable\n          \n          \n            \n                        .create(subscriber -> {\n          \n          \n            \n                            new Thread(() -> {\n          \n          \n            \n                               try {\n          \n          \n            \n                                   orchestrator.start();\n          \n          \n            \n                                   subscriber.onComplete();\n          \n          \n            \n                               } catch (DataStoreException failure) {\n          \n          \n            \n                                   subscriber.onFailure(failure);\n          \n          \n            \n                               }\n          \n          \n            \n                            }).start();\n          \n          \n            \n                        })\n          \n          \n            \n                        .blockingAwait(5, TimeUnit.SECONDS);\n          \n      \n    \n    \n  \n\nOr:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    CountDownLatch startOrchestratorInNewThreadLatch = new CountDownLatch(1);\n          \n          \n            \n                    new Thread(() -> {\n          \n          \n            \n                        try {\n          \n          \n            \n                            orchestrator.start();\n          \n          \n            \n                            startOrchestratorInNewThreadLatch.countDown();\n          \n          \n            \n                        } catch (DataStoreException exception) {\n          \n          \n            \n                            // No need to do anything here.  Test will fail down below when latch times out.\n          \n          \n            \n                        }\n          \n          \n            \n                    }).start();\n          \n          \n            \n            \n          \n          \n            \n                    // Try to start it again on a current thread.\n          \n          \n            \n                    orchestrator.start();\n          \n          \n            \n            \n          \n          \n            \n                    if (!startOrchestratorInNewThreadLatch.await(2, TimeUnit.SECONDS)) {\n          \n          \n            \n                        fail(\"Failed to start orchestrator on a background thread.\");\n          \n          \n            \n                    }\n          \n          \n            \n                    Await\n          \n          \n            \n                        .<VoidResult, DataStoreException>result((onResult, onError) -> {\n          \n          \n            \n                            new Thread(() -> {\n          \n          \n            \n                               try {\n          \n          \n            \n                                   orchestrator.start();\n          \n          \n            \n                                   onResult.accept(VoidResult.instance());\n          \n          \n            \n                               } catch (DataStoreException failure) {\n          \n          \n            \n                                   onError.accept(failure);\n          \n          \n            \n                               }\n          \n          \n            \n                            }).start();\n          \n          \n            \n                        });", "url": "https://github.com/aws-amplify/amplify-android/pull/909#discussion_r513809372", "createdAt": "2020-10-28T22:54:31Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/syncengine/OrchestratorTest.java", "diffHunk": "@@ -146,17 +149,32 @@ public void itemsPlacedInStorageArePublishedToNetwork() throws AmplifyException\n \n     /**\n      * Verify preventing concurrent state transitions from happening.\n+     * @throws AmplifyException Not expected.\n+     * @throws InterruptedException Not expected.\n      */\n     @Test\n-    public void preventConcurrentStateTransitions() {\n+    public void preventConcurrentStateTransitions() throws AmplifyException, InterruptedException {\n         // Arrange: orchestrator is running\n         orchestrator.start();\n \n         // Try to start it in a new thread.\n-        new Thread(() -> orchestrator.start()).start();\n+        CountDownLatch startOrchestratorInNewThreadLatch = new CountDownLatch(1);\n+        new Thread(() -> {\n+            try {\n+                orchestrator.start();\n+                startOrchestratorInNewThreadLatch.countDown();\n+            } catch (DataStoreException exception) {\n+                // No need to do anything here.  Test will fail down below when latch times out.\n+            }\n+        }).start();\n+\n         // Try to start it again on a current thread.\n         orchestrator.start();\n \n+        if (!startOrchestratorInNewThreadLatch.await(2, TimeUnit.SECONDS)) {\n+            fail(\"Failed to start orchestrator on a background thread.\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40f7e83a9c77d0eae7621d5720ef2a75c6e556f1"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd73248046c5b944400475972365e8c944dac175", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/dd73248046c5b944400475972365e8c944dac175", "committedDate": "2020-10-29T02:47:21Z", "message": "Fix merge issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37aa39646625c7753094cd6d719f70e64c222938", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/37aa39646625c7753094cd6d719f70e64c222938", "committedDate": "2020-10-29T03:40:31Z", "message": "Use RxJava instead of CountdownLatch in test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1765, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}