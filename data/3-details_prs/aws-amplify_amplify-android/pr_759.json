{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0MDQxMzU5", "number": 759, "title": "feature(rxbindings) Added progress-aware Rx constructs", "bodyText": "Issue #, if available:\nDescription of changes:\nCreated some constructs to support the work necessary to provide a more idiomatic experience for consumers wishing to use RxJava. As a first step, I modified the download operations in RxStorageCategoryBehavior to reflect these changes.\nCommon\n\nRxSingleOperation<T>(Interface) where T is the type expected by the onResult Consumer in the callback-style API.\n\nStorage-specific\n\nRxStorageTransferCallbackMapper<T>(Interface) where T is the type expected by the onResult Consumer in the callback-style API.\nRxProgressAwareSingleOperation(Class) implements RxSingleOperation<T>  and provides a constructor that accepts RxStorageTransferCallbackMapper<T, P, E>. It serves as a representation of an operation that returns a Single and emits progress events.\n\nInternally, RxProgressAwareSingleOperation uses a couple of subjects (aka Rx objects you can publish and subscribe) to enqueue results, errors and progress updates received from the callback-style API. The constructor for this class maps the callbacks defined in RxStorageTransferCallbackMapper to methods that publish results to the subjects I just mentioned. It also gives us a reference to the AmplifyOperation returned by the callback-style API. This is needed in case we need to cancel the operation.\nUpdated download APIs.\nTo validate this approach, I have updated the downloadFile APIs for the storage category in rxbindings.\nI created a couple of interfaces to serve almost as type aliases:\n\n\n\nType Alias\nActual Type\n\n\n\n\nRxStorageDownloadCallbackMapper\nRxProgressAwareCallbackMapper<StorageDownloadFileResult,StorageTransferProgress,StorageException>\n\n\nRxStorageDownloadOperation\nRxProgressAwareSingle<StorageDownloadFileResult, StorageTransferProgress>\n\n\n\nConsumers of the API will look something like this.\nRxStorageBinding.RxProgressAwareSingleOperation<StorageDownloadFileResult> rxOperation = rxStorage.downloadFile(remoteKey, localFile, StorageDownloadFileOptions.defaultInstance());\nrxOperation.observeProgress().subscribe(storageStatus -> ...);\nSingle<StorageDownloadFileResult> resultSingle = rxOperation.observeResult();\n// Use resultSingle however they wish\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-08-26T17:08:40Z", "url": "https://github.com/aws-amplify/amplify-android/pull/759", "merged": true, "mergeCommit": {"oid": "98a05ed297dbf377ac10b3920878d3f58a1f3ed9"}, "closed": true, "closedAt": "2020-08-26T22:40:38Z", "author": {"login": "rjuliano"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCuyoOgH2gAyNDc0MDQxMzU5OmU2MzRkM2JjOTg2MWM2MTc5YjQ1YTcyNmVmMmVhYzE2NThhZjc1ZDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCy-X-AFqTQ3NTg4MzA3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e634d3bc9861c6179b45a726ef2eac1658af75d4", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/e634d3bc9861c6179b45a726ef2eac1658af75d4", "committedDate": "2020-08-26T16:56:01Z", "message": "feature(rxbindings) Added progress-aware Rx constructs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1473bb5d83d2eccf38c97f71f9c65c165ce59631", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/1473bb5d83d2eccf38c97f71f9c65c165ce59631", "committedDate": "2020-08-26T17:05:09Z", "message": "Renamed interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd36de2aa83b8084cc889f8d3fd3da3cd5419e59", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/dd36de2aa83b8084cc889f8d3fd3da3cd5419e59", "committedDate": "2020-08-26T17:11:59Z", "message": "More cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b84b223f2e247fb2394726e124a66d2c4b38ee24", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/b84b223f2e247fb2394726e124a66d2c4b38ee24", "committedDate": "2020-08-26T18:28:00Z", "message": "Fixed upload test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NzY4NjE2", "url": "https://github.com/aws-amplify/amplify-android/pull/759#pullrequestreview-475768616", "createdAt": "2020-08-26T18:55:53Z", "commit": {"oid": "b84b223f2e247fb2394726e124a66d2c4b38ee24"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODo1NTo1M1rOHHZXPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODo1ODozMlrOHHZdGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxNzYyOQ==", "bodyText": "Since progress is currently only defined for Storage, should we move these new RxProgressAwareSingle and RxProgressAwareOperation out of RxAdapters, and into RxStorageBinding.java? (Well, the interface might need to go in RxStorageCategoryBehavior.java?)", "url": "https://github.com/aws-amplify/amplify-android/pull/759#discussion_r477517629", "createdAt": "2020-08-26T18:55:53Z", "author": {"login": "jamesonwilliams"}, "path": "rxbindings/src/main/java/com/amplifyframework/rx/RxAdapters.java", "diffHunk": "@@ -100,4 +103,85 @@ private RxAdapters() {}\n     interface VoidCompletionEmitter<E> {\n         void emitTo(Action onComplete, Consumer<E> onError);\n     }\n+\n+    /**\n+     * Interface that defines a contract for callback-style operations to be\n+     * mapped to reactive-style operation types that offer a more idiomatic way\n+     * of using reactive programming with the Amplify framework.\n+     * @param <T> The type that represents the result of a given operation.\n+     * @param <P> The type that represents the progress of a given operation.\n+     * @param <E> The type of exception of a given operation.\n+     */\n+    interface RxProgressAwareCallbackMapper<T, P, E> {\n+        Cancelable emitTo(Consumer<P> onProgress, Consumer<T> onItem, Consumer<E> onError);\n+    }\n+\n+    /**\n+     * Interface that should be implemented by reactive-style operations\n+     * wishing to return a {@link Single} as its result.\n+     * @param <T> The type that represents the result of a given operation.\n+     */\n+    interface RxSingleOperation<T> extends Cancelable {\n+        /**\n+         * Maps the result of a callback-style operation to a {@link Single}.\n+         * @return A {@link Single} that emits a result or an error.\n+         */\n+        Single<T> observeResult();\n+    }\n+\n+    /**\n+     * Interface that should be implemented by reactive-style operations\n+     * that emit progress information during processing.\n+     * @param <P> The type that represents the progress of a given operation.\n+     */\n+    interface RxProgressAwareOperation<P> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b84b223f2e247fb2394726e124a66d2c4b38ee24"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxODc3MA==", "bodyText": "Just return Single without caching to variable?", "url": "https://github.com/aws-amplify/amplify-android/pull/759#discussion_r477518770", "createdAt": "2020-08-26T18:57:51Z", "author": {"login": "jamesonwilliams"}, "path": "rxbindings/src/main/java/com/amplifyframework/rx/RxAdapters.java", "diffHunk": "@@ -100,4 +103,85 @@ private RxAdapters() {}\n     interface VoidCompletionEmitter<E> {\n         void emitTo(Action onComplete, Consumer<E> onError);\n     }\n+\n+    /**\n+     * Interface that defines a contract for callback-style operations to be\n+     * mapped to reactive-style operation types that offer a more idiomatic way\n+     * of using reactive programming with the Amplify framework.\n+     * @param <T> The type that represents the result of a given operation.\n+     * @param <P> The type that represents the progress of a given operation.\n+     * @param <E> The type of exception of a given operation.\n+     */\n+    interface RxProgressAwareCallbackMapper<T, P, E> {\n+        Cancelable emitTo(Consumer<P> onProgress, Consumer<T> onItem, Consumer<E> onError);\n+    }\n+\n+    /**\n+     * Interface that should be implemented by reactive-style operations\n+     * wishing to return a {@link Single} as its result.\n+     * @param <T> The type that represents the result of a given operation.\n+     */\n+    interface RxSingleOperation<T> extends Cancelable {\n+        /**\n+         * Maps the result of a callback-style operation to a {@link Single}.\n+         * @return A {@link Single} that emits a result or an error.\n+         */\n+        Single<T> observeResult();\n+    }\n+\n+    /**\n+     * Interface that should be implemented by reactive-style operations\n+     * that emit progress information during processing.\n+     * @param <P> The type that represents the progress of a given operation.\n+     */\n+    interface RxProgressAwareOperation<P> {\n+        /**\n+         * Returns an observable that the caller can subscribe to\n+         * receive progress information about the operation.\n+         * @return An observable that emits progress information.\n+         */\n+        Observable<P> observeProgress();\n+    }\n+\n+    /**\n+     * A generic implementation of an operation that emits\n+     * progress information and returns a single.\n+     * @param <T> The type that represents the result of a given operation.\n+     * @param <P> The type that represents the progress of a given operation.\n+     */\n+    static class RxProgressAwareSingle<T, P>\n+        implements RxAdapters.RxSingleOperation<T>, RxProgressAwareOperation<P> {\n+\n+        private PublishSubject<P> progressSubject;\n+        private ReplaySubject<T> resultSubject;\n+        private Cancelable amplifyOperation;\n+\n+        RxProgressAwareSingle(RxProgressAwareCallbackMapper<T, P, ? extends AmplifyException> callbacks) {\n+            progressSubject = PublishSubject.create();\n+            resultSubject = ReplaySubject.create();\n+            amplifyOperation = callbacks.emitTo(progressSubject::onNext,\n+                                                resultSubject::onNext,\n+                                                resultSubject::onError);\n+        }\n+\n+        @Override\n+        public void cancel() {\n+            amplifyOperation.cancel();\n+            resultSubject.onComplete();\n+            progressSubject.onComplete();\n+        }\n+\n+        @Override\n+        public Single<T> observeResult() {\n+            Single<T> objectSingle = Single.create(emitter -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b84b223f2e247fb2394726e124a66d2c4b38ee24"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxOTEzMQ==", "bodyText": "If we only have this one thing that's progress aware, should we flatten these two interfaces into just one?", "url": "https://github.com/aws-amplify/amplify-android/pull/759#discussion_r477519131", "createdAt": "2020-08-26T18:58:32Z", "author": {"login": "jamesonwilliams"}, "path": "rxbindings/src/main/java/com/amplifyframework/rx/RxStorageBinding.java", "diffHunk": "@@ -113,4 +116,25 @@\n     private <T> Single<T> toSingle(RxAdapters.CancelableResultEmitter<T, StorageException> method) {\n         return RxAdapters.toSingle(method);\n     }\n+\n+    /**\n+     * Defines the parameters of the download operation by\n+     * supplying the generic types required by {@link RxAdapters.RxProgressAwareSingle}.\n+     */\n+    static final class RxStorageDownloadOperation extends\n+        RxAdapters.RxProgressAwareSingle<StorageDownloadFileResult, StorageTransferProgress> {\n+        RxStorageDownloadOperation(RxStorageDownloadCallbackMapper callbacks) {\n+            super(callbacks);\n+        }\n+    }\n+\n+    /**\n+     * Type alias that defines the generic parameters for a download operation.\n+     * @see RxAdapters.RxProgressAwareCallbackMapper\n+     */\n+    interface RxStorageDownloadCallbackMapper\n+        extends RxAdapters.RxProgressAwareCallbackMapper<StorageDownloadFileResult,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b84b223f2e247fb2394726e124a66d2c4b38ee24"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b9b2240454ae68012e21ecb5572638db32c6742", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/8b9b2240454ae68012e21ecb5572638db32c6742", "committedDate": "2020-08-26T19:58:14Z", "message": "Addressing PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "562e1aec39a481d1afb5ef3caef27cc10a3872ba", "author": {"user": {"login": "rjuliano", "name": "Rafael Juliano"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/562e1aec39a481d1afb5ef3caef27cc10a3872ba", "committedDate": "2020-08-26T20:12:07Z", "message": "Merge branch 'feature/rxbindings' into rjuliano/rxbindings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODgzMDcw", "url": "https://github.com/aws-amplify/amplify-android/pull/759#pullrequestreview-475883070", "createdAt": "2020-08-26T21:48:28Z", "commit": {"oid": "562e1aec39a481d1afb5ef3caef27cc10a3872ba"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3404, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}