{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNjg1NDQ1", "number": 622, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoxMTo0N1rOELs_LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMTo1MjoxN1rOEL2uKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzA2ODYwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/DeveloperMenuActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoxMTo0N1rOGtY_Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoxMTo0N1rOGtY_Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI0ODUxOQ==", "bodyText": "These should probably be listed above the event listener, especially since the listener references shakeStart.", "url": "https://github.com/aws-amplify/amplify-android/pull/622#discussion_r450248519", "createdAt": "2020-07-06T14:11:47Z", "author": {"login": "TrekSoft"}, "path": "core/src/main/java/com/amplifyframework/core/DeveloperMenuActivity.java", "diffHunk": "@@ -16,16 +16,112 @@\n package com.amplifyframework.core;\n \n import android.app.Activity;\n+import android.content.Context;\n+import android.hardware.Sensor;\n+import android.hardware.SensorEvent;\n+import android.hardware.SensorEventListener;\n+import android.hardware.SensorManager;\n import android.os.Bundle;\n+import android.view.KeyEvent;\n+import android.view.View;\n+\n+import com.amplifyframework.util.Time;\n \n /**\n  * This is the activity to display the developer menu.\n  */\n public final class DeveloperMenuActivity extends Activity {\n+    // A device movement is classified as a shake if the acceleration\n+    // is above this threshold.\n+    private static final double SHAKE_THRESHOLD = 11.7;\n+    // The minimum duration (in milliseconds) that the device needs to\n+    // be shaken in order to make the developer menu appear or disappear.\n+    private static final int SHAKE_TIME = 500;\n+\n+    // Listen to accelerometer sensor events.\n+    private final SensorEventListener sensorEventListener = new SensorEventListener() {\n+        @Override\n+        public void onSensorChanged(SensorEvent sensorEvent) {\n+            float xAccel = sensorEvent.values[0]; // acceleration in the x-direction\n+            float yAccel = sensorEvent.values[1]; // acceleration in the y-direction\n+            float zAccel = sensorEvent.values[2]; // acceleration in the z-direction\n+            double curAcceleration = Math.sqrt(((xAccel * xAccel) + (yAccel * yAccel) + (zAccel * zAccel)));\n+            if (curAcceleration > SHAKE_THRESHOLD) {\n+                long currentTime = Time.now();\n+                if (shakeStart == 0) {\n+                    shakeStart = currentTime;\n+                } else if (currentTime - shakeStart > SHAKE_TIME) {\n+                    changeVisibility();\n+                    shakeStart = 0;\n+                }\n+            }\n+        }\n+\n+        @Override\n+        public void onAccuracyChanged(Sensor sensor, int accuracy) { }\n+    };\n+\n+    // Manager for the device's sensors.\n+    private SensorManager sensorManager;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59f95d076adafdd81a4e5db3428fc9de81962044"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzA4MTQxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/DeveloperMenuActivity.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoxNDo0NVrOGtZHEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDo1MjozNFrOGtavsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1MDUxMg==", "bodyText": "Should super.onKeyUp only be called if it's not matching the keycode? It seems like something that should always be called.", "url": "https://github.com/aws-amplify/amplify-android/pull/622#discussion_r450250512", "createdAt": "2020-07-06T14:14:45Z", "author": {"login": "TrekSoft"}, "path": "core/src/main/java/com/amplifyframework/core/DeveloperMenuActivity.java", "diffHunk": "@@ -16,16 +16,112 @@\n package com.amplifyframework.core;\n \n import android.app.Activity;\n+import android.content.Context;\n+import android.hardware.Sensor;\n+import android.hardware.SensorEvent;\n+import android.hardware.SensorEventListener;\n+import android.hardware.SensorManager;\n import android.os.Bundle;\n+import android.view.KeyEvent;\n+import android.view.View;\n+\n+import com.amplifyframework.util.Time;\n \n /**\n  * This is the activity to display the developer menu.\n  */\n public final class DeveloperMenuActivity extends Activity {\n+    // A device movement is classified as a shake if the acceleration\n+    // is above this threshold.\n+    private static final double SHAKE_THRESHOLD = 11.7;\n+    // The minimum duration (in milliseconds) that the device needs to\n+    // be shaken in order to make the developer menu appear or disappear.\n+    private static final int SHAKE_TIME = 500;\n+\n+    // Listen to accelerometer sensor events.\n+    private final SensorEventListener sensorEventListener = new SensorEventListener() {\n+        @Override\n+        public void onSensorChanged(SensorEvent sensorEvent) {\n+            float xAccel = sensorEvent.values[0]; // acceleration in the x-direction\n+            float yAccel = sensorEvent.values[1]; // acceleration in the y-direction\n+            float zAccel = sensorEvent.values[2]; // acceleration in the z-direction\n+            double curAcceleration = Math.sqrt(((xAccel * xAccel) + (yAccel * yAccel) + (zAccel * zAccel)));\n+            if (curAcceleration > SHAKE_THRESHOLD) {\n+                long currentTime = Time.now();\n+                if (shakeStart == 0) {\n+                    shakeStart = currentTime;\n+                } else if (currentTime - shakeStart > SHAKE_TIME) {\n+                    changeVisibility();\n+                    shakeStart = 0;\n+                }\n+            }\n+        }\n+\n+        @Override\n+        public void onAccuracyChanged(Sensor sensor, int accuracy) { }\n+    };\n+\n+    // Manager for the device's sensors.\n+    private SensorManager sensorManager;\n+    // The accelerometer sensor associated with the device.\n+    private Sensor accelerometer;\n+    // The time (in milliseconds) that the device started shaking\n+    // (or 0 if the device is not shaking).\n+    private long shakeStart;\n+    // The parent layout for the developer menu.\n+    private View devMenuLayout;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_dev_menu);\n+        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);\n+        if (sensorManager != null) {\n+            accelerometer = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);\n+        }\n+        devMenuLayout = findViewById(R.id.devLayout);\n+        devMenuLayout.setFocusable(true);\n+        devMenuLayout.setVisibility(View.GONE);\n+        shakeStart = 0;\n+    }\n+\n+    @Override\n+    protected void onResume() {\n+        if (accelerometer != null) {\n+            sensorManager.registerListener(sensorEventListener, accelerometer, SensorManager.SENSOR_DELAY_NORMAL);\n+        }\n+        super.onResume();\n+    }\n+\n+    @Override\n+    protected void onPause() {\n+        if (accelerometer != null) {\n+            sensorManager.unregisterListener(sensorEventListener);\n+        }\n+        super.onPause();\n+    }\n+\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        // KEYCODE_MENU is the code for pressing ctrl\n+        // (or command) + m\n+        if (keyCode == KeyEvent.KEYCODE_MENU) {\n+            changeVisibility();\n+            return true;\n+        } else {\n+            return super.onKeyUp(keyCode, event);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59f95d076adafdd81a4e5db3428fc9de81962044"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI3NzI5Ng==", "bodyText": "In examples in the Android documentation, they override onKeyUp in a similar manner (only returning super.onKeyUp if the keycode doesn't match a certain value). Also, if I change the code to always return super.onKeyUp, even if the keycode matches the one for ctrl+m, then the visibility of the developer menu is only changed the first two times I press ctrl+m.", "url": "https://github.com/aws-amplify/amplify-android/pull/622#discussion_r450277296", "createdAt": "2020-07-06T14:52:34Z", "author": {"login": "eeatonaws"}, "path": "core/src/main/java/com/amplifyframework/core/DeveloperMenuActivity.java", "diffHunk": "@@ -16,16 +16,112 @@\n package com.amplifyframework.core;\n \n import android.app.Activity;\n+import android.content.Context;\n+import android.hardware.Sensor;\n+import android.hardware.SensorEvent;\n+import android.hardware.SensorEventListener;\n+import android.hardware.SensorManager;\n import android.os.Bundle;\n+import android.view.KeyEvent;\n+import android.view.View;\n+\n+import com.amplifyframework.util.Time;\n \n /**\n  * This is the activity to display the developer menu.\n  */\n public final class DeveloperMenuActivity extends Activity {\n+    // A device movement is classified as a shake if the acceleration\n+    // is above this threshold.\n+    private static final double SHAKE_THRESHOLD = 11.7;\n+    // The minimum duration (in milliseconds) that the device needs to\n+    // be shaken in order to make the developer menu appear or disappear.\n+    private static final int SHAKE_TIME = 500;\n+\n+    // Listen to accelerometer sensor events.\n+    private final SensorEventListener sensorEventListener = new SensorEventListener() {\n+        @Override\n+        public void onSensorChanged(SensorEvent sensorEvent) {\n+            float xAccel = sensorEvent.values[0]; // acceleration in the x-direction\n+            float yAccel = sensorEvent.values[1]; // acceleration in the y-direction\n+            float zAccel = sensorEvent.values[2]; // acceleration in the z-direction\n+            double curAcceleration = Math.sqrt(((xAccel * xAccel) + (yAccel * yAccel) + (zAccel * zAccel)));\n+            if (curAcceleration > SHAKE_THRESHOLD) {\n+                long currentTime = Time.now();\n+                if (shakeStart == 0) {\n+                    shakeStart = currentTime;\n+                } else if (currentTime - shakeStart > SHAKE_TIME) {\n+                    changeVisibility();\n+                    shakeStart = 0;\n+                }\n+            }\n+        }\n+\n+        @Override\n+        public void onAccuracyChanged(Sensor sensor, int accuracy) { }\n+    };\n+\n+    // Manager for the device's sensors.\n+    private SensorManager sensorManager;\n+    // The accelerometer sensor associated with the device.\n+    private Sensor accelerometer;\n+    // The time (in milliseconds) that the device started shaking\n+    // (or 0 if the device is not shaking).\n+    private long shakeStart;\n+    // The parent layout for the developer menu.\n+    private View devMenuLayout;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_dev_menu);\n+        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);\n+        if (sensorManager != null) {\n+            accelerometer = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);\n+        }\n+        devMenuLayout = findViewById(R.id.devLayout);\n+        devMenuLayout.setFocusable(true);\n+        devMenuLayout.setVisibility(View.GONE);\n+        shakeStart = 0;\n+    }\n+\n+    @Override\n+    protected void onResume() {\n+        if (accelerometer != null) {\n+            sensorManager.registerListener(sensorEventListener, accelerometer, SensorManager.SENSOR_DELAY_NORMAL);\n+        }\n+        super.onResume();\n+    }\n+\n+    @Override\n+    protected void onPause() {\n+        if (accelerometer != null) {\n+            sensorManager.unregisterListener(sensorEventListener);\n+        }\n+        super.onPause();\n+    }\n+\n+    @Override\n+    public boolean onKeyUp(int keyCode, KeyEvent event) {\n+        // KEYCODE_MENU is the code for pressing ctrl\n+        // (or command) + m\n+        if (keyCode == KeyEvent.KEYCODE_MENU) {\n+            changeVisibility();\n+            return true;\n+        } else {\n+            return super.onKeyUp(keyCode, event);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI1MDUxMg=="}, "originalCommit": {"oid": "59f95d076adafdd81a4e5db3428fc9de81962044"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzc5NjExOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/DeveloperMenuActivity.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzowNjowN1rOGtf8OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxOTo1MzoxMFrOGtlDUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2MjQyNQ==", "bodyText": "If I'm reading this correctly, Amplify would keep the accelerometer active at all times, to receive sensor data, so it can detect a shake. This will drain the battery, so we need a different solution. What mechanisms can you put in place to limit the lifecycle of the accelerometer? How can you prevent this from running \"most of the time\", when Amplify is in production?", "url": "https://github.com/aws-amplify/amplify-android/pull/622#discussion_r450362425", "createdAt": "2020-07-06T17:06:07Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/DeveloperMenuActivity.java", "diffHunk": "@@ -16,16 +16,112 @@\n package com.amplifyframework.core;\n \n import android.app.Activity;\n+import android.content.Context;\n+import android.hardware.Sensor;\n+import android.hardware.SensorEvent;\n+import android.hardware.SensorEventListener;\n+import android.hardware.SensorManager;\n import android.os.Bundle;\n+import android.view.KeyEvent;\n+import android.view.View;\n+\n+import com.amplifyframework.util.Time;\n \n /**\n  * This is the activity to display the developer menu.\n  */\n public final class DeveloperMenuActivity extends Activity {\n+    // A device movement is classified as a shake if the acceleration\n+    // is above this threshold.\n+    private static final double SHAKE_THRESHOLD = 11.7;\n+    // The minimum duration (in milliseconds) that the device needs to\n+    // be shaken in order to make the developer menu appear or disappear.\n+    private static final int SHAKE_TIME = 500;\n+\n+    // Manager for the device's sensors.\n+    private SensorManager sensorManager;\n+    // The accelerometer sensor associated with the device.\n+    private Sensor accelerometer;\n+    // The time (in milliseconds) that the device started shaking\n+    // (or 0 if the device is not shaking).\n+    private long shakeStart;\n+    // The parent layout for the developer menu.\n+    private View devMenuLayout;\n+\n+    // Listen to accelerometer sensor events.\n+    private final SensorEventListener sensorEventListener = new SensorEventListener() {\n+        @Override\n+        public void onSensorChanged(SensorEvent sensorEvent) {\n+            float xAccel = sensorEvent.values[0]; // acceleration in the x-direction\n+            float yAccel = sensorEvent.values[1]; // acceleration in the y-direction\n+            float zAccel = sensorEvent.values[2]; // acceleration in the z-direction\n+            double curAcceleration = Math.sqrt(((xAccel * xAccel) + (yAccel * yAccel) + (zAccel * zAccel)));\n+            if (curAcceleration > SHAKE_THRESHOLD) {\n+                long currentTime = Time.now();\n+                if (shakeStart == 0) {\n+                    shakeStart = currentTime;\n+                } else if (currentTime - shakeStart > SHAKE_TIME) {\n+                    changeVisibility();\n+                    shakeStart = 0;\n+                }\n+            }\n+        }\n+\n+        @Override\n+        public void onAccuracyChanged(Sensor sensor, int accuracy) { }\n+    };\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_dev_menu);\n+        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);\n+        if (sensorManager != null) {\n+            accelerometer = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);\n+        }\n+        devMenuLayout = findViewById(R.id.devLayout);\n+        devMenuLayout.setFocusable(true);\n+        devMenuLayout.setVisibility(View.GONE);\n+        shakeStart = 0;\n+    }\n+\n+    @Override\n+    protected void onResume() {\n+        if (accelerometer != null) {\n+            sensorManager.registerListener(sensorEventListener, accelerometer, SensorManager.SENSOR_DELAY_NORMAL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e860ea2b7300e055bca4f7f63c49c133d31734c6"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2NTIxOQ==", "bodyText": "When you say \"Amplify is in production\", are you referring to when the developer is using Amplify in their app and their app is in production (release build)?", "url": "https://github.com/aws-amplify/amplify-android/pull/622#discussion_r450365219", "createdAt": "2020-07-06T17:11:35Z", "author": {"login": "eeatonaws"}, "path": "core/src/main/java/com/amplifyframework/core/DeveloperMenuActivity.java", "diffHunk": "@@ -16,16 +16,112 @@\n package com.amplifyframework.core;\n \n import android.app.Activity;\n+import android.content.Context;\n+import android.hardware.Sensor;\n+import android.hardware.SensorEvent;\n+import android.hardware.SensorEventListener;\n+import android.hardware.SensorManager;\n import android.os.Bundle;\n+import android.view.KeyEvent;\n+import android.view.View;\n+\n+import com.amplifyframework.util.Time;\n \n /**\n  * This is the activity to display the developer menu.\n  */\n public final class DeveloperMenuActivity extends Activity {\n+    // A device movement is classified as a shake if the acceleration\n+    // is above this threshold.\n+    private static final double SHAKE_THRESHOLD = 11.7;\n+    // The minimum duration (in milliseconds) that the device needs to\n+    // be shaken in order to make the developer menu appear or disappear.\n+    private static final int SHAKE_TIME = 500;\n+\n+    // Manager for the device's sensors.\n+    private SensorManager sensorManager;\n+    // The accelerometer sensor associated with the device.\n+    private Sensor accelerometer;\n+    // The time (in milliseconds) that the device started shaking\n+    // (or 0 if the device is not shaking).\n+    private long shakeStart;\n+    // The parent layout for the developer menu.\n+    private View devMenuLayout;\n+\n+    // Listen to accelerometer sensor events.\n+    private final SensorEventListener sensorEventListener = new SensorEventListener() {\n+        @Override\n+        public void onSensorChanged(SensorEvent sensorEvent) {\n+            float xAccel = sensorEvent.values[0]; // acceleration in the x-direction\n+            float yAccel = sensorEvent.values[1]; // acceleration in the y-direction\n+            float zAccel = sensorEvent.values[2]; // acceleration in the z-direction\n+            double curAcceleration = Math.sqrt(((xAccel * xAccel) + (yAccel * yAccel) + (zAccel * zAccel)));\n+            if (curAcceleration > SHAKE_THRESHOLD) {\n+                long currentTime = Time.now();\n+                if (shakeStart == 0) {\n+                    shakeStart = currentTime;\n+                } else if (currentTime - shakeStart > SHAKE_TIME) {\n+                    changeVisibility();\n+                    shakeStart = 0;\n+                }\n+            }\n+        }\n+\n+        @Override\n+        public void onAccuracyChanged(Sensor sensor, int accuracy) { }\n+    };\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_dev_menu);\n+        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);\n+        if (sensorManager != null) {\n+            accelerometer = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);\n+        }\n+        devMenuLayout = findViewById(R.id.devLayout);\n+        devMenuLayout.setFocusable(true);\n+        devMenuLayout.setVisibility(View.GONE);\n+        shakeStart = 0;\n+    }\n+\n+    @Override\n+    protected void onResume() {\n+        if (accelerometer != null) {\n+            sensorManager.registerListener(sensorEventListener, accelerometer, SensorManager.SENSOR_DELAY_NORMAL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2MjQyNQ=="}, "originalCommit": {"oid": "e860ea2b7300e055bca4f7f63c49c133d31734c6"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4NTE2NA==", "bodyText": "Yes!", "url": "https://github.com/aws-amplify/amplify-android/pull/622#discussion_r450385164", "createdAt": "2020-07-06T17:50:09Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/DeveloperMenuActivity.java", "diffHunk": "@@ -16,16 +16,112 @@\n package com.amplifyframework.core;\n \n import android.app.Activity;\n+import android.content.Context;\n+import android.hardware.Sensor;\n+import android.hardware.SensorEvent;\n+import android.hardware.SensorEventListener;\n+import android.hardware.SensorManager;\n import android.os.Bundle;\n+import android.view.KeyEvent;\n+import android.view.View;\n+\n+import com.amplifyframework.util.Time;\n \n /**\n  * This is the activity to display the developer menu.\n  */\n public final class DeveloperMenuActivity extends Activity {\n+    // A device movement is classified as a shake if the acceleration\n+    // is above this threshold.\n+    private static final double SHAKE_THRESHOLD = 11.7;\n+    // The minimum duration (in milliseconds) that the device needs to\n+    // be shaken in order to make the developer menu appear or disappear.\n+    private static final int SHAKE_TIME = 500;\n+\n+    // Manager for the device's sensors.\n+    private SensorManager sensorManager;\n+    // The accelerometer sensor associated with the device.\n+    private Sensor accelerometer;\n+    // The time (in milliseconds) that the device started shaking\n+    // (or 0 if the device is not shaking).\n+    private long shakeStart;\n+    // The parent layout for the developer menu.\n+    private View devMenuLayout;\n+\n+    // Listen to accelerometer sensor events.\n+    private final SensorEventListener sensorEventListener = new SensorEventListener() {\n+        @Override\n+        public void onSensorChanged(SensorEvent sensorEvent) {\n+            float xAccel = sensorEvent.values[0]; // acceleration in the x-direction\n+            float yAccel = sensorEvent.values[1]; // acceleration in the y-direction\n+            float zAccel = sensorEvent.values[2]; // acceleration in the z-direction\n+            double curAcceleration = Math.sqrt(((xAccel * xAccel) + (yAccel * yAccel) + (zAccel * zAccel)));\n+            if (curAcceleration > SHAKE_THRESHOLD) {\n+                long currentTime = Time.now();\n+                if (shakeStart == 0) {\n+                    shakeStart = currentTime;\n+                } else if (currentTime - shakeStart > SHAKE_TIME) {\n+                    changeVisibility();\n+                    shakeStart = 0;\n+                }\n+            }\n+        }\n+\n+        @Override\n+        public void onAccuracyChanged(Sensor sensor, int accuracy) { }\n+    };\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_dev_menu);\n+        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);\n+        if (sensorManager != null) {\n+            accelerometer = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);\n+        }\n+        devMenuLayout = findViewById(R.id.devLayout);\n+        devMenuLayout.setFocusable(true);\n+        devMenuLayout.setVisibility(View.GONE);\n+        shakeStart = 0;\n+    }\n+\n+    @Override\n+    protected void onResume() {\n+        if (accelerometer != null) {\n+            sensorManager.registerListener(sensorEventListener, accelerometer, SensorManager.SENSOR_DELAY_NORMAL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2MjQyNQ=="}, "originalCommit": {"oid": "e860ea2b7300e055bca4f7f63c49c133d31734c6"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4ODI4OA==", "bodyText": "The developer menu will only be activated for a debuggable build, not for release builds (I added a check in Amplify.java in a previous PR that only starts the developer menu activity if the build is debuggable).", "url": "https://github.com/aws-amplify/amplify-android/pull/622#discussion_r450388288", "createdAt": "2020-07-06T17:56:04Z", "author": {"login": "eeatonaws"}, "path": "core/src/main/java/com/amplifyframework/core/DeveloperMenuActivity.java", "diffHunk": "@@ -16,16 +16,112 @@\n package com.amplifyframework.core;\n \n import android.app.Activity;\n+import android.content.Context;\n+import android.hardware.Sensor;\n+import android.hardware.SensorEvent;\n+import android.hardware.SensorEventListener;\n+import android.hardware.SensorManager;\n import android.os.Bundle;\n+import android.view.KeyEvent;\n+import android.view.View;\n+\n+import com.amplifyframework.util.Time;\n \n /**\n  * This is the activity to display the developer menu.\n  */\n public final class DeveloperMenuActivity extends Activity {\n+    // A device movement is classified as a shake if the acceleration\n+    // is above this threshold.\n+    private static final double SHAKE_THRESHOLD = 11.7;\n+    // The minimum duration (in milliseconds) that the device needs to\n+    // be shaken in order to make the developer menu appear or disappear.\n+    private static final int SHAKE_TIME = 500;\n+\n+    // Manager for the device's sensors.\n+    private SensorManager sensorManager;\n+    // The accelerometer sensor associated with the device.\n+    private Sensor accelerometer;\n+    // The time (in milliseconds) that the device started shaking\n+    // (or 0 if the device is not shaking).\n+    private long shakeStart;\n+    // The parent layout for the developer menu.\n+    private View devMenuLayout;\n+\n+    // Listen to accelerometer sensor events.\n+    private final SensorEventListener sensorEventListener = new SensorEventListener() {\n+        @Override\n+        public void onSensorChanged(SensorEvent sensorEvent) {\n+            float xAccel = sensorEvent.values[0]; // acceleration in the x-direction\n+            float yAccel = sensorEvent.values[1]; // acceleration in the y-direction\n+            float zAccel = sensorEvent.values[2]; // acceleration in the z-direction\n+            double curAcceleration = Math.sqrt(((xAccel * xAccel) + (yAccel * yAccel) + (zAccel * zAccel)));\n+            if (curAcceleration > SHAKE_THRESHOLD) {\n+                long currentTime = Time.now();\n+                if (shakeStart == 0) {\n+                    shakeStart = currentTime;\n+                } else if (currentTime - shakeStart > SHAKE_TIME) {\n+                    changeVisibility();\n+                    shakeStart = 0;\n+                }\n+            }\n+        }\n+\n+        @Override\n+        public void onAccuracyChanged(Sensor sensor, int accuracy) { }\n+    };\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_dev_menu);\n+        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);\n+        if (sensorManager != null) {\n+            accelerometer = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);\n+        }\n+        devMenuLayout = findViewById(R.id.devLayout);\n+        devMenuLayout.setFocusable(true);\n+        devMenuLayout.setVisibility(View.GONE);\n+        shakeStart = 0;\n+    }\n+\n+    @Override\n+    protected void onResume() {\n+        if (accelerometer != null) {\n+            sensorManager.registerListener(sensorEventListener, accelerometer, SensorManager.SENSOR_DELAY_NORMAL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2MjQyNQ=="}, "originalCommit": {"oid": "e860ea2b7300e055bca4f7f63c49c133d31734c6"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ0NjE2MQ==", "bodyText": "Okay, great. Thanks for reminding me. It's my job to be paranoid about it. :-D", "url": "https://github.com/aws-amplify/amplify-android/pull/622#discussion_r450446161", "createdAt": "2020-07-06T19:53:10Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/DeveloperMenuActivity.java", "diffHunk": "@@ -16,16 +16,112 @@\n package com.amplifyframework.core;\n \n import android.app.Activity;\n+import android.content.Context;\n+import android.hardware.Sensor;\n+import android.hardware.SensorEvent;\n+import android.hardware.SensorEventListener;\n+import android.hardware.SensorManager;\n import android.os.Bundle;\n+import android.view.KeyEvent;\n+import android.view.View;\n+\n+import com.amplifyframework.util.Time;\n \n /**\n  * This is the activity to display the developer menu.\n  */\n public final class DeveloperMenuActivity extends Activity {\n+    // A device movement is classified as a shake if the acceleration\n+    // is above this threshold.\n+    private static final double SHAKE_THRESHOLD = 11.7;\n+    // The minimum duration (in milliseconds) that the device needs to\n+    // be shaken in order to make the developer menu appear or disappear.\n+    private static final int SHAKE_TIME = 500;\n+\n+    // Manager for the device's sensors.\n+    private SensorManager sensorManager;\n+    // The accelerometer sensor associated with the device.\n+    private Sensor accelerometer;\n+    // The time (in milliseconds) that the device started shaking\n+    // (or 0 if the device is not shaking).\n+    private long shakeStart;\n+    // The parent layout for the developer menu.\n+    private View devMenuLayout;\n+\n+    // Listen to accelerometer sensor events.\n+    private final SensorEventListener sensorEventListener = new SensorEventListener() {\n+        @Override\n+        public void onSensorChanged(SensorEvent sensorEvent) {\n+            float xAccel = sensorEvent.values[0]; // acceleration in the x-direction\n+            float yAccel = sensorEvent.values[1]; // acceleration in the y-direction\n+            float zAccel = sensorEvent.values[2]; // acceleration in the z-direction\n+            double curAcceleration = Math.sqrt(((xAccel * xAccel) + (yAccel * yAccel) + (zAccel * zAccel)));\n+            if (curAcceleration > SHAKE_THRESHOLD) {\n+                long currentTime = Time.now();\n+                if (shakeStart == 0) {\n+                    shakeStart = currentTime;\n+                } else if (currentTime - shakeStart > SHAKE_TIME) {\n+                    changeVisibility();\n+                    shakeStart = 0;\n+                }\n+            }\n+        }\n+\n+        @Override\n+        public void onAccuracyChanged(Sensor sensor, int accuracy) { }\n+    };\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_dev_menu);\n+        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);\n+        if (sensorManager != null) {\n+            accelerometer = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);\n+        }\n+        devMenuLayout = findViewById(R.id.devLayout);\n+        devMenuLayout.setFocusable(true);\n+        devMenuLayout.setVisibility(View.GONE);\n+        shakeStart = 0;\n+    }\n+\n+    @Override\n+    protected void onResume() {\n+        if (accelerometer != null) {\n+            sensorManager.registerListener(sensorEventListener, accelerometer, SensorManager.SENSOR_DELAY_NORMAL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2MjQyNQ=="}, "originalCommit": {"oid": "e860ea2b7300e055bca4f7f63c49c133d31734c6"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODY2MjU0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/DeveloperMenuActivity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMTo1MTo1OFrOGtoQ5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMTo1MTo1OFrOGtoQ5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ5ODc5MA==", "bodyText": "Still sort of \"leaking\" a detail of the ShakeDetector, here. I'd grab this off the context internally.", "url": "https://github.com/aws-amplify/amplify-android/pull/622#discussion_r450498790", "createdAt": "2020-07-06T21:51:58Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/DeveloperMenuActivity.java", "diffHunk": "@@ -16,16 +16,65 @@\n package com.amplifyframework.core;\n \n import android.app.Activity;\n+import android.content.Context;\n+import android.hardware.SensorManager;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79bead5640b823697e44c5b5480093dd1b98da10"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODY2MzQ1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/ShakeDetector.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMTo1MjoxN1rOGtoRbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMTo1MjoxN1rOGtoRbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ5ODkyNg==", "bodyText": "You'll want to add a unit test for this.", "url": "https://github.com/aws-amplify/amplify-android/pull/622#discussion_r450498926", "createdAt": "2020-07-06T21:52:17Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/ShakeDetector.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core;\n+\n+import android.hardware.Sensor;\n+import android.hardware.SensorEvent;\n+import android.hardware.SensorEventListener;\n+import android.hardware.SensorManager;\n+\n+import com.amplifyframework.util.Time;\n+\n+/**\n+ * Detects a device shake event.\n+ */\n+public final class ShakeDetector {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79bead5640b823697e44c5b5480093dd1b98da10"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1070, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}