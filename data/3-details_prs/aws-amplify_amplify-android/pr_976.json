{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1MDI1NTUz", "number": 976, "title": "feat(aws-datastore): add mutation failed hub event", "bodyText": "Description of changes:\nCurrently, there is no logic in place to handle a failed attempt at publishing a mutation. If the failed mutation was due to an unrecoverable cause such as @auth violation, then it will stay in the mutation outbox and block the queue.\nTo unblock the outbox, the failing mutation must be removed from the queue, but there needs to be a mechanism to alert this action to the customer since customer data is being modified as a result. This PR adds:\n\nlogic to remove failing mutation\na hub event containing details of failed mutation and underlying error response\n\nNote: the hub event payload has not yet been finalized across other platforms. The PR will stay as a draft until it is.\nFinal format:\nOutboxMutationFailedEvent:\n{\n    errorType: Enum // error type from the server \n    operation: Enum // type of mutation that failed (Create vs Update vs Delete)\n    model: Model // current local model\n    modelName: String // model name\n}\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-11-21T00:40:33Z", "url": "https://github.com/aws-amplify/amplify-android/pull/976", "merged": true, "mergeCommit": {"oid": "50b397c114b7542f892e5f0d98f43c1907ea719e"}, "closed": true, "closedAt": "2020-12-08T18:30:48Z", "author": {"login": "raphkim"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeg4yQgH2gAyNTI1MDI1NTUzOmY4MTBlZjMwNTRiMmMyZmQ4NGI5MzcyM2IzNThjOGI2MjNkMzFlMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkQqdZAFqTU0Njc3OTk2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f810ef3054b2c2fd84b93723b358c8b623d31e23", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/f810ef3054b2c2fd84b93723b358c8b623d31e23", "committedDate": "2020-11-21T00:33:57Z", "message": "add mutation failed hub event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4ba372298191535a2bfb720ba4a22fe62bdacbf", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/f4ba372298191535a2bfb720ba4a22fe62bdacbf", "committedDate": "2020-11-23T13:16:26Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2ODE2ODcw", "url": "https://github.com/aws-amplify/amplify-android/pull/976#pullrequestreview-536816870", "createdAt": "2020-11-23T20:22:08Z", "commit": {"oid": "f4ba372298191535a2bfb720ba4a22fe62bdacbf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMDoyMjowOVrOH4d-Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMDoyMjowOVrOH4d-Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk3MzM0Nw==", "bodyText": "Hmm.  I think this error is going to bubble up all the way to MutationProcessor::startDrainingMutationOutbox, and stop all subsequent mutations from being processed.  This is an existing problem, but it would be ideal if we can address it in this PR.\nI would suggest these changes:\n\nInstead of emitting a DataStoreException, emit a DataStoreException.GraphQLResponseException.  That will allow us to identify it as an error that should be swallowed higher up in the stack.\nIn MutationProcessor::processOutboxItem, if publishToNetwork gets an error, swallow it, and complete.  You can do that with something like this:\n\n.onErrorComplete(error -> error instanceof DataStoreException.GraphQLResponseException)\n\n\nAfter making the first two changes, you could move the logic for the removing the item from the queue and calling announceMutationFailed into processOutboxItem.  Since DataStoreException.GraphQLResponseException is able to hold a list of GraphQLResponse.Error objects, they will be available to build a OutboxMutationFailedEvent.   It would be a little cleaner than doing it down in handleResponseErrors, since it would be right next to the call to announceMutationProcessed.  You'd add something like this:\n\n.doOnError(error -> {\n    mutationOutbox.remove(mutationOutboxItem.getMutationId())\n        .doOnComplete(() -> announceMutationFailed(mutationOutboxItem, error))\n}\n\nNote that even with all these suggested changes, I think there is still a problem with the way non-AppSync errors are handled (e.g. network errors) (#823).  We can address that separately though.", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r528973347", "createdAt": "2020-11-23T20:22:09Z", "author": {"login": "richardmcclellan"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/MutationProcessor.java", "diffHunk": "@@ -287,15 +296,24 @@ void stopDrainingMutationOutbox() {\n         Class<T> modelClazz = (Class<T>) pendingMutation.getModelSchema().getModelClass();\n         AppSyncConflictUnhandledError<T> unhandledConflict =\n             AppSyncConflictUnhandledError.findFirst(modelClazz, errors);\n-        if (unhandledConflict == null) {\n-            return Single.error(new DataStoreException(\n-                \"Mutation failed. Failed mutation = \" + pendingMutation + \". \" +\n-                    \"AppSync response contained errors = \" + errors,\n-                \"Verify that your AppSync endpoint is able to store \" + modelClazz + \" models.\"\n-            ));\n+        if (unhandledConflict != null) {\n+            return conflictResolver.resolve(pendingMutation, unhandledConflict);\n         }\n \n-        return conflictResolver.resolve(pendingMutation, unhandledConflict);\n+        // If error was not due to ConflictUnhandled, then just publish\n+        // error to Hub and remove pending mutation from outbox.\n+        // This helps unclog the mutation outbox by removing a failing\n+        // mutation from the queue.\n+        return Completable.fromAction(() -> announceMutationFailed(pendingMutation, errors))\n+            .doOnError(error -> LOG.warn(\"Failed to create an outboxMutationFailedEvent. \", error))\n+            .andThen(mutationOutbox.remove(pendingMutation.getMutationId()))\n+            .andThen(Single.error(new DataStoreException(\n+                    \"Mutation failed. Failed mutation = \" + pendingMutation + \". \" +\n+                            \"AppSync response contained errors = \" + errors,\n+                    \"Verify that your AppSync endpoint is able to store \" +\n+                            pendingMutation.getMutatedItem() + \".\"\n+            )));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4ba372298191535a2bfb720ba4a22fe62bdacbf"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjAzMDk2", "url": "https://github.com/aws-amplify/amplify-android/pull/976#pullrequestreview-541203096", "createdAt": "2020-11-30T18:59:35Z", "commit": {"oid": "f4ba372298191535a2bfb720ba4a22fe62bdacbf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODo1OTozNVrOH8JO6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODo1OTozNVrOH8JO6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgyNzg4Mw==", "bodyText": "Let's either make all of the payloads do this, or none. Can we save this for a follow up PR where we switch over all payload structures at once?", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r532827883", "createdAt": "2020-11-30T18:59:35Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationEvent.java", "diffHunk": "@@ -31,7 +32,7 @@\n  * and {@link DataStoreChannelEventName#OUTBOX_MUTATION_PROCESSED} event.\n  * @param <M> The class type of the model in the mutation outbox.\n  */\n-public final class OutboxMutationEvent<M extends Model> {\n+public final class OutboxMutationEvent<M extends Model> implements HubEvent.Data<OutboxMutationEvent<M>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4ba372298191535a2bfb720ba4a22fe62bdacbf"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjA0Mjg0", "url": "https://github.com/aws-amplify/amplify-android/pull/976#pullrequestreview-541204284", "createdAt": "2020-11-30T19:01:07Z", "commit": {"oid": "f4ba372298191535a2bfb720ba4a22fe62bdacbf"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "056dc55aef007b9e7072cf1d3a6f25fb03bae9bd", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/056dc55aef007b9e7072cf1d3a6f25fb03bae9bd", "committedDate": "2020-11-30T22:47:56Z", "message": "apply pr suggestion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b3421e16fe701c1c8cb94c1dad2081ab3110e0b", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/8b3421e16fe701c1c8cb94c1dad2081ab3110e0b", "committedDate": "2020-12-01T01:22:38Z", "message": "make model removal part of the completable flow"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "8b3421e16fe701c1c8cb94c1dad2081ab3110e0b", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/8b3421e16fe701c1c8cb94c1dad2081ab3110e0b", "committedDate": "2020-12-01T01:22:38Z", "message": "make model removal part of the completable flow"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "548bf05f695f4ae1ec9af0e0c82eaa572fde0e50", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/548bf05f695f4ae1ec9af0e0c82eaa572fde0e50", "committedDate": "2020-12-01T01:46:40Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f996e2a97bc010db858022b67f24e61804d7e8f1", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/f996e2a97bc010db858022b67f24e61804d7e8f1", "committedDate": "2020-12-01T18:05:50Z", "message": "Merge branch 'main' of https://github.com/aws-amplify/amplify-android into mutation-error-hub"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65bc99904cf76777b647ca97702f46482db53bea", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/65bc99904cf76777b647ca97702f46482db53bea", "committedDate": "2020-12-01T19:46:22Z", "message": "minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fd366a0805c324a3d6ffcca5d61a3636630b79c", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/8fd366a0805c324a3d6ffcca5d61a3636630b79c", "committedDate": "2020-12-02T18:30:54Z", "message": "change payload shape to agreed format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjE5NzM2", "url": "https://github.com/aws-amplify/amplify-android/pull/976#pullrequestreview-543219736", "createdAt": "2020-12-02T20:41:27Z", "commit": {"oid": "8fd366a0805c324a3d6ffcca5d61a3636630b79c"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDo0MToyN1rOH9tS3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDo0ODoyOVrOH9tiBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ2NzI5NA==", "bodyText": "We recently got bit by this. getExtension() is nullable, but AppSyncExtensions requires non null. See #1000.", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r534467294", "createdAt": "2020-12-02T20:41:27Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -111,8 +96,83 @@ public M getModel() {\n         return model;\n     }\n \n+    /**\n+     * Gets the name of the model.\n+     * @return the model name\n+     */\n+    @NonNull\n+    public String getModelName() {\n+        return model.getClass().getSimpleName();\n+    }\n+\n     @Override\n     public HubEvent<OutboxMutationFailedEvent<M>> toHubEvent() {\n         return HubEvent.create(DataStoreChannelEventName.OUTBOX_MUTATION_FAILED, this);\n     }\n+\n+    @Override\n+    public String toString() {\n+        return \"OutboxMutationFailedEvent{\" +\n+                \"errorType=\" + errorType +\n+                \", operation=\" + operation +\n+                \", model=\" + model +\n+                \", modelName=\" + getModelName() +\n+                '}';\n+    }\n+\n+    /**\n+     * Categorization of error types that caused a mutation publication to fail.\n+     */\n+    public enum MutationErrorType {\n+        /**\n+         * The mutation operation is not authorized for the user.\n+         */\n+        UNAUTHORIZED(\"Unauthorized\"),\n+\n+        /**\n+         * Fallback type for any error that is yet to be categorized.\n+         */\n+        UNKNOWN(\"Unknown\");\n+\n+        private final String value;\n+\n+        MutationErrorType(String value) {\n+            this.value = value;\n+        }\n+\n+        /**\n+         * Get the value of error type received from cloud.\n+         * @return value of error type received from cloud\n+         */\n+        @NonNull\n+        public String getValue() {\n+            return value;\n+        }\n+\n+        /**\n+         * Returns an enum value of matching error type value.\n+         * @param value the type of error that caused mutation publication failure\n+         * @return An enum value of matching error type. If there is no match,\n+         *          then return {@link MutationErrorType#UNKNOWN}.\n+         */\n+        @NonNull\n+        public static MutationErrorType fromErrorType(@Nullable String value) {\n+            try {\n+                return MutationErrorType.valueOf(value);\n+            } catch (IllegalArgumentException exception) {\n+                return UNKNOWN;\n+            }\n+        }\n+\n+        // Look at the first error to extract error type.\n+        private static MutationErrorType fromGraphQLErrors(List<GraphQLResponse.Error> errors) {\n+            Iterator<GraphQLResponse.Error> iterator = errors.iterator();\n+            if (iterator.hasNext()) {\n+                GraphQLResponse.Error firstError = iterator.next();\n+                AppSyncExtensions extensions = new AppSyncExtensions(firstError.getExtensions());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fd366a0805c324a3d6ffcca5d61a3636630b79c"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ2ODEyMw==", "bodyText": "Hm, does valueOf check the name() (an uppercase String)? How would it know to inspect the value property, which is Pascal-cased?\nOne reference states:\n\nThe java.lang.Enum.valueOf() method returns the enum constant of the specified enum type with the specified name. The name must match exactly an identifier used to declare an enum constant in this type.", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r534468123", "createdAt": "2020-12-02T20:42:53Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -111,8 +96,83 @@ public M getModel() {\n         return model;\n     }\n \n+    /**\n+     * Gets the name of the model.\n+     * @return the model name\n+     */\n+    @NonNull\n+    public String getModelName() {\n+        return model.getClass().getSimpleName();\n+    }\n+\n     @Override\n     public HubEvent<OutboxMutationFailedEvent<M>> toHubEvent() {\n         return HubEvent.create(DataStoreChannelEventName.OUTBOX_MUTATION_FAILED, this);\n     }\n+\n+    @Override\n+    public String toString() {\n+        return \"OutboxMutationFailedEvent{\" +\n+                \"errorType=\" + errorType +\n+                \", operation=\" + operation +\n+                \", model=\" + model +\n+                \", modelName=\" + getModelName() +\n+                '}';\n+    }\n+\n+    /**\n+     * Categorization of error types that caused a mutation publication to fail.\n+     */\n+    public enum MutationErrorType {\n+        /**\n+         * The mutation operation is not authorized for the user.\n+         */\n+        UNAUTHORIZED(\"Unauthorized\"),\n+\n+        /**\n+         * Fallback type for any error that is yet to be categorized.\n+         */\n+        UNKNOWN(\"Unknown\");\n+\n+        private final String value;\n+\n+        MutationErrorType(String value) {\n+            this.value = value;\n+        }\n+\n+        /**\n+         * Get the value of error type received from cloud.\n+         * @return value of error type received from cloud\n+         */\n+        @NonNull\n+        public String getValue() {\n+            return value;\n+        }\n+\n+        /**\n+         * Returns an enum value of matching error type value.\n+         * @param value the type of error that caused mutation publication failure\n+         * @return An enum value of matching error type. If there is no match,\n+         *          then return {@link MutationErrorType#UNKNOWN}.\n+         */\n+        @NonNull\n+        public static MutationErrorType fromErrorType(@Nullable String value) {\n+            try {\n+                return MutationErrorType.valueOf(value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fd366a0805c324a3d6ffcca5d61a3636630b79c"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ2OTkyNg==", "bodyText": "This won't work when we are using ModelSchema on flutter. The new approach is to always ask modelSchema.getName(). I had to update this logic in #1012. You can most likely use a similar technique to access the model name externally, and then pass it in when you are constructing the OutboxMutationFailedEvent.\nTLDR, getClass().getSimpleName() isn't a thing for us anymore, we have to make them all say modelSchema.getName().", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r534469926", "createdAt": "2020-12-02T20:45:57Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -111,8 +96,83 @@ public M getModel() {\n         return model;\n     }\n \n+    /**\n+     * Gets the name of the model.\n+     * @return the model name\n+     */\n+    @NonNull\n+    public String getModelName() {\n+        return model.getClass().getSimpleName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fd366a0805c324a3d6ffcca5d61a3636630b79c"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ3MDcxMA==", "bodyText": "Hm, I'm confused by this logic. You're converting an error type (UNAUTHORIZED) to a MutationType (UPDATE, etc.)?", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r534470710", "createdAt": "2020-12-02T20:47:30Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -55,46 +55,31 @@ private OutboxMutationFailedEvent(\n      * @param errors the list of graphQL errors that caused the failure\n      * @param <M> Class type of the model.\n      * @return Outbox mutation error event.\n-     * @throws DataStoreException if unexpected mutation type\n      */\n     @NonNull\n     public static <M extends Model> OutboxMutationFailedEvent<M> create(\n             @NonNull PendingMutation<M> pendingMutation,\n             @NonNull List<GraphQLResponse.Error> errors\n-    ) throws DataStoreException {\n+    ) {\n         Objects.requireNonNull(pendingMutation);\n         Objects.requireNonNull(errors);\n-        final MutationType opType;\n-        switch (pendingMutation.getMutationType()) {\n-            case CREATE:\n-                opType = MutationType.CREATE;\n-                break;\n-            case UPDATE:\n-                opType = MutationType.UPDATE;\n-                break;\n-            case DELETE:\n-                opType = MutationType.DELETE;\n-                break;\n-            default:\n-                throw new DataStoreException(\n-                    \"Invalid operation type.\",\n-                    AmplifyException.REPORT_BUG_TO_AWS_SUGGESTION\n-                );\n-        }\n-        return new OutboxMutationFailedEvent<>(errors, opType, pendingMutation.getMutatedItem());\n+        MutationErrorType errorType = MutationErrorType.fromGraphQLErrors(errors);\n+        String operation = pendingMutation.getMutationType().name();\n+        MutationType opType = MutationType.valueOf(operation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fd366a0805c324a3d6ffcca5d61a3636630b79c"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ3MTE3NQ==", "bodyText": "As below, you're probably going to want to make modelName an explicit property of the shape, as opposed to trying to pull it from the model in the accessor.", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r534471175", "createdAt": "2020-12-02T20:48:29Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -35,16 +35,16 @@\n  */\n public final class OutboxMutationFailedEvent<M extends Model>\n         implements HubEvent.Data<OutboxMutationFailedEvent<M>> {\n-    private final List<GraphQLResponse.Error> errors;\n+    private final MutationErrorType errorType;\n     private final MutationType operation;\n     private final M model;\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fd366a0805c324a3d6ffcca5d61a3636630b79c"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "877c9c21a85fa0a5e70dc323e38c8aefa5b16105", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/877c9c21a85fa0a5e70dc323e38c8aefa5b16105", "committedDate": "2020-12-02T23:33:37Z", "message": "pr suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "877c9c21a85fa0a5e70dc323e38c8aefa5b16105", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/877c9c21a85fa0a5e70dc323e38c8aefa5b16105", "committedDate": "2020-12-02T23:33:37Z", "message": "pr suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d573938a5594a93130fa3bdcfeaa8b0526f5fcbd", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/d573938a5594a93130fa3bdcfeaa8b0526f5fcbd", "committedDate": "2020-12-02T23:47:53Z", "message": "Merge branch 'main' of https://github.com/aws-amplify/amplify-android into mutation-error-hub"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50a1b2a9b5b2f1c854a54f616d1b52e054a57591", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/50a1b2a9b5b2f1c854a54f616d1b52e054a57591", "committedDate": "2020-12-02T23:52:13Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NDU4OTAx", "url": "https://github.com/aws-amplify/amplify-android/pull/976#pullrequestreview-546458901", "createdAt": "2020-12-07T19:19:02Z", "commit": {"oid": "50a1b2a9b5b2f1c854a54f616d1b52e054a57591"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOToxOTowMlrOIA2hgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOToxOTowMlrOIA2hgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2NDIyNw==", "bodyText": "It's generally best practice to catch the lowest level of exception that you need, not all RuntimeExceptions.   Otherwise, it's unclear to future developers as to what could go wrong.    Can you just do a null check (Empty.check(firstError.getExtensions())), and return UNKNOWN for that case?", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r537764227", "createdAt": "2020-12-07T19:19:02Z", "author": {"login": "richardmcclellan"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -0,0 +1,183 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.syncengine;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.api.graphql.GraphQLResponse;\n+import com.amplifyframework.api.graphql.MutationType;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.datastore.DataStoreChannelEventName;\n+import com.amplifyframework.datastore.appsync.AppSyncExtensions;\n+import com.amplifyframework.hub.HubEvent;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+/**\n+ * Event payload for the {@link DataStoreChannelEventName#OUTBOX_MUTATION_FAILED} event.\n+ * @param <M> The class type of the model in the mutation outbox.\n+ */\n+public final class OutboxMutationFailedEvent<M extends Model>\n+        implements HubEvent.Data<OutboxMutationFailedEvent<M>> {\n+    private final MutationErrorType errorType;\n+    private final MutationType operation;\n+    private final String modelName;\n+    private final M model;\n+\n+    private OutboxMutationFailedEvent(\n+            MutationErrorType errorType,\n+            MutationType operation,\n+            String modelName,\n+            M model\n+    ) {\n+        this.errorType = errorType;\n+        this.operation = operation;\n+        this.modelName = modelName;\n+        this.model = model;\n+    }\n+\n+    /**\n+     * Constructs an outbox mutation error event.\n+     * @param pendingMutation pending mutation that failed to publish\n+     * @param errors the list of graphQL errors that caused the failure\n+     * @param <M> Class type of the model.\n+     * @return Outbox mutation error event.\n+     */\n+    @NonNull\n+    public static <M extends Model> OutboxMutationFailedEvent<M> create(\n+            @NonNull PendingMutation<M> pendingMutation,\n+            @NonNull List<GraphQLResponse.Error> errors\n+    ) {\n+        Objects.requireNonNull(pendingMutation);\n+        Objects.requireNonNull(errors);\n+        MutationErrorType errorType = MutationErrorType.fromGraphQlErrors(errors);\n+        String operation = pendingMutation.getMutationType().name();\n+        MutationType opType = MutationType.valueOf(operation);\n+        String name = pendingMutation.getModelSchema().getName();\n+        M model = pendingMutation.getMutatedItem();\n+        return new OutboxMutationFailedEvent<>(errorType, opType, name, model);\n+    }\n+\n+    /**\n+     * Returns the type of error that caused mutation publication to fail.\n+     * @return the type of error from the cloud.\n+     */\n+    @NonNull\n+    public MutationErrorType getErrorType() {\n+        return errorType;\n+    }\n+\n+    /**\n+     * Gets the mutation type.\n+     * @return the mutation type\n+     */\n+    @NonNull\n+    public MutationType getOperation() {\n+        return operation;\n+    }\n+\n+    /**\n+     * Gets the local model that failed to be mutated.\n+     * @return the local model\n+     */\n+    @NonNull\n+    public M getModel() {\n+        return model;\n+    }\n+\n+    /**\n+     * Gets the name of the model.\n+     * @return the model name\n+     */\n+    @NonNull\n+    public String getModelName() {\n+        return modelName;\n+    }\n+\n+    @Override\n+    public HubEvent<OutboxMutationFailedEvent<M>> toHubEvent() {\n+        return HubEvent.create(DataStoreChannelEventName.OUTBOX_MUTATION_FAILED, this);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"OutboxMutationFailedEvent{\" +\n+                \"errorType=\" + errorType +\n+                \", operation=\" + operation +\n+                \", modelName=\" + modelName +\n+                \", model=\" + model +\n+                '}';\n+    }\n+\n+    /**\n+     * Categorization of error types that caused a mutation publication to fail.\n+     */\n+    public enum MutationErrorType {\n+        /**\n+         * The mutation operation is not authorized for the user.\n+         */\n+        UNAUTHORIZED(\"Unauthorized\"),\n+\n+        /**\n+         * Fallback type for any error that is yet to be categorized.\n+         */\n+        UNKNOWN(\"Unknown\");\n+\n+        private final String value;\n+\n+        MutationErrorType(String value) {\n+            this.value = value;\n+        }\n+\n+        /**\n+         * Get the value of error type received from cloud.\n+         * @return value of error type received from cloud\n+         */\n+        @NonNull\n+        public String getValue() {\n+            return value;\n+        }\n+\n+        /**\n+         * Returns an enum value of matching error type value.\n+         * @param value the type of error that caused mutation publication failure\n+         * @return An enum value of matching error type. If there is no match,\n+         *          then return {@link MutationErrorType#UNKNOWN}.\n+         */\n+        @NonNull\n+        public static MutationErrorType enumerate(@Nullable String value) {\n+            for (MutationErrorType type : MutationErrorType.values()) {\n+                if (type.getValue().equals(value)) {\n+                    return type;\n+                }\n+            }\n+            return UNKNOWN;\n+        }\n+\n+        // Look at the first error to extract error type.\n+        private static MutationErrorType fromGraphQlErrors(List<GraphQLResponse.Error> errors) {\n+            try {\n+                GraphQLResponse.Error firstError = errors.get(0);\n+                AppSyncExtensions extensions = new AppSyncExtensions(firstError.getExtensions());\n+                return enumerate(extensions.getErrorType().getValue());\n+            } catch (RuntimeException parsingError) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50a1b2a9b5b2f1c854a54f616d1b52e054a57591"}, "originalPosition": 178}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NDc4MDMw", "url": "https://github.com/aws-amplify/amplify-android/pull/976#pullrequestreview-546478030", "createdAt": "2020-12-07T19:43:42Z", "commit": {"oid": "50a1b2a9b5b2f1c854a54f616d1b52e054a57591"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f157a5846b12655ab8f78dc1b16ed3dd31084d42", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/f157a5846b12655ab8f78dc1b16ed3dd31084d42", "committedDate": "2020-12-08T01:32:19Z", "message": "address pr comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2Njk2NDYw", "url": "https://github.com/aws-amplify/amplify-android/pull/976#pullrequestreview-546696460", "createdAt": "2020-12-08T02:25:21Z", "commit": {"oid": "f157a5846b12655ab8f78dc1b16ed3dd31084d42"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NzIwMDEz", "url": "https://github.com/aws-amplify/amplify-android/pull/976#pullrequestreview-546720013", "createdAt": "2020-12-08T03:33:51Z", "commit": {"oid": "f157a5846b12655ab8f78dc1b16ed3dd31084d42"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMzozMzo1MVrOIBFZyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMzozMzo1MVrOIBFZyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAwODAwOA==", "bodyText": "equals & hashCode please!", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r538008008", "createdAt": "2020-12-08T03:33:51Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -0,0 +1,183 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.syncengine;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.api.graphql.GraphQLResponse;\n+import com.amplifyframework.api.graphql.MutationType;\n+import com.amplifyframework.core.model.Model;\n+import com.amplifyframework.datastore.DataStoreChannelEventName;\n+import com.amplifyframework.datastore.appsync.AppSyncExtensions;\n+import com.amplifyframework.hub.HubEvent;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+/**\n+ * Event payload for the {@link DataStoreChannelEventName#OUTBOX_MUTATION_FAILED} event.\n+ * @param <M> The class type of the model in the mutation outbox.\n+ */\n+public final class OutboxMutationFailedEvent<M extends Model>\n+        implements HubEvent.Data<OutboxMutationFailedEvent<M>> {\n+    private final MutationErrorType errorType;\n+    private final MutationType operation;\n+    private final String modelName;\n+    private final M model;\n+\n+    private OutboxMutationFailedEvent(\n+            MutationErrorType errorType,\n+            MutationType operation,\n+            String modelName,\n+            M model\n+    ) {\n+        this.errorType = errorType;\n+        this.operation = operation;\n+        this.modelName = modelName;\n+        this.model = model;\n+    }\n+\n+    /**\n+     * Constructs an outbox mutation error event.\n+     * @param pendingMutation pending mutation that failed to publish\n+     * @param errors the list of graphQL errors that caused the failure\n+     * @param <M> Class type of the model.\n+     * @return Outbox mutation error event.\n+     */\n+    @NonNull\n+    public static <M extends Model> OutboxMutationFailedEvent<M> create(\n+            @NonNull PendingMutation<M> pendingMutation,\n+            @NonNull List<GraphQLResponse.Error> errors\n+    ) {\n+        Objects.requireNonNull(pendingMutation);\n+        Objects.requireNonNull(errors);\n+        MutationErrorType errorType = MutationErrorType.fromGraphQlErrors(errors);\n+        String operation = pendingMutation.getMutationType().name();\n+        MutationType opType = MutationType.valueOf(operation);\n+        String name = pendingMutation.getModelSchema().getName();\n+        M model = pendingMutation.getMutatedItem();\n+        return new OutboxMutationFailedEvent<>(errorType, opType, name, model);\n+    }\n+\n+    /**\n+     * Returns the type of error that caused mutation publication to fail.\n+     * @return the type of error from the cloud.\n+     */\n+    @NonNull\n+    public MutationErrorType getErrorType() {\n+        return errorType;\n+    }\n+\n+    /**\n+     * Gets the mutation type.\n+     * @return the mutation type\n+     */\n+    @NonNull\n+    public MutationType getOperation() {\n+        return operation;\n+    }\n+\n+    /**\n+     * Gets the local model that failed to be mutated.\n+     * @return the local model\n+     */\n+    @NonNull\n+    public M getModel() {\n+        return model;\n+    }\n+\n+    /**\n+     * Gets the name of the model.\n+     * @return the model name\n+     */\n+    @NonNull\n+    public String getModelName() {\n+        return modelName;\n+    }\n+\n+    @Override\n+    public HubEvent<OutboxMutationFailedEvent<M>> toHubEvent() {\n+        return HubEvent.create(DataStoreChannelEventName.OUTBOX_MUTATION_FAILED, this);\n+    }\n+\n+    @Override\n+    public String toString() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f157a5846b12655ab8f78dc1b16ed3dd31084d42"}, "originalPosition": 118}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d5835ad2584c6e88699f4c2ad0c12cf1f2fb317", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/0d5835ad2584c6e88699f4c2ad0c12cf1f2fb317", "committedDate": "2020-12-08T18:26:58Z", "message": "add obj overrides"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2Nzc5OTYz", "url": "https://github.com/aws-amplify/amplify-android/pull/976#pullrequestreview-546779963", "createdAt": "2020-12-08T06:30:32Z", "commit": {"oid": "f157a5846b12655ab8f78dc1b16ed3dd31084d42"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjozMDozM1rOIBJHgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMTowMTowMlrOIB2AZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA2ODg2Ng==", "bodyText": "Do we have a .events package? I forgot. If we do, we should use it. If we don't, no need to create one.", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r538068866", "createdAt": "2020-12-08T06:30:33Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -0,0 +1,183 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.syncengine;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f157a5846b12655ab8f78dc1b16ed3dd31084d42"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgwNDMyNA==", "bodyText": "Objects.hash(..) is only supported from API level 19. This should say ObjectsCompat.hash(...).\nI thought maybe it could be desugared in the Android 4.x tools, but that doesn't look to be the case, either.", "url": "https://github.com/aws-amplify/amplify-android/pull/976#discussion_r538804324", "createdAt": "2020-12-08T21:01:02Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/syncengine/OutboxMutationFailedEvent.java", "diffHunk": "@@ -51,6 +51,31 @@ private OutboxMutationFailedEvent(\n         this.model = model;\n     }\n \n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null || getClass() != obj.getClass()) {\n+            return false;\n+        }\n+        OutboxMutationFailedEvent<?> that = (OutboxMutationFailedEvent<?>) obj;\n+        return getErrorType() == that.getErrorType() &&\n+            getOperation() == that.getOperation() &&\n+            getModelName().equals(that.getModelName()) &&\n+            getModel().equals(that.getModel());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d5835ad2584c6e88699f4c2ad0c12cf1f2fb317"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3322, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}