{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MzIzOTE0", "number": 839, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxOTozNjoxMFrOEmwORQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxOTozNjoxMFrOEmwORQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDcxNDI5OnYy", "diffSide": "LEFT", "path": "aws-api-appsync/src/main/java/com/amplifyframework/core/model/types/JavaFieldType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxOTozNjoxMFrOHW-CJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNTo0NTo1MFrOHXKjug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg0NzA3OQ==", "bodyText": "This one wasn't being used anywhere, huh?", "url": "https://github.com/aws-amplify/amplify-android/pull/839#discussion_r493847079", "createdAt": "2020-09-23T19:36:10Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api-appsync/src/main/java/com/amplifyframework/core/model/types/JavaFieldType.java", "diffHunk": "@@ -28,86 +30,83 @@\n     /**\n      * Represents the boolean data type.\n      */\n-    BOOLEAN(Boolean.class.getSimpleName()),\n+    BOOLEAN(Boolean.class),\n \n     /**\n      * Represents the int data type.\n      */\n-    INTEGER(Integer.class.getSimpleName()),\n+    INTEGER(Integer.class),\n \n     /**\n      * Represents the long data type.\n      */\n-    LONG(Long.class.getSimpleName()),\n+    LONG(Long.class),\n \n     /**\n      * Represents the float data type.\n      */\n-    FLOAT(Float.class.getSimpleName()),\n+    FLOAT(Float.class),\n \n     /**\n      * Represents the String data type.\n      */\n-    STRING(String.class.getSimpleName()),\n+    STRING(String.class),\n+\n+    /**\n+     * Represents the java.lang.Date data type.\n+     */\n+    JAVA_DATE(Date.class),\n \n     /**\n      * Represents the Date data type.\n      */\n-    DATE(Temporal.Date.class.getSimpleName()),\n+    DATE(Temporal.Date.class),\n \n     /**\n      * Represents the DateTime data type.\n      */\n-    DATE_TIME(Temporal.DateTime.class.getSimpleName()),\n+    DATE_TIME(Temporal.DateTime.class),\n \n     /**\n      * Represents the Time data type.\n      */\n-    TIME(Temporal.Time.class.getSimpleName()),\n+    TIME(Temporal.Time.class),\n \n     /**\n      * Represents the Timestamp data type.\n      */\n-    TIMESTAMP(Temporal.Timestamp.class.getSimpleName()),\n+    TIMESTAMP(Temporal.Timestamp.class),\n     \n     /**\n      * Represents the Enum type.\n      */\n-    ENUM(Enum.class.getSimpleName()),\n+    ENUM(Enum.class),\n \n     /**\n      * Represents the Model type.\n      */\n-    MODEL(Model.class.getSimpleName()),\n+    MODEL(Model.class),\n \n     /**\n      * Represents any custom type (objects that are not models).\n      */\n-    CUSTOM_TYPE(Object.class.getSimpleName());\n+    CUSTOM_TYPE(Object.class);\n \n-    private final String javaFieldType;\n+    private final Class<?> javaFieldType;\n \n-    JavaFieldType(@NonNull String javaFieldType) {\n+    JavaFieldType(@NonNull Class<?> javaFieldType) {\n         this.javaFieldType = javaFieldType;\n     }\n \n-    /**\n-     * Return the string that represents the value of the enumeration constant.\n-     * @return the string that represents the value of the enumeration constant.\n-     */\n-    public String stringValue() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA1MjI4Mg==", "bodyText": "@jamesonwilliams right this one was only used internally inside the JavaFieldType.java", "url": "https://github.com/aws-amplify/amplify-android/pull/839#discussion_r494052282", "createdAt": "2020-09-24T05:45:50Z", "author": {"login": "richardissuperman"}, "path": "aws-api-appsync/src/main/java/com/amplifyframework/core/model/types/JavaFieldType.java", "diffHunk": "@@ -28,86 +30,83 @@\n     /**\n      * Represents the boolean data type.\n      */\n-    BOOLEAN(Boolean.class.getSimpleName()),\n+    BOOLEAN(Boolean.class),\n \n     /**\n      * Represents the int data type.\n      */\n-    INTEGER(Integer.class.getSimpleName()),\n+    INTEGER(Integer.class),\n \n     /**\n      * Represents the long data type.\n      */\n-    LONG(Long.class.getSimpleName()),\n+    LONG(Long.class),\n \n     /**\n      * Represents the float data type.\n      */\n-    FLOAT(Float.class.getSimpleName()),\n+    FLOAT(Float.class),\n \n     /**\n      * Represents the String data type.\n      */\n-    STRING(String.class.getSimpleName()),\n+    STRING(String.class),\n+\n+    /**\n+     * Represents the java.lang.Date data type.\n+     */\n+    JAVA_DATE(Date.class),\n \n     /**\n      * Represents the Date data type.\n      */\n-    DATE(Temporal.Date.class.getSimpleName()),\n+    DATE(Temporal.Date.class),\n \n     /**\n      * Represents the DateTime data type.\n      */\n-    DATE_TIME(Temporal.DateTime.class.getSimpleName()),\n+    DATE_TIME(Temporal.DateTime.class),\n \n     /**\n      * Represents the Time data type.\n      */\n-    TIME(Temporal.Time.class.getSimpleName()),\n+    TIME(Temporal.Time.class),\n \n     /**\n      * Represents the Timestamp data type.\n      */\n-    TIMESTAMP(Temporal.Timestamp.class.getSimpleName()),\n+    TIMESTAMP(Temporal.Timestamp.class),\n     \n     /**\n      * Represents the Enum type.\n      */\n-    ENUM(Enum.class.getSimpleName()),\n+    ENUM(Enum.class),\n \n     /**\n      * Represents the Model type.\n      */\n-    MODEL(Model.class.getSimpleName()),\n+    MODEL(Model.class),\n \n     /**\n      * Represents any custom type (objects that are not models).\n      */\n-    CUSTOM_TYPE(Object.class.getSimpleName());\n+    CUSTOM_TYPE(Object.class);\n \n-    private final String javaFieldType;\n+    private final Class<?> javaFieldType;\n \n-    JavaFieldType(@NonNull String javaFieldType) {\n+    JavaFieldType(@NonNull Class<?> javaFieldType) {\n         this.javaFieldType = javaFieldType;\n     }\n \n-    /**\n-     * Return the string that represents the value of the enumeration constant.\n-     * @return the string that represents the value of the enumeration constant.\n-     */\n-    public String stringValue() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg0NzA3OQ=="}, "originalCommit": null, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 927, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}