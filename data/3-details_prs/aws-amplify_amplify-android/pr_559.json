{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MTMzMjky", "number": 559, "title": "feat(API): Add AuthRule annotation to support @auth directive", "bodyText": "This adds an @AuthRule annotation, so that it can be used in codegen model files.   The annotation can represent an authorization rule if any are specified in a GraphQL schema with the @auth directive.  ModelConfig and ModelField now include an array of @AuthRule objects.\nNote that this replaces the boolean hasOwnerAuthorization() method previously on ModelConfig, which was intended to support the basic owner based auth use case.  This PR adds support for all use cases allowed by the @auth directive.\nSample schema.graphql:\ntype Todo\n  @model\n  @auth(rules: [\n    # Owner authorization, simplest case\n    { allow: owner },\n\n    # Owner authorization, the long form way\n    { allow: owner, ownerField: \"owner\", operations: [create, update, delete, read] },\n\n    # Owner authorization, allow others to read\n    { allow: owner, operations: [create, delete, update] },\n\n    # Static group authorization\n    { allow: groups, groups: [\"Admin\"] },\n\n    # Dynamic group authorization\n    { allow: groups, groupsField: \"groups\" },\n\n    # public authorization\n    { allow: public },\n\n    # public authorization with provider override\n    { allow: public, provider: iam },\n\n    # private authorization\n    { allow: private },\n\n    # private authorization with provider override\n    { allow: private, provider: iam },\n\n    # owner authorization with provider override\n    { allow: owner, provider: oidc, identityClaim: \"sub\" }\n\n    # custom claims (owner)\n    { allow: owner, identityClaim: \"user_id\" },\n\n    # custom claims (groups)\n    { allow: groups, groups: [\"Moderator\"], groupClaim: \"user_groups\" }\n    ])\n{\n  id: ID!\n  name: String!\n  description: String\n    @auth (rules: [\n    { allow: private, provider: iam, operations: [create, update] }\n    ])\n}\n\nSample expected codegen output: Todo.java:\npackage com.amplifyframework.datastore.generated.model;\n\nimport androidx.core.util.ObjectsCompat;\n\nimport com.amplifyframework.core.model.AuthStrategy;\nimport com.amplifyframework.core.model.Model;\nimport com.amplifyframework.core.model.ModelOperation;\nimport com.amplifyframework.core.model.annotations.AuthRule;\nimport com.amplifyframework.core.model.annotations.ModelConfig;\nimport com.amplifyframework.core.model.annotations.ModelField;\nimport com.amplifyframework.core.model.query.predicate.QueryField;\n\nimport java.util.Objects;\nimport java.util.UUID;\n\nimport static com.amplifyframework.core.model.query.predicate.QueryField.field;\n\n/** This is an auto generated class representing the Todo type in your schema. */\n@SuppressWarnings(\"all\")\n@ModelConfig(\n        pluralName = \"Todos\",\n        authRules = {\n                // Owner authorization, simplest case\n                @AuthRule(\n                        allow = AuthStrategy.OWNER\n                ),\n\n                // Owner authorization, the long form way\n                @AuthRule(\n                        allow = AuthStrategy.OWNER,\n                        ownerField = \"owner\",\n                        operations = { ModelOperation.CREATE, ModelOperation.UPDATE, ModelOperation.DELETE, ModelOperation.READ }\n                ),\n\n                // Owner authorization, allow others to read\n                @AuthRule(\n                        allow = AuthStrategy.OWNER,\n                        operations = { ModelOperation.CREATE, ModelOperation.UPDATE, ModelOperation.DELETE }\n                ),\n\n                // Static group authorization\n                @AuthRule(\n                        allow = AuthStrategy.GROUPS,\n                        groups = { \"Admin\" }\n                ),\n\n                // Dynamic group authorization\n                @AuthRule(\n                        allow = AuthStrategy.GROUPS,\n                        groupsField = \"groups\"\n                ),\n\n                // Public authorization\n                @AuthRule(\n                        allow = AuthStrategy.PUBLIC\n                ),\n\n                // Public authorization with provider override (provider does not need to be specified in codegen)\n                @AuthRule(\n                        allow = AuthStrategy.PUBLIC\n                ),\n\n                // private authorization\n                @AuthRule(\n                        allow = AuthStrategy.PRIVATE\n                ),\n\n                // private authorization with provider override (provider does not need to be specified in codegen)\n                @AuthRule(\n                        allow = AuthStrategy.PRIVATE\n                ),\n\n                // owner authorization with provider override (provider does not need to be specified in codegen)\n                @AuthRule(\n                        allow = AuthStrategy.OWNER,\n                        identityClaim = \"sub\"\n                ),\n\n                // custom claims (owner)\n                @AuthRule(\n                        allow = AuthStrategy.OWNER,\n                        identityClaim = \"user_id\"\n                ),\n\n                // custom claims (groups)\n                @AuthRule(\n                        allow = AuthStrategy.GROUPS,\n                        groups = { \"Moderator\" },\n                        groupClaim = \"user_groups\"\n                ),\n        }\n)\npublic final class Todo implements Model {\n  public static final QueryField ID = field(\"id\");\n  public static final QueryField NAME = field(\"name\");\n  public static final QueryField DESCRIPTION = field(\"description\");\n  private final @ModelField(targetType=\"ID\", isRequired = true) String id;\n  private final @ModelField(targetType=\"String\", isRequired = true) String name;\n  private final @ModelField(\n    targetType = \"String\",\n    isRequired = true,\n    authRules = {\n      @AuthRule(\n        allow = AuthStrategy.PRIVATE,\n        operations = { ModelOperation.CREATE, ModelOperation.UPDATE }\n      )\n    }\n  ) String description;\n\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-06-04T23:03:08Z", "url": "https://github.com/aws-amplify/amplify-android/pull/559", "merged": true, "mergeCommit": {"oid": "dc8e5e8be8f591b6391aa52dfe2947ad01afe363"}, "closed": true, "closedAt": "2020-06-09T20:17:06Z", "author": {"login": "richardmcclellan"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoGGaKgH2gAyNDI4MTMzMjkyOjQ0NjY3NTk1ZGIzZjMyNGZmMjQxMzk1M2VkNzQ0YjBkMDMzN2FlZTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpqkXvgFqTQyNzQ5MTExMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "44667595db3f324ff2413953ed744b0d0337aee1", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/44667595db3f324ff2413953ed744b0d0337aee1", "committedDate": "2020-06-04T22:49:29Z", "message": "Add AuthRule annotation to support owner based auth"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTIzNzAx", "url": "https://github.com/aws-amplify/amplify-android/pull/559#pullrequestreview-424923701", "createdAt": "2020-06-05T00:32:06Z", "commit": {"oid": "44667595db3f324ff2413953ed744b0d0337aee1"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMDozMjowNlrOGfcq4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMDo0MzozNVrOGfc1tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyODc2OQ==", "bodyText": "To keep this.authRules as non-null, maybe change this to:\nif (authRules != null) {\n     this.authRules.addAll(authRules);\n}\n\nThen on L455 you can mark the declaration as final, as well.", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r435628769", "createdAt": "2020-06-05T00:32:06Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/ModelSchema.java", "diffHunk": "@@ -458,14 +485,15 @@ public Builder pluralName(@Nullable String pluralName) {\n         }\n \n         /**\n-         * Denotes whether this model has owner based authorization which changes the parameters for subscriptions\n+         * Denotes authorization rules for this model defined by the @auth directive.\n          * e.g. @auth(rules: [{allow: owner}]) on the model in the GraphQL Schema\n-         * @param hasOwnerAuthorization true if the model has owner based authorization, false otherwise\n+         *\n+         * @param authRules list of {@link AuthRule}s for this {@link Model}\n          * @return the builder object\n          */\n         @NonNull\n-        public Builder hasOwnerAuthorization(boolean hasOwnerAuthorization) {\n-            this.hasOwnerAuthorization = hasOwnerAuthorization;\n+        public Builder authRules(List<AuthRule> authRules) {\n+            this.authRules = authRules;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44667595db3f324ff2413953ed744b0d0337aee1"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyOTM0NA==", "bodyText": "Rename as getAuthRules(), the other ones use the get<Foo> prefix.", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r435629344", "createdAt": "2020-06-05T00:34:35Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/ModelSchema.java", "diffHunk": "@@ -396,7 +423,7 @@ public int hashCode() {\n         return ObjectsCompat.hash(\n                 getName(),\n                 getPluralName(),\n-                hasOwnerAuthorization(),\n+                authRules(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44667595db3f324ff2413953ed744b0d0337aee1"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyOTczNA==", "bodyText": "Is this still necessary? Is it kept because it is public and you don't want to change the contract? Should we mark this @Deprecated, even if we'll keep it and update its implementation? (I'm not sure?)", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r435629734", "createdAt": "2020-06-05T00:36:07Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/ModelSchema.java", "diffHunk": "@@ -242,12 +254,27 @@ public String getPluralName() {\n     }\n \n     /**\n-     * Returns true if this model has owner based authorization which changes the parameters for subscriptions\n-     * e.g. @auth(rules: [{allow: owner}]) on the model in the GraphQL Schema\n-     * @return true if owner authorization is present on this model and false if not or if not explicitly annotated.\n+     * Returns list of rules defining which users can access or operate against an object.\n+     * e.g. @auth(rules: [{allow: owner}]) on the model in the GraphQL Schema.\n+     *\n+     * @return List of {@link AuthRule}s for this Model\n+     */\n+    public List<AuthRule> authRules() {\n+        return authRules;\n+    }\n+\n+    /**\n+     * Returns true if this model has owner based authorization which changes the parameters for subscriptions.\n+     * @return true if owner authorization is present on this model and false if not or if not explicitly annotated\n      */\n+\n     public boolean hasOwnerAuthorization() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44667595db3f324ff2413953ed744b0d0337aee1"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDAzNg==", "bodyText": "Remove the import qualification", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r435630036", "createdAt": "2020-06-05T00:37:13Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/ModelSchema.java", "diffHunk": "@@ -113,14 +114,20 @@ public static ModelSchema fromModelClass(@NonNull Class<? extends Model> clazz)\n             final TreeMap<String, ModelField> fields = new TreeMap<>();\n             final TreeMap<String, ModelAssociation> associations = new TreeMap<>();\n             final TreeMap<String, ModelIndex> indexes = new TreeMap<>();\n+            final List<AuthRule> authRules = new ArrayList<>();\n \n             // Set the model name and plural name (null if not provided)\n             ModelConfig modelConfig = clazz.getAnnotation(ModelConfig.class);\n             final String modelName = clazz.getSimpleName();\n             final String modelPluralName = modelConfig != null && !modelConfig.pluralName().isEmpty()\n                     ? modelConfig.pluralName()\n                     : null;\n-            final boolean hasOwnerAuthorization = modelConfig != null && modelConfig.hasOwnerAuthorization();\n+\n+            if (modelConfig != null) {\n+                for (com.amplifyframework.core.model.annotations.AuthRule ruleAnnotation : modelConfig.authRules()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44667595db3f324ff2413953ed744b0d0337aee1"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDM4MA==", "bodyText": "Ah man, I have like 3-4 more enums like this in the DataStore category/plugin. In future work, we can probably come back and just use yours everywhere.", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r435630380", "createdAt": "2020-06-05T00:38:39Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/ModelOperation.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model;\n+\n+/**\n+ * Used as a property of {@link AuthRule} to specify which operations the rule applies to.\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive\n+ * documentation.</a>\n+ */\n+public enum ModelOperation {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44667595db3f324ff2413953ed744b0d0337aee1"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMTE1Mg==", "bodyText": "Should we use the get<Foo> on new getters? It makes property accessors work right from Kotlin. On the other hand, we already missed the boat on that, and we're going to have to wrap the API surface, anyway. So, if that's true, maybe we should just write the best possible Java API - which would not use get<Foo>.", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r435631152", "createdAt": "2020-06-05T00:41:55Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/AuthRule.java", "diffHunk": "@@ -0,0 +1,156 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model;\n+\n+import java.util.Arrays;\n+import java.util.Objects;\n+\n+/**\n+ * {@link AuthRule} is used define an authorization rule for who can access and operate against a\n+ * {@link Model} or a {@link ModelField}.\n+ *\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive\n+ * documentation.</a>\n+ */\n+public final class AuthRule {\n+    private final AuthStrategy allow;\n+    private final String ownerField;\n+    private final String identityClaim;\n+    private final String groupClaim;\n+    private final String[] groups;\n+    private final String groupsField;\n+    private final ModelOperation[] operations;\n+\n+    /**\n+     * Constructor to create an {@link AuthRule} from an {@link com.amplifyframework.core.model.annotations.AuthRule}\n+     * annotation.\n+     * @param authRule an {@link com.amplifyframework.core.model.annotations.AuthRule} annotation.\n+     */\n+    public AuthRule(com.amplifyframework.core.model.annotations.AuthRule authRule) {\n+        this.allow = authRule.allow();\n+        this.ownerField = authRule.ownerField();\n+        this.identityClaim = authRule.identityClaim();\n+        this.groupClaim = authRule.groupClaim();\n+        this.groups = authRule.groups();\n+        this.groupsField = authRule.groupsField();\n+        this.operations = authRule.operations();\n+    }\n+\n+    /**\n+     * Returns the type of strategy for this {@link AuthRule}.\n+     * @return the type of strategy for this {@link AuthRule}\n+     */\n+    public AuthStrategy allow() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44667595db3f324ff2413953ed744b0d0337aee1"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMTU0Mg==", "bodyText": "Objects requires minSdk of 19, doesn't it? We are using ObjectsCompat for this reason in much of the code base. Nevermind that there are currently issues with APIs 16-19... might as well not put gas on the bonfire. \ud83d\ude04 \ud83d\ude80", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r435631542", "createdAt": "2020-06-05T00:43:35Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/AuthRule.java", "diffHunk": "@@ -0,0 +1,156 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model;\n+\n+import java.util.Arrays;\n+import java.util.Objects;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44667595db3f324ff2413953ed744b0d0337aee1"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "192517a39285301d6029660edc4974154252705c", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/192517a39285301d6029660edc4974154252705c", "committedDate": "2020-06-05T01:01:00Z", "message": "ObjectsCompat, not Objects for API 16 compatibility"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54bae23d7866c633e43ba320de53434174a2cec1", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/54bae23d7866c633e43ba320de53434174a2cec1", "committedDate": "2020-06-05T17:48:31Z", "message": "Add get prefix to getters in AuthRule"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b8c8930c1c4c0a2ff32d1107236c6d4be24ec6b", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/9b8c8930c1c4c0a2ff32d1107236c6d4be24ec6b", "committedDate": "2020-06-05T19:17:27Z", "message": "Rename authRules to getAuthRules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16d86e1c17e0244dd17caa75ca42ac273c0387f0", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/16d86e1c17e0244dd17caa75ca42ac273c0387f0", "committedDate": "2020-06-05T19:32:18Z", "message": "Improve authRules method in Builder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1ODY1NDUw", "url": "https://github.com/aws-amplify/amplify-android/pull/559#pullrequestreview-425865450", "createdAt": "2020-06-08T00:12:36Z", "commit": {"oid": "16d86e1c17e0244dd17caa75ca42ac273c0387f0"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwMDoxMjozNlrOGgMrHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwMDoxNzoyMVrOGgMssg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxNTI2Mw==", "bodyText": "\")> -- is the ) supposed to be there?", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436415263", "createdAt": "2020-06-08T00:12:36Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/AuthRule.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model;\n+\n+import androidx.core.util.ObjectsCompat;\n+\n+import java.util.Arrays;\n+\n+/**\n+ * {@link AuthRule} is used define an authorization rule for who can access and operate against a\n+ * {@link Model} or a {@link ModelField}.\n+ *\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16d86e1c17e0244dd17caa75ca42ac273c0387f0"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxNTM3NQ==", "bodyText": "Why not:\npublic AuthStrategy getAuthStrategy() {\n    return this.authStrategy;\n}", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436415375", "createdAt": "2020-06-08T00:13:58Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/AuthRule.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model;\n+\n+import androidx.core.util.ObjectsCompat;\n+\n+import java.util.Arrays;\n+\n+/**\n+ * {@link AuthRule} is used define an authorization rule for who can access and operate against a\n+ * {@link Model} or a {@link ModelField}.\n+ *\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive\n+ * documentation.</a>\n+ */\n+public final class AuthRule {\n+    private final AuthStrategy allow;\n+    private final String ownerField;\n+    private final String identityClaim;\n+    private final String groupClaim;\n+    private final String[] groups;\n+    private final String groupsField;\n+    private final ModelOperation[] operations;\n+\n+    /**\n+     * Constructor to create an {@link AuthRule} from an {@link com.amplifyframework.core.model.annotations.AuthRule}\n+     * annotation.\n+     * @param authRule an {@link com.amplifyframework.core.model.annotations.AuthRule} annotation.\n+     */\n+    public AuthRule(com.amplifyframework.core.model.annotations.AuthRule authRule) {\n+        this.allow = authRule.allow();\n+        this.ownerField = authRule.ownerField();\n+        this.identityClaim = authRule.identityClaim();\n+        this.groupClaim = authRule.groupClaim();\n+        this.groups = authRule.groups();\n+        this.groupsField = authRule.groupsField();\n+        this.operations = authRule.operations();\n+    }\n+\n+    /**\n+     * Returns the type of strategy for this {@link AuthRule}.\n+     * @return the type of strategy for this {@link AuthRule}\n+     */\n+    public AuthStrategy getAllow() {\n+        return this.allow;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16d86e1c17e0244dd17caa75ca42ac273c0387f0"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxNTUxNw==", "bodyText": "Same here, is the \")> intentional?", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436415517", "createdAt": "2020-06-08T00:15:37Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/AuthStrategy.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model;\n+\n+/**\n+ *  The type of strategy for an @auth directive rule.\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16d86e1c17e0244dd17caa75ca42ac273c0387f0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxNTY2Ng==", "bodyText": "This class seems like it is \"modal.\"  Like, depending on the AuthStrategy, the AuthRule will have different fields become null, by design, right?\nInstead, would it make sense to have an interface AuthRule, and then do GroupBasedAuthRule, which only returned group info, UserBasedAuthRule, which only returned user info, etc.?", "url": "https://github.com/aws-amplify/amplify-android/pull/559#discussion_r436415666", "createdAt": "2020-06-08T00:17:21Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/AuthRule.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model;\n+\n+import androidx.core.util.ObjectsCompat;\n+\n+import java.util.Arrays;\n+\n+/**\n+ * {@link AuthRule} is used define an authorization rule for who can access and operate against a\n+ * {@link Model} or a {@link ModelField}.\n+ *\n+ * @see <a href=\"https://docs.amplify.aws/cli/graphql-transformer/directives#auth\")>GraphQL Transformer @auth directive\n+ * documentation.</a>\n+ */\n+public final class AuthRule {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16d86e1c17e0244dd17caa75ca42ac273c0387f0"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b37a28f300eb42b8c0c66620d091702cc27e79f9", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/b37a28f300eb42b8c0c66620d091702cc27e79f9", "committedDate": "2020-06-08T17:09:03Z", "message": "Remove stray )"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57b46bcf1eb63017587a40f2c9794d5958d13dea", "author": {"user": {"login": "richardmcclellan", "name": "Richard McClellan"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/57b46bcf1eb63017587a40f2c9794d5958d13dea", "committedDate": "2020-06-08T17:12:48Z", "message": "Rename allow to authStrategy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NDkxMTEw", "url": "https://github.com/aws-amplify/amplify-android/pull/559#pullrequestreview-427491110", "createdAt": "2020-06-09T19:52:43Z", "commit": {"oid": "57b46bcf1eb63017587a40f2c9794d5958d13dea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1815, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}