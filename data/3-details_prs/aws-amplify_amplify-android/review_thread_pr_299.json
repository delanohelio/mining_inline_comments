{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODY1Mjgz", "number": 299, "reviewThreads": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjoxNTo0N1rODmhfwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjoxMzo0OVrODmjpVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzIxMjgxOnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjoxNTo0N1rOFz_Tpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMzo1NjoyN1rOF0P36w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA1ODkxOA==", "bodyText": "This section is interesting reading. I wonder if there's another place for this sub-section, such as a HISTORY.md that we can link to from this document. Most folks who come to a contributing guide are often familiar with the project and looking for a bit more tactic nuts-and-bolts-y guidance. React has a \"Design Principles\" section at the end of their contributor guide which seems similar in intent which may be a pattern worth following.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390058918", "createdAt": "2020-03-10T02:15:47Z", "author": {"login": "jpignata"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMzkzMQ==", "bodyText": "Yes ultimately this is probably what we should do, as well as a separate architecture page.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390113931", "createdAt": "2020-03-10T06:21:09Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA1ODkxOA=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMzMDM0Nw==", "bodyText": "Hm, okay. Yea, I'm 100% in this camp, now, too. I just audited a few other contributors guides for some open source projects. Not one had a section like this. I'm going to simply omit it from this PR. We can come back and find a place for this as part of later/separate work.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390330347", "createdAt": "2020-03-10T13:56:27Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA1ODkxOA=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzIxNjQzOnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjoxODowMlrOFz_VsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMzo1NzoyNVrOF0P6nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA1OTQ0MA==", "bodyText": "Nit: Why is Service a proper noun in this document?", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390059440", "createdAt": "2020-03-10T02:18:02Z", "author": {"login": "jpignata"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMzMTAzOQ==", "bodyText": "Not sure; I agree it should not be. This was copy-pasted. For this PR, I've resolved this by removing the containing section from the CONTRIBUTING.md.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390331039", "createdAt": "2020-03-10T13:57:25Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA1OTQ0MA=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzIzNjAwOnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjoyODo1MlrOFz_g4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMzo1Nzo1OFrOF0P8NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2MjMwNw==", "bodyText": "Nit: GitHub", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390062307", "createdAt": "2020-03-10T02:28:52Z", "author": {"login": "jpignata"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality\n+without the risk of introducing errors related to the unused code.\n+\n+Amplify has established the concepts of categories and plugins. A\n+__category__ is a collection of api calls that are exposed to the client\n+to do things inside that category. For example, in the storage category\n+generally one wants to upload and download objects from storage so the\n+apis exposed to the client will represent that functionality. Because\n+Amplify is pluggable, a __plugin__ of your choosing will provide the\n+actual implementation behind that api interface.  Using the same example\n+of Storage, the plugin we choose might be `AWSS3StoragePlugin`, which\n+would then implement each api call from the category with a service call\n+or set of service calls to S3, the underlying storage provider of the\n+AWS plugin.\n+\n+## Getting Started\n+\n+First, ensure that you have installed the latest stable version of Android\n+Studio / the Android SDK.\n+\n+Configure your environment, so that the `ANDROID_HOME` and `JAVA_HOME`\n+environment variables are set. A convenient way of doing this is to add them\n+into `~/.bashrc`.\u00a0On a Mac, the SDK and Java installation used by the SDK may\n+be found:\n+\n+```\n+export ANDROID_HOME=~/Library/Android/sdk\n+export JAVA_HOME=/Applications/Android\\ Studio.app/Contents/jre/jdk/Contents/Home\n+```\n+Note: JDK 11, 12, 13, etc. have known issues and are not supported.\n+\n+Now, clone the Amplify Android project from GitHub.\n+\n+```\n+git clone git@github.com:aws-amplify/amplify-android.git\n+```\n+Load this project into Android Studio by selecting File > Open, and choosing\n+the root directory of the project (`amplify-android`). Alternately, cd into this\n+top-level directory.\n+\n+In Android Studio, build the project by clicking the Hammer icon, \"Make Project\n+\u2318F9\". If working on the command line, you can do the same thing via:\n+\n+```\n+./gradlew build\n+```\n+\n+## Tools\n+[Gradle](https://gradle.org) is used for all [build and dependency management](https://developer.android.com/studio/build).\n+\n+Some widely used dependencies are:\n+\n+1. [org.json](https://developer.android.com/reference/org/json/JSONObject) is\n+   baked into Android, and is used for all modeling with JSON.\n+2. [Gson](https://github.com/google/gson/blob/master/README.md#gson) is used\n+   for serialization and deserialization.\n+3. [OkHttp](https://github.com/square/okhttp#okhttp) is used for network operations.\n+\n+_Unit and component tests_, which run on your development machine, use:\n+\n+1. [jUnit](https://github.com/junit-team/junit4/blob/r4.13/README.md#junit-4), to make assertions\n+2. [Mockito](https://javadoc.io/static/org.mockito/mockito-core/1.10.19/org/mockito/Mockito.html#1), to mock dependencies\n+3. [Robolectric](https://github.com/robolectric/robolectric/blob/master/README.md),\n+   to simulate an Android device when unit tests execute on your machine.\n+\n+_Instrumentation tests_, which run on an Android device or emulator use\n+AndroidX test core, runner, and a jUnit extension. See Android's notes on\n+[using AndroidX for test](https://developer.android.com/training/testing/set-up-project).\n+\n+## Workflows\n+\n+### Adding code to support a new feature\n+\n+Be aware of the Getting Started and Pull Request guides. This portion deals\n+actually with changing some code.\n+\n+First, identify the module you'll modify:\n+\n+ - `core` - The framework itself, including category behavior definitions\n+ - `aws-datastore` - The AppSync Local implementation of the datastore contract\n+ - `aws-api` - A utility to talk to GraphQL and REST endpoints\n+ - `aws-storage-s3` - Wrapper around S3\n+ - `aws-analytics-pinpoint` - Wrapper around Pinpoint\n+ - `testutilts` - Utility code, helpful when writing unit and instrumentation\n+\ttests. A lot of it deals with making async code synchronous, for more\n+    legible tests.\n+ - `testmodels` - Models that are used in test code. These were generated by\n+    the Amplify CLI / code-gen. We have them checked-in to be sure they don't\n+    change and break some tests.\n+\n+You should proceed by creating a new Java file, and writing your feature in\n+isolation. This way, you can write independent unit tests for your feature.\n+Unit tests are required for all features being added to the code-base. Once you\n+have the skeleton of your feature working, you can integrate it into the\n+existing source files.\n+\n+Writing good Android code and good tests is far outside the scope of this\n+document. But, to get started, you can use the templates below which show some\n+conventions and expectations for source files in the Android codebase.\n+\n+For example, let's say you want to add a `Merger` component to the AppSync\n+Local implementation. Create a file in that module, and a unit test for it:\n+\n+```\n+aws-datastore/src/main/com/amplifyframework/datastore/syncengine/Merger.java\n+aws-datastore/src/test/com/amplifyframework/datastore/syncengine/MergerTest.java\n+```\n+\n+The code below might be a reasonable template for these new files.\n+\n+```\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.syncengine;\n+\n+import androidx.annotation.NonNull;\n+\n+/**\n+ * Considers the state of the mutation outbox, before applying\n+ * data to the local storage adapter. Inputs to the merger\n+ * are data from the network.\n+ */\n+final class Merger {\n+    private final LocalStorageAdapter localStorageAdapter;\n+    private final MutationOutbox mutationOutbox;\n+\n+    Merger(\n+            @NonNull LocalStorageAdapter localStorageAdapter,\n+            @NonNull MutationOutbox mutationOutbox) {\n+        this.localStorageAdapter = localStorageAdapter;\n+        this.mutationOutbox = mutationOutbox;\n+    }\n+\n+    ...\n+}\n+```\n+\n+\n+```\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.syncengine;\n+\n+... imports here ...\n+\n+/**\n+ * Tests the {@link Merger}.\n+ */\n+@RunWith(RobolectricTestRunner.class)\n+public final class MergerTest {\n+    private LocalStorageAdapter localStorageAdapter;\n+    private MutationOutbox mutationOutbox;\n+\n+    // Setup your object under test in @Before. Try to mock away\n+    // its dependencies.\n+    @Before\n+    public void setup() {\n+        this.localStorageAdapter = mock(LocalStorageAdpater.class);\n+        this.mutationOutbox = mock(MutationOutbox.class);\n+        this.merger = new Merger(localStorageAdapter, mutationOutbox);\n+    }\n+\n+    // Name the test in a way that you can tell the developer's intention\n+    // why did you decide to write this test? What should the code _do_?\n+    @Test\n+    public void mergerAppliesUpdates() {\n+        // Arrange: document preconditions for this test here\n+        ...\n+\n+        // Act: what is the action of this test?\n+        ...\n+        // Assert: Given the arrangement, how does the code respond to the action?\n+    }\n+}\n+```\n+\n+These templates encode some standards and best practices.\n+[Checkstyle](https://github.com/checkstyle/checkstyle/blob/master/README.md) and\n+[Android Lint](https://developer.android.com/studio/write/lint#overview)\n+are the ultimate authorities on this, and will tell you if something is\n+badly formatted, or exciting a known shortcoming in Java, Android, or\n+their library ecosystem.\n+\n+Some suggestions include:\n+\n+* All files get a copyright header with the year of creation;\n+* Use [`@NonNull`](https://developer.android.com/reference/kotlin/androidx/annotation/NonNull)\n+  and [`@Nullable`](https://developer.android.com/reference/kotlin/androidx/annotation/Nullable)\n+  annotations on any/all params, so that\n+  [Kotlin knows what to do](https://kotlinlang.org/docs/reference/java-interop.html#nullability-annotations),\n+  when it consumes the library;\n+* Label Arrange/Act/Assert portions of your unit tests, so others can follow\n+  their flow;\n+* Arrange shared dependencies and test objects in an\n+  [`@Before`](http://junit.sourceforge.net/javadoc/org/junit/Before.html) method;\n+* Prefer `private` and `final` class members where-ever possible. This limits scope\n+  and mutability;\n+* Add documentation to anything that says `public` or `protected`. The\n+  checkstyle doesn't require documentation on package-local or `private` fields, but\n+  that might be a good idea, too, if you're doing some interesting/non-trivial\n+  work in those places.\n \n-When filing an issue, please check [existing open](https://github.com/awslabs/amplify-android/issues), or [recently closed](https://github.com/awslabs/amplify-android/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20), issues to make sure somebody else hasn't already\n-reported the issue. Please try to include as much information as you can. Details like these are incredibly useful:\n+### Build and Validate Your Work\n \n-* A reproducible test case or series of steps\n-* The version of our code being used\n-* Any modifications you've made relevant to the bug\n-* Anything unusual about your environment or deployment\n+This will perform a clean build, run Checkstyle, Android Lint, and all unit\n+tests. This must complete successfully before proposing a PR.\n \n+```\n+./gradlew clean build\n+```\n+\n+### Run Instrumentation Tests\n+\n+The instrumentation tests presume the presence of various backend resources.\n+Currently, the tests use \"special\" Amazon-only `amplifyconfiguration.json` files in\n+an S3 bucket, to find these resources.\n+\n+If you are part of the special access list, this command will copy the\n+configurations to your local workspace:\n+\n+```\n+cd amplify-android\n+.circle-ci/copy-configs\n+```\n+\n+To run a __specific__ test:\n+\n+```\n+test='com.amplifyframework.api.aws.RestApiInstrumentationTest#getRequestWithIAM'\n+./gradlew :cAT -Pandroid.testInstrumentationRunnerArguments.class=\"$test\"\n+```\n+\n+To run __all__ tests:\n+\n+```\n+./gradlew cAT\n+```\n+\n+## Reporting Bugs/Feature Requests\n+\n+We welcome you to use the GitHub issue tracker to report bugs or suggest\n+features.\n+\n+When filing an issue, please check [existing open](https://github.com/awslabs/amplify-android/issues)\n+and [recently closed](https://github.com/awslabs/amplify-android/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20)\n+issues to make sure somebody else hasn't already reported the issue.\n+Please try to include as much information as you can. Details like these\n+are useful:\n+\n+* The version of the framework you are using\n+* Details and configurations for any backend resources that are relevant\n+* A full exception trace of an error you observe\n+* A statement about what system behavior you _expect_, alongside the\n+  behavior you actually observe\n \n ## Contributing via Pull Requests\n-Contributions via pull requests are much appreciated. Before sending us a pull request, please ensure that:\n \n-1. You are working against the latest source on the *master* branch.\n-2. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already.\n-3. You open an issue to discuss any significant work - we would hate for your time to be wasted.\n+This is mostly the same as [GitHub's guide on creating a pull request](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request).\n \n-To send us a pull request, please:\n+First, create a _fork_ of `amplify-android`. Clone it, and make changes to this _fork_.\n \n-1. Fork the repository.\n-2. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change.\n-3. Ensure local tests pass.\n-4. Commit to your fork using clear commit messages.\n-5. Send us a pull request, answering any default questions in the pull request interface.\n-6. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation.\n+```\n+git clone git@github.com:your_username/amplify-android.git \n+```\n \n-GitHub provides additional document on [forking a repository](https://help.github.com/articles/fork-a-repo/) and\n-[creating a pull request](https://help.github.com/articles/creating-a-pull-request/).\n+After you have tested your feature/fix, by adding sufficient test coverage, and\n+validating Checkstyle, lint, and the existing test suites, you're ready to\n+publish your change.\n \n+The commit message should look like below. It started with a bracketed tag\n+stating which module has been the focus of the change. After a paragraph\n+describing what you've done, include links to useful resources. These might\n+include design documents, StackOverflow implementation notes, GitHub issues,\n+etc. All links must be publicly accessible.\n \n-## Finding contributions to work on\n-Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any ['help wanted'](https://github.com/awslabs/amplify-android/labels/help%20wanted) issues is a great place to start.\n+```\n+[aws-datatore] Add a 3-way merging component for network ingress\n+\n+The Merger checks the state of the Mutation Outbox before applying\n+remote changes, locally. Subscriptions, Mutation responses, and\n+base/delta sync all enter the local storage through the Merger.\n+\n+Resolves: https://github.com/amplify-android/issues/222\n+See also: https://stackoverflow.com/a/58662077/695787\n+```\n+\n+Now, save your work to a new branch:\n+\n+```\n+git checkout -B add_merger_to_datastore\n+```\n+\n+To publish it:\n+\n+```\n+git push origin origin add_merger_to_datastore\n+```\n+\n+This last step will give you a URL to view a GitHub page in your browser.\n+Copy-paste this, and complete the workflow in the UI. It will invite you to\n+\"create a PR\" from your newly published branch.\n+\n+Your should add the\n+**[Amplify-Native](https:~~/~~/github.com/orgs/aws-amplify/teams/amplify-native)**\n+team as a reviewer of your PR.\n+\n+Your PR must be reviewed by at least one member of this team, in order to be\n+considered for inclusion.\n+\n+your PR must also pass the CircleCI workflow and LGTM validations. CircleCI\n+will run all build tasks (Checkstyle, Lint, unit tests).\n+\n+Currently, CircleCI **DOES NOT** run instrumentation tests for PRs that come\n+from user forks. You should run these tests on your laptop before submitting\n+the PR.\n+\n+## Troubleshooting\n \n+### Environment Debugging\n+\n+Are you using the right versions of Gradle, Ant, Groovy, Kotlin, Java, Mac OS X?\n+\n+```\n+------------------------------------------------------------\n+Gradle 6.2.1\n+------------------------------------------------------------\n+\n+Build time:   2020-02-24 20:24:10 UTC\n+Revision:     aacbcb7e587faa6a8e7851751a76183b6187b164\n+\n+Kotlin:       1.3.61\n+Groovy:       2.5.8\n+Ant:          Apache Ant(TM) version 1.10.7 compiled on September 1 2019\n+JVM:          1.8.0_212-release (JetBrains s.r.o 25.212-b4-5784211)\n+OS:           Mac OS X 10.14.6 x86_64\n+```\n+\n+Do you have the Android SDK setup, and do you have a pointer to the Java environment?\n+\n+```\n+echo -e $ANDROID_HOME\\\\n$JAVA_HOME \n+/Users/jhwill/Library/Android/sdk\n+/Applications/Android Studio.app/Contents/jre/jdk/Contents/Home\n+```\n+\n+### Problems with the Build\n+\n+If the build fails, and you can't figure out why from a Google search /\n+StackOverflow session, try passing options to Gradle:\n+\n+```\n+./gradlew --stacktrace\n+```\n+\n+The next flag will spit out lots of info. It's only useful if you pipe the\n+output to a file, and grep through it.\n+\n+```\n+./gradlew --debug 2>&1 > debugging-the-build.log\n+```\n+\n+### Failing Instrumentation Tests\n+\n+If a single test is failing, run only that test, to isolate it. You may also\n+want to see the output on the device that occurs, while the tests are\n+executing.\n+\n+```\n+# If you run this same code in a script/block, this will clear the log\n+# file each time.\n+rm -f device-logs-during-test.log\n+\n+# Clear the device's, so you only get recent stuff.\n+adb logcat -c\n+\n+# Run a particular test.\n+test='com.amplifyframework.api.aws.RestApiInstrumentationTest#getRequestWithIAM'\n+./gradlew :cAT -Pandroid.testInstrumentationRunnerArguments.class=\"$test\"\n+\n+# Dump the device logs to your debugging file.\n+adb logcat -d > device-logs-during-test.log\n+```\n+\n+Now, you can inspect both the test execution results, as well as what was\n+happening on the device, in `device-logs-during-test.log`.\n+\n+## Related Repositories\n+\n+1. [AWS SDK for Android](https://github.com/aws-amplify/aws-sdk-android)\n+2. [AWS SDK for iOS](https://github.com/aws-amplify/aws-sdk-ios)\n+3. [Android AppSync Client](https://github.com/awslabs/aws-mobile-appsync-sdk-android)\n+\n+## Finding contributions to work on\n+Looking at the existing issues is a great way to find something to\n+work on.\n \n ## Code of Conduct\n This project has adopted the [Amazon Open Source Code of Conduct](https://aws.github.io/code-of-conduct).\n For more information see the [Code of Conduct FAQ](https://aws.github.io/code-of-conduct-faq) or contact\n opensource-codeofconduct@amazon.com with any additional questions or comments.\n \n-\n ## Security issue notifications\n-If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our [vulnerability reporting page](http://aws.amazon.com/security/vulnerability-reporting/). Please do **not** create a public github issue.\n-\n+If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our\n+[vulnerability reporting page](http://aws.amazon.com/security/vulnerability-reporting/). Please\n+do **not** create a public github issue.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 538}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMzMTQ0NA==", "bodyText": "Fixed", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390331444", "createdAt": "2020-03-10T13:57:58Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality\n+without the risk of introducing errors related to the unused code.\n+\n+Amplify has established the concepts of categories and plugins. A\n+__category__ is a collection of api calls that are exposed to the client\n+to do things inside that category. For example, in the storage category\n+generally one wants to upload and download objects from storage so the\n+apis exposed to the client will represent that functionality. Because\n+Amplify is pluggable, a __plugin__ of your choosing will provide the\n+actual implementation behind that api interface.  Using the same example\n+of Storage, the plugin we choose might be `AWSS3StoragePlugin`, which\n+would then implement each api call from the category with a service call\n+or set of service calls to S3, the underlying storage provider of the\n+AWS plugin.\n+\n+## Getting Started\n+\n+First, ensure that you have installed the latest stable version of Android\n+Studio / the Android SDK.\n+\n+Configure your environment, so that the `ANDROID_HOME` and `JAVA_HOME`\n+environment variables are set. A convenient way of doing this is to add them\n+into `~/.bashrc`.\u00a0On a Mac, the SDK and Java installation used by the SDK may\n+be found:\n+\n+```\n+export ANDROID_HOME=~/Library/Android/sdk\n+export JAVA_HOME=/Applications/Android\\ Studio.app/Contents/jre/jdk/Contents/Home\n+```\n+Note: JDK 11, 12, 13, etc. have known issues and are not supported.\n+\n+Now, clone the Amplify Android project from GitHub.\n+\n+```\n+git clone git@github.com:aws-amplify/amplify-android.git\n+```\n+Load this project into Android Studio by selecting File > Open, and choosing\n+the root directory of the project (`amplify-android`). Alternately, cd into this\n+top-level directory.\n+\n+In Android Studio, build the project by clicking the Hammer icon, \"Make Project\n+\u2318F9\". If working on the command line, you can do the same thing via:\n+\n+```\n+./gradlew build\n+```\n+\n+## Tools\n+[Gradle](https://gradle.org) is used for all [build and dependency management](https://developer.android.com/studio/build).\n+\n+Some widely used dependencies are:\n+\n+1. [org.json](https://developer.android.com/reference/org/json/JSONObject) is\n+   baked into Android, and is used for all modeling with JSON.\n+2. [Gson](https://github.com/google/gson/blob/master/README.md#gson) is used\n+   for serialization and deserialization.\n+3. [OkHttp](https://github.com/square/okhttp#okhttp) is used for network operations.\n+\n+_Unit and component tests_, which run on your development machine, use:\n+\n+1. [jUnit](https://github.com/junit-team/junit4/blob/r4.13/README.md#junit-4), to make assertions\n+2. [Mockito](https://javadoc.io/static/org.mockito/mockito-core/1.10.19/org/mockito/Mockito.html#1), to mock dependencies\n+3. [Robolectric](https://github.com/robolectric/robolectric/blob/master/README.md),\n+   to simulate an Android device when unit tests execute on your machine.\n+\n+_Instrumentation tests_, which run on an Android device or emulator use\n+AndroidX test core, runner, and a jUnit extension. See Android's notes on\n+[using AndroidX for test](https://developer.android.com/training/testing/set-up-project).\n+\n+## Workflows\n+\n+### Adding code to support a new feature\n+\n+Be aware of the Getting Started and Pull Request guides. This portion deals\n+actually with changing some code.\n+\n+First, identify the module you'll modify:\n+\n+ - `core` - The framework itself, including category behavior definitions\n+ - `aws-datastore` - The AppSync Local implementation of the datastore contract\n+ - `aws-api` - A utility to talk to GraphQL and REST endpoints\n+ - `aws-storage-s3` - Wrapper around S3\n+ - `aws-analytics-pinpoint` - Wrapper around Pinpoint\n+ - `testutilts` - Utility code, helpful when writing unit and instrumentation\n+\ttests. A lot of it deals with making async code synchronous, for more\n+    legible tests.\n+ - `testmodels` - Models that are used in test code. These were generated by\n+    the Amplify CLI / code-gen. We have them checked-in to be sure they don't\n+    change and break some tests.\n+\n+You should proceed by creating a new Java file, and writing your feature in\n+isolation. This way, you can write independent unit tests for your feature.\n+Unit tests are required for all features being added to the code-base. Once you\n+have the skeleton of your feature working, you can integrate it into the\n+existing source files.\n+\n+Writing good Android code and good tests is far outside the scope of this\n+document. But, to get started, you can use the templates below which show some\n+conventions and expectations for source files in the Android codebase.\n+\n+For example, let's say you want to add a `Merger` component to the AppSync\n+Local implementation. Create a file in that module, and a unit test for it:\n+\n+```\n+aws-datastore/src/main/com/amplifyframework/datastore/syncengine/Merger.java\n+aws-datastore/src/test/com/amplifyframework/datastore/syncengine/MergerTest.java\n+```\n+\n+The code below might be a reasonable template for these new files.\n+\n+```\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.syncengine;\n+\n+import androidx.annotation.NonNull;\n+\n+/**\n+ * Considers the state of the mutation outbox, before applying\n+ * data to the local storage adapter. Inputs to the merger\n+ * are data from the network.\n+ */\n+final class Merger {\n+    private final LocalStorageAdapter localStorageAdapter;\n+    private final MutationOutbox mutationOutbox;\n+\n+    Merger(\n+            @NonNull LocalStorageAdapter localStorageAdapter,\n+            @NonNull MutationOutbox mutationOutbox) {\n+        this.localStorageAdapter = localStorageAdapter;\n+        this.mutationOutbox = mutationOutbox;\n+    }\n+\n+    ...\n+}\n+```\n+\n+\n+```\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.syncengine;\n+\n+... imports here ...\n+\n+/**\n+ * Tests the {@link Merger}.\n+ */\n+@RunWith(RobolectricTestRunner.class)\n+public final class MergerTest {\n+    private LocalStorageAdapter localStorageAdapter;\n+    private MutationOutbox mutationOutbox;\n+\n+    // Setup your object under test in @Before. Try to mock away\n+    // its dependencies.\n+    @Before\n+    public void setup() {\n+        this.localStorageAdapter = mock(LocalStorageAdpater.class);\n+        this.mutationOutbox = mock(MutationOutbox.class);\n+        this.merger = new Merger(localStorageAdapter, mutationOutbox);\n+    }\n+\n+    // Name the test in a way that you can tell the developer's intention\n+    // why did you decide to write this test? What should the code _do_?\n+    @Test\n+    public void mergerAppliesUpdates() {\n+        // Arrange: document preconditions for this test here\n+        ...\n+\n+        // Act: what is the action of this test?\n+        ...\n+        // Assert: Given the arrangement, how does the code respond to the action?\n+    }\n+}\n+```\n+\n+These templates encode some standards and best practices.\n+[Checkstyle](https://github.com/checkstyle/checkstyle/blob/master/README.md) and\n+[Android Lint](https://developer.android.com/studio/write/lint#overview)\n+are the ultimate authorities on this, and will tell you if something is\n+badly formatted, or exciting a known shortcoming in Java, Android, or\n+their library ecosystem.\n+\n+Some suggestions include:\n+\n+* All files get a copyright header with the year of creation;\n+* Use [`@NonNull`](https://developer.android.com/reference/kotlin/androidx/annotation/NonNull)\n+  and [`@Nullable`](https://developer.android.com/reference/kotlin/androidx/annotation/Nullable)\n+  annotations on any/all params, so that\n+  [Kotlin knows what to do](https://kotlinlang.org/docs/reference/java-interop.html#nullability-annotations),\n+  when it consumes the library;\n+* Label Arrange/Act/Assert portions of your unit tests, so others can follow\n+  their flow;\n+* Arrange shared dependencies and test objects in an\n+  [`@Before`](http://junit.sourceforge.net/javadoc/org/junit/Before.html) method;\n+* Prefer `private` and `final` class members where-ever possible. This limits scope\n+  and mutability;\n+* Add documentation to anything that says `public` or `protected`. The\n+  checkstyle doesn't require documentation on package-local or `private` fields, but\n+  that might be a good idea, too, if you're doing some interesting/non-trivial\n+  work in those places.\n \n-When filing an issue, please check [existing open](https://github.com/awslabs/amplify-android/issues), or [recently closed](https://github.com/awslabs/amplify-android/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20), issues to make sure somebody else hasn't already\n-reported the issue. Please try to include as much information as you can. Details like these are incredibly useful:\n+### Build and Validate Your Work\n \n-* A reproducible test case or series of steps\n-* The version of our code being used\n-* Any modifications you've made relevant to the bug\n-* Anything unusual about your environment or deployment\n+This will perform a clean build, run Checkstyle, Android Lint, and all unit\n+tests. This must complete successfully before proposing a PR.\n \n+```\n+./gradlew clean build\n+```\n+\n+### Run Instrumentation Tests\n+\n+The instrumentation tests presume the presence of various backend resources.\n+Currently, the tests use \"special\" Amazon-only `amplifyconfiguration.json` files in\n+an S3 bucket, to find these resources.\n+\n+If you are part of the special access list, this command will copy the\n+configurations to your local workspace:\n+\n+```\n+cd amplify-android\n+.circle-ci/copy-configs\n+```\n+\n+To run a __specific__ test:\n+\n+```\n+test='com.amplifyframework.api.aws.RestApiInstrumentationTest#getRequestWithIAM'\n+./gradlew :cAT -Pandroid.testInstrumentationRunnerArguments.class=\"$test\"\n+```\n+\n+To run __all__ tests:\n+\n+```\n+./gradlew cAT\n+```\n+\n+## Reporting Bugs/Feature Requests\n+\n+We welcome you to use the GitHub issue tracker to report bugs or suggest\n+features.\n+\n+When filing an issue, please check [existing open](https://github.com/awslabs/amplify-android/issues)\n+and [recently closed](https://github.com/awslabs/amplify-android/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20)\n+issues to make sure somebody else hasn't already reported the issue.\n+Please try to include as much information as you can. Details like these\n+are useful:\n+\n+* The version of the framework you are using\n+* Details and configurations for any backend resources that are relevant\n+* A full exception trace of an error you observe\n+* A statement about what system behavior you _expect_, alongside the\n+  behavior you actually observe\n \n ## Contributing via Pull Requests\n-Contributions via pull requests are much appreciated. Before sending us a pull request, please ensure that:\n \n-1. You are working against the latest source on the *master* branch.\n-2. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already.\n-3. You open an issue to discuss any significant work - we would hate for your time to be wasted.\n+This is mostly the same as [GitHub's guide on creating a pull request](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request).\n \n-To send us a pull request, please:\n+First, create a _fork_ of `amplify-android`. Clone it, and make changes to this _fork_.\n \n-1. Fork the repository.\n-2. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change.\n-3. Ensure local tests pass.\n-4. Commit to your fork using clear commit messages.\n-5. Send us a pull request, answering any default questions in the pull request interface.\n-6. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation.\n+```\n+git clone git@github.com:your_username/amplify-android.git \n+```\n \n-GitHub provides additional document on [forking a repository](https://help.github.com/articles/fork-a-repo/) and\n-[creating a pull request](https://help.github.com/articles/creating-a-pull-request/).\n+After you have tested your feature/fix, by adding sufficient test coverage, and\n+validating Checkstyle, lint, and the existing test suites, you're ready to\n+publish your change.\n \n+The commit message should look like below. It started with a bracketed tag\n+stating which module has been the focus of the change. After a paragraph\n+describing what you've done, include links to useful resources. These might\n+include design documents, StackOverflow implementation notes, GitHub issues,\n+etc. All links must be publicly accessible.\n \n-## Finding contributions to work on\n-Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any ['help wanted'](https://github.com/awslabs/amplify-android/labels/help%20wanted) issues is a great place to start.\n+```\n+[aws-datatore] Add a 3-way merging component for network ingress\n+\n+The Merger checks the state of the Mutation Outbox before applying\n+remote changes, locally. Subscriptions, Mutation responses, and\n+base/delta sync all enter the local storage through the Merger.\n+\n+Resolves: https://github.com/amplify-android/issues/222\n+See also: https://stackoverflow.com/a/58662077/695787\n+```\n+\n+Now, save your work to a new branch:\n+\n+```\n+git checkout -B add_merger_to_datastore\n+```\n+\n+To publish it:\n+\n+```\n+git push origin origin add_merger_to_datastore\n+```\n+\n+This last step will give you a URL to view a GitHub page in your browser.\n+Copy-paste this, and complete the workflow in the UI. It will invite you to\n+\"create a PR\" from your newly published branch.\n+\n+Your should add the\n+**[Amplify-Native](https:~~/~~/github.com/orgs/aws-amplify/teams/amplify-native)**\n+team as a reviewer of your PR.\n+\n+Your PR must be reviewed by at least one member of this team, in order to be\n+considered for inclusion.\n+\n+your PR must also pass the CircleCI workflow and LGTM validations. CircleCI\n+will run all build tasks (Checkstyle, Lint, unit tests).\n+\n+Currently, CircleCI **DOES NOT** run instrumentation tests for PRs that come\n+from user forks. You should run these tests on your laptop before submitting\n+the PR.\n+\n+## Troubleshooting\n \n+### Environment Debugging\n+\n+Are you using the right versions of Gradle, Ant, Groovy, Kotlin, Java, Mac OS X?\n+\n+```\n+------------------------------------------------------------\n+Gradle 6.2.1\n+------------------------------------------------------------\n+\n+Build time:   2020-02-24 20:24:10 UTC\n+Revision:     aacbcb7e587faa6a8e7851751a76183b6187b164\n+\n+Kotlin:       1.3.61\n+Groovy:       2.5.8\n+Ant:          Apache Ant(TM) version 1.10.7 compiled on September 1 2019\n+JVM:          1.8.0_212-release (JetBrains s.r.o 25.212-b4-5784211)\n+OS:           Mac OS X 10.14.6 x86_64\n+```\n+\n+Do you have the Android SDK setup, and do you have a pointer to the Java environment?\n+\n+```\n+echo -e $ANDROID_HOME\\\\n$JAVA_HOME \n+/Users/jhwill/Library/Android/sdk\n+/Applications/Android Studio.app/Contents/jre/jdk/Contents/Home\n+```\n+\n+### Problems with the Build\n+\n+If the build fails, and you can't figure out why from a Google search /\n+StackOverflow session, try passing options to Gradle:\n+\n+```\n+./gradlew --stacktrace\n+```\n+\n+The next flag will spit out lots of info. It's only useful if you pipe the\n+output to a file, and grep through it.\n+\n+```\n+./gradlew --debug 2>&1 > debugging-the-build.log\n+```\n+\n+### Failing Instrumentation Tests\n+\n+If a single test is failing, run only that test, to isolate it. You may also\n+want to see the output on the device that occurs, while the tests are\n+executing.\n+\n+```\n+# If you run this same code in a script/block, this will clear the log\n+# file each time.\n+rm -f device-logs-during-test.log\n+\n+# Clear the device's, so you only get recent stuff.\n+adb logcat -c\n+\n+# Run a particular test.\n+test='com.amplifyframework.api.aws.RestApiInstrumentationTest#getRequestWithIAM'\n+./gradlew :cAT -Pandroid.testInstrumentationRunnerArguments.class=\"$test\"\n+\n+# Dump the device logs to your debugging file.\n+adb logcat -d > device-logs-during-test.log\n+```\n+\n+Now, you can inspect both the test execution results, as well as what was\n+happening on the device, in `device-logs-during-test.log`.\n+\n+## Related Repositories\n+\n+1. [AWS SDK for Android](https://github.com/aws-amplify/aws-sdk-android)\n+2. [AWS SDK for iOS](https://github.com/aws-amplify/aws-sdk-ios)\n+3. [Android AppSync Client](https://github.com/awslabs/aws-mobile-appsync-sdk-android)\n+\n+## Finding contributions to work on\n+Looking at the existing issues is a great way to find something to\n+work on.\n \n ## Code of Conduct\n This project has adopted the [Amazon Open Source Code of Conduct](https://aws.github.io/code-of-conduct).\n For more information see the [Code of Conduct FAQ](https://aws.github.io/code-of-conduct-faq) or contact\n opensource-codeofconduct@amazon.com with any additional questions or comments.\n \n-\n ## Security issue notifications\n-If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our [vulnerability reporting page](http://aws.amazon.com/security/vulnerability-reporting/). Please do **not** create a public github issue.\n-\n+If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our\n+[vulnerability reporting page](http://aws.amazon.com/security/vulnerability-reporting/). Please\n+do **not** create a public github issue.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2MjMwNw=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 538}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzI0MTU4OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjozMjozOFrOFz_kGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDowMDo0NlrOF0QENw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2MzEzMQ==", "bodyText": "It seems strange this bit is after the above build incantation. Perhaps we should introduce the prerequisite tools slightly earlier in the document?", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390063131", "createdAt": "2020-03-10T02:32:38Z", "author": {"login": "jpignata"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality\n+without the risk of introducing errors related to the unused code.\n+\n+Amplify has established the concepts of categories and plugins. A\n+__category__ is a collection of api calls that are exposed to the client\n+to do things inside that category. For example, in the storage category\n+generally one wants to upload and download objects from storage so the\n+apis exposed to the client will represent that functionality. Because\n+Amplify is pluggable, a __plugin__ of your choosing will provide the\n+actual implementation behind that api interface.  Using the same example\n+of Storage, the plugin we choose might be `AWSS3StoragePlugin`, which\n+would then implement each api call from the category with a service call\n+or set of service calls to S3, the underlying storage provider of the\n+AWS plugin.\n+\n+## Getting Started\n+\n+First, ensure that you have installed the latest stable version of Android\n+Studio / the Android SDK.\n+\n+Configure your environment, so that the `ANDROID_HOME` and `JAVA_HOME`\n+environment variables are set. A convenient way of doing this is to add them\n+into `~/.bashrc`.\u00a0On a Mac, the SDK and Java installation used by the SDK may\n+be found:\n+\n+```\n+export ANDROID_HOME=~/Library/Android/sdk\n+export JAVA_HOME=/Applications/Android\\ Studio.app/Contents/jre/jdk/Contents/Home\n+```\n+Note: JDK 11, 12, 13, etc. have known issues and are not supported.\n+\n+Now, clone the Amplify Android project from GitHub.\n+\n+```\n+git clone git@github.com:aws-amplify/amplify-android.git\n+```\n+Load this project into Android Studio by selecting File > Open, and choosing\n+the root directory of the project (`amplify-android`). Alternately, cd into this\n+top-level directory.\n+\n+In Android Studio, build the project by clicking the Hammer icon, \"Make Project\n+\u2318F9\". If working on the command line, you can do the same thing via:\n+\n+```\n+./gradlew build\n+```\n+\n+## Tools\n+[Gradle](https://gradle.org) is used for all [build and dependency management](https://developer.android.com/studio/build).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMzMzQ5NQ==", "bodyText": "The only one of these that needs to be installed into the development environment is Android Studio. (It will bootstrap a couple of other implicit dependencies.) Currently, I have this tools section more like a \"code dependencies\" section than a \"compile time utilities\" list. Maybe the easiest fix would be to change the subject heading to something more all-encompassing.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390333495", "createdAt": "2020-03-10T14:00:46Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality\n+without the risk of introducing errors related to the unused code.\n+\n+Amplify has established the concepts of categories and plugins. A\n+__category__ is a collection of api calls that are exposed to the client\n+to do things inside that category. For example, in the storage category\n+generally one wants to upload and download objects from storage so the\n+apis exposed to the client will represent that functionality. Because\n+Amplify is pluggable, a __plugin__ of your choosing will provide the\n+actual implementation behind that api interface.  Using the same example\n+of Storage, the plugin we choose might be `AWSS3StoragePlugin`, which\n+would then implement each api call from the category with a service call\n+or set of service calls to S3, the underlying storage provider of the\n+AWS plugin.\n+\n+## Getting Started\n+\n+First, ensure that you have installed the latest stable version of Android\n+Studio / the Android SDK.\n+\n+Configure your environment, so that the `ANDROID_HOME` and `JAVA_HOME`\n+environment variables are set. A convenient way of doing this is to add them\n+into `~/.bashrc`.\u00a0On a Mac, the SDK and Java installation used by the SDK may\n+be found:\n+\n+```\n+export ANDROID_HOME=~/Library/Android/sdk\n+export JAVA_HOME=/Applications/Android\\ Studio.app/Contents/jre/jdk/Contents/Home\n+```\n+Note: JDK 11, 12, 13, etc. have known issues and are not supported.\n+\n+Now, clone the Amplify Android project from GitHub.\n+\n+```\n+git clone git@github.com:aws-amplify/amplify-android.git\n+```\n+Load this project into Android Studio by selecting File > Open, and choosing\n+the root directory of the project (`amplify-android`). Alternately, cd into this\n+top-level directory.\n+\n+In Android Studio, build the project by clicking the Hammer icon, \"Make Project\n+\u2318F9\". If working on the command line, you can do the same thing via:\n+\n+```\n+./gradlew build\n+```\n+\n+## Tools\n+[Gradle](https://gradle.org) is used for all [build and dependency management](https://developer.android.com/studio/build).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2MzEzMQ=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzI0MzI3OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjozMzo0N1rOFz_lHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDowMToyNFrOF0QF_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2MzM4OA==", "bodyText": "It seems odd that this concept is introduced in quotes and then not addressed. Perhaps a graf on what an escape hatch is, or a closing sentence addressing this bit would help a reader.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390063388", "createdAt": "2020-03-10T02:33:47Z", "author": {"login": "jpignata"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMzczMg==", "bodyText": "Yes usually the example we give is direct passthrough to Route53 if you wanted to use Auth credentials, as most likely the use case of having DNS controls in your app isn't something we would add in for common scenarios.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390113732", "createdAt": "2020-03-10T06:20:18Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2MzM4OA=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMzMzk1MA==", "bodyText": "For this PR, I've address this comment by removing the containing design/ethos section.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390333950", "createdAt": "2020-03-10T14:01:24Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2MzM4OA=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzI0ODQzOnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjozNzozM1rOFz_oUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNTo0Mjo0NVrOF0U3bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2NDIwOQ==", "bodyText": "This note is confusing. The latest Android Studio comes with the latest OpenJDK, right?", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390064209", "createdAt": "2020-03-10T02:37:33Z", "author": {"login": "jpignata"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality\n+without the risk of introducing errors related to the unused code.\n+\n+Amplify has established the concepts of categories and plugins. A\n+__category__ is a collection of api calls that are exposed to the client\n+to do things inside that category. For example, in the storage category\n+generally one wants to upload and download objects from storage so the\n+apis exposed to the client will represent that functionality. Because\n+Amplify is pluggable, a __plugin__ of your choosing will provide the\n+actual implementation behind that api interface.  Using the same example\n+of Storage, the plugin we choose might be `AWSS3StoragePlugin`, which\n+would then implement each api call from the category with a service call\n+or set of service calls to S3, the underlying storage provider of the\n+AWS plugin.\n+\n+## Getting Started\n+\n+First, ensure that you have installed the latest stable version of Android\n+Studio / the Android SDK.\n+\n+Configure your environment, so that the `ANDROID_HOME` and `JAVA_HOME`\n+environment variables are set. A convenient way of doing this is to add them\n+into `~/.bashrc`.\u00a0On a Mac, the SDK and Java installation used by the SDK may\n+be found:\n+\n+```\n+export ANDROID_HOME=~/Library/Android/sdk\n+export JAVA_HOME=/Applications/Android\\ Studio.app/Contents/jre/jdk/Contents/Home\n+```\n+Note: JDK 11, 12, 13, etc. have known issues and are not supported.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxMjE0Mw==", "bodyText": "The latest stable release of Android Studio comes bundled with a distribution of OpenJDK 1.8.0_212:\n/Applications/Android\\ Studio.app//Contents/jre/jdk/Contents/Home/bin/javac -version\njavac 1.8.0_212-release", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390412143", "createdAt": "2020-03-10T15:42:45Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality\n+without the risk of introducing errors related to the unused code.\n+\n+Amplify has established the concepts of categories and plugins. A\n+__category__ is a collection of api calls that are exposed to the client\n+to do things inside that category. For example, in the storage category\n+generally one wants to upload and download objects from storage so the\n+apis exposed to the client will represent that functionality. Because\n+Amplify is pluggable, a __plugin__ of your choosing will provide the\n+actual implementation behind that api interface.  Using the same example\n+of Storage, the plugin we choose might be `AWSS3StoragePlugin`, which\n+would then implement each api call from the category with a service call\n+or set of service calls to S3, the underlying storage provider of the\n+AWS plugin.\n+\n+## Getting Started\n+\n+First, ensure that you have installed the latest stable version of Android\n+Studio / the Android SDK.\n+\n+Configure your environment, so that the `ANDROID_HOME` and `JAVA_HOME`\n+environment variables are set. A convenient way of doing this is to add them\n+into `~/.bashrc`.\u00a0On a Mac, the SDK and Java installation used by the SDK may\n+be found:\n+\n+```\n+export ANDROID_HOME=~/Library/Android/sdk\n+export JAVA_HOME=/Applications/Android\\ Studio.app/Contents/jre/jdk/Contents/Home\n+```\n+Note: JDK 11, 12, 13, etc. have known issues and are not supported.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2NDIwOQ=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzI1MTkzOnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjo0MDowMVrOFz_qew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDowNDo1MVrOF0QP8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2NDc2Mw==", "bodyText": "Can we add something about how to get acclimated to the codebase? Mentioning the Good First Issue label for folks starting off, for instance.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390064763", "createdAt": "2020-03-10T02:40:01Z", "author": {"login": "jpignata"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality\n+without the risk of introducing errors related to the unused code.\n+\n+Amplify has established the concepts of categories and plugins. A\n+__category__ is a collection of api calls that are exposed to the client\n+to do things inside that category. For example, in the storage category\n+generally one wants to upload and download objects from storage so the\n+apis exposed to the client will represent that functionality. Because\n+Amplify is pluggable, a __plugin__ of your choosing will provide the\n+actual implementation behind that api interface.  Using the same example\n+of Storage, the plugin we choose might be `AWSS3StoragePlugin`, which\n+would then implement each api call from the category with a service call\n+or set of service calls to S3, the underlying storage provider of the\n+AWS plugin.\n+\n+## Getting Started\n+\n+First, ensure that you have installed the latest stable version of Android\n+Studio / the Android SDK.\n+\n+Configure your environment, so that the `ANDROID_HOME` and `JAVA_HOME`\n+environment variables are set. A convenient way of doing this is to add them\n+into `~/.bashrc`.\u00a0On a Mac, the SDK and Java installation used by the SDK may\n+be found:\n+\n+```\n+export ANDROID_HOME=~/Library/Android/sdk\n+export JAVA_HOME=/Applications/Android\\ Studio.app/Contents/jre/jdk/Contents/Home\n+```\n+Note: JDK 11, 12, 13, etc. have known issues and are not supported.\n+\n+Now, clone the Amplify Android project from GitHub.\n+\n+```\n+git clone git@github.com:aws-amplify/amplify-android.git\n+```\n+Load this project into Android Studio by selecting File > Open, and choosing\n+the root directory of the project (`amplify-android`). Alternately, cd into this\n+top-level directory.\n+\n+In Android Studio, build the project by clicking the Hammer icon, \"Make Project\n+\u2318F9\". If working on the command line, you can do the same thing via:\n+\n+```\n+./gradlew build\n+```\n+\n+## Tools\n+[Gradle](https://gradle.org) is used for all [build and dependency management](https://developer.android.com/studio/build).\n+\n+Some widely used dependencies are:\n+\n+1. [org.json](https://developer.android.com/reference/org/json/JSONObject) is\n+   baked into Android, and is used for all modeling with JSON.\n+2. [Gson](https://github.com/google/gson/blob/master/README.md#gson) is used\n+   for serialization and deserialization.\n+3. [OkHttp](https://github.com/square/okhttp#okhttp) is used for network operations.\n+\n+_Unit and component tests_, which run on your development machine, use:\n+\n+1. [jUnit](https://github.com/junit-team/junit4/blob/r4.13/README.md#junit-4), to make assertions\n+2. [Mockito](https://javadoc.io/static/org.mockito/mockito-core/1.10.19/org/mockito/Mockito.html#1), to mock dependencies\n+3. [Robolectric](https://github.com/robolectric/robolectric/blob/master/README.md),\n+   to simulate an Android device when unit tests execute on your machine.\n+\n+_Instrumentation tests_, which run on an Android device or emulator use\n+AndroidX test core, runner, and a jUnit extension. See Android's notes on\n+[using AndroidX for test](https://developer.android.com/training/testing/set-up-project).\n+\n+## Workflows", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMzNjQ5OA==", "bodyText": "Later in this doc we have a Finding contributions to work on section. However, we should think of a way to beef it up. Currently, it says just:\n\nLooking at the existing issues is a great way to find something to work on.\n\nThe Adding code to support a new feature sub-section contains a brief tour of the modules / code layout. This could be promoted to a general paragraph for the Workflows, or other section?", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390336498", "createdAt": "2020-03-10T14:04:51Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality\n+without the risk of introducing errors related to the unused code.\n+\n+Amplify has established the concepts of categories and plugins. A\n+__category__ is a collection of api calls that are exposed to the client\n+to do things inside that category. For example, in the storage category\n+generally one wants to upload and download objects from storage so the\n+apis exposed to the client will represent that functionality. Because\n+Amplify is pluggable, a __plugin__ of your choosing will provide the\n+actual implementation behind that api interface.  Using the same example\n+of Storage, the plugin we choose might be `AWSS3StoragePlugin`, which\n+would then implement each api call from the category with a service call\n+or set of service calls to S3, the underlying storage provider of the\n+AWS plugin.\n+\n+## Getting Started\n+\n+First, ensure that you have installed the latest stable version of Android\n+Studio / the Android SDK.\n+\n+Configure your environment, so that the `ANDROID_HOME` and `JAVA_HOME`\n+environment variables are set. A convenient way of doing this is to add them\n+into `~/.bashrc`.\u00a0On a Mac, the SDK and Java installation used by the SDK may\n+be found:\n+\n+```\n+export ANDROID_HOME=~/Library/Android/sdk\n+export JAVA_HOME=/Applications/Android\\ Studio.app/Contents/jre/jdk/Contents/Home\n+```\n+Note: JDK 11, 12, 13, etc. have known issues and are not supported.\n+\n+Now, clone the Amplify Android project from GitHub.\n+\n+```\n+git clone git@github.com:aws-amplify/amplify-android.git\n+```\n+Load this project into Android Studio by selecting File > Open, and choosing\n+the root directory of the project (`amplify-android`). Alternately, cd into this\n+top-level directory.\n+\n+In Android Studio, build the project by clicking the Hammer icon, \"Make Project\n+\u2318F9\". If working on the command line, you can do the same thing via:\n+\n+```\n+./gradlew build\n+```\n+\n+## Tools\n+[Gradle](https://gradle.org) is used for all [build and dependency management](https://developer.android.com/studio/build).\n+\n+Some widely used dependencies are:\n+\n+1. [org.json](https://developer.android.com/reference/org/json/JSONObject) is\n+   baked into Android, and is used for all modeling with JSON.\n+2. [Gson](https://github.com/google/gson/blob/master/README.md#gson) is used\n+   for serialization and deserialization.\n+3. [OkHttp](https://github.com/square/okhttp#okhttp) is used for network operations.\n+\n+_Unit and component tests_, which run on your development machine, use:\n+\n+1. [jUnit](https://github.com/junit-team/junit4/blob/r4.13/README.md#junit-4), to make assertions\n+2. [Mockito](https://javadoc.io/static/org.mockito/mockito-core/1.10.19/org/mockito/Mockito.html#1), to mock dependencies\n+3. [Robolectric](https://github.com/robolectric/robolectric/blob/master/README.md),\n+   to simulate an Android device when unit tests execute on your machine.\n+\n+_Instrumentation tests_, which run on an Android device or emulator use\n+AndroidX test core, runner, and a jUnit extension. See Android's notes on\n+[using AndroidX for test](https://developer.android.com/training/testing/set-up-project).\n+\n+## Workflows", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2NDc2Mw=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 153}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzI2NTY5OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjo0Njo0NFrOFz_xyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDoxMTowM1rOF0QhBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2NjYzNA==", "bodyText": "The word special is doing a lot of work in this section. External contributors aren't expected to run these, so perhaps we should phrase it that way instead.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390066634", "createdAt": "2020-03-10T02:46:44Z", "author": {"login": "jpignata"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality\n+without the risk of introducing errors related to the unused code.\n+\n+Amplify has established the concepts of categories and plugins. A\n+__category__ is a collection of api calls that are exposed to the client\n+to do things inside that category. For example, in the storage category\n+generally one wants to upload and download objects from storage so the\n+apis exposed to the client will represent that functionality. Because\n+Amplify is pluggable, a __plugin__ of your choosing will provide the\n+actual implementation behind that api interface.  Using the same example\n+of Storage, the plugin we choose might be `AWSS3StoragePlugin`, which\n+would then implement each api call from the category with a service call\n+or set of service calls to S3, the underlying storage provider of the\n+AWS plugin.\n+\n+## Getting Started\n+\n+First, ensure that you have installed the latest stable version of Android\n+Studio / the Android SDK.\n+\n+Configure your environment, so that the `ANDROID_HOME` and `JAVA_HOME`\n+environment variables are set. A convenient way of doing this is to add them\n+into `~/.bashrc`.\u00a0On a Mac, the SDK and Java installation used by the SDK may\n+be found:\n+\n+```\n+export ANDROID_HOME=~/Library/Android/sdk\n+export JAVA_HOME=/Applications/Android\\ Studio.app/Contents/jre/jdk/Contents/Home\n+```\n+Note: JDK 11, 12, 13, etc. have known issues and are not supported.\n+\n+Now, clone the Amplify Android project from GitHub.\n+\n+```\n+git clone git@github.com:aws-amplify/amplify-android.git\n+```\n+Load this project into Android Studio by selecting File > Open, and choosing\n+the root directory of the project (`amplify-android`). Alternately, cd into this\n+top-level directory.\n+\n+In Android Studio, build the project by clicking the Hammer icon, \"Make Project\n+\u2318F9\". If working on the command line, you can do the same thing via:\n+\n+```\n+./gradlew build\n+```\n+\n+## Tools\n+[Gradle](https://gradle.org) is used for all [build and dependency management](https://developer.android.com/studio/build).\n+\n+Some widely used dependencies are:\n+\n+1. [org.json](https://developer.android.com/reference/org/json/JSONObject) is\n+   baked into Android, and is used for all modeling with JSON.\n+2. [Gson](https://github.com/google/gson/blob/master/README.md#gson) is used\n+   for serialization and deserialization.\n+3. [OkHttp](https://github.com/square/okhttp#okhttp) is used for network operations.\n+\n+_Unit and component tests_, which run on your development machine, use:\n+\n+1. [jUnit](https://github.com/junit-team/junit4/blob/r4.13/README.md#junit-4), to make assertions\n+2. [Mockito](https://javadoc.io/static/org.mockito/mockito-core/1.10.19/org/mockito/Mockito.html#1), to mock dependencies\n+3. [Robolectric](https://github.com/robolectric/robolectric/blob/master/README.md),\n+   to simulate an Android device when unit tests execute on your machine.\n+\n+_Instrumentation tests_, which run on an Android device or emulator use\n+AndroidX test core, runner, and a jUnit extension. See Android's notes on\n+[using AndroidX for test](https://developer.android.com/training/testing/set-up-project).\n+\n+## Workflows\n+\n+### Adding code to support a new feature\n+\n+Be aware of the Getting Started and Pull Request guides. This portion deals\n+actually with changing some code.\n+\n+First, identify the module you'll modify:\n+\n+ - `core` - The framework itself, including category behavior definitions\n+ - `aws-datastore` - The AppSync Local implementation of the datastore contract\n+ - `aws-api` - A utility to talk to GraphQL and REST endpoints\n+ - `aws-storage-s3` - Wrapper around S3\n+ - `aws-analytics-pinpoint` - Wrapper around Pinpoint\n+ - `testutilts` - Utility code, helpful when writing unit and instrumentation\n+\ttests. A lot of it deals with making async code synchronous, for more\n+    legible tests.\n+ - `testmodels` - Models that are used in test code. These were generated by\n+    the Amplify CLI / code-gen. We have them checked-in to be sure they don't\n+    change and break some tests.\n+\n+You should proceed by creating a new Java file, and writing your feature in\n+isolation. This way, you can write independent unit tests for your feature.\n+Unit tests are required for all features being added to the code-base. Once you\n+have the skeleton of your feature working, you can integrate it into the\n+existing source files.\n+\n+Writing good Android code and good tests is far outside the scope of this\n+document. But, to get started, you can use the templates below which show some\n+conventions and expectations for source files in the Android codebase.\n+\n+For example, let's say you want to add a `Merger` component to the AppSync\n+Local implementation. Create a file in that module, and a unit test for it:\n+\n+```\n+aws-datastore/src/main/com/amplifyframework/datastore/syncengine/Merger.java\n+aws-datastore/src/test/com/amplifyframework/datastore/syncengine/MergerTest.java\n+```\n+\n+The code below might be a reasonable template for these new files.\n+\n+```\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.syncengine;\n+\n+import androidx.annotation.NonNull;\n+\n+/**\n+ * Considers the state of the mutation outbox, before applying\n+ * data to the local storage adapter. Inputs to the merger\n+ * are data from the network.\n+ */\n+final class Merger {\n+    private final LocalStorageAdapter localStorageAdapter;\n+    private final MutationOutbox mutationOutbox;\n+\n+    Merger(\n+            @NonNull LocalStorageAdapter localStorageAdapter,\n+            @NonNull MutationOutbox mutationOutbox) {\n+        this.localStorageAdapter = localStorageAdapter;\n+        this.mutationOutbox = mutationOutbox;\n+    }\n+\n+    ...\n+}\n+```\n+\n+\n+```\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.syncengine;\n+\n+... imports here ...\n+\n+/**\n+ * Tests the {@link Merger}.\n+ */\n+@RunWith(RobolectricTestRunner.class)\n+public final class MergerTest {\n+    private LocalStorageAdapter localStorageAdapter;\n+    private MutationOutbox mutationOutbox;\n+\n+    // Setup your object under test in @Before. Try to mock away\n+    // its dependencies.\n+    @Before\n+    public void setup() {\n+        this.localStorageAdapter = mock(LocalStorageAdpater.class);\n+        this.mutationOutbox = mock(MutationOutbox.class);\n+        this.merger = new Merger(localStorageAdapter, mutationOutbox);\n+    }\n+\n+    // Name the test in a way that you can tell the developer's intention\n+    // why did you decide to write this test? What should the code _do_?\n+    @Test\n+    public void mergerAppliesUpdates() {\n+        // Arrange: document preconditions for this test here\n+        ...\n+\n+        // Act: what is the action of this test?\n+        ...\n+        // Assert: Given the arrangement, how does the code respond to the action?\n+    }\n+}\n+```\n+\n+These templates encode some standards and best practices.\n+[Checkstyle](https://github.com/checkstyle/checkstyle/blob/master/README.md) and\n+[Android Lint](https://developer.android.com/studio/write/lint#overview)\n+are the ultimate authorities on this, and will tell you if something is\n+badly formatted, or exciting a known shortcoming in Java, Android, or\n+their library ecosystem.\n+\n+Some suggestions include:\n+\n+* All files get a copyright header with the year of creation;\n+* Use [`@NonNull`](https://developer.android.com/reference/kotlin/androidx/annotation/NonNull)\n+  and [`@Nullable`](https://developer.android.com/reference/kotlin/androidx/annotation/Nullable)\n+  annotations on any/all params, so that\n+  [Kotlin knows what to do](https://kotlinlang.org/docs/reference/java-interop.html#nullability-annotations),\n+  when it consumes the library;\n+* Label Arrange/Act/Assert portions of your unit tests, so others can follow\n+  their flow;\n+* Arrange shared dependencies and test objects in an\n+  [`@Before`](http://junit.sourceforge.net/javadoc/org/junit/Before.html) method;\n+* Prefer `private` and `final` class members where-ever possible. This limits scope\n+  and mutability;\n+* Add documentation to anything that says `public` or `protected`. The\n+  checkstyle doesn't require documentation on package-local or `private` fields, but\n+  that might be a good idea, too, if you're doing some interesting/non-trivial\n+  work in those places.\n \n-When filing an issue, please check [existing open](https://github.com/awslabs/amplify-android/issues), or [recently closed](https://github.com/awslabs/amplify-android/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20), issues to make sure somebody else hasn't already\n-reported the issue. Please try to include as much information as you can. Details like these are incredibly useful:\n+### Build and Validate Your Work\n \n-* A reproducible test case or series of steps\n-* The version of our code being used\n-* Any modifications you've made relevant to the bug\n-* Anything unusual about your environment or deployment\n+This will perform a clean build, run Checkstyle, Android Lint, and all unit\n+tests. This must complete successfully before proposing a PR.\n \n+```\n+./gradlew clean build\n+```\n+\n+### Run Instrumentation Tests\n+\n+The instrumentation tests presume the presence of various backend resources.\n+Currently, the tests use \"special\" Amazon-only `amplifyconfiguration.json` files in", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 330}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM0MDg3MA==", "bodyText": "Hm, true. I've removed this word, and replaced it with a more well-rounded depiction of what is special about the files.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390340870", "createdAt": "2020-03-10T14:11:03Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality\n+without the risk of introducing errors related to the unused code.\n+\n+Amplify has established the concepts of categories and plugins. A\n+__category__ is a collection of api calls that are exposed to the client\n+to do things inside that category. For example, in the storage category\n+generally one wants to upload and download objects from storage so the\n+apis exposed to the client will represent that functionality. Because\n+Amplify is pluggable, a __plugin__ of your choosing will provide the\n+actual implementation behind that api interface.  Using the same example\n+of Storage, the plugin we choose might be `AWSS3StoragePlugin`, which\n+would then implement each api call from the category with a service call\n+or set of service calls to S3, the underlying storage provider of the\n+AWS plugin.\n+\n+## Getting Started\n+\n+First, ensure that you have installed the latest stable version of Android\n+Studio / the Android SDK.\n+\n+Configure your environment, so that the `ANDROID_HOME` and `JAVA_HOME`\n+environment variables are set. A convenient way of doing this is to add them\n+into `~/.bashrc`.\u00a0On a Mac, the SDK and Java installation used by the SDK may\n+be found:\n+\n+```\n+export ANDROID_HOME=~/Library/Android/sdk\n+export JAVA_HOME=/Applications/Android\\ Studio.app/Contents/jre/jdk/Contents/Home\n+```\n+Note: JDK 11, 12, 13, etc. have known issues and are not supported.\n+\n+Now, clone the Amplify Android project from GitHub.\n+\n+```\n+git clone git@github.com:aws-amplify/amplify-android.git\n+```\n+Load this project into Android Studio by selecting File > Open, and choosing\n+the root directory of the project (`amplify-android`). Alternately, cd into this\n+top-level directory.\n+\n+In Android Studio, build the project by clicking the Hammer icon, \"Make Project\n+\u2318F9\". If working on the command line, you can do the same thing via:\n+\n+```\n+./gradlew build\n+```\n+\n+## Tools\n+[Gradle](https://gradle.org) is used for all [build and dependency management](https://developer.android.com/studio/build).\n+\n+Some widely used dependencies are:\n+\n+1. [org.json](https://developer.android.com/reference/org/json/JSONObject) is\n+   baked into Android, and is used for all modeling with JSON.\n+2. [Gson](https://github.com/google/gson/blob/master/README.md#gson) is used\n+   for serialization and deserialization.\n+3. [OkHttp](https://github.com/square/okhttp#okhttp) is used for network operations.\n+\n+_Unit and component tests_, which run on your development machine, use:\n+\n+1. [jUnit](https://github.com/junit-team/junit4/blob/r4.13/README.md#junit-4), to make assertions\n+2. [Mockito](https://javadoc.io/static/org.mockito/mockito-core/1.10.19/org/mockito/Mockito.html#1), to mock dependencies\n+3. [Robolectric](https://github.com/robolectric/robolectric/blob/master/README.md),\n+   to simulate an Android device when unit tests execute on your machine.\n+\n+_Instrumentation tests_, which run on an Android device or emulator use\n+AndroidX test core, runner, and a jUnit extension. See Android's notes on\n+[using AndroidX for test](https://developer.android.com/training/testing/set-up-project).\n+\n+## Workflows\n+\n+### Adding code to support a new feature\n+\n+Be aware of the Getting Started and Pull Request guides. This portion deals\n+actually with changing some code.\n+\n+First, identify the module you'll modify:\n+\n+ - `core` - The framework itself, including category behavior definitions\n+ - `aws-datastore` - The AppSync Local implementation of the datastore contract\n+ - `aws-api` - A utility to talk to GraphQL and REST endpoints\n+ - `aws-storage-s3` - Wrapper around S3\n+ - `aws-analytics-pinpoint` - Wrapper around Pinpoint\n+ - `testutilts` - Utility code, helpful when writing unit and instrumentation\n+\ttests. A lot of it deals with making async code synchronous, for more\n+    legible tests.\n+ - `testmodels` - Models that are used in test code. These were generated by\n+    the Amplify CLI / code-gen. We have them checked-in to be sure they don't\n+    change and break some tests.\n+\n+You should proceed by creating a new Java file, and writing your feature in\n+isolation. This way, you can write independent unit tests for your feature.\n+Unit tests are required for all features being added to the code-base. Once you\n+have the skeleton of your feature working, you can integrate it into the\n+existing source files.\n+\n+Writing good Android code and good tests is far outside the scope of this\n+document. But, to get started, you can use the templates below which show some\n+conventions and expectations for source files in the Android codebase.\n+\n+For example, let's say you want to add a `Merger` component to the AppSync\n+Local implementation. Create a file in that module, and a unit test for it:\n+\n+```\n+aws-datastore/src/main/com/amplifyframework/datastore/syncengine/Merger.java\n+aws-datastore/src/test/com/amplifyframework/datastore/syncengine/MergerTest.java\n+```\n+\n+The code below might be a reasonable template for these new files.\n+\n+```\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.syncengine;\n+\n+import androidx.annotation.NonNull;\n+\n+/**\n+ * Considers the state of the mutation outbox, before applying\n+ * data to the local storage adapter. Inputs to the merger\n+ * are data from the network.\n+ */\n+final class Merger {\n+    private final LocalStorageAdapter localStorageAdapter;\n+    private final MutationOutbox mutationOutbox;\n+\n+    Merger(\n+            @NonNull LocalStorageAdapter localStorageAdapter,\n+            @NonNull MutationOutbox mutationOutbox) {\n+        this.localStorageAdapter = localStorageAdapter;\n+        this.mutationOutbox = mutationOutbox;\n+    }\n+\n+    ...\n+}\n+```\n+\n+\n+```\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.datastore.syncengine;\n+\n+... imports here ...\n+\n+/**\n+ * Tests the {@link Merger}.\n+ */\n+@RunWith(RobolectricTestRunner.class)\n+public final class MergerTest {\n+    private LocalStorageAdapter localStorageAdapter;\n+    private MutationOutbox mutationOutbox;\n+\n+    // Setup your object under test in @Before. Try to mock away\n+    // its dependencies.\n+    @Before\n+    public void setup() {\n+        this.localStorageAdapter = mock(LocalStorageAdpater.class);\n+        this.mutationOutbox = mock(MutationOutbox.class);\n+        this.merger = new Merger(localStorageAdapter, mutationOutbox);\n+    }\n+\n+    // Name the test in a way that you can tell the developer's intention\n+    // why did you decide to write this test? What should the code _do_?\n+    @Test\n+    public void mergerAppliesUpdates() {\n+        // Arrange: document preconditions for this test here\n+        ...\n+\n+        // Act: what is the action of this test?\n+        ...\n+        // Assert: Given the arrangement, how does the code respond to the action?\n+    }\n+}\n+```\n+\n+These templates encode some standards and best practices.\n+[Checkstyle](https://github.com/checkstyle/checkstyle/blob/master/README.md) and\n+[Android Lint](https://developer.android.com/studio/write/lint#overview)\n+are the ultimate authorities on this, and will tell you if something is\n+badly formatted, or exciting a known shortcoming in Java, Android, or\n+their library ecosystem.\n+\n+Some suggestions include:\n+\n+* All files get a copyright header with the year of creation;\n+* Use [`@NonNull`](https://developer.android.com/reference/kotlin/androidx/annotation/NonNull)\n+  and [`@Nullable`](https://developer.android.com/reference/kotlin/androidx/annotation/Nullable)\n+  annotations on any/all params, so that\n+  [Kotlin knows what to do](https://kotlinlang.org/docs/reference/java-interop.html#nullability-annotations),\n+  when it consumes the library;\n+* Label Arrange/Act/Assert portions of your unit tests, so others can follow\n+  their flow;\n+* Arrange shared dependencies and test objects in an\n+  [`@Before`](http://junit.sourceforge.net/javadoc/org/junit/Before.html) method;\n+* Prefer `private` and `final` class members where-ever possible. This limits scope\n+  and mutability;\n+* Add documentation to anything that says `public` or `protected`. The\n+  checkstyle doesn't require documentation on package-local or `private` fields, but\n+  that might be a good idea, too, if you're doing some interesting/non-trivial\n+  work in those places.\n \n-When filing an issue, please check [existing open](https://github.com/awslabs/amplify-android/issues), or [recently closed](https://github.com/awslabs/amplify-android/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20), issues to make sure somebody else hasn't already\n-reported the issue. Please try to include as much information as you can. Details like these are incredibly useful:\n+### Build and Validate Your Work\n \n-* A reproducible test case or series of steps\n-* The version of our code being used\n-* Any modifications you've made relevant to the bug\n-* Anything unusual about your environment or deployment\n+This will perform a clean build, run Checkstyle, Android Lint, and all unit\n+tests. This must complete successfully before proposing a PR.\n \n+```\n+./gradlew clean build\n+```\n+\n+### Run Instrumentation Tests\n+\n+The instrumentation tests presume the presence of various backend resources.\n+Currently, the tests use \"special\" Amazon-only `amplifyconfiguration.json` files in", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2NjYzNA=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 330}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzI2OTA0OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMjo0ODo1N1rOFz_z0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNTo0NzoyNFrOF0VFRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2NzE1Mg==", "bodyText": "One thought I had was keeping the various codebases we have sync'd as teams iterate on their guides. Should we consider extracting common elements (e.g., the design philosophy, code of conduct, how to file bugs) in some central location on the Amplify site and focus these guides on the mechanics of each codebase?", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390067152", "createdAt": "2020-03-10T02:48:57Z", "author": {"login": "jpignata"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM0Mjk1Nw==", "bodyText": "Hm. Yea. This is worth exploring. It's a cost-benefit sort of question. If the sections are smaller than <meta-metric m>, it probably makes sense to just keep a few flat forks. But if larger than <meta-metric m>, it may make sense to add the tooling, additional repos, and process complexity to include some stubs from a central location.\nThe metric might be lines of text, or amount of time we're spending on the docs. Or, the amount of fear we have that they'll drift, and our perception of how bad that would be for the project?", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390342957", "createdAt": "2020-03-10T14:13:49Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2NzE1Mg=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxNTY4NA==", "bodyText": "(See discussion below @undefobj & @jamesonwilliams discuss doing this section in the docs project, instead of here, and then just linking out to it.)", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390415684", "createdAt": "2020-03-10T15:47:24Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2NzE1Mg=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzUzNzI2OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNTo1NTo0OFrOF0CTfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDoyNTowNlrOF0RLDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwODAzMQ==", "bodyText": "\"Amplify Android is part of the Amplify Framework\" or something like that", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390108031", "createdAt": "2020-03-10T05:55:48Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMjY4OQ==", "bodyText": "Alternatively: \"Thank you for your interest in contributing to the Android Library of the Amplify Framework.\"", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390112689", "createdAt": "2020-03-10T06:15:59Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwODAzMQ=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM1MTYzMQ==", "bodyText": "I addressed this in three ways.\n\nI went with:\n\n\n\"Thank you for contributing to the Android distribution of the Amplify framework.\"\n\n\n\nAlso capitalized all uses of Framework, to codify that as part of the branding.\n\n\nUnder related repositories, added the verbiage, \"This project is part of the Amplify Framework, which runs on Android, iOS, and numerous JavaScript-based web platforms.\" Added a longer-form section with links to the various projects.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390351631", "createdAt": "2020-03-10T14:25:06Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwODAzMQ=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzUzOTI5OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNTo1NzoxMlrOF0CUqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNTo1NzoxMlrOF0CUqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwODMzMQ==", "bodyText": "We actually never use \"AWS\" when talking about the Framework, just \"Amplify Framework\". It's only used with \"AWS Amplify Console\" which is an actual AWS Service.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390108331", "createdAt": "2020-03-10T05:57:12Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzU0MTY3OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNTo1OTowMFrOF0CWIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDoyNTo0MlrOF0RM5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwODcwNQ==", "bodyText": "Also through years of customer feedback and building apps with the community, the default opinionated implementations are essentially institutional knowledge which have been encoded into the Framework as best practices.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390108705", "createdAt": "2020-03-10T05:59:00Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM1MjEwMQ==", "bodyText": "Proposed resolution: let's work this ethos section in another .md file in a later PR.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390352101", "createdAt": "2020-03-10T14:25:42Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwODcwNQ=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzU0MjQ1OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNTo1OTozOVrOF0CWnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDoyNjowNVrOF0ROIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwODgzMQ==", "bodyText": "\"with a cloud backend\" rather than \"against AWS\"", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390108831", "createdAt": "2020-03-10T05:59:39Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM1MjQxOQ==", "bodyText": "(Background/Ethos deferred to another PR.)", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390352419", "createdAt": "2020-03-10T14:26:05Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwODgzMQ=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzU0NDk5OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjowMTowMVrOF0CYBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjowMTowMVrOF0CYBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwOTE5MQ==", "bodyText": "\"certain patterns\"", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390109191", "createdAt": "2020-03-10T06:01:01Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzU0NjIyOnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjowMTo1MFrOF0CYvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDoyNjoxNlrOF0ROww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwOTM3NQ==", "bodyText": "I would replace the \"Circuit breaker\", ... with \"Exponential backoff and retry\"", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390109375", "createdAt": "2020-03-10T06:01:50Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM1MjU3OQ==", "bodyText": "(Moved to a later PR.)", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390352579", "createdAt": "2020-03-10T14:26:16Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwOTM3NQ=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzU0NzIwOnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjowMjo0MFrOF0CZaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjowMjo0MFrOF0CZaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwOTU0NQ==", "bodyText": "\"optimize for security, cost, and performance...\"", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390109545", "createdAt": "2020-03-10T06:02:40Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzU0OTYwOnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjowNDoxNVrOF0CavQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDoyNjozM1rOF0RPow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwOTg4NQ==", "bodyText": "\"prefer to use the highly optimized S3 endpoints as instead of encoding images through a proxy\"", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390109885", "createdAt": "2020-03-10T06:04:15Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM1MjgwMw==", "bodyText": "(Moved to a later PR.)", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390352803", "createdAt": "2020-03-10T14:26:33Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwOTg4NQ=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzU1MjAwOnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjowNTo0OVrOF0CcJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjowNTo0OVrOF0CcJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMDI0NA==", "bodyText": "I'd remove the last part \",with simple JSON...\" as it was an older JS-specific statement", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390110244", "createdAt": "2020-03-10T06:05:49Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzU1MjY1OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjowNjoxM1rOF0Ccgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDoyOToyM1rOF0RYNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMDMzOQ==", "bodyText": "users -> customers", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390110339", "createdAt": "2020-03-10T06:06:13Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM1NDk5Nw==", "bodyText": "This one I think has pros and cons. \"Customers\" is Amazon language, Amazon, a for-profit business entity. As a an open-source outfit, referring to our client as a customer encourages this understanding of a business relationship. However, any .org with an open-source code base would likely not call their user a customer. Apache, Linux, etc.; I stipulate that in open-source, \"customer\" is a weird way to talk about things.\nOn the other hand, we're Amazon, and that word is ingrained in our DNA. So, that reality probably wins out. Even if this phrase adds a \"peculiar\" twang to thangs. :-D\nAnyway, for this PR, I've removed the enclosing section. Let's carry this feedback forward in the ethod/background PR.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390354997", "createdAt": "2020-03-10T14:29:23Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMDMzOQ=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzU1MzgxOnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjowNjo1OFrOF0CdKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNTo0MzozNlrOF0U6CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMDUwNQ==", "bodyText": "This is JS specific. Maybe we should remove it?", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390110505", "createdAt": "2020-03-10T06:06:58Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM1NjA1Mg==", "bodyText": "I think the concept is still relevant. Maybe we could update the wording to be platform-specific. For us, that modularity comes in the specification of modules in a build.gradle, not just at runtime in the Amplify.addPlugin(...).", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390356052", "createdAt": "2020-03-10T14:30:46Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMDUwNQ=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQxMjgwOQ==", "bodyText": "Agree", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390412809", "createdAt": "2020-03-10T15:43:36Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMDUwNQ=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzU2Mjc2OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjoxMjozN1rOF0Cifg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDozMTozMFrOF0ReeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMTg3MA==", "bodyText": "A category is a grouping of functional use cases that a developer would add to a mobile or web application such as \"Auth\" or \"Analytics\". The API calls exposed in that category are declarative in nature for those use case operations.", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390111870", "createdAt": "2020-03-10T06:12:37Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality\n+without the risk of introducing errors related to the unused code.\n+\n+Amplify has established the concepts of categories and plugins. A\n+__category__ is a collection of api calls that are exposed to the client", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM1NjYwMQ==", "bodyText": "(Moving to a later PR.)", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390356601", "createdAt": "2020-03-10T14:31:30Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality\n+without the risk of introducing errors related to the unused code.\n+\n+Amplify has established the concepts of categories and plugins. A\n+__category__ is a collection of api calls that are exposed to the client", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMTg3MA=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzU2NTAyOnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjoxMzo0OVrOF0Cj4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNDozMToxNlrOF0Rd4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMjIyNg==", "bodyText": "Please remove the word \"Local\"", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390112226", "createdAt": "2020-03-10T06:13:49Z", "author": {"login": "undefobj"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality\n+without the risk of introducing errors related to the unused code.\n+\n+Amplify has established the concepts of categories and plugins. A\n+__category__ is a collection of api calls that are exposed to the client\n+to do things inside that category. For example, in the storage category\n+generally one wants to upload and download objects from storage so the\n+apis exposed to the client will represent that functionality. Because\n+Amplify is pluggable, a __plugin__ of your choosing will provide the\n+actual implementation behind that api interface.  Using the same example\n+of Storage, the plugin we choose might be `AWSS3StoragePlugin`, which\n+would then implement each api call from the category with a service call\n+or set of service calls to S3, the underlying storage provider of the\n+AWS plugin.\n+\n+## Getting Started\n+\n+First, ensure that you have installed the latest stable version of Android\n+Studio / the Android SDK.\n+\n+Configure your environment, so that the `ANDROID_HOME` and `JAVA_HOME`\n+environment variables are set. A convenient way of doing this is to add them\n+into `~/.bashrc`.\u00a0On a Mac, the SDK and Java installation used by the SDK may\n+be found:\n+\n+```\n+export ANDROID_HOME=~/Library/Android/sdk\n+export JAVA_HOME=/Applications/Android\\ Studio.app/Contents/jre/jdk/Contents/Home\n+```\n+Note: JDK 11, 12, 13, etc. have known issues and are not supported.\n+\n+Now, clone the Amplify Android project from GitHub.\n+\n+```\n+git clone git@github.com:aws-amplify/amplify-android.git\n+```\n+Load this project into Android Studio by selecting File > Open, and choosing\n+the root directory of the project (`amplify-android`). Alternately, cd into this\n+top-level directory.\n+\n+In Android Studio, build the project by clicking the Hammer icon, \"Make Project\n+\u2318F9\". If working on the command line, you can do the same thing via:\n+\n+```\n+./gradlew build\n+```\n+\n+## Tools\n+[Gradle](https://gradle.org) is used for all [build and dependency management](https://developer.android.com/studio/build).\n+\n+Some widely used dependencies are:\n+\n+1. [org.json](https://developer.android.com/reference/org/json/JSONObject) is\n+   baked into Android, and is used for all modeling with JSON.\n+2. [Gson](https://github.com/google/gson/blob/master/README.md#gson) is used\n+   for serialization and deserialization.\n+3. [OkHttp](https://github.com/square/okhttp#okhttp) is used for network operations.\n+\n+_Unit and component tests_, which run on your development machine, use:\n+\n+1. [jUnit](https://github.com/junit-team/junit4/blob/r4.13/README.md#junit-4), to make assertions\n+2. [Mockito](https://javadoc.io/static/org.mockito/mockito-core/1.10.19/org/mockito/Mockito.html#1), to mock dependencies\n+3. [Robolectric](https://github.com/robolectric/robolectric/blob/master/README.md),\n+   to simulate an Android device when unit tests execute on your machine.\n+\n+_Instrumentation tests_, which run on an Android device or emulator use\n+AndroidX test core, runner, and a jUnit extension. See Android's notes on\n+[using AndroidX for test](https://developer.android.com/training/testing/set-up-project).\n+\n+## Workflows\n+\n+### Adding code to support a new feature\n+\n+Be aware of the Getting Started and Pull Request guides. This portion deals\n+actually with changing some code.\n+\n+First, identify the module you'll modify:\n+\n+ - `core` - The framework itself, including category behavior definitions\n+ - `aws-datastore` - The AppSync Local implementation of the datastore contract", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM1NjQ1MA==", "bodyText": "Done", "url": "https://github.com/aws-amplify/amplify-android/pull/299#discussion_r390356450", "createdAt": "2020-03-10T14:31:16Z", "author": {"login": "jamesonwilliams"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -1,61 +1,520 @@\n # Contributing Guidelines\n \n-Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\n-documentation, we greatly value feedback and contributions from our community.\n+Thank you for your interest in contributing to the Android Amplify\n+framework. Whether it's a bug report, new feature, correction, or\n+additional documentation, the project maintainers at AWS greatly value\n+your feedback and contributions.\n \n-Please read through this document before submitting any issues or pull requests to ensure we have all the necessary\n-information to effectively respond to your bug report or contribution.\n+Please read through this document before submitting any issues or pull\n+requests. Doing so will help to ensure that the project maintainers have\n+all information neessary to effectively respond to your bug report or\n+contribution.\n \n+- [Contributing Guidelines](#contributing-guidelines)\n+  * [Amplify History and Ethos](#amplify-history-and-ethos)\n+    + [Amplify Design](#amplify-design)\n+  * [Getting Started](#getting-started)\n+  * [Tools](#tools)\n+  * [Workflows](#workflows)\n+    + [Adding code to support a new feature](#adding-code-to-support-a-new-feature)\n+  * [Reporting Bugs/Feature Requests](#reporting-bugs-feature-requests)\n+  * [Contributing via Pull Requests](#contributing-via-pull-requests)\n \n-## Reporting Bugs/Feature Requests\n \n-We welcome you to use the GitHub issue tracker to report bugs or suggest features.\n+## Amplify History and Ethos\n+AWS Amplify aims to simplify the experience of developing cloud\n+integrations on Android. Amplify codifies best practices through\n+programmatic interfaces that reduce the effort needed to interact with\n+cloud resources.\n+\n+First and foremost, Amplify exposes to you _what_ things do, and then\n+_how_ best to do them. The \"_what_\" is a functional use case, and\n+\"_how_\" is an opinionated implementation that you can override with\n+\"escape hatches.\" This will allow you to have higher velocity and build\n+better applications by focusing less on implementation choices.\n+\n+Secondly, Amplify is a manifestation of\n+[The Rule of Least Power](https://en.wikipedia.org/wiki/Rule_of_least_power)\n+when developing against AWS. This means it encourages architectural and\n+programmatic best practices that enable you to start quickly.  This\n+shows by encouraging certain services (API Gateway usage vs. direct\n+DynamoDB interaction) or certain connection patterns (Circuit breaker,\n+retry counts and throttle up/down).\n+\n+__Opinionated implementations__: There are many ways to interface with AWS\n+Services. Certain service interactions are favored over others. For instance, if\n+sending and receiving JSON, we would prefer an API Gateway endpoint to other\n+mechanisms. Amplify will programmatically help optimize for cost and\n+performance through library decisions.\n+\n+__Declarative actions__: Amplify will provide you a reference to a generic client\n+object and offer an ability to perform common actions: \"RegisterUser\", \"Login\",\n+\"SendObject\", \"UpdateObject\", \"StreamData\". By default, you should not need to\n+worry about AWS-service-specific API operations like `putItem()` with a unique\n+hash -- or even which HTTP verbs to use.\n+\n+__Cascading service interactions__: Certain actions in a declarative style can have\n+overlapping or ambiguous AWS Service implementations. With an opinionated\n+implementation we can decide which Services are \"primary\" and which are\n+\"secondary\" depending on what is configured. For instance sending an image will\n+prefer S3 over API Gateway..\n+\n+__Simple, standard data objects__: Sending & Receiving data to AWS Services can\n+have many parameters, which tend to show up in the SDKs. These are abstracted\n+and inferred, where possible, with simple JSON that the implementation can\n+reason about. Standard parameters (bucket names, stream names, partition keys,\n+etc.) that are part of the implementation are extracted from a simplified\n+configuration file and dynamically generated/updated in order to further allow\n+focus on state and data types only.\n+\n+### Amplify Design\n+As more and more modules are introduced to AWS Amplify, there is a clear\n+necessity to modularize the library into smaller pieces so that users\n+could avoid importing unnecessary parts into their app. The goal of this\n+design is to make AWS Amplify modularized and also keep it backward\n+compatible to avoid breaking changes.\n+\n+Modular import prevents unnecessary code dependencies are included with the\n+app, and thus decreases the bundle size and enables adding new functionality\n+without the risk of introducing errors related to the unused code.\n+\n+Amplify has established the concepts of categories and plugins. A\n+__category__ is a collection of api calls that are exposed to the client\n+to do things inside that category. For example, in the storage category\n+generally one wants to upload and download objects from storage so the\n+apis exposed to the client will represent that functionality. Because\n+Amplify is pluggable, a __plugin__ of your choosing will provide the\n+actual implementation behind that api interface.  Using the same example\n+of Storage, the plugin we choose might be `AWSS3StoragePlugin`, which\n+would then implement each api call from the category with a service call\n+or set of service calls to S3, the underlying storage provider of the\n+AWS plugin.\n+\n+## Getting Started\n+\n+First, ensure that you have installed the latest stable version of Android\n+Studio / the Android SDK.\n+\n+Configure your environment, so that the `ANDROID_HOME` and `JAVA_HOME`\n+environment variables are set. A convenient way of doing this is to add them\n+into `~/.bashrc`.\u00a0On a Mac, the SDK and Java installation used by the SDK may\n+be found:\n+\n+```\n+export ANDROID_HOME=~/Library/Android/sdk\n+export JAVA_HOME=/Applications/Android\\ Studio.app/Contents/jre/jdk/Contents/Home\n+```\n+Note: JDK 11, 12, 13, etc. have known issues and are not supported.\n+\n+Now, clone the Amplify Android project from GitHub.\n+\n+```\n+git clone git@github.com:aws-amplify/amplify-android.git\n+```\n+Load this project into Android Studio by selecting File > Open, and choosing\n+the root directory of the project (`amplify-android`). Alternately, cd into this\n+top-level directory.\n+\n+In Android Studio, build the project by clicking the Hammer icon, \"Make Project\n+\u2318F9\". If working on the command line, you can do the same thing via:\n+\n+```\n+./gradlew build\n+```\n+\n+## Tools\n+[Gradle](https://gradle.org) is used for all [build and dependency management](https://developer.android.com/studio/build).\n+\n+Some widely used dependencies are:\n+\n+1. [org.json](https://developer.android.com/reference/org/json/JSONObject) is\n+   baked into Android, and is used for all modeling with JSON.\n+2. [Gson](https://github.com/google/gson/blob/master/README.md#gson) is used\n+   for serialization and deserialization.\n+3. [OkHttp](https://github.com/square/okhttp#okhttp) is used for network operations.\n+\n+_Unit and component tests_, which run on your development machine, use:\n+\n+1. [jUnit](https://github.com/junit-team/junit4/blob/r4.13/README.md#junit-4), to make assertions\n+2. [Mockito](https://javadoc.io/static/org.mockito/mockito-core/1.10.19/org/mockito/Mockito.html#1), to mock dependencies\n+3. [Robolectric](https://github.com/robolectric/robolectric/blob/master/README.md),\n+   to simulate an Android device when unit tests execute on your machine.\n+\n+_Instrumentation tests_, which run on an Android device or emulator use\n+AndroidX test core, runner, and a jUnit extension. See Android's notes on\n+[using AndroidX for test](https://developer.android.com/training/testing/set-up-project).\n+\n+## Workflows\n+\n+### Adding code to support a new feature\n+\n+Be aware of the Getting Started and Pull Request guides. This portion deals\n+actually with changing some code.\n+\n+First, identify the module you'll modify:\n+\n+ - `core` - The framework itself, including category behavior definitions\n+ - `aws-datastore` - The AppSync Local implementation of the datastore contract", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMjIyNg=="}, "originalCommit": {"oid": "945b1d85edec8f034c45db08ec7b93a662406c91"}, "originalPosition": 163}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1568, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}