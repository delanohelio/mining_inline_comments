{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMTEwMjA5", "number": 860, "title": "Adds support for mixed owner and group based auth rules", "bodyText": "Currently subscriptions do not work if you have both an owner auth directive with a READ operation and a group auth directive with a READ operation. This fixes that.\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-09-25T14:20:49Z", "url": "https://github.com/aws-amplify/amplify-android/pull/860", "merged": true, "mergeCommit": {"oid": "1668eaf98efe69fb584e0d68cda754488757d087"}, "closed": true, "closedAt": "2020-09-25T15:05:53Z", "author": {"login": "TrekSoft"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMHsg6gH2gAyNDkzMTEwMjA5OjE2MjQ4MmI5MmJmOTg0ZTczYTEwNDIxMDE0MDUyZmZmNGZmMmEyODY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMXHosgFqTQ5NjQ3NzMwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "162482b92bf984e73a10421014052fff4ff2a286", "author": {"user": {"login": "TrekSoft", "name": "David Daudelin"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/162482b92bf984e73a10421014052fff4ff2a286", "committedDate": "2020-09-24T21:02:17Z", "message": "Adds support for mixed owner and group based auth rules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efaf75a412673141b6eee8f4bda1c79ec75360fc", "author": {"user": {"login": "TrekSoft", "name": "David Daudelin"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/efaf75a412673141b6eee8f4bda1c79ec75360fc", "committedDate": "2020-09-25T14:16:38Z", "message": "Updated recovery message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8d66c56ef12a25fb659176b48e9c342f31f21c4", "author": {"user": {"login": "TrekSoft", "name": "David Daudelin"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/e8d66c56ef12a25fb659176b48e9c342f31f21c4", "committedDate": "2020-09-25T14:19:20Z", "message": "Renames variable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NDc3MzAz", "url": "https://github.com/aws-amplify/amplify-android/pull/860#pullrequestreview-496477303", "createdAt": "2020-09-25T14:30:53Z", "commit": {"oid": "e8d66c56ef12a25fb659176b48e9c342f31f21c4"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDozMDo1M1rOHYGKDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDozMDo1M1rOHYGKDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAyODc0OA==", "bodyText": "\ud83e\udd2f \ud83e\udd23", "url": "https://github.com/aws-amplify/amplify-android/pull/860#discussion_r495028748", "createdAt": "2020-09-25T14:30:53Z", "author": {"login": "rjuliano"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/AWSApiPlugin.java", "diffHunk": "@@ -286,13 +288,40 @@ public String getVersion() {\n         if (request instanceof AppSyncGraphQLRequest) {\n             try {\n                 AppSyncGraphQLRequest<R> appSyncRequest = (AppSyncGraphQLRequest<R>) request;\n+                AuthRule ownerRuleWithReadRestriction = null;\n+                ArrayList<String> readAuthorizedGroups = new ArrayList<>();\n+\n+                // Note that we are intentionally supporting only one owner rule with a READ operation at this time.\n+                // If there is more than one, the operation will fail because AppSync generates a parameter for each\n+                // one. The question then is which one do we pass. JavaScript currently doesn't support this use case\n+                // and it's not clear what a good solution would be until AppSync supports real time filters.\n                 for (AuthRule authRule : appSyncRequest.getModelSchema().getAuthRules()) {\n-                    if (isOwnerArgumentRequired(authRule)) {\n-                        request = appSyncRequest.newBuilder()\n-                                .variable(authRule.getOwnerFieldOrDefault(), \"String!\", getUsername())\n-                                .build();\n+                    if (isReadRestrictingOwner(authRule)) {\n+                        if (ownerRuleWithReadRestriction == null) {\n+                            ownerRuleWithReadRestriction = authRule;\n+                        } else {\n+                            onSubscriptionFailure.accept(new ApiException(\"Detected multiple owner type auth rules \" +\n+                                    \"with a READ operation\", \"We currently do not support this use case. Please \" +\n+                                    \"limit your type to just one owner auth rule with a READ operation restriction.\"));\n+                            return null;\n+                        }\n+                    } else if (isReadRestrictingStaticGroup(authRule)) {\n+                        readAuthorizedGroups.addAll(authRule.getGroups());\n                     }\n                 }\n+\n+                // We only add the owner parameter to the subscription if there is an owner rule with a READ restriction\n+                // and either there are no group auth rules with read access or there are but the user isn't in any of\n+                // them.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8d66c56ef12a25fb659176b48e9c342f31f21c4"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1705, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}