{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0OTQxNzY1", "number": 438, "title": "[DataStore] query API changes with pagination support", "bodyText": "Query API changes and Pagination\nThis PR adds pagination support to the DataStore.query(). However, when adding the pagination support I quickly realized that things could get messy real quick. Allow me to explain... =)\nCurrently, the query API supports a model type and an optional predicate:\n// simplified representation of current API\nquery(@NonNull Class<M>, @Nullable QueryPredicate)\nOverload-load\nThis means we have two overloads, another one that just accepts the model type. By adding a third optional parameter to handle pagination we would increase the number of overloads from 2 to 4. However it doesn't stop there. We intend to add support to sorting and projections/aggregations (i.e. count, sum, max, avg, etc). You see where I'm coming from...\nThe number of overloads would not only be hard to maintain, but also impact the DX since the IDE won't be able to guess which parameter type you intend to use next very accurately.\nBuilder DSL\nWe used builders before to overcome this issues and I think it's a good fit here too. However, not only the pattern itself, but how we use it as a expressive DSL, something that could match what Swift and Kotlin can achieve with named arguments.\nCurrent Swift API\nFor extra context with a goal to acompli\n// API signature\nfunc query<M: Model>(_ modelType: M.Type,\n                     where predicate: QueryPredicateFactory?,\n                     paginate paginationInput: QueryPaginationInput?,\n                     completion: DataStoreCallback<[M]>)\n\n// Usage\n\nAmplify.DataStore.query(Todo.self,\n                        where: Todo.keys.title.beginsWith(\"Amplify\"),\n                        paginate: .page(2, limit: 20)) { result in\n    // handle result\n}\nDSL Flavor 1: static imports (\"functional\" style)\nThis loses. Refer to Flavor 2 for chosen design.\nimport static com.amplifyframework.core.model.query.QueryOptions.byId;\nimport static com.amplifyframework.core.model.query.QueryOptions.where;\nimport static com.amplifyframework.core.model.query.QueryPaginationInput.firstPage;\nimport static com.amplifyframework.core.model.query.QueryPaginationInput.page;\n\n\nAmplify.DataStore.query(\n    Todo.class,\n    where(\n        Todo.TITLE.beginsWith(\"Amplify\")\n    )\n    .paginate(page(2).withLimit(20)),\n    success -> {},\n    failure -> {}\n);\n\n// query by id\nAmplify.DataStore.query(Todo.class, byId(\"\"),\n    success -> {},\n    failure -> {}\n);\n\n// pagination helpers (exists on iOS)\nAmplify.DataStore.query(\n    Todo.class,\n    where(Todo.DONE.eq(false)) // or all()\n    .paginate(firstPage()),\n    success -> {},\n    failure -> {}\n);\nDSL Flavor 2: classes with static builders\nThis wins!\nimport com.amplifyframework.core.model.query.Where;\nimport com.amplifyframework.core.model.query.Page;\n\nAmplify.DataStore.query(\n    Todo.class,\n    Where.matches(\n        Todo.TITLE.beginsWith(\"Amplify\")\n    )\n    .paginate(\n        Page.startingAt(2).withLimit(20)\n    ),\n    success -> {},\n    failure -> {}\n);\n\n// query by id\nAmplify.DataStore.query(Todo.class, Where.id(\"\"),\n    success -> {},\n    failure -> {}\n);\n\n// pagination helpers (exists on iOS)\nAmplify.DataStore.query(\n    Todo.class,\n    Where\n        .matchesAll()\n        .paginate(Page.firstPage()),\n    success -> {},\n    failure -> {}\n);\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-05-07T22:00:03Z", "url": "https://github.com/aws-amplify/amplify-android/pull/438", "merged": true, "mergeCommit": {"oid": "bd8dbba892f6a4f4e340eed5676c0ced974cc593"}, "closed": true, "closedAt": "2020-05-08T22:22:13Z", "author": {"login": "drochetti"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfCR9vAH2gAyNDE0OTQxNzY1OmNhYWUyMmY3N2VlMmZkZGM4ZmUzZDBkZjJiMjAxOTZkYmU1MzlmODM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfYaxhAH2gAyNDE0OTQxNzY1OjFiZGYwMDg0YTEyZDExMDU2ZWVhYTMwZWU4MDYxZDQwZWE2NGM0OWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "caae22f77ee2fddc8fe3d0df2b20196dbe539f83", "author": {"user": {"login": "drochetti", "name": "Daniel Rochetti"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/caae22f77ee2fddc8fe3d0df2b20196dbe539f83", "committedDate": "2020-05-07T19:17:10Z", "message": "query pagination api and pagination groundwork"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ac9206c1c491fc68ce2aefe13238f191c561d59", "author": {"user": {"login": "drochetti", "name": "Daniel Rochetti"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/6ac9206c1c491fc68ce2aefe13238f191c561d59", "committedDate": "2020-05-07T19:23:06Z", "message": "Merge remote-tracking branch 'origin/master' into feature/datastore-pagination"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "161a0411f4bc857ee2345dda237ca4d6a41bdcb9", "author": {"user": {"login": "drochetti", "name": "Daniel Rochetti"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/161a0411f4bc857ee2345dda237ca4d6a41bdcb9", "committedDate": "2020-05-07T19:32:15Z", "message": "fix null check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce4c52d3caf566bdff9cca80537fc9e691d69136", "author": {"user": {"login": "drochetti", "name": "Daniel Rochetti"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/ce4c52d3caf566bdff9cca80537fc9e691d69136", "committedDate": "2020-05-07T21:57:50Z", "message": "fix checkstyle errors and improve documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2", "author": {"user": {"login": "drochetti", "name": "Daniel Rochetti"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/0031a4933619e7b963d2564fe88e4d10ad4e92b2", "committedDate": "2020-05-07T21:58:24Z", "message": "Merge remote-tracking branch 'origin/master' into feature/datastore-pagination"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3OTExNjY5", "url": "https://github.com/aws-amplify/amplify-android/pull/438#pullrequestreview-407911669", "createdAt": "2020-05-07T23:52:50Z", "commit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzo1Mjo1MFrOGSUNKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMDowOTowNVrOGSUgFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg1ODYwMQ==", "bodyText": "Maybe, matchAll(), to disambiguate from \"apply all of the options\"?\nElsewhere, we use WhateverOptions.defaults(), too. That's become sort of a convention at this point.", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421858601", "createdAt": "2020-05-07T23:52:50Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/SynchronousStorageAdapter.java", "diffHunk": "@@ -177,25 +178,24 @@ public void terminate() throws DataStoreException {\n      * @throws DataStoreException On any failure to query storage adapter\n      */\n     public <T extends Model> List<T> query(@NonNull Class<T> modelClass) throws DataStoreException {\n-        //noinspection ConstantConditions\n-        return query(modelClass, null);\n+        return query(modelClass, QueryOptions.all());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg1OTM3Ng==", "bodyText": "This could also be expressed as where(Todo.ID.eq(todo.getId()), right?\nWe could potentially make Where into a class name, to avoid the static import.\nfinal class Where {\n    private Where() {}\n    \n    QueryOptions id(String matchingId) {\n        return QueryOptions.byId(matchingId);\n    }\n}", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421859376", "createdAt": "2020-05-07T23:55:28Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterModelConverterTest.java", "diffHunk": "@@ -70,7 +71,7 @@ public void saveModelWithAllTypesThenQuery() throws DataStoreException {\n         final Todo todo = createTestTodoModel();\n         this.adapter.save(todo);\n \n-        final List<Todo> result = this.adapter.query(Todo.class, Todo.ID.eq(todo.getId()));\n+        final List<Todo> result = this.adapter.query(Todo.class, byId(todo.getId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg2MTI5NQ==", "bodyText": "If it is not intended for these values to ever be null, I think you could use int instead of Integer, everywhere in the class.", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421861295", "createdAt": "2020-05-08T00:01:56Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model.query;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.util.Objects;\n+\n+/**\n+ * A simple data structure that holds pagination information that can be applied queries.\n+ */\n+public class QueryPaginationInput {\n+\n+    /**\n+     * The default page size.\n+     */\n+    public static final Integer DEFAULT_LIMIT = 100;\n+\n+    private final Integer page;\n+    private final Integer limit;\n+\n+    private QueryPaginationInput(@NonNull Integer page, @NonNull Integer limit) {\n+        this.page = page;\n+        this.limit = limit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg2MTU4MQ==", "bodyText": "Can we use the term \"page size\", instead of limit? \"limit\" is ambiguous. It would either be a max results, or a number of results per page. I guess here it means limit for each page.", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421861581", "createdAt": "2020-05-08T00:02:57Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/query/QueryPaginationInput.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.model.query;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.util.Objects;\n+\n+/**\n+ * A simple data structure that holds pagination information that can be applied queries.\n+ */\n+public class QueryPaginationInput {\n+\n+    /**\n+     * The default page size.\n+     */\n+    public static final Integer DEFAULT_LIMIT = 100;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg2MjQxNA==", "bodyText": "Can you uncomment it, and assert the non-null state, now that you have @NonNull? Also thank you for making this API improvement. The null-ness of this param has always bothered me.", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421862414", "createdAt": "2020-05-08T00:05:35Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapter.java", "diffHunk": "@@ -367,16 +370,16 @@ public synchronized void initialize(\n     @Override\n     public <T extends Model> void query(\n             @NonNull Class<T> itemClass,\n-            @Nullable QueryPredicate predicate,\n+            @NonNull QueryOptions options,\n             @NonNull Consumer<Iterator<T>> onSuccess,\n             @NonNull Consumer<DataStoreException> onError) {\n         Objects.requireNonNull(itemClass);\n-        // Objects.requireNonNull(predicate); It is not required!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg2MzQ0NQ==", "bodyText": "I like this style, but I'd change the method names for the pagination. To me, this would be more clear:\nWhere.allMatch().paginated(startAtPage(0).withPageSize(pageSize))\n\nOr:\nWhere.allMatch().paginated(intoPagesOfSize(pageSize).startingAtPage(0))\n\nOr:\nWhere.allMatch().paginated(intoPagesSized(pageSize).startingAtPage(0))", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r421863445", "createdAt": "2020-05-08T00:09:05Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/androidTest/java/com/amplifyframework/datastore/storage/sqlite/SQLiteStorageAdapterQueryTest.java", "diffHunk": "@@ -237,10 +252,57 @@ public void queryWithMaliciousPredicates() throws DataStoreException {\n         adapter.save(jane);\n \n         QueryPredicate predicate = BlogOwner.NAME.eq(\"Jane; DROP TABLE Person; --\");\n-        final List<BlogOwner> resultOfMaliciousQuery = adapter.query(BlogOwner.class, predicate);\n+        final List<BlogOwner> resultOfMaliciousQuery = adapter.query(BlogOwner.class, where(predicate));\n         assertTrue(resultOfMaliciousQuery.isEmpty());\n \n         final List<BlogOwner> resultAfterMaliciousQuery = adapter.query(BlogOwner.class);\n         assertTrue(resultAfterMaliciousQuery.contains(jane));\n     }\n+\n+    @Test\n+    public void queryWithPaginationWithCustomValues() throws DataStoreException {\n+        final int pageSize = 10;\n+        createBlogOwnerRecords(pageSize * 2);\n+\n+        List<BlogOwner> result = adapter.query(\n+            BlogOwner.class,\n+            all().paginated(page(0).withLimit(pageSize))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3OTE3NDQ1", "url": "https://github.com/aws-amplify/amplify-android/pull/438#pullrequestreview-407917445", "createdAt": "2020-05-08T00:10:28Z", "commit": {"oid": "0031a4933619e7b963d2564fe88e4d10ad4e92b2"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29b09582a22f8c8a9b540369c3047240f262fb2d", "author": {"user": {"login": "drochetti", "name": "Daniel Rochetti"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/29b09582a22f8c8a9b540369c3047240f262fb2d", "committedDate": "2020-05-08T03:15:39Z", "message": "fix pagination bindings and add missing javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b468824a157c93bafe3a580bc8db77cfb44c1ad3", "author": {"user": {"login": "drochetti", "name": "Daniel Rochetti"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/b468824a157c93bafe3a580bc8db77cfb44c1ad3", "committedDate": "2020-05-08T07:28:13Z", "message": "query dsl updates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MDY3NTk0", "url": "https://github.com/aws-amplify/amplify-android/pull/438#pullrequestreview-408067594", "createdAt": "2020-05-08T07:54:31Z", "commit": {"oid": "b468824a157c93bafe3a580bc8db77cfb44c1ad3"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99e050295c6a69cdb395e7da65363fdb2f6cbab9", "author": {"user": {"login": "drochetti", "name": "Daniel Rochetti"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/99e050295c6a69cdb395e7da65363fdb2f6cbab9", "committedDate": "2020-05-08T07:58:51Z", "message": "fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4Mzk3OTEy", "url": "https://github.com/aws-amplify/amplify-android/pull/438#pullrequestreview-408397912", "createdAt": "2020-05-08T17:29:13Z", "commit": {"oid": "99e050295c6a69cdb395e7da65363fdb2f6cbab9"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzozMjowNlrOGSteiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzozMjowNlrOGSteiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI3MjY0OA==", "bodyText": "This doesn't actually happen under the source tree, though, does it? (I couldn't spot it.) If not -- I'd say, remove these. The src/test has checkstyle-suppressions.xml rules which allow static imports in test code. (Mockito, for example, is designed for use with static imports.)", "url": "https://github.com/aws-amplify/amplify-android/pull/438#discussion_r422272648", "createdAt": "2020-05-08T17:32:06Z", "author": {"login": "jamesonwilliams"}, "path": "configuration/checkstyle-rules.xml", "diffHunk": "@@ -184,7 +184,10 @@\n             how the code is composed, with only a quick visual inspection.\n         -->\n         <module name=\"AvoidStarImport\" />\n-        <module name=\"AvoidStaticImport\" />\n+        <module name=\"AvoidStaticImport\">\n+            <property name=\"excludes\" value=\"com.amplifyframework.core.model.query.QueryOptions.*\" />\n+            <property name=\"excludes\" value=\"com.amplifyframework.core.model.query.QueryPaginationInput.*\" />\n+        </module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99e050295c6a69cdb395e7da65363fdb2f6cbab9"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4304445649495b4eaa4a58372de7e4db46e1491", "author": {"user": {"login": "drochetti", "name": "Daniel Rochetti"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/a4304445649495b4eaa4a58372de7e4db46e1491", "committedDate": "2020-05-08T20:24:06Z", "message": "add missing equals, hashCode and toString methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "758cb7a4b8b52ce752ea344f07a776cade54076e", "author": {"user": {"login": "drochetti", "name": "Daniel Rochetti"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/758cb7a4b8b52ce752ea344f07a776cade54076e", "committedDate": "2020-05-08T20:31:10Z", "message": "Merge remote-tracking branch 'origin/master' into feature/datastore-pagination"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bdf0084a12d11056eeaa30ee8061d40ea64c49b", "author": {"user": {"login": "drochetti", "name": "Daniel Rochetti"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/1bdf0084a12d11056eeaa30ee8061d40ea64c49b", "committedDate": "2020-05-08T21:04:42Z", "message": "fix checkstyle static import rule"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2016, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}