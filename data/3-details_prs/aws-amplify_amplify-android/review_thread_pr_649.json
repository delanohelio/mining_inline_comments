{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwNTQ0NjYz", "number": 649, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMjozOToxMVrOEPVIKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzo1NDoyMlrOEPn93A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTEwMjUxOnYy", "diffSide": "RIGHT", "path": "core/src/androidTest/java/com/amplifyframework/core/DevMenuMainViewInstrumentationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMjozOToxMVrOGy_M9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNDowNjo0NVrOGzUZwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjExNzQ5Mg==", "bodyText": "does this variable have to be static?", "url": "https://github.com/aws-amplify/amplify-android/pull/649#discussion_r456117492", "createdAt": "2020-07-16T22:39:11Z", "author": {"login": "raphkim"}, "path": "core/src/androidTest/java/com/amplifyframework/core/DevMenuMainViewInstrumentationTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core;\n+\n+import androidx.fragment.app.testing.FragmentScenario;\n+import androidx.navigation.NavDestination;\n+import androidx.navigation.Navigation;\n+import androidx.navigation.testing.TestNavHostController;\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.espresso.action.ViewActions;\n+import androidx.test.espresso.matcher.ViewMatchers;\n+\n+import com.amplifyframework.testutils.Sleep;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+\n+/**\n+ * Tests the navigation behavior for {@link DevMenuMainFragment}.\n+ */\n+public final class DevMenuMainViewInstrumentationTest {\n+    // Amount of time (in milliseconds) to wait before starting\n+    // a test, to allow any animations to complete.\n+    private static final int START_TEST_DELAY_MS = 500;\n+    // A navigation host controller for testing.\n+    private static TestNavHostController navHostController;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "345c0ce64fdd4af9e9eb0a60f390d953fff03370"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ2NDgzMw==", "bodyText": "No. I think that may have been left over from a previous iteration of these tests, so I'll remove \"static\".", "url": "https://github.com/aws-amplify/amplify-android/pull/649#discussion_r456464833", "createdAt": "2020-07-17T14:06:45Z", "author": {"login": "eeatonaws"}, "path": "core/src/androidTest/java/com/amplifyframework/core/DevMenuMainViewInstrumentationTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core;\n+\n+import androidx.fragment.app.testing.FragmentScenario;\n+import androidx.navigation.NavDestination;\n+import androidx.navigation.Navigation;\n+import androidx.navigation.testing.TestNavHostController;\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.espresso.action.ViewActions;\n+import androidx.test.espresso.matcher.ViewMatchers;\n+\n+import com.amplifyframework.testutils.Sleep;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+\n+/**\n+ * Tests the navigation behavior for {@link DevMenuMainFragment}.\n+ */\n+public final class DevMenuMainViewInstrumentationTest {\n+    // Amount of time (in milliseconds) to wait before starting\n+    // a test, to allow any animations to complete.\n+    private static final int START_TEST_DELAY_MS = 500;\n+    // A navigation host controller for testing.\n+    private static TestNavHostController navHostController;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjExNzQ5Mg=="}, "originalCommit": {"oid": "345c0ce64fdd4af9e9eb0a60f390d953fff03370"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTEwOTkxOnYy", "diffSide": "RIGHT", "path": "core/src/androidTest/java/com/amplifyframework/core/DevMenuMainViewInstrumentationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMjo0MjozNlrOGy_Raw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMjo0MjozNlrOGy_Raw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjExODYzNQ==", "bodyText": "Not a big deal since it's a private helper function, but @RawRes annotation helps clarify that the param is looking for a resource ID :)", "url": "https://github.com/aws-amplify/amplify-android/pull/649#discussion_r456118635", "createdAt": "2020-07-16T22:42:36Z", "author": {"login": "raphkim"}, "path": "core/src/androidTest/java/com/amplifyframework/core/DevMenuMainViewInstrumentationTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core;\n+\n+import androidx.fragment.app.testing.FragmentScenario;\n+import androidx.navigation.NavDestination;\n+import androidx.navigation.Navigation;\n+import androidx.navigation.testing.TestNavHostController;\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.espresso.action.ViewActions;\n+import androidx.test.espresso.matcher.ViewMatchers;\n+\n+import com.amplifyframework.testutils.Sleep;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+\n+/**\n+ * Tests the navigation behavior for {@link DevMenuMainFragment}.\n+ */\n+public final class DevMenuMainViewInstrumentationTest {\n+    // Amount of time (in milliseconds) to wait before starting\n+    // a test, to allow any animations to complete.\n+    private static final int START_TEST_DELAY_MS = 500;\n+    // A navigation host controller for testing.\n+    private static TestNavHostController navHostController;\n+\n+    /**\n+     * Go to the main screen of the developer menu.\n+     */\n+    @Before\n+    public void resetView() {\n+        navHostController = new TestNavHostController(ApplicationProvider.getApplicationContext());\n+        navHostController.setGraph(R.navigation.dev_menu_nav_graph);\n+        FragmentScenario<DevMenuMainFragment> mainMenuScenario =\n+                FragmentScenario.launchInContainer(DevMenuMainFragment.class);\n+        mainMenuScenario.onFragment(fragment -> Navigation.setViewNavController(fragment.requireView(),\n+                navHostController));\n+    }\n+\n+\n+    /**\n+     * Tests that the app is navigated to the environment information\n+     * screen when the view environment information button is pressed.\n+     */\n+    @Test\n+    public void testNavigationToEnvInfoScreen() {\n+        testNavigationOnButtonPress(R.id.env_button, R.id.environment_fragment);\n+    }\n+\n+    /**\n+     * Tests that the app is navigated to the device information\n+     * screen when the view device information button is pressed.\n+     */\n+    @Test\n+    public void testNavigationToDeviceInfoScreen() {\n+        testNavigationOnButtonPress(R.id.device_button, R.id.device_fragment);\n+    }\n+\n+    /**\n+     * Tests that the app is navigated to the logs screen when\n+     * the view logs button is pressed.\n+     */\n+    @Test\n+    public void testNavigationToLogsScreen() {\n+        testNavigationOnButtonPress(R.id.logs_button, R.id.logs_fragment);\n+    }\n+\n+    /**\n+     * Tests that the app is navigated to the file issue screen\n+     * when the file issue button is pressed.\n+     */\n+    @Test\n+    public void testNavigationToFileIssueScreen() {\n+        testNavigationOnButtonPress(R.id.file_issue_button, R.id.file_issue_fragment);\n+    }\n+\n+    /**\n+     * Test that the app is navigated to the destination with the given ID when\n+     * the button with the given ID is pressed.\n+     * @param buttonId ID of the button pressed\n+     * @param destinationId ID of the navigation destination\n+     */\n+    private void testNavigationOnButtonPress(int buttonId, int destinationId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "345c0ce64fdd4af9e9eb0a60f390d953fff03370"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODE2MTc3OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzo0NjoyMFrOGzbyeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzo0NjoyMFrOGzbyeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU4NTg0OQ==", "bodyText": "I guess these should go under test, not androidx? I do currently have Android X dependencies down there, as well. I'll admit that the layout of this ext block makes no sense. I just did some stuff. We can re-organize things if you can think of a better standardization. Currently I am trying to minimize the average length of dep.foo.bar.whatever, while still having descriptive and meaningful phrasing. A linguistic optimization challenge of sorts, information science at its core! Aye.", "url": "https://github.com/aws-amplify/amplify-android/pull/649#discussion_r456585849", "createdAt": "2020-07-17T17:46:20Z", "author": {"login": "jamesonwilliams"}, "path": "build.gradle", "diffHunk": "@@ -63,13 +64,16 @@ ext {\n                 fragmentktx: \"androidx.navigation:navigation-fragment-ktx:$navigationVersion\",\n                 ui: \"androidx.navigation:navigation-ui:$navigationVersion\",\n                 uiktx: \"androidx.navigation:navigation-ui-ktx:$navigationVersion\",\n-                dynamicfeatures: \"androidx.navigation:navigation-dynamic-features-fragment:$navigationVersion\"\n+                dynamicfeatures: \"androidx.navigation:navigation-dynamic-features-fragment:$navigationVersion\",\n+                navtesting: \"androidx.navigation:navigation-testing:$navigationVersion\",\n+                fragmenttesting: \"androidx.fragment:fragment-testing:$fragmentVersion\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "118aeaa8afe8e4378904ede5ca47b9e218dd15a4"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODE2OTE4OnYy", "diffSide": "RIGHT", "path": "core/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzo0ODozMVrOGzb2yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzo0ODozMVrOGzb2yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU4Njk1NQ==", "bodyText": "Shouldn't this say androidTestImplementation? debugImplementation is an implementation for the debug build. If you need it in the main artifact (not the test artifact), I'd sort this up int othe implementation section, as opposed to the instrument test dependencies section, where it is now.", "url": "https://github.com/aws-amplify/amplify-android/pull/649#discussion_r456586955", "createdAt": "2020-07-17T17:48:31Z", "author": {"login": "jamesonwilliams"}, "path": "core/build.gradle", "diffHunk": "@@ -47,4 +47,25 @@ dependencies {\n     androidTestImplementation dependency.androidx.test.core\n     androidTestImplementation dependency.androidx.test.runner\n     androidTestImplementation dependency.androidx.test.junit\n+    androidTestImplementation dependency.androidx.test.espresso\n+    androidTestImplementation dependency.androidx.nav.navtesting\n+\n+    debugImplementation dependency.androidx.nav.fragmenttesting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "118aeaa8afe8e4378904ede5ca47b9e218dd15a4"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODE4MTExOnYy", "diffSide": "RIGHT", "path": "core/src/androidTest/java/com/amplifyframework/core/DevMenuMainViewInstrumentationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzo1MjowNVrOGzb9_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzo1MjowNVrOGzb9_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU4ODc5Nw==", "bodyText": "You can also try:\nandroid {\n\n  ...\n\n  testOptions {\n    animationsDisabled = true\n  }\n}\nto disable animations, and prevent the need for this sleep. (Sleeps in test code are brittle, since they're outside of the deterministic flow of the source code's logic.)\nIt would probably be appropriate, for amplify-android anyway, to cook that testOption right into the project-level build.gradle. I say this because, this is not a UI-centric project, so enablement of animations isn't the ethos of what this project needs to be testing. If it were a dedicated UI library, we probably would consider more refinement with that.", "url": "https://github.com/aws-amplify/amplify-android/pull/649#discussion_r456588797", "createdAt": "2020-07-17T17:52:05Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/androidTest/java/com/amplifyframework/core/DevMenuMainViewInstrumentationTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core;\n+\n+import androidx.annotation.RawRes;\n+import androidx.fragment.app.testing.FragmentScenario;\n+import androidx.navigation.NavDestination;\n+import androidx.navigation.Navigation;\n+import androidx.navigation.testing.TestNavHostController;\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.espresso.action.ViewActions;\n+import androidx.test.espresso.matcher.ViewMatchers;\n+\n+import com.amplifyframework.testutils.Sleep;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+\n+/**\n+ * Tests the navigation behavior for {@link DevMenuMainFragment}.\n+ */\n+public final class DevMenuMainViewInstrumentationTest {\n+    // Amount of time (in milliseconds) to wait before starting\n+    // a test, to allow any animations to complete.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "118aeaa8afe8e4378904ede5ca47b9e218dd15a4"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODE4NTYwOnYy", "diffSide": "RIGHT", "path": "core/src/androidTest/java/com/amplifyframework/core/DevMenuMainViewInstrumentationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzo1MzoxN1rOGzcAkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzo1MzoxN1rOGzcAkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU4OTQ1Ng==", "bodyText": "Passing thought: personally, I like to wrap on -> so I can see the action behavior all in one line,\nlike:\nsetSomeFunctionalBehavior(() ->\n    doTheStuff(withComplextParams, orWhatever, maybeItsALongLine));", "url": "https://github.com/aws-amplify/amplify-android/pull/649#discussion_r456589456", "createdAt": "2020-07-17T17:53:17Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/androidTest/java/com/amplifyframework/core/DevMenuMainViewInstrumentationTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core;\n+\n+import androidx.annotation.RawRes;\n+import androidx.fragment.app.testing.FragmentScenario;\n+import androidx.navigation.NavDestination;\n+import androidx.navigation.Navigation;\n+import androidx.navigation.testing.TestNavHostController;\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.espresso.action.ViewActions;\n+import androidx.test.espresso.matcher.ViewMatchers;\n+\n+import com.amplifyframework.testutils.Sleep;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+\n+/**\n+ * Tests the navigation behavior for {@link DevMenuMainFragment}.\n+ */\n+public final class DevMenuMainViewInstrumentationTest {\n+    // Amount of time (in milliseconds) to wait before starting\n+    // a test, to allow any animations to complete.\n+    private static final int START_TEST_DELAY_MS = 500;\n+    // A navigation host controller for testing.\n+    private TestNavHostController navHostController;\n+\n+    /**\n+     * Go to the main screen of the developer menu.\n+     */\n+    @Before\n+    public void resetView() {\n+        navHostController = new TestNavHostController(ApplicationProvider.getApplicationContext());\n+        navHostController.setGraph(R.navigation.dev_menu_nav_graph);\n+        FragmentScenario<DevMenuMainFragment> mainMenuScenario =\n+                FragmentScenario.launchInContainer(DevMenuMainFragment.class);\n+        mainMenuScenario.onFragment(fragment -> Navigation.setViewNavController(fragment.requireView(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "118aeaa8afe8e4378904ede5ca47b9e218dd15a4"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODE4OTA4OnYy", "diffSide": "RIGHT", "path": "core/src/androidTest/java/com/amplifyframework/core/DevMenuMainViewInstrumentationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzo1NDoyMlrOGzcCxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzo1NDoyMlrOGzcCxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU5MDAyMA==", "bodyText": "The predominant style in the repo is to use static imports for jUnit and Mockito utility code. That is, here, just assertEquals, assertFoo, assertBar, without the Assert class ref.", "url": "https://github.com/aws-amplify/amplify-android/pull/649#discussion_r456590020", "createdAt": "2020-07-17T17:54:22Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/androidTest/java/com/amplifyframework/core/DevMenuMainViewInstrumentationTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core;\n+\n+import androidx.annotation.RawRes;\n+import androidx.fragment.app.testing.FragmentScenario;\n+import androidx.navigation.NavDestination;\n+import androidx.navigation.Navigation;\n+import androidx.navigation.testing.TestNavHostController;\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.espresso.action.ViewActions;\n+import androidx.test.espresso.matcher.ViewMatchers;\n+\n+import com.amplifyframework.testutils.Sleep;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+\n+/**\n+ * Tests the navigation behavior for {@link DevMenuMainFragment}.\n+ */\n+public final class DevMenuMainViewInstrumentationTest {\n+    // Amount of time (in milliseconds) to wait before starting\n+    // a test, to allow any animations to complete.\n+    private static final int START_TEST_DELAY_MS = 500;\n+    // A navigation host controller for testing.\n+    private TestNavHostController navHostController;\n+\n+    /**\n+     * Go to the main screen of the developer menu.\n+     */\n+    @Before\n+    public void resetView() {\n+        navHostController = new TestNavHostController(ApplicationProvider.getApplicationContext());\n+        navHostController.setGraph(R.navigation.dev_menu_nav_graph);\n+        FragmentScenario<DevMenuMainFragment> mainMenuScenario =\n+                FragmentScenario.launchInContainer(DevMenuMainFragment.class);\n+        mainMenuScenario.onFragment(fragment -> Navigation.setViewNavController(fragment.requireView(),\n+                navHostController));\n+    }\n+\n+\n+    /**\n+     * Tests that the app is navigated to the environment information\n+     * screen when the view environment information button is pressed.\n+     */\n+    @Test\n+    public void testNavigationToEnvInfoScreen() {\n+        testNavigationOnButtonPress(R.id.env_button, R.id.environment_fragment);\n+    }\n+\n+    /**\n+     * Tests that the app is navigated to the device information\n+     * screen when the view device information button is pressed.\n+     */\n+    @Test\n+    public void testNavigationToDeviceInfoScreen() {\n+        testNavigationOnButtonPress(R.id.device_button, R.id.device_fragment);\n+    }\n+\n+    /**\n+     * Tests that the app is navigated to the logs screen when\n+     * the view logs button is pressed.\n+     */\n+    @Test\n+    public void testNavigationToLogsScreen() {\n+        testNavigationOnButtonPress(R.id.logs_button, R.id.logs_fragment);\n+    }\n+\n+    /**\n+     * Tests that the app is navigated to the file issue screen\n+     * when the file issue button is pressed.\n+     */\n+    @Test\n+    public void testNavigationToFileIssueScreen() {\n+        testNavigationOnButtonPress(R.id.file_issue_button, R.id.file_issue_fragment);\n+    }\n+\n+    /**\n+     * Test that the app is navigated to the destination with the given ID when\n+     * the button with the given ID is pressed.\n+     * @param buttonId ID of the button pressed\n+     * @param destinationId ID of the navigation destination\n+     */\n+    private void testNavigationOnButtonPress(@RawRes int buttonId, @RawRes int destinationId) {\n+        Sleep.milliseconds(START_TEST_DELAY_MS);\n+        onView(ViewMatchers.withId(buttonId)).perform(ViewActions.click());\n+        NavDestination curDestination = navHostController.getCurrentDestination();\n+        Assert.assertNotNull(curDestination);\n+        Assert.assertEquals(curDestination.getId(), destinationId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "118aeaa8afe8e4378904ede5ca47b9e218dd15a4"}, "originalPosition": 106}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1097, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}