{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4ODA2NTA5", "number": 680, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNTowOTo1MlrOEVCz2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNTowOTo1MlrOEVCz2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTAxNTk0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/storage/result/StorageTransferProgress.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNTowOTo1MlrOG7k5CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNTowOTo1MlrOG7k5CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEyMzU5Mg==", "bodyText": "Maybe add a check here to prevent a possible divide by zero exception?  Might be a good idea because the previous logic in AWSS3StorageUploadFileOperation.java did have a check like this.", "url": "https://github.com/aws-amplify/amplify-android/pull/680#discussion_r465123592", "createdAt": "2020-08-04T15:09:52Z", "author": {"login": "richardmcclellan"}, "path": "core/src/main/java/com/amplifyframework/storage/result/StorageTransferProgress.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.storage.result;\n+\n+import androidx.annotation.Nullable;\n+\n+/**\n+ * Represents the current amount of progress that has made during a storage transfer operation.\n+ */\n+public final class StorageTransferProgress {\n+    private final long currentBytes;\n+    private final long totalBytes;\n+\n+    /**\n+     * Creates a new StorageTransferProgress instance.\n+     * @param currentBytes The number of bytes that have been transferred so far\n+     * @param totalBytes The total number of bytes that are expected to transfer\n+     */\n+    public StorageTransferProgress(long currentBytes, long totalBytes) {\n+        this.currentBytes = currentBytes;\n+        this.totalBytes = totalBytes;\n+    }\n+\n+    /**\n+     * Gets the current number of bytes that have been transferred.\n+     * This is number greater than 0, and less than or equal to the value of\n+     * {@link #getTotalBytes()}. For example, if 5 bytes have been transferred,\n+     * and 10 bytes are expected to transfer, this value is 5.\n+     * @return The current number of bytes that have been transferred\n+     */\n+    public long getCurrentBytes() {\n+        return currentBytes;\n+    }\n+\n+    /**\n+     * Gets the total number of bytes that are expected to transfer. When this number\n+     * of bytes has transferred, the transfer is complete. This value is greater than or\n+     * equal to the value of {@link #getCurrentBytes()}.\n+     * @return The total number of bytes that are expected to transfer.\n+     */\n+    public long getTotalBytes() {\n+        return totalBytes;\n+    }\n+\n+    /**\n+     * Gets the fraction of the transfer that has been completed, so far. This is a value\n+     * greater than or equal to 0, and less than or equal to 1. When the value is 0, the transfer\n+     * has not started. When the value is 1, the transfer is complete. If 5 bytes have been transferred,\n+     * and 10 bytes are expected, this value is (5.0f/10.0f) = 0.5f.\n+     * @return Fraction of transfer that has been completed, a value between 0 and 1, inclusive.\n+     */\n+    public double getFractionCompleted() {\n+        return ((double) currentBytes) / totalBytes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10062758e1cd68e74e71d8e56346aa0d6ef28218"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1133, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}