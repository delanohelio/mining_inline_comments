{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1ODE5OTQ4", "number": 584, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMjozMjowNlrOEGVCDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzozMzo1NFrOEGcpjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDcxNTAwOnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/adapter/SQLPredicate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMjozMjowNlrOGlDiBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMjozMjowNlrOGlDiBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUwODM1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            //TODO: Need to somehow the the underlying model type to determine whether the\n          \n          \n            \n                            //TODO: Need to somehow get the underlying model type to determine whether the", "url": "https://github.com/aws-amplify/amplify-android/pull/584#discussion_r441508358", "createdAt": "2020-06-17T12:32:06Z", "author": {"login": "rjuliano"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/storage/sqlite/adapter/SQLPredicate.java", "diffHunk": "@@ -141,12 +141,25 @@ private StringBuilder parsePredicateOperation(QueryPredicateOperation<?> operati\n                         .append(\"?\");\n             case CONTAINS:\n                 ContainsQueryOperator containsOp = (ContainsQueryOperator) op;\n-                addBinding(containsOp.value());\n-                return builder.append(\"?\")\n+                //TODO: Need to somehow the the underlying model type to determine whether the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f35e0164992e1a4cd90b4737d6e8707121c8fe0c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTg4Njk1OnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/storage/sqlite/SQLPredicateTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzoxMjo0M1rOGlPRFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzoxMjo0M1rOGlPRFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwMDYzMQ==", "bodyText": "Please add the copyright header", "url": "https://github.com/aws-amplify/amplify-android/pull/584#discussion_r441700631", "createdAt": "2020-06-17T17:12:43Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/storage/sqlite/SQLPredicateTest.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.amplifyframework.datastore.storage.sqlite;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5befda55fee1d15b899ccd4f2d1f5f360c7c6527"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTk2MzAxOnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/storage/sqlite/SQLPredicateTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzozMzo1NFrOGlQB-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzozMzo1NFrOGlQB-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcxMzE0Ng==", "bodyText": "Can we get a more descriptive name for this helper method?", "url": "https://github.com/aws-amplify/amplify-android/pull/584#discussion_r441713146", "createdAt": "2020-06-17T17:33:54Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/storage/sqlite/SQLPredicateTest.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.amplifyframework.datastore.storage.sqlite;\n+\n+import com.amplifyframework.core.model.query.Where;\n+import com.amplifyframework.core.model.query.predicate.QueryPredicate;\n+import com.amplifyframework.core.model.query.predicate.QueryPredicateOperation;\n+import com.amplifyframework.datastore.DataStoreException;\n+import com.amplifyframework.datastore.storage.sqlite.adapter.SQLPredicate;\n+import com.amplifyframework.testmodels.ratingsblog.Blog;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.RobolectricTestRunner;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class SQLPredicateTest {\n+\n+    /**\n+     * Test contains in the context of a String field.\n+     * @throws DataStoreException\n+     */\n+    @Test\n+    public void testContainsForStringField() throws DataStoreException {\n+        QueryPredicate predicate = Where.matches(Blog.NAME.contains(\"something\")).getQueryPredicate();\n+        SQLPredicate sqlPredicate = new SQLPredicate(predicate);\n+        assertStringResults(sqlPredicate, \"name\");\n+    }\n+\n+    /**\n+     * Test contains in the context of a list.\n+     * @throws DataStoreException\n+     */\n+    @Test\n+    public void testContainsForStringList() throws DataStoreException {\n+        QueryPredicateOperation<String> predicate = Blog.TAGS.contains(\"something\");\n+        SQLPredicate sqlPredicate = new SQLPredicate(predicate);\n+        assertStringResults(sqlPredicate, \"tags\");\n+    }\n+\n+    private void assertStringResults(SQLPredicate sqlPredicate, String fieldName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5befda55fee1d15b899ccd4f2d1f5f360c7c6527"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1030, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}