{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NDI5NzIy", "number": 246, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzoyNzo1MVrODbDvpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoyMTowN1rODbEV6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Njk5NDkyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/analytics/AnalyticsPlugin.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzoyNzo1MVrOFiU_jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMjowMDo1M1rOFiXW8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUzOTg1Mw==", "bodyText": "Can this just be in CategoryTypeable directly instead of specifying it for each override?", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371539853", "createdAt": "2020-01-27T23:27:51Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/analytics/AnalyticsPlugin.java", "diffHunk": "@@ -25,9 +30,15 @@\n  * @param <E> The type of class returned by the plugin implementation to be used as an escape hatch\n  */\n public abstract class AnalyticsPlugin<E> implements AnalyticsCategoryBehavior, Plugin<E> {\n+    @NonNull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1NTkxOA==", "bodyText": "Also applies to a lot of inherited methods from Category.java and Plugin.java", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371555918", "createdAt": "2020-01-28T00:24:56Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/analytics/AnalyticsPlugin.java", "diffHunk": "@@ -25,9 +30,15 @@\n  * @param <E> The type of class returned by the plugin implementation to be used as an escape hatch\n  */\n public abstract class AnalyticsPlugin<E> implements AnalyticsCategoryBehavior, Plugin<E> {\n+    @NonNull", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUzOTg1Mw=="}, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3ODYxMA==", "bodyText": "(See comment below about Android Studio code inspections.)", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371578610", "createdAt": "2020-01-28T02:00:53Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/analytics/AnalyticsPlugin.java", "diffHunk": "@@ -25,9 +30,15 @@\n  * @param <E> The type of class returned by the plugin implementation to be used as an escape hatch\n  */\n public abstract class AnalyticsPlugin<E> implements AnalyticsCategoryBehavior, Plugin<E> {\n+    @NonNull", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUzOTg1Mw=="}, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Njk5ODgxOnYy", "diffSide": "RIGHT", "path": "aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzoyOToyN1rOFiVBuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMjowMDozNVrOFiXWuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0MDQwOA==", "bodyText": "Same thing as categorytype (i.e. specify @NonNull annotation inside interface rather than on each inherited method)", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371540408", "createdAt": "2020-01-27T23:29:27Z", "author": {"login": "raphkim"}, "path": "aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java", "diffHunk": "@@ -167,6 +159,7 @@ public void flushEvents() {\n     /**\n      * {@inheritDoc}\n      */\n+    @NonNull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3ODU1Mg==", "bodyText": "I don't know the convention around this actually. But Android Studio will suggest to put it on every @Override method as well as the base one. Adding this here makes a code inspection warning go away.", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371578552", "createdAt": "2020-01-28T02:00:35Z", "author": {"login": "jamesonwilliams"}, "path": "aws-analytics-pinpoint/src/main/java/com/amplifyframework/analytics/pinpoint/AmazonPinpointAnalyticsPlugin.java", "diffHunk": "@@ -167,6 +159,7 @@ public void flushEvents() {\n     /**\n      * {@inheritDoc}\n      */\n+    @NonNull", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0MDQwOA=="}, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzAwNjU1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/datastore/DataStorePlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzozMzoxNFrOFiVGVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzozMzoxNFrOFiVGVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0MTU5MA==", "bodyText": "oh yea, we had to change all the plugins to be abstract classes, but not sure why DataStorePlugin was still interface. Good catch", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371541590", "createdAt": "2020-01-27T23:33:14Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/datastore/DataStorePlugin.java", "diffHunk": "@@ -15,12 +15,28 @@\n \n package com.amplifyframework.datastore;\n \n+import android.content.Context;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.WorkerThread;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.core.category.CategoryType;\n import com.amplifyframework.core.plugin.Plugin;\n \n /**\n  * A plugin which implements the required behavior of the {@link DataStoreCategory}.\n  * @param <E> The class type of the escape hatch which a subclass shall\n  *            make available, to perform low-level implementation-specific operations.\n  */\n-public interface DataStorePlugin<E> extends DataStoreCategoryBehavior, Plugin<E> {\n+public abstract class DataStorePlugin<E> implements DataStoreCategoryBehavior, Plugin<E> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzAxMDkyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/datastore/DataStorePlugin.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzozNToyN1rOFiVJAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMjowMjo0MVrOFiXYNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0MjI3NQ==", "bodyText": "Shouldn't this be implemented in the actual plugin implementation? I see that you already have the implementation in AWSDataStorePlugin.java, so can we remove it from the abstract class?", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371542275", "createdAt": "2020-01-27T23:35:27Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/datastore/DataStorePlugin.java", "diffHunk": "@@ -15,12 +15,28 @@\n \n package com.amplifyframework.datastore;\n \n+import android.content.Context;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.WorkerThread;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.core.category.CategoryType;\n import com.amplifyframework.core.plugin.Plugin;\n \n /**\n  * A plugin which implements the required behavior of the {@link DataStoreCategory}.\n  * @param <E> The class type of the escape hatch which a subclass shall\n  *            make available, to perform low-level implementation-specific operations.\n  */\n-public interface DataStorePlugin<E> extends DataStoreCategoryBehavior, Plugin<E> {\n+public abstract class DataStorePlugin<E> implements DataStoreCategoryBehavior, Plugin<E> {\n+    @NonNull\n+    @Override\n+    public final CategoryType getCategoryType() {\n+        return CategoryType.DATASTORE;\n+    }\n+\n+    @WorkerThread\n+    @Override\n+    public void initialize(@NonNull Context context) throws AmplifyException {\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0NTEzMw==", "bodyText": "Oh now I see you have it on every category. I'm assuming that this is to make implementation of this \"optional\"?", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371545133", "createdAt": "2020-01-27T23:45:28Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/datastore/DataStorePlugin.java", "diffHunk": "@@ -15,12 +15,28 @@\n \n package com.amplifyframework.datastore;\n \n+import android.content.Context;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.WorkerThread;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.core.category.CategoryType;\n import com.amplifyframework.core.plugin.Plugin;\n \n /**\n  * A plugin which implements the required behavior of the {@link DataStoreCategory}.\n  * @param <E> The class type of the escape hatch which a subclass shall\n  *            make available, to perform low-level implementation-specific operations.\n  */\n-public interface DataStorePlugin<E> extends DataStoreCategoryBehavior, Plugin<E> {\n+public abstract class DataStorePlugin<E> implements DataStoreCategoryBehavior, Plugin<E> {\n+    @NonNull\n+    @Override\n+    public final CategoryType getCategoryType() {\n+        return CategoryType.DATASTORE;\n+    }\n+\n+    @WorkerThread\n+    @Override\n+    public void initialize(@NonNull Context context) throws AmplifyException {\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0MjI3NQ=="}, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3ODkzNQ==", "bodyText": "Exactly, yea - I wanted to cut down on boiler plate for the actual final plugin implementation. Plugins like our AndroidLoggingPlugin don't have any work to do in intitialize(), so they don't have to override this method.", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371578935", "createdAt": "2020-01-28T02:02:41Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/datastore/DataStorePlugin.java", "diffHunk": "@@ -15,12 +15,28 @@\n \n package com.amplifyframework.datastore;\n \n+import android.content.Context;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.WorkerThread;\n+\n+import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.core.category.CategoryType;\n import com.amplifyframework.core.plugin.Plugin;\n \n /**\n  * A plugin which implements the required behavior of the {@link DataStoreCategory}.\n  * @param <E> The class type of the escape hatch which a subclass shall\n  *            make available, to perform low-level implementation-specific operations.\n  */\n-public interface DataStorePlugin<E> extends DataStoreCategoryBehavior, Plugin<E> {\n+public abstract class DataStorePlugin<E> implements DataStoreCategoryBehavior, Plugin<E> {\n+    @NonNull\n+    @Override\n+    public final CategoryType getCategoryType() {\n+        return CategoryType.DATASTORE;\n+    }\n+\n+    @WorkerThread\n+    @Override\n+    public void initialize(@NonNull Context context) throws AmplifyException {\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0MjI3NQ=="}, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzAxOTAwOnYy", "diffSide": "RIGHT", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AWSDataStorePlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzozOTozMlrOFiVNug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMjowNDo0MlrOFiXZsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0MzQ4Mg==", "bodyText": "Is this advice still true now that we support terminate()?", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371543482", "createdAt": "2020-01-27T23:39:32Z", "author": {"login": "raphkim"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AWSDataStorePlugin.java", "diffHunk": "@@ -109,45 +103,46 @@ public void configure(\n         } catch (DataStoreException badConfigException) {\n             throw new DataStoreException(\n                 \"There was an issue configuring the plugin from the amplifyconfiguration.json\",\n-                    badConfigException,\n-                    \"Check the attached exception for more details and \" +\n+                badConfigException,\n+                \"Check the attached exception for more details and \" +\n                     \"be sure you are only calling Amplify.configure once\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3OTMxNA==", "bodyText": "I didn't add terminate() as part of this PR, yet, actually :-( That's still needed.", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371579314", "createdAt": "2020-01-28T02:04:42Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AWSDataStorePlugin.java", "diffHunk": "@@ -109,45 +103,46 @@ public void configure(\n         } catch (DataStoreException badConfigException) {\n             throw new DataStoreException(\n                 \"There was an issue configuring the plugin from the amplifyconfiguration.json\",\n-                    badConfigException,\n-                    \"Check the attached exception for more details and \" +\n+                badConfigException,\n+                \"Check the attached exception for more details and \" +\n                     \"be sure you are only calling Amplify.configure once\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0MzQ4Mg=="}, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA1NTQwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/category/CategoryInitializationResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzo1OTozOVrOFiVjxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMjowNjozOVrOFiXbOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0OTEyNw==", "bodyText": "Pedantic, but can we do either\n\nisSuccess() & isFailure(), or\nisSuccessful() & isFailed()\n\nfor consistent grammar lol", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371549127", "createdAt": "2020-01-27T23:59:39Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/core/category/CategoryInitializationResult.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.category;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.InitializationResult;\n+import com.amplifyframework.core.InitializationStatus;\n+import com.amplifyframework.util.Immutable;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+/**\n+ * A result of a category initialization.\n+ */\n+@SuppressWarnings({\"unused\", \"WeakerAccess\"})\n+public final class CategoryInitializationResult {\n+    private final InitializationStatus initializationStatus;\n+    private final Map<String, InitializationResult> pluginInitializationResults;\n+\n+    private CategoryInitializationResult(\n+            @NonNull InitializationStatus initializationStatus,\n+            @NonNull Map<String, InitializationResult> pluginInitializationResults) {\n+        this.initializationStatus = initializationStatus;\n+        this.pluginInitializationResults = pluginInitializationResults;\n+    }\n+\n+    /**\n+     * Creates a CategoryInitializationResult using the results from initializing a collection\n+     * of named plugins.\n+     * @param pluginResults The results of initialization for a collection of plugins\n+     * @return A category initialization result\n+     */\n+    @NonNull\n+    public static CategoryInitializationResult with(@NonNull Map<String, InitializationResult> pluginResults) {\n+        Objects.requireNonNull(pluginResults);\n+        InitializationStatus categoryStatus;\n+        if (anyFailed(pluginResults)) {\n+            categoryStatus = InitializationStatus.FAILED;\n+        } else {\n+            categoryStatus = InitializationStatus.SUCCEEDED;\n+        }\n+        return new CategoryInitializationResult(categoryStatus, pluginResults);\n+    }\n+\n+    private static boolean anyFailed(@NonNull Map<String, InitializationResult> pluginResults) {\n+        for (InitializationResult result : pluginResults.values()) {\n+            if (result.isFailure()) {\n+                return true;\n+            }\n+        }\n+\n+        return false;\n+    }\n+\n+    /**\n+     * Gets the initialization status of the category, e.g. {@link InitializationStatus#SUCCEEDED}.\n+     * @return The category's initialization status\n+     */\n+    @NonNull\n+    public InitializationStatus getInitializationStatus() {\n+        return initializationStatus;\n+    }\n+\n+    /**\n+     * Checks if the initialization is a success.\n+     * @return True if the category was initialized successfully.\n+     */\n+    public boolean isSuccessful() {\n+        return InitializationStatus.SUCCEEDED.equals(initializationStatus);\n+    }\n+\n+    /**\n+     * Checks if the category initialization failed to to a/an error(s).\n+     * @return True if category initialization failed\n+     */\n+    public boolean isFailure() {\n+        return InitializationStatus.FAILED.equals(initializationStatus);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3OTcwNg==", "bodyText": "Yes!! Good catch. Thanks. I'll update.", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371579706", "createdAt": "2020-01-28T02:06:39Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/category/CategoryInitializationResult.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core.category;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.amplifyframework.core.InitializationResult;\n+import com.amplifyframework.core.InitializationStatus;\n+import com.amplifyframework.util.Immutable;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+/**\n+ * A result of a category initialization.\n+ */\n+@SuppressWarnings({\"unused\", \"WeakerAccess\"})\n+public final class CategoryInitializationResult {\n+    private final InitializationStatus initializationStatus;\n+    private final Map<String, InitializationResult> pluginInitializationResults;\n+\n+    private CategoryInitializationResult(\n+            @NonNull InitializationStatus initializationStatus,\n+            @NonNull Map<String, InitializationResult> pluginInitializationResults) {\n+        this.initializationStatus = initializationStatus;\n+        this.pluginInitializationResults = pluginInitializationResults;\n+    }\n+\n+    /**\n+     * Creates a CategoryInitializationResult using the results from initializing a collection\n+     * of named plugins.\n+     * @param pluginResults The results of initialization for a collection of plugins\n+     * @return A category initialization result\n+     */\n+    @NonNull\n+    public static CategoryInitializationResult with(@NonNull Map<String, InitializationResult> pluginResults) {\n+        Objects.requireNonNull(pluginResults);\n+        InitializationStatus categoryStatus;\n+        if (anyFailed(pluginResults)) {\n+            categoryStatus = InitializationStatus.FAILED;\n+        } else {\n+            categoryStatus = InitializationStatus.SUCCEEDED;\n+        }\n+        return new CategoryInitializationResult(categoryStatus, pluginResults);\n+    }\n+\n+    private static boolean anyFailed(@NonNull Map<String, InitializationResult> pluginResults) {\n+        for (InitializationResult result : pluginResults.values()) {\n+            if (result.isFailure()) {\n+                return true;\n+            }\n+        }\n+\n+        return false;\n+    }\n+\n+    /**\n+     * Gets the initialization status of the category, e.g. {@link InitializationStatus#SUCCEEDED}.\n+     * @return The category's initialization status\n+     */\n+    @NonNull\n+    public InitializationStatus getInitializationStatus() {\n+        return initializationStatus;\n+    }\n+\n+    /**\n+     * Checks if the initialization is a success.\n+     * @return True if the category was initialized successfully.\n+     */\n+    public boolean isSuccessful() {\n+        return InitializationStatus.SUCCEEDED.equals(initializationStatus);\n+    }\n+\n+    /**\n+     * Checks if the category initialization failed to to a/an error(s).\n+     * @return True if category initialization failed\n+     */\n+    public boolean isFailure() {\n+        return InitializationStatus.FAILED.equals(initializationStatus);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0OTEyNw=="}, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA1ODYwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/Amplify.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowMToxNVrOFiVlvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMTo1ODozNFrOFiXVFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0OTYyOQ==", "bodyText": "<3", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371549629", "createdAt": "2020-01-28T00:01:15Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/core/Amplify.java", "diffHunk": "@@ -120,13 +127,30 @@ public static void configure(@NonNull final AmplifyConfiguration configuration,\n                     CategoryConfiguration categoryConfiguration =\n                         configuration.forCategoryType(category.getCategoryType());\n                     category.configure(categoryConfiguration, context);\n+                    beginInitialization(category, context);\n                 }\n             }\n \n             CONFIGURATION_LOCK.set(true);\n         }\n     }\n \n+    private static void beginInitialization(@NonNull Category<? extends Plugin<?>> category, @NonNull Context context) {\n+        INITIALIZATION_POOL.execute(() -> {\n+            HubChannel hubChannel = HubChannel.forCategoryType(category.getCategoryType());\n+            category.initialize(context, categoryInitializationResult -> {\n+                if (categoryInitializationResult.isSuccessful()) {\n+                    Hub.publish(hubChannel, HubEvent.create(InitializationStatus.SUCCEEDED.toString()));\n+                    return;\n+                }\n+                Hub.publish(hubChannel, HubEvent.create(\n+                    InitializationStatus.FAILED.toString(),\n+                    categoryInitializationResult.getPluginInitializationFailures()\n+                ));\n+            });\n+        });\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3ODEzNA==", "bodyText": "Haha", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371578134", "createdAt": "2020-01-28T01:58:34Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/Amplify.java", "diffHunk": "@@ -120,13 +127,30 @@ public static void configure(@NonNull final AmplifyConfiguration configuration,\n                     CategoryConfiguration categoryConfiguration =\n                         configuration.forCategoryType(category.getCategoryType());\n                     category.configure(categoryConfiguration, context);\n+                    beginInitialization(category, context);\n                 }\n             }\n \n             CONFIGURATION_LOCK.set(true);\n         }\n     }\n \n+    private static void beginInitialization(@NonNull Category<? extends Plugin<?>> category, @NonNull Context context) {\n+        INITIALIZATION_POOL.execute(() -> {\n+            HubChannel hubChannel = HubChannel.forCategoryType(category.getCategoryType());\n+            category.initialize(context, categoryInitializationResult -> {\n+                if (categoryInitializationResult.isSuccessful()) {\n+                    Hub.publish(hubChannel, HubEvent.create(InitializationStatus.SUCCEEDED.toString()));\n+                    return;\n+                }\n+                Hub.publish(hubChannel, HubEvent.create(\n+                    InitializationStatus.FAILED.toString(),\n+                    categoryInitializationResult.getPluginInitializationFailures()\n+                ));\n+            });\n+        });\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0OTYyOQ=="}, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA3MjgzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/InitializationResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDowOTowN1rOFiVuLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMjowODoyMFrOFiXcSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MTc4OA==", "bodyText": "same comment as the one in CategoryInitializationResult", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371551788", "createdAt": "2020-01-28T00:09:07Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/core/InitializationResult.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import java.util.Objects;\n+\n+/**\n+ * The result of a component's initialization.\n+ */\n+public final class InitializationResult {\n+    private final Throwable failure;\n+    private final InitializationStatus initializationStatus;\n+\n+    private InitializationResult(@NonNull InitializationStatus initializationStatus, @Nullable Throwable failure) {\n+        this.initializationStatus = initializationStatus;\n+        this.failure = failure;\n+    }\n+\n+    /**\n+     * Gets the initialization status, e.g. {@link InitializationStatus#SUCCEEDED}.\n+     * @return The initialization status\n+     */\n+    @SuppressWarnings(\"unused\")\n+    @NonNull\n+    public InitializationStatus getInitializationStatus() {\n+        return initializationStatus;\n+    }\n+\n+    /**\n+     * Gets the initialization failure, if present.\n+     * @return Initialization failure; null, if none occurred\n+     */\n+    @Nullable\n+    public Throwable getFailure() {\n+        return failure;\n+    }\n+\n+    /**\n+     * Constructs an initialization result that notes a failure occurred.\n+     * @param failure The failure that interrupted initialization\n+     * @return An initialization result\n+     */\n+    @NonNull\n+    public static InitializationResult failure(@NonNull Throwable failure) {\n+        Objects.requireNonNull(failure);\n+        return new InitializationResult(InitializationStatus.FAILED, failure);\n+    }\n+\n+    /**\n+     * Constructs an Initialization result that notes a success occurred.\n+     * @return A successful initialization result.\n+     */\n+    @NonNull\n+    public static InitializationResult success() {\n+        return new InitializationResult(InitializationStatus.SUCCEEDED, null);\n+    }\n+\n+    /**\n+     * Checks if the result is a success result.\n+     * @return True if the result is success, false otherwise\n+     */\n+    public boolean isSuccessful() {\n+        return InitializationStatus.SUCCEEDED.equals(initializationStatus);\n+    }\n+\n+    /**\n+     * Checks if the result is a failure.\n+     * @return True if the result is a failure.\n+     */\n+    public boolean isFailure() {\n+        return InitializationStatus.FAILED.equals(initializationStatus);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3OTk3OQ==", "bodyText": "Updating to the noun pair, success/failure.", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371579979", "createdAt": "2020-01-28T02:08:20Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/InitializationResult.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.core;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import java.util.Objects;\n+\n+/**\n+ * The result of a component's initialization.\n+ */\n+public final class InitializationResult {\n+    private final Throwable failure;\n+    private final InitializationStatus initializationStatus;\n+\n+    private InitializationResult(@NonNull InitializationStatus initializationStatus, @Nullable Throwable failure) {\n+        this.initializationStatus = initializationStatus;\n+        this.failure = failure;\n+    }\n+\n+    /**\n+     * Gets the initialization status, e.g. {@link InitializationStatus#SUCCEEDED}.\n+     * @return The initialization status\n+     */\n+    @SuppressWarnings(\"unused\")\n+    @NonNull\n+    public InitializationStatus getInitializationStatus() {\n+        return initializationStatus;\n+    }\n+\n+    /**\n+     * Gets the initialization failure, if present.\n+     * @return Initialization failure; null, if none occurred\n+     */\n+    @Nullable\n+    public Throwable getFailure() {\n+        return failure;\n+    }\n+\n+    /**\n+     * Constructs an initialization result that notes a failure occurred.\n+     * @param failure The failure that interrupted initialization\n+     * @return An initialization result\n+     */\n+    @NonNull\n+    public static InitializationResult failure(@NonNull Throwable failure) {\n+        Objects.requireNonNull(failure);\n+        return new InitializationResult(InitializationStatus.FAILED, failure);\n+    }\n+\n+    /**\n+     * Constructs an Initialization result that notes a success occurred.\n+     * @return A successful initialization result.\n+     */\n+    @NonNull\n+    public static InitializationResult success() {\n+        return new InitializationResult(InitializationStatus.SUCCEEDED, null);\n+    }\n+\n+    /**\n+     * Checks if the result is a success result.\n+     * @return True if the result is success, false otherwise\n+     */\n+    public boolean isSuccessful() {\n+        return InitializationStatus.SUCCEEDED.equals(initializationStatus);\n+    }\n+\n+    /**\n+     * Checks if the result is a failure.\n+     * @return True if the result is a failure.\n+     */\n+    public boolean isFailure() {\n+        return InitializationStatus.FAILED.equals(initializationStatus);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1MTc4OA=="}, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA4ODcwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/plugin/Plugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoxODo0M1rOFiV34Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMTo1ODoxOFrOFiXU1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1NDI3Mw==", "bodyText": "A plugin is an implementation of a category's behavior\n\nWell technically Plugin by itself is just an interface... It promises that it's configurable & that it always belongs to a certain category. But to be honest, I'm not sure how better this structure can be documented so I think this is fine", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371554273", "createdAt": "2020-01-28T00:18:43Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/core/plugin/Plugin.java", "diffHunk": "@@ -16,36 +16,67 @@\n package com.amplifyframework.core.plugin;\n \n import android.content.Context;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.annotation.WorkerThread;\n \n import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.core.Amplify;\n import com.amplifyframework.core.category.CategoryTypeable;\n \n import org.json.JSONObject;\n \n /**\n- * Interface that defines the contract that every plugin\n- * in Amplify System will adhere to.\n- * @param <E> The class type of the escape hatch used to circumvent the generic plugin APIs\n+ * A plugin is an implementation of a category's behavior. You can implement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3ODA3MA==", "bodyText": "Eh, yea - just now I tried to make it more technically accurate, I ended up with things like \"An implementation of a plugin is an implementation of ...\" which is confusing in-and-of-itself.", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371578070", "createdAt": "2020-01-28T01:58:18Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/plugin/Plugin.java", "diffHunk": "@@ -16,36 +16,67 @@\n package com.amplifyframework.core.plugin;\n \n import android.content.Context;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.annotation.WorkerThread;\n \n import com.amplifyframework.AmplifyException;\n+import com.amplifyframework.core.Amplify;\n import com.amplifyframework.core.category.CategoryTypeable;\n \n import org.json.JSONObject;\n \n /**\n- * Interface that defines the contract that every plugin\n- * in Amplify System will adhere to.\n- * @param <E> The class type of the escape hatch used to circumvent the generic plugin APIs\n+ * A plugin is an implementation of a category's behavior. You can implement", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1NDI3Mw=="}, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA4OTkxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/hub/AWSHubPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoxOToyOFrOFiV4lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMTozODo0N1rOFiXESw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1NDQ1NQ==", "bodyText": "hmmmmmm", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371554455", "createdAt": "2020-01-28T00:19:28Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/hub/AWSHubPlugin.java", "diffHunk": "@@ -116,22 +121,25 @@ public void unsubscribe(@NonNull SubscriptionToken subscriptionToken) {\n \n             // Now that we have a handle to the subscription, figure out which channel\n             final HubChannel channelToUpdate = subscriptionBeingEnded.getHubChannel();\n-            if (subscriptionsByChannel.containsKey(channelToUpdate)) {\n-                subscriptionsByChannel.get(channelToUpdate).remove(subscriptionBeingEnded);\n+            final Set<HubSubscription> channelSubscriptions = subscriptionsByChannel.get(channelToUpdate);\n+            if (channelSubscriptions != null) {\n+                channelSubscriptions.remove(subscriptionBeingEnded);\n             }\n         }\n     }\n \n+    @NonNull\n     @Override\n     public String getPluginKey() {\n         return \"awsHubPlugin\";\n     }\n \n     @Override\n-    public void configure(@NonNull JSONObject pluginConfiguration, Context context) {\n+    public void configure(@NonNull JSONObject pluginConfiguration, @NonNull Context context) {\n \n     }\n \n+    @NonNull\n     @Override\n     public Void getEscapeHatch() {\n         return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3MzgzNQ==", "bodyText": "Ah yes, this should say @Nullable, will update", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371573835", "createdAt": "2020-01-28T01:38:47Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/hub/AWSHubPlugin.java", "diffHunk": "@@ -116,22 +121,25 @@ public void unsubscribe(@NonNull SubscriptionToken subscriptionToken) {\n \n             // Now that we have a handle to the subscription, figure out which channel\n             final HubChannel channelToUpdate = subscriptionBeingEnded.getHubChannel();\n-            if (subscriptionsByChannel.containsKey(channelToUpdate)) {\n-                subscriptionsByChannel.get(channelToUpdate).remove(subscriptionBeingEnded);\n+            final Set<HubSubscription> channelSubscriptions = subscriptionsByChannel.get(channelToUpdate);\n+            if (channelSubscriptions != null) {\n+                channelSubscriptions.remove(subscriptionBeingEnded);\n             }\n         }\n     }\n \n+    @NonNull\n     @Override\n     public String getPluginKey() {\n         return \"awsHubPlugin\";\n     }\n \n     @Override\n-    public void configure(@NonNull JSONObject pluginConfiguration, Context context) {\n+    public void configure(@NonNull JSONObject pluginConfiguration, @NonNull Context context) {\n \n     }\n \n+    @NonNull\n     @Override\n     public Void getEscapeHatch() {\n         return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1NDQ1NQ=="}, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzA5Mjg5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/hub/HubCategory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoyMTowN1rOFiV6dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDoyMTowN1rOFiV6dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU1NDkzNQ==", "bodyText": "nice. I only found out that hub plugins are supposed to be available pre-configuration in that meeting, so I didn't account for that.", "url": "https://github.com/aws-amplify/amplify-android/pull/246#discussion_r371554935", "createdAt": "2020-01-28T00:21:07Z", "author": {"login": "raphkim"}, "path": "core/src/main/java/com/amplifyframework/hub/HubCategory.java", "diffHunk": "@@ -90,4 +98,12 @@ public CategoryType getCategoryType() {\n \n         return subscribe(channel, event -> true, transformingListener);\n     }\n+\n+    private HubPlugin<?> getHubPlugin() {\n+        if (!super.isConfigured() || super.getPlugins().isEmpty()) {\n+            return defaultPlugin;\n+        } else {\n+            return super.getSelectedPlugin();\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebac2aad6424c68640341d71a70138be38d24bc1"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1514, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}