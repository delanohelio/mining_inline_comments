{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMjYzNjY3", "number": 938, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzoyMTowOVrOE14qGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzoyMToyOVrOE14qXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0OTM4MjY0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/model/AuthRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzoyMTowOVrOHuacpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzoyMTowOVrOHuacpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQyOTg2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public AuthRule build() {\n          \n          \n            \n                    @NonNull\n          \n          \n            \n                    public AuthRule build() {", "url": "https://github.com/aws-amplify/amplify-android/pull/938#discussion_r518429862", "createdAt": "2020-11-05T23:21:09Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/AuthRule.java", "diffHunk": "@@ -161,4 +186,104 @@ public String toString() {\n                 \", operations=\" + operations + '\\'' +\n                 '}';\n     }\n+\n+    /**\n+     * Builder class for {@link AuthRule}.\n+     */\n+    public static final class Builder {\n+        private AuthStrategy authStrategy;\n+        private String ownerField;\n+        private String identityClaim;\n+        private String groupClaim;\n+        private List<String> groups;\n+        private String groupsField;\n+        private List<ModelOperation> operations = new ArrayList<>();\n+\n+        /**\n+         * Sets the auth strategy of this rule.\n+         * @param authStrategy AuthStrategy is the type of auth strategy to use.\n+         * @return the association model with given name\n+         */\n+        @NonNull\n+        public AuthRule.Builder authStrategy(@NonNull AuthStrategy authStrategy) {\n+            this.authStrategy = Objects.requireNonNull(authStrategy);\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the owner field of this rule.\n+         * @param ownerField OwnerField is the owner authorization.\n+         * @return the association model with give target name\n+         */\n+        @NonNull\n+        public AuthRule.Builder ownerField(@NonNull String ownerField) {\n+            this.ownerField = Objects.requireNonNull(ownerField);\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the identity claim of this rule.\n+         * @param identityClaim IdentityClaim specifies a custom claim.\n+         * @return the association model with given associated name\n+         */\n+        @NonNull\n+        public AuthRule.Builder identityClaim(@NonNull String identityClaim) {\n+            this.identityClaim = Objects.requireNonNull(identityClaim);\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the group claim of this rule.\n+         * @param groupClaim GroupClaim specified a custom claim.\n+         * @return the association model with given associated type\n+         */\n+        @NonNull\n+        public AuthRule.Builder groupClaim(@NonNull String groupClaim) {\n+            this.groupClaim = Objects.requireNonNull(groupClaim);\n+            return this;\n+        }\n+        \n+        /**\n+         * Sets the groups this rule applies to.\n+         * @param groups Groups is static group authorization.\n+         * @return the association model with given associated type\n+         */\n+        @NonNull\n+        public AuthRule.Builder groups(@NonNull List<String> groups) {\n+            this.groups = Objects.requireNonNull(groups);\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the groupsField of this rule.\n+         * @param groupsField GroupsField is for dynamic group authorization.\n+         * @return the association model with given associated type\n+         */\n+        @NonNull\n+        public AuthRule.Builder groupsField(@NonNull String groupsField) {\n+            this.groupsField = Objects.requireNonNull(groupsField);\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the operations allowed for this rule.\n+         * @param operations Operations specifies which {@link ModelOperation}s are protected by this {@link AuthRule}.\n+         * @return the association model with given associated type\n+         */\n+        @NonNull\n+        public AuthRule.Builder operations(@NonNull List<ModelOperation> operations) {\n+            this.operations = Objects.requireNonNull(operations);\n+            return this;\n+        }\n+\n+        /**\n+         * Builds an immutable AuthRule instance using\n+         * builder object.\n+         * @return AuthRule instance\n+         */\n+        public AuthRule build() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55b4fbc735818a76d85ca81a82d2335f125bc217"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0OTM4MzM0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/com/amplifyframework/core/model/AuthRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzoyMToyOVrOHuadGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzoyMToyOVrOHuadGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQyOTk3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static AuthRule.Builder builder() {\n          \n          \n            \n                @NonNull\n          \n          \n            \n                public static AuthRule.Builder builder() {", "url": "https://github.com/aws-amplify/amplify-android/pull/938#discussion_r518429976", "createdAt": "2020-11-05T23:21:29Z", "author": {"login": "jamesonwilliams"}, "path": "core/src/main/java/com/amplifyframework/core/model/AuthRule.java", "diffHunk": "@@ -53,6 +56,28 @@ public AuthRule(com.amplifyframework.core.model.annotations.AuthRule authRule) {\n         this.operations = Arrays.asList(authRule.operations());\n     }\n \n+    /**\n+     * Construct the AuthRule object from the builder.\n+     * For internal use only.\n+     */\n+    private AuthRule(@NonNull AuthRule.Builder builder) {\n+        this.authStrategy = builder.authStrategy;\n+        this.ownerField = builder.ownerField;\n+        this.identityClaim = builder.identityClaim;\n+        this.groupClaim = builder.groupClaim;\n+        this.groups = builder.groups;\n+        this.groupsField = builder.groupsField;\n+        this.operations = builder.operations;\n+    }\n+\n+    /**\n+     * Return the builder object.\n+     * @return the builder object.\n+     */\n+    public static AuthRule.Builder builder() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55b4fbc735818a76d85ca81a82d2335f125bc217"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1006, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}