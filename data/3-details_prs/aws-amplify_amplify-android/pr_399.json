{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4ODI3ODQ3", "number": 399, "title": "Implement online entity detection", "bodyText": "Issue #, if available:\nDescription of changes:\n\nAdd configuration for identifyEntities\nImplement entities detection + entity match detection\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-04-25T01:35:09Z", "url": "https://github.com/aws-amplify/amplify-android/pull/399", "merged": true, "mergeCommit": {"oid": "abf0da5f375dca39fbeb3f399977969e9d8a0000"}, "closed": true, "closedAt": "2020-04-30T09:22:20Z", "author": {"login": "raphkim"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABca4cHBAH2gAyNDA4ODI3ODQ3Ojk0MGY5MWQ4OWQ2MGNiYjM2ZGE2ZjE3MTM1YWYxYTNkN2U4YzgxMGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccnQ6eAH2gAyNDA4ODI3ODQ3OmNkOTQyZDljNDg5N2ExNWM0YTFlZjI0NTM1MDYwYjZlZTQ1NGQzYjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "940f91d89d60cbb36da6f17135af1a3d7e8c810d", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/940f91d89d60cbb36da6f17135af1a3d7e8c810d", "committedDate": "2020-04-24T21:33:30Z", "message": "Implement entities detection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c489607ad9b30b6954364010b8b2430e9c1db6fb", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/c489607ad9b30b6954364010b8b2430e9c1db6fb", "committedDate": "2020-04-24T21:33:30Z", "message": "Replace enum strings with service enums"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16dd58100133b63f82cfa1cbf2a34d431aca7a9f", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/16dd58100133b63f82cfa1cbf2a34d431aca7a9f", "committedDate": "2020-04-25T01:30:11Z", "message": "Fix up + add instrumentation tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDcwOTEw", "url": "https://github.com/aws-amplify/amplify-android/pull/399#pullrequestreview-400470910", "createdAt": "2020-04-26T07:42:50Z", "commit": {"oid": "16dd58100133b63f82cfa1cbf2a34d431aca7a9f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNzo0Mjo1MFrOGMAe2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNzo1NzowMVrOGMApXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI0Mzk5NA==", "bodyText": "nit: extra line", "url": "https://github.com/aws-amplify/amplify-android/pull/399#discussion_r415243994", "createdAt": "2020-04-26T07:42:50Z", "author": {"login": "jamesonwilliams"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSRekognitionService.java", "diffHunk": "@@ -114,6 +133,29 @@ void recognizeCelebrities(\n         }\n     }\n \n+    void detectEntities(\n+            @NonNull Image image,\n+            @NonNull Consumer<IdentifyResult> onSuccess,\n+            @NonNull Consumer<PredictionsException> onError\n+    ) {\n+        final IdentifyEntitiesConfiguration config;\n+        try {\n+            config = pluginConfiguration.getIdentifyEntitiesConfiguration();\n+            if (config.isGeneralEntityDetection()) {\n+                List<EntityDetails> entities = detectEntities(image);\n+                onSuccess.accept(IdentifyEntitiesResult.fromEntityDetails(entities));\n+            } else {\n+                int maxEntities = config.getMaxEntities();\n+                String collectionId = config.getCollectionId();\n+                List<EntityMatch> matches = detectEntityMatches(image, maxEntities, collectionId);\n+                onSuccess.accept(IdentifyEntityMatchesResult.fromEntityMatches(matches));\n+            }\n+        } catch (PredictionsException exception) {\n+            onError.accept(exception);\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16dd58100133b63f82cfa1cbf2a34d431aca7a9f"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI0NDQ0Mg==", "bodyText": "Naming: isCelebritryDection...() (with is[A-Z] that Kotlin likes.)", "url": "https://github.com/aws-amplify/amplify-android/pull/399#discussion_r415244442", "createdAt": "2020-04-26T07:45:14Z", "author": {"login": "jamesonwilliams"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/configuration/IdentifyEntitiesConfiguration.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.configuration;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.predictions.aws.NetworkPolicy;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+/**\n+ * Configures the behavior for text interpretation.\n+ */\n+public final class IdentifyEntitiesConfiguration {\n+\n+    private static final int MAX_VALID_ENTITIES = 50;\n+\n+    private final int maxEntities;\n+    private final String collectionId;\n+    private final boolean generalEntityDetection;\n+    private final boolean celebrityDetectionEnabled;\n+    private final NetworkPolicy networkPolicy;\n+\n+    private IdentifyEntitiesConfiguration(\n+            int maxEntities,\n+            String collectionId,\n+            boolean generalEntityDetection,\n+            boolean celebrityDetectionEnabled,\n+            NetworkPolicy networkPolicy\n+    ) {\n+        this.maxEntities = maxEntities;\n+        this.collectionId = collectionId;\n+        this.generalEntityDetection = generalEntityDetection;\n+        this.celebrityDetectionEnabled = celebrityDetectionEnabled;\n+        this.networkPolicy = networkPolicy;\n+    }\n+\n+    /**\n+     * Construct an instance of {@link IdentifyEntitiesConfiguration} from\n+     * plugin configuration JSON object.\n+     * @param configurationJson the plugin configuration\n+     * @return the configuration for entities detection\n+     * @throws JSONException if identify configuration is malformed\n+     */\n+    @Nullable\n+    public static IdentifyEntitiesConfiguration fromJson(@NonNull JSONObject configurationJson) throws JSONException {\n+        if (!configurationJson.has(\"identifyEntities\")) {\n+            return null;\n+        }\n+\n+        // Required fields\n+        JSONObject identifyEntitiesJson = configurationJson.getJSONObject(\"identifyEntities\");\n+        String celebEnabledString = identifyEntitiesJson.getString(\"celebrityDetectionEnabled\");\n+        String networkPolicyString = identifyEntitiesJson.getString(\"defaultNetworkPolicy\");\n+\n+        boolean celebEnabled = Boolean.parseBoolean(celebEnabledString);\n+        NetworkPolicy networkPolicy = NetworkPolicy.fromKey(networkPolicyString);\n+\n+        // Optional fields\n+        int maxEntities;\n+        boolean generalEntity;\n+        String collectionId;\n+        String maxEntitiesString;\n+        try {\n+            maxEntitiesString = identifyEntitiesJson.getString(\"maxEntities\");\n+            collectionId = identifyEntitiesJson.getString(\"collectionId\");\n+            maxEntities = Integer.parseInt(maxEntitiesString);\n+            generalEntity = maxEntities < 1 || maxEntities > MAX_VALID_ENTITIES;\n+        } catch (JSONException | IllegalArgumentException exception) {\n+            maxEntities = 0;\n+            collectionId = \"\";\n+            generalEntity = true;\n+        }\n+\n+        return new IdentifyEntitiesConfiguration(maxEntities, collectionId,\n+                generalEntity, celebEnabled, networkPolicy);\n+    }\n+\n+    /**\n+     * Gets the max number of entities to detect per image.\n+     * @return the max number of detected entities\n+     */\n+    public int getMaxEntities() {\n+        return maxEntities;\n+    }\n+\n+    /**\n+     * Gets the collection ID to match entities against.\n+     * @return the collection ID to find matching entities in\n+     */\n+    @NonNull\n+    public String getCollectionId() {\n+        return collectionId;\n+    }\n+\n+    /**\n+     * Returns true if configured to detect entities. False if\n+     * scoped to detect matching entities from collection.\n+     * @return true if configured for general entity detection\n+     */\n+    public boolean isGeneralEntityDetection() {\n+        return generalEntityDetection;\n+    }\n+\n+    /**\n+     * Returns true if configured to allow celebrity detection.\n+     * @return true if configured to allow celebrity detection\n+     */\n+    public boolean celebrityDetectionEnabled() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16dd58100133b63f82cfa1cbf2a34d431aca7a9f"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI0NTMwMg==", "bodyText": "So if this throws, you'lll end up in the catch block, and then maxEntities will be 0, and generalEntity will be true. Is that the control flow you were going for, here? Seems like there's a lot of branches here, depending on which lines throws, and what the defaults will get set to.\nActually, I guess if maxEntitiesString line throws, then the outcome here is even weirder, with maxEntitiesString as null and collectionId as \"\".\ngeneralEntity is very hard to trace. It starts as false (default for a boolean.) It might get set to true/false on L83. But. But if there is an error before L83, it gets reset to true in the catch.", "url": "https://github.com/aws-amplify/amplify-android/pull/399#discussion_r415245302", "createdAt": "2020-04-26T07:49:44Z", "author": {"login": "jamesonwilliams"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/configuration/IdentifyEntitiesConfiguration.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws.configuration;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.amplifyframework.predictions.aws.NetworkPolicy;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+/**\n+ * Configures the behavior for text interpretation.\n+ */\n+public final class IdentifyEntitiesConfiguration {\n+\n+    private static final int MAX_VALID_ENTITIES = 50;\n+\n+    private final int maxEntities;\n+    private final String collectionId;\n+    private final boolean generalEntityDetection;\n+    private final boolean celebrityDetectionEnabled;\n+    private final NetworkPolicy networkPolicy;\n+\n+    private IdentifyEntitiesConfiguration(\n+            int maxEntities,\n+            String collectionId,\n+            boolean generalEntityDetection,\n+            boolean celebrityDetectionEnabled,\n+            NetworkPolicy networkPolicy\n+    ) {\n+        this.maxEntities = maxEntities;\n+        this.collectionId = collectionId;\n+        this.generalEntityDetection = generalEntityDetection;\n+        this.celebrityDetectionEnabled = celebrityDetectionEnabled;\n+        this.networkPolicy = networkPolicy;\n+    }\n+\n+    /**\n+     * Construct an instance of {@link IdentifyEntitiesConfiguration} from\n+     * plugin configuration JSON object.\n+     * @param configurationJson the plugin configuration\n+     * @return the configuration for entities detection\n+     * @throws JSONException if identify configuration is malformed\n+     */\n+    @Nullable\n+    public static IdentifyEntitiesConfiguration fromJson(@NonNull JSONObject configurationJson) throws JSONException {\n+        if (!configurationJson.has(\"identifyEntities\")) {\n+            return null;\n+        }\n+\n+        // Required fields\n+        JSONObject identifyEntitiesJson = configurationJson.getJSONObject(\"identifyEntities\");\n+        String celebEnabledString = identifyEntitiesJson.getString(\"celebrityDetectionEnabled\");\n+        String networkPolicyString = identifyEntitiesJson.getString(\"defaultNetworkPolicy\");\n+\n+        boolean celebEnabled = Boolean.parseBoolean(celebEnabledString);\n+        NetworkPolicy networkPolicy = NetworkPolicy.fromKey(networkPolicyString);\n+\n+        // Optional fields\n+        int maxEntities;\n+        boolean generalEntity;\n+        String collectionId;\n+        String maxEntitiesString;\n+        try {\n+            maxEntitiesString = identifyEntitiesJson.getString(\"maxEntities\");\n+            collectionId = identifyEntitiesJson.getString(\"collectionId\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16dd58100133b63f82cfa1cbf2a34d431aca7a9f"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI0NjI3OQ==", "bodyText": "Just use:\nArrays.astList(\n    new Foo<>(\"asdf\"),\n    new Foo<>(\"asdfeee\"),\n    new Foo<>(\"sdfgsdfgr\")\n)\n\nAlmost as good as Java 9 List.of(), or Kotlin listOf() :-D", "url": "https://github.com/aws-amplify/amplify-android/pull/399#discussion_r415246279", "createdAt": "2020-04-26T07:55:15Z", "author": {"login": "jamesonwilliams"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/adapter/IdentifyResultTransformers.java", "diffHunk": "@@ -108,4 +123,50 @@ public static Pose fromRekognitionPose(@NonNull com.amazonaws.services.rekogniti\n \n         return amplifyLandmarks;\n     }\n+\n+    /**\n+     * Gets all the binary features from AWS Rekognition's face\n+     * details and compiles them into a single list.\n+     * @param face the Rekognition face detail object\n+     * @return the list of Amplify {@link BinaryFeature}\n+     */\n+    public static List<BinaryFeature> fromFaceDetail(FaceDetail face) {\n+        List<BinaryFeature> features = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16dd58100133b63f82cfa1cbf2a34d431aca7a9f"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI0NjY4NQ==", "bodyText": "Hm. How come?", "url": "https://github.com/aws-amplify/amplify-android/pull/399#discussion_r415246685", "createdAt": "2020-04-26T07:57:01Z", "author": {"login": "jamesonwilliams"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/NetworkPolicy.java", "diffHunk": "@@ -22,12 +22,6 @@\n  * perform a Predictions operation.\n  */\n public enum NetworkPolicy {\n-    /**\n-     * Only use cloud resources to perform online Predictions\n-     * operation.\n-     */\n-    ONLINE(\"online\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16dd58100133b63f82cfa1cbf2a34d431aca7a9f"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "561bc6b3264f545b3dcebf84d647dab73510db15", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/561bc6b3264f545b3dcebf84d647dab73510db15", "committedDate": "2020-04-26T16:00:54Z", "message": "Apply suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0eae7dff6ae9fd7ac888bd540bf9e121d7ee0c86", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/0eae7dff6ae9fd7ac888bd540bf9e121d7ee0c86", "committedDate": "2020-04-29T18:49:46Z", "message": "Minor variable name clarification"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMTIxMjU0", "url": "https://github.com/aws-amplify/amplify-android/pull/399#pullrequestreview-403121254", "createdAt": "2020-04-30T00:03:55Z", "commit": {"oid": "0eae7dff6ae9fd7ac888bd540bf9e121d7ee0c86"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDowMzo1NVrOGOVRaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDoxMDoxN1rOGOVZPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4MTc2OQ==", "bodyText": "Does Rekognition store \"ALL\" as a labeled constant anywhere, that you could use instead?", "url": "https://github.com/aws-amplify/amplify-android/pull/399#discussion_r417681769", "createdAt": "2020-04-30T00:03:55Z", "author": {"login": "jamesonwilliams"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/service/AWSRekognitionService.java", "diffHunk": "@@ -226,6 +267,99 @@ void recognizeCelebrities(\n         return celebrities;\n     }\n \n+    private List<EntityDetails> detectEntities(Image image) throws PredictionsException {\n+        DetectFacesRequest request = new DetectFacesRequest()\n+                .withImage(image)\n+                .withAttributes(\"ALL\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eae7dff6ae9fd7ac888bd540bf9e121d7ee0c86"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4MjY1NQ==", "bodyText": "Does Rekognition have labeled constants somewhere for like \"Beard\" ,  etc., that you could use instead of hard-coding the string?", "url": "https://github.com/aws-amplify/amplify-android/pull/399#discussion_r417682655", "createdAt": "2020-04-30T00:06:35Z", "author": {"login": "jamesonwilliams"}, "path": "aws-predictions/src/main/java/com/amplifyframework/predictions/aws/adapter/IdentifyResultTransformers.java", "diffHunk": "@@ -108,4 +124,50 @@ public static Pose fromRekognitionPose(@NonNull com.amazonaws.services.rekogniti\n \n         return amplifyLandmarks;\n     }\n+\n+    /**\n+     * Gets all the binary features from AWS Rekognition's face\n+     * details and compiles them into a single list.\n+     * @param face the Rekognition face detail object\n+     * @return the list of Amplify {@link BinaryFeature}\n+     */\n+    public static List<BinaryFeature> fromFaceDetail(FaceDetail face) {\n+        return Arrays.asList(\n+                BinaryFeature.builder()\n+                        .type(\"Beard\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eae7dff6ae9fd7ac888bd540bf9e121d7ee0c86"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4Mzc3Mw==", "bodyText": "Wasn't there a getPredominantSentiment() or something like that? Should we provide an API for this, getPredominantEmotion() or something?\nThe thing about test code is that it tends to look like what a customer will do. If the customer just wants to know \"Is Jeff Bezos happy?\" (Insert joke here...)\n(... back from joke) what about like FeatureAssert.assertMatches(EmotionType.HAPPY, entity.getPredominantEmotion())? // Returns the one with most confidence?", "url": "https://github.com/aws-amplify/amplify-android/pull/399#discussion_r417683773", "createdAt": "2020-04-30T00:10:17Z", "author": {"login": "jamesonwilliams"}, "path": "aws-predictions/src/androidTest/java/com/amplifyframework/predictions/aws/AWSPredictionsIdentifyEntitiesTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.predictions.aws;\n+\n+import android.content.Context;\n+import android.graphics.Bitmap;\n+\n+import com.amplifyframework.predictions.PredictionsCategory;\n+import com.amplifyframework.predictions.aws.test.R;\n+import com.amplifyframework.predictions.models.EmotionType;\n+import com.amplifyframework.predictions.models.EntityDetails;\n+import com.amplifyframework.predictions.models.GenderBinaryType;\n+import com.amplifyframework.predictions.models.IdentifyActionType;\n+import com.amplifyframework.predictions.result.IdentifyEntitiesResult;\n+import com.amplifyframework.testutils.Assets;\n+import com.amplifyframework.testutils.FeatureAssert;\n+import com.amplifyframework.testutils.sync.SynchronousMobileClient;\n+import com.amplifyframework.testutils.sync.SynchronousPredictions;\n+import com.amplifyframework.util.CollectionUtils;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.Collections;\n+\n+import static androidx.test.core.app.ApplicationProvider.getApplicationContext;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Tests that Predictions identify delivers a non-null\n+ * entity detection result for valid input.\n+ */\n+public final class AWSPredictionsIdentifyEntitiesTest {\n+\n+    private static final IdentifyActionType TYPE = IdentifyActionType.DETECT_ENTITIES;\n+\n+    private SynchronousPredictions predictions;\n+\n+    /**\n+     * Configure Predictions category before each test.\n+     * @throws Exception if mobile client initialization fails\n+     */\n+    @Before\n+    public void setUp() throws Exception {\n+        Context context = getApplicationContext();\n+\n+        // Set up Auth\n+        SynchronousMobileClient.instance().initialize();\n+\n+        // Delegate to Predictions category\n+        PredictionsCategory asyncDelegate =\n+                TestPredictionsCategory.create(context, R.raw.amplifyconfiguration);\n+        predictions = SynchronousPredictions.delegatingTo(asyncDelegate);\n+    }\n+\n+    /**\n+     * Assert general entity detection works.\n+     * @throws Exception if prediction fails\n+     */\n+    @Test\n+    @SuppressWarnings(\"MagicNumber\") // Jeff Bezos' current age\n+    public void testIdentifyEntities() throws Exception {\n+        final Bitmap image = Assets.readAsBitmap(\"jeff_bezos.jpg\");\n+\n+        // Identify the entity inside given image and assert non-null result.\n+        IdentifyEntitiesResult result = (IdentifyEntitiesResult) predictions.identify(TYPE, image);\n+        assertNotNull(result);\n+\n+        // Assert that at least one entity is detected\n+        assertFalse(CollectionUtils.isNullOrEmpty(result.getEntities()));\n+        EntityDetails entity = result.getEntities().get(0);\n+\n+        // Assert features from detected entity\n+        FeatureAssert.assertMatches(GenderBinaryType.MALE, entity.getGender());\n+        FeatureAssert.assertMatches(EmotionType.HAPPY, Collections.max(entity.getEmotions()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eae7dff6ae9fd7ac888bd540bf9e121d7ee0c86"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba37a3eda72cf5ef5a7897704e1a76803234c0c0", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/ba37a3eda72cf5ef5a7897704e1a76803234c0c0", "committedDate": "2020-04-30T06:40:09Z", "message": "Minor fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd942d9c4897a15c4a1ef24535060b6ee454d3b5", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/cd942d9c4897a15c4a1ef24535060b6ee454d3b5", "committedDate": "2020-04-30T06:40:44Z", "message": "Merge branch 'master' of https://github.com/aws-amplify/amplify-android into identify-aws-entities"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2728, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}