{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1MDU0NDg0", "number": 1072, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMjozMzozMFrOFIx21w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwODoyMjo1NVrOFJH7Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NzQ5NzgzOnYy", "diffSide": "RIGHT", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/utils/RestRequestFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMjozMzozMFrOIK5ioA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMjozMzozMFrOIK5ioA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI5OTQyNA==", "bodyText": "This is an unrelated bugfix. Since AWS always operates on HTTP(S) ports, we never exploited this. Still, I'm unsure how our existing MockWebServer tests were ever to function. But the new AWSApiOperationTest s certainly did not work without this fix.", "url": "https://github.com/aws-amplify/amplify-android/pull/1072#discussion_r548299424", "createdAt": "2020-12-23T22:33:30Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/main/java/com/amplifyframework/api/aws/utils/RestRequestFactory.java", "diffHunk": "@@ -58,6 +58,7 @@ public static URL createURL(\n         HttpUrl.Builder builder = new HttpUrl.Builder()\n             .scheme(url.getProtocol())\n             .host(url.getHost())\n+            .port(url.getPort())", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTExMzE4OnYy", "diffSide": "RIGHT", "path": "aws-api/src/test/java/com/amplifyframework/api/aws/operation/AWSRestOperationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwODoyMjo1NVrOILaB_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwODoyMjo1NVrOILaB_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgzMTc0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void responseEmittedIfOperationWhenOperationSucceeds() throws ApiException {\n          \n          \n            \n                public void responseEmittedWhenOperationSucceeds() throws ApiException {", "url": "https://github.com/aws-amplify/amplify-android/pull/1072#discussion_r548831741", "createdAt": "2020-12-25T08:22:55Z", "author": {"login": "jamesonwilliams"}, "path": "aws-api/src/test/java/com/amplifyframework/api/aws/operation/AWSRestOperationTest.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amplifyframework.api.aws.operation;\n+\n+import com.amplifyframework.api.ApiException;\n+import com.amplifyframework.api.rest.HttpMethod;\n+import com.amplifyframework.api.rest.RestOperationRequest;\n+import com.amplifyframework.api.rest.RestResponse;\n+import com.amplifyframework.testutils.Await;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.util.concurrent.Callable;\n+\n+import okhttp3.HttpUrl;\n+import okhttp3.OkHttpClient;\n+import okhttp3.mockwebserver.MockResponse;\n+import okhttp3.mockwebserver.MockWebServer;\n+\n+import static java.util.Collections.emptyMap;\n+import static org.junit.Assert.assertThrows;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Tests the {@link AWSRestOperation}.\n+ */\n+public final class AWSRestOperationTest {\n+    private MockWebServer server;\n+    private HttpUrl baseUrl;\n+    private OkHttpClient client;\n+\n+    /**\n+     * Sets up a mock web server to serve fake responses.\n+     * @throws IOException while starting the mock web server\n+     * @throws JSONException on failure to arrange response JSON\n+     */\n+    @Before\n+    public void setup() throws IOException, JSONException {\n+        server = new MockWebServer();\n+        server.start(8080);\n+        baseUrl = server.url(\"/\");\n+\n+        MockResponse response = new MockResponse()\n+            .setResponseCode(200)\n+            .setBody(new JSONObject()\n+                .put(\"message\", \"thanks!\")\n+                .toString()\n+            );\n+        server.enqueue(response);\n+\n+        client = new OkHttpClient();\n+    }\n+\n+    /**\n+     * Stop the {@link MockWebServer} that was started in {@link #setup()}.\n+     * @throws IOException On failure to shutdown the MockWebServer\n+     */\n+    @After\n+    public void cleanup() throws IOException {\n+        server.shutdown();\n+    }\n+\n+    /**\n+     * Tests the happy path, wherein the server returns a response, the\n+     * operation hasn't been canceled, and we get a {@link RestResponse}\n+     * at the end of it.\n+     * @throws ApiException\n+     *         A possible outcome of the operation. This is not\n+     *         expected, and would constitute a test failure.\n+     */\n+    @Test\n+    public void responseEmittedIfOperationWhenOperationSucceeds() throws ApiException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8c9af9c364f9e91aee591950c99e2d5e551c2a"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 871, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}