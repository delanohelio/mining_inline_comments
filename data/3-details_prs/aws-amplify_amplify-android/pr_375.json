{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMTE5NDM4", "number": 375, "title": "[testutils] Prevent deadlocks in Latch and Await", "bodyText": "Await.java: if Await.result(...) is called from thread A, and its method\nfires callbacks on that same thread A, they may never be invoked. This\nis because the CountDownLatch is sleeping the thread A. To address this\nsituation, ensure that the ResultErrorEmitter function always run on a\ndifferent (new) thread.\nLatch.java: InterruptedExceptionwas being gobbled. But, this needs to be\nraised to crash the thread. Otherwise, the thread can hang.\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-04-11T01:16:54Z", "url": "https://github.com/aws-amplify/amplify-android/pull/375", "merged": true, "mergeCommit": {"oid": "c3f51ec86c6b16931e5c24f19752b076281e2cc2"}, "closed": true, "closedAt": "2020-04-13T08:04:53Z", "author": {"login": "jamesonwilliams"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWbSRwgH2gAyNDAyMTE5NDM4OmJmMzRlYTcxZjBjOTNkOWRmMGE3ZmE5MDRhMjg1MmMyZDcwMDFhMmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWg8sGAFqTM5MTc0NTgyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bf34ea71f0c93d9df0a7fa904a2852c2d7001a2c", "author": {"user": {"login": "jamesonwilliams", "name": "Jameson Williams"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/bf34ea71f0c93d9df0a7fa904a2852c2d7001a2c", "committedDate": "2020-04-11T01:19:49Z", "message": "[testutils] Prevent deadlocks in Latch and Await\n\nAwait: if Await.result() is called from thread A, and its method\nfires callbacks on that same thread A, they may never be invoked. This\nis because the CountDownLatch is sleeping the thread A. To address this\nsituation, ensure that the ResultErrorEmitter function always run on a\ndifferent (new) thread.\n\nLatch: InterruptedException was being gobbled. But, this needs to be\nraised to crash the thread. Otherwise, the thread can hang."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "bf34ea71f0c93d9df0a7fa904a2852c2d7001a2c", "author": {"user": {"login": "jamesonwilliams", "name": "Jameson Williams"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/bf34ea71f0c93d9df0a7fa904a2852c2d7001a2c", "committedDate": "2020-04-11T01:19:49Z", "message": "[testutils] Prevent deadlocks in Latch and Await\n\nAwait: if Await.result() is called from thread A, and its method\nfires callbacks on that same thread A, they may never be invoked. This\nis because the CountDownLatch is sleeping the thread A. To address this\nsituation, ensure that the ResultErrorEmitter function always run on a\ndifferent (new) thread.\n\nLatch: InterruptedException was being gobbled. But, this needs to be\nraised to crash the thread. Otherwise, the thread can hang."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzQ0Nzc5", "url": "https://github.com/aws-amplify/amplify-android/pull/375#pullrequestreview-391744779", "createdAt": "2020-04-11T07:38:27Z", "commit": {"oid": "bf34ea71f0c93d9df0a7fa904a2852c2d7001a2c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzozODoyN1rOGELNIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzo0MjowOFrOGELOZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMTA3Mg==", "bodyText": "is there any reason why you want these threads to persist? I feel like all threads should be stopped if the test suite that started it crashes due to a certain error that is unrelated to this thread.", "url": "https://github.com/aws-amplify/amplify-android/pull/375#discussion_r407031072", "createdAt": "2020-04-11T07:38:27Z", "author": {"login": "raphkim"}, "path": "testutils/src/main/java/com/amplifyframework/testutils/Await.java", "diffHunk": "@@ -134,28 +134,37 @@ private Await() {}\n             @NonNull ResultErrorEmitter<R, E> resultErrorEmitter,\n             @NonNull AtomicReference<R> resultContainer,\n             @NonNull AtomicReference<E> errorContainer) {\n-\n-        CountDownLatch latch = new CountDownLatch(1);\n-\n-        resultErrorEmitter.emitTo(\n-            result -> {\n-                resultContainer.set(result);\n-                latch.countDown();\n-            }, error -> {\n-                errorContainer.set(error);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        final AtomicReference<Throwable> unexpectedErrorContainer = new AtomicReference<>();\n+        final Thread thread = new Thread(() -> {\n+            try {\n+                resultErrorEmitter.emitTo(\n+                    result -> {\n+                        resultContainer.set(result);\n+                        latch.countDown();\n+                    }, error -> {\n+                        errorContainer.set(error);\n+                        latch.countDown();\n+                    }\n+                );\n+            } catch (Throwable unexpectedFailure) {\n+                unexpectedErrorContainer.set(unexpectedFailure);\n                 latch.countDown();\n             }\n-        );\n+        });\n+        thread.setDaemon(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf34ea71f0c93d9df0a7fa904a2852c2d7001a2c"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMTM5OA==", "bodyText": "would anything ever get thrown directly to this thread?", "url": "https://github.com/aws-amplify/amplify-android/pull/375#discussion_r407031398", "createdAt": "2020-04-11T07:42:08Z", "author": {"login": "raphkim"}, "path": "testutils/src/main/java/com/amplifyframework/testutils/Await.java", "diffHunk": "@@ -134,28 +134,37 @@ private Await() {}\n             @NonNull ResultErrorEmitter<R, E> resultErrorEmitter,\n             @NonNull AtomicReference<R> resultContainer,\n             @NonNull AtomicReference<E> errorContainer) {\n-\n-        CountDownLatch latch = new CountDownLatch(1);\n-\n-        resultErrorEmitter.emitTo(\n-            result -> {\n-                resultContainer.set(result);\n-                latch.countDown();\n-            }, error -> {\n-                errorContainer.set(error);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        final AtomicReference<Throwable> unexpectedErrorContainer = new AtomicReference<>();\n+        final Thread thread = new Thread(() -> {\n+            try {\n+                resultErrorEmitter.emitTo(\n+                    result -> {\n+                        resultContainer.set(result);\n+                        latch.countDown();\n+                    }, error -> {\n+                        errorContainer.set(error);\n+                        latch.countDown();\n+                    }\n+                );\n+            } catch (Throwable unexpectedFailure) {\n+                unexpectedErrorContainer.set(unexpectedFailure);\n                 latch.countDown();\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf34ea71f0c93d9df0a7fa904a2852c2d7001a2c"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzQ1ODI5", "url": "https://github.com/aws-amplify/amplify-android/pull/375#pullrequestreview-391745829", "createdAt": "2020-04-11T07:55:40Z", "commit": {"oid": "bf34ea71f0c93d9df0a7fa904a2852c2d7001a2c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2696, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}