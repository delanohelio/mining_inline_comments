{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNjkwMzEx", "number": 227, "title": "[DataStore] Refactor in-memory storage adapter", "bodyText": "Description of changes:\nIn-memory storage adapter's current implementation does not behave as it should (e.g. it does not update/overwrite existing models).\n\nRefactored it to store models in a HashMap for better performance\n\nReverted this change to not mess up data hydration test\n\n\nDistinguished update and insert\nInvoke error on conditional check failure\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-01-08T22:48:56Z", "url": "https://github.com/aws-amplify/amplify-android/pull/227", "merged": true, "mergeCommit": {"oid": "f396764e0755ea267bb03e56d0a56ee5a9ee5d95"}, "closed": true, "closedAt": "2020-01-09T00:13:33Z", "author": {"login": "raphkim"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4ctadAH2gAyMzYwNjkwMzExOjIxNDM3OTY2MmU3NDMwZjJhZTM1MDgyZGNmNDc2N2ExMjY0Y2RhZjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4eKSygFqTM0MDIxNTcxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "214379662e7430f2ae35082dcf4767a1264cdaf2", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/214379662e7430f2ae35082dcf4767a1264cdaf2", "committedDate": "2020-01-08T22:01:38Z", "message": "Refactor in-memory storage adapter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a888221d77168ae8ee39a7f7b90f453486d689f", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/3a888221d77168ae8ee39a7f7b90f453486d689f", "committedDate": "2020-01-08T22:46:27Z", "message": "Revert to list"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMjA2MDQw", "url": "https://github.com/aws-amplify/amplify-android/pull/227#pullrequestreview-340206040", "createdAt": "2020-01-08T23:14:26Z", "commit": {"oid": "3a888221d77168ae8ee39a7f7b90f453486d689f"}, "state": "DISMISSED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMzoxNDoyN1rOFbmvNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMzoxODowMFrOFbmzLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ5MDU1MA==", "bodyText": "Maybe, instead, \"Verify that there is a model in the datastore that matches the provided predicate.\" ?", "url": "https://github.com/aws-amplify/amplify-android/pull/227#discussion_r364490550", "createdAt": "2020-01-08T23:14:27Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/storage/InMemoryStorageAdapter.java", "diffHunk": "@@ -81,21 +81,36 @@ public void initialize(\n     public <T extends Model> void save(\n             @NonNull final T item,\n             @NonNull final StorageItemChange.Initiator initiator,\n-            @NonNull final QueryPredicate predicate,\n+            @Nullable final QueryPredicate predicate,\n             @NonNull final Consumer<StorageItemChange.Record> onSuccess,\n             @NonNull final Consumer<DataStoreException> onError\n     ) {\n-        items.add(item);\n-        StorageItemChange.Record save = StorageItemChange.<T>builder()\n-                .item(item)\n-                .itemClass((Class<T>) item.getClass())\n-                .type(StorageItemChange.Type.SAVE)\n-                .predicate(predicate)\n-                .initiator(initiator)\n-                .build()\n-                .toRecord(storageItemChangeConverter);\n-        changeRecordStream.onNext(save);\n-        onSuccess.accept(save);\n+        final int index = indexOf(item);\n+        if (index > -1) {\n+            // Update\n+            Model savedItem = items.get(index);\n+            if (predicate == null || predicate.evaluate(savedItem)) {\n+                items.remove(index);\n+                save(item, initiator, predicate, onSuccess, onError);\n+                return;\n+            }\n+            onError.accept(new DataStoreException(\n+                    \"Conditional check failed.\",\n+                    \"Verify the saved models.\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a888221d77168ae8ee39a7f7b90f453486d689f"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ5MDg3Nw==", "bodyText": "You can cut out this inner body, and make it a helper method called update(..), perhaps? This will help keep the line length of the save(...) method down. However, if they re-use tons of the same params, it might end up being too minor of a savings.", "url": "https://github.com/aws-amplify/amplify-android/pull/227#discussion_r364490877", "createdAt": "2020-01-08T23:15:37Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/storage/InMemoryStorageAdapter.java", "diffHunk": "@@ -81,21 +81,36 @@ public void initialize(\n     public <T extends Model> void save(\n             @NonNull final T item,\n             @NonNull final StorageItemChange.Initiator initiator,\n-            @NonNull final QueryPredicate predicate,\n+            @Nullable final QueryPredicate predicate,\n             @NonNull final Consumer<StorageItemChange.Record> onSuccess,\n             @NonNull final Consumer<DataStoreException> onError\n     ) {\n-        items.add(item);\n-        StorageItemChange.Record save = StorageItemChange.<T>builder()\n-                .item(item)\n-                .itemClass((Class<T>) item.getClass())\n-                .type(StorageItemChange.Type.SAVE)\n-                .predicate(predicate)\n-                .initiator(initiator)\n-                .build()\n-                .toRecord(storageItemChangeConverter);\n-        changeRecordStream.onNext(save);\n-        onSuccess.accept(save);\n+        final int index = indexOf(item);\n+        if (index > -1) {\n+            // Update", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a888221d77168ae8ee39a7f7b90f453486d689f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ5MTE0OQ==", "bodyText": "Same as above, consider breaking this stuff out into a helper method called create. The semantics would become like \"A save is either an update, or a create, depending on whether or not index is non-zero.\"\n} else {\n  create(...);\n}", "url": "https://github.com/aws-amplify/amplify-android/pull/227#discussion_r364491149", "createdAt": "2020-01-08T23:16:37Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/storage/InMemoryStorageAdapter.java", "diffHunk": "@@ -81,21 +81,36 @@ public void initialize(\n     public <T extends Model> void save(\n             @NonNull final T item,\n             @NonNull final StorageItemChange.Initiator initiator,\n-            @NonNull final QueryPredicate predicate,\n+            @Nullable final QueryPredicate predicate,\n             @NonNull final Consumer<StorageItemChange.Record> onSuccess,\n             @NonNull final Consumer<DataStoreException> onError\n     ) {\n-        items.add(item);\n-        StorageItemChange.Record save = StorageItemChange.<T>builder()\n-                .item(item)\n-                .itemClass((Class<T>) item.getClass())\n-                .type(StorageItemChange.Type.SAVE)\n-                .predicate(predicate)\n-                .initiator(initiator)\n-                .build()\n-                .toRecord(storageItemChangeConverter);\n-        changeRecordStream.onNext(save);\n-        onSuccess.accept(save);\n+        final int index = indexOf(item);\n+        if (index > -1) {\n+            // Update\n+            Model savedItem = items.get(index);\n+            if (predicate == null || predicate.evaluate(savedItem)) {\n+                items.remove(index);\n+                save(item, initiator, predicate, onSuccess, onError);\n+                return;\n+            }\n+            onError.accept(new DataStoreException(\n+                    \"Conditional check failed.\",\n+                    \"Verify the saved models.\"));\n+        } else {\n+            // Insert", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a888221d77168ae8ee39a7f7b90f453486d689f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ5MTU2Ng==", "bodyText": "You could invert this expression, and put the error handling in the body.\nThen, do your happy path back -4 indentation to the left.\ne.g.\nif (unlikeBadThing) {\n    announce(\"Hey no fair...\");\n    return;\n}\n// otherwise\nperformBusiness();\nasUsual();\netc();", "url": "https://github.com/aws-amplify/amplify-android/pull/227#discussion_r364491566", "createdAt": "2020-01-08T23:18:00Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/storage/InMemoryStorageAdapter.java", "diffHunk": "@@ -144,22 +159,23 @@ public void initialize(\n             @NonNull final Consumer<StorageItemChange.Record> onSuccess,\n             @NonNull final Consumer<DataStoreException> onError\n     ) {\n-        for (Model savedItem : items) {\n-            if (savedItem.getId().equals(item.getId())\n-                    && (predicate == null || predicate.evaluate(item))) {\n-                items.remove(item);\n-                StorageItemChange.Record deletion = StorageItemChange.<T>builder()\n-                        .item((T) savedItem)\n-                        .itemClass((Class<T>) savedItem.getClass())\n-                        .type(StorageItemChange.Type.DELETE)\n-                        .predicate(predicate)\n-                        .initiator(initiator)\n-                        .build()\n-                        .toRecord(storageItemChangeConverter);\n-                changeRecordStream.onNext(deletion);\n-                onSuccess.accept(deletion);\n-                return;\n-            }\n+        final int index = indexOf(item);\n+        if (index > -1 && (predicate == null || predicate.evaluate(item))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a888221d77168ae8ee39a7f7b90f453486d689f"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57f4de60dea81f97f7b78e866fe2a2576adc8ab3", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/57f4de60dea81f97f7b78e866fe2a2576adc8ab3", "committedDate": "2020-01-08T23:33:43Z", "message": "Apply suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6fdecdb202bcb01315aa2e64981966b4df2e664", "author": {"user": {"login": "raphkim", "name": "Raphael Kim"}}, "url": "https://github.com/aws-amplify/amplify-android/commit/a6fdecdb202bcb01315aa2e64981966b4df2e664", "committedDate": "2020-01-08T23:38:18Z", "message": "Minor fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMjE1NzEx", "url": "https://github.com/aws-amplify/amplify-android/pull/227#pullrequestreview-340215711", "createdAt": "2020-01-08T23:42:49Z", "commit": {"oid": "57f4de60dea81f97f7b78e866fe2a2576adc8ab3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMzo0Mjo0OVrOFbnOfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMzo0Mjo0OVrOFbnOfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ5ODU1OA==", "bodyText": "I think you need a return; here, too, afteryou fire onError.accept(...).", "url": "https://github.com/aws-amplify/amplify-android/pull/227#discussion_r364498558", "createdAt": "2020-01-08T23:42:49Z", "author": {"login": "jamesonwilliams"}, "path": "aws-datastore/src/test/java/com/amplifyframework/datastore/storage/InMemoryStorageAdapter.java", "diffHunk": "@@ -160,23 +160,30 @@ public void initialize(\n             @NonNull final Consumer<DataStoreException> onError\n     ) {\n         final int index = indexOf(item);\n-        if (index > -1 && (predicate == null || predicate.evaluate(item))) {\n-            Model savedItem = items.remove(index);\n-            StorageItemChange.Record deletion = StorageItemChange.<T>builder()\n-                    .item((T) savedItem)\n-                    .itemClass((Class<T>) savedItem.getClass())\n-                    .type(StorageItemChange.Type.DELETE)\n-                    .predicate(predicate)\n-                    .initiator(initiator)\n-                    .build()\n-                    .toRecord(storageItemChangeConverter);\n-            changeRecordStream.onNext(deletion);\n-            onSuccess.accept(deletion);\n-        } else {\n+        if (index < 0) {\n             onError.accept(new DataStoreException(\n-                    \"Item does not exist or conditional check failed.\",\n-                    \"Verify the saved models.\"));\n+                    \"This item was not found in the datastore: \" + item.toString(),\n+                    \"Use save() function to create models to store.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57f4de60dea81f97f7b78e866fe2a2576adc8ab3"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2791, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}