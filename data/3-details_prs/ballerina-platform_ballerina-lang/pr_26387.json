{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NzY0NDk5", "number": 26387, "title": "Revamp Auto Completion Engine on top of the Semantic API", "bodyText": "Purpose\n\nWith this, revamp the auto-completion engine to work on top of the new semantic data model and the semantic API.\n\nFixes #26046\nApproach\n\nIntroduced new utilities and changed the processing logic to depend on the new semantic model.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-10-16T11:05:25Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26387", "merged": true, "mergeCommit": {"oid": "a95f726552b7700d2268f3212dab34f301f80d26"}, "closed": true, "closedAt": "2020-10-19T09:52:16Z", "author": {"login": "nadeeshaan"}, "timelineItems": {"totalCount": 42, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTEoRKABqjM4ODU5MDAyNzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUA1wNAFqTUxMTU3OTgwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "124ae3a634263ff3c202e9b34728a21ac0cfe886", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/124ae3a634263ff3c202e9b34728a21ac0cfe886", "committedDate": "2020-10-16T11:23:06Z", "message": "enable completion tests"}, "afterCommit": {"oid": "735c8a57c65c708c616f4db59f2990910f200ca4", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/735c8a57c65c708c616f4db59f2990910f200ca4", "committedDate": "2020-10-16T11:24:57Z", "message": "enable completion tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMTI5OTI0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26387#pullrequestreview-511129924", "createdAt": "2020-10-18T10:25:36Z", "commit": {"oid": "7eb43be914f90e5a34687561544dbeac700a0945"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxMDoyNTozNlrOHjlzxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxMToxMjo1NlrOHjmyzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA4MTY2OA==", "bodyText": "Are we still depending on BLang AST ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26387#discussion_r507081668", "createdAt": "2020-10-18T10:25:36Z", "author": {"login": "rasika"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/EnvironmentResolver.java", "diffHunk": "@@ -156,19 +189,19 @@\n \n /**\n  * Visitor to lookup symbols based on the location.\n- * \n+ *\n  * @since 2.0.0\n  */\n public class EnvironmentResolver extends BLangNodeVisitor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7eb43be914f90e5a34687561544dbeac700a0945"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA4OTYyMQ==", "bodyText": "Please check formatting here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26387#discussion_r507089621", "createdAt": "2020-10-18T10:45:59Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ErrorTypeParamsNodeContext.java", "diffHunk": "@@ -58,22 +60,26 @@ public ErrorTypeParamsNodeContext() {\n          */\n         NonTerminalNode nodeAtCursor = context.get(CompletionKeys.NODE_AT_CURSOR_KEY);\n \n-        Predicate<Scope.ScopeEntry> predicate = scopeEntry -> {\n-            BSymbol symbol = scopeEntry.symbol;\n-            return symbol instanceof BTypeSymbol\n-                    && (symbol.type.getKind() == TypeKind.MAP || symbol.type.getKind() == TypeKind.RECORD);\n+        Predicate<Symbol> predicate = symbol -> {\n+            if (symbol.kind() != SymbolKind.TYPE) {\n+                return false;\n+            }\n+            BallerinaTypeDescriptor typeDesc = ((TypeSymbol) symbol).typeDescriptor();\n+            return (typeDesc.kind() == TypeDescKind.MAP || typeDesc.kind() == TypeDescKind.RECORD);\n         };\n-        List<Scope.ScopeEntry> mappingTypes;\n+        List<Symbol> mappingTypes;\n         if (this.onQualifiedNameIdentifier(context, nodeAtCursor)) {\n-            mappingTypes = QNameReferenceUtil.getModuleContent(context, (QualifiedNameReferenceNode) nodeAtCursor,\n-                    predicate.and(scopeEntry -> (scopeEntry.symbol.flags & Flags.PUBLIC) == Flags.PUBLIC));\n+            mappingTypes= QNameReferenceUtil.getModuleContent(context,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7eb43be914f90e5a34687561544dbeac700a0945"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA5NTAzNQ==", "bodyText": "findAny() will add some randomness into selection criteria even though we expect only one matching symbol. Shall we use findFirst() for the sake of consistent in the event of multiple results.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26387#discussion_r507095035", "createdAt": "2020-10-18T11:02:35Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ImplicitNewExpressionNodeContext.java", "diffHunk": "@@ -84,47 +83,47 @@ public ImplicitNewExpressionNodeContext() {\n                 return Optional.empty();\n         }\n \n-        Scope.ScopeEntry scopeEntry = null;\n-        List<Scope.ScopeEntry> visibleSymbols = new ArrayList<>(context.get(CommonKeys.VISIBLE_SYMBOLS_KEY));\n-            if (this.onQualifiedNameIdentifier(context, typeDescriptor)) {\n+        Optional<Symbol> nameReferenceSymbol = Optional.empty();\n+        List<Symbol> visibleSymbols = new ArrayList<>(context.get(CommonKeys.VISIBLE_SYMBOLS_KEY));\n+        if (this.onQualifiedNameIdentifier(context, typeDescriptor)) {\n             QualifiedNameReferenceNode nameReferenceNode = (QualifiedNameReferenceNode) typeDescriptor;\n \n-            Optional<Scope.ScopeEntry> pkgSymbol = CommonUtil.packageSymbolFromAlias(context,\n+            Optional<ModuleSymbol> pkgSymbol = CommonUtil.searchModuleForAlias(context,\n                     QNameReferenceUtil.getAlias(nameReferenceNode));\n-            if (!pkgSymbol.isPresent()) {\n+            if (pkgSymbol.isEmpty()) {\n                 return Optional.empty();\n             }\n-            scopeEntry = ((BPackageSymbol) pkgSymbol.get().symbol).scope.entries.entrySet().stream()\n-                    .filter(entry -> entry.getKey().value.equals(nameReferenceNode.identifier().text()))\n-                    .map(Map.Entry::getValue)\n-                    .findAny()\n-                    .orElse(null);\n+            nameReferenceSymbol = pkgSymbol.get().allSymbols().stream()\n+                    .filter(symbol -> symbol.name().equals(nameReferenceNode.identifier().text()))\n+                    .findAny();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7eb43be914f90e5a34687561544dbeac700a0945"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA5NTIwMQ==", "bodyText": "findAny() will add some randomness into selection criteria even though we expect only one matching symbol. Shall we use findFirst() for the sake of consistent in the event of multiple results.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26387#discussion_r507095201", "createdAt": "2020-10-18T11:03:19Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ImplicitNewExpressionNodeContext.java", "diffHunk": "@@ -84,47 +83,47 @@ public ImplicitNewExpressionNodeContext() {\n                 return Optional.empty();\n         }\n \n-        Scope.ScopeEntry scopeEntry = null;\n-        List<Scope.ScopeEntry> visibleSymbols = new ArrayList<>(context.get(CommonKeys.VISIBLE_SYMBOLS_KEY));\n-            if (this.onQualifiedNameIdentifier(context, typeDescriptor)) {\n+        Optional<Symbol> nameReferenceSymbol = Optional.empty();\n+        List<Symbol> visibleSymbols = new ArrayList<>(context.get(CommonKeys.VISIBLE_SYMBOLS_KEY));\n+        if (this.onQualifiedNameIdentifier(context, typeDescriptor)) {\n             QualifiedNameReferenceNode nameReferenceNode = (QualifiedNameReferenceNode) typeDescriptor;\n \n-            Optional<Scope.ScopeEntry> pkgSymbol = CommonUtil.packageSymbolFromAlias(context,\n+            Optional<ModuleSymbol> pkgSymbol = CommonUtil.searchModuleForAlias(context,\n                     QNameReferenceUtil.getAlias(nameReferenceNode));\n-            if (!pkgSymbol.isPresent()) {\n+            if (pkgSymbol.isEmpty()) {\n                 return Optional.empty();\n             }\n-            scopeEntry = ((BPackageSymbol) pkgSymbol.get().symbol).scope.entries.entrySet().stream()\n-                    .filter(entry -> entry.getKey().value.equals(nameReferenceNode.identifier().text()))\n-                    .map(Map.Entry::getValue)\n-                    .findAny()\n-                    .orElse(null);\n+            nameReferenceSymbol = pkgSymbol.get().allSymbols().stream()\n+                    .filter(symbol -> symbol.name().equals(nameReferenceNode.identifier().text()))\n+                    .findAny();\n         } else if (typeDescriptor.kind() == SyntaxKind.SIMPLE_NAME_REFERENCE) {\n             SimpleNameReferenceNode nameReferenceNode = (SimpleNameReferenceNode) typeDescriptor;\n-            scopeEntry = visibleSymbols.stream()\n-                    .filter(entry -> entry.symbol.name.value.equals(nameReferenceNode.name().text()))\n-                    .findAny()\n-                    .orElse(null);\n+            nameReferenceSymbol = visibleSymbols.stream()\n+                    .filter(symbol -> symbol.name().equals(nameReferenceNode.name().text()))\n+                    .findAny();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7eb43be914f90e5a34687561544dbeac700a0945"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA5NjQ5MQ==", "bodyText": "Shall we use Map interface here? Map<ModuleID, List<AnnotationSymbol>> typeAnnotations = new HashMap<>()", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26387#discussion_r507096491", "createdAt": "2020-10-18T11:08:16Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/LSAnnotationCache.java", "diffHunk": "@@ -54,26 +57,27 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(LSPackageCache.class);\n \n-    private static HashMap<PackageID, List<BAnnotationSymbol>> typeAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> classAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> objectAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> functionAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> objectMethodAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> resourceAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> parameterAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> returnAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> serviceAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> listenerAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> annotationAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> externalAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> varAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> constAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> workerAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> fieldAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> recordFieldAnnotations = new HashMap<>();\n-    private static HashMap<PackageID, List<BAnnotationSymbol>> objectFieldAnnotations = new HashMap<>();\n+    private static final HashMap<ModuleID, List<AnnotationSymbol>> typeAnnotations = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7eb43be914f90e5a34687561544dbeac700a0945"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA5NjY1OQ==", "bodyText": "Shall we use Map interface here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26387#discussion_r507096659", "createdAt": "2020-10-18T11:08:50Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/LSAnnotationCache.java", "diffHunk": "@@ -184,13 +152,13 @@ private static void addAttachment(BAnnotationSymbol bAnnotationSymbol,\n             case RETURN_TYPE_DESCRIPTOR:\n                 return returnAnnotations;\n             case OBJECT_FIELD:\n-                HashMap<PackageID, List<BAnnotationSymbol>> objFieldAnnotations = new HashMap<>();\n+                HashMap<ModuleID, List<AnnotationSymbol>> objFieldAnnotations = new HashMap<>();\n                 objFieldAnnotations.putAll(fieldAnnotations);\n                 objFieldAnnotations.putAll(objectFieldAnnotations);\n                 return objFieldAnnotations;\n             case RECORD_FIELD:\n             case RECORD_FIELD_WITH_DEFAULT_VALUE:\n-                HashMap<PackageID, List<BAnnotationSymbol>> recFieldAnnotations = new HashMap<>();\n+                HashMap<ModuleID, List<AnnotationSymbol>> recFieldAnnotations = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7eb43be914f90e5a34687561544dbeac700a0945"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA5NzI3Mg==", "bodyText": "Shall we use List interface here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26387#discussion_r507097272", "createdAt": "2020-10-18T11:11:08Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ReceiveActionNodeContext.java", "diffHunk": "@@ -46,13 +46,11 @@ public ReceiveActionNodeContext() {\n     @Override\n     public List<LSCompletionItem> getCompletions(LSContext context, ReceiveActionNode node)\n             throws LSCompletionException {\n-        // TODO: Following logic can be generalized\n-        ArrayList<Scope.ScopeEntry> visibleSymbols = new ArrayList<>(context.get(CommonKeys.VISIBLE_SYMBOLS_KEY));\n-        List<Scope.ScopeEntry> filteredWorkers = visibleSymbols.stream()\n-                .filter(scopeEntry -> (scopeEntry.symbol.flags & Flags.WORKER) == Flags.WORKER)\n+        ArrayList<Symbol> visibleSymbols = new ArrayList<>(context.get(CommonKeys.VISIBLE_SYMBOLS_KEY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7eb43be914f90e5a34687561544dbeac700a0945"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA5NzgwNg==", "bodyText": "Can move into a more meaningfull name like variableFilter. Can't we use symbolKind over instaceOf here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26387#discussion_r507097806", "createdAt": "2020-10-18T11:12:56Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/RecordFieldWithDefaultValueNodeContext.java", "diffHunk": "@@ -67,11 +67,8 @@ public RecordFieldWithDefaultValueNodeContext() {\n             (2) [module:]TypeName c = module:a<cursor>\n              */\n             QualifiedNameReferenceNode qNameRef = (QualifiedNameReferenceNode) node.expression();\n-            Predicate<Scope.ScopeEntry> filter = scopeEntry -> {\n-                BSymbol symbol = scopeEntry.symbol;\n-                return symbol instanceof BVarSymbol && (symbol.flags & Flags.PUBLIC) == Flags.PUBLIC;\n-            };\n-            List<Scope.ScopeEntry> moduleContent = QNameReferenceUtil.getModuleContent(context, qNameRef, filter);\n+            Predicate<Symbol> filter = symbol -> symbol instanceof VariableSymbol;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7eb43be914f90e5a34687561544dbeac700a0945"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMTQ2MjI0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26387#pullrequestreview-511146224", "createdAt": "2020-10-18T13:44:05Z", "commit": {"oid": "da7bfe7a0c950fca17dd6e0b2c0350b82d78f038"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a227b140e0f31eb26fa1dc0da51e5e084172bc6a", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a227b140e0f31eb26fa1dc0da51e5e084172bc6a", "committedDate": "2020-10-19T05:32:32Z", "message": "add initial model migration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa7429a387712b1f268c199045f07e4b772fce38", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aa7429a387712b1f268c199045f07e4b772fce38", "committedDate": "2020-10-19T05:32:32Z", "message": "fix module level context completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74163f78ea639deb7751f1b2d9ef9b301c455601", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/74163f78ea639deb7751f1b2d9ef9b301c455601", "committedDate": "2020-10-19T05:32:32Z", "message": "fix class definition context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a013e9c2b2de54b18948d77ed057976d1d5fbbb6", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a013e9c2b2de54b18948d77ed057976d1d5fbbb6", "committedDate": "2020-10-19T05:32:32Z", "message": "fix function body completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7faafbcdaef05841de2c989a52fcff32e13c30ce", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7faafbcdaef05841de2c989a52fcff32e13c30ce", "committedDate": "2020-10-19T05:32:32Z", "message": "fix array type descriptor completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "392b7ab2df49e93c32646cfc6450267a45c12556", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/392b7ab2df49e93c32646cfc6450267a45c12556", "committedDate": "2020-10-19T05:32:32Z", "message": "fix api usage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50cd164950359a882b077ff3ad020af3293e3f6f", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/50cd164950359a882b077ff3ad020af3293e3f6f", "committedDate": "2020-10-19T05:32:33Z", "message": "fix type descriptor context completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8c9d37b7a55d7e3211282f3d2da3f7c284fd26b", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a8c9d37b7a55d7e3211282f3d2da3f7c284fd26b", "committedDate": "2020-10-19T05:32:33Z", "message": "fix function definition completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9642df895450f5c015cd5e9e3703853c2920bb1", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f9642df895450f5c015cd5e9e3703853c2920bb1", "committedDate": "2020-10-19T05:32:33Z", "message": "fix import declaration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e986e79f3a7b9165f907a1bb4f453683e3286af", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3e986e79f3a7b9165f907a1bb4f453683e3286af", "committedDate": "2020-10-19T05:32:33Z", "message": "fix listener declaration context completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c174943b8f150a91dc809b617e98cf666bf1d3c", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7c174943b8f150a91dc809b617e98cf666bf1d3c", "committedDate": "2020-10-19T05:32:33Z", "message": "fix tests in module variable context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbf16ae1ef5f7681ca2cbc2821d4d36a12c7a203", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dbf16ae1ef5f7681ca2cbc2821d4d36a12c7a203", "committedDate": "2020-10-19T05:32:33Z", "message": "fix record type descriptor context completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acf51da437f57fb80e0e58e4e6f7ce9b4e8be256", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/acf51da437f57fb80e0e58e4e6f7ce9b4e8be256", "committedDate": "2020-10-19T05:32:33Z", "message": "fix completions for assignment assignment, async send and checking call stmts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff32267dd58de5a8794e786d209620f5e79c1280", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ff32267dd58de5a8794e786d209620f5e79c1280", "committedDate": "2020-10-19T05:32:33Z", "message": "fix else and else if context completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1b3192bb8bfed2291904dd4031307db37e80e6b", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b1b3192bb8bfed2291904dd4031307db37e80e6b", "committedDate": "2020-10-19T05:32:33Z", "message": "fix few more statemennt context completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5508669b637a1afee7bbc60ea7bcf68fa20fa4bc", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5508669b637a1afee7bbc60ea7bcf68fa20fa4bc", "committedDate": "2020-10-19T05:32:33Z", "message": "fix while statement context completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ff4b52159e130fcf1367a35f486afcb32195e28", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6ff4b52159e130fcf1367a35f486afcb32195e28", "committedDate": "2020-10-19T05:32:33Z", "message": "fix worker declaration completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad9a26855be98ef565aa25eaacc1e5ce17bef667", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ad9a26855be98ef565aa25eaacc1e5ce17bef667", "committedDate": "2020-10-19T05:32:33Z", "message": "fix dype definition completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "906a900e0eb6a5591c9390d555a93cf7cc215056", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/906a900e0eb6a5591c9390d555a93cf7cc215056", "committedDate": "2020-10-19T05:32:33Z", "message": "fix anon function suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2d7e4ed2a0243ca329d733d89eaacf2c2c76d67", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e2d7e4ed2a0243ca329d733d89eaacf2c2c76d67", "committedDate": "2020-10-19T05:32:33Z", "message": "fix list constructor and mapping constructor completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "777e4f8601a22ef13cbad6267646c5cc08351506", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/777e4f8601a22ef13cbad6267646c5cc08351506", "committedDate": "2020-10-19T05:32:33Z", "message": "fix query expression and object constructor completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8527df43dcd0bb61f380b2a505fa3167fb381b04", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8527df43dcd0bb61f380b2a505fa3167fb381b04", "committedDate": "2020-10-19T05:32:33Z", "message": "fix query expression, type cast, type test and table constructor completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db5ccf9f7531a70420490d538827004523be78be", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/db5ccf9f7531a70420490d538827004523be78be", "committedDate": "2020-10-19T05:32:33Z", "message": "fix var ref context completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "071ad52b596dfc7bd63c5c5e3dc7e917c719e2fe", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/071ad52b596dfc7bd63c5c5e3dc7e917c719e2fe", "committedDate": "2020-10-19T05:32:33Z", "message": "add changes for the type descriptor revamp"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "febdfb9c79027fbdec4bedaf4f43badcd43a46b4", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/febdfb9c79027fbdec4bedaf4f43badcd43a46b4", "committedDate": "2020-10-19T05:32:33Z", "message": "sync with master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b7d4beacc34a2c5ed478145345dcd03afe5b93f", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2b7d4beacc34a2c5ed478145345dcd03afe5b93f", "committedDate": "2020-10-19T05:32:34Z", "message": "revamp annotation context completions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac7a9fed4f97f696b930a94e6447f735aa375ef7", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ac7a9fed4f97f696b930a94e6447f735aa375ef7", "committedDate": "2020-10-19T05:32:34Z", "message": "revert fieldDescriptors API of Record type descriptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f816aeb075ecbfed71f19e436a0776fa59937593", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f816aeb075ecbfed71f19e436a0776fa59937593", "committedDate": "2020-10-19T05:32:34Z", "message": "enable completion tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad12fec71cbe1f91e3c1402a22d1b5fd11e4d4f1", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ad12fec71cbe1f91e3c1402a22d1b5fd11e4d4f1", "committedDate": "2020-10-19T05:32:34Z", "message": "fix checkstyle issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bdb6234ea70ac2a87fc84c2ddfd0ac8863ee416", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7bdb6234ea70ac2a87fc84c2ddfd0ac8863ee416", "committedDate": "2020-10-19T05:32:34Z", "message": "revamp signature help implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e03f887770e28ac12da4143d5ed74c1a1ca21605", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e03f887770e28ac12da4143d5ed74c1a1ca21605", "committedDate": "2020-10-19T05:32:34Z", "message": "refactor unused methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ab23f8b5594c1cc9e78838402ad6f14baa2b201", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9ab23f8b5594c1cc9e78838402ad6f14baa2b201", "committedDate": "2020-10-19T05:32:34Z", "message": "fix minor issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7326c0cbdbd5913e125cc01e738ccf5236be9438", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7326c0cbdbd5913e125cc01e738ccf5236be9438", "committedDate": "2020-10-19T05:32:34Z", "message": "refactor minor issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de2392ee399f7299da897ba1bd0b3c43505ea151", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/de2392ee399f7299da897ba1bd0b3c43505ea151", "committedDate": "2020-10-19T05:32:34Z", "message": "fix typereference model creation issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "640d40ed96c30ebe541f8b2e7c082e4e22c10ba6", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/640d40ed96c30ebe541f8b2e7c082e4e22c10ba6", "committedDate": "2020-10-19T05:32:34Z", "message": "remove builtin types filter from semantic API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "461572ac5132b0bb822008bcb48827b6b493b644", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/461572ac5132b0bb822008bcb48827b6b493b644", "committedDate": "2020-10-19T05:04:18Z", "message": "remove builtin types filter from semantic API"}, "afterCommit": {"oid": "640d40ed96c30ebe541f8b2e7c082e4e22c10ba6", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/640d40ed96c30ebe541f8b2e7c082e4e22c10ba6", "committedDate": "2020-10-19T05:32:34Z", "message": "remove builtin types filter from semantic API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4aa542df1ffd44c115adc8d62d3ed45d1c57115f", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4aa542df1ffd44c115adc8d62d3ed45d1c57115f", "committedDate": "2020-10-19T07:04:24Z", "message": "fix spotbugs issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95f3d61cf87595fc96df5da83e28986fa92c5e5e", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/95f3d61cf87595fc96df5da83e28986fa92c5e5e", "committedDate": "2020-10-19T08:20:56Z", "message": "disable failing test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNTc5ODAx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26387#pullrequestreview-511579801", "createdAt": "2020-10-19T09:34:26Z", "commit": {"oid": "95f3d61cf87595fc96df5da83e28986fa92c5e5e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4402, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}