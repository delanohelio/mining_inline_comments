{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyOTYzNzY2", "number": 26098, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwMzowODo1NlrOEqJkLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxOTozMDo0NlrOEv8ciA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjMyMzY1OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwMzowODo1NlrOHcMiZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNDo1NjoyNFrOHcNpYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMyNzU4OQ==", "bodyText": "Can we collapse this if statement with the next line's return statement?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26098#discussion_r499327589", "createdAt": "2020-10-05T03:08:56Z", "author": {"login": "nadeeshaan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -5030,6 +5030,9 @@ private boolean isPresent(Node node) {\n \n     private boolean checkIfAnonymous(Node node) {\n         Node parent = node.parent();\n+        if (parent.kind() == SyntaxKind.DISTINCT_TYPE_DESC) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7c7056f4cb60fa30df88b018568717f843facd"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM0NTc2MQ==", "bodyText": "fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26098#discussion_r499345761", "createdAt": "2020-10-05T04:56:24Z", "author": {"login": "rdhananjaya"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -5030,6 +5030,9 @@ private boolean isPresent(Node node) {\n \n     private boolean checkIfAnonymous(Node node) {\n         Node parent = node.parent();\n+        if (parent.kind() == SyntaxKind.DISTINCT_TYPE_DESC) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMyNzU4OQ=="}, "originalCommit": {"oid": "ac7c7056f4cb60fa30df88b018568717f843facd"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjM1MDQyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BTypeIdSet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwMzozMjoxM1rOHcMxng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNDo1NjoxNFrOHcNpRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMzMTQ4Ng==", "bodyText": "Shall we chain this constructor to the one with the most arguments (line 44)?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26098#discussion_r499331486", "createdAt": "2020-10-05T03:32:13Z", "author": {"login": "nadeeshaan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BTypeIdSet.java", "diffHunk": "@@ -43,7 +43,12 @@ public BTypeIdSet(Set<BTypeId> primary, Set<BTypeId> secondary) {\n \n     public BTypeIdSet(Set<BTypeId> primary) {\n         this.primary = primary;\n-        this.secondary = emptySet;\n+        this.secondary = new HashSet<>();\n+    }\n+\n+    public BTypeIdSet() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7c7056f4cb60fa30df88b018568717f843facd"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM0NTczNA==", "bodyText": "fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26098#discussion_r499345734", "createdAt": "2020-10-05T04:56:14Z", "author": {"login": "rdhananjaya"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BTypeIdSet.java", "diffHunk": "@@ -43,7 +43,12 @@ public BTypeIdSet(Set<BTypeId> primary, Set<BTypeId> secondary) {\n \n     public BTypeIdSet(Set<BTypeId> primary) {\n         this.primary = primary;\n-        this.secondary = emptySet;\n+        this.secondary = new HashSet<>();\n+    }\n+\n+    public BTypeIdSet() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMzMTQ4Ng=="}, "originalCommit": {"oid": "ac7c7056f4cb60fa30df88b018568717f843facd"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NzA4ODcyOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/object/DistinctObjectTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxOTozMDo0NlrOHlN0Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNzoyNDozOVrOHldv4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc4NTY3MQ==", "bodyText": "Shall we add runtime test cases as well?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26098#discussion_r508785671", "createdAt": "2020-10-20T19:30:46Z", "author": {"login": "hasithaa"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/object/DistinctObjectTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.test.object;\n+\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import static org.ballerinalang.test.util.BAssertUtil.validateError;\n+\n+/**\n+ * Test cases for distinct object type definitions.\n+ *\n+ * @since 2.0\n+ */\n+public class DistinctObjectTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "596f6be6b7dc50bbb1740f2d83f3d6b92dce2f34"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA0Njc1NA==", "bodyText": "Added in a7e2849", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26098#discussion_r509046754", "createdAt": "2020-10-21T07:24:39Z", "author": {"login": "rdhananjaya"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/object/DistinctObjectTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.test.object;\n+\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import static org.ballerinalang.test.util.BAssertUtil.validateError;\n+\n+/**\n+ * Test cases for distinct object type definitions.\n+ *\n+ * @since 2.0\n+ */\n+public class DistinctObjectTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc4NTY3MQ=="}, "originalCommit": {"oid": "596f6be6b7dc50bbb1740f2d83f3d6b92dce2f34"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 42, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}