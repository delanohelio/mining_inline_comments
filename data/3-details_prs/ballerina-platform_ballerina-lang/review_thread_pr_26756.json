{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NTk5Nzc4", "number": 26756, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNDozODozM1rOE1ftoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNDo0NDoyNVrOE1fxew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTI5NTY4OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNDozODozM1rOHtzRxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNDozODozM1rOHtzRxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc4ODEwMA==", "bodyText": "Should we use the BRecordType constructor that accepts flags also at L1670, instead? org.wso2.ballerinalang.compiler.semantics.model.types.BRecordType#BRecordType(org.wso2.ballerinalang.compiler.semantics.model.symbols.BTypeSymbol, int)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26756#discussion_r517788100", "createdAt": "2020-11-05T04:38:33Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -1708,6 +1708,7 @@ private BType getEffectiveMappingType(BLangRecordLiteral recordLiteral, BType ap\n         }\n \n         recordType.fields = newFields;\n+        recordType.flags = recordSymbol.flags;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05bc0b2cd5facc151d9a76ff8545cee853bb2c0d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTMwNTU1OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNDo0NDoyNVrOHtzXUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNjowODo1OVrOHt0uWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc4OTUyMw==", "bodyText": "Looking at the usage of org.wso2.ballerinalang.compiler.semantics.model.symbols.Symbols#createRecordSymbol, there seem to be some other places where we create the symbol without the Flags.ANONYMOUS flag. Don't we have to change them too?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26756#discussion_r517789523", "createdAt": "2020-11-05T04:44:25Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -7245,7 +7246,8 @@ private BType defineInferredRecordType(BLangRecordLiteral recordLiteral, BType e\n     private BRecordTypeSymbol createRecordTypeSymbol(PackageID pkgID, Location location,\n                                                      SymbolOrigin origin) {\n         BRecordTypeSymbol recordSymbol =\n-                Symbols.createRecordSymbol(0, names.fromString(anonymousModelHelper.getNextAnonymousTypeKey(pkgID)),\n+                Symbols.createRecordSymbol(Flags.ANONYMOUS,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05bc0b2cd5facc151d9a76ff8545cee853bb2c0d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgxMTgwMg==", "bodyText": "Ah yes, will fix those as well.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26756#discussion_r517811802", "createdAt": "2020-11-05T06:08:59Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -7245,7 +7246,8 @@ private BType defineInferredRecordType(BLangRecordLiteral recordLiteral, BType e\n     private BRecordTypeSymbol createRecordTypeSymbol(PackageID pkgID, Location location,\n                                                      SymbolOrigin origin) {\n         BRecordTypeSymbol recordSymbol =\n-                Symbols.createRecordSymbol(0, names.fromString(anonymousModelHelper.getNextAnonymousTypeKey(pkgID)),\n+                Symbols.createRecordSymbol(Flags.ANONYMOUS,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc4OTUyMw=="}, "originalCommit": {"oid": "05bc0b2cd5facc151d9a76ff8545cee853bb2c0d"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3068, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}