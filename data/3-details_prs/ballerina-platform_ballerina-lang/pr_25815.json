{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MjIxMDU3", "number": 25815, "title": "Fix type checking issue in sort key function", "bodyText": "Purpose\n\n$title\n\nFixes #25781\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-09-15T11:10:26Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25815", "merged": true, "mergeCommit": {"oid": "da1fe58934e516fe1777ab04746120d54481025b"}, "closed": true, "closedAt": "2020-09-15T12:14:07Z", "author": {"login": "lasinicl"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJFu6NgH2gAyNDg3MjIxMDU3OmVhYjYxNWQxMzBlYjY4YTUxOWEzYjQ5M2U0NzE4NWRiMmIwMzdiZDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJIx-lgFqTQ4ODc1Mjk2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "eab615d130eb68a519a3b493e47185db2b037bd2", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eab615d130eb68a519a3b493e47185db2b037bd2", "committedDate": "2020-09-15T11:03:19Z", "message": "Improve array:sort key function type checking"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NjE3OTA2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25815#pullrequestreview-488617906", "createdAt": "2020-09-15T12:14:01Z", "commit": {"oid": "eab615d130eb68a519a3b493e47185db2b037bd2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NzUyOTYy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25815#pullrequestreview-488752962", "createdAt": "2020-09-15T14:36:23Z", "commit": {"oid": "eab615d130eb68a519a3b493e47185db2b037bd2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNDozNjoyM1rOHSFE2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNDozNjoyM1rOHSFE2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcxOTU3OQ==", "bodyText": "Is this correct? Shouldn't we look at the return type?\nI guess the validation for ordered type will still work since we use the expected type as the type of the arrow function and invalid types are detected early on.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25815#discussion_r488719579", "createdAt": "2020-09-15T14:36:23Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5406,10 +5406,24 @@ private void checkArrayLibSortFuncArgs(BLangInvocation iExpr) {\n             return;\n         }\n \n-        BLangLambdaFunction keyLambdaFunction = (BLangLambdaFunction) keyFunction;\n-        BType returnType = keyLambdaFunction.function.type.getReturnType();\n+        DiagnosticPos pos;\n+        BType returnType;\n+\n+        if (keyFunction.getKind() == NodeKind.SIMPLE_VARIABLE_REF) {\n+            pos = keyFunction.pos;\n+            returnType = ((BLangSimpleVarRef) keyFunction).type.getReturnType();\n+        } else if (keyFunction.getKind() == NodeKind.ARROW_EXPR) {\n+            BLangArrowFunction arrowFunction = ((BLangArrowFunction) keyFunction);\n+            pos = arrowFunction.params.get(0).pos;\n+            returnType = arrowFunction.params.get(0).type;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eab615d130eb68a519a3b493e47185db2b037bd2"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4744, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}