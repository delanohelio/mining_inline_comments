{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNDU0MjM3", "number": 21477, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNDoyNDo1OFrODlEEYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNDozODozOVrODlEa4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTkwNTYxOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParserBaseListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNDoyNDo1OFrOFxvO1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNDoyNDo1OFrOFxvO1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY5ODM4OQ==", "bodyText": "Shall we remove the\n/home/chiran/Desktop/WSO2/Ballerina/ballerina-lang/compiler/ballerina-lang/src/main/resources/grammar/\npart?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21477#discussion_r387698389", "createdAt": "2020-03-04T14:24:58Z", "author": {"login": "irshadnilam"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParserBaseListener.java", "diffHunk": "@@ -1,4 +1,4 @@\n-// Generated from BallerinaParser.g4 by ANTLR 4.5.3\n+// Generated from /home/chiran/Desktop/WSO2/Ballerina/ballerina-lang/compiler/ballerina-lang/src/main/resources/grammar/BallerinaParser.g4 by ANTLR 4.5.3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9a8aab694ff77a240294ba74cb305626a4080a1"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTk0NzQyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNDozNDo0OVrOFxvo8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNDo1OTozOFrOFxwpEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcwNTA3NA==", "bodyText": "Do we need this? Is this visited?\nIf so, shall we visit letdeclarations and expressions with env of letexpression?\nIE:\n   public void visit(BLangLetExpression letExpression) {\n        for (BLangLetVariable letVarDeclaration : letExpression.letVarDeclarations) {\n            analyzeDef((BLangNode) letVarDeclaration.definitionNode, letExpression.env);\n        }\n        analyzeDef(letExpression.expr, letExpression.env);\n    }", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21477#discussion_r387705074", "createdAt": "2020-03-04T14:34:49Z", "author": {"login": "irshadnilam"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -1621,6 +1624,10 @@ public void visit(BLangSimpleVariableDef varDefNode) {\n         analyzeDef(varDefNode.var, env);\n     }\n \n+    public void visit(BLangLetExpression letExpression) {\n+        analyzeDef(letExpression, env);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9a8aab694ff77a240294ba74cb305626a4080a1"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcyMTQ5MA==", "bodyText": "Seems it has been introduced with commit #7cb340695f485fb06251412f64e1c8fdff909720. Reverted it", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21477#discussion_r387721490", "createdAt": "2020-03-04T14:59:38Z", "author": {"login": "pcnfernando"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -1621,6 +1624,10 @@ public void visit(BLangSimpleVariableDef varDefNode) {\n         analyzeDef(varDefNode.var, env);\n     }\n \n+    public void visit(BLangLetExpression letExpression) {\n+        analyzeDef(letExpression, env);\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcwNTA3NA=="}, "originalCommit": {"oid": "c9a8aab694ff77a240294ba74cb305626a4080a1"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTk2MzIwOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/clauses/BLangLetClause.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNDozODozOVrOFxvyoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNDozODozOVrOFxvyoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcwNzU1Mw==", "bodyText": "Shall we rename the NodeKind.LET to something more descriptive (NodeKind.LET_CLAUSE ?) since we have let declarations, let expressions, let clause etc?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21477#discussion_r387707553", "createdAt": "2020-03-04T14:38:39Z", "author": {"login": "irshadnilam"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/clauses/BLangLetClause.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.tree.clauses;\n+\n+import org.ballerinalang.model.clauses.LetClauseNode;\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.wso2.ballerinalang.compiler.tree.BLangNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+import org.wso2.ballerinalang.compiler.tree.types.BLangLetVariable;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.StringJoiner;\n+\n+/**\n+ * Implementation of \"let\" clause statement.\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLangLetClause extends BLangNode implements LetClauseNode {\n+\n+    public List<BLangLetVariable> getLetVarDeclarations() {\n+        return letVarDeclarations;\n+    }\n+\n+    public void addLetVarDeclarations(List<BLangLetVariable> letVarDeclarations) {\n+        this.letVarDeclarations = letVarDeclarations;\n+    }\n+\n+    public List<BLangLetVariable> letVarDeclarations = new ArrayList<>();\n+\n+    public BLangLetClause() {\n+    }\n+\n+    @Override\n+    public NodeKind getKind() {\n+        return NodeKind.LET;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9a8aab694ff77a240294ba74cb305626a4080a1"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 910, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}