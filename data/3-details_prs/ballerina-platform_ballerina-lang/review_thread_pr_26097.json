{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyOTMyNzQz", "number": 26097, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNToyMDoxOVrOEnzhEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNTozMDowMFrOEnzjZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTczOTcwOnYy", "diffSide": "RIGHT", "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/BallerinaTextDocumentService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNToyMDoxOVrOHYkx-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODoxNjozM1rOHYzEKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMDQ4OA==", "bodyText": "We will need to get rid of the code lenses caching within the Document Manager. Once the new Semantic API and Project API is integrated let's remove this part", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26097#discussion_r495530488", "createdAt": "2020-09-27T05:20:19Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/BallerinaTextDocumentService.java", "diffHunk": "@@ -495,9 +495,14 @@ void setClientCapabilities(LSClientCapabilities clientCapabilities) {\n \n             Path compilationPath = getUntitledFilePath(docSymbolFilePath.toString()).orElse(docSymbolFilePath.get());\n             Optional<Lock> lock = docManager.lockFile(compilationPath);\n+\n+            LSContext codeLensContext = new DocumentServiceOperationContext\n+                    .ServiceOperationContextBuilder(LSContextOperation.TXT_CODE_LENS)\n+                    .withCommonParams(null, fileUri, docManager)\n+                    .build();\n+\n             try {\n-                // Compile source document\n-                lenses = CodeLensUtil.compileAndGetCodeLenses(fileUri, docManager);\n+                lenses = CodeLensUtil.getCodeLenses(codeLensContext);\n                 docManager.setCodeLenses(compilationPath, lenses);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcbc28dc9da0847a2783a5cde11e30144e014235"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc2NDUyMA==", "bodyText": "Yes agree, only added changes affected by add-doc code action changes.  Let's remove it coming up PRs.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26097#discussion_r495764520", "createdAt": "2020-09-28T08:16:33Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/BallerinaTextDocumentService.java", "diffHunk": "@@ -495,9 +495,14 @@ void setClientCapabilities(LSClientCapabilities clientCapabilities) {\n \n             Path compilationPath = getUntitledFilePath(docSymbolFilePath.toString()).orElse(docSymbolFilePath.get());\n             Optional<Lock> lock = docManager.lockFile(compilationPath);\n+\n+            LSContext codeLensContext = new DocumentServiceOperationContext\n+                    .ServiceOperationContextBuilder(LSContextOperation.TXT_CODE_LENS)\n+                    .withCommonParams(null, fileUri, docManager)\n+                    .build();\n+\n             try {\n-                // Compile source document\n-                lenses = CodeLensUtil.compileAndGetCodeLenses(fileUri, docManager);\n+                lenses = CodeLensUtil.getCodeLenses(codeLensContext);\n                 docManager.setCodeLenses(compilationPath, lenses);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMDQ4OA=="}, "originalCommit": {"oid": "fcbc28dc9da0847a2783a5cde11e30144e014235"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTc0NTY3OnYy", "diffSide": "RIGHT", "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/codeaction/CodeActionUtil.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNTozMDowMFrOHYk0nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODoxOToxNVrOHYzJuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMTE2Nw==", "bodyText": "Since we still use the AST nodes to get the node type, let's skip using the BLangNode. Let's calculate the top level node type to be the Syntax node type directly.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26097#discussion_r495531167", "createdAt": "2020-09-27T05:30:00Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/codeaction/CodeActionUtil.java", "diffHunk": "@@ -134,6 +135,22 @@ public static CodeActionNodeType topLevelNodeInLine(LSContext context, TextDocum\n                         && cursorLine == diagnosticPos.sLine) {\n                     return CodeActionNodeType.RECORD;\n                 }\n+\n+                if (topLevelNode instanceof BLangClassDefinition) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcbc28dc9da0847a2783a5cde11e30144e014235"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc2NDU3Nw==", "bodyText": "Yes agree, only added changes affected by add-doc code action changes.  Let's remove it coming up PRs.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26097#discussion_r495764577", "createdAt": "2020-09-28T08:16:39Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/codeaction/CodeActionUtil.java", "diffHunk": "@@ -134,6 +135,22 @@ public static CodeActionNodeType topLevelNodeInLine(LSContext context, TextDocum\n                         && cursorLine == diagnosticPos.sLine) {\n                     return CodeActionNodeType.RECORD;\n                 }\n+\n+                if (topLevelNode instanceof BLangClassDefinition) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMTE2Nw=="}, "originalCommit": {"oid": "fcbc28dc9da0847a2783a5cde11e30144e014235"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc2NTk0NQ==", "bodyText": "+1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26097#discussion_r495765945", "createdAt": "2020-09-28T08:19:15Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/codeaction/CodeActionUtil.java", "diffHunk": "@@ -134,6 +135,22 @@ public static CodeActionNodeType topLevelNodeInLine(LSContext context, TextDocum\n                         && cursorLine == diagnosticPos.sLine) {\n                     return CodeActionNodeType.RECORD;\n                 }\n+\n+                if (topLevelNode instanceof BLangClassDefinition) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzMTE2Nw=="}, "originalCommit": {"oid": "fcbc28dc9da0847a2783a5cde11e30144e014235"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 39, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}