{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3MDIxNTIy", "number": 27139, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNDowNjozNVrOE9DhCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNDoxMDowN1rOE9Djbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDU2MjAxOnYy", "diffSide": "RIGHT", "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ImportOrgNameNodeContext.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNDowNjozNVrOH5iboA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNDo0MTo1OFrOH5jAGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA5NTAwOA==", "bodyText": "Would be better to move this to a constant", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27139#discussion_r530095008", "createdAt": "2020-11-25T04:06:35Z", "author": {"login": "SupunS"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ImportOrgNameNodeContext.java", "diffHunk": "@@ -103,4 +103,16 @@ private static LSCompletionItem getImportCompletion(CompletionContext context, S\n \n         return new StaticCompletionItem(context, item, StaticCompletionItem.Kind.MODULE);\n     }\n+\n+    @Override\n+    public void sort(CompletionContext context, ImportOrgNameNode node, List<LSCompletionItem> completionItems) {\n+        String orgName = node.orgName().text();\n+        if (!\"ballerina\".equals(orgName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5cdd5bb09a225d718d4dd6db491fd08bc3c5235"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEwNDM0NA==", "bodyText": "+1. Sorting API is finalising and yes, all such check will be done against to a set of constants.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27139#discussion_r530104344", "createdAt": "2020-11-25T04:41:58Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ImportOrgNameNodeContext.java", "diffHunk": "@@ -103,4 +103,16 @@ private static LSCompletionItem getImportCompletion(CompletionContext context, S\n \n         return new StaticCompletionItem(context, item, StaticCompletionItem.Kind.MODULE);\n     }\n+\n+    @Override\n+    public void sort(CompletionContext context, ImportOrgNameNode node, List<LSCompletionItem> completionItems) {\n+        String orgName = node.orgName().text();\n+        if (!\"ballerina\".equals(orgName)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA5NTAwOA=="}, "originalCommit": {"oid": "d5cdd5bb09a225d718d4dd6db491fd08bc3c5235"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDU2ODE1OnYy", "diffSide": "LEFT", "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/extensions/ballerina/document/BallerinaDocumentServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNDoxMDowN1rOH5ifNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNDozNTo0NFrOH5i5ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA5NTkyNg==", "bodyText": "@nadeeshaan is this intentional? we are commenting extension service method, wouldn't this affect the other external teams?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27139#discussion_r530095926", "createdAt": "2020-11-25T04:10:07Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/extensions/ballerina/document/BallerinaDocumentServiceImpl.java", "diffHunk": "@@ -83,28 +83,28 @@ public BallerinaDocumentServiceImpl(LSGlobalContext globalContext) {\n     @Override\n     public CompletableFuture<BallerinaASTResponse> ast(BallerinaASTRequest request) {\n         BallerinaASTResponse reply = new BallerinaASTResponse();\n-        String fileUri = request.getDocumentIdentifier().getUri();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5cdd5bb09a225d718d4dd6db491fd08bc3c5235"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEwMjYyOQ==", "bodyText": "Yes, this API is not effectively used by the other extension clients and since they have to migrate to the latest ProjectAPI this will not be working on top of the old LSCompiler. Hence we disabled this to avoid unnecessary NPEs thrown", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27139#discussion_r530102629", "createdAt": "2020-11-25T04:35:44Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/extensions/ballerina/document/BallerinaDocumentServiceImpl.java", "diffHunk": "@@ -83,28 +83,28 @@ public BallerinaDocumentServiceImpl(LSGlobalContext globalContext) {\n     @Override\n     public CompletableFuture<BallerinaASTResponse> ast(BallerinaASTRequest request) {\n         BallerinaASTResponse reply = new BallerinaASTResponse();\n-        String fileUri = request.getDocumentIdentifier().getUri();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA5NTkyNg=="}, "originalCommit": {"oid": "d5cdd5bb09a225d718d4dd6db491fd08bc3c5235"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2953, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}