{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MTIzMjcx", "number": 21007, "title": "Migrate JvmTerminatorGen and fix compilation errors", "bodyText": "Purpose\n$subject\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-02-12T05:58:00Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21007", "merged": true, "mergeCommit": {"oid": "d3c92839bf260f6096410614263ff209fbbde713"}, "closed": true, "closedAt": "2020-02-12T06:26:31Z", "author": {"login": "Kishanthan"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDf39VAH2gAyMzc0MTIzMjcxOjYwODhjM2U4NGM2ZTRmODk1NjlhN2QzM2U0ZWJkZTY1MTRiNjQxNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDgTurAFqTM1NzIxMjkwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6088c3e84c6e4f89569a7d33e4ebde6514b64159", "author": {"user": {"login": "Kishanthan", "name": "Kishanthan Thangarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6088c3e84c6e4f89569a7d33e4ebde6514b64159", "committedDate": "2020-02-12T05:56:02Z", "message": "Migrate JvmTerminatorGen and fix compilation errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjExNjUy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21007#pullrequestreview-357211652", "createdAt": "2020-02-12T06:22:04Z", "commit": {"oid": "6088c3e84c6e4f89569a7d33e4ebde6514b64159"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNjoyMjowNFrOFoi4Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNjoyMjowNFrOFoi4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA1ODgwNw==", "bodyText": "correct to return", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21007#discussion_r378058807", "createdAt": "2020-02-12T06:22:04Z", "author": {"login": "manuranga"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmMethodGen.java", "diffHunk": "@@ -1028,49 +1030,52 @@ static void genYieldCheck(MethodVisitor mv, LabelGenerator labelGen, BIRBasicBlo\n         mv.visitJumpInsn(GOTO, gotoLabel);\n     }\n \n-    static void generateLambdaMethod(Map.Entry<AsyncCall, FPLoad> ins, ClassWriter cw, String lambdaName) {\n+    static void generateLambdaMethod(BIRInstruction ins, ClassWriter cw, String lambdaName) {\n         @Nilable BType lhsType;\n         String orgName;\n         String moduleName;\n         String funcName;\n         int paramIndex = 1;\n         boolean isVirtual = false;\n-        AsyncCall asyncIns = ins.getKey();\n-        FPLoad fpIns = ins.getValue();\n-        if (ins.getKey() != null) {\n+        InstructionKind kind = ins.getKind();\n+        if (kind == InstructionKind.ASYNC_CALL) {\n+            AsyncCall asyncIns = (AsyncCall) ins;\n             isVirtual = asyncIns.isVirtual;\n             lhsType = asyncIns.lhsOp != null ? asyncIns.lhsOp.variableDcl.type : null;\n             orgName = asyncIns.calleePkg.orgName.value;\n             moduleName = asyncIns.calleePkg.name.value;\n             funcName = asyncIns.name.getValue();\n-        } else {\n+        } else if (kind == InstructionKind.FP_LOAD) {\n+            FPLoad fpIns = (FPLoad) ins;\n             lhsType = fpIns.lhsOp.variableDcl.type;\n             orgName = fpIns.pkgId.orgName.value;\n             moduleName = fpIns.pkgId.name.value;\n             funcName = fpIns.funcName.getValue();\n+        } else {\n+            throw new BLangCompilerException(\"JVM lambda method generation is not supported for instruction \" +\n+                    String.format(\"%s\", ins));\n         }\n \n         boolean isExternFunction = isExternStaticFunctionCall(ins);\n         boolean isBuiltinModule = isBallerinaBuiltinModule(orgName, moduleName);\n \n         BType returnType = new BNilType();\n         if (lhsType.tag == TypeTags.FUTURE) {\n-            returnType = lhsType.returnType;\n+            returnType = lhsType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6088c3e84c6e4f89569a7d33e4ebde6514b64159"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21d338facc9a1dafbf7fe7fb39dc4315ab92f9e0", "author": {"user": {"login": "Kishanthan", "name": "Kishanthan Thangarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/21d338facc9a1dafbf7fe7fb39dc4315ab92f9e0", "committedDate": "2020-02-12T06:25:50Z", "message": "Use correct BFutureType"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjEyOTA2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21007#pullrequestreview-357212906", "createdAt": "2020-02-12T06:26:22Z", "commit": {"oid": "21d338facc9a1dafbf7fe7fb39dc4315ab92f9e0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4253, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}