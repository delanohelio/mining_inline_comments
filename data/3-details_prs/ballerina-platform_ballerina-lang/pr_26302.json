{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxMzAyMTE1", "number": 26302, "title": "Restrict invalid expressions starting with a simple type", "bodyText": "Purpose\n$Subject\nFixes #26253\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-10-12T05:12:19Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302", "merged": true, "mergeCommit": {"oid": "62b7be87dd588ef497b1cb30d37116e2d5450fee"}, "closed": true, "closedAt": "2020-10-15T05:29:46Z", "author": {"login": "rdulmina"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRsww3AH2gAyNTAxMzAyMTE1OjIwNTJhOWQ3ZjBjMzcxOGMwMzNhM2JmYmQ2NDNjNGQwMDA4NjNkODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSq8KgAFqTUwODk0Nzk1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2052a9d7f0c3718c033a3bfbd643c4d000863d85", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2052a9d7f0c3718c033a3bfbd643c4d000863d85", "committedDate": "2020-10-12T05:03:02Z", "message": "Restrict invalid expressions starting with a simple type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "846eb9c4abdebc65e1348f843a9fd10ade4835f1", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/846eb9c4abdebc65e1348f843a9fd10ade4835f1", "committedDate": "2020-10-12T05:03:31Z", "message": "Add jballerina unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c245d89e72c17a50094586da15221e4fe07c810a", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c245d89e72c17a50094586da15221e4fe07c810a", "committedDate": "2020-10-12T05:03:59Z", "message": "Add newline"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f323e8e461f9518f7cb71b706593ee46b9e5717f", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f323e8e461f9518f7cb71b706593ee46b9e5717f", "committedDate": "2020-10-12T05:07:33Z", "message": "Remove unwanted comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "646036af0136ca47aeb7b6c4c7024936d93a5e8e", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/646036af0136ca47aeb7b6c4c7024936d93a5e8e", "committedDate": "2020-10-12T05:10:13Z", "message": "Add licence header to bal file"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NTI4Njk3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302#pullrequestreview-506528697", "createdAt": "2020-10-12T11:19:07Z", "commit": {"oid": "646036af0136ca47aeb7b6c4c7024936d93a5e8e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMToxOTowN1rOHf6b1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMToyMTo0MFrOHf6hFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIyNTMwMA==", "bodyText": "I think parsing is correct in this scenario. byte[] is same as Person[]. Both are index-access expressions.\ni.e:\ntype Person record {|\n|}\n\npublic function main() {\n    var x = Person[]; // ----(1)\n    var y = byte[]; // ----(2)\n}\nBoth (1) and (2) are identical, in terms of syntax and semantics.\nIf we consider either of (1) 0r (2), compiler should give two errors:\n\nParser would give an error for missing index.\nSemantic analyzer would give an error saying invalid operation: type 'typedesc<int>' does not support indexing", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302#discussion_r503225300", "createdAt": "2020-10-12T11:19:07Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -3828,6 +3828,30 @@ private STNode parseExpressionRhsInternal(OperatorPrecedence currentPrecedenceLe\n                     isInConditionalExpr);\n         }\n \n+        if (isSimpleTypeNode(lhsExpr.kind)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "646036af0136ca47aeb7b6c4c7024936d93a5e8e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIyNjY0Nw==", "bodyText": "I think this needs to be fixed at semantic analyzer", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302#discussion_r503226647", "createdAt": "2020-10-12T11:21:40Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -3828,6 +3828,30 @@ private STNode parseExpressionRhsInternal(OperatorPrecedence currentPrecedenceLe\n                     isInConditionalExpr);\n         }\n \n+        if (isSimpleTypeNode(lhsExpr.kind)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIyNTMwMA=="}, "originalCommit": {"oid": "646036af0136ca47aeb7b6c4c7024936d93a5e8e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b1005ae7754dc14632d8db865684e0f8862af3f", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4b1005ae7754dc14632d8db865684e0f8862af3f", "committedDate": "2020-10-13T03:40:39Z", "message": "Remove isSimpleTypeNode method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c0c3b6379ce5f70e72463d4867316eb8f34985d", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2c0c3b6379ce5f70e72463d4867316eb8f34985d", "committedDate": "2020-10-13T06:05:28Z", "message": "Remove BLangTypedescExpr\nConsider the simple type descs as builtin simple type reference when it is the container expression of indexed expression"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51249b35f0921ebcc5f087161a32b94706108b34", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/51249b35f0921ebcc5f087161a32b94706108b34", "committedDate": "2020-10-13T06:05:47Z", "message": "Update assert file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dcfe266b6a3a7399e09f76ba063cfd3a3e42b00", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1dcfe266b6a3a7399e09f76ba063cfd3a3e42b00", "committedDate": "2020-10-13T06:10:00Z", "message": "Update assert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8202138683fbec22f74f34704200a3c04039492", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a8202138683fbec22f74f34704200a3c04039492", "committedDate": "2020-10-13T09:42:23Z", "message": "Hadle BLangTypedescExpr inside type checker.\nLet node transformer generate BLangTypedescExpr for memeber access with type and handle it in the type checker."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61156777eb1ca783827bfe55d59308ed16cf4aad", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/61156777eb1ca783827bfe55d59308ed16cf4aad", "committedDate": "2020-10-13T10:04:03Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MDQzMzA5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302#pullrequestreview-508043309", "createdAt": "2020-10-14T06:53:38Z", "commit": {"oid": "61156777eb1ca783827bfe55d59308ed16cf4aad"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNjo1MzozOFrOHhEsPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNjo1MzozOFrOHhEsPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MTkxOQ==", "bodyText": "Shall we use NodeKind to check the type of the expression?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302#discussion_r504441919", "createdAt": "2020-10-14T06:53:38Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -2584,6 +2584,12 @@ private boolean isXmlAccess(BLangFieldBasedAccess fieldAccessExpr) {\n \n     public void visit(BLangIndexBasedAccess indexBasedAccessExpr) {\n         // First analyze the variable reference expression.\n+        if (indexBasedAccessExpr.expr instanceof  BLangTypedescExpr) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61156777eb1ca783827bfe55d59308ed16cf4aad"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MDQ4NjI3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302#pullrequestreview-508048627", "createdAt": "2020-10-14T07:02:46Z", "commit": {"oid": "61156777eb1ca783827bfe55d59308ed16cf4aad"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzowMjo0NlrOHhE8yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzowNjoxNVrOHhFC_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0NjE1NQ==", "bodyText": "I'm not sure if the name/description is accurate?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302#discussion_r504446155", "createdAt": "2020-10-14T07:02:46Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/functions/CustomFunctionTest.java", "diffHunk": "@@ -43,4 +43,12 @@ public void testDuplicateParameters() {\n         BAssertUtil.validateError(compile, 0, \"redeclared symbol 'param'\", 1, 35);\n     }\n \n+    @Test(description = \"Test defining ballerina function with extra parameters with missing comma\")\n+    public void testExtraParameters() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61156777eb1ca783827bfe55d59308ed16cf4aad"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0NjM0Mw==", "bodyText": "We use hyphens in module names and underscores in bal file names, shall we fix this?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302#discussion_r504446343", "createdAt": "2020-10-14T07:03:15Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/functions/extra-parameters.bal", "diffHunk": "@@ -0,0 +1,20 @@\n+//  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61156777eb1ca783827bfe55d59308ed16cf4aad"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0NzMzNw==", "bodyText": "Shall we change this to use an index and validate the error count?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Assert.assertEquals(compile.getErrorCount(), 2);\n          \n          \n            \n                    BAssertUtil.validateError(compile, 0, \"invalid operation: type 'byte' does not support indexing\", 20, 13);\n          \n          \n            \n                    BAssertUtil.validateError(compile, 1, \"missing key expr in member access expr\", 20, 18);\n          \n          \n            \n                    int index = 0;\n          \n          \n            \n                    BAssertUtil.validateError(compile, index++, \"invalid operation: type 'byte' does not support indexing\", 20, 13);\n          \n          \n            \n                    BAssertUtil.validateError(compile, index++, \"missing key expr in member access expr\", 20, 18);\n          \n          \n            \n                    Assert.assertEquals(compile.getErrorCount(), index);\n          \n      \n    \n    \n  \n\nThat way we can validate that we only get the expected errors.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302#discussion_r504447337", "createdAt": "2020-10-14T07:05:23Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/functions/CustomFunctionTest.java", "diffHunk": "@@ -43,4 +43,12 @@ public void testDuplicateParameters() {\n         BAssertUtil.validateError(compile, 0, \"redeclared symbol 'param'\", 1, 35);\n     }\n \n+    @Test(description = \"Test defining ballerina function with extra parameters with missing comma\")\n+    public void testExtraParameters() {\n+        CompileResult compile = BCompileUtil.compile(\"test-src/functions/extra-parameters.bal\");\n+        Assert.assertEquals(compile.getErrorCount(), 2);\n+        BAssertUtil.validateError(compile, 0, \"invalid operation: type 'byte' does not support indexing\", 20, 13);\n+        BAssertUtil.validateError(compile, 1, \"missing key expr in member access expr\", 20, 18);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61156777eb1ca783827bfe55d59308ed16cf4aad"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0NzM5MQ==", "bodyText": "How about something like\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    CompileResult compile = BCompileUtil.compile(\"test-src/functions/extra-parameters.bal\");\n          \n          \n            \n                    CompileResult compileResult = BCompileUtil.compile(\"test-src/functions/extra-parameters.bal\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302#discussion_r504447391", "createdAt": "2020-10-14T07:05:31Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/functions/CustomFunctionTest.java", "diffHunk": "@@ -43,4 +43,12 @@ public void testDuplicateParameters() {\n         BAssertUtil.validateError(compile, 0, \"redeclared symbol 'param'\", 1, 35);\n     }\n \n+    @Test(description = \"Test defining ballerina function with extra parameters with missing comma\")\n+    public void testExtraParameters() {\n+        CompileResult compile = BCompileUtil.compile(\"test-src/functions/extra-parameters.bal\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61156777eb1ca783827bfe55d59308ed16cf4aad"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0Nzc0Mg==", "bodyText": "Shall we also extract indexBasedAccessExpr.expr out to a variable? Seems to be used over and over again.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302#discussion_r504447742", "createdAt": "2020-10-14T07:06:15Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -2584,6 +2584,12 @@ private boolean isXmlAccess(BLangFieldBasedAccess fieldAccessExpr) {\n \n     public void visit(BLangIndexBasedAccess indexBasedAccessExpr) {\n         // First analyze the variable reference expression.\n+        if (indexBasedAccessExpr.expr instanceof  BLangTypedescExpr) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61156777eb1ca783827bfe55d59308ed16cf4aad"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27399518f933d112f9bc5aebfb3dcd5177393cb0", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/27399518f933d112f9bc5aebfb3dcd5177393cb0", "committedDate": "2020-10-14T11:01:04Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into bug-fix-2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4ec0717c739ac0552e1352c99380434edecc74a", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e4ec0717c739ac0552e1352c99380434edecc74a", "committedDate": "2020-10-14T11:16:55Z", "message": "Update with requested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb9df238bf2be1b44873263f05e93eae1a4089f5", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cb9df238bf2be1b44873263f05e93eae1a4089f5", "committedDate": "2020-10-14T12:22:08Z", "message": "Move the test case to type tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b192ccaae3a51dd83f1f755640a7c4dfe66d5033", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b192ccaae3a51dd83f1f755640a7c4dfe66d5033", "committedDate": "2020-10-14T16:22:55Z", "message": "Fix checkstyle issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4OTE3NTU4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302#pullrequestreview-508917558", "createdAt": "2020-10-15T03:48:39Z", "commit": {"oid": "b192ccaae3a51dd83f1f755640a7c4dfe66d5033"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMzo0ODozOVrOHhvxeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMzo0ODozOVrOHhvxeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE0Nzc3MA==", "bodyText": "Let's move this test to org.ballerinalang.test.types.typedesc.TypedescTests as discussed. Can you also add another test similar to\npublic function main() {\n    typedesc t = int[]|string[];\n}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302#discussion_r505147770", "createdAt": "2020-10-15T03:48:39Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/bytetype/BByteArrayValueNegativeTest.java", "diffHunk": "@@ -67,5 +66,8 @@ public void testBlobValueNegative() {\n         BAssertUtil.validateError(result, index++, \"missing plus token\", 16, 23);\n         BAssertUtil.validateError(result, index++, \"invalid base64 content in byte array literal\", 17, 23);\n         BAssertUtil.validateError(result, index++, \"invalid base64 content in byte array literal\", 18, 23);\n+        BAssertUtil.validateError(result, index++, \"invalid operation: type 'byte' does not support indexing\", 19, 18);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b192ccaae3a51dd83f1f755640a7c4dfe66d5033"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46e0603bb6c524189325c98b2ce4c8d0cafa0f8a", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/46e0603bb6c524189325c98b2ce4c8d0cafa0f8a", "committedDate": "2020-10-15T04:10:14Z", "message": "Move test case to suggested package\nMove test to org.ballerinalang.test.types.typedesc.TypedescTests and add suggested test case."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e123c14353c38acc9975bd9070cc5491b6681fac", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e123c14353c38acc9975bd9070cc5491b6681fac", "committedDate": "2020-10-15T04:12:04Z", "message": "Add new line"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4OTI4Njc4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302#pullrequestreview-508928678", "createdAt": "2020-10-15T04:29:54Z", "commit": {"oid": "e123c14353c38acc9975bd9070cc5491b6681fac"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c9ba032204dedee6c1128f4209d6be5a9dac718", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4c9ba032204dedee6c1128f4209d6be5a9dac718", "committedDate": "2020-10-15T04:32:55Z", "message": "Fix checkstyle issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4OTQ3OTUy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26302#pullrequestreview-508947952", "createdAt": "2020-10-15T05:29:36Z", "commit": {"oid": "4c9ba032204dedee6c1128f4209d6be5a9dac718"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4556, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}