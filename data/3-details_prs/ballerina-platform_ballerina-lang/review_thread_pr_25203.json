{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1OTQxMTI2", "number": 25203, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODozMTo0NFrOEXHAMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzoxODo1MFrOEXgJEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjY3NDQyOnYy", "diffSide": "RIGHT", "path": "misc/testerina/modules/testerina-core/src/main/ballerina/src/test/assert.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODozMTo0NFrOG-tykQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODozMTo0NFrOG-tykQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQxNTEyMQ==", "bodyText": "Is the assignment required? The very next line is isEqual = (actual == expected).\nIm assuming changing it to boolean isEqual = (actual == expected) should work.\nSame for line 87", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25203#discussion_r468415121", "createdAt": "2020-08-11T08:31:44Z", "author": {"login": "Ibaqu"}, "path": "misc/testerina/modules/testerina-core/src/main/ballerina/src/test/assert.bal", "diffHunk": "@@ -67,14 +67,9 @@ public function assertFalse(boolean condition, public string msg = \"Assertion Fa\n # + actual - Actual value\n # + expected - Expected value\n # + msg - Assertion error message\n-public function assertEquals(any|error actual, any|error expected, public string msg = \"Assertion Failed!\") {\n+public function assertEquals(anydata|error actual, anydata|error expected, public string msg = \"Assertion Failed!\") {\n     boolean isEqual = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e29f8fa307f01beb84d51489d992fb20f1780b2"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMDc5MzE0OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-debugger-integration-test/src/test/resources/project-based-tests/basic-project/src/hello-world/tests/hello_world_test.bal", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzoxODo1MFrOG_U1nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzo0MTo0NlrOG_Vkiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1NDg3Ng==", "bodyText": "Should we ask the user to handle this? Is there a possibility to hide this detail from the user and handle it internally maybe within the assertEquals function?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25203#discussion_r469054876", "createdAt": "2020-08-12T07:18:50Z", "author": {"login": "azinneera"}, "path": "tests/jballerina-debugger-integration-test/src/test/resources/project-based-tests/basic-project/src/hello-world/tests/hello_world_test.bal", "diffHunk": "@@ -33,5 +33,9 @@ public function mockPrint((any|error)... s) {\n function testFunc() {\n     // Invoking the main function\n     main();\n-    test:assertEquals(outputs[0], \"Hello, World!\");\n+    if (outputs[0] is anydata) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec63e0fe8025c8ebb1628765d6212a7d20dae01d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA2Mzc1Ng==", "bodyText": "That is like going back to the previous implementation right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25203#discussion_r469063756", "createdAt": "2020-08-12T07:35:51Z", "author": {"login": "Dilhasha"}, "path": "tests/jballerina-debugger-integration-test/src/test/resources/project-based-tests/basic-project/src/hello-world/tests/hello_world_test.bal", "diffHunk": "@@ -33,5 +33,9 @@ public function mockPrint((any|error)... s) {\n function testFunc() {\n     // Invoking the main function\n     main();\n-    test:assertEquals(outputs[0], \"Hello, World!\");\n+    if (outputs[0] is anydata) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1NDg3Ng=="}, "originalCommit": {"oid": "ec63e0fe8025c8ebb1628765d6212a7d20dae01d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA2Njg5MQ==", "bodyText": "Did you mean to allow user to pass \"any\" type into the function and check it if it qualifies as \"anydata\" and do a value check?\nThe problem is, this check happens at runtime. If user passes a value not qualifying as \"anydata\", still the function would allow it and user would expect value equality. But, he would get notified about the failure only at runtime.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25203#discussion_r469066891", "createdAt": "2020-08-12T07:41:46Z", "author": {"login": "Dilhasha"}, "path": "tests/jballerina-debugger-integration-test/src/test/resources/project-based-tests/basic-project/src/hello-world/tests/hello_world_test.bal", "diffHunk": "@@ -33,5 +33,9 @@ public function mockPrint((any|error)... s) {\n function testFunc() {\n     // Invoking the main function\n     main();\n-    test:assertEquals(outputs[0], \"Hello, World!\");\n+    if (outputs[0] is anydata) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA1NDg3Ng=="}, "originalCommit": {"oid": "ec63e0fe8025c8ebb1628765d6212a7d20dae01d"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 363, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}