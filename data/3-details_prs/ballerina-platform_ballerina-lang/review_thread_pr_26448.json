{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MjU3OTY5", "number": 26448, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNTozMjo1MFrOEwFAyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNTo1MDowN1rOEwFO6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODQ5MjI3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/NodeCloner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNTozMjo1MFrOHla4Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNTo0NDoxMFrOHlbGPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk5OTc1OA==", "bodyText": "shouldn't we clone here as well?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26448#discussion_r508999758", "createdAt": "2020-10-21T05:32:50Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/NodeCloner.java", "diffHunk": "@@ -695,7 +695,7 @@ public void visit(BLangMatchClause source) {\n         source.cloneRef = clone;\n         clone.matchPatterns = cloneList(source.matchPatterns);\n         clone.setMatchGuard(source.getMatchGuard());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49a8090fcf0133b5560c91f9210b628a447acba0"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwMzMyNg==", "bodyText": "yes, fixed it", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26448#discussion_r509003326", "createdAt": "2020-10-21T05:44:10Z", "author": {"login": "KavinduZoysa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/NodeCloner.java", "diffHunk": "@@ -695,7 +695,7 @@ public void visit(BLangMatchClause source) {\n         source.cloneRef = clone;\n         clone.matchPatterns = cloneList(source.matchPatterns);\n         clone.setMatchGuard(source.getMatchGuard());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk5OTc1OA=="}, "originalCommit": {"oid": "49a8090fcf0133b5560c91f9210b628a447acba0"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODQ5NTkwOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/statements/matchstmt/const-pattern.bal", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNTozNDo1MFrOHla6nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNTo0NDoyNVrOHlbGgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwMDM1MQ==", "bodyText": "Ideally, we should validate something here, right? Shall we have post return some value, and assert it inside the match, and remove returns string here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26448#discussion_r509000351", "createdAt": "2020-10-21T05:34:50Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/statements/matchstmt/const-pattern.bal", "diffHunk": "@@ -405,6 +405,23 @@ function testConstPattern12() {\n     assertEquals(\"OTHER\", constPattern12(3));\n }\n \n+client class Client {\n+    remote function post(string x, string y) returns anydata {\n+    }\n+}\n+\n+Client clientEndpoint = new ();\n+public function testConstPattern13() returns string {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49a8090fcf0133b5560c91f9210b628a447acba0"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwMzM5NQ==", "bodyText": "changed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26448#discussion_r509003395", "createdAt": "2020-10-21T05:44:25Z", "author": {"login": "KavinduZoysa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/statements/matchstmt/const-pattern.bal", "diffHunk": "@@ -405,6 +405,23 @@ function testConstPattern12() {\n     assertEquals(\"OTHER\", constPattern12(3));\n }\n \n+client class Client {\n+    remote function post(string x, string y) returns anydata {\n+    }\n+}\n+\n+Client clientEndpoint = new ();\n+public function testConstPattern13() returns string {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwMDM1MQ=="}, "originalCommit": {"oid": "49a8090fcf0133b5560c91f9210b628a447acba0"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODUyODQyOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/statements/matchstmt/const-pattern.bal", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNTo1MDowN1rOHlbNsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNTo1Nzo1MVrOHlbYDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwNTIzNQ==", "bodyText": "We should probably have a wildcard match pattern here and panic if it reaches that clause, just for completeness.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26448#discussion_r509005235", "createdAt": "2020-10-21T05:50:07Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/statements/matchstmt/const-pattern.bal", "diffHunk": "@@ -405,6 +405,23 @@ function testConstPattern12() {\n     assertEquals(\"OTHER\", constPattern12(3));\n }\n \n+client class Client {\n+    remote function post(string x, string y) returns anydata {\n+        return y;\n+    }\n+}\n+\n+Client clientEndpoint = new ();\n+public function testConstPattern13() {\n+    string animal = \"Mouse\";\n+    match animal {\n+        \"Mouse\" => {\n+            var res = clientEndpoint->post(\"/post\", \"POST: Hello World\");\n+            assertEquals(\"POST: Hello World\", res);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5efacb2b2e37217be0680e8b7e4589e1d406dfb7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwNzg4NQ==", "bodyText": "Fixed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26448#discussion_r509007885", "createdAt": "2020-10-21T05:57:51Z", "author": {"login": "KavinduZoysa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/statements/matchstmt/const-pattern.bal", "diffHunk": "@@ -405,6 +405,23 @@ function testConstPattern12() {\n     assertEquals(\"OTHER\", constPattern12(3));\n }\n \n+client class Client {\n+    remote function post(string x, string y) returns anydata {\n+        return y;\n+    }\n+}\n+\n+Client clientEndpoint = new ();\n+public function testConstPattern13() {\n+    string animal = \"Mouse\";\n+    match animal {\n+        \"Mouse\" => {\n+            var res = clientEndpoint->post(\"/post\", \"POST: Hello World\");\n+            assertEquals(\"POST: Hello World\", res);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwNTIzNQ=="}, "originalCommit": {"oid": "5efacb2b2e37217be0680e8b7e4589e1d406dfb7"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4796, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}