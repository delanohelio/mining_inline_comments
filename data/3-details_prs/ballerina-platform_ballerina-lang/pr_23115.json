{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNjYxODQ3", "number": 23115, "title": "Enable lang testcases depend on table type & related bug fixes", "bodyText": "Purpose\n\nFix part of #22334 ..\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-05-05T17:47:01Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23115", "merged": true, "mergeCommit": {"oid": "6f7d12eabcf90f423bfbf52441ad5df0d8a35b5f"}, "closed": true, "closedAt": "2020-05-06T11:02:57Z", "author": {"login": "mohanvive"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceB_P8AH2gAyNDEzNjYxODQ3OmZmZjA4YTA1MjRmOWQzNmMwY2ZkMDM1MzkyOTRlN2FlZThlMzVjMTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcel5yYgFqTQwNjQ3NDk0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fff08a0524f9d36c0cfd03539294e7aee8e35c14", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fff08a0524f9d36c0cfd03539294e7aee8e35c14", "committedDate": "2020-05-04T16:22:48Z", "message": "Enable table related testcases and bug fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23776eb691d4c78953a3f5972a143f0af5e5ec9a", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/23776eb691d4c78953a3f5972a143f0af5e5ec9a", "committedDate": "2020-05-05T12:18:07Z", "message": "Add filler values for table and related test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0a0e0b116bec1aa98d763380c3e68fb556d0990", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d0a0e0b116bec1aa98d763380c3e68fb556d0990", "committedDate": "2020-05-05T15:21:56Z", "message": "Fix table type dependent test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cebe4a08ce4c8ba0e8d627c45ed4ba8ce564aaa2", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cebe4a08ce4c8ba0e8d627c45ed4ba8ce564aaa2", "committedDate": "2020-05-06T08:48:02Z", "message": "Disable AnydataTest in bstring test module"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NDI1NzA4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23115#pullrequestreview-406425708", "createdAt": "2020-05-06T09:03:02Z", "commit": {"oid": "cebe4a08ce4c8ba0e8d627c45ed4ba8ce564aaa2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTowMzowMlrOGRKD0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTowMzowMlrOGRKD0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0Mzc5Mw==", "bodyText": "is it possible to have noType for the constraint?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23115#discussion_r420643793", "createdAt": "2020-05-06T09:03:02Z", "author": {"login": "gimantha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -1134,6 +1134,14 @@ public void setForeachTypedBindingPatternType(BLangForeach foreachNode) {\n             case TypeTags.XML:\n                 varType = BUnionType.create(null, symTable.xmlType, symTable.stringType);\n                 break;\n+            case TypeTags.TABLE:\n+                BTableType tableType = (BTableType) collectionType;\n+                if (tableType.constraint.tag == TypeTags.NONE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cebe4a08ce4c8ba0e8d627c45ed4ba8ce564aaa2"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NDI2MTE5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23115#pullrequestreview-406426119", "createdAt": "2020-05-06T09:03:36Z", "commit": {"oid": "cebe4a08ce4c8ba0e8d627c45ed4ba8ce564aaa2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTowMzozNlrOGRKE_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTowMzozNlrOGRKE_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0NDA5Mw==", "bodyText": "is it possible to have noType for the constraint?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23115#discussion_r420644093", "createdAt": "2020-05-06T09:03:36Z", "author": {"login": "gimantha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -1226,6 +1234,14 @@ public void setFromClauseTypedBindingPatternType(BLangFromClause fromClause) {\n             case TypeTags.XML:\n                 varType = BUnionType.create(null, symTable.xmlType, symTable.stringType);\n                 break;\n+            case TypeTags.TABLE:\n+                BTableType tableType = (BTableType) collectionType;\n+                if (tableType.constraint.tag == TypeTags.NONE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cebe4a08ce4c8ba0e8d627c45ed4ba8ce564aaa2"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NDI3MDIx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23115#pullrequestreview-406427021", "createdAt": "2020-05-06T09:04:50Z", "commit": {"oid": "cebe4a08ce4c8ba0e8d627c45ed4ba8ce564aaa2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTowNDo1MFrOGRKH2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTowNDo1MFrOGRKH2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0NDgyNQ==", "bodyText": "I will enable this.. I have the fix", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23115#discussion_r420644825", "createdAt": "2020-05-06T09:04:50Z", "author": {"login": "gimantha"}, "path": "langlib/langlib-test/src/test/java/org/ballerinalang/langlib/test/statements/foreach/ForeachTableTypedBindingPatternsTests.java", "diffHunk": "@@ -31,43 +31,42 @@\n  * @since 0.985.0\n  */\n \n-//TODO Table remove - Fix\n public class ForeachTableTypedBindingPatternsTests {\n \n     private CompileResult program;\n \n-    @BeforeClass (enabled = false)\n+    @BeforeClass\n     public void setup() {\n         program = BCompileUtil.compile(\"test-src/statements/foreach/foreach-table-typed-binding-patterns.bal\");\n     }\n \n-    @Test (enabled = false)\n+    @Test\n     public void testTableWithoutType() {\n         BValue[] returns = BRunUtil.invoke(program, \"testTableWithoutType\");\n         Assert.assertEquals(returns.length, 1);\n         Assert.assertEquals(returns[0].stringValue(),\n                 \"0:id=1 name=Mary salary=300.5 1:id=2 name=John salary=200.5 2:id=3 name=Jim salary=330.5 \");\n     }\n \n-    @Test (enabled = false)\n+    @Test\n     public void testTableWithType() {\n         BValue[] returns = BRunUtil.invoke(program, \"testTableWithType\");\n         Assert.assertEquals(returns.length, 1);\n         Assert.assertEquals(returns[0].stringValue(),\n                 \"0:id=1 name=Mary salary=300.5 1:id=2 name=John salary=200.5 2:id=3 name=Jim salary=330.5 \");\n     }\n \n-    @Test (enabled = false)\n+    @Test\n     public void testRecordInTableWithoutType() {\n         BValue[] returns = BRunUtil.invoke(program, \"testRecordInTableWithoutType\");\n         Assert.assertEquals(returns.length, 1);\n         Assert.assertEquals(returns[0].stringValue(), \"0:1:Mary:300.5 1:2:John:200.5 2:3:Jim:330.5 \");\n     }\n \n-    @Test (enabled = false)\n-    public void testEmptyTableIteration() {\n-        BValue[] returns = BRunUtil.invoke(program, \"testEmptyTableIteration\");\n-        Assert.assertEquals(returns.length, 1);\n-        Assert.assertEquals(returns[0].stringValue(), \"\");\n-    }\n+//    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cebe4a08ce4c8ba0e8d627c45ed4ba8ce564aaa2"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NDMyMDc0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23115#pullrequestreview-406432074", "createdAt": "2020-05-06T09:11:58Z", "commit": {"oid": "cebe4a08ce4c8ba0e8d627c45ed4ba8ce564aaa2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOToxMTo1OFrOGRKW7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOToxMTo1OFrOGRKW7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY0ODY4NA==", "bodyText": "we cant have string here. key type can be any anydata type for tables.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23115#discussion_r420648684", "createdAt": "2020-05-06T09:11:58Z", "author": {"login": "gimantha"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BTableType.java", "diffHunk": "@@ -56,12 +57,12 @@ public BType getKeyType() {\n \n     @Override\n     public <V> V getZeroValue() {\n-        return null;\n+        return (V) new TableValueImpl<String, V>(new BTableType(constraint));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cebe4a08ce4c8ba0e8d627c45ed4ba8ce564aaa2"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1135ad503d892b539347ab45a0add9ec82293b6f", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1135ad503d892b539347ab45a0add9ec82293b6f", "committedDate": "2020-05-06T09:29:37Z", "message": "Fixes to accommodate review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NDc0OTQy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23115#pullrequestreview-406474942", "createdAt": "2020-05-06T10:13:25Z", "commit": {"oid": "1135ad503d892b539347ab45a0add9ec82293b6f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3396, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}