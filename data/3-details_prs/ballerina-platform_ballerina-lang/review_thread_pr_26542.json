{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NDkyNjI1", "number": 26542, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxOTozMTo0M1rOEw6dCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxOTozMTo0N1rOEw6dJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzI0ODExOnYy", "diffSide": "RIGHT", "path": "stdlib/transactions/src/main/ballerina/src/transactions/2pc_participant.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxOTozMTo0M1rOHmwv5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMjoyMjozOFrOHm6AGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNjYyOA==", "bodyText": "Shall we order the imports alphabetically?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26542#discussion_r510406628", "createdAt": "2020-10-22T19:31:43Z", "author": {"login": "MaryamZi"}, "path": "stdlib/transactions/src/main/ballerina/src/transactions/2pc_participant.bal", "diffHunk": "@@ -15,6 +15,7 @@\n // under the License.\n \n import ballerina/log;\n+import ballerina/io;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90353ad663990cddbf73db37a662dfba068d8e16"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1ODIzMg==", "bodyText": "fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26542#discussion_r510558232", "createdAt": "2020-10-23T02:22:38Z", "author": {"login": "gimantha"}, "path": "stdlib/transactions/src/main/ballerina/src/transactions/2pc_participant.bal", "diffHunk": "@@ -15,6 +15,7 @@\n // under the License.\n \n import ballerina/log;\n+import ballerina/io;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNjYyOA=="}, "originalCommit": {"oid": "90353ad663990cddbf73db37a662dfba068d8e16"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzI0ODM3OnYy", "diffSide": "RIGHT", "path": "stdlib/transactions/src/main/ballerina/src/transactions/2pc_participant.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxOTozMTo0N1rOHmwwCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMjoyNDowM1rOHm6BTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNjY2Ng==", "bodyText": "Even with this approach, the argument is evaluated (new string is created), right? We need to pass a function pointer.\ne.g.,\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    log:printDebug(io:sprintf(\"Preparing remote participant: %s\", self.participantId));\n          \n          \n            \n                    log:printDebug(() => io:sprintf(\"Preparing remote participant: %s\", self.participantId));\n          \n      \n    \n    \n  \n\nor\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    log:printDebug(io:sprintf(\"Preparing remote participant: %s\", self.participantId));\n          \n          \n            \n                    log:printDebug(function () {\n          \n          \n            \n                        io:sprintf(\"Preparing remote participant: %s\", self.participantId)\n          \n          \n            \n                    });", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26542#discussion_r510406666", "createdAt": "2020-10-22T19:31:47Z", "author": {"login": "MaryamZi"}, "path": "stdlib/transactions/src/main/ballerina/src/transactions/2pc_participant.bal", "diffHunk": "@@ -96,27 +97,27 @@ type RemoteParticipant object {\n         // to prepare a participant\n         boolean successful = true;\n \n-        log:printDebug(\"Preparing remote participant: \" + self.participantId);\n+        log:printDebug(io:sprintf(\"Preparing remote participant: %s\", self.participantId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90353ad663990cddbf73db37a662dfba068d8e16"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU1ODU0Mw==", "bodyText": "fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26542#discussion_r510558543", "createdAt": "2020-10-23T02:24:03Z", "author": {"login": "gimantha"}, "path": "stdlib/transactions/src/main/ballerina/src/transactions/2pc_participant.bal", "diffHunk": "@@ -96,27 +97,27 @@ type RemoteParticipant object {\n         // to prepare a participant\n         boolean successful = true;\n \n-        log:printDebug(\"Preparing remote participant: \" + self.participantId);\n+        log:printDebug(io:sprintf(\"Preparing remote participant: %s\", self.participantId));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNjY2Ng=="}, "originalCommit": {"oid": "90353ad663990cddbf73db37a662dfba068d8e16"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4628, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}