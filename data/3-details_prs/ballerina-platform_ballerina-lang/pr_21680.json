{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NzU4MDMz", "number": 21680, "title": "Add gateway proxy generation support to gRPC", "bodyText": "Purpose\nThis can automatically generate a proxy server based on the proto file, which would map a HTTP RESTful API to gRPC.\nApproach\nSamples\nSet the mode of the gRPC compiler to \"proxy\" to generate the relevant gateway.\ne.g: ballerina grpc --input=.proto --mode=proxy\nRemarks\nWorks only for Unary gRPC messaging.\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-03-11T15:25:52Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680", "merged": true, "mergeCommit": {"oid": "79493162dcd3d031e336063eb723f427e4298cfd"}, "closed": true, "closedAt": "2020-03-25T14:33:06Z", "author": {"login": "daksithj"}, "timelineItems": {"totalCount": 37, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHWw6EgH2gAyMzg2NzU4MDMzOjhkNWJmMzYyZmM1ZGY5ZWE1ZThmYWZkMmEyZTQ5ZjFmZjQxMjJjOTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRCGU_gFqTM4MDg5ODEyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8d5bf362fc5df9ea5e8fafd2a2e49f1ff4122c95", "author": {"user": {"login": "daksithj", "name": "Daksith Jayasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8d5bf362fc5df9ea5e8fafd2a2e49f1ff4122c95", "committedDate": "2020-02-24T05:34:53Z", "message": "Merge pull request #1 from ballerina-platform/master\n\nPull changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6977442ae32342eb6f482075da2ed07f0b26656a", "author": {"user": {"login": "daksithj", "name": "Daksith Jayasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6977442ae32342eb6f482075da2ed07f0b26656a", "committedDate": "2020-03-11T14:20:57Z", "message": "Add gateway proxy generation to gRPC - Fix Merge Conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02817279f71f2b402a1ad2f5bb76f39f7bce7b67", "author": {"user": {"login": "daksithj", "name": "Daksith Jayasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/02817279f71f2b402a1ad2f5bb76f39f7bce7b67", "committedDate": "2020-03-11T16:34:52Z", "message": "Add gateway proxy generation to gRPC - Fixed Merge Conflicts with github repo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d", "author": {"user": {"login": "daksithj", "name": "Daksith Jayasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ba7396a37780a1a67e63b96c277e10627073132d", "committedDate": "2020-03-11T19:36:10Z", "message": "Add gateway proxy generation to gRPC - Fixed some errors introduced by syntax changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzQ2MDgy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373346082", "createdAt": "2020-03-12T08:11:39Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODoxMTozOVrOF1UmRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODoxMTozOVrOF1UmRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1NjMyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // Copyright (c) 2015, Google Inc.\n          \n          \n            \n            // Copyright (c) 2020, Google Inc.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391456326", "createdAt": "2020-03-12T08:11:39Z", "author": {"login": "BuddhiWathsala"}, "path": "misc/protobuf-ballerina/src/main/resources/google/api/annotations.proto", "diffHunk": "@@ -0,0 +1,31 @@\n+// Copyright (c) 2015, Google Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzQ2ODUy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373346852", "createdAt": "2020-03-12T08:13:02Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODoxMzowMlrOF1UoxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODoxMzowMlrOF1UoxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1Njk2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // Copyright 2018 Google LLC\n          \n          \n            \n            // Copyright 2020 Google LLC", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391456964", "createdAt": "2020-03-12T08:13:02Z", "author": {"login": "BuddhiWathsala"}, "path": "misc/protobuf-ballerina/src/main/resources/google/api/http.proto", "diffHunk": "@@ -0,0 +1,318 @@\n+// Copyright 2018 Google LLC", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzU2MDQw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373356040", "createdAt": "2020-03-12T08:29:20Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODoyOToyMFrOF1VFMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODoyOToyMFrOF1VFMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2NDI0MA==", "bodyText": "Do we need the specific version here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391464240", "createdAt": "2020-03-12T08:29:20Z", "author": {"login": "BuddhiWathsala"}, "path": "stdlib/grpc/build.gradle", "diffHunk": "@@ -49,6 +49,7 @@ dependencies {\n     interopImports project(':ballerina-io')\n \n     implementation 'org.apache.commons:commons-lang3'\n+    implementation 'com.google.api.grpc:proto-google-common-protos:1.17.0'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzYwNzE1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373360715", "createdAt": "2020-03-12T08:37:31Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODozNzozMVrOF1VT3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODozNzozMVrOF1VT3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2Nzk5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setMessageList(List<Message> messageList) {\n          \n          \n            \n                public void setMessageMap(List<Message> messageList) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391467999", "createdAt": "2020-03-12T08:37:31Z", "author": {"login": "BuddhiWathsala"}, "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/components/AbstractStub.java", "diffHunk": "@@ -86,7 +83,11 @@ public void setDescriptors(Set<Descriptor> descriptors) {\n     }\n \n     public void setMessageList(List<Message> messageList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzYxMzM3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373361337", "createdAt": "2020-03-12T08:38:35Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODozODozNVrOF1VVyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODozODozNVrOF1VVyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2ODQ4OQ==", "bodyText": "Rename messageInList  -> message to improve the readability.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391468489", "createdAt": "2020-03-12T08:38:35Z", "author": {"login": "BuddhiWathsala"}, "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/components/AbstractStub.java", "diffHunk": "@@ -86,7 +83,11 @@ public void setDescriptors(Set<Descriptor> descriptors) {\n     }\n \n     public void setMessageList(List<Message> messageList) {\n-        this.messageList = messageList;\n+        Map<String, Message> messageMap = new HashMap<>();\n+        for (Message messageInList : messageList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzY1MTM4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373365138", "createdAt": "2020-03-12T08:44:53Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo0NDo1M1rOF1Vh5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo0NDo1M1rOF1Vh5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3MTU5MQ==", "bodyText": "Do we really need an allocated variable since this httpPath used just once?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391471591", "createdAt": "2020-03-12T08:44:53Z", "author": {"login": "BuddhiWathsala"}, "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/components/Method.java", "diffHunk": "@@ -93,9 +143,100 @@ public Method build() {\n             String methodName = methodDescriptor.getName();\n             String inputType = methodDescriptor.getInputType();\n             inputType = inputType != null ? getMappingBalType(inputType) : null;\n+            boolean primitiveInput = inputType != null && checkPrimitiveType(inputType);\n             String outputType = methodDescriptor.getOutputType();\n             outputType = outputType != null ? getMappingBalType(outputType) : null;\n-            return new Method(methodName, methodId, inputType, outputType, methodType);\n+            HttpRule httpExtension = methodDescriptor.getOptions().getExtension(AnnotationsProto.http);\n+            String httpMethod = httpExtension.getPatternCase().name();\n+            String httpPath = resolveHttpPath(httpExtension);\n+            String httpBody = httpExtension.getBody();\n+            List<Param> paramSet = getParamList(inputType, messageMap, httpExtension);\n+            return new Method(methodName, methodId, inputType, primitiveInput, outputType, methodType, httpMethod,\n+                    httpPath, httpBody, paramSet);\n+        }\n+\n+        private String resolveHttpPath(HttpRule httpExtension) {\n+            int number = httpExtension.getPatternCase().getNumber();\n+            // the following http methods are mapped thee numbers\n+            // 0:no extension / 2:get /3:put /4:post /5:delete /6:patch\n+            switch (number) {\n+                case 2:\n+                    return httpExtension.getGet();\n+                case 3:\n+                    return httpExtension.getPut();\n+                case 4:\n+                    return httpExtension.getPost();\n+                case 5:\n+                    return httpExtension.getDelete();\n+                case 6:\n+                    return httpExtension.getPatch();\n+                default:\n+                    return \"\";\n+            }\n+        }\n+\n+        private List<Param> getParamList(String inputType, Map<String, Message> messageMap, HttpRule httpExtension) {\n+            String httpMethod = httpExtension.getPatternCase().name();\n+            if (httpMethod.equals(HTTP_PATTERN_NOT_SET) || inputType == null) {\n+               return new ArrayList<>();\n+            }\n+            String httpPath = resolveHttpPath(httpExtension);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 153}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzY1OTMw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373365930", "createdAt": "2020-03-12T08:46:11Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo0NjoxMlrOF1VkgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo0NjoxMlrOF1VkgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3MjI1Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n             *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391472257", "createdAt": "2020-03-12T08:46:12Z", "author": {"login": "BuddhiWathsala"}, "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/components/Param.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzcxNzk1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373371795", "createdAt": "2020-03-12T08:55:44Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo1NTo0NVrOF1V2XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo1NTo0NVrOF1V2XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3NjgyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                }{{/not_equal}}\n          \n          \n            \n                }{{/not_equal}}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391476829", "createdAt": "2020-03-12T08:55:45Z", "author": {"login": "BuddhiWathsala"}, "path": "stdlib/grpc/src/main/resources/templates/skeleton/proxy_unary.mustache", "diffHunk": "@@ -0,0 +1,47 @@\n+    {{#not_equal httpMethod \"PATTERN_NOT_SET\"}}@http:ResourceConfig {\n+    methods: [\"{{httpMethod}}\"],\n+    path: \"{{httpPath}}\"{{#not_equal httpBody \"\"}},\n+    body: \"requestBody\"{{/not_equal}}\n+    }\n+    resource function {{methodName}}(http:Caller caller, http:Request req{{#paramSet}}{{#equals paramSource \"path\"}}, {{fieldType}} {{fieldName}}{{/equals}}{{/paramSet}}{{#not_equal httpBody \"\"}}, json requestBody{{/not_equal}}) {\n+        {{#isNotNull inputType}}{{#if primitiveInput}}{{inputType}} new{{inputType}};{{else}}{{inputType}} new{{inputType}} = {};{{/if}}\n+        {{#equals httpBody \"*\"}}{{inputType}} | error bodyExtracted{{inputType}} = {{inputType}}.constructFrom(requestBody);\n+        if bodyExtracted{{inputType}} is error {\n+            sendResponse(caller, bodyExtracted{{inputType}});\n+            return;\n+        } else {\n+        {{#if primitiveInput}}new{{inputType}}{{else}}new{{inputType}}{{/if}} = bodyExtracted{{inputType}};\n+        }\n+        {{#paramSet}}{{#equals paramSource \"path\"}}{{#if ../primitiveInput}}new{{../inputType}}{{else}}{{parentName}}.{{fieldName}}{{/if}} = {{fieldName}};\n+        {{/equals}}{{/paramSet}}{{/equals}}{{#not_equal httpBody \"*\"}}{{#paramSet}}{{#equals paramSource \"message\"}}{{fieldType}} {{fieldName}} = {};\n+        {{/equals}}{{/paramSet}}any | error paramReader;\n+        string[]? queryParamSetReader;\n+        {{#paramSet}}{{#equals paramSource \"path\"}}{{#if ../primitiveInput}}new{{../inputType}}{{else}}{{parentName}}.{{fieldName}}{{/if}} = {{fieldName}};\n+        {{/equals}}{{#equals paramSource \"query\"}}{{#if repeatedParam}}queryParamSetReader = req.getQueryParamValues(\"{{queryAccessName}}{{fieldName}}\");\n+        if queryParamSetReader is string[] {\n+            paramReader = arrayCaster(queryParamSetReader, \"{{fieldType}}\");\n+            if paramReader is {{fieldType}}[] {\n+                {{parentName}}.{{fieldName}} = paramReader;\n+            } else {\n+                sendResponse(caller, paramReader);\n+                return;\n+            }\n+        }{{else}}paramReader = castFunction(req.getQueryParamValue(\"{{queryAccessName}}{{fieldName}}\"), \"{{fieldType}}\");\n+        if paramReader is {{fieldType}} {\n+            {{#if ../primitiveInput}}new{{../inputType}}{{else}}{{parentName}}.{{fieldName}}{{/if}} = paramReader;\n+        } else {\n+            sendResponse(caller, paramReader);\n+            return;\n+        }{{/if}}\n+        {{/equals}}{{#equals paramSource \"body\"}}{{fieldType}} | error {{fieldName}} = {{fieldType}}.constructFrom(requestBody);\n+        if {{fieldName}} is {{fieldType}} {\n+            {{#if ../primitiveInput}}new{{../inputType}}{{else}}{{parentName}}.{{fieldName}}{{/if}} = {{fieldName}};\n+        } else {\n+            sendResponse(caller, {{fieldName}});\n+            return;\n+        }\n+        {{/equals}}{{#equals paramSource \"message\"}}{{parentName}}.{{fieldName}} = {{fieldName}};\n+        {{/equals}}{{/paramSet}}{{/not_equal}}var response = {{service}}BlockingEp ->{{methodName}}(new{{inputType}});{{/isNotNull}}{{#isNull inputType}}var response = {{service}}BlockingEp ->{{methodName}}();{{/isNull}}\n+        sendResponse(caller, response);\n+        return;\n+    }{{/not_equal}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzc0MDE3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373374017", "createdAt": "2020-03-12T08:59:16Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo1OToxNlrOF1V9Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo1OToxNlrOF1V9Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3ODYxNA==", "bodyText": "Remove comments.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391478614", "createdAt": "2020-03-12T08:59:16Z", "author": {"login": "BuddhiWathsala"}, "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/grpc/tool/StubGeneratorTestCase.java", "diffHunk": "@@ -344,6 +351,105 @@ public void testOneofFieldRecordGeneration() throws IllegalAccessException, Clas\n                 \"Expected imports not found in compile results.\");\n     }\n \n+    @Test(description = \"Test gateway proxy with only path and query parameters\")\n+    public void testHelloWorldGateway() throws IllegalAccessException, ClassNotFoundException,\n+            InstantiationException {\n+        CompileResult compileResult = getProxyCompileResult(\"helloWorldGateway.proto\",\n+                \"helloWorldGateway\");\n+        assertEquals(compileResult.getDiagnostics().length, 0);\n+        assertEquals(((BLangPackage) compileResult.getAST()).getCompilationUnits().size(), 4,\n+                \"Expected compilation units not found in compile results.\");\n+        assertEquals(((BLangPackage) compileResult.getAST()).typeDefinitions.size(), 8,\n+                \"Expected type definitions not found in compile results.\");\n+        assertEquals(((BLangPackage) compileResult.getAST()).functions.size(), 21,\n+                \"Expected functions not found in compile results.\");\n+        assertEquals(((BLangPackage) compileResult.getAST()).globalVars.size(), 4,\n+                \"Expected global variables not found in compile results.\");\n+        assertEquals(((BLangPackage) compileResult.getAST()).imports.size(), 5,\n+                \"Expected imports not found in compile results.\");\n+        validateAttachedResources(compileResult, 2);\n+//        Stream<Path> walk = Files.walk(Paths.get(\"src\", \"test\", \"resources\", \"grpc\", \"src\", \"proxyservices\"));\n+//        walk.forEach(file -> {\n+//            BalFileGenerationUtils.delete(file.toFile());\n+//        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzc0NTIy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373374522", "createdAt": "2020-03-12T09:00:04Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTowMDowNFrOF1V-2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTowMDowNFrOF1V-2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3OTAwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n             *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391479000", "createdAt": "2020-03-12T09:00:04Z", "author": {"login": "BuddhiWathsala"}, "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/tool/helloWorldGateway.proto", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzc0ODk3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373374897", "createdAt": "2020-03-12T09:00:41Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTowMDo0MVrOF1WAFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTowMDo0MVrOF1WAFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3OTMxNg==", "bodyText": "Please check the indentations and formatting.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391479316", "createdAt": "2020-03-12T09:00:41Z", "author": {"login": "BuddhiWathsala"}, "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/tool/helloWorldGateway.proto", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+syntax = \"proto3\";\n+import \"google/api/annotations.proto\";\n+service helloWorldGateway {\n+\t\trpc hello(HelloRequest) returns (HelloResponse) {\n+\t\toption (google.api.http) = \n+        \t\t{ post: \"/v1/{number}/\"\n+          \t\t}; \n+\t\t}\n+\t\trpc bye(ByeRequest) returns (ByeResponse) {\n+\t\toption (google.api.http) = \n+\t\t\t{ get: \"/v1/\" \n+          \t\t};\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzc1MDcz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373375073", "createdAt": "2020-03-12T09:00:57Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTowMDo1N1rOF1WAqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTowMDo1N1rOF1WAqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3OTQ2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n             *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391479465", "createdAt": "2020-03-12T09:00:57Z", "author": {"login": "BuddhiWathsala"}, "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/tool/helloWorldGatewayWithBody.proto", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzc1MjAy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373375202", "createdAt": "2020-03-12T09:01:09Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTowMTowOVrOF1WBEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTowMTowOVrOF1WBEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3OTU2OQ==", "bodyText": "Please check the indentations and formatting.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391479569", "createdAt": "2020-03-12T09:01:09Z", "author": {"login": "BuddhiWathsala"}, "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/tool/helloWorldGatewayWithBody.proto", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+syntax = \"proto3\";\n+import \"google/api/annotations.proto\";\n+service helloWorldGateway {\n+\t\trpc hello(HelloRequest) returns (HelloResponse) {\n+\t\toption (google.api.http) = \n+        \t\t{ post: \"/v1/{number}/\"\n+\t\t\t  body: \"text\"\n+          \t\t}; \n+\t\t}\n+\t\trpc bye(ByeRequest) returns (ByeResponse) {\n+\t\toption (google.api.http) = \n+\t\t\t{ get: \"/v1/\" \n+\t\t\t  body: \"*\"\n+          \t\t};\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzc1NDc5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373375479", "createdAt": "2020-03-12T09:01:35Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTowMTozNVrOF1WB5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTowMTozNVrOF1WB5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3OTc4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n             *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391479782", "createdAt": "2020-03-12T09:01:35Z", "author": {"login": "BuddhiWathsala"}, "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/tool/helloWorldGatewayWithPrimitiveInput.proto", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzc1NTg4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373375588", "createdAt": "2020-03-12T09:01:46Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTowMTo0NlrOF1WCOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTowMTo0NlrOF1WCOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3OTg2NA==", "bodyText": "Please check the indentations and formatting.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391479864", "createdAt": "2020-03-12T09:01:46Z", "author": {"login": "BuddhiWathsala"}, "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/tool/helloWorldGatewayWithPrimitiveInput.proto", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+syntax = \"proto3\";\n+import \"google/protobuf/wrappers.proto\";\n+import \"google/api/annotations.proto\";\n+service helloWorldGateway {\n+\t\trpc hello(google.protobuf.StringValue) returns (google.protobuf.StringValue) {\n+\t\toption (google.api.http) = \n+        \t\t{ post: \"/v1/\"\n+\t\t\t  body: \"value\"\n+          \t\t}; \n+\t\t}\n+\t\trpc bye(google.protobuf.Int64Value) returns (google.protobuf.StringValue) {\n+\t\toption (google.api.http) = \n+\t\t\t{ get: \"/v1/{value}/\" \n+          \t\t};\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzc1NzM4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373375738", "createdAt": "2020-03-12T09:02:01Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTowMjowMVrOF1WCoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTowMjowMVrOF1WCoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3OTk2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n             *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391479968", "createdAt": "2020-03-12T09:02:01Z", "author": {"login": "BuddhiWathsala"}, "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/tool/helloWorldGatewayWithRepeatedField.proto", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzgxMzI2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373381326", "createdAt": "2020-03-12T09:10:45Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOToxMDo0NVrOF1WT4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOToxMDo0NVrOF1WT4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4NDM4NQ==", "bodyText": "Please check the indentations and formatting.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391484385", "createdAt": "2020-03-12T09:10:45Z", "author": {"login": "BuddhiWathsala"}, "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/tool/helloWorldGatewayWithRepeatedField.proto", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+syntax = \"proto3\";\n+import \"google/api/annotations.proto\";\n+service helloWorldGateway {\n+\t\trpc hello(HelloRequest) returns (HelloResponse) {\n+\t\toption (google.api.http) = \n+        \t\t{ post: \"/v1/\"\n+          \t\t}; \n+\t\t}\n+\t\trpc bye(ByeRequest) returns (ByeResponse) {\n+\t\toption (google.api.http) = \n+\t\t\t{ get: \"/v2/\"\n+\t\t\t  body: \"request\" \n+          \t\t};\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzgxODYz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-373381863", "createdAt": "2020-03-12T09:11:30Z", "commit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOToxMTozMFrOF1WVwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOToxMTozMFrOF1WVwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4NDg2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n             *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391484864", "createdAt": "2020-03-12T09:11:30Z", "author": {"login": "BuddhiWathsala"}, "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/tool/helloWorldGatewayWithoutPath.proto", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba7396a37780a1a67e63b96c277e10627073132d"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd1b80f0aa2ad57846a5d115e1995ce73ab0e223", "author": {"user": {"login": "daksithj", "name": "Daksith Jayasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cd1b80f0aa2ad57846a5d115e1995ce73ab0e223", "committedDate": "2020-03-16T04:29:43Z", "message": "Pull from the master branch to update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b99d1426aa440d1c99b92c8eb93d48bdcbc893e0", "author": {"user": {"login": "daksithj", "name": "Daksith Jayasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b99d1426aa440d1c99b92c8eb93d48bdcbc893e0", "committedDate": "2020-03-16T07:04:45Z", "message": "Made some changes according to the review on the Pull request"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dc5e9f70b0f2e91b335eeffe098c9ab7197e0c4", "author": {"user": {"login": "daksithj", "name": "Daksith Jayasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5dc5e9f70b0f2e91b335eeffe098c9ab7197e0c4", "committedDate": "2020-03-16T07:09:48Z", "message": "Add gateway proxy generation to gRPC - Made some further changes based on the review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cafcb6f96b561268fbfe3fad0dd34a630daae55", "author": {"user": {"login": "daksithj", "name": "Daksith Jayasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9cafcb6f96b561268fbfe3fad0dd34a630daae55", "committedDate": "2020-03-16T07:13:08Z", "message": "Add gateway proxy generation to gRPC - Updated the VSCode file changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cf171f7c6c55ffbac3066de8383d17df7ab99a1", "author": {"user": {"login": "daksithj", "name": "Daksith Jayasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3cf171f7c6c55ffbac3066de8383d17df7ab99a1", "committedDate": "2020-03-16T08:53:02Z", "message": "Add gateway proxy generation to gRPC - Changed the formatting in the testing suite"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NzIzNTk4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-375723598", "createdAt": "2020-03-17T03:50:01Z", "commit": {"oid": "3cf171f7c6c55ffbac3066de8383d17df7ab99a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMzo1MDowMVrOF3NGNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMzo1MDowMVrOF3NGNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQzMDU4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            /**PROTOBUF\n          \n          \n            \n            /**", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r393430580", "createdAt": "2020-03-17T03:50:01Z", "author": {"login": "daneshk"}, "path": "misc/protobuf-ballerina/src/main/java/org/ballerinalang/protobuf/BalGenerationConstants.java", "diffHunk": "@@ -19,7 +19,7 @@\n \n import java.io.File;\n \n-/**\n+/**PROTOBUF", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cf171f7c6c55ffbac3066de8383d17df7ab99a1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca", "author": {"user": {"login": "daksithj", "name": "Daksith Jayasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca", "committedDate": "2020-03-17T05:31:10Z", "message": "Add gateway proxy generation to gRPC - Changed a javadoc comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5OTk0Mzgy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-379994382", "createdAt": "2020-03-24T04:34:45Z", "commit": {"oid": "f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNDozNDo0NVrOF6gtsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNDozNDo0NVrOF6gtsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg5NzcxMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    createTempDirectory(protobufHome);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r396897713", "createdAt": "2020-03-24T04:34:45Z", "author": {"login": "daneshk"}, "path": "misc/protobuf-ballerina/src/main/java/org/ballerinalang/protobuf/cmd/GrpcCmd.java", "diffHunk": "@@ -218,6 +219,9 @@ private File createTempDirectory() {\n         createTempDirectory(protobufHome);\n         File compilerHome = new File(protobufHome, TEMP_COMPILER_DIRECTORY);\n         createTempDirectory(compilerHome);\n+        File apiHome = new File(googleHome, TEMP_API_DIRECTORY);\n+        createTempDirectory(protobufHome);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMDEwNTEw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-380010510", "createdAt": "2020-03-24T05:34:47Z", "commit": {"oid": "f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNTozNDo0N1rOF6hiFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNTozNDo0N1rOF6hiFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxMTEyNQ==", "bodyText": "Instead of passing another parameter to this method. Shall we add a new setter method in Method.Builder class like setMethodDescriptor.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r396911125", "createdAt": "2020-03-24T05:34:47Z", "author": {"login": "daneshk"}, "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/components/Method.java", "diffHunk": "@@ -32,20 +49,31 @@\n     private String methodName;\n     private String methodId;\n     private String inputType;\n+    private boolean primitiveInput;\n     private String outputType;\n     private MethodDescriptor.MethodType methodType;\n+    private String httpMethod;\n+    private String httpPath;\n+    private String httpBody;\n+    private List<Param> paramSet;\n \n-    private Method(String methodName, String methodId, String inputType, String outputType, MethodDescriptor\n-            .MethodType methodType) {\n+    private Method(String methodName, String methodId, String inputType, boolean primitiveInput, String outputType,\n+                   MethodDescriptor.MethodType methodType, String httpMethod, String httpPath, String httpBody,\n+                   List<Param> paramSet) {\n         this.methodName = methodName;\n         this.methodType = methodType;\n         this.methodId = methodId;\n         this.inputType = inputType;\n+        this.primitiveInput = primitiveInput;\n         this.outputType = outputType;\n+        this.httpMethod = httpMethod;\n+        this.httpPath = httpPath;\n+        this.httpBody = httpBody;\n+        this.paramSet = paramSet;\n     }\n \n-    public static Method.Builder newBuilder(String methodId) {\n-        return new Method.Builder(methodId);\n+    public static Method.Builder newBuilder(String methodId, Map<String, Message> messageMap) {\n+        return new Method.Builder(methodId, messageMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMDEzMTQz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-380013143", "createdAt": "2020-03-24T05:43:21Z", "commit": {"oid": "f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNTo0MzoyMVrOF6hqtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNTo0MzoyMVrOF6hqtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxMzMzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                stubFileObject.setEnumList(enumList);\n          \n          \n            \n                                stubFileObject.setDescriptors(descriptors);\n          \n          \n            \n                                if (!stubRootDescriptor.isEmpty()) {\n          \n          \n            \n                                    stubFileObject.setRootDescriptor(stubRootDescriptor);\n          \n          \n            \n                                }\n          \n      \n    \n    \n  \n\nThis is already handled in line number 247", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r396913332", "createdAt": "2020-03-24T05:43:21Z", "author": {"login": "daneshk"}, "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/BallerinaFileBuilder.java", "diffHunk": "@@ -222,12 +230,20 @@ private void computeSourceContent(byte[] descriptor, String mode) throws CodeBui\n                     writeOutputFile(new ClientFile(serviceDescriptor.getName(), isUnaryContains),\n                             DEFAULT_SAMPLE_DIR,\n                             SAMPLE_CLIENT_TEMPLATE_NAME, clientFilePath);\n-\n+                } else if (GRPC_PROXY.equals(mode)) {\n+                    stubFileObject.setEnumList(enumList);\n+                    stubFileObject.setDescriptors(descriptors);\n+                    if (!stubRootDescriptor.isEmpty()) {\n+                        stubFileObject.setRootDescriptor(stubRootDescriptor);\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMDE4ODIw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-380018820", "createdAt": "2020-03-24T06:01:33Z", "commit": {"oid": "f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjowMTozM1rOF6h9jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjowMTozM1rOF6h9jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxODE1OA==", "bodyText": "Shall we keep the method name as setMessageList here?\nSince we are setting a message list, I feel the previous name more suits.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r396918158", "createdAt": "2020-03-24T06:01:33Z", "author": {"login": "daneshk"}, "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/components/AbstractStub.java", "diffHunk": "@@ -85,8 +82,12 @@ public void setDescriptors(Set<Descriptor> descriptors) {\n         return descriptors;\n     }\n \n-    public void setMessageList(List<Message> messageList) {\n-        this.messageList = messageList;\n+    public void setMessageMap(List<Message> messageList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eac8977dc505b7b3b621f4a0c4319e5daad8b93b", "author": {"user": {"login": "daksithj", "name": "Daksith Jayasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eac8977dc505b7b3b621f4a0c4319e5daad8b93b", "committedDate": "2020-03-25T04:57:47Z", "message": "Add gateway proxy generation to gRPC - resolved merge conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91ed2b58f2b931b0ccb450f635eb0e37d6b40631", "author": {"user": {"login": "daksithj", "name": "Daksith Jayasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/91ed2b58f2b931b0ccb450f635eb0e37d6b40631", "committedDate": "2020-03-25T06:04:25Z", "message": "Add gateway proxy generation to gRPC - made some changes according to review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2216a3a9728ada44e78bd8cb565c29d42bc88b82", "author": {"user": {"login": "daksithj", "name": "Daksith Jayasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2216a3a9728ada44e78bd8cb565c29d42bc88b82", "committedDate": "2020-03-25T07:01:13Z", "message": "Add gateway proxy generation to gRPC - made some changes according to review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODk4MTIz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#pullrequestreview-380898123", "createdAt": "2020-03-25T07:09:31Z", "commit": {"oid": "2216a3a9728ada44e78bd8cb565c29d42bc88b82"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3881, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}