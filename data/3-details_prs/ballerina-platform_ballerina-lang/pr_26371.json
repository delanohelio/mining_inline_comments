{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MTg1MjU4", "number": 26371, "title": "Support cyclic union types", "bodyText": "Purpose\npart of #23691 - Improve support for clone, cloneReadOnly\nFixes #23690 - Allow cyclic reference in unions typedef\nFixes #22429 - Remove error from anydata\nFixes #24337 - Replace error detail type from (anydata|readonly) to Cloneable\nFixes #24339 - Replace type of annotation tag from (anydata|readonly) to Cloanable\nFixes #24338 - Replace static type of send action from (anydata|readonly) to Cloneable\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\nDone a hack to finish the implementation.\n#27786 TypeParam flag is propagated to original type\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-10-15T15:20:09Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371", "merged": true, "mergeCommit": {"oid": "ddda052fbcf111b9a30149caab8215e4bfd50289"}, "closed": true, "closedAt": "2021-01-15T06:42:31Z", "author": {"login": "KRVPerera"}, "timelineItems": {"totalCount": 205, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdwQs1RgFqTU2ODc5MzQwMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdwSg86gFqTU2ODg2NDMyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4NzkzNDAw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#pullrequestreview-568793400", "createdAt": "2021-01-15T03:30:27Z", "commit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwMzozMDoyN1rOIT_5Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwMzo1Mjo1NFrOIUAObQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg0MDc0Mw==", "bodyText": "Shall we introduce a separate method checkFillerValue method for BUnionType instead? We have several other similar methods too.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r557840743", "createdAt": "2021-01-15T03:30:27Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/TypeChecker.java", "diffHunk": "@@ -2862,44 +2875,49 @@ private static boolean hasFillerValue(Type type, List<Type> unanalyzedTypes) {\n                 BTupleType tupleType = (BTupleType) type;\n                 return tupleType.getTupleTypes().stream().allMatch(TypeChecker::hasFillerValue);\n             case TypeTags.UNION_TAG:\n-                return checkFillerValue((BUnionType) type);\n+                return checkFillerValue((BUnionType) type, unanalyzedTypes);\n             default:\n                 return false;\n         }\n     }\n \n-    private static boolean checkFillerValue(BUnionType type) {\n-        // NIL is a member.\n-        if (type.isNullable()) {\n-            return true;\n-        }\n-        // All members are of same type.\n-        Iterator<Type> iterator = type.getMemberTypes().iterator();\n-        Type firstMember;\n-        for (firstMember = iterator.next(); iterator.hasNext(); ) {\n-            if (!isSameType(firstMember, iterator.next())) {\n-                return false;\n-            }\n-        }\n-        // Control reaching this point means there is only one type in the union.\n-        return isValueType(firstMember) && hasFillerValue(firstMember);\n-    }\n+    private static boolean checkFillerValue(BType type, List<Type> unAnalyzedTypes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg0MjgzNQ==", "bodyText": "Can we do this change now or should we create an issue?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r557842835", "createdAt": "2021-01-15T03:39:02Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/types/BUnionType.java", "diffHunk": "@@ -53,21 +64,219 @@ public BUnionType() {\n         this.readonly = false;\n     }\n \n+    /**\n+     * Create a {@code BUnionType} which represents the union type.\n+     *\n+     * @param memberTypes of the union type\n+     * @param typeFlags flags associated with the type\n+     */\n+    public BUnionType(List<Type> memberTypes, int typeFlags) {\n+        this(memberTypes, typeFlags, false, false);\n+    }\n+\n+    public BUnionType(List<Type> memberTypes, int typeFlags, boolean readonly,  boolean isCyclic) {\n+        super(null, null, Object.class);\n+        this.typeFlags = typeFlags;\n+        this.readonly = readonly;\n+        setMemberTypes(memberTypes);\n+        this.isCyclic = isCyclic;\n+    }\n+\n+    public BUnionType(List<Type> memberTypes, int typeFlags, boolean readonly,  boolean isCyclic,\n+                      Set<Type> unresolvedTypes) {\n+        super(null, null, Object.class);\n+        this.typeFlags = typeFlags;\n+        this.readonly = readonly;\n+        setMemberTypes(memberTypes);\n+        this.isCyclic = isCyclic;\n+    }\n+\n     public BUnionType(List<Type> memberTypes) {\n         this(memberTypes, false);\n     }\n \n+    public BUnionType(List<Type> memberTypes, String typeName, int typeFlags, boolean readonly, boolean isCyclic) {\n+        super(typeName, null, Object.class);\n+        this.typeFlags = typeFlags;\n+        this.readonly = readonly;\n+        this.isCyclic = isCyclic;\n+        setMemberTypes(memberTypes);\n+        this.typeName = typeName;\n+    }\n+\n+    public BUnionType(String typeName, Module pkg, List<Type> memberTypes) {\n+        super(typeName, pkg, Object.class);\n+        this.readonly = false;\n+        setMemberTypes(memberTypes);\n+    }\n+\n     public BUnionType(List<Type> memberTypes, boolean readonly) {\n-        this(memberTypes, 0, readonly);\n-        boolean nilable = false;\n-        boolean isAnydata = true;\n-        boolean isPureType = true;\n+        this(memberTypes, 0, readonly, false);\n+    }\n+\n+    public BUnionType(List<Type> memberTypes, boolean readonly, boolean isCyclic, Set<Type> unresolvedTypes) {\n+        this(memberTypes, 0, readonly, isCyclic, unresolvedTypes);\n+    }\n+\n+    public BUnionType(String typeName, Module pkg, boolean readonly, Class<? extends Object> valueClass) {\n+        super(typeName, pkg, valueClass);\n+        this.readonly = readonly;\n+    }\n+\n+    public BUnionType(Type[] memberTypes, int typeFlags, boolean readonly, boolean isCyclic) {\n+        this(Arrays.asList(memberTypes), typeFlags, readonly, isCyclic);\n+    }\n+\n+    public BUnionType(Type[] memberTypes, int typeFlags) {\n+        this(memberTypes, typeFlags, false, false);\n+    }\n+\n+    /**\n+     * Constructor used when defining union type defs where cyclic reference is possible.\n+     *\n+     * @param typeFlags flags associated with the type\n+     * @param readonly boolean represents if the type is readonly\n+     * @param isCyclic boolean represents if the type is cyclic\n+     */\n+    public BUnionType(int typeFlags, boolean readonly, boolean isCyclic) {\n+        super(null, null, Object.class);\n+        this.typeFlags = typeFlags;\n+        this.readonly = readonly;\n+        this.memberTypes = new ArrayList<>(2);\n+        this.isCyclic = isCyclic;\n+    }\n+\n+    /**\n+     * Constructor used when defining union type defs where cyclic reference is possible.\n+     *\n+     * @param unionType flags associated with the type\n+     */\n+    public BUnionType(BUnionType unionType) {\n+        super(unionType.typeName, unionType.pkg, unionType.valueClass);\n+        this.typeFlags = unionType.typeFlags;\n+        this.readonly = unionType.readonly;\n+        this.memberTypes = new ArrayList<>(unionType.memberTypes.size());\n+        this.mergeUnionType(unionType);\n+    }\n+\n+    /**\n+     * Constructor used when defining union type defs where cyclic reference is possible.\n+     *\n+     * @param unionType flags associated with the type\n+     * @param typeName typename associated with the type\n+     */\n+    public BUnionType(BUnionType unionType, String typeName) {\n+        super(typeName, unionType.pkg, unionType.valueClass);\n+        this.readonly = unionType.readonly;\n+        this.typeFlags = unionType.typeFlags;\n+        this.memberTypes = new ArrayList<>(unionType.memberTypes.size());\n+        this.mergeUnionType(unionType);\n+    }\n+\n+    /**\n+     * Constructor used when defining union type defs where cyclic reference is possible.\n+     *\n+     * @param name typename\n+     * @param typeFlags flags associated with the type\n+     * @param readonly boolean represents if the type is readonly\n+     * @param isCyclic boolean represents if the type is cyclic\n+     */\n+    public BUnionType(String name, int typeFlags, boolean readonly, boolean isCyclic) {\n+        super(name, null, Object.class);\n+        this.typeFlags = typeFlags;\n+        this.readonly = readonly;\n+        this.memberTypes = null;\n+        this.isCyclic = isCyclic;\n+    }\n+\n+    public BUnionType(Type[] memberTypes, String name, int typeFlags, boolean readonly, boolean isCyclic) {\n+        this(Arrays.asList(memberTypes), name, typeFlags, readonly, isCyclic);\n+    }\n+\n+    public void setMemberTypes(Type[] members) {\n+        if (members == null) {\n+            return;\n+        }\n+        this.memberTypes = readonly ? getReadOnlyTypes(members) : Arrays.asList(members);\n+        setFlagsBasedOnMembers();\n+    }\n+\n+    public void setMemberTypes(List<Type> members) {\n+        if (members == null) {\n+            return;\n+        }\n+        if (members.isEmpty()) {\n+            this.memberTypes = members;\n+            return;\n+        }\n+        this.resolvingReadonly = true;\n+        this.memberTypes = readonly ? getReadOnlyTypes(members, new HashSet<>(members.size())) : members;\n+        this.resolvingReadonly = false;\n+        setFlagsBasedOnMembers();\n+    }\n+\n+    public void setMemberTypes(List<Type> members, Set<Type> unresolvedTypes) {\n+        if (members == null) {\n+            return;\n+        }\n+        if (members.isEmpty()) {\n+            this.memberTypes = members;\n+            return;\n+        }\n+        this.resolvingReadonly = true;\n+        this.memberTypes = readonly ? getReadOnlyTypes(members, unresolvedTypes) : members;\n+        this.resolvingReadonly = false;\n+        setFlagsBasedOnMembers();\n+    }\n+\n+    public void setCyclic(boolean isCyclic) {\n+        this.isCyclic = isCyclic;\n+    }\n+\n+    public boolean isNilable() {\n+        if (memberTypes == null || memberTypes.isEmpty()) {\n+            return true;\n+        }\n+\n+        if (this.resolving) {\n+            return false;\n+        }\n+\n+        // TODO: use the flag", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "originalPosition": 228}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg0Mjk0MQ==", "bodyText": "Shall we avoid single character variable names?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r557842941", "createdAt": "2021-01-15T03:39:35Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/types/BUnionType.java", "diffHunk": "@@ -53,21 +64,219 @@ public BUnionType() {\n         this.readonly = false;\n     }\n \n+    /**\n+     * Create a {@code BUnionType} which represents the union type.\n+     *\n+     * @param memberTypes of the union type\n+     * @param typeFlags flags associated with the type\n+     */\n+    public BUnionType(List<Type> memberTypes, int typeFlags) {\n+        this(memberTypes, typeFlags, false, false);\n+    }\n+\n+    public BUnionType(List<Type> memberTypes, int typeFlags, boolean readonly,  boolean isCyclic) {\n+        super(null, null, Object.class);\n+        this.typeFlags = typeFlags;\n+        this.readonly = readonly;\n+        setMemberTypes(memberTypes);\n+        this.isCyclic = isCyclic;\n+    }\n+\n+    public BUnionType(List<Type> memberTypes, int typeFlags, boolean readonly,  boolean isCyclic,\n+                      Set<Type> unresolvedTypes) {\n+        super(null, null, Object.class);\n+        this.typeFlags = typeFlags;\n+        this.readonly = readonly;\n+        setMemberTypes(memberTypes);\n+        this.isCyclic = isCyclic;\n+    }\n+\n     public BUnionType(List<Type> memberTypes) {\n         this(memberTypes, false);\n     }\n \n+    public BUnionType(List<Type> memberTypes, String typeName, int typeFlags, boolean readonly, boolean isCyclic) {\n+        super(typeName, null, Object.class);\n+        this.typeFlags = typeFlags;\n+        this.readonly = readonly;\n+        this.isCyclic = isCyclic;\n+        setMemberTypes(memberTypes);\n+        this.typeName = typeName;\n+    }\n+\n+    public BUnionType(String typeName, Module pkg, List<Type> memberTypes) {\n+        super(typeName, pkg, Object.class);\n+        this.readonly = false;\n+        setMemberTypes(memberTypes);\n+    }\n+\n     public BUnionType(List<Type> memberTypes, boolean readonly) {\n-        this(memberTypes, 0, readonly);\n-        boolean nilable = false;\n-        boolean isAnydata = true;\n-        boolean isPureType = true;\n+        this(memberTypes, 0, readonly, false);\n+    }\n+\n+    public BUnionType(List<Type> memberTypes, boolean readonly, boolean isCyclic, Set<Type> unresolvedTypes) {\n+        this(memberTypes, 0, readonly, isCyclic, unresolvedTypes);\n+    }\n+\n+    public BUnionType(String typeName, Module pkg, boolean readonly, Class<? extends Object> valueClass) {\n+        super(typeName, pkg, valueClass);\n+        this.readonly = readonly;\n+    }\n+\n+    public BUnionType(Type[] memberTypes, int typeFlags, boolean readonly, boolean isCyclic) {\n+        this(Arrays.asList(memberTypes), typeFlags, readonly, isCyclic);\n+    }\n+\n+    public BUnionType(Type[] memberTypes, int typeFlags) {\n+        this(memberTypes, typeFlags, false, false);\n+    }\n+\n+    /**\n+     * Constructor used when defining union type defs where cyclic reference is possible.\n+     *\n+     * @param typeFlags flags associated with the type\n+     * @param readonly boolean represents if the type is readonly\n+     * @param isCyclic boolean represents if the type is cyclic\n+     */\n+    public BUnionType(int typeFlags, boolean readonly, boolean isCyclic) {\n+        super(null, null, Object.class);\n+        this.typeFlags = typeFlags;\n+        this.readonly = readonly;\n+        this.memberTypes = new ArrayList<>(2);\n+        this.isCyclic = isCyclic;\n+    }\n+\n+    /**\n+     * Constructor used when defining union type defs where cyclic reference is possible.\n+     *\n+     * @param unionType flags associated with the type\n+     */\n+    public BUnionType(BUnionType unionType) {\n+        super(unionType.typeName, unionType.pkg, unionType.valueClass);\n+        this.typeFlags = unionType.typeFlags;\n+        this.readonly = unionType.readonly;\n+        this.memberTypes = new ArrayList<>(unionType.memberTypes.size());\n+        this.mergeUnionType(unionType);\n+    }\n+\n+    /**\n+     * Constructor used when defining union type defs where cyclic reference is possible.\n+     *\n+     * @param unionType flags associated with the type\n+     * @param typeName typename associated with the type\n+     */\n+    public BUnionType(BUnionType unionType, String typeName) {\n+        super(typeName, unionType.pkg, unionType.valueClass);\n+        this.readonly = unionType.readonly;\n+        this.typeFlags = unionType.typeFlags;\n+        this.memberTypes = new ArrayList<>(unionType.memberTypes.size());\n+        this.mergeUnionType(unionType);\n+    }\n+\n+    /**\n+     * Constructor used when defining union type defs where cyclic reference is possible.\n+     *\n+     * @param name typename\n+     * @param typeFlags flags associated with the type\n+     * @param readonly boolean represents if the type is readonly\n+     * @param isCyclic boolean represents if the type is cyclic\n+     */\n+    public BUnionType(String name, int typeFlags, boolean readonly, boolean isCyclic) {\n+        super(name, null, Object.class);\n+        this.typeFlags = typeFlags;\n+        this.readonly = readonly;\n+        this.memberTypes = null;\n+        this.isCyclic = isCyclic;\n+    }\n+\n+    public BUnionType(Type[] memberTypes, String name, int typeFlags, boolean readonly, boolean isCyclic) {\n+        this(Arrays.asList(memberTypes), name, typeFlags, readonly, isCyclic);\n+    }\n+\n+    public void setMemberTypes(Type[] members) {\n+        if (members == null) {\n+            return;\n+        }\n+        this.memberTypes = readonly ? getReadOnlyTypes(members) : Arrays.asList(members);\n+        setFlagsBasedOnMembers();\n+    }\n+\n+    public void setMemberTypes(List<Type> members) {\n+        if (members == null) {\n+            return;\n+        }\n+        if (members.isEmpty()) {\n+            this.memberTypes = members;\n+            return;\n+        }\n+        this.resolvingReadonly = true;\n+        this.memberTypes = readonly ? getReadOnlyTypes(members, new HashSet<>(members.size())) : members;\n+        this.resolvingReadonly = false;\n+        setFlagsBasedOnMembers();\n+    }\n+\n+    public void setMemberTypes(List<Type> members, Set<Type> unresolvedTypes) {\n+        if (members == null) {\n+            return;\n+        }\n+        if (members.isEmpty()) {\n+            this.memberTypes = members;\n+            return;\n+        }\n+        this.resolvingReadonly = true;\n+        this.memberTypes = readonly ? getReadOnlyTypes(members, unresolvedTypes) : members;\n+        this.resolvingReadonly = false;\n+        setFlagsBasedOnMembers();\n+    }\n+\n+    public void setCyclic(boolean isCyclic) {\n+        this.isCyclic = isCyclic;\n+    }\n+\n+    public boolean isNilable() {\n+        if (memberTypes == null || memberTypes.isEmpty()) {\n+            return true;\n+        }\n+\n+        if (this.resolving) {\n+            return false;\n+        }\n+\n+        // TODO: use the flag\n+        if (nullable == null) {\n+            nullable = checkNillable(memberTypes);\n+        }\n+        return nullable;\n+    }\n+\n+    private boolean checkNillable(List<Type> memberTypes) {\n+        this.resolving = true;\n+        for (Type t : memberTypes) {\n+            if (t.isNilable()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "originalPosition": 238}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg0MzE5Mg==", "bodyText": "Can we remove this?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r557843192", "createdAt": "2021-01-15T03:40:43Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/values/ReadOnlyUtils.java", "diffHunk": "@@ -238,9 +272,15 @@ private static BIntersectionType setImmutableIntersectionType(Type type, Set<Typ\n                 return (BIntersectionType) type.getImmutableType();\n             default:\n                 BUnionType origUnionType = (BUnionType) type;\n+\n+\n                 Type resultantImmutableType;\n \n                 List<Type> readOnlyMemTypes = new ArrayList<>();\n+//                resultantImmutableType = new BUnionType(null, true);\n+//                BUnionType unionImmutableType = (BUnionType) resultantImmutableType;\n+//                unionImmutableType.setMemberTypes(readOnlyMemTypes);\n+//                unionImmutableType.isCyclic = origUnionType.isCyclic;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg0MzQzNA==", "bodyText": "Shall we remove this?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r557843434", "createdAt": "2021-01-15T03:41:54Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/elements/MarkdownDocAttachment.java", "diffHunk": "@@ -32,8 +32,12 @@\n     public List<Parameter> parameters;\n     public String returnValueDescription;\n \n-    public MarkdownDocAttachment() {\n-        this.parameters = new ArrayList<>();\n+//    public MarkdownDocAttachment() {\n+//        this.parameters = new ArrayList<>();\n+//    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg0MzcyNw==", "bodyText": "Why do we need this? Error shouldn't depend on value, right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r557843727", "createdAt": "2021-01-15T03:43:17Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/CompilerDriver.java", "diffHunk": "@@ -225,7 +231,11 @@ void loadLangModules(List<PackageID> pkgIdList) {\n             symbolTable.langErrorModuleSymbol = pkgLoader.loadPackageSymbol(ERROR, null, null);\n         }\n \n-        symResolver.reloadIntRangeType();\n+        if (langLib.equals(ERROR)) {\n+            symbolTable.langValueModuleSymbol = pkgLoader.loadPackageSymbol(VALUE, null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg0MzkwOA==", "bodyText": "Missing licence header. Please check other new files too.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r557843908", "createdAt": "2021-01-15T03:44:08Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/IsAnydataUniqueVisitor.java", "diffHunk": "@@ -0,0 +1,343 @@\n+package org.wso2.ballerinalang.compiler.semantics.analyzer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg0NDAyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * @since slp4\n          \n          \n            \n             * @since 2.0.0\n          \n      \n    \n    \n  \n\nPlease check wherever applicable.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r557844024", "createdAt": "2021-01-15T03:44:32Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/IsAnydataUniqueVisitor.java", "diffHunk": "@@ -0,0 +1,343 @@\n+package org.wso2.ballerinalang.compiler.semantics.analyzer;\n+\n+import org.wso2.ballerinalang.compiler.semantics.model.UniqueTypeVisitor;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BAnnotationType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BAnyType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BAnydataType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BArrayType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BBuiltInRefType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BErrorType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BField;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BFiniteType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BFutureType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BHandleType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BIntSubType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BIntersectionType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BInvokableType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BJSONType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BMapType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BNeverType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BNilType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BNoType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BObjectType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BPackageType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BParameterizedType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BRecordType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BStreamType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BStructureType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BTableType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BTupleType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BTypedescType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BUnionType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BXMLSubType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BXMLType;\n+import org.wso2.ballerinalang.compiler.tree.expressions.BLangExpression;\n+import org.wso2.ballerinalang.compiler.util.TypeTags;\n+\n+import java.util.HashSet;\n+\n+/**\n+ * IsAnydataUniqueVisitor to check if a type is anydata.\n+ *\n+ * This is introduced to handle cyclic unions.\n+ * @since slp4", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg0NDE1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean isanydata(BType type) {\n          \n          \n            \n                private boolean isAnydata(BType type) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r557844150", "createdAt": "2021-01-15T03:45:07Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/IsAnydataUniqueVisitor.java", "diffHunk": "@@ -0,0 +1,343 @@\n+package org.wso2.ballerinalang.compiler.semantics.analyzer;\n+\n+import org.wso2.ballerinalang.compiler.semantics.model.UniqueTypeVisitor;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BAnnotationType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BAnyType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BAnydataType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BArrayType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BBuiltInRefType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BErrorType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BField;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BFiniteType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BFutureType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BHandleType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BIntSubType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BIntersectionType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BInvokableType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BJSONType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BMapType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BNeverType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BNilType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BNoType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BObjectType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BPackageType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BParameterizedType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BRecordType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BStreamType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BStructureType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BTableType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BTupleType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BTypedescType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BUnionType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BXMLSubType;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BXMLType;\n+import org.wso2.ballerinalang.compiler.tree.expressions.BLangExpression;\n+import org.wso2.ballerinalang.compiler.util.TypeTags;\n+\n+import java.util.HashSet;\n+\n+/**\n+ * IsAnydataUniqueVisitor to check if a type is anydata.\n+ *\n+ * This is introduced to handle cyclic unions.\n+ * @since slp4\n+ */\n+public class IsAnydataUniqueVisitor implements UniqueTypeVisitor<Boolean> {\n+\n+    private HashSet<BType> visited;\n+    private boolean isAnydata;\n+\n+    public IsAnydataUniqueVisitor() {\n+        visited = new HashSet<>();\n+        isAnydata = true;\n+    }\n+\n+    public IsAnydataUniqueVisitor(HashSet<BType> visited) {\n+        this.visited = visited;\n+        isAnydata = true;\n+    }\n+\n+    private boolean isanydata(BType type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg0NDU2Ng==", "bodyText": "Why are we commenting these out? These are valid errors, right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r557844566", "createdAt": "2021-01-15T03:46:34Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/builtinoperations/CloneOperationTest.java", "diffHunk": "@@ -317,11 +317,11 @@ public void testCloneMap() {\n \n     @Test\n     public void testCloneNegative() {\n-        Assert.assertEquals(negativeResult.getErrorCount(), 3);\n+        Assert.assertEquals(negativeResult.getErrorCount(), 1);\n         BAssertUtil.validateError(negativeResult, 0, \"too many arguments in call to 'clone()'\", 19, 13);\n-        BAssertUtil.validateError(negativeResult, 1, \"incompatible types: expected 'anydata', found 'typedesc<int>'\",\n-                                  24, 23);\n-        BAssertUtil.validateError(negativeResult, 2, \"incompatible types: expected 'anydata', found 'error'\", 29, 15);\n+//        BAssertUtil.validateError(negativeResult, 1, \"incompatible types: expected 'anydata', found 'typedesc<int>'\",\n+//                                  24, 23);\n+//        BAssertUtil.validateError(negativeResult, 2, \"incompatible types: expected 'anydata', found 'error'\", 29, 15);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg0NTMwMA==", "bodyText": "Unnecessary changes?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r557845300", "createdAt": "2021-01-15T03:49:12Z", "author": {"login": "MaryamZi"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -456,7 +456,8 @@ public class Entity {\n     #\n     # + return - All header names as a `string[]`\n     public function getHeaderNames() returns @tainted string[] {\n-        return self.headerNames.clone();\n+        return <string[]>self.headerNames.clone();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg0NTYyNQ==", "bodyText": "This too is a valid error?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r557845625", "createdAt": "2021-01-15T03:50:30Z", "author": {"login": "MaryamZi"}, "path": "langlib/langlib-test/src/test/java/org/ballerinalang/langlib/test/TypeParamTest.java", "diffHunk": "@@ -40,8 +40,6 @@ public void testTypeParamNegative() {\n         CompileResult result = BCompileUtil.compile(\"test-src/type-param/type_param_test_negative.bal\");\n         int err = 0;\n         BAssertUtil.validateError(result, err++, \"incompatible types: expected 'boolean[]', found 'int[]'\", 21, 20);\n-        BAssertUtil.validateError(result, err++, \"incompatible types: expected 'anydata', found 'function (string) \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg0NjEyNQ==", "bodyText": "There's a duplicate Cloneable definition in the spec for the error module.\nhttps://github.com/ballerina-platform/ballerina-spec/blob/master/lang/lib/error.bal#L21", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r557846125", "createdAt": "2021-01-15T03:52:54Z", "author": {"login": "MaryamZi"}, "path": "langlib/lang.error/src/main/ballerina/error.bal", "diffHunk": "@@ -15,10 +15,14 @@\n // under the License.\n \n import ballerina/java;\n+import ballerina/lang.'value as value;\n+\n+# The type of value to which `clone` and `cloneReadOnly` can be applied.\n+type __Cloneable1 readonly|xml|__Cloneable1[]|map<__Cloneable1>|table<map<__Cloneable1>>;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4ODE3OTQ2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#pullrequestreview-568817946", "createdAt": "2021-01-15T05:01:35Z", "commit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwNTowMTozNVrOIUBQ2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwNTowMTozNVrOIUBQ2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg2MzEzMA==", "bodyText": "I belive this one and the below one need if condition. if:  has_name == 1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r557863130", "createdAt": "2021-01-15T05:01:35Z", "author": {"login": "rdhananjaya"}, "path": "docs/bir-spec/src/main/resources/kaitai/bir.ksy", "diffHunk": "@@ -273,6 +273,14 @@ types:\n         type: s4\n   type_union:\n     seq:\n+      - id: is_cyclic\n+        type: u1\n+      - id: has_name\n+        type: s1\n+      - id: pkd_id_cp_index", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21b98bfb0338955e173d88c5f76a3acb7f0af84b", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/21b98bfb0338955e173d88c5f76a3acb7f0af84b", "committedDate": "2021-01-15T05:15:27Z", "message": "Fix code review suggestion for cyclic unions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4ODI1Nzgz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#pullrequestreview-568825783", "createdAt": "2021-01-15T05:27:56Z", "commit": {"oid": "21b98bfb0338955e173d88c5f76a3acb7f0af84b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4ODY0MzIx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#pullrequestreview-568864321", "createdAt": "2021-01-15T05:59:53Z", "commit": {"oid": "21b98bfb0338955e173d88c5f76a3acb7f0af84b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwNTo1OTo1M1rOIUCOBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwNTo1OTo1M1rOIUCOBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg3ODc5MA==", "bodyText": "need to cleanup", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r557878790", "createdAt": "2021-01-15T05:59:53Z", "author": {"login": "KRVPerera"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -456,7 +456,7 @@ public class Entity {\n     #\n     # + return - All header names as a `string[]`\n     public function getHeaderNames() returns @tainted string[] {\n-        return <string[]>self.headerNames.clone();\n+        return self.headerNames.clone();\n         //return self.headerNames.clone();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21b98bfb0338955e173d88c5f76a3acb7f0af84b"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f95ad4a1c8e1f41cd7aac00a4f472760ea7d2ee2", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f95ad4a1c8e1f41cd7aac00a4f472760ea7d2ee2", "committedDate": "2020-12-01T19:03:31Z", "message": "Add table type as anydata type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a75fd4d5f13467aed20281c48103f4468c61eaf5", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a75fd4d5f13467aed20281c48103f4468c61eaf5", "committedDate": "2020-12-01T19:03:49Z", "message": "Fix spotbugs issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9624a38731d1764cdc04c0d30893ccd55ab45427", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9624a38731d1764cdc04c0d30893ccd55ab45427", "committedDate": "2020-12-01T19:04:14Z", "message": "Fix LangLibFunctionTests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13d967d1449f1b89eab1ec4a8152ac8b50588cb0", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/13d967d1449f1b89eab1ec4a8152ac8b50588cb0", "committedDate": "2020-12-01T19:25:45Z", "message": "Fix AnnotationDeclarationTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5522464480a56a7788fed69dd3fa7e1181dd9c44", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5522464480a56a7788fed69dd3fa7e1181dd9c44", "committedDate": "2020-12-01T20:44:19Z", "message": "Fix copying builting anydata type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fd012fd3b567caaf1834c8c02af57c523205b51", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5fd012fd3b567caaf1834c8c02af57c523205b51", "committedDate": "2020-12-02T10:58:19Z", "message": "Add package data to cyclic unions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ec33a7e1722cf22f7d46fd05dbd2e77aad0c9c0", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1ec33a7e1722cf22f7d46fd05dbd2e77aad0c9c0", "committedDate": "2020-12-03T05:15:11Z", "message": "Fix intersection assignability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04e487c7534dd82f342e592df6bc653a4f8d369a", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/04e487c7534dd82f342e592df6bc653a4f8d369a", "committedDate": "2020-12-03T06:05:22Z", "message": "Fix ambiguous type '(anydata|map<anydata>)'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cad58704f4a038cf11e7120d54debfa1c21f965", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6cad58704f4a038cf11e7120d54debfa1c21f965", "committedDate": "2020-12-03T07:11:24Z", "message": "Fix intersection type double ignoring of fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d858a9db282441c0fc18dd231d4ff424610ae776", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d858a9db282441c0fc18dd231d4ff424610ae776", "committedDate": "2020-12-03T07:48:25Z", "message": "Fix isAnydata mapping constraints"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1510dd68e30c48478036f3f7132869538130c83", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b1510dd68e30c48478036f3f7132869538130c83", "committedDate": "2020-12-04T20:52:21Z", "message": "Fix identifying Types without names as equal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbeb306e864675a5747426f2e27e526ce4811eae", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bbeb306e864675a5747426f2e27e526ce4811eae", "committedDate": "2020-12-07T21:45:45Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "094117aa2bb924221ca2e88ec38dde85c4104d69", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/094117aa2bb924221ca2e88ec38dde85c4104d69", "committedDate": "2020-12-07T21:46:35Z", "message": "Resolve conflict with master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40937954c9d43a352e8725d73703cfcbd361998a", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/40937954c9d43a352e8725d73703cfcbd361998a", "committedDate": "2020-12-07T22:02:14Z", "message": "Resolve conflict with master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a6e8964c5c346fae375b1dbcbc3589072ff84ee", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6a6e8964c5c346fae375b1dbcbc3589072ff84ee", "committedDate": "2020-12-07T22:14:58Z", "message": "Fix table type emitting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6584f872cce3d35bd585747da50e052497ea4ae3", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6584f872cce3d35bd585747da50e052497ea4ae3", "committedDate": "2020-12-07T22:22:42Z", "message": "Resolve conflict with master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f1b7b7f0d093218b4c0b337f4fbc9f6295b3218", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4f1b7b7f0d093218b4c0b337f4fbc9f6295b3218", "committedDate": "2020-12-07T22:46:52Z", "message": "Fix import order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05f7d7bf5454d932a6622d2e929ab29dfd34e37a", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/05f7d7bf5454d932a6622d2e929ab29dfd34e37a", "committedDate": "2020-12-10T05:32:01Z", "message": "Fix type param issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06ff14bf850a04d0e4cfccffa02698a751bb82eb", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/06ff14bf850a04d0e4cfccffa02698a751bb82eb", "committedDate": "2020-12-11T09:11:43Z", "message": "Fix empty union create flags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95bfe9a61c6f9ec1bf0daabd7f102044c8de99ab", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/95bfe9a61c6f9ec1bf0daabd7f102044c8de99ab", "committedDate": "2020-12-11T10:39:47Z", "message": "Fix unresolved int range problem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb53147eedaf5e034c06f5630cbe2d639d04ebd8", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bb53147eedaf5e034c06f5630cbe2d639d04ebd8", "committedDate": "2020-12-13T11:09:11Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2baaeff4f8a59ecd1a3434d6145d7e9267bc61fb", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2baaeff4f8a59ecd1a3434d6145d7e9267bc61fb", "committedDate": "2020-12-17T00:34:39Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73bbdea5ca3d1e9c5ea14db310e40abbddcc1fb5", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/73bbdea5ca3d1e9c5ea14db310e40abbddcc1fb5", "committedDate": "2020-12-17T09:00:06Z", "message": "Define operators in Bootstrap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db334e51e5c7fece52009ebc09960243192a2fa4", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/db334e51e5c7fece52009ebc09960243192a2fa4", "committedDate": "2020-12-17T13:31:50Z", "message": "Fix assignability of xml subtype to anydata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdfb586878c48879f140f37ce65eec88826cd0c5", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cdfb586878c48879f140f37ce65eec88826cd0c5", "committedDate": "2020-12-17T16:53:26Z", "message": "Fix build issue with lang.object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ac77bf3ced32745a86009b1a51375ed8cdc501d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4ac77bf3ced32745a86009b1a51375ed8cdc501d", "committedDate": "2020-12-17T17:07:27Z", "message": "Fix import coding style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba547b1cc21be945f431316cf6f9051acde186ac", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ba547b1cc21be945f431316cf6f9051acde186ac", "committedDate": "2020-12-21T06:57:39Z", "message": "Add readonly as pure type for `==` operator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c49bbfa8493fae7f8d1b97ff411b8865418be4ea", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c49bbfa8493fae7f8d1b97ff411b8865418be4ea", "committedDate": "2020-12-21T06:58:15Z", "message": "Add cloneable as a predefinded type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1a12cbf98d030e0baf6e768bf4ac5c109f40545", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d1a12cbf98d030e0baf6e768bf4ac5c109f40545", "committedDate": "2020-12-21T06:59:10Z", "message": "Add cloneable as a predefinded type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c31a6729a3323c574796b20a6e8fa438a9489e3", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3c31a6729a3323c574796b20a6e8fa438a9489e3", "committedDate": "2020-12-21T07:43:59Z", "message": "Fix stack over flow issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e57c0791cc02060a6919b55639085e53d3279188", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e57c0791cc02060a6919b55639085e53d3279188", "committedDate": "2020-12-21T07:44:25Z", "message": "Fix booststrapping of cloneable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff3aeff6609910e69a91bf567efb5e14502cc835", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ff3aeff6609910e69a91bf567efb5e14502cc835", "committedDate": "2020-12-21T07:50:21Z", "message": "Fix test cases for Cloneable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "056a50a30735efb6b5857b0c7dbebad4c78a2d94", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/056a50a30735efb6b5857b0c7dbebad4c78a2d94", "committedDate": "2020-12-21T07:51:05Z", "message": "Refactor TypeParamAnalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dbde7cffcc5377f66c483a55d7b0593ed48d691", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8dbde7cffcc5377f66c483a55d7b0593ed48d691", "committedDate": "2020-12-21T07:51:34Z", "message": "Revert Scope.java changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "213a189d73489085992d01b5e5bb336c1e25fb4f", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/213a189d73489085992d01b5e5bb336c1e25fb4f", "committedDate": "2020-12-21T07:52:01Z", "message": "Fix unresolved types for Cloneable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c854c4a2830bba0591384281382029f7b9026339", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c854c4a2830bba0591384281382029f7b9026339", "committedDate": "2020-12-21T07:52:36Z", "message": "Add `json` cloneable to support json.clone()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69cd6ef1071c0304d77ef37f2fefec81bf430205", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/69cd6ef1071c0304d77ef37f2fefec81bf430205", "committedDate": "2020-12-21T07:53:29Z", "message": "Fix test cases for Cloneable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a36b382ef624fccf10113350743e2253de9733ed", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a36b382ef624fccf10113350743e2253de9733ed", "committedDate": "2020-12-21T07:58:05Z", "message": "Fix AnnotationDeclarationTest to support Cloneable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0daa9bda7937e2ed3c80a7ad58419ca76279d66e", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0daa9bda7937e2ed3c80a7ad58419ca76279d66e", "committedDate": "2020-12-21T07:58:30Z", "message": "Add json to Cloneable in SymbolTable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bceb4d5263f89971b26227625aea91e738680d5e", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bceb4d5263f89971b26227625aea91e738680d5e", "committedDate": "2020-12-21T07:58:57Z", "message": "Cleanup SymbolResolver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1758741b28a3676b2337543158589bd6f0e6432", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f1758741b28a3676b2337543158589bd6f0e6432", "committedDate": "2020-12-21T08:03:00Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2732a412f539283a45a565faaf74092001d34731", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2732a412f539283a45a565faaf74092001d34731", "committedDate": "2020-12-21T08:10:19Z", "message": "Fix import order code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "704c8ce206098ffb1bc8cecda4ad6f5081c3e293", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/704c8ce206098ffb1bc8cecda4ad6f5081c3e293", "committedDate": "2020-12-21T08:12:48Z", "message": "Fix import order code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60a347340ae4a751b0e53bbfefc1d287b15cffce", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/60a347340ae4a751b0e53bbfefc1d287b15cffce", "committedDate": "2020-12-21T10:22:17Z", "message": "Fix test cases for cloneable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e75588a137f53521d7283a8b49c3ed48453f5417", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e75588a137f53521d7283a8b49c3ed48453f5417", "committedDate": "2020-12-21T16:58:43Z", "message": "Change runtime json type to a union"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79f0c4ed64de00cdad29ec26919fef498805fa9d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/79f0c4ed64de00cdad29ec26919fef498805fa9d", "committedDate": "2020-12-21T16:59:07Z", "message": "Remove json from Cloneable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be1c490c3fc22eb6846514ff16ccc27cc22aa226", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/be1c490c3fc22eb6846514ff16ccc27cc22aa226", "committedDate": "2020-12-22T05:14:10Z", "message": "Change runtime json, anydata to cyclic unions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cb6bf97bdeeb4cb170c50c91a346f937a9f763f", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7cb6bf97bdeeb4cb170c50c91a346f937a9f763f", "committedDate": "2020-12-22T05:14:35Z", "message": "Fix table type constraint in toString"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a7bca623d53e9d5df3378b4e8d309b84cf20950", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9a7bca623d53e9d5df3378b4e8d309b84cf20950", "committedDate": "2020-12-22T05:18:57Z", "message": "Fix coding style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "415bf765ffafbba78fb5d68c90f28c6770d813ba", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/415bf765ffafbba78fb5d68c90f28c6770d813ba", "committedDate": "2020-12-22T09:47:34Z", "message": "Fix invalid cyclic flag addition to parent union"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "972a5268d7ae6e762b750d412ca3a749c25d7f42", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/972a5268d7ae6e762b750d412ca3a749c25d7f42", "committedDate": "2020-12-22T10:20:48Z", "message": "Fix union comparison for json type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b2241384b32d2996be3ecb4c800f012dc498e96", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5b2241384b32d2996be3ecb4c800f012dc498e96", "committedDate": "2020-12-23T04:58:55Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c43e4b52613edbfe1920c312d9da7438628f8d2", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6c43e4b52613edbfe1920c312d9da7438628f8d2", "committedDate": "2020-12-25T06:21:54Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a13d9084a240345d073c59c728da259d4f255278", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a13d9084a240345d073c59c728da259d4f255278", "committedDate": "2021-01-05T06:04:10Z", "message": "Add type name for predefined unions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7574ba4031901323ee17f9dcd5faa11586ff286", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e7574ba4031901323ee17f9dcd5faa11586ff286", "committedDate": "2021-01-05T06:05:13Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6ae566434b5b49648f8182e1f0dc09e5d7d3019", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b6ae566434b5b49648f8182e1f0dc09e5d7d3019", "committedDate": "2021-01-05T09:52:55Z", "message": "Fix NPE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2be855e6430cb07baa84b1178b1837c5e54545fd", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2be855e6430cb07baa84b1178b1837c5e54545fd", "committedDate": "2021-01-07T05:34:02Z", "message": "Add duplicate cloneable types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffc53976feb2abf313a31f0cbb0c08c0b3fdc4b5", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ffc53976feb2abf313a31f0cbb0c08c0b3fdc4b5", "committedDate": "2021-01-07T06:02:02Z", "message": "Fix test case updates for line numbers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6274ef2451edf7c26b2d95313dfc85252caaff7", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c6274ef2451edf7c26b2d95313dfc85252caaff7", "committedDate": "2021-01-07T06:02:20Z", "message": "Fix object type reference test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eddc09a23d24f75ae9b60fc2a70c314244ca54bc", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eddc09a23d24f75ae9b60fc2a70c314244ca54bc", "committedDate": "2021-01-07T06:25:42Z", "message": "Fix object type reference test case and error line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc3b289b17f4488b6da721cc1a0dced5f12b1230", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bc3b289b17f4488b6da721cc1a0dced5f12b1230", "committedDate": "2021-01-07T06:26:02Z", "message": "Fix test case error line numbers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "570617d5f39c9703bcb3d7a314ffc4a6ed0c6782", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/570617d5f39c9703bcb3d7a314ffc4a6ed0c6782", "committedDate": "2021-01-07T08:03:46Z", "message": "Fix test case invalid token and words"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6700bcff33f7a0f2fdf8039ac01e898f70dacb0e", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6700bcff33f7a0f2fdf8039ac01e898f70dacb0e", "committedDate": "2021-01-07T08:15:09Z", "message": "Fix test case cloneable word"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34fd9d6e652a1ba80c18afff22a5e57e4bdad78f", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/34fd9d6e652a1ba80c18afff22a5e57e4bdad78f", "committedDate": "2021-01-07T08:18:59Z", "message": "Fix SO issue in method resolver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f51be0b58d9c1e5557bbd83ad225ed1147c94a7d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f51be0b58d9c1e5557bbd83ad225ed1147c94a7d", "committedDate": "2021-01-07T08:59:36Z", "message": "Fix cyclic types not resolving known types issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ab6195a0c63281b4808ce5641ca2d2e30c9aae0", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5ab6195a0c63281b4808ce5641ca2d2e30c9aae0", "committedDate": "2021-01-07T09:29:21Z", "message": "Fix test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90a8dd170b9edc1657574c5c1fdbd7c811937738", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/90a8dd170b9edc1657574c5c1fdbd7c811937738", "committedDate": "2021-01-07T09:34:30Z", "message": "Fix test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8585d2a720721a989d4416b116d13f580433dad7", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8585d2a720721a989d4416b116d13f580433dad7", "committedDate": "2021-01-07T16:58:45Z", "message": "Fix test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77d9c0ebf3610afa172693c2f24697f45dd4095e", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/77d9c0ebf3610afa172693c2f24697f45dd4095e", "committedDate": "2021-01-07T20:56:54Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right_merge_master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c042987321a7f5612d2d6cba99145b3781bb2743", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c042987321a7f5612d2d6cba99145b3781bb2743", "committedDate": "2021-01-07T20:57:59Z", "message": "Merge BUnionType from master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cd672e456a0aec0f5c5230bfd5ce6f390e338dd", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8cd672e456a0aec0f5c5230bfd5ce6f390e338dd", "committedDate": "2021-01-07T21:07:32Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "749e57d7d99631cde72814c4fca89736dae8ce78", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/749e57d7d99631cde72814c4fca89736dae8ce78", "committedDate": "2021-01-07T23:28:20Z", "message": "Add support for master for cyclic union"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca534cae69b41a3edff2630d7ad568d2fda4781e", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ca534cae69b41a3edff2630d7ad568d2fda4781e", "committedDate": "2021-01-07T23:28:40Z", "message": "Fix pure type for sub string types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcbd09ec5c0489fc09d2c33b44d1650bf2f08110", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bcbd09ec5c0489fc09d2c33b44d1650bf2f08110", "committedDate": "2021-01-08T06:00:09Z", "message": "Fix union type flags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b745ac2fd9d6ee2e4652a044d69e54b72922442e", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b745ac2fd9d6ee2e4652a044d69e54b72922442e", "committedDate": "2021-01-10T05:17:03Z", "message": "Fix test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b54b0f05395c8ccd795475835322fd18b36c273d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b54b0f05395c8ccd795475835322fd18b36c273d", "committedDate": "2021-01-10T05:22:21Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06f58721c94dea20195945601dfea2e1738607d9", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/06f58721c94dea20195945601dfea2e1738607d9", "committedDate": "2021-01-10T08:21:23Z", "message": "Fix cyclic type ambiguity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd71562d698dc11e5a754fe4ebd80849a0aa7974", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bd71562d698dc11e5a754fe4ebd80849a0aa7974", "committedDate": "2021-01-10T11:29:24Z", "message": "Fix ReadOnlyUtils for cyclic unions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e63ce1e8a012bfa31b437a00706b1418ba033777", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e63ce1e8a012bfa31b437a00706b1418ba033777", "committedDate": "2021-01-11T05:04:54Z", "message": "Fix SO in ReadOnlyUtils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1658b673cb59baca1b47a740c60a14dde98acea3", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1658b673cb59baca1b47a740c60a14dde98acea3", "committedDate": "2021-01-11T05:09:18Z", "message": "Fix code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea0d25ee0dab54fdd6573bc2850b9349fcb35ae1", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ea0d25ee0dab54fdd6573bc2850b9349fcb35ae1", "committedDate": "2021-01-11T06:54:51Z", "message": "Fix ExprBodiedFunctionTest error being typeparam"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e948ab95444d2c2fa2d88f1144e2ee4b08af2c9", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6e948ab95444d2c2fa2d88f1144e2ee4b08af2c9", "committedDate": "2021-01-11T08:11:38Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3072965a770f71ee45fa17db13f8131cf199b188", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3072965a770f71ee45fa17db13f8131cf199b188", "committedDate": "2021-01-11T08:57:42Z", "message": "Fix VariableReturnTypeTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79e37c8c2f36727f389dc11d9ba0c065d6056031", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/79e37c8c2f36727f389dc11d9ba0c065d6056031", "committedDate": "2021-01-11T09:02:50Z", "message": "Fix DistinctTypeDefTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d6f2919c61f2a6ba45cf22996140e5262316267", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5d6f2919c61f2a6ba45cf22996140e5262316267", "committedDate": "2021-01-11T09:35:04Z", "message": "Fix ObjectConstructorTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b61bb56b5744fd0ce6b3f918ef8ca45776a25688", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b61bb56b5744fd0ce6b3f918ef8ca45776a25688", "committedDate": "2021-01-11T11:45:12Z", "message": "Fix SO in language server"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b295ce91d068c6d6afee71427186b16ecd63d36", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1b295ce91d068c6d6afee71427186b16ecd63d36", "committedDate": "2021-01-11T15:56:21Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42c764a9348804f26620f2f15eefb12d78965a16", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/42c764a9348804f26620f2f15eefb12d78965a16", "committedDate": "2021-01-11T16:11:17Z", "message": "Remove unused import in JvmTypeGen"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a05d28d0028d2947ca9bf2e3d11763c5b6f4462", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0a05d28d0028d2947ca9bf2e3d11763c5b6f4462", "committedDate": "2021-01-13T17:53:19Z", "message": "Refactor Types isAssignableToUnionType method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "733a4242b026e903199d7d773eefe37ce08accbc", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/733a4242b026e903199d7d773eefe37ce08accbc", "committedDate": "2021-01-13T17:53:19Z", "message": "Fix heap memory out of error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f93ca283f4b104ac7dffe3dea6d2f596d7fdb5d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6f93ca283f4b104ac7dffe3dea6d2f596d7fdb5d", "committedDate": "2021-01-13T17:53:19Z", "message": "Improve heap/peak heap memory\n\nBArrayState enum only needs capacity 3. BIRPackageSymbolEnter create\nmany collections with extra space. SymbolEnter on some cases initial\ncapacity will reduce memory. GlobalVariableRefAnalyzer improved to\nreturn empty HashSets with capacity 0 on some cases."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef8bb89beb2bc7a6610a225b82d8d9f2503a7359", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ef8bb89beb2bc7a6610a225b82d8d9f2503a7359", "committedDate": "2021-01-13T06:01:30Z", "message": "Reduce unused heap space by MarkdownDocAttachment"}, "afterCommit": {"oid": "d22fc6f3a27b75ad5a14aab26b7671100aa80872", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d22fc6f3a27b75ad5a14aab26b7671100aa80872", "committedDate": "2021-01-13T17:53:20Z", "message": "Add teardown for several test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dea8dded08ea0540c56b3ace710e09bc76c8fbd", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7dea8dded08ea0540c56b3ace710e09bc76c8fbd", "committedDate": "2021-01-13T18:06:09Z", "message": "Add teardown for several test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d22fc6f3a27b75ad5a14aab26b7671100aa80872", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d22fc6f3a27b75ad5a14aab26b7671100aa80872", "committedDate": "2021-01-13T17:53:20Z", "message": "Add teardown for several test cases"}, "afterCommit": {"oid": "7dea8dded08ea0540c56b3ace710e09bc76c8fbd", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7dea8dded08ea0540c56b3ace710e09bc76c8fbd", "committedDate": "2021-01-13T18:06:09Z", "message": "Add teardown for several test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2ODk4MDEx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#pullrequestreview-566898011", "createdAt": "2021-01-13T05:13:44Z", "commit": {"oid": "c8d357a294fab92b861f7c248e2927a970622b01"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwNToxMzo0NVrOISf1iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDozMDo0OFrOITA9zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjI2Njg5MQ==", "bodyText": "Missing licence header.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r556266891", "createdAt": "2021-01-13T05:13:45Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-core/src/main/java/org/ballerinalang/core/model/types/BTableType.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.ballerinalang.core.model.types;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8d357a294fab92b861f7c248e2927a970622b01"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgwNzIxOQ==", "bodyText": "Can this.typeName be null when resolving is true? Wouldn't resolving be true only for a cyclic union, which in turn has to have a name?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r556807219", "createdAt": "2021-01-13T20:26:05Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-core/src/main/java/org/ballerinalang/core/model/types/BUnionType.java", "diffHunk": "@@ -91,8 +92,27 @@ public int getTag() {\n \n     @Override\n     public String toString() {\n-        List<String> list = memberTypes.stream().map(BType::toString).collect(Collectors.toList());\n-        return String.join(\"|\", list);\n+        String cachedToString;\n+        if (resolving) {\n+            if (this.typeName != null) {\n+                return this.typeName;\n+            } else {\n+                return \"...\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dea8dded08ea0540c56b3ace710e09bc76c8fbd"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgwNzkzMQ==", "bodyText": "Can toString get called when memberTypes is null?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r556807931", "createdAt": "2021-01-13T20:27:23Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-core/src/main/java/org/ballerinalang/core/model/types/BUnionType.java", "diffHunk": "@@ -91,8 +92,27 @@ public int getTag() {\n \n     @Override\n     public String toString() {\n-        List<String> list = memberTypes.stream().map(BType::toString).collect(Collectors.toList());\n-        return String.join(\"|\", list);\n+        String cachedToString;\n+        if (resolving) {\n+            if (this.typeName != null) {\n+                return this.typeName;\n+            } else {\n+                return \"...\";\n+            }\n+        }\n+        resolving = true;\n+        StringBuilder sb = new StringBuilder();\n+        int size = memberTypes != null ? memberTypes.size() : 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dea8dded08ea0540c56b3ace710e09bc76c8fbd"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgwOTY3OQ==", "bodyText": "What about table<map<anydata>>?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26371#discussion_r556809679", "createdAt": "2021-01-13T20:30:48Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/api/PredefinedTypes.java", "diffHunk": "@@ -163,17 +159,82 @@\n     public static final IteratorType TYPE_ITERATOR = new BIteratorType(TypeConstants.ITERATOR_TNAME, EMPTY_MODULE);\n     public static final ServiceType TYPE_ANY_SERVICE = new BServiceType(TypeConstants.SERVICE, EMPTY_MODULE, 0);\n     public static final HandleType TYPE_HANDLE = new BHandleType(TypeConstants.HANDLE_TNAME, EMPTY_MODULE);\n-    public static final UnionType ANYDATA_OR_READONLY = new BUnionType(Arrays.asList(TYPE_ANYDATA, TYPE_READONLY));\n-    private static final MapType TYPE_DETAIL = new BMapType(TypeConstants.MAP_TNAME, ANYDATA_OR_READONLY, EMPTY_MODULE);\n-    public static final Type TYPE_ERROR_DETAIL = ReadOnlyUtils.setImmutableTypeAndGetEffectiveType(TYPE_DETAIL);\n-    public static final ErrorType TYPE_ERROR = new BErrorType(TypeConstants.ERROR, EMPTY_MODULE, TYPE_DETAIL);\n+\n+    public static final JsonType TYPE_JSON;\n+    public static final JsonType TYPE_READONLY_JSON;\n+    public static final ArrayType TYPE_JSON_ARRAY;\n+    public static final AnydataType TYPE_ANYDATA;\n+    public static final AnydataType TYPE_READONLY_ANYDATA;\n+    public static final MapType TYPE_DETAIL;\n+    public static final Type TYPE_ERROR_DETAIL;\n+    public static final ErrorType TYPE_ERROR;\n+    public static final BUnionType TYPE_CLONEABLE;\n \n     public static final RecordType STRING_ITR_NEXT_RETURN_TYPE =\n             IteratorUtils.createIteratorNextReturnType(PredefinedTypes.TYPE_STRING);\n     public static final RecordType XML_ITR_NEXT_RETURN_TYPE = IteratorUtils\n             .createIteratorNextReturnType(\n                     new BUnionType(Arrays.asList(PredefinedTypes.TYPE_STRING, PredefinedTypes.TYPE_XML)));\n \n-    private PredefinedTypes() {\n+    // type anydata =  ()|boolean|int|float|decimal|string|xml|anydata[]|map<anydata>|table<map<anydata>>\n+    static {\n+        ArrayList<Type> members = new ArrayList<>();\n+        members.add(TYPE_NULL);\n+        members.add(TYPE_BOOLEAN);\n+        members.add(TYPE_INT);\n+        members.add(TYPE_FLOAT);\n+        members.add(TYPE_DECIMAL);\n+        members.add(TYPE_STRING);\n+        members.add(TYPE_XML);\n+        BAnydataType anydataType = new BAnydataType(new BUnionType(TypeConstants.ANYDATA_TNAME, EMPTY_MODULE,\n+                members), TypeConstants.ANYDATA_TNAME, false);\n+        anydataType.isCyclic = true;\n+        MapType internalAnydataMap = new BMapType(TypeConstants.MAP_TNAME, anydataType, EMPTY_MODULE);\n+        ArrayType internalAnydataArray = new BArrayType(anydataType);\n+        members.add(internalAnydataArray);\n+        members.add(internalAnydataMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dea8dded08ea0540c56b3ace710e09bc76c8fbd"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6548fc1ecc46efe8bff2ab4d4911d56b903ff2cb", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6548fc1ecc46efe8bff2ab4d4911d56b903ff2cb", "committedDate": "2021-01-14T03:48:50Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "632ec683986ae5b2c31e5c9baf27b505629cf2c3", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/632ec683986ae5b2c31e5c9baf27b505629cf2c3", "committedDate": "2021-01-14T03:52:28Z", "message": "Add table<map<anydata>> to PredefinedTypes anydata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b61910d2f2fc1dc279d5c1b024a285e81fe3558", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6b61910d2f2fc1dc279d5c1b024a285e81fe3558", "committedDate": "2021-01-14T03:52:47Z", "message": "Add license header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "659070eae0295c60473605dbb6bf5fab3f1e05cb", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/659070eae0295c60473605dbb6bf5fab3f1e05cb", "committedDate": "2021-01-14T03:56:28Z", "message": "Fix merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad374e28da04160638952198c6dab5c6e6e0bca4", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ad374e28da04160638952198c6dab5c6e6e0bca4", "committedDate": "2021-01-14T07:10:08Z", "message": "Refactor BArrayState allocation logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "771accc20395f6d39dcd988dd5097b15b44feea4", "author": {"user": {"login": "irshadnilam", "name": "Irshad Nilam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/771accc20395f6d39dcd988dd5097b15b44feea4", "committedDate": "2020-10-14T09:13:09Z", "message": "Support cyclic dependency in type definitions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e86cf83c4e2c4d3f20ef96045f37d31de8856d2a", "author": {"user": {"login": "irshadnilam", "name": "Irshad Nilam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e86cf83c4e2c4d3f20ef96045f37d31de8856d2a", "committedDate": "2020-10-14T09:13:12Z", "message": "Fix issue when using cyclic type on langlib"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03f49b30d56f8883b45cd642390e03da93f11a03", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/03f49b30d56f8883b45cd642390e03da93f11a03", "committedDate": "2020-10-14T09:14:29Z", "message": "Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76a398588060470d5f9695df8617c70e3d06f333", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/76a398588060470d5f9695df8617c70e3d06f333", "committedDate": "2020-10-14T09:23:06Z", "message": "parent 03f49b30d56f8883b45cd642390e03da93f11a03\nauthor KRVPerera <rukshan.viduranga@gmail.com> 1595343363 +0530\ncommitter KRVPerera <rukshan.viduranga@gmail.com> 1602667287 +0530\n\nadd clonable type few chagnes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f64d924f13503abbd613bd9c2ba94fe49361d2bc", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f64d924f13503abbd613bd9c2ba94fe49361d2bc", "committedDate": "2020-10-14T10:21:45Z", "message": "Fix build issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc3581a987cb2d1698e9337613b8303019163ef2", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bc3581a987cb2d1698e9337613b8303019163ef2", "committedDate": "2020-10-14T10:21:45Z", "message": "Refactor Types.isAssignableToUnionType\n\nRefactor the loop for performance and to reduce cognitive load"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff7e70d66c8f5a903638ed655d6427536be75dcf", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ff7e70d66c8f5a903638ed655d6427536be75dcf", "committedDate": "2020-10-14T10:21:45Z", "message": "Fix build issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37078d30bf1ca71e447dd175cb4900f9294cf047", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/37078d30bf1ca71e447dd175cb4900f9294cf047", "committedDate": "2020-10-14T10:21:45Z", "message": "Fix error type assignability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9725fc8b73969f74d5230bc7f855d477da6fffcc", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9725fc8b73969f74d5230bc7f855d477da6fffcc", "committedDate": "2020-10-14T10:21:45Z", "message": "Test JvmTypeGen issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "131b8edaa4cd92661c87dc0ab057998ef93bc81f", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/131b8edaa4cd92661c87dc0ab057998ef93bc81f", "committedDate": "2020-10-14T10:21:46Z", "message": "Refactor SymbolEnter resolver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0b7f9b90196ec3011e5b3a0b16b149c9404a05a", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e0b7f9b90196ec3011e5b3a0b16b149c9404a05a", "committedDate": "2020-10-14T10:21:46Z", "message": "Fix lang loading order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2bc4fc9b70ac2f4efcca98e233052233b4ec426", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d2bc4fc9b70ac2f4efcca98e233052233b4ec426", "committedDate": "2020-10-14T10:21:46Z", "message": "Fix build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e47f031b49f30814cf4575c6e8e3c359c545b3ef", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e47f031b49f30814cf4575c6e8e3c359c545b3ef", "committedDate": "2020-10-14T10:35:35Z", "message": "Revert addition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95ffe063c5406222e3d3ffeb16ba0076783bde71", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/95ffe063c5406222e3d3ffeb16ba0076783bde71", "committedDate": "2020-10-15T06:38:22Z", "message": "Add anonymous flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "391f0c1025370fa4e4b40968f60acd937c7d29ad", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/391f0c1025370fa4e4b40968f60acd937c7d29ad", "committedDate": "2020-10-15T07:47:39Z", "message": "Fix dependency between langlibs java and error\n\nSince error is moved to annotation package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9e1ef1baec06657a191f62152a96d18cf132c08", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d9e1ef1baec06657a191f62152a96d18cf132c08", "committedDate": "2020-10-15T08:11:19Z", "message": "Fix java.lang.NoSuchFieldError:\n\nTemporary fix for looking for a field named $type$(Cloneable & readonly)\nalso added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9550e18c61a65a87b9a9a461574fa5bd3e39831d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9550e18c61a65a87b9a9a461574fa5bd3e39831d", "committedDate": "2020-10-16T02:47:57Z", "message": "Add cyclic flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b46462c3bb6a7d49d586694ba2b6ae5fc1899fd1", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b46462c3bb6a7d49d586694ba2b6ae5fc1899fd1", "committedDate": "2020-10-16T02:59:21Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b06d61d7c9c3cf0e0c97c40aeaef8a14a64b1f8", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7b06d61d7c9c3cf0e0c97c40aeaef8a14a64b1f8", "committedDate": "2020-10-16T09:49:19Z", "message": "Revert error.bal of langlib/java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36efe96b07105e22ca2c52e40524a8805225e431", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/36efe96b07105e22ca2c52e40524a8805225e431", "committedDate": "2020-10-16T09:50:19Z", "message": "Rename SymbolResolver reload methods to boostrap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6199d6ed18c52aa682a6304943781c1ad004a357", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6199d6ed18c52aa682a6304943781c1ad004a357", "committedDate": "2020-10-16T11:15:24Z", "message": "Fix error type bootstrapping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "901b417619bf3a81c9c4c8c1d3878a1648199218", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/901b417619bf3a81c9c4c8c1d3878a1648199218", "committedDate": "2020-10-19T09:29:39Z", "message": "Add union symbol name to BIR of cyclic types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5725a5c7322b1637098c06e08c206e15233c5f2", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f5725a5c7322b1637098c06e08c206e15233c5f2", "committedDate": "2020-10-20T02:51:44Z", "message": "Fix readonly and Cloneable cyclic flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f5a8c28ebe26e3725ceeaad9261ea97eeb53862", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7f5a8c28ebe26e3725ceeaad9261ea97eeb53862", "committedDate": "2020-10-20T05:52:12Z", "message": "Replace stream in BLangTupleTypeNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c93869bd3e6f46ae41113bcb8070dd39e1c9d68b", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c93869bd3e6f46ae41113bcb8070dd39e1c9d68b", "committedDate": "2020-10-21T20:39:45Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2175d756c0eeb6e165cea0ee4e1d9d5072738bd", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d2175d756c0eeb6e165cea0ee4e1d9d5072738bd", "committedDate": "2020-10-21T21:05:40Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "163c92c694285f2faad1e62d409c6258334f475d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/163c92c694285f2faad1e62d409c6258334f475d", "committedDate": "2020-10-22T05:54:14Z", "message": "Test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e159d9ced084503e4439e83f62b247b826e55c27", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e159d9ced084503e4439e83f62b247b826e55c27", "committedDate": "2020-10-22T06:20:56Z", "message": "Fix code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "872781d04e80dbf15c0952e10d48e820f9cca207", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/872781d04e80dbf15c0952e10d48e820f9cca207", "committedDate": "2020-10-22T06:49:21Z", "message": "Fix line too long code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df888c43ef6ef09668c8ce6c867c7df4f9804f98", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/df888c43ef6ef09668c8ce6c867c7df4f9804f98", "committedDate": "2020-10-22T08:23:10Z", "message": "Revert unwanted files and changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df8c1dfe16c52f98be573ad4e6010646adc751bb", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/df8c1dfe16c52f98be573ad4e6010646adc751bb", "committedDate": "2020-10-22T08:25:00Z", "message": "revert natives.bal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c167209ac59412904d3b7ec68a49982825276550", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c167209ac59412904d3b7ec68a49982825276550", "committedDate": "2020-10-22T10:44:32Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f97c50e15e68e941e20b649d642ac1fb6abc1eba", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f97c50e15e68e941e20b649d642ac1fb6abc1eba", "committedDate": "2020-10-23T02:30:56Z", "message": "Fix TypeParamAnalyzer issue for future types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb4a7297b4786ee1b6d3e56048fcb253492f1ae7", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eb4a7297b4786ee1b6d3e56048fcb253492f1ae7", "committedDate": "2020-10-23T02:31:33Z", "message": "Cleanup anydata/json bootstrapping code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56ec1ddd342c93abb9ab52303b0043ffd32a0b0b", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/56ec1ddd342c93abb9ab52303b0043ffd32a0b0b", "committedDate": "2020-10-23T02:34:06Z", "message": "Rename bootstrap methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7296d73d276d66ae7c6d64e0741ec6b9c250f7b1", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7296d73d276d66ae7c6d64e0741ec6b9c250f7b1", "committedDate": "2020-10-26T03:44:36Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdbf2a8ea6f7e9eb6a86a15ddcc5938bb4171a71", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bdbf2a8ea6f7e9eb6a86a15ddcc5938bb4171a71", "committedDate": "2020-10-26T16:32:56Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a621bfd28b14032f7030286e39a575c39f97ea1", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7a621bfd28b14032f7030286e39a575c39f97ea1", "committedDate": "2020-10-27T07:46:40Z", "message": "Fix future problem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cc30ebc34cae513b92ff7ef7296f6aa3344b805", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5cc30ebc34cae513b92ff7ef7296f6aa3344b805", "committedDate": "2020-10-27T08:08:27Z", "message": "Fix code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df19b57193417f5b29954444eff043797d035a40", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/df19b57193417f5b29954444eff043797d035a40", "committedDate": "2020-10-27T10:31:50Z", "message": "Fix typegen bad logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27c447e12afe0cd93aab20c1fb9e30cf0241c451", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/27c447e12afe0cd93aab20c1fb9e30cf0241c451", "committedDate": "2020-10-27T10:42:45Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4103f004f4632ab45e67c1d30912eb6ea93bb8e2", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4103f004f4632ab45e67c1d30912eb6ea93bb8e2", "committedDate": "2020-10-28T06:11:16Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9970cc8dc30227162041dc3d057249b942a5a29", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f9970cc8dc30227162041dc3d057249b942a5a29", "committedDate": "2020-10-28T09:51:21Z", "message": "Fix typegen for cyclic unions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c67107d87fbbaec82865d64f794d3123b4ba5109", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c67107d87fbbaec82865d64f794d3123b4ba5109", "committedDate": "2020-10-28T09:52:19Z", "message": "Refactor runtime BUnionType\n\nOrder public methods, private methods and overridden methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "818f22f3a4e56aa1117170726b4bc6515e2604ad", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/818f22f3a4e56aa1117170726b4bc6515e2604ad", "committedDate": "2020-10-29T05:08:20Z", "message": "Enhance assignability rules for cyclic unions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f5271fd8ba3eb28e72f8aa0da4ca1e0f32135bd", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8f5271fd8ba3eb28e72f8aa0da4ca1e0f32135bd", "committedDate": "2020-11-02T06:25:51Z", "message": "Remove CYCLIC flag as overflowing int range"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8e510fe4b7a2857f3c0449d92c27ec54d2817ce", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f8e510fe4b7a2857f3c0449d92c27ec54d2817ce", "committedDate": "2020-11-02T06:43:06Z", "message": "Add isCyclic boolean of unions to bir.ksy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26ec65359d9d432c429dcd2031ab428b8b93ee76", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/26ec65359d9d432c429dcd2031ab428b8b93ee76", "committedDate": "2020-11-02T09:07:27Z", "message": "Revert Flags.java class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2051f3365cb251139062ba0224fc192517e19d56", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2051f3365cb251139062ba0224fc192517e19d56", "committedDate": "2020-11-02T09:16:43Z", "message": "Divide Flags into sets of four"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db503538a8fb7d5f1c5e8334783611734c3823ef", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/db503538a8fb7d5f1c5e8334783611734c3823ef", "committedDate": "2020-11-02T09:30:24Z", "message": "Add flag number as a comment to Flags.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c49291a3e8b5cb7ffcd8ce310eac0b6117efb09f", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c49291a3e8b5cb7ffcd8ce310eac0b6117efb09f", "committedDate": "2020-11-02T09:44:47Z", "message": "Fix style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ffc7aa58ea8b0a39192eb0d540f0e9cf0312d49", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5ffc7aa58ea8b0a39192eb0d540f0e9cf0312d49", "committedDate": "2020-11-03T04:08:44Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42603642f3a30b46c641b5f7a7b11d1d616627d6", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/42603642f3a30b46c641b5f7a7b11d1d616627d6", "committedDate": "2020-11-03T15:57:30Z", "message": "Fix lang union resolving logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec3bd8048aa82ece4999bc124de639f1c9397116", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ec3bd8048aa82ece4999bc124de639f1c9397116", "committedDate": "2020-11-04T04:21:04Z", "message": "Refactor cyclic union creation code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b080f256fa9693b9b293d8c26c8c8b8d261c922", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1b080f256fa9693b9b293d8c26c8c8b8d261c922", "committedDate": "2020-11-04T04:35:39Z", "message": "Fix union member list size : BIRPackageSymbolEnter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d73423fc3423bdff8b469c9cc25f0a253a7ed22", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6d73423fc3423bdff8b469c9cc25f0a253a7ed22", "committedDate": "2020-11-04T07:00:03Z", "message": "Resolve errors with an undefined detail as noType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eab9e5f87e3108e1560cb0054142fdac76e6869d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eab9e5f87e3108e1560cb0054142fdac76e6869d", "committedDate": "2020-11-05T02:36:40Z", "message": "Fix clone issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5ed5a1f84bc606691615b686d8682c9f1cd6694", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f5ed5a1f84bc606691615b686d8682c9f1cd6694", "committedDate": "2020-11-05T02:46:15Z", "message": "Fix check style issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a80927acd6fb5d68480ac6af048e15fe7c36e7f", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1a80927acd6fb5d68480ac6af048e15fe7c36e7f", "committedDate": "2020-11-05T07:43:12Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "145304cb9e4a3424db54fc2509a679c9cbf9c65b", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/145304cb9e4a3424db54fc2509a679c9cbf9c65b", "committedDate": "2020-11-08T09:32:47Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cd5b7c1b6559ab45be6306defa9a7ae038c81af", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9cd5b7c1b6559ab45be6306defa9a7ae038c81af", "committedDate": "2020-11-08T15:09:07Z", "message": "Test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa93bb0e5887c33f53bf67425a2f359cec4cae71", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fa93bb0e5887c33f53bf67425a2f359cec4cae71", "committedDate": "2020-11-10T10:08:39Z", "message": "Load union cyclic flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edd7ff7761cea16ef55910da49eca9113a022469", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/edd7ff7761cea16ef55910da49eca9113a022469", "committedDate": "2020-11-10T10:09:25Z", "message": "add isCyclic flag to run time union type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f248ee7a63e42ccd292c6bea01e787c581eb784", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1f248ee7a63e42ccd292c6bea01e787c581eb784", "committedDate": "2020-11-12T05:02:25Z", "message": "JVM type gen fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc47e4a456f31cb8a15f92c3a8a584434ffdc3f5", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fc47e4a456f31cb8a15f92c3a8a584434ffdc3f5", "committedDate": "2020-11-12T05:27:32Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2234a99409059b9cf6eaee5962c18b088fc0e301", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2234a99409059b9cf6eaee5962c18b088fc0e301", "committedDate": "2020-11-12T05:05:20Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}, "afterCommit": {"oid": "fc47e4a456f31cb8a15f92c3a8a584434ffdc3f5", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fc47e4a456f31cb8a15f92c3a8a584434ffdc3f5", "committedDate": "2020-11-12T05:27:32Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a3efd2e00783f6031780829eeb2291c736262e3", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9a3efd2e00783f6031780829eeb2291c736262e3", "committedDate": "2020-11-12T05:54:52Z", "message": "Fix style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "492f238b232ffc8065aa8238b07b51479292f3fb", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/492f238b232ffc8065aa8238b07b51479292f3fb", "committedDate": "2020-11-12T06:18:47Z", "message": "Fix style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30b9876d5e87e50421d075c25b5475def24d4038", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/30b9876d5e87e50421d075c25b5475def24d4038", "committedDate": "2020-11-12T06:19:49Z", "message": "Fix SO in Immutable type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbad578e8c33ac2d6313694f1e9910048fa320c8", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dbad578e8c33ac2d6313694f1e9910048fa320c8", "committedDate": "2020-11-12T06:47:09Z", "message": "Fix spotbugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "415690adc898d9e922fae6d4b30aa67e0461c528", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/415690adc898d9e922fae6d4b30aa67e0461c528", "committedDate": "2020-11-12T07:02:29Z", "message": "Fix non cyclic union member loading"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1abf15b1f620bbf6e202d7cccef79582d1da3001", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1abf15b1f620bbf6e202d7cccef79582d1da3001", "committedDate": "2020-11-12T07:31:36Z", "message": "Fix JSON type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34412cb70851c4f82a1e33a027879cc3f457fe65", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/34412cb70851c4f82a1e33a027879cc3f457fe65", "committedDate": "2020-11-16T03:42:15Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30df86f4e9c4a7b8c1a0256d6bb0f30fd65526ef", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/30df86f4e9c4a7b8c1a0256d6bb0f30fd65526ef", "committedDate": "2020-11-16T07:19:05Z", "message": "Fix ImmutableTypeCloner for CyclicUnionData types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f2edc27062d69af0efd14f604f279b39827a334", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6f2edc27062d69af0efd14f604f279b39827a334", "committedDate": "2020-11-16T07:33:33Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}, "afterCommit": {"oid": "30df86f4e9c4a7b8c1a0256d6bb0f30fd65526ef", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/30df86f4e9c4a7b8c1a0256d6bb0f30fd65526ef", "committedDate": "2020-11-16T07:19:05Z", "message": "Fix ImmutableTypeCloner for CyclicUnionData types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e41107eb82f4a5310e2b87b16a95a5f3f30c4a94", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e41107eb82f4a5310e2b87b16a95a5f3f30c4a94", "committedDate": "2020-11-16T11:22:10Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d19094d7351220c97fde05dfdd9e3508bd2c58f", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5d19094d7351220c97fde05dfdd9e3508bd2c58f", "committedDate": "2020-11-16T11:23:51Z", "message": "Fix conflicts after merging with master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b7313b96d9e38439dc894fef71502326a476efd", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0b7313b96d9e38439dc894fef71502326a476efd", "committedDate": "2020-11-17T04:31:42Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81ec6eb6076395bbf04fc9d4b056bfbd62720ebc", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/81ec6eb6076395bbf04fc9d4b056bfbd62720ebc", "committedDate": "2020-11-19T10:14:49Z", "message": "Propagate union name to runtime"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5b930256ca703d2a9bb8285bdde2bd143202543", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d5b930256ca703d2a9bb8285bdde2bd143202543", "committedDate": "2020-11-20T07:15:20Z", "message": "Fix conflicts after master merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40ea06c38cebbc9975da1393c9a1e5b052e724a0", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/40ea06c38cebbc9975da1393c9a1e5b052e724a0", "committedDate": "2020-11-20T08:12:43Z", "message": "Fix code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e925b81962a8158fa937368ec42a920b0841e79", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0e925b81962a8158fa937368ec42a920b0841e79", "committedDate": "2020-11-20T09:15:11Z", "message": "Remove CyclicUnionData.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d906ee403cb4b6306d96009b3b45005401920208", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d906ee403cb4b6306d96009b3b45005401920208", "committedDate": "2020-11-22T06:06:50Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "faed31e37700fe7e52fd699a359cbffc0532c9d3", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/faed31e37700fe7e52fd699a359cbffc0532c9d3", "committedDate": "2020-11-24T10:59:58Z", "message": "Fix cyclic union cloning problem"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "caa0316717d26a9eed1825372cd18003b891fe21", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/caa0316717d26a9eed1825372cd18003b891fe21", "committedDate": "2020-11-26T05:57:24Z", "message": "[UNDO and check] Commit for SLP6 testing"}, "afterCommit": {"oid": "faed31e37700fe7e52fd699a359cbffc0532c9d3", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/faed31e37700fe7e52fd699a359cbffc0532c9d3", "committedDate": "2020-11-24T10:59:58Z", "message": "Fix cyclic union cloning problem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f8054a836206d3368e4ce4369f55010c691e725", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4f8054a836206d3368e4ce4369f55010c691e725", "committedDate": "2020-11-26T06:58:14Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c32b8a2093dd4397f9bc8f1e87eea186928f5b05", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c32b8a2093dd4397f9bc8f1e87eea186928f5b05", "committedDate": "2020-11-26T07:10:31Z", "message": "Fix cloneable type in bootstrapping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbd6461bb2c59d3fb6b7d2ea6cbfb758a62ac6d1", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dbd6461bb2c59d3fb6b7d2ea6cbfb758a62ac6d1", "committedDate": "2020-11-26T07:11:56Z", "message": "Fix ImmutableTypeCloner for cyclic unions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11056e9d7e930729072d7e8fb3bf9bac45b8d6cf", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/11056e9d7e930729072d7e8fb3bf9bac45b8d6cf", "committedDate": "2020-11-26T10:39:31Z", "message": "Optimize logic for flagging cyclic type definition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f1cc3ced6a105280bc7515abfc3f2a8463ba9d4", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4f1cc3ced6a105280bc7515abfc3f2a8463ba9d4", "committedDate": "2020-11-27T08:44:44Z", "message": "Fix ImmutableTypeCloner issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "524081fb9b7954c8e0a69721f6f429615c3a6090", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/524081fb9b7954c8e0a69721f6f429615c3a6090", "committedDate": "2020-11-27T08:54:43Z", "message": "Fix SO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41b7ee527d81e758476340d4a3005d590791b462", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/41b7ee527d81e758476340d4a3005d590791b462", "committedDate": "2020-11-27T09:48:44Z", "message": "Remove DiagnosticCode.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2d82ac959fa892aa95f8b3435cb2e06a3c0b32e", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f2d82ac959fa892aa95f8b3435cb2e06a3c0b32e", "committedDate": "2020-11-28T10:36:36Z", "message": "Fix Immutable cyclic union type gen"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f594d32dc197dcaf3d61941fcab4c442a160099f", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f594d32dc197dcaf3d61941fcab4c442a160099f", "committedDate": "2020-11-30T08:37:46Z", "message": "Add support Immutable intersection as type param"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e0eaa712092b8cae34f0ca1ce2bf90130c1fd82", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6e0eaa712092b8cae34f0ca1ce2bf90130c1fd82", "committedDate": "2020-11-30T09:53:17Z", "message": "Revert cloneReadOnly changed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db9cecc045267e2a21fd0ec8e435abf3f1ce9ac2", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/db9cecc045267e2a21fd0ec8e435abf3f1ce9ac2", "committedDate": "2020-11-30T10:03:53Z", "message": "Revert cloneReadOnly changed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fb76870e45ed2a683ea3d936a04d0944cb1038b", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8fb76870e45ed2a683ea3d936a04d0944cb1038b", "committedDate": "2020-11-30T10:36:23Z", "message": "Merge branch 'master' into cyclic_type_definition_done_right"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0507a37bc8e08a08364b527d9251dde6f159722c", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0507a37bc8e08a08364b527d9251dde6f159722c", "committedDate": "2020-12-01T05:53:22Z", "message": "Revert TypeParamAnalyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "606bbf3d9ee6af6eb6079f63a716de0b12dea4a3", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/606bbf3d9ee6af6eb6079f63a716de0b12dea4a3", "committedDate": "2020-12-01T05:54:02Z", "message": "Load error langlib dependencies before"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af6b8b85f824d513a1512e47d8074879fc3ff48e", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/af6b8b85f824d513a1512e47d8074879fc3ff48e", "committedDate": "2020-12-01T10:55:54Z", "message": "Fix isAssignable checks for union"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4376, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}