{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMTk5Mjg1", "number": 21275, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwODoxMjowNVrODjXdrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwODoxODoxOFrODjXj7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDExMTgxOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/common_client_config.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwODoxMjowNVrOFvIlxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMTo1MToyMlrOFvygCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk2ODEzMg==", "bodyText": "Shall we remove this content to http_commons.bal file as it contains all the commonly used types?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21275#discussion_r384968132", "createdAt": "2020-02-27T08:12:05Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/ballerina/src/http/common_client_config.bal", "diffHunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a629b58aa96dcd4b51d4dacbb876c5b717e0543b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY1NDc5Mg==", "bodyText": "Fixed in 2bbf173", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21275#discussion_r385654792", "createdAt": "2020-02-28T11:51:22Z", "author": {"login": "BuddhiWathsala"}, "path": "stdlib/http/src/main/ballerina/src/http/common_client_config.bal", "diffHunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk2ODEzMg=="}, "originalCommit": {"oid": "a629b58aa96dcd4b51d4dacbb876c5b717e0543b"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDExODc3OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/resiliency/failover_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwODoxNDozN1rOFvIp7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMTo1MDo1NlrOFvyfeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk2OTE5Nw==", "bodyText": "We can remove ProxyConfig as well as it is already grouped under ClientHttp1Settings type", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21275#discussion_r384969197", "createdAt": "2020-02-27T08:14:37Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/ballerina/src/http/resiliency/failover_client_endpoint.bal", "diffHunk": "@@ -434,37 +434,27 @@ function populateErrorsFromLastResponse (Response inResponse, ClientError?[] fai\n \n # Provides a set of HTTP related configurations and failover related configurations.\n #\n-# + httpVersion - The HTTP version to be used to communicate with the endpoint\n-# + http1Settings - Configurations related to HTTP/1.x protocol\n-# + http2Settings - Configurations related to HTTP/2 protocol\n-# + timeoutInMillis - The maximum time to wait (in milliseconds) for a response before closing the connection\n-# + forwarded - The choice of setting `forwarded`/`x-forwarded` header\n-# + followRedirects - Redirect related options\n-# + poolConfig - Configurations associated with request pooling\n+# httpVersion - Copied from CommonClientConfiguration\n+# http1Settings - Copied from CommonClientConfiguration\n+# http2Settings - Copied from CommonClientConfiguration\n+# timeoutInMillis - Copied from CommonClientConfiguration\n+# forwarded - Copied from CommonClientConfiguration\n+# followRedirects - Copied from CommonClientConfiguration\n+# poolConfig - Copied from CommonClientConfiguration\n+# cache - Copied from CommonClientConfiguration\n+# compression - Copied from CommonClientConfiguration\n+# auth - Copied from CommonClientConfiguration\n+# circuitBreaker - Copied from CommonClientConfiguration\n+# retryConfig - Copied from CommonClientConfiguration\n+# cookieConfig - Copied from CommonClientConfiguration\n # + proxy - Proxy related options\n # + targets - The upstream HTTP endpoints among which the incoming HTTP traffic load should be sent on failover\n-# + cache - The configurations for controlling the caching behaviour\n-# + compression - Specifies the way of handling compression (`accept-encoding`) header\n-# + auth - HTTP authentication related configurations\n-# + circuitBreaker - Circuit Breaker behaviour configurations\n-# + retryConfig - Retry related options\n # + failoverCodes - Array of HTTP response status codes for which the failover behaviour should be triggered\n # + intervalInMillis - Failover delay interval in milliseconds\n public type FailoverClientConfiguration record {|\n-    string httpVersion = HTTP_1_1;\n-    ClientHttp1Settings http1Settings = {};\n-    ClientHttp2Settings http2Settings = {};\n-    int timeoutInMillis = 60000;\n-    string forwarded = \"disable\";\n-    FollowRedirects? followRedirects = ();\n+    *CommonClientConfiguration;\n     ProxyConfig? proxy = ();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a629b58aa96dcd4b51d4dacbb876c5b717e0543b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY1NDY0OQ==", "bodyText": "Fixed in 2bbf173", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21275#discussion_r385654649", "createdAt": "2020-02-28T11:50:56Z", "author": {"login": "BuddhiWathsala"}, "path": "stdlib/http/src/main/ballerina/src/http/resiliency/failover_client_endpoint.bal", "diffHunk": "@@ -434,37 +434,27 @@ function populateErrorsFromLastResponse (Response inResponse, ClientError?[] fai\n \n # Provides a set of HTTP related configurations and failover related configurations.\n #\n-# + httpVersion - The HTTP version to be used to communicate with the endpoint\n-# + http1Settings - Configurations related to HTTP/1.x protocol\n-# + http2Settings - Configurations related to HTTP/2 protocol\n-# + timeoutInMillis - The maximum time to wait (in milliseconds) for a response before closing the connection\n-# + forwarded - The choice of setting `forwarded`/`x-forwarded` header\n-# + followRedirects - Redirect related options\n-# + poolConfig - Configurations associated with request pooling\n+# httpVersion - Copied from CommonClientConfiguration\n+# http1Settings - Copied from CommonClientConfiguration\n+# http2Settings - Copied from CommonClientConfiguration\n+# timeoutInMillis - Copied from CommonClientConfiguration\n+# forwarded - Copied from CommonClientConfiguration\n+# followRedirects - Copied from CommonClientConfiguration\n+# poolConfig - Copied from CommonClientConfiguration\n+# cache - Copied from CommonClientConfiguration\n+# compression - Copied from CommonClientConfiguration\n+# auth - Copied from CommonClientConfiguration\n+# circuitBreaker - Copied from CommonClientConfiguration\n+# retryConfig - Copied from CommonClientConfiguration\n+# cookieConfig - Copied from CommonClientConfiguration\n # + proxy - Proxy related options\n # + targets - The upstream HTTP endpoints among which the incoming HTTP traffic load should be sent on failover\n-# + cache - The configurations for controlling the caching behaviour\n-# + compression - Specifies the way of handling compression (`accept-encoding`) header\n-# + auth - HTTP authentication related configurations\n-# + circuitBreaker - Circuit Breaker behaviour configurations\n-# + retryConfig - Retry related options\n # + failoverCodes - Array of HTTP response status codes for which the failover behaviour should be triggered\n # + intervalInMillis - Failover delay interval in milliseconds\n public type FailoverClientConfiguration record {|\n-    string httpVersion = HTTP_1_1;\n-    ClientHttp1Settings http1Settings = {};\n-    ClientHttp2Settings http2Settings = {};\n-    int timeoutInMillis = 60000;\n-    string forwarded = \"disable\";\n-    FollowRedirects? followRedirects = ();\n+    *CommonClientConfiguration;\n     ProxyConfig? proxy = ();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk2OTE5Nw=="}, "originalCommit": {"oid": "a629b58aa96dcd4b51d4dacbb876c5b717e0543b"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDExOTg5OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/resiliency/load_balance_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwODoxNTowNlrOFvIqpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMTo1MDozNVrOFvyevw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk2OTM4Mg==", "bodyText": "We can remove ProxyConfig as well as it is already grouped under ClientHttp1Settings type", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21275#discussion_r384969382", "createdAt": "2020-02-27T08:15:06Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/ballerina/src/http/resiliency/load_balance_client_endpoint.bal", "diffHunk": "@@ -304,37 +304,27 @@ function populateGenericLoadBalanceActionError(LoadBalanceActionErrorData loadBa\n \n # The configurations related to the load balance client endpoint.\n #\n-# + httpVersion - The HTTP version to be used to communicate with the endpoint\n-# + http1Settings - Configurations related to HTTP/1.x protocol\n-# + http2Settings - Configurations related to HTTP/2 protocol\n-# + timeoutInMillis - The maximum time to wait (in milli seconds) for a response before closing the connection\n-# + forwarded - The choice of setting forwarded/x-forwarded header\n-# + followRedirects - Redirect related options\n-# + poolConfig - Configurations associated with request pooling\n+# httpVersion - Copied from CommonClientConfiguration\n+# http1Settings - Copied from CommonClientConfiguration\n+# http2Settings - Copied from CommonClientConfiguration\n+# timeoutInMillis - Copied from CommonClientConfiguration\n+# forwarded - Copied from CommonClientConfiguration\n+# followRedirects - Copied from CommonClientConfiguration\n+# poolConfig - Copied from CommonClientConfiguration\n+# cache - Copied from CommonClientConfiguration\n+# compression - Copied from CommonClientConfiguration\n+# auth - Copied from CommonClientConfiguration\n+# circuitBreaker - Copied from CommonClientConfiguration\n+# retryConfig - Copied from CommonClientConfiguration\n+# cookieConfig - Copied from CommonClientConfiguration\n # + proxy - Proxy related options\n # + targets - The upstream HTTP endpoints among which the incoming HTTP traffic load should be distributed\n-# + cache - The configurations for controlling the caching behaviour\n-# + compression - Specifies the way of handling compression (`accept-encoding`) header\n-# + auth - Configurations related to the HTTP authentication.\n-# + circuitBreaker - Circuit Breaker configuration\n-# + retryConfig - Retry related options\n # + lbRule - LoadBalancing rule\n # + failover - Configuration for load balancer whether to fail over in case of a failure\n public type LoadBalanceClientConfiguration record {|\n-    string httpVersion = HTTP_1_1;\n-    ClientHttp1Settings http1Settings = {};\n-    ClientHttp2Settings http2Settings = {};\n-    int timeoutInMillis = 60000;\n-    string forwarded = \"disable\";\n-    FollowRedirects? followRedirects = ();\n+    *CommonClientConfiguration;\n     ProxyConfig? proxy = ();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a629b58aa96dcd4b51d4dacbb876c5b717e0543b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY1NDQ2Mw==", "bodyText": "Fixed in 2bbf173", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21275#discussion_r385654463", "createdAt": "2020-02-28T11:50:35Z", "author": {"login": "BuddhiWathsala"}, "path": "stdlib/http/src/main/ballerina/src/http/resiliency/load_balance_client_endpoint.bal", "diffHunk": "@@ -304,37 +304,27 @@ function populateGenericLoadBalanceActionError(LoadBalanceActionErrorData loadBa\n \n # The configurations related to the load balance client endpoint.\n #\n-# + httpVersion - The HTTP version to be used to communicate with the endpoint\n-# + http1Settings - Configurations related to HTTP/1.x protocol\n-# + http2Settings - Configurations related to HTTP/2 protocol\n-# + timeoutInMillis - The maximum time to wait (in milli seconds) for a response before closing the connection\n-# + forwarded - The choice of setting forwarded/x-forwarded header\n-# + followRedirects - Redirect related options\n-# + poolConfig - Configurations associated with request pooling\n+# httpVersion - Copied from CommonClientConfiguration\n+# http1Settings - Copied from CommonClientConfiguration\n+# http2Settings - Copied from CommonClientConfiguration\n+# timeoutInMillis - Copied from CommonClientConfiguration\n+# forwarded - Copied from CommonClientConfiguration\n+# followRedirects - Copied from CommonClientConfiguration\n+# poolConfig - Copied from CommonClientConfiguration\n+# cache - Copied from CommonClientConfiguration\n+# compression - Copied from CommonClientConfiguration\n+# auth - Copied from CommonClientConfiguration\n+# circuitBreaker - Copied from CommonClientConfiguration\n+# retryConfig - Copied from CommonClientConfiguration\n+# cookieConfig - Copied from CommonClientConfiguration\n # + proxy - Proxy related options\n # + targets - The upstream HTTP endpoints among which the incoming HTTP traffic load should be distributed\n-# + cache - The configurations for controlling the caching behaviour\n-# + compression - Specifies the way of handling compression (`accept-encoding`) header\n-# + auth - Configurations related to the HTTP authentication.\n-# + circuitBreaker - Circuit Breaker configuration\n-# + retryConfig - Retry related options\n # + lbRule - LoadBalancing rule\n # + failover - Configuration for load balancer whether to fail over in case of a failure\n public type LoadBalanceClientConfiguration record {|\n-    string httpVersion = HTTP_1_1;\n-    ClientHttp1Settings http1Settings = {};\n-    ClientHttp2Settings http2Settings = {};\n-    int timeoutInMillis = 60000;\n-    string forwarded = \"disable\";\n-    FollowRedirects? followRedirects = ();\n+    *CommonClientConfiguration;\n     ProxyConfig? proxy = ();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk2OTM4Mg=="}, "originalCommit": {"oid": "a629b58aa96dcd4b51d4dacbb876c5b717e0543b"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDEyNzgyOnYy", "diffSide": "RIGHT", "path": "language-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion4.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwODoxODoxOFrOFvIvgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMTo1MDowNVrOFvyd4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk3MDYyNA==", "bodyText": "Shall we format the JSON using https://jsonformatter.curiousconcept.com/ and paste it here. Ideally, we need to add only the specific change. Most of these changes are just indentation.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21275#discussion_r384970624", "createdAt": "2020-02-27T08:18:18Z", "author": {"login": "chamil321"}, "path": "language-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion4.json", "diffHunk": "@@ -4,358 +4,336 @@\n     \"character\": 7\n   },\n   \"source\": \"function/source/chainCompletion4.bal\",\n-  \"items\": [\n-    {\n-      \"label\": \"shift()((any|error))\",\n-      \"kind\": \"Function\",\n-      \"detail\": \"Function\",\n-      \"documentation\": {\n-        \"right\": {\n-          \"kind\": \"markdown\",\n-          \"value\": \"**Package:** _ballerina/lang.array_  \\n  \\nRemoves and returns first member of an array.\\nThe array must not be empty.\\n  \\n  \\n  \\n**Returns** `(any|error)`   \\n- the value that was the first member of the array  \\n  \\n\"\n-        }\n-      },\n-      \"sortText\": \"120\",\n-      \"insertText\": \"shift()\",\n-      \"insertTextFormat\": \"Snippet\"\n+  \"items\": [{\n+    \"label\": \"shift()((any|error))\",\n+    \"kind\": \"Function\",\n+    \"detail\": \"Function\",\n+    \"documentation\": {\n+      \"right\": {\n+        \"kind\": \"markdown\",\n+        \"value\": \"**Package:** _ballerina/lang.array_  \\n  \\nRemoves and returns first member of an array.\\nThe array must not be empty.\\n  \\n  \\n  \\n**Returns** `(any|error)`   \\n- the value that was the first member of the array  \\n  \\n\"\n+      }\n     },\n-    {\n-      \"label\": \"toStream()(stream<(anydata|error)><(anydata|error)>)\",\n-      \"kind\": \"Function\",\n-      \"detail\": \"Function\",\n-      \"documentation\": {\n-        \"right\": {\n-          \"kind\": \"markdown\",\n-          \"value\": \"**Package:** _ballerina/lang.array_  \\n  \\nReturns a stream from the given array.\\n  \\n\"\n-        }\n-      },\n-      \"sortText\": \"120\",\n-      \"insertText\": \"toStream()\",\n-      \"insertTextFormat\": \"Snippet\"\n+    \"sortText\": \"120\",\n+    \"insertText\": \"shift()\",\n+    \"insertTextFormat\": \"Snippet\"\n+  }, {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a629b58aa96dcd4b51d4dacbb876c5b717e0543b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY1NDI0MQ==", "bodyText": "Fixed in 44296d1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21275#discussion_r385654241", "createdAt": "2020-02-28T11:50:05Z", "author": {"login": "BuddhiWathsala"}, "path": "language-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion4.json", "diffHunk": "@@ -4,358 +4,336 @@\n     \"character\": 7\n   },\n   \"source\": \"function/source/chainCompletion4.bal\",\n-  \"items\": [\n-    {\n-      \"label\": \"shift()((any|error))\",\n-      \"kind\": \"Function\",\n-      \"detail\": \"Function\",\n-      \"documentation\": {\n-        \"right\": {\n-          \"kind\": \"markdown\",\n-          \"value\": \"**Package:** _ballerina/lang.array_  \\n  \\nRemoves and returns first member of an array.\\nThe array must not be empty.\\n  \\n  \\n  \\n**Returns** `(any|error)`   \\n- the value that was the first member of the array  \\n  \\n\"\n-        }\n-      },\n-      \"sortText\": \"120\",\n-      \"insertText\": \"shift()\",\n-      \"insertTextFormat\": \"Snippet\"\n+  \"items\": [{\n+    \"label\": \"shift()((any|error))\",\n+    \"kind\": \"Function\",\n+    \"detail\": \"Function\",\n+    \"documentation\": {\n+      \"right\": {\n+        \"kind\": \"markdown\",\n+        \"value\": \"**Package:** _ballerina/lang.array_  \\n  \\nRemoves and returns first member of an array.\\nThe array must not be empty.\\n  \\n  \\n  \\n**Returns** `(any|error)`   \\n- the value that was the first member of the array  \\n  \\n\"\n+      }\n     },\n-    {\n-      \"label\": \"toStream()(stream<(anydata|error)><(anydata|error)>)\",\n-      \"kind\": \"Function\",\n-      \"detail\": \"Function\",\n-      \"documentation\": {\n-        \"right\": {\n-          \"kind\": \"markdown\",\n-          \"value\": \"**Package:** _ballerina/lang.array_  \\n  \\nReturns a stream from the given array.\\n  \\n\"\n-        }\n-      },\n-      \"sortText\": \"120\",\n-      \"insertText\": \"toStream()\",\n-      \"insertTextFormat\": \"Snippet\"\n+    \"sortText\": \"120\",\n+    \"insertText\": \"shift()\",\n+    \"insertTextFormat\": \"Snippet\"\n+  }, {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk3MDYyNA=="}, "originalCommit": {"oid": "a629b58aa96dcd4b51d4dacbb876c5b717e0543b"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 998, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}