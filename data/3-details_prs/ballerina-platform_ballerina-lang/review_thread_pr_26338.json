{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNTIyOTkx", "number": 26338, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODozMToyNVrOEtX_Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODozMToyNVrOEtX_Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDE0MzgzOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/Parser.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODozMToyNVrOHhIFKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjoxMzoyMlrOHhayZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ5NzQ1MA==", "bodyText": "With this change, now we don't need to convert a SyntaxDiagnostic to BLangDiagnostic. Shall we remove that conversion too?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26338#discussion_r504497450", "createdAt": "2020-10-14T08:31:25Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/Parser.java", "diffHunk": "@@ -150,9 +150,9 @@ private void reportSyntaxDiagnostics(BDiagnosticSource diagnosticSource, SyntaxT\n             Location syntaxLocation = syntaxDiagnostic.location();\n             LineRange lineRange = syntaxLocation.lineRange();\n             LinePosition startLine = lineRange.startLine();\n-            LinePosition endLine = lineRange.startLine();\n-            Location location = new BLangDiagnosticLocation(diagnosticSource.cUnitName, startLine.line() + 1,\n-                    endLine.line() + 1, startLine.offset() + 1, endLine.offset() + 1);\n+            LinePosition endLine = lineRange.endLine();\n+            Location location = new BLangDiagnosticLocation(diagnosticSource.cUnitName, startLine.line(),\n+                                                            endLine.line(), startLine.offset(), endLine.offset());\n             BLangDiagnostic diag =\n                     new BLangDiagnostic(location, syntaxDiagnostic.message(), syntaxDiagnostic.diagnosticInfo());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a59bd55e7c24d1db3f213c4676093ea4cdc6f8f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUwNDIxOQ==", "bodyText": "Ah ideally yes. Wanted to bring that up actually. That was what I tried at first. But for some reason that broke the sorting of the diagnostics. The syntax diagnostics and semantic diagnostics got interspersed. In our current implementation, we show the syntax errors first and then the semantic errors.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26338#discussion_r504504219", "createdAt": "2020-10-14T08:41:46Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/Parser.java", "diffHunk": "@@ -150,9 +150,9 @@ private void reportSyntaxDiagnostics(BDiagnosticSource diagnosticSource, SyntaxT\n             Location syntaxLocation = syntaxDiagnostic.location();\n             LineRange lineRange = syntaxLocation.lineRange();\n             LinePosition startLine = lineRange.startLine();\n-            LinePosition endLine = lineRange.startLine();\n-            Location location = new BLangDiagnosticLocation(diagnosticSource.cUnitName, startLine.line() + 1,\n-                    endLine.line() + 1, startLine.offset() + 1, endLine.offset() + 1);\n+            LinePosition endLine = lineRange.endLine();\n+            Location location = new BLangDiagnosticLocation(diagnosticSource.cUnitName, startLine.line(),\n+                                                            endLine.line(), startLine.offset(), endLine.offset());\n             BLangDiagnostic diag =\n                     new BLangDiagnostic(location, syntaxDiagnostic.message(), syntaxDiagnostic.diagnosticInfo());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ5NzQ1MA=="}, "originalCommit": {"oid": "0a59bd55e7c24d1db3f213c4676093ea4cdc6f8f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgwMzk0MQ==", "bodyText": "Fixed with 506d8b8", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26338#discussion_r504803941", "createdAt": "2020-10-14T16:13:22Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/Parser.java", "diffHunk": "@@ -150,9 +150,9 @@ private void reportSyntaxDiagnostics(BDiagnosticSource diagnosticSource, SyntaxT\n             Location syntaxLocation = syntaxDiagnostic.location();\n             LineRange lineRange = syntaxLocation.lineRange();\n             LinePosition startLine = lineRange.startLine();\n-            LinePosition endLine = lineRange.startLine();\n-            Location location = new BLangDiagnosticLocation(diagnosticSource.cUnitName, startLine.line() + 1,\n-                    endLine.line() + 1, startLine.offset() + 1, endLine.offset() + 1);\n+            LinePosition endLine = lineRange.endLine();\n+            Location location = new BLangDiagnosticLocation(diagnosticSource.cUnitName, startLine.line(),\n+                                                            endLine.line(), startLine.offset(), endLine.offset());\n             BLangDiagnostic diag =\n                     new BLangDiagnostic(location, syntaxDiagnostic.message(), syntaxDiagnostic.diagnosticInfo());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ5NzQ1MA=="}, "originalCommit": {"oid": "0a59bd55e7c24d1db3f213c4676093ea4cdc6f8f"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4724, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}