{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NDkyNjI1", "number": 26542, "title": "Refactor debug logs in transactions module", "bodyText": "Purpose\n\nDescribe the problems, issues, or needs driving this feature/fix and include links to related issues.\n\nFixes #26367\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-10-22T18:53:19Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26542", "merged": true, "mergeCommit": {"oid": "b35c1ae90657bf7007d0583aaffbe60953acd91a"}, "closed": true, "closedAt": "2020-10-23T07:07:20Z", "author": {"login": "gimantha"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVGlpqAH2gAyNTA4NDkyNjI1OjkwMzUzYWQ2NjM5OTBjZGRiZjczZGIzN2E2NjJkZmJhMDY4ZDhlMTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVRIaOgFqTUxNTM5NjQ3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "90353ad663990cddbf73db37a662dfba068d8e16", "author": {"user": {"login": "gimantha", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/90353ad663990cddbf73db37a662dfba068d8e16", "committedDate": "2020-10-22T18:50:12Z", "message": "Change debug logs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MDUzNzAz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26542#pullrequestreview-515053703", "createdAt": "2020-10-22T19:31:42Z", "commit": {"oid": "90353ad663990cddbf73db37a662dfba068d8e16"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxOTozMTo0M1rOHmwv5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxOTozMTo0N1rOHmwwCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNjYyOA==", "bodyText": "Shall we order the imports alphabetically?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26542#discussion_r510406628", "createdAt": "2020-10-22T19:31:43Z", "author": {"login": "MaryamZi"}, "path": "stdlib/transactions/src/main/ballerina/src/transactions/2pc_participant.bal", "diffHunk": "@@ -15,6 +15,7 @@\n // under the License.\n \n import ballerina/log;\n+import ballerina/io;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90353ad663990cddbf73db37a662dfba068d8e16"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNjY2Ng==", "bodyText": "Even with this approach, the argument is evaluated (new string is created), right? We need to pass a function pointer.\ne.g.,\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    log:printDebug(io:sprintf(\"Preparing remote participant: %s\", self.participantId));\n          \n          \n            \n                    log:printDebug(() => io:sprintf(\"Preparing remote participant: %s\", self.participantId));\n          \n      \n    \n    \n  \n\nor\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    log:printDebug(io:sprintf(\"Preparing remote participant: %s\", self.participantId));\n          \n          \n            \n                    log:printDebug(function () {\n          \n          \n            \n                        io:sprintf(\"Preparing remote participant: %s\", self.participantId)\n          \n          \n            \n                    });", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26542#discussion_r510406666", "createdAt": "2020-10-22T19:31:47Z", "author": {"login": "MaryamZi"}, "path": "stdlib/transactions/src/main/ballerina/src/transactions/2pc_participant.bal", "diffHunk": "@@ -96,27 +97,27 @@ type RemoteParticipant object {\n         // to prepare a participant\n         boolean successful = true;\n \n-        log:printDebug(\"Preparing remote participant: \" + self.participantId);\n+        log:printDebug(io:sprintf(\"Preparing remote participant: %s\", self.participantId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90353ad663990cddbf73db37a662dfba068d8e16"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84f3f33e172f33ea29c101e2fce467e897c55337", "author": {"user": {"login": "gimantha", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/84f3f33e172f33ea29c101e2fce467e897c55337", "committedDate": "2020-10-23T02:15:10Z", "message": "Add function pointer to printDebug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6eb15fb94883bf11d20d700e635935a532a34a5", "author": {"user": {"login": "gimantha", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c6eb15fb94883bf11d20d700e635935a532a34a5", "committedDate": "2020-10-23T05:50:00Z", "message": "Assign index based access variables to simple variables"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1Mzk2NDc1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26542#pullrequestreview-515396475", "createdAt": "2020-10-23T07:07:13Z", "commit": {"oid": "c6eb15fb94883bf11d20d700e635935a532a34a5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4257, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}