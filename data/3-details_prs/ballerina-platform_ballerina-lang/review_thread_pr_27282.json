{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNzI5ODI3", "number": 27282, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDozNjoyM1rOE_coeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNDo0MTo1M1rOFDz93Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTY0ODU4OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-tools-api/src/main/java/io/ballerina/tools/diagnostics/DiagnosticInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDozNjoyM1rOH9KIAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDozNjoyM1rOH9KIAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5MTA3Mg==", "bodyText": "Shouldn't this args part of the DiagnosticRelatedInformation?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27282#discussion_r533891072", "createdAt": "2020-12-02T04:36:23Z", "author": {"login": "rasika"}, "path": "compiler/ballerina-tools-api/src/main/java/io/ballerina/tools/diagnostics/DiagnosticInfo.java", "diffHunk": "@@ -32,21 +32,31 @@\n     private final String messageTemplate;\n     private final DiagnosticSeverity severity;\n     private final Collection<DiagnosticRelatedInformation> relatedInformation;\n+    private Object[] args;\n \n     public DiagnosticInfo(String code,\n                           String messageTemplate,\n                           DiagnosticSeverity severity) {\n-        this(code, messageTemplate, severity, Collections.emptyList());\n+        this(code, messageTemplate, severity, Collections.emptyList(), null);\n     }\n \n     public DiagnosticInfo(String code,\n                           String messageTemplate,\n                           DiagnosticSeverity severity,\n-                          Collection<DiagnosticRelatedInformation> relatedInformation) {\n+                          Object[] args) {\n+        this(code, messageTemplate, severity, Collections.emptyList(), args);\n+    }\n+\n+    public DiagnosticInfo(String code,\n+                          String messageTemplate,\n+                          DiagnosticSeverity severity,\n+                          Collection<DiagnosticRelatedInformation> relatedInformation,\n+                          Object[] args) {\n         this.code = code;\n         this.messageTemplate = messageTemplate;\n         this.severity = severity;\n         this.relatedInformation = relatedInformation;\n+        this.args = args;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02922e9316333de33960119daca420cfccb9fa31"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTY1OTE4OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-tools-api/src/main/java/io/ballerina/tools/diagnostics/DiagnosticInfo.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDo0MTo0NlrOH9KN4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjozNTowOFrOH_C1Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5MjU3Nw==", "bodyText": "Args being Object api-consumer need to call instanceOf. Can't we have a specific thing for symbol-info where the type is Symbol", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27282#discussion_r533892577", "createdAt": "2020-12-02T04:41:46Z", "author": {"login": "rasika"}, "path": "compiler/ballerina-tools-api/src/main/java/io/ballerina/tools/diagnostics/DiagnosticInfo.java", "diffHunk": "@@ -64,4 +74,8 @@ public DiagnosticSeverity severity() {\n     public Collection<DiagnosticRelatedInformation> relatedInformation() {\n         return relatedInformation;\n     }\n+\n+    public Object[] getArgs() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02922e9316333de33960119daca420cfccb9fa31"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNzk3MA==", "bodyText": "In BlangDiagnosticLog usages (such as error() method), sometimes it takes BTypes and sometimes Strings. That's why I have allowed for Object. Any alternative way to do this ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27282#discussion_r533917970", "createdAt": "2020-12-02T06:06:50Z", "author": {"login": "dulajdilshan"}, "path": "compiler/ballerina-tools-api/src/main/java/io/ballerina/tools/diagnostics/DiagnosticInfo.java", "diffHunk": "@@ -64,4 +74,8 @@ public DiagnosticSeverity severity() {\n     public Collection<DiagnosticRelatedInformation> relatedInformation() {\n         return relatedInformation;\n     }\n+\n+    public Object[] getArgs() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5MjU3Nw=="}, "originalCommit": {"oid": "02922e9316333de33960119daca420cfccb9fa31"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2ODczNA==", "bodyText": "Yes, IMO at this phase, we cannot migrate all diagnostics into args based templates. Even we do, there's no point in retrieving string args since it does not contain any symbol meta-data. What diagnostics messages missing are the symbol-info. Thus, it should be symbol-info which are optional and may provided by some diagnostics such as incompatible types.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27282#discussion_r535868734", "createdAt": "2020-12-04T06:35:08Z", "author": {"login": "rasika"}, "path": "compiler/ballerina-tools-api/src/main/java/io/ballerina/tools/diagnostics/DiagnosticInfo.java", "diffHunk": "@@ -64,4 +74,8 @@ public DiagnosticSeverity severity() {\n     public Collection<DiagnosticRelatedInformation> relatedInformation() {\n         return relatedInformation;\n     }\n+\n+    public Object[] getArgs() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5MjU3Nw=="}, "originalCommit": {"oid": "02922e9316333de33960119daca420cfccb9fa31"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NTQxNDY5OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/diagnostic/BLangDiagnostic.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNDo0MTo1M1rOIDo36Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwOToxMDozNlrOIDvngQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY4NjMxMw==", "bodyText": "Shall we pass Collections.emptyList() to avoid possible NPEs and minimize null checks from the api-consumer side", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27282#discussion_r540686313", "createdAt": "2020-12-11T04:41:53Z", "author": {"login": "rasika"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/diagnostic/BLangDiagnostic.java", "diffHunk": "@@ -34,20 +37,20 @@\n     private String msg;\n     private DiagnosticInfo diagnosticInfo;\n     private DiagnosticCode diagnosticCode;\n+    private List<DiagnosticProperty> properties;\n \n-    public BLangDiagnostic(Location location, String msg, DiagnosticInfo diagnosticInfo) {\n-        this.location = location;\n-        this.msg = msg;\n-        this.diagnosticInfo = diagnosticInfo;\n-        this.diagnosticCode = null;\n+    public BLangDiagnostic(Location location, String msg, DiagnosticInfo diagnosticInfo,\n+                           DiagnosticCode diagnosticCode) {\n+        this(location, msg, diagnosticInfo, diagnosticCode, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35fba7e77f883e0919763ed5e26f411c2a7e1517"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc5NjgwMQ==", "bodyText": "sure", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27282#discussion_r540796801", "createdAt": "2020-12-11T09:10:36Z", "author": {"login": "dulajdilshan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/diagnostic/BLangDiagnostic.java", "diffHunk": "@@ -34,20 +37,20 @@\n     private String msg;\n     private DiagnosticInfo diagnosticInfo;\n     private DiagnosticCode diagnosticCode;\n+    private List<DiagnosticProperty> properties;\n \n-    public BLangDiagnostic(Location location, String msg, DiagnosticInfo diagnosticInfo) {\n-        this.location = location;\n-        this.msg = msg;\n-        this.diagnosticInfo = diagnosticInfo;\n-        this.diagnosticCode = null;\n+    public BLangDiagnostic(Location location, String msg, DiagnosticInfo diagnosticInfo,\n+                           DiagnosticCode diagnosticCode) {\n+        this(location, msg, diagnosticInfo, diagnosticCode, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY4NjMxMw=="}, "originalCommit": {"oid": "35fba7e77f883e0919763ed5e26f411c2a7e1517"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2816, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}