{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwOTI0OTkz", "number": 23396, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMjo0MDowMFrOD-dILA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMjo0MDowMFrOD-dILA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODE1NTMyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMjo0MDowMFrOGYkUMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNDowMzoxMlrOGYlewA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQxNDAwMQ==", "bodyText": "Shouldn\u2019t we use createExpression()?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23396#discussion_r428414001", "createdAt": "2020-05-21T02:40:00Z", "author": {"login": "dulvinw"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -1082,6 +1163,44 @@ public BLangNode transform(TemplateExpressionNode expressionNode) {\n         }\n     }\n \n+    @Override\n+    public BLangNode transform(TableConstructorExpressionNode tableConstructorExpressionNode) {\n+        BLangTableConstructorExpr tableConstructorExpr =\n+                (BLangTableConstructorExpr) TreeBuilder.createTableConstructorExpressionNode();\n+        tableConstructorExpr.pos = getPosition(tableConstructorExpressionNode);\n+\n+        for (Node node : tableConstructorExpressionNode.mappingConstructors()) {\n+            tableConstructorExpr.addRecordLiteral((BLangRecordLiteral) node.apply(this));\n+        }\n+        if (tableConstructorExpressionNode.keySpecifier() != null) {\n+            tableConstructorExpr.tableKeySpecifier =\n+                    (BLangTableKeySpecifier) tableConstructorExpressionNode.keySpecifier().apply(this);\n+        }\n+        return tableConstructorExpr;\n+    }\n+\n+    @Override\n+    public BLangNode transform(TrapExpressionNode trapExpressionNode) {\n+        BLangTrapExpr trapExpr = (BLangTrapExpr) TreeBuilder.createTrapExpressionNode();\n+        trapExpr.expr = (BLangExpression) trapExpressionNode.expression().apply(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c8acdc9aaa466b4389976e190bf4660b1a42512"}, "originalPosition": 222}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQzMzA4OA==", "bodyText": "yes, changed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23396#discussion_r428433088", "createdAt": "2020-05-21T04:03:12Z", "author": {"login": "KavinduZoysa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -1082,6 +1163,44 @@ public BLangNode transform(TemplateExpressionNode expressionNode) {\n         }\n     }\n \n+    @Override\n+    public BLangNode transform(TableConstructorExpressionNode tableConstructorExpressionNode) {\n+        BLangTableConstructorExpr tableConstructorExpr =\n+                (BLangTableConstructorExpr) TreeBuilder.createTableConstructorExpressionNode();\n+        tableConstructorExpr.pos = getPosition(tableConstructorExpressionNode);\n+\n+        for (Node node : tableConstructorExpressionNode.mappingConstructors()) {\n+            tableConstructorExpr.addRecordLiteral((BLangRecordLiteral) node.apply(this));\n+        }\n+        if (tableConstructorExpressionNode.keySpecifier() != null) {\n+            tableConstructorExpr.tableKeySpecifier =\n+                    (BLangTableKeySpecifier) tableConstructorExpressionNode.keySpecifier().apply(this);\n+        }\n+        return tableConstructorExpr;\n+    }\n+\n+    @Override\n+    public BLangNode transform(TrapExpressionNode trapExpressionNode) {\n+        BLangTrapExpr trapExpr = (BLangTrapExpr) TreeBuilder.createTrapExpressionNode();\n+        trapExpr.expr = (BLangExpression) trapExpressionNode.expression().apply(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQxNDAwMQ=="}, "originalCommit": {"oid": "3c8acdc9aaa466b4389976e190bf4660b1a42512"}, "originalPosition": 222}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3574, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}