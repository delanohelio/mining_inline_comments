{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNTMxOTc2", "number": 20604, "title": "Fix incorrect array length when sliced", "bodyText": "Purpose\n$title\n    int [*] arr = [1,2,3,4,5,6];\n    io:println(\"arr : \", arr);\n    io:println(\"arr.length() : \", arr.length());    \n\n    int [] myNewArray = arr.slice(0,2);\n    io:println(\"myNewArray : \", myNewArray);\n    io:println(\"myNewArray.length() : \", myNewArray.length());\n\nPreviously\narr : 1 2 3 4 5 6\narr.length() : 6\nmyNewArray : 1 2 0 0 0 0\nmyNewArray.length() : 6\n\nWith this PR\narr : 1 2 3 4 5 6\narr.length() : 6\nmyNewArray : 1 2\nmyNewArray.length() : 2\n\n\nWith this, a sliced array will have a fixed size and pushing an element will throw a runtime error.\nI'll create an issue on spec repository to clarify if this is the expected outcome.\nEdit: Created ballerina-platform/ballerina-spec#391\nFixes #20574\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-01-14T09:31:51Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20604", "merged": true, "mergeCommit": {"oid": "df8b6b2253ccafa091e65742b4b0c0d3d46f929e"}, "closed": true, "closedAt": "2020-01-24T08:32:06Z", "author": {"login": "irshadnilam"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6yKVugFqTM0MzY2MzgxNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9at4EgFqTM0NzgwNDk3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNjYzODE3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20604#pullrequestreview-343663817", "createdAt": "2020-01-16T04:09:05Z", "commit": {"oid": "d6d34e6e636bf02945fb3eb9d3ccc173c729ec06"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNjY1ODQ2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20604#pullrequestreview-343665846", "createdAt": "2020-01-16T04:19:42Z", "commit": {"oid": "d6d34e6e636bf02945fb3eb9d3ccc173c729ec06"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwNDoxOTo0MlrOFeNlbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwNDoxOTo0MlrOFeNlbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzIyNDE3Mg==", "bodyText": "I think the array slice should be directly supported by ArrayValue. That way we can use java's system.ArrayCopy which is a native JVM implementation and probably be much faster. Shall we create an issue for that.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20604#discussion_r367224172", "createdAt": "2020-01-16T04:19:42Z", "author": {"login": "rdhananjaya"}, "path": "langlib/lang.array/src/main/java/org/ballerinalang/langlib/array/Slice.java", "diffHunk": "@@ -77,7 +77,7 @@ public static ArrayValue slice(Strand strand, ArrayValue arr, long startIndex, l\n \n         switch (arrType.getTag()) {\n             case TypeTags.ARRAY_TAG:\n-                slicedArr = new ArrayValueImpl((BArrayType) arrType);\n+                slicedArr = new ArrayValueImpl((BArrayType) arrType, sliceSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6d34e6e636bf02945fb3eb9d3ccc173c729ec06"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNjc3NDY2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20604#pullrequestreview-343677466", "createdAt": "2020-01-16T05:16:10Z", "commit": {"oid": "e66c92b8a4049205c68dcaa58e0d38dfa2b62fb7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwNToxNjoxMFrOFeOMkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwNToxNjoxMFrOFeOMkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzIzNDE5NQ==", "bodyText": "Can you add test cases for fixed-length arrays as well (if they aren't there)? Both positive and negative cases.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20604#discussion_r367234195", "createdAt": "2020-01-16T05:16:10Z", "author": {"login": "pubudu91"}, "path": "langlib/langlib-test/src/test/java/org/ballerinalang/langlib/test/LangLibArrayTest.java", "diffHunk": "@@ -120,19 +120,39 @@ public void testSlice() {\n         assertEquals(arr.getFloat(0), 23.45);\n         assertEquals(arr.getFloat(1), 34.56);\n         assertEquals(arr.getFloat(2), 45.67);\n+        assertEquals(((BInteger) result.getRefValue(1)).intValue(), 3);\n \n-        arr = (BValueArray) result.getRefValue(1);\n+        arr = (BValueArray) result.getRefValue(2);\n         assertEquals(arr.elementType.getTag(), TypeTags.FLOAT_TAG);\n         assertEquals(arr.size(), 3);\n         assertEquals(arr.getFloat(0), 34.56);\n         assertEquals(arr.getFloat(1), 45.67);\n         assertEquals(arr.getFloat(2), 56.78);\n+        assertEquals(((BInteger) result.getRefValue(3)).intValue(), 3);\n \n-        arr = (BValueArray) result.getRefValue(2);\n+        arr = (BValueArray) result.getRefValue(4);\n         assertEquals(arr.elementType.getTag(), TypeTags.FLOAT_TAG);\n         assertEquals(arr.size(), 2);\n         assertEquals(arr.getFloat(0), 45.67);\n         assertEquals(arr.getFloat(1), 56.78);\n+        assertEquals(((BInteger) result.getRefValue(5)).intValue(), 2);\n+    }\n+\n+    @Test\n+    public void testPushAfterSlice() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e66c92b8a4049205c68dcaa58e0d38dfa2b62fb7"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzODQ2NjI0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20604#pullrequestreview-343846624", "createdAt": "2020-01-16T11:30:04Z", "commit": {"oid": "719d0655d5b8e45c1aee726c72362afcc1d1feea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e6408544f6e0364dd29334a77e390e5edbb2b9b", "author": {"user": {"login": "irshadnilam", "name": "Irshad Nilam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1e6408544f6e0364dd29334a77e390e5edbb2b9b", "committedDate": "2020-01-20T04:20:00Z", "message": "Fix incorrect array length when sliced"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea74ff2fd26d5121c1b45b98b416f19a605286cb", "author": {"user": {"login": "irshadnilam", "name": "Irshad Nilam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ea74ff2fd26d5121c1b45b98b416f19a605286cb", "committedDate": "2020-01-20T04:20:00Z", "message": "Support pushing elements to a sliced array"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3ODA0OTc0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20604#pullrequestreview-347804974", "createdAt": "2020-01-24T08:31:57Z", "commit": {"oid": "ea74ff2fd26d5121c1b45b98b416f19a605286cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4307, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}