{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2Mjk5MTU1", "number": 20714, "title": "Fix the spec deviation in Unicode", "bodyText": "Purpose\n$subject\nFixes #13180\nApproach\nChange the lexer to add the curly braces to Unicode.\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-01-23T10:52:25Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714", "merged": true, "mergeCommit": {"oid": "fd1c7b86f176474685296fafdae195e8836cd7ea"}, "closed": true, "closedAt": "2020-02-07T13:58:52Z", "author": {"login": "KavinduZoysa"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9Xz6tAFqTM0Nzc1MDAxMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcB8T24AFqTM1NTA0Mzk4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NzUwMDEx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#pullrequestreview-347750011", "createdAt": "2020-01-24T04:50:35Z", "commit": {"oid": "b76906d713684ecad0b9d7ba12abb7c8fe984197"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNDo1MDozNVrOFhT3xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNDo1MToxMVrOFhT4Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ3MjkwMA==", "bodyText": "IIUC, the spec says this is invalid, should we improve the error message instead of saying unsupported?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#discussion_r370472900", "createdAt": "2020-01-24T04:50:35Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/resources/compiler.properties", "diffHunk": "@@ -1143,3 +1143,6 @@ error.mapping.constructor.compatible.type.not.found =\\\n \n error.cannot.infer.types.for.tuple.binding=\\\n   invalid list constructor expression: types cannot be inferred for ''{0}''\n+\n+error.unsupported.unicode=\\\n+  unsupported unicode ''{0}''", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b76906d713684ecad0b9d7ba12abb7c8fe984197"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ3MzAzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class UniCodeTest {\n          \n          \n            \n            public class UnicodeTest {\n          \n      \n    \n    \n  \n\nShall we fix wherever applicable?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#discussion_r370473030", "createdAt": "2020-01-24T04:51:11Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/string/UniCodeTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.test.types.string;\n+\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.BRunUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * Negative test class to check the Unicode patterns.\n+ */\n+public class UniCodeTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b76906d713684ecad0b9d7ba12abb7c8fe984197"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NzU3MjIz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#pullrequestreview-347757223", "createdAt": "2020-01-24T05:31:00Z", "commit": {"oid": "b76906d713684ecad0b9d7ba12abb7c8fe984197"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNTozMTowMFrOFhUQIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNTozMTowMFrOFhUQIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ3OTEzOQ==", "bodyText": "do we need [{] and [}] instead we should be able to use \\\\{ and \\\\}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#discussion_r370479139", "createdAt": "2020-01-24T05:31:00Z", "author": {"login": "rdhananjaya"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/util/Constants.java", "diffHunk": "@@ -40,4 +40,5 @@ private Constants() {\n \n     public static final int INIT_METHOD_SPLIT_SIZE = 50;\n \n+    public static final String UNICODE_REGEX = \"\\\\\\\\u[{]([a-fA-F0-9]*)[}]\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b76906d713684ecad0b9d7ba12abb7c8fe984197"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9719f42b0d9738bf82295c1bd85bf89dcca2b65", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f9719f42b0d9738bf82295c1bd85bf89dcca2b65", "committedDate": "2020-01-24T05:57:17Z", "message": "Change the error message"}, "afterCommit": {"oid": "528c5ccfb28c2d2ee4c41c1be7fd59cf27f49af0", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/528c5ccfb28c2d2ee4c41c1be7fd59cf27f49af0", "committedDate": "2020-01-24T06:09:17Z", "message": "Change the error message"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3Nzg4MDY1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#pullrequestreview-347788065", "createdAt": "2020-01-24T07:44:03Z", "commit": {"oid": "2a9f024b68c862452609ede02c27bf75d9a95096"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNzo0NDowM1rOFhV01Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNzo0NDowM1rOFhV01Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUwNDkxNw==", "bodyText": "Instead of discarding the previous match data and starting from the beginning we can start from the previous matchers end index.\nint idx = 0;\nwhile (matcher.find(idx)) {\n    ....\n    text = matcher.replaceFirst(\"\\\\\\\\u\" + hexStringVal);\n    idx = matcher.end() - 2;  // 2 assuming we remove two characters only by the replace\n    matcher = pattern.matcher(text);\n}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#discussion_r370504917", "createdAt": "2020-01-24T07:44:03Z", "author": {"login": "KRVPerera"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java", "diffHunk": "@@ -2648,6 +2651,22 @@ public void exitSimpleLiteral(BallerinaParser.SimpleLiteralContext ctx) {\n         } else if ((node = ctx.QuotedStringLiteral()) != null) {\n             String text = node.getText();\n             text = text.substring(1, text.length() - 1);\n+            String originalText = text; // to log the errors\n+            Pattern pattern = Pattern.compile(Constants.UNICODE_REGEX);\n+            Matcher matcher = pattern.matcher(text);\n+            while (matcher.find()) {\n+                String hexStringVal = matcher.group(1);\n+                int hexDecimalVal = Integer.parseInt(hexStringVal, 16);\n+                if ((hexDecimalVal >= 0xD800 && hexDecimalVal <= 0xDFFF) || hexDecimalVal > 0x10FFFF) {\n+                    String hexStringWithBraces = matcher.group(0);\n+                    int offset = originalText.indexOf(hexStringWithBraces) + 1;\n+                    dlog.error(new DiagnosticPos(diagnosticSrc, pos.sLine, pos.eLine, pos.sCol + offset,\n+                                    pos.sCol + offset + hexStringWithBraces.length()),\n+                            DiagnosticCode.INVALID_UNICODE, hexStringWithBraces);\n+                }\n+                text = matcher.replaceFirst(\"\\\\\\\\u\" + hexStringVal);\n+                matcher = pattern.matcher(text);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a9f024b68c862452609ede02c27bf75d9a95096"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MzI2NDU5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#pullrequestreview-349326459", "createdAt": "2020-01-28T12:11:04Z", "commit": {"oid": "50a59fbcca28b86c9fb0404840ee4edb698307b4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODQwMjYz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#pullrequestreview-349840263", "createdAt": "2020-01-29T03:12:43Z", "commit": {"oid": "50a59fbcca28b86c9fb0404840ee4edb698307b4"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMzoxMjo0M1rOFi7eqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMzoyNDozOVrOFi7nfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE3MDQwOA==", "bodyText": "Since this will be called more than once (in a general scenario when compiling a Ballerina program), I think it is better to compile this Regex once (declare as a top level variable) to reduce the overhead. WDYT?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#discussion_r372170408", "createdAt": "2020-01-29T03:12:43Z", "author": {"login": "Shan1024"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java", "diffHunk": "@@ -2648,6 +2651,24 @@ public void exitSimpleLiteral(BallerinaParser.SimpleLiteralContext ctx) {\n         } else if ((node = ctx.QuotedStringLiteral()) != null) {\n             String text = node.getText();\n             text = text.substring(1, text.length() - 1);\n+            String originalText = text; // to log the errors\n+            Pattern pattern = Pattern.compile(Constants.UNICODE_REGEX);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50a59fbcca28b86c9fb0404840ee4edb698307b4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE3MTkxMg==", "bodyText": "Adding braces around the value looks bit weird. Is there any specific reason to do this? \ud83d\ude05", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#discussion_r372171912", "createdAt": "2020-01-29T03:20:34Z", "author": {"login": "Shan1024"}, "path": "compiler/ballerina-lang/src/main/resources/grammar/BallerinaLexer.g4", "diffHunk": "@@ -341,7 +341,7 @@ EscapeSequence\n \n fragment\n UnicodeEscape\n-    :   '\\\\' 'u' HexDigit HexDigit HexDigit HexDigit\n+    :   '\\\\' 'u' LEFT_BRACE HexDigit+ RIGHT_BRACE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50a59fbcca28b86c9fb0404840ee4edb698307b4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE3MjIxMw==", "bodyText": "Lexer rule is defined as HexDigit+. But here, the regex is defined as [a-fA-F0-9]*. I think this can be changed to [a-fA-F0-9]+. WDYT?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#discussion_r372172213", "createdAt": "2020-01-29T03:22:10Z", "author": {"login": "Shan1024"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/util/Constants.java", "diffHunk": "@@ -40,4 +40,5 @@ private Constants() {\n \n     public static final int INIT_METHOD_SPLIT_SIZE = 50;\n \n+    public static final String UNICODE_REGEX = \"\\\\\\\\u\\\\{([a-fA-F0-9]*)\\\\}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50a59fbcca28b86c9fb0404840ee4edb698307b4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE3MjY3MA==", "bodyText": "I think it is better to merge these two lines in this PR as well -\nString text = node.getText().substring(1, text.length() - 1);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#discussion_r372172670", "createdAt": "2020-01-29T03:24:39Z", "author": {"login": "Shan1024"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java", "diffHunk": "@@ -2648,6 +2651,24 @@ public void exitSimpleLiteral(BallerinaParser.SimpleLiteralContext ctx) {\n         } else if ((node = ctx.QuotedStringLiteral()) != null) {\n             String text = node.getText();\n             text = text.substring(1, text.length() - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50a59fbcca28b86c9fb0404840ee4edb698307b4"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODUzNTI2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#pullrequestreview-349853526", "createdAt": "2020-01-29T04:21:34Z", "commit": {"oid": "50a59fbcca28b86c9fb0404840ee4edb698307b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDoyMTozNFrOFi8MJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDoyMTozNFrOFi8MJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4MjA1Mg==", "bodyText": "Better to move these values to constants.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#discussion_r372182052", "createdAt": "2020-01-29T04:21:34Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java", "diffHunk": "@@ -2648,6 +2651,24 @@ public void exitSimpleLiteral(BallerinaParser.SimpleLiteralContext ctx) {\n         } else if ((node = ctx.QuotedStringLiteral()) != null) {\n             String text = node.getText();\n             text = text.substring(1, text.length() - 1);\n+            String originalText = text; // to log the errors\n+            Pattern pattern = Pattern.compile(Constants.UNICODE_REGEX);\n+            Matcher matcher = pattern.matcher(text);\n+            int position = 0;\n+            while (matcher.find(position)) {\n+                String hexStringVal = matcher.group(1);\n+                int hexDecimalVal = Integer.parseInt(hexStringVal, 16);\n+                if ((hexDecimalVal >= 0xD800 && hexDecimalVal <= 0xDFFF) || hexDecimalVal > 0x10FFFF) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50a59fbcca28b86c9fb0404840ee4edb698307b4"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODU2Mzky", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#pullrequestreview-349856392", "createdAt": "2020-01-29T04:32:16Z", "commit": {"oid": "50a59fbcca28b86c9fb0404840ee4edb698307b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDozMjoxNlrOFi8WFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDozMjoxNlrOFi8WFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NDU5OQ==", "bodyText": "Should we change HexDigit* here to avoid a syntax error?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#discussion_r372184599", "createdAt": "2020-01-29T04:32:16Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/resources/grammar/BallerinaLexer.g4", "diffHunk": "@@ -341,7 +341,7 @@ EscapeSequence\n \n fragment\n UnicodeEscape\n-    :   '\\\\' 'u' HexDigit HexDigit HexDigit HexDigit\n+    :   '\\\\' 'u' LEFT_BRACE HexDigit+ RIGHT_BRACE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50a59fbcca28b86c9fb0404840ee4edb698307b4"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "80923f5a3925f3f176530fccbcc81d5a9ccb66f9", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/80923f5a3925f3f176530fccbcc81d5a9ccb66f9", "committedDate": "2020-02-02T13:19:33Z", "message": "Fixed the suggested changes"}, "afterCommit": {"oid": "d62c58afd9ab8974fa2eccb1ca7a5bd4c43b6cd7", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d62c58afd9ab8974fa2eccb1ca7a5bd4c43b6cd7", "committedDate": "2020-02-05T10:07:05Z", "message": "resolve conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36d78788a8e7af78cefecb0918052020b7bde60d", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/36d78788a8e7af78cefecb0918052020b7bde60d", "committedDate": "2020-02-05T11:43:48Z", "message": "Add the curly braces to unicode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34285728bbb1f1f5c7946e39c1d14717dea9ca38", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/34285728bbb1f1f5c7946e39c1d14717dea9ca38", "committedDate": "2020-02-05T11:43:48Z", "message": "Handle errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6081dd93291f2e2a35ffb98d9916ecb3eb13c4a", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a6081dd93291f2e2a35ffb98d9916ecb3eb13c4a", "committedDate": "2020-02-05T11:43:48Z", "message": "Add the test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ac4d170f26c6c4c92b30bc3aaba45c27f8a04ca", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0ac4d170f26c6c4c92b30bc3aaba45c27f8a04ca", "committedDate": "2020-02-05T11:43:48Z", "message": "Add the doc comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5bb17903bf17bb329bbd081cec77931df43ed02", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c5bb17903bf17bb329bbd081cec77931df43ed02", "committedDate": "2020-02-05T11:43:48Z", "message": "Change the error message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c723e6a78620088a3a1a7fc95e2a42aff9b3d2b", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1c723e6a78620088a3a1a7fc95e2a42aff9b3d2b", "committedDate": "2020-02-05T11:43:48Z", "message": "Change the REGEX"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75c9e64c95d08ea8b7e1085fd31eb8610a676bd9", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/75c9e64c95d08ea8b7e1085fd31eb8610a676bd9", "committedDate": "2020-02-05T11:43:48Z", "message": "Change the way of matching"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25198bc700b354b5b9c65975f09208d1c5e7fd9a", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/25198bc700b354b5b9c65975f09208d1c5e7fd9a", "committedDate": "2020-02-05T11:43:48Z", "message": "Fixed the suggested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd1c7b86f176474685296fafdae195e8836cd7ea", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fd1c7b86f176474685296fafdae195e8836cd7ea", "committedDate": "2020-02-05T11:57:19Z", "message": "resolve conflicts"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d62c58afd9ab8974fa2eccb1ca7a5bd4c43b6cd7", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d62c58afd9ab8974fa2eccb1ca7a5bd4c43b6cd7", "committedDate": "2020-02-05T10:07:05Z", "message": "resolve conflicts"}, "afterCommit": {"oid": "fd1c7b86f176474685296fafdae195e8836cd7ea", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fd1c7b86f176474685296fafdae195e8836cd7ea", "committedDate": "2020-02-05T11:57:19Z", "message": "resolve conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0OTgxOTg1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#pullrequestreview-354981985", "createdAt": "2020-02-07T07:59:47Z", "commit": {"oid": "fd1c7b86f176474685296fafdae195e8836cd7ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNzo1OTo0N1rOFm03DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNzo1OTo0N1rOFm03DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI1NjI2OQ==", "bodyText": "Shall we generate the parser from compiler/ballerina-lang/src/main/resources/grammar/ directory\nNavigate to grammar directory:\njava -jar ~/Downloads/antlr-4.5.3-complete.jar *.g4 -package org.wso2.ballerinalang.compiler.parser.antlr4 -o ../../java/org/wso2/ballerinalang/compiler/parser/antlr4/", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#discussion_r376256269", "createdAt": "2020-02-07T07:59:47Z", "author": {"login": "rdhananjaya"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaLexer.java", "diffHunk": "@@ -1,4 +1,4 @@\n-// Generated from BallerinaLexer.g4 by ANTLR 4.5.3\n+// Generated from /home/kavindu/WSO2-GIT/test/ballerina-lang/compiler/ballerina-lang/src/main/resources/grammar/BallerinaLexer.g4 by ANTLR 4.5.3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd1c7b86f176474685296fafdae195e8836cd7ea"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MDQzOTg4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20714#pullrequestreview-355043988", "createdAt": "2020-02-07T09:56:01Z", "commit": {"oid": "fd1c7b86f176474685296fafdae195e8836cd7ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4364, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}