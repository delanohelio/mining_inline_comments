{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMTc4NDMw", "number": 20854, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMToxMjo1NVrODdS3iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMToxMjo1NVrODdS3iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDQ0NDI3OnYy", "diffSide": "RIGHT", "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/components/Field.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMToxMjo1NVrOFl0Gfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNjoxNToxNVrOFl97SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE5NTI2Mw==", "bodyText": "Isn't it difficult to maintain this in the future as we have to change this array whenever new reserved word is adding to the language? There is a possibility to miss this.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20854#discussion_r375195263", "createdAt": "2020-02-05T11:12:55Z", "author": {"login": "anupama-pathirage"}, "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/components/Field.java", "diffHunk": "@@ -141,4 +140,17 @@ private Builder(DescriptorProtos.FieldDescriptorProto fieldDescriptor) {\n         FIELD_LABEL_MAP.put(DescriptorProtos.FieldDescriptorProto.Label.LABEL_REQUIRED, null);\n         FIELD_LABEL_MAP.put(DescriptorProtos.FieldDescriptorProto.Label.LABEL_REPEATED, \"[]\");\n     }\n+\n+    private static final String[] RESERVED_LITERAL_NAMES = {\n+            \"import\", \"as\", \"public\", \"private\", \"external\", \"final\", \"service\", \"resource\", \"function\", \"object\",\n+            \"record\", \"annotation\", \"parameter\", \"transformer\", \"worker\", \"listener\", \"remote\", \"xmlns\", \"returns\",\n+            \"version\", \"channel\", \"abstract\", \"client\", \"const\", \"typeof\", \"source\", \"from\", \"on\", \"group\", \"by\",\n+            \"having\", \"order\", \"where\", \"followed\", \"for\", \"window\", \"every\", \"within\", \"snapshot\", \"inner\", \"outer\",\n+            \"right\", \"left\", \"full\", \"unidirectional\", \"forever\", \"limit\", \"ascending\", \"descending\", \"int\", \"byte\",\n+            \"float\", \"decimal\", \"boolean\", \"string\", \"error\", \"map\", \"json\", \"xml\", \"table\", \"stream\", \"any\",\n+            \"typedesc\", \"type\", \"future\", \"anydata\", \"handle\", \"var\", \"new\", \"__init\", \"if\", \"match\", \"else\",\n+            \"foreach\", \"while\", \"continue\", \"break\", \"fork\", \"join\", \"some\", \"all\", \"try\", \"catch\", \"finally\", \"throw\",\n+            \"panic\", \"trap\", \"return\", \"transaction\", \"abort\", \"retry\", \"onretry\", \"retries\", \"committed\", \"aborted\",\n+            \"with\", \"in\", \"lock\", \"untaint\", \"start\", \"but\", \"check\", \"checkpanic\", \"primarykey\", \"is\", \"flush\",\n+            \"wait\", \"default\"};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cda7e177417eda09cff1c83956bcc044b69ac794"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1NjIzMw==", "bodyText": "Sorry for the noise. Just noticed your comment on requeesting an API.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20854#discussion_r375356233", "createdAt": "2020-02-05T16:15:15Z", "author": {"login": "anupama-pathirage"}, "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/components/Field.java", "diffHunk": "@@ -141,4 +140,17 @@ private Builder(DescriptorProtos.FieldDescriptorProto fieldDescriptor) {\n         FIELD_LABEL_MAP.put(DescriptorProtos.FieldDescriptorProto.Label.LABEL_REQUIRED, null);\n         FIELD_LABEL_MAP.put(DescriptorProtos.FieldDescriptorProto.Label.LABEL_REPEATED, \"[]\");\n     }\n+\n+    private static final String[] RESERVED_LITERAL_NAMES = {\n+            \"import\", \"as\", \"public\", \"private\", \"external\", \"final\", \"service\", \"resource\", \"function\", \"object\",\n+            \"record\", \"annotation\", \"parameter\", \"transformer\", \"worker\", \"listener\", \"remote\", \"xmlns\", \"returns\",\n+            \"version\", \"channel\", \"abstract\", \"client\", \"const\", \"typeof\", \"source\", \"from\", \"on\", \"group\", \"by\",\n+            \"having\", \"order\", \"where\", \"followed\", \"for\", \"window\", \"every\", \"within\", \"snapshot\", \"inner\", \"outer\",\n+            \"right\", \"left\", \"full\", \"unidirectional\", \"forever\", \"limit\", \"ascending\", \"descending\", \"int\", \"byte\",\n+            \"float\", \"decimal\", \"boolean\", \"string\", \"error\", \"map\", \"json\", \"xml\", \"table\", \"stream\", \"any\",\n+            \"typedesc\", \"type\", \"future\", \"anydata\", \"handle\", \"var\", \"new\", \"__init\", \"if\", \"match\", \"else\",\n+            \"foreach\", \"while\", \"continue\", \"break\", \"fork\", \"join\", \"some\", \"all\", \"try\", \"catch\", \"finally\", \"throw\",\n+            \"panic\", \"trap\", \"return\", \"transaction\", \"abort\", \"retry\", \"onretry\", \"retries\", \"committed\", \"aborted\",\n+            \"with\", \"in\", \"lock\", \"untaint\", \"start\", \"but\", \"check\", \"checkpanic\", \"primarykey\", \"is\", \"flush\",\n+            \"wait\", \"default\"};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE5NTI2Mw=="}, "originalCommit": {"oid": "cda7e177417eda09cff1c83956bcc044b69ac794"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1266, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}