{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NjA2NjI0", "number": 20508, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNToyODo1MVrODXbFyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwODo0MDo0OVrODXcoHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODg3Njg5OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/BIRPackageSymbolEnter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNToyODo1MVrOFctjlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwNTo0MzowMlrOFctqGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY1MDgzNw==", "bodyText": "With this change, the initializers are not added to attached functions list. Is that intentional?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20508#discussion_r365650837", "createdAt": "2020-01-13T05:28:51Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/BIRPackageSymbolEnter.java", "diffHunk": "@@ -363,10 +363,13 @@ private void defineFunction(DataInputStream dataInStream) throws IOException {\n                 BAttachedFunction attachedFunc =\n                         new BAttachedFunction(names.fromString(funcName), invokableSymbol, funcType);\n                 BStructureTypeSymbol structureTypeSymbol = (BStructureTypeSymbol) attachedType.tsymbol;\n-                structureTypeSymbol.attachedFuncs.add(attachedFunc);\n                 if (Names.USER_DEFINED_INIT_SUFFIX.value.equals(funcName)\n                         || funcName.equals(Names.INIT_FUNCTION_SUFFIX.value)) {\n                     structureTypeSymbol.initializerFunc = attachedFunc;\n+                } else if (funcName.equals(Names.GENERATED_INIT_SUFFIX.value)) {\n+                    ((BObjectTypeSymbol) structureTypeSymbol).generatedInitializerFunc = attachedFunc;\n+                } else {\n+                    structureTypeSymbol.attachedFuncs.add(attachedFunc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dfd0c7714cf09e7d92612e06fa33be534904e46"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY1MjUwNQ==", "bodyText": "Yes, initializers are not added to attached function.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20508#discussion_r365652505", "createdAt": "2020-01-13T05:43:02Z", "author": {"login": "KavinduZoysa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/BIRPackageSymbolEnter.java", "diffHunk": "@@ -363,10 +363,13 @@ private void defineFunction(DataInputStream dataInStream) throws IOException {\n                 BAttachedFunction attachedFunc =\n                         new BAttachedFunction(names.fromString(funcName), invokableSymbol, funcType);\n                 BStructureTypeSymbol structureTypeSymbol = (BStructureTypeSymbol) attachedType.tsymbol;\n-                structureTypeSymbol.attachedFuncs.add(attachedFunc);\n                 if (Names.USER_DEFINED_INIT_SUFFIX.value.equals(funcName)\n                         || funcName.equals(Names.INIT_FUNCTION_SUFFIX.value)) {\n                     structureTypeSymbol.initializerFunc = attachedFunc;\n+                } else if (funcName.equals(Names.GENERATED_INIT_SUFFIX.value)) {\n+                    ((BObjectTypeSymbol) structureTypeSymbol).generatedInitializerFunc = attachedFunc;\n+                } else {\n+                    structureTypeSymbol.attachedFuncs.add(attachedFunc);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY1MDgzNw=="}, "originalCommit": {"oid": "4dfd0c7714cf09e7d92612e06fa33be534904e46"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTEyNTkzOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwODozOTo0N1rOFcvyBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwOToxMjozNlrOFeSf1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY4NzMwMw==", "bodyText": "Unused var here. Let's remove this.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20508#discussion_r365687303", "createdAt": "2020-01-13T08:39:47Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -348,17 +348,18 @@ private void addAttachedFunctionsToPackageLevel(BLangPackage pkgNode, SymbolEnv\n                     continue;\n                 }\n \n-                if (objectTypeNode.initFunction == null) {\n-                    objectTypeNode.initFunction = createInitFunctionForStructureType(objectTypeNode, env,\n-                                                                                     Names.USER_DEFINED_INIT_SUFFIX);\n-                }\n-\n-                // Add init function to the attached function list\n+                objectTypeNode.generatedInitFunction = createGeneratedInitializerFunction(objectTypeNode, env);\n                 BObjectTypeSymbol objectSymbol = ((BObjectTypeSymbol) objectTypeNode.type.tsymbol);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dfd0c7714cf09e7d92612e06fa33be534904e46"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzMwNDY2MA==", "bodyText": "Removed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20508#discussion_r367304660", "createdAt": "2020-01-16T09:12:36Z", "author": {"login": "KavinduZoysa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -348,17 +348,18 @@ private void addAttachedFunctionsToPackageLevel(BLangPackage pkgNode, SymbolEnv\n                     continue;\n                 }\n \n-                if (objectTypeNode.initFunction == null) {\n-                    objectTypeNode.initFunction = createInitFunctionForStructureType(objectTypeNode, env,\n-                                                                                     Names.USER_DEFINED_INIT_SUFFIX);\n-                }\n-\n-                // Add init function to the attached function list\n+                objectTypeNode.generatedInitFunction = createGeneratedInitializerFunction(objectTypeNode, env);\n                 BObjectTypeSymbol objectSymbol = ((BObjectTypeSymbol) objectTypeNode.type.tsymbol);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY4NzMwMw=="}, "originalCommit": {"oid": "4dfd0c7714cf09e7d92612e06fa33be534904e46"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTEyNzE3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwODo0MDoxN1rOFcvyvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwODo0MDoxN1rOFcvyvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY4NzQ4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20508#discussion_r365687485", "createdAt": "2020-01-13T08:40:17Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -367,6 +368,65 @@ private void addAttachedFunctionsToPackageLevel(BLangPackage pkgNode, SymbolEnv\n         }\n     }\n \n+    private BLangFunction createGeneratedInitializerFunction(BLangObjectTypeNode objectTypeNode, SymbolEnv env) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dfd0c7714cf09e7d92612e06fa33be534904e46"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTEyNzkzOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwODo0MDozNlrOFcvzKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwODo0MDozNlrOFcvzKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY4NzU5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20508#discussion_r365687594", "createdAt": "2020-01-13T08:40:36Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -367,6 +368,65 @@ private void addAttachedFunctionsToPackageLevel(BLangPackage pkgNode, SymbolEnv\n         }\n     }\n \n+    private BLangFunction createGeneratedInitializerFunction(BLangObjectTypeNode objectTypeNode, SymbolEnv env) {\n+\n+        BLangFunction generatedInitFunc = createInitFunctionForObjectType(objectTypeNode, env);\n+        if (objectTypeNode.initFunction == null) {\n+            return generatedInitFunc;\n+        }\n+\n+        BAttachedFunction initializerFunc = ((BObjectTypeSymbol) objectTypeNode.symbol).initializerFunc;\n+        BAttachedFunction generatedInitializerFunc =\n+                ((BObjectTypeSymbol) objectTypeNode.symbol).generatedInitializerFunc;\n+        addRequiredParamsToGeneratedInitFunction(objectTypeNode.initFunction, generatedInitFunc,\n+                generatedInitializerFunc);\n+        addRestParamsToGeneratedInitFunction(objectTypeNode.initFunction, generatedInitFunc, generatedInitializerFunc);\n+\n+        generatedInitFunc.returnTypeNode = objectTypeNode.initFunction.returnTypeNode;\n+        generatedInitializerFunc.symbol.retType = generatedInitFunc.returnTypeNode.type;\n+\n+        ((BInvokableType) generatedInitFunc.symbol.type).paramTypes = initializerFunc.type.paramTypes;\n+        ((BInvokableType) generatedInitFunc.symbol.type).retType = initializerFunc.type.retType;\n+        ((BInvokableType) generatedInitFunc.symbol.type).restType = initializerFunc.type.restType;\n+\n+        generatedInitializerFunc.type = initializerFunc.type;\n+        generatedInitFunc.desugared = false;\n+        return generatedInitFunc;\n+    }\n+\n+    private void addRequiredParamsToGeneratedInitFunction(BLangFunction initFunction, BLangFunction generatedInitFunc,\n+                                                          BAttachedFunction generatedInitializerFunc) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dfd0c7714cf09e7d92612e06fa33be534904e46"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTEyODYwOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwODo0MDo0OVrOFcvzhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwODo0MDo0OVrOFcvzhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY4NzY4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20508#discussion_r365687685", "createdAt": "2020-01-13T08:40:49Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -367,6 +368,65 @@ private void addAttachedFunctionsToPackageLevel(BLangPackage pkgNode, SymbolEnv\n         }\n     }\n \n+    private BLangFunction createGeneratedInitializerFunction(BLangObjectTypeNode objectTypeNode, SymbolEnv env) {\n+\n+        BLangFunction generatedInitFunc = createInitFunctionForObjectType(objectTypeNode, env);\n+        if (objectTypeNode.initFunction == null) {\n+            return generatedInitFunc;\n+        }\n+\n+        BAttachedFunction initializerFunc = ((BObjectTypeSymbol) objectTypeNode.symbol).initializerFunc;\n+        BAttachedFunction generatedInitializerFunc =\n+                ((BObjectTypeSymbol) objectTypeNode.symbol).generatedInitializerFunc;\n+        addRequiredParamsToGeneratedInitFunction(objectTypeNode.initFunction, generatedInitFunc,\n+                generatedInitializerFunc);\n+        addRestParamsToGeneratedInitFunction(objectTypeNode.initFunction, generatedInitFunc, generatedInitializerFunc);\n+\n+        generatedInitFunc.returnTypeNode = objectTypeNode.initFunction.returnTypeNode;\n+        generatedInitializerFunc.symbol.retType = generatedInitFunc.returnTypeNode.type;\n+\n+        ((BInvokableType) generatedInitFunc.symbol.type).paramTypes = initializerFunc.type.paramTypes;\n+        ((BInvokableType) generatedInitFunc.symbol.type).retType = initializerFunc.type.retType;\n+        ((BInvokableType) generatedInitFunc.symbol.type).restType = initializerFunc.type.restType;\n+\n+        generatedInitializerFunc.type = initializerFunc.type;\n+        generatedInitFunc.desugared = false;\n+        return generatedInitFunc;\n+    }\n+\n+    private void addRequiredParamsToGeneratedInitFunction(BLangFunction initFunction, BLangFunction generatedInitFunc,\n+                                                          BAttachedFunction generatedInitializerFunc) {\n+\n+        if (initFunction.requiredParams.isEmpty()) {\n+            return;\n+        }\n+        for (BLangSimpleVariable requiredParameter : initFunction.requiredParams) {\n+            BLangSimpleVariable var =\n+                    ASTBuilderUtil.createVariable(initFunction.pos,\n+                            requiredParameter.name.getValue(), requiredParameter.type, requiredParameter.expr,\n+                            new BVarSymbol(0, names.fromString(requiredParameter.name.getValue()),\n+                                    requiredParameter.symbol.pkgID,\n+                                    requiredParameter.type, requiredParameter.symbol.owner));\n+            generatedInitFunc.requiredParams.add(var);\n+            generatedInitializerFunc.symbol.params.add(var.symbol);\n+        }\n+    }\n+\n+    private void addRestParamsToGeneratedInitFunction(BLangFunction initFunction, BLangFunction generatedInitFunc,\n+                                                      BAttachedFunction generatedInitializerFunc) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dfd0c7714cf09e7d92612e06fa33be534904e46"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 601, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}