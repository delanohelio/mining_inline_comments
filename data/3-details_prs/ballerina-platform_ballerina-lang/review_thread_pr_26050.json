{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMTczMDUx", "number": 26050, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNTo0NDozM1rOEnULiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNTo0Njo1NVrOEnUNcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjYwNTUzOnYy", "diffSide": "RIGHT", "path": "misc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/evaluation/EvaluationUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNTo0NDozM1rOHX1u0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNjowMjo1NFrOHX2EMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc1OTYzNA==", "bodyText": "We can use the FROM_STRING_METHOD constant here too.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26050#discussion_r494759634", "createdAt": "2020-09-25T05:44:33Z", "author": {"login": "Dilhasha"}, "path": "misc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/evaluation/EvaluationUtils.java", "diffHunk": "@@ -105,7 +109,31 @@ public static BExpressionValue make(SuspendedContext context, double val) {\n         return new BExpressionValue(context, context.getAttachedVm().mirrorOf(val));\n     }\n \n-    public static BExpressionValue make(SuspendedContext context, String val) {\n-        return new BExpressionValue(context, context.getAttachedVm().mirrorOf(val));\n+    public static BExpressionValue make(SuspendedContext context, String val) throws EvaluationException {\n+        val = removeRedundantQuotes(val);\n+        Value bStringVal = getAsBString(context, val);\n+        return new BExpressionValue(context, bStringVal);\n+    }\n+\n+    /**\n+     * Converts the user given string literal into an {@link org.ballerinalang.jvm.api.values.BString} instance.\n+     *\n+     * @param context suspended debug context\n+     * @param val     string value\n+     * @return {@link org.ballerinalang.jvm.api.values.BString} instance\n+     */\n+    private static Value getAsBString(SuspendedContext context, String val) throws EvaluationException {\n+        List<ReferenceType> cls = context.getAttachedVm().classesByName(B_STRING_UTILS_CLASS);\n+        if (cls.isEmpty()) {\n+            cls = Collections.singletonList(loadClass(context, B_STRING_UTILS_CLASS, \"fromString\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df715d57d89c04f8bdcd4fa1c95506a47125534d"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc2NTEwNg==", "bodyText": "Yeah seems I've missed it somehow. Fixed with 32fbe2e. Thanks!", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26050#discussion_r494765106", "createdAt": "2020-09-25T06:02:54Z", "author": {"login": "NipunaRanasinghe"}, "path": "misc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/evaluation/EvaluationUtils.java", "diffHunk": "@@ -105,7 +109,31 @@ public static BExpressionValue make(SuspendedContext context, double val) {\n         return new BExpressionValue(context, context.getAttachedVm().mirrorOf(val));\n     }\n \n-    public static BExpressionValue make(SuspendedContext context, String val) {\n-        return new BExpressionValue(context, context.getAttachedVm().mirrorOf(val));\n+    public static BExpressionValue make(SuspendedContext context, String val) throws EvaluationException {\n+        val = removeRedundantQuotes(val);\n+        Value bStringVal = getAsBString(context, val);\n+        return new BExpressionValue(context, bStringVal);\n+    }\n+\n+    /**\n+     * Converts the user given string literal into an {@link org.ballerinalang.jvm.api.values.BString} instance.\n+     *\n+     * @param context suspended debug context\n+     * @param val     string value\n+     * @return {@link org.ballerinalang.jvm.api.values.BString} instance\n+     */\n+    private static Value getAsBString(SuspendedContext context, String val) throws EvaluationException {\n+        List<ReferenceType> cls = context.getAttachedVm().classesByName(B_STRING_UTILS_CLASS);\n+        if (cls.isEmpty()) {\n+            cls = Collections.singletonList(loadClass(context, B_STRING_UTILS_CLASS, \"fromString\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc1OTYzNA=="}, "originalCommit": {"oid": "df715d57d89c04f8bdcd4fa1c95506a47125534d"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjYxMDQyOnYy", "diffSide": "RIGHT", "path": "misc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/variable/VariableUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNTo0Njo1NVrOHX1xkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNjowNDowMVrOHX2FnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc2MDMzNg==", "bodyText": "is there a small formatting issue?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26050#discussion_r494760336", "createdAt": "2020-09-25T05:46:55Z", "author": {"login": "Dilhasha"}, "path": "misc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/variable/VariableUtils.java", "diffHunk": "@@ -203,10 +203,10 @@ static boolean isJson(Value value) {\n         return Optional.of(methods.get(0));\n     }\n \n-    private static String removeRedundantQuotes(String str) {\n+     public static String removeRedundantQuotes(String str) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df715d57d89c04f8bdcd4fa1c95506a47125534d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc2NTQ2OQ==", "bodyText": "Yes it is. Fixed with 32fbe2e.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26050#discussion_r494765469", "createdAt": "2020-09-25T06:04:01Z", "author": {"login": "NipunaRanasinghe"}, "path": "misc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/variable/VariableUtils.java", "diffHunk": "@@ -203,10 +203,10 @@ static boolean isJson(Value value) {\n         return Optional.of(methods.get(0));\n     }\n \n-    private static String removeRedundantQuotes(String str) {\n+     public static String removeRedundantQuotes(String str) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc2MDMzNg=="}, "originalCommit": {"oid": "df715d57d89c04f8bdcd4fa1c95506a47125534d"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 25, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}