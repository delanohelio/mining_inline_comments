{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3ODg2Njgw", "number": 24411, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNToyMDowN1rOEH0PsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNTozNToyMFrOEH0cEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NjMxNDcyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNToyMDowN1rOGnZoOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTowODozM1rOGoWmlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk2NzU0NQ==", "bodyText": "shall we use TreeBuilder.createIdentifierNode(); instead of createIdentifier(null, \"\")?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24411#discussion_r443967545", "createdAt": "2020-06-23T05:20:07Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -4033,6 +4033,11 @@ private BLangType createBuiltInTypeNode(Node type) {\n             BuiltinSimpleNameReferenceNode simpleNameRef = (BuiltinSimpleNameReferenceNode) type;\n             if (simpleNameRef.kind() == SyntaxKind.VAR_TYPE_DESC) {\n                 return null;\n+            } else if (simpleNameRef.name().isMissing()) {\n+                String name = missingNodesHelper.getNextMissingNodeName(diagnosticSource.pkgID);\n+                BLangIdentifier identifier = createIdentifier(getPosition(simpleNameRef.name()), name);\n+                BLangIdentifier pkgAlias = createIdentifier(null, \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047d4b8b3132e0e6a030cd5d9866240309be5acc"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk2NjU0OA==", "bodyText": "Done", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24411#discussion_r444966548", "createdAt": "2020-06-24T15:08:33Z", "author": {"login": "KavinduZoysa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -4033,6 +4033,11 @@ private BLangType createBuiltInTypeNode(Node type) {\n             BuiltinSimpleNameReferenceNode simpleNameRef = (BuiltinSimpleNameReferenceNode) type;\n             if (simpleNameRef.kind() == SyntaxKind.VAR_TYPE_DESC) {\n                 return null;\n+            } else if (simpleNameRef.name().isMissing()) {\n+                String name = missingNodesHelper.getNextMissingNodeName(diagnosticSource.pkgID);\n+                BLangIdentifier identifier = createIdentifier(getPosition(simpleNameRef.name()), name);\n+                BLangIdentifier pkgAlias = createIdentifier(null, \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk2NzU0NQ=="}, "originalCommit": {"oid": "047d4b8b3132e0e6a030cd5d9866240309be5acc"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NjMyODAxOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/globalvar/GlobalVarNegativeTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNToyNTo0M1rOGnZv0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNToyNTo0M1rOGnZv0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk2OTQ4OQ==", "bodyText": "still need @Test(groups = { \"brokenOnNewParser\" })?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24411#discussion_r443969489", "createdAt": "2020-06-23T05:25:43Z", "author": {"login": "SupunS"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/globalvar/GlobalVarNegativeTest.java", "diffHunk": "@@ -33,11 +33,13 @@\n     public void testGlobalVarNegatives() {\n         CompileResult resultNegative = BCompileUtil.compile(\n                 \"test-src/statements/variabledef/global_variable_negative.bal\");\n-        Assert.assertEquals(resultNegative.getErrorCount(), 4);\n-        BAssertUtil.validateError(resultNegative, 0, \"invalid token 'int'\", 27, 8);\n-        BAssertUtil.validateError(resultNegative, 1, \"invalid token 'int'\", 29, 8);\n-        BAssertUtil.validateError(resultNegative, 2, \"mismatched input ';'. expecting '='\", 31, 46);\n-        BAssertUtil.validateError(resultNegative, 3, \"mismatched input ';'. expecting '='\", 33, 59);\n+        Assert.assertEquals(resultNegative.getErrorCount(), 6);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047d4b8b3132e0e6a030cd5d9866240309be5acc"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NjMzMTcyOnYy", "diffSide": "LEFT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/PackageLoader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNToyNzoxOVrOGnZx6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTowODo0MFrOGoWm3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk3MDAyNw==", "bodyText": "I think we should continue, only if its the new parser.\nIf the old parser is in use, we should terminate like before", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24411#discussion_r443970027", "createdAt": "2020-06-23T05:27:19Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/PackageLoader.java", "diffHunk": "@@ -378,9 +378,6 @@ public BLangPackage loadEntryPackage(PackageID pkgId, PackageID enclPackageId, P\n         }\n \n         BLangPackage packageNode = parse(pkgId, (PackageSource) pkgEntity);\n-        if (packageNode.diagCollector.hasErrors()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047d4b8b3132e0e6a030cd5d9866240309be5acc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk2NjYyMQ==", "bodyText": "Done", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24411#discussion_r444966621", "createdAt": "2020-06-24T15:08:40Z", "author": {"login": "KavinduZoysa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/PackageLoader.java", "diffHunk": "@@ -378,9 +378,6 @@ public BLangPackage loadEntryPackage(PackageID pkgId, PackageID enclPackageId, P\n         }\n \n         BLangPackage packageNode = parse(pkgId, (PackageSource) pkgEntity);\n-        if (packageNode.diagCollector.hasErrors()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk3MDAyNw=="}, "originalCommit": {"oid": "047d4b8b3132e0e6a030cd5d9866240309be5acc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NjMzNjI5OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/parser/resilient-parser.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNToyOToxM1rOGnZ0iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTowODo0NFrOGoWnGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk3MDY5OQ==", "bodyText": "should this be ff.bar() or f.bar()?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24411#discussion_r443970699", "createdAt": "2020-06-23T05:29:13Z", "author": {"login": "SupunS"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/parser/resilient-parser.bal", "diffHunk": "@@ -0,0 +1,45 @@\n+public function (int a, int b) {\n+    int x1 = 2;\n+}\n+\n+public function foo1(int) {\n+    int x1 = 3;\n+}\n+\n+public function foo2(int a, = \"hello\") {\n+    int x1 = 3;\n+}\n+\n+public function foo2(int a =) {\n+    int x1 = 3;\n+    int x1 = 3;\n+}\n+\n+public function foo3(int a) {\n+    return a;\n+}\n+\n+public function foo4(int a) returns {\n+}\n+\n+public function foo5(int a, = \"hello\", int b =) {\n+    int x1 = 3;\n+    int[] arr = [10, 20,];\n+    arr[1 = 20;\n+    int x = arr[1;\n+    ar[2] = 40;\n+    int y = arr1];\n+}\n+\n+type Foo object {\n+    int x;\n+\n+    function bar () returns int {\n+        return 2;\n+    }\n+};\n+\n+public function foo6() {\n+    Foo f  new;\n+    int x = ff.bar();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047d4b8b3132e0e6a030cd5d9866240309be5acc"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk2NjY4Mw==", "bodyText": "What I expect here is to get the error 'redeclared symbol'.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24411#discussion_r444966683", "createdAt": "2020-06-24T15:08:44Z", "author": {"login": "KavinduZoysa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/parser/resilient-parser.bal", "diffHunk": "@@ -0,0 +1,45 @@\n+public function (int a, int b) {\n+    int x1 = 2;\n+}\n+\n+public function foo1(int) {\n+    int x1 = 3;\n+}\n+\n+public function foo2(int a, = \"hello\") {\n+    int x1 = 3;\n+}\n+\n+public function foo2(int a =) {\n+    int x1 = 3;\n+    int x1 = 3;\n+}\n+\n+public function foo3(int a) {\n+    return a;\n+}\n+\n+public function foo4(int a) returns {\n+}\n+\n+public function foo5(int a, = \"hello\", int b =) {\n+    int x1 = 3;\n+    int[] arr = [10, 20,];\n+    arr[1 = 20;\n+    int x = arr[1;\n+    ar[2] = 40;\n+    int y = arr1];\n+}\n+\n+type Foo object {\n+    int x;\n+\n+    function bar () returns int {\n+        return 2;\n+    }\n+};\n+\n+public function foo6() {\n+    Foo f  new;\n+    int x = ff.bar();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk3MDY5OQ=="}, "originalCommit": {"oid": "047d4b8b3132e0e6a030cd5d9866240309be5acc"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NjM0NjQxOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/parser/resilient-parser.bal", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNTozNToyMFrOGnZ6zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxNTo1MDowOVrOGp-XVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk3MjMwMA==", "bodyText": "Shall we add some more tests like:\n\nImport with missing pieces (missing prefix, missing org-name, missing module-name etc..)\nObject/record type definitions, with missing object/record name\nNamespace decl with missing pieces\nService decl with missing pieces\n\nSimilarly, can add tests for all module level decls with missing parts: https://ballerina.io/ballerina-spec/spec.html#module_level", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24411#discussion_r443972300", "createdAt": "2020-06-23T05:35:20Z", "author": {"login": "SupunS"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/parser/resilient-parser.bal", "diffHunk": "@@ -0,0 +1,45 @@\n+public function (int a, int b) {\n+    int x1 = 2;\n+}\n+\n+public function foo1(int) {\n+    int x1 = 3;\n+}\n+\n+public function foo2(int a, = \"hello\") {\n+    int x1 = 3;\n+}\n+\n+public function foo2(int a =) {\n+    int x1 = 3;\n+    int x1 = 3;\n+}\n+\n+public function foo3(int a) {\n+    return a;\n+}\n+\n+public function foo4(int a) returns {\n+}\n+\n+public function foo5(int a, = \"hello\", int b =) {\n+    int x1 = 3;\n+    int[] arr = [10, 20,];\n+    arr[1 = 20;\n+    int x = arr[1;\n+    ar[2] = 40;\n+    int y = arr1];\n+}\n+\n+type Foo object {\n+    int x;\n+\n+    function bar () returns int {\n+        return 2;\n+    }\n+};\n+\n+public function foo6() {\n+    Foo f  new;\n+    int x = ff.bar();\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047d4b8b3132e0e6a030cd5d9866240309be5acc"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY2NjU4MA==", "bodyText": "Add more tests.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24411#discussion_r446666580", "createdAt": "2020-06-28T15:50:09Z", "author": {"login": "KavinduZoysa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/parser/resilient-parser.bal", "diffHunk": "@@ -0,0 +1,45 @@\n+public function (int a, int b) {\n+    int x1 = 2;\n+}\n+\n+public function foo1(int) {\n+    int x1 = 3;\n+}\n+\n+public function foo2(int a, = \"hello\") {\n+    int x1 = 3;\n+}\n+\n+public function foo2(int a =) {\n+    int x1 = 3;\n+    int x1 = 3;\n+}\n+\n+public function foo3(int a) {\n+    return a;\n+}\n+\n+public function foo4(int a) returns {\n+}\n+\n+public function foo5(int a, = \"hello\", int b =) {\n+    int x1 = 3;\n+    int[] arr = [10, 20,];\n+    arr[1 = 20;\n+    int x = arr[1;\n+    ar[2] = 40;\n+    int y = arr1];\n+}\n+\n+type Foo object {\n+    int x;\n+\n+    function bar () returns int {\n+        return 2;\n+    }\n+};\n+\n+public function foo6() {\n+    Foo f  new;\n+    int x = ff.bar();\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk3MjMwMA=="}, "originalCommit": {"oid": "047d4b8b3132e0e6a030cd5d9866240309be5acc"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3267, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}