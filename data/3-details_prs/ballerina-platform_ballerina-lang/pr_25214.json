{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MjI4NjY0", "number": 25214, "title": "Add auto completion fixes", "bodyText": "Purpose\n\nWith this,\n\n\nRevamp the assignment statement context completions\nAdd scope entry filter to filter out the public entries\n\nFixes #25139\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-08-11T16:50:05Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25214", "merged": true, "mergeCommit": {"oid": "a6aa6bf76d12ccb2d5f12e194ec0ca885e3fc6e2"}, "closed": true, "closedAt": "2020-08-12T06:39:22Z", "author": {"login": "nadeeshaan"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc95nG3AH2gAyNDY2MjI4NjY0Ojk5M2YwOWRlMGNhYzk1MGJjZjE5YTIwODdlZTc5MjdmZjM3YTg0NmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-FfvhgFqTQ2NTYyNTI5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "993f09de0cac950bcf19a2087ee7927ff37a846f", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/993f09de0cac950bcf19a2087ee7927ff37a846f", "committedDate": "2020-08-11T16:42:46Z", "message": "fix failing test cases and filter public langlib entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5484042051875542992ec1c561dc1cd734f6174", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c5484042051875542992ec1c561dc1cd734f6174", "committedDate": "2020-08-11T16:42:46Z", "message": "revamp assignment context completions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NjI1Mjk3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25214#pullrequestreview-465625297", "createdAt": "2020-08-12T06:32:54Z", "commit": {"oid": "c5484042051875542992ec1c561dc1cd734f6174"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNjozMjo1NFrOG_Tk5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNjozMjo1NFrOG_Tk5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAzNDIxMg==", "bodyText": "this local variable seems to be redundant. can we add merge  ifPresent logic in https://github.com/ballerina-platform/ballerina-lang/pull/25214/files#diff-3fef1a396b3d9462c79c38bf09b51ca3R108 into https://github.com/ballerina-platform/ballerina-lang/pull/25214/files#diff-3fef1a396b3d9462c79c38bf09b51ca3R103. And else block can be safely removed. WDYT?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25214#discussion_r469034212", "createdAt": "2020-08-12T06:32:54Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/AssignmentStatementNodeContext.java", "diffHunk": "@@ -41,13 +57,57 @@ public AssignmentStatementNodeContext() {\n     public List<LSCompletionItem> getCompletions(LSContext context, AssignmentStatementNode node)\n             throws LSCompletionException {\n         List<LSCompletionItem> completionItems = new ArrayList<>();\n-        completionItems.addAll(this.actionKWCompletions(context));\n-        completionItems.addAll(this.expressionCompletions(context));\n+        if (this.onQualifiedNameIdentifier(context, node.expression())) {\n+            /*\n+            Captures the following cases\n+            (1) [module:]TypeName c = module:<cursor>\n+            (2) [module:]TypeName c = module:a<cursor>\n+             */\n+            QualifiedNameReferenceNode qNameRef = (QualifiedNameReferenceNode) node.expression();\n+            Predicate<Scope.ScopeEntry> filter = scopeEntry -> {\n+                BSymbol symbol = scopeEntry.symbol;\n+                return symbol instanceof BVarSymbol && (symbol.flags & Flags.PUBLIC) == Flags.PUBLIC;\n+            };\n+            List<Scope.ScopeEntry> moduleContent = QNameReferenceUtil.getModuleContent(context, qNameRef, filter);\n+            completionItems.addAll(this.getCompletionItemList(moduleContent, context));\n+        } else {\n+            /*\n+            Captures the following cases\n+            (1) [module:]TypeName c = <cursor>\n+            (2) [module:]TypeName c = a<cursor>\n+             */\n+            completionItems.addAll(this.actionKWCompletions(context));\n+            completionItems.addAll(this.expressionCompletions(context));\n+            completionItems.addAll(this.getNewExprCompletionItems(context, node));\n+            completionItems.add(new SnippetCompletionItem(context, Snippet.KW_IS.get()));\n+        }\n         return completionItems;\n     }\n \n     @Override\n     public boolean onPreValidation(AssignmentStatementNode node) {\n         return !node.equalsToken().isMissing();\n     }\n+\n+    private List<LSCompletionItem> getNewExprCompletionItems(LSContext context, AssignmentStatementNode node) {\n+        List<LSCompletionItem> completionItems = new ArrayList<>();\n+        ArrayList<Scope.ScopeEntry> visibleSymbols = new ArrayList<>(context.get(CommonKeys.VISIBLE_SYMBOLS_KEY));\n+        Optional<BObjectTypeSymbol> objectType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5484042051875542992ec1c561dc1cd734f6174"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3636, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}