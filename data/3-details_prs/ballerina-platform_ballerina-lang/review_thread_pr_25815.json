{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MjIxMDU3", "number": 25815, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNDozNjoyM1rOEjn8HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNDozNjoyM1rOEjn8HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Nzg5OTgwOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNDozNjoyM1rOHSFE2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNDozMjo0MFrOIF4c9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcxOTU3OQ==", "bodyText": "Is this correct? Shouldn't we look at the return type?\nI guess the validation for ordered type will still work since we use the expected type as the type of the arrow function and invalid types are detected early on.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25815#discussion_r488719579", "createdAt": "2020-09-15T14:36:23Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5406,10 +5406,24 @@ private void checkArrayLibSortFuncArgs(BLangInvocation iExpr) {\n             return;\n         }\n \n-        BLangLambdaFunction keyLambdaFunction = (BLangLambdaFunction) keyFunction;\n-        BType returnType = keyLambdaFunction.function.type.getReturnType();\n+        DiagnosticPos pos;\n+        BType returnType;\n+\n+        if (keyFunction.getKind() == NodeKind.SIMPLE_VARIABLE_REF) {\n+            pos = keyFunction.pos;\n+            returnType = ((BLangSimpleVarRef) keyFunction).type.getReturnType();\n+        } else if (keyFunction.getKind() == NodeKind.ARROW_EXPR) {\n+            BLangArrowFunction arrowFunction = ((BLangArrowFunction) keyFunction);\n+            pos = arrowFunction.params.get(0).pos;\n+            returnType = arrowFunction.params.get(0).type;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eab615d130eb68a519a3b493e47185db2b037bd2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcyMTMzMw==", "bodyText": "Also, the following seems to result in a bad, sad error at runtime.\nimport ballerina/lang.array;\n\npublic function main() {\n    int[] arr = [1, 4, 2];\n    int[] sortedArr = arr.sort(array:ASCENDING, (i) => i.toString());\n}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25815#discussion_r488721333", "createdAt": "2020-09-15T14:38:36Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5406,10 +5406,24 @@ private void checkArrayLibSortFuncArgs(BLangInvocation iExpr) {\n             return;\n         }\n \n-        BLangLambdaFunction keyLambdaFunction = (BLangLambdaFunction) keyFunction;\n-        BType returnType = keyLambdaFunction.function.type.getReturnType();\n+        DiagnosticPos pos;\n+        BType returnType;\n+\n+        if (keyFunction.getKind() == NodeKind.SIMPLE_VARIABLE_REF) {\n+            pos = keyFunction.pos;\n+            returnType = ((BLangSimpleVarRef) keyFunction).type.getReturnType();\n+        } else if (keyFunction.getKind() == NodeKind.ARROW_EXPR) {\n+            BLangArrowFunction arrowFunction = ((BLangArrowFunction) keyFunction);\n+            pos = arrowFunction.params.get(0).pos;\n+            returnType = arrowFunction.params.get(0).type;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcxOTU3OQ=="}, "originalCommit": {"oid": "eab615d130eb68a519a3b493e47185db2b037bd2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzAzODcwOA==", "bodyText": "Fixed in #25834", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25815#discussion_r543038708", "createdAt": "2020-12-15T04:32:40Z", "author": {"login": "lasinicl"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5406,10 +5406,24 @@ private void checkArrayLibSortFuncArgs(BLangInvocation iExpr) {\n             return;\n         }\n \n-        BLangLambdaFunction keyLambdaFunction = (BLangLambdaFunction) keyFunction;\n-        BType returnType = keyLambdaFunction.function.type.getReturnType();\n+        DiagnosticPos pos;\n+        BType returnType;\n+\n+        if (keyFunction.getKind() == NodeKind.SIMPLE_VARIABLE_REF) {\n+            pos = keyFunction.pos;\n+            returnType = ((BLangSimpleVarRef) keyFunction).type.getReturnType();\n+        } else if (keyFunction.getKind() == NodeKind.ARROW_EXPR) {\n+            BLangArrowFunction arrowFunction = ((BLangArrowFunction) keyFunction);\n+            pos = arrowFunction.params.get(0).pos;\n+            returnType = arrowFunction.params.get(0).type;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcxOTU3OQ=="}, "originalCommit": {"oid": "eab615d130eb68a519a3b493e47185db2b037bd2"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 112, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}