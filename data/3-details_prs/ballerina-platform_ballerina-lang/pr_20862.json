{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMjM4NzE3", "number": 20862, "title": "Optimize \"ballerina run\" command execution flow", "bodyText": "Purpose\nFixes #20841.\nApproach\nThis PR excludes CreateExecutableTask phase (where the final uber jar is created) from the ballerina run execution flow. Therefore instead of creating a single executable uber jar and executing it, the executable thin jar will be running with all its dependency jars added to the classpath. Therefore this improves the ballerina program startup time.\nRelated PRs\n#21114.\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-02-05T08:17:17Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20862", "merged": true, "mergeCommit": {"oid": "b8b23ee5a572abd87800c6de43b7ec8a802a9ca8"}, "closed": true, "closedAt": "2020-02-13T08:54:28Z", "author": {"login": "NipunaRanasinghe"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAVykBgH2gAyMzcxMjM4NzE3OjMxNzE0NmRjYzIzODBmNDU2YzRhZTZiMGU1MDhjNGNiMjEyODA4M2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcD1r7IABqjMwMzM2OTIwNjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "317146dcc2380f456c4ae6b0e508c4cb2128083e", "author": {"user": {"login": "NipunaRanasinghe", "name": "Nipuna Ransinghe "}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/317146dcc2380f456c4ae6b0e508c4cb2128083e", "committedDate": "2020-02-02T10:29:19Z", "message": "Exclude uber jar creation phase from \"ballerina run\" command execution flow"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNTg0NjQw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20862#pullrequestreview-353584640", "createdAt": "2020-02-05T09:50:27Z", "commit": {"oid": "317146dcc2380f456c4ae6b0e508c4cb2128083e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTo1MDoyOFrOFlxmGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTo1MDoyOFrOFlxmGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE1NDIwMQ==", "bodyText": "You can use StringJoiner with File.pathSeparator here.\nStringJoiner joiner = new StringJoiner(File.pathSeparator);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20862#discussion_r375154201", "createdAt": "2020-02-05T09:50:28Z", "author": {"login": "rasika"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunExecutableTask.java", "diffHunk": "@@ -207,15 +195,16 @@ private void runGeneratedExecutableWithSameClassLoader(BLangPackage executableMo\n         }\n     }\n \n-    private static String getClassPath(ExecutableJar jar) {\n-        String seperator = \":\";\n-        if (OsUtils.isWindows()) {\n-            seperator = \";\";\n-        }\n-        StringBuilder classPath = new StringBuilder(jar.moduleJar.toString());\n-        for (Path path : jar.platformLibs) {\n-            classPath.append(seperator).append(path);\n-        }\n-        return classPath.toString();\n+    private String getAllClassPaths(BLangPackage executableModule, BuildContext buildContext) {\n+        // Since classpath separator depends on the OS type\n+        String separator = OsUtils.isWindows() ? \";\" : \":\";\n+        StringBuilder cp = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "317146dcc2380f456c4ae6b0e508c4cb2128083e"}, "originalPosition": 167}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "211ca425afe0c515a5a7edb77c62e5b483943ac0", "author": {"user": {"login": "NipunaRanasinghe", "name": "Nipuna Ransinghe "}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/211ca425afe0c515a5a7edb77c62e5b483943ac0", "committedDate": "2020-02-06T06:02:05Z", "message": "Replace StringBuilder with StringJoiner"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjE2NDc3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20862#pullrequestreview-357216477", "createdAt": "2020-02-12T06:38:14Z", "commit": {"oid": "211ca425afe0c515a5a7edb77c62e5b483943ac0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNjozODoxNFrOFojH1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNjozODoxNFrOFojH1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2MjgwNw==", "bodyText": "not found?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20862#discussion_r378062807", "createdAt": "2020-02-12T06:38:14Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunExecutableTask.java", "diffHunk": "@@ -64,71 +65,59 @@\n      * @param isInDebugMode Flag to notify whether the executable jar should be run in the debug mode.\n      */\n     public RunExecutableTask(String[] args, boolean isInDebugMode) {\n-        this(null, args);\n+        this(args);\n         this.isInDebugMode = isInDebugMode;\n     }\n \n     /**\n      * Create a task to run an executable from a given path.\n      *\n-     * @param executablePath The path to the executable.\n-     * @param args           Arguments for the executable.\n+     * @param args Arguments for the executable.\n      */\n-    public RunExecutableTask(Path executablePath, String[] args) {\n-        this.executablePath = executablePath;\n+    public RunExecutableTask(String[] args) {\n         this.args = args;\n     }\n \n     @Override\n     public void execute(BuildContext buildContext) {\n         Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n         BLangPackage executableModule = null;\n-        // set executable path from an executable built on the go\n-        if (null == this.executablePath) {\n-            for (BLangPackage module : buildContext.getModules()) {\n-                if (module.symbol.entryPointExists) {\n-                    this.executablePath = buildContext.getExecutablePathFromTarget(module.packageID);\n-                    executableModule = module;\n-                    break;\n-                }\n+        for (BLangPackage module : buildContext.getModules()) {\n+            if (module.symbol.entryPointExists) {\n+                executableModule = module;\n+                this.executableJarPath = buildContext.getJarPathFromTargetCache(executableModule.packageID);\n+                break;\n             }\n+        }\n \n-            // check if executable found with entry points.\n-            if (null == this.executablePath) {\n-                switch (buildContext.getSourceType()) {\n-                    case SINGLE_BAL_FILE:\n-                        SingleFileContext singleFileContext = buildContext.get(BuildContextField.SOURCE_CONTEXT);\n-                        throw createLauncherException(\"no entry points found in '\" + singleFileContext.getBalFile() +\n-                                \"'.\");\n-                    case SINGLE_MODULE:\n-                        SingleModuleContext singleModuleContext = buildContext.get(BuildContextField.SOURCE_CONTEXT);\n-                        throw createLauncherException(\"no entry points found in '\" +\n-                                singleModuleContext.getModuleName() + \"'.\");\n-                    default:\n-                        throw createLauncherException(\"unknown source type found when running executable.\");\n-                }\n+        // check if any entry points are found.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211ca425afe0c515a5a7edb77c62e5b483943ac0"}, "originalPosition": 90}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjE2ODk0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20862#pullrequestreview-357216894", "createdAt": "2020-02-12T06:39:35Z", "commit": {"oid": "211ca425afe0c515a5a7edb77c62e5b483943ac0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNjozOTozNlrOFojJQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNjozOTozNlrOFojJQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2MzE3MQ==", "bodyText": "Do we need this check. module jar always jar file", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20862#discussion_r378063171", "createdAt": "2020-02-12T06:39:36Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunExecutableTask.java", "diffHunk": "@@ -64,71 +65,59 @@\n      * @param isInDebugMode Flag to notify whether the executable jar should be run in the debug mode.\n      */\n     public RunExecutableTask(String[] args, boolean isInDebugMode) {\n-        this(null, args);\n+        this(args);\n         this.isInDebugMode = isInDebugMode;\n     }\n \n     /**\n      * Create a task to run an executable from a given path.\n      *\n-     * @param executablePath The path to the executable.\n-     * @param args           Arguments for the executable.\n+     * @param args Arguments for the executable.\n      */\n-    public RunExecutableTask(Path executablePath, String[] args) {\n-        this.executablePath = executablePath;\n+    public RunExecutableTask(String[] args) {\n         this.args = args;\n     }\n \n     @Override\n     public void execute(BuildContext buildContext) {\n         Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n         BLangPackage executableModule = null;\n-        // set executable path from an executable built on the go\n-        if (null == this.executablePath) {\n-            for (BLangPackage module : buildContext.getModules()) {\n-                if (module.symbol.entryPointExists) {\n-                    this.executablePath = buildContext.getExecutablePathFromTarget(module.packageID);\n-                    executableModule = module;\n-                    break;\n-                }\n+        for (BLangPackage module : buildContext.getModules()) {\n+            if (module.symbol.entryPointExists) {\n+                executableModule = module;\n+                this.executableJarPath = buildContext.getJarPathFromTargetCache(executableModule.packageID);\n+                break;\n             }\n+        }\n \n-            // check if executable found with entry points.\n-            if (null == this.executablePath) {\n-                switch (buildContext.getSourceType()) {\n-                    case SINGLE_BAL_FILE:\n-                        SingleFileContext singleFileContext = buildContext.get(BuildContextField.SOURCE_CONTEXT);\n-                        throw createLauncherException(\"no entry points found in '\" + singleFileContext.getBalFile() +\n-                                \"'.\");\n-                    case SINGLE_MODULE:\n-                        SingleModuleContext singleModuleContext = buildContext.get(BuildContextField.SOURCE_CONTEXT);\n-                        throw createLauncherException(\"no entry points found in '\" +\n-                                singleModuleContext.getModuleName() + \"'.\");\n-                    default:\n-                        throw createLauncherException(\"unknown source type found when running executable.\");\n-                }\n+        // check if any entry points are found.\n+        if (executableModule == null) {\n+            switch (buildContext.getSourceType()) {\n+                case SINGLE_BAL_FILE:\n+                    SingleFileContext singleFileContext = buildContext.get(BuildContextField.SOURCE_CONTEXT);\n+                    throw createLauncherException(String.format(\"no entry points found in '%s'.\",\n+                            singleFileContext.getBalFile()));\n+                case SINGLE_MODULE:\n+                    SingleModuleContext singleModuleContext = buildContext.get(BuildContextField.SOURCE_CONTEXT);\n+                    throw createLauncherException(String.format(\"no entry points found in '%s'.\",\n+                            singleModuleContext.getModuleName()));\n+                default:\n+                    throw createLauncherException(\"unknown source type found when running executable.\");\n             }\n         }\n \n-        if (!this.executablePath.isAbsolute()) {\n-            this.executablePath = sourceRootPath.resolve(executablePath);\n+        // if the executable does not exist.\n+        if (Files.notExists(this.executableJarPath)) {\n+            throw createLauncherException(String.format(\"cannot run '%s' as it does not exist.\",\n+                    executableJarPath.toAbsolutePath().toString()));\n         }\n \n-        // clean up the path and get absolute path\n-        this.executablePath = this.executablePath.toAbsolutePath().normalize();\n-\n-        // if the executable does not exist\n-        if (Files.notExists(this.executablePath)) {\n-            throw createLauncherException(\"cannot run '\" + this.executablePath.toAbsolutePath().toString() +\n-                    \"' as it does not exist.\");\n-        }\n-\n-        // if the executable is not a file and not an extension with .jar\n-        if (!(Files.isRegularFile(this.executablePath) &&\n-                this.executablePath.toString().endsWith(BLANG_COMPILED_JAR_EXT))) {\n-\n-            throw createLauncherException(\"cannot run '\" + this.executablePath.toAbsolutePath().toString() +\n-                    \"' as it is not an executable with .jar extension.\");\n+        // if the executable is not a file and not an extension with .jar.\n+        if (!(Files.isRegularFile(this.executableJarPath) &&\n+                this.executableJarPath.toString().endsWith(BLANG_COMPILED_JAR_EXT))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211ca425afe0c515a5a7edb77c62e5b483943ac0"}, "originalPosition": 131}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjE4MTgw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20862#pullrequestreview-357218180", "createdAt": "2020-02-12T06:43:35Z", "commit": {"oid": "211ca425afe0c515a5a7edb77c62e5b483943ac0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNjo0MzozNVrOFojNew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNjo0MzozNVrOFojNew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2NDI1MQ==", "bodyText": "this is module jar i think?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20862#discussion_r378064251", "createdAt": "2020-02-12T06:43:35Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunExecutableTask.java", "diffHunk": "@@ -53,7 +54,7 @@\n public class RunExecutableTask implements Task {\n \n     private final String[] args;\n-    private Path executablePath;\n+    private Path executableJarPath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211ca425afe0c515a5a7edb77c62e5b483943ac0"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NDAzMDQ0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20862#pullrequestreview-357403044", "createdAt": "2020-02-12T12:11:24Z", "commit": {"oid": "154935b90218e06bd285a2c6a5ac335f3373800d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "323abab92ce2970e75f4bfc9dc7169d607e742ac", "author": {"user": {"login": "NipunaRanasinghe", "name": "Nipuna Ransinghe "}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/323abab92ce2970e75f4bfc9dc7169d607e742ac", "committedDate": "2020-02-13T01:02:19Z", "message": "Add review suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b6f3dc14aa45f5bc6e5780106494f656c28f7499", "author": {"user": {"login": "NipunaRanasinghe", "name": "Nipuna Ransinghe "}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b6f3dc14aa45f5bc6e5780106494f656c28f7499", "committedDate": "2020-02-12T17:38:32Z", "message": "Merge branch 'ballerina-1.1.x' of https://github.com/ballerina-platform/ballerina-lang into improve-ballerina-run"}, "afterCommit": {"oid": "323abab92ce2970e75f4bfc9dc7169d607e742ac", "author": {"user": {"login": "NipunaRanasinghe", "name": "Nipuna Ransinghe "}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/323abab92ce2970e75f4bfc9dc7169d607e742ac", "committedDate": "2020-02-13T01:02:19Z", "message": "Add review suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab9d48c7b8233996ba176486a26025086f1a0743", "author": {"user": {"login": "NipunaRanasinghe", "name": "Nipuna Ransinghe "}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ab9d48c7b8233996ba176486a26025086f1a0743", "committedDate": "2020-02-13T01:03:16Z", "message": "Merge branch 'ballerina-1.1.x' of https://github.com/ballerina-platform/ballerina-lang into improve-ballerina-run"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5de60acb4a182063e1a048f4775f5a56ac69667", "author": {"user": {"login": "NipunaRanasinghe", "name": "Nipuna Ransinghe "}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e5de60acb4a182063e1a048f4775f5a56ac69667", "committedDate": "2020-02-13T07:20:25Z", "message": "Fix log API tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28fb03b6a6a6ef83be7520eacd78d1d7f3c93a15", "author": {"user": {"login": "NipunaRanasinghe", "name": "Nipuna Ransinghe "}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/28fb03b6a6a6ef83be7520eacd78d1d7f3c93a15", "committedDate": "2020-02-13T05:23:24Z", "message": "Fix log API tests"}, "afterCommit": {"oid": "e5de60acb4a182063e1a048f4775f5a56ac69667", "author": {"user": {"login": "NipunaRanasinghe", "name": "Nipuna Ransinghe "}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e5de60acb4a182063e1a048f4775f5a56ac69667", "committedDate": "2020-02-13T07:20:25Z", "message": "Fix log API tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4298, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}