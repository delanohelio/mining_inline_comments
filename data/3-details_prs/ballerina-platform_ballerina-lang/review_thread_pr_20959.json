{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMTE0Nzky", "number": 20959, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMjo1ODo0MFrODecYSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMjo1ODo0MFrODecYSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjQ4ODQyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMjo1ODo0MFrOFnlGcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMjo1OToyMVrOFnlHqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA0NjY0Mw==", "bodyText": "I guess we can use the expType instead.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (queryExpr.expectedType.tag != symTable.noType.tag) {\n          \n          \n            \n                    if (expType.tag != symTable.noType.tag) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20959#discussion_r377046643", "createdAt": "2020-02-10T12:58:40Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -2614,7 +2614,14 @@ public void visit(BLangQueryExpr queryExpr) {\n         for (WhereClauseNode whereClauseNode : whereClauseList) {\n             whereEnv = typeCheckWhereClause((BLangWhereClause) whereClauseNode, selectClause, parentEnv);\n         }\n-        checkExpr(selectClause.expression, whereEnv);\n+\n+        if (queryExpr.expectedType.tag != symTable.noType.tag) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "031681f82df03095ce475187cc4252f74c865dc1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA0Njk1NA==", "bodyText": "Shall we check\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (queryExpr.expectedType.tag != symTable.noType.tag) {\n          \n          \n            \n                    if (expType.tag == TypeTags.ARRAY) {\n          \n      \n    \n    \n  \n\ninstead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20959#discussion_r377046954", "createdAt": "2020-02-10T12:59:21Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -2614,7 +2614,14 @@ public void visit(BLangQueryExpr queryExpr) {\n         for (WhereClauseNode whereClauseNode : whereClauseList) {\n             whereEnv = typeCheckWhereClause((BLangWhereClause) whereClauseNode, selectClause, parentEnv);\n         }\n-        checkExpr(selectClause.expression, whereEnv);\n+\n+        if (queryExpr.expectedType.tag != symTable.noType.tag) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA0NjY0Mw=="}, "originalCommit": {"oid": "031681f82df03095ce475187cc4252f74c865dc1"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1187, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}