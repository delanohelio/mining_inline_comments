{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MDk4NTY4", "number": 23693, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoxNjo0M1rOECF26w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoxOTowMFrOECF52w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjI4NTg3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoxNjo0M1rOGeVa1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMToyODowMVrOGeXmQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2MTM5OA==", "bodyText": "Can't use single param createIdentifier method?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23693#discussion_r434461398", "createdAt": "2020-06-03T10:16:43Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -1247,11 +1256,22 @@ public BLangNode transform(BinaryExpressionNode binaryExprNode) {\n \n     @Override\n     public BLangNode transform(FieldAccessExpressionNode fieldAccessExprNode) {\n-        BLangFieldBasedAccess bLFieldBasedAccess = (BLangFieldBasedAccess) TreeBuilder.createFieldBasedAccessNode();\n+        BLangFieldBasedAccess bLFieldBasedAccess;\n         Node fieldName = fieldAccessExprNode.fieldName();\n+        if (fieldName.kind() == SyntaxKind.QUALIFIED_NAME_REFERENCE) {\n+            QualifiedNameReferenceNode qualifiedFieldName = (QualifiedNameReferenceNode)fieldName;\n+            BLangFieldBasedAccess.BLangNSPrefixedFieldBasedAccess accessWithPrefixNode =\n+                    (BLangFieldBasedAccess.BLangNSPrefixedFieldBasedAccess)\n+                            TreeBuilder.createFieldBasedAccessWithPrefixNode();\n+            accessWithPrefixNode.nsPrefix = createIdentifier(qualifiedFieldName.modulePrefix());\n+            accessWithPrefixNode.field = createIdentifier(qualifiedFieldName.identifier());\n+            bLFieldBasedAccess = accessWithPrefixNode;\n+        } else {\n+            bLFieldBasedAccess = (BLangFieldBasedAccess) TreeBuilder.createFieldBasedAccessNode();\n+            bLFieldBasedAccess.field =\n+                    createIdentifier(getPosition(fieldName), ((SimpleNameReferenceNode) fieldName).name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc9e13e2bd2a717194b64171b2a77ef658a07e6a"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ5NzA4OQ==", "bodyText": "changed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23693#discussion_r434497089", "createdAt": "2020-06-03T11:28:01Z", "author": {"login": "KavinduZoysa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -1247,11 +1256,22 @@ public BLangNode transform(BinaryExpressionNode binaryExprNode) {\n \n     @Override\n     public BLangNode transform(FieldAccessExpressionNode fieldAccessExprNode) {\n-        BLangFieldBasedAccess bLFieldBasedAccess = (BLangFieldBasedAccess) TreeBuilder.createFieldBasedAccessNode();\n+        BLangFieldBasedAccess bLFieldBasedAccess;\n         Node fieldName = fieldAccessExprNode.fieldName();\n+        if (fieldName.kind() == SyntaxKind.QUALIFIED_NAME_REFERENCE) {\n+            QualifiedNameReferenceNode qualifiedFieldName = (QualifiedNameReferenceNode)fieldName;\n+            BLangFieldBasedAccess.BLangNSPrefixedFieldBasedAccess accessWithPrefixNode =\n+                    (BLangFieldBasedAccess.BLangNSPrefixedFieldBasedAccess)\n+                            TreeBuilder.createFieldBasedAccessWithPrefixNode();\n+            accessWithPrefixNode.nsPrefix = createIdentifier(qualifiedFieldName.modulePrefix());\n+            accessWithPrefixNode.field = createIdentifier(qualifiedFieldName.identifier());\n+            bLFieldBasedAccess = accessWithPrefixNode;\n+        } else {\n+            bLFieldBasedAccess = (BLangFieldBasedAccess) TreeBuilder.createFieldBasedAccessNode();\n+            bLFieldBasedAccess.field =\n+                    createIdentifier(getPosition(fieldName), ((SimpleNameReferenceNode) fieldName).name());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2MTM5OA=="}, "originalCommit": {"oid": "dc9e13e2bd2a717194b64171b2a77ef658a07e6a"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjI5MTkwOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoxODozMFrOGeVexQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTozMzowN1rOGeXv6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2MjQwNQ==", "bodyText": "Can't use single param createIdentifier method?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23693#discussion_r434462405", "createdAt": "2020-06-03T10:18:30Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -2015,6 +2057,55 @@ public BLangNode transform(XMLTextNode xmlTextNode) {\n         return xmlTextLiteral;\n     }\n \n+    @Override\n+    public BLangNode transform(XMLNamespaceDeclarationNode xmlnsDeclNode) {\n+        BLangXMLNS xmlns = (BLangXMLNS) TreeBuilder.createXMLNSNode();\n+        BLangIdentifier prefixIdentifier = createIdentifier(getPosition(xmlnsDeclNode.namespacePrefix()),\n+                xmlnsDeclNode.namespacePrefix().text());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc9e13e2bd2a717194b64171b2a77ef658a07e6a"}, "originalPosition": 174}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ5OTU2MQ==", "bodyText": "Changed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23693#discussion_r434499561", "createdAt": "2020-06-03T11:33:07Z", "author": {"login": "KavinduZoysa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -2015,6 +2057,55 @@ public BLangNode transform(XMLTextNode xmlTextNode) {\n         return xmlTextLiteral;\n     }\n \n+    @Override\n+    public BLangNode transform(XMLNamespaceDeclarationNode xmlnsDeclNode) {\n+        BLangXMLNS xmlns = (BLangXMLNS) TreeBuilder.createXMLNSNode();\n+        BLangIdentifier prefixIdentifier = createIdentifier(getPosition(xmlnsDeclNode.namespacePrefix()),\n+                xmlnsDeclNode.namespacePrefix().text());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2MjQwNQ=="}, "originalCommit": {"oid": "dc9e13e2bd2a717194b64171b2a77ef658a07e6a"}, "originalPosition": 174}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjI5MzM5OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDoxOTowMFrOGeVf0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTozMzoyNVrOGeXwbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2MjY3Mw==", "bodyText": "Can't use single param createIdentifier method?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23693#discussion_r434462673", "createdAt": "2020-06-03T10:19:00Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -2015,6 +2057,55 @@ public BLangNode transform(XMLTextNode xmlTextNode) {\n         return xmlTextLiteral;\n     }\n \n+    @Override\n+    public BLangNode transform(XMLNamespaceDeclarationNode xmlnsDeclNode) {\n+        BLangXMLNS xmlns = (BLangXMLNS) TreeBuilder.createXMLNSNode();\n+        BLangIdentifier prefixIdentifier = createIdentifier(getPosition(xmlnsDeclNode.namespacePrefix()),\n+                xmlnsDeclNode.namespacePrefix().text());\n+\n+        xmlns.namespaceURI = createSimpleLiteral(xmlnsDeclNode.namespaceuri());\n+        xmlns.prefix = prefixIdentifier;\n+        xmlns.pos = getPosition(xmlnsDeclNode);\n+\n+        BLangXMLNSStatement xmlnsStmt = (BLangXMLNSStatement) TreeBuilder.createXMLNSDeclrStatementNode();\n+        xmlnsStmt.xmlnsDecl = xmlns;\n+        xmlnsStmt.pos = getPosition(xmlnsDeclNode);\n+        return xmlnsStmt;\n+    }\n+\n+    @Override\n+    public BLangNode transform(ModuleXMLNamespaceDeclarationNode xmlnsDeclNode) {\n+        BLangXMLNS xmlns = (BLangXMLNS) TreeBuilder.createXMLNSNode();\n+        BLangIdentifier prefixIdentifier = createIdentifier(getPosition(xmlnsDeclNode.namespacePrefix()),\n+                xmlnsDeclNode.namespacePrefix().text());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc9e13e2bd2a717194b64171b2a77ef658a07e6a"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ5OTY5NQ==", "bodyText": "Changed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23693#discussion_r434499695", "createdAt": "2020-06-03T11:33:25Z", "author": {"login": "KavinduZoysa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -2015,6 +2057,55 @@ public BLangNode transform(XMLTextNode xmlTextNode) {\n         return xmlTextLiteral;\n     }\n \n+    @Override\n+    public BLangNode transform(XMLNamespaceDeclarationNode xmlnsDeclNode) {\n+        BLangXMLNS xmlns = (BLangXMLNS) TreeBuilder.createXMLNSNode();\n+        BLangIdentifier prefixIdentifier = createIdentifier(getPosition(xmlnsDeclNode.namespacePrefix()),\n+                xmlnsDeclNode.namespacePrefix().text());\n+\n+        xmlns.namespaceURI = createSimpleLiteral(xmlnsDeclNode.namespaceuri());\n+        xmlns.prefix = prefixIdentifier;\n+        xmlns.pos = getPosition(xmlnsDeclNode);\n+\n+        BLangXMLNSStatement xmlnsStmt = (BLangXMLNSStatement) TreeBuilder.createXMLNSDeclrStatementNode();\n+        xmlnsStmt.xmlnsDecl = xmlns;\n+        xmlnsStmt.pos = getPosition(xmlnsDeclNode);\n+        return xmlnsStmt;\n+    }\n+\n+    @Override\n+    public BLangNode transform(ModuleXMLNamespaceDeclarationNode xmlnsDeclNode) {\n+        BLangXMLNS xmlns = (BLangXMLNS) TreeBuilder.createXMLNSNode();\n+        BLangIdentifier prefixIdentifier = createIdentifier(getPosition(xmlnsDeclNode.namespacePrefix()),\n+                xmlnsDeclNode.namespacePrefix().text());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2MjY3Mw=="}, "originalCommit": {"oid": "dc9e13e2bd2a717194b64171b2a77ef658a07e6a"}, "originalPosition": 190}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3559, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}