{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMjAzMzkz", "number": 26974, "title": "Fix parser crashes for incomplete function-type in tuple-type", "bodyText": "Purpose\n$Subject\nFixes #26012\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-11-17T07:31:44Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26974", "merged": true, "mergeCommit": {"oid": "bca47b1eee57402aeef6dc7df3cdd765f444fd2b"}, "closed": true, "closedAt": "2020-11-18T13:41:06Z", "author": {"login": "rdulmina"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddUZ5zAH2gAyNTIyMjAzMzkzOmFjZDk2NWRjMDBkYzlkZmUzMTQ4OTZiMDQwMjJhMTFhZjYyYjExMmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdduWMlgFqTUzMzQ1NTAyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "acd965dc00dc9dfe314896b04022a11af62b112d", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/acd965dc00dc9dfe314896b04022a11af62b112d", "committedDate": "2020-11-17T07:27:26Z", "message": "Fix parsing bug of parseAnonFuncExprOrFuncTypeDesc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b61b05802554853762327344949cdf3e28e9ebc7", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b61b05802554853762327344949cdf3e28e9ebc7", "committedDate": "2020-11-17T07:27:42Z", "message": "Test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMjA0Mjgw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26974#pullrequestreview-532204280", "createdAt": "2020-11-17T10:06:38Z", "commit": {"oid": "b61b05802554853762327344949cdf3e28e9ebc7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMDowNjozOVrOH0taPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMDowNzo0MlrOH0tc5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAzMTk5Ng==", "bodyText": "Rather than the flag, can we use the ParserRuleContext to determine where we are?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26974#discussion_r525031996", "createdAt": "2020-11-17T10:06:39Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -13357,11 +13359,15 @@ private STNode parseAnonFuncExprOrFuncTypeDesc(List<STNode> qualifiers) {\n                 return parseExpressionRhs(DEFAULT_OP_PRECEDENCE, anonFunc, false, true);\n             case IDENTIFIER_TOKEN:\n             default:\n-                switchContext(ParserRuleContext.VAR_DECL_STMT);\n                 STNode funcTypeDesc = STNodeFactory.createFunctionTypeDescriptorNode(qualifierList, functionKeyword,\n                         funcSignature);\n-                return parseComplexTypeDescriptor(funcTypeDesc, ParserRuleContext.TYPE_DESC_IN_TYPE_BINDING_PATTERN,\n-                        true);\n+                if (!isInBracketedList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61b05802554853762327344949cdf3e28e9ebc7"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAzMjY3Ng==", "bodyText": "shall we add a test case for using [function (, x] in a statement-starting expression, (as its the other half of the ambiguity)?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26974#discussion_r525032676", "createdAt": "2020-11-17T10:07:42Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/test/resources/types/tuple-type/tuple_type_source_04.bal", "diffHunk": "@@ -10,4 +10,5 @@ function foo() returns [int, string... {\n     [string..] i;\n     [string % int a] j;\n     [int]] k;\n+    [function (, int] e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61b05802554853762327344949cdf3e28e9ebc7"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed8cd4717f00d42ff85f9b09970b3ed5bc33b1bb", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ed8cd4717f00d42ff85f9b09970b3ed5bc33b1bb", "committedDate": "2020-11-17T11:47:10Z", "message": "Add test case for anon func expression path"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d0782d68b307965091709d960b129deeff3a510", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1d0782d68b307965091709d960b129deeff3a510", "committedDate": "2020-11-18T05:00:35Z", "message": "Use current ctx to check context inside bracketed list"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNDU1MDIz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26974#pullrequestreview-533455023", "createdAt": "2020-11-18T13:40:55Z", "commit": {"oid": "1d0782d68b307965091709d960b129deeff3a510"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4900, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}