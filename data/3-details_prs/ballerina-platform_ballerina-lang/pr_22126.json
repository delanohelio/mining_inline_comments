{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyODAzODQ0", "number": 22126, "title": "Improve xml readOnly operation", "bodyText": "Purpose\nImprove readOnly operation for xml:Text, xml:ProcessingInstruction, xml:Comment\nFixes #22076\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-03-24T06:32:55Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126", "merged": true, "mergeCommit": {"oid": "04dc448a020a187cd0c2f56be3b6c8ca5838938e"}, "closed": true, "closedAt": "2020-03-31T08:58:40Z", "author": {"login": "rdhananjaya"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQs2wTAH2gAyMzkyODAzODQ0OmU0Y2E0ZmY2YjI1OWVjZWNhMTU5NWFmYTQyOTg3ZjdlYzM2MmE4YmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcS_HkGAFqTM4NDUyNTQxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e4ca4ff6b259ececa1595afa42987f7ec362a8bd", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e4ca4ff6b259ececa1595afa42987f7ec362a8bd", "committedDate": "2020-03-24T06:24:30Z", "message": "Improve xml readOnly operation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyODMyNzQ4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#pullrequestreview-382832748", "createdAt": "2020-03-27T12:58:29Z", "commit": {"oid": "e4ca4ff6b259ececa1595afa42987f7ec362a8bd"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjo1ODoyOVrOF8v_Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjo1OToxMlrOF8wBJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0NTE1OA==", "bodyText": "This logic only applies to XMLText.java now right? Shall we remove this implementation and implement copy() XMLText.java instead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399245158", "createdAt": "2020-03-27T12:58:29Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLNonElementItem.java", "diffHunk": "@@ -137,7 +138,6 @@ public XMLValue getItem(int index) {\n \n     @Override\n     public Object copy(Map<Object, Object> refs) {\n-        // XMLContentHolderItem is immutable\n         return this;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4ca4ff6b259ececa1595afa42987f7ec362a8bd"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0NTYwNA==", "bodyText": "Shall we move these assertions to the bal file instead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399245604", "createdAt": "2020-03-27T12:59:12Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/builtinfunctions/FreezeAndIsFrozenTest.java", "diffHunk": "@@ -436,6 +436,16 @@ public void testFrozenValueUpdatePanicWithCheckTrap() {\n                             \"failed to set element to json: message=modification not allowed on readonly value\");\n     }\n \n+    @Test\n+    public void testXMLItemsCloneReadOnly() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testXMLItemsCloneReadOnly\", new BValue[0]);\n+        Assert.assertTrue(((BBoolean) returns[0]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[1]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[2]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[3]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[4]).booleanValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4ca4ff6b259ececa1595afa42987f7ec362a8bd"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a3b60433823fe13098f2a503b63c7f9773598c3", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6a3b60433823fe13098f2a503b63c7f9773598c3", "committedDate": "2020-03-29T14:01:17Z", "message": "Move copy and frozenCopy methods down to XMLText"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "57cee8d3783281e45ea4309c36ddc1e4ea3433af", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/57cee8d3783281e45ea4309c36ddc1e4ea3433af", "committedDate": "2020-03-29T13:18:15Z", "message": "Move copy and frozenCopy methods down to XMLText"}, "afterCommit": {"oid": "6a3b60433823fe13098f2a503b63c7f9773598c3", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6a3b60433823fe13098f2a503b63c7f9773598c3", "committedDate": "2020-03-29T14:01:17Z", "message": "Move copy and frozenCopy methods down to XMLText"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/24f7ef1eb310acf7ace27ed071e24ecf79a7be31", "committedDate": "2020-03-29T15:01:20Z", "message": "Move test assertions to .bal files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTE5Njc0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#pullrequestreview-383519674", "createdAt": "2020-03-30T04:11:14Z", "commit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNDoxMToxNVrOF9ZBdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNDoxNDoxOVrOF9ZD9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzQzMA==", "bodyText": "IIUC, a sequence cannot be updated. So if all the children are read-only that indirectly makes the sequence also read-only?\nIf that is the case, if the following check evaluates to true, can't we set the frozen flag to true here? That way in the read-only scenario, we can avoid going through all the children over and over again?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399917430", "createdAt": "2020-03-30T04:11:15Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLSequence.java", "diffHunk": "@@ -551,6 +551,16 @@ public void freezeDirect() {\n         }\n     }\n \n+    @Override\n+    public synchronized boolean isFrozen() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzY2Nw==", "bodyText": "Shouldn't we override attemptFreeze(), freezeDirect() and freeze() too?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399917667", "createdAt": "2020-03-30T04:12:22Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLText.java", "diffHunk": "@@ -57,6 +58,21 @@ public String getItemType() {\n         return getNodeType().value();\n     }\n \n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzkwOQ==", "bodyText": "Can we add some false tests too?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399917909", "createdAt": "2020-03-30T04:13:33Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/builtinoperations/freeze-and-isfrozen.bal", "diffHunk": "@@ -251,6 +251,20 @@ function testFrozenXmlSetChildrenDeep() {\n     authorEm.setChildren(x2);\n }\n \n+function testXMLItemsCloneReadOnly() {\n+    xml x0 = xmllib:concat(xml `<hello>world</hello>`,\n+                        xml `<!-- comment text -->`,\n+                        xml `<?PIT data?>`,\n+                        xml `<item><child>String Content <sub></sub>More Str</child><child></child></item>`);\n+\n+    xml x1 = x0.cloneReadOnly();\n+    assertTrue((x1.<hello>).isReadOnly());\n+    assertTrue((x1.<hello>/*).isReadOnly());\n+    assertTrue(x1[1].isReadOnly());\n+    assertTrue(x1[2].isReadOnly());\n+    assertTrue((x1/**/<child>/*)[0].isReadOnly());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxODA3MA==", "bodyText": "Shall we use a reason without spaces?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    error e = error(\"Not True\", message = \"expected: true, found: \" + value.toString());\n          \n          \n            \n                    panic e;\n          \n          \n            \n                    error e = panic error(\"AssertionError\", message = \"expected: true, found: \" + value.toString());", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399918070", "createdAt": "2020-03-30T04:14:19Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/builtinoperations/freeze-and-isfrozen.bal", "diffHunk": "@@ -489,3 +503,10 @@ type FreezeAllowedDepartment record {|\n     string head;\n     (int)...;\n |};\n+\n+function assertTrue(boolean value) {\n+    if !(value) {\n+        error e = error(\"Not True\", message = \"expected: true, found: \" + value.toString());\n+        panic e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e13a2c86297ed55743bad6e962841a3fe02f1f9c", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e13a2c86297ed55743bad6e962841a3fe02f1f9c", "committedDate": "2020-03-30T05:57:24Z", "message": "Cache freezeStatus of xml sequence"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NTI1NDEy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#pullrequestreview-384525412", "createdAt": "2020-03-31T08:49:00Z", "commit": {"oid": "e13a2c86297ed55743bad6e962841a3fe02f1f9c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3778, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}