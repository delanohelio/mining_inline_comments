{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyOTMzOTIz", "number": 22145, "title": "Add Avro key serialization / deserialization support for Kafka module", "bodyText": "Purpose\n\n\nAdding Avro support for key serialization / deserialization support for Kafka module.\nAdded missing API docs for kafka:AvroRecord.\nRenamed external functions to increase readability.\nCreate separate send classes for different value types.\n\n\n\nFixes #22022\nFixes #21965\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-03-24T11:27:45Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22145", "merged": true, "mergeCommit": {"oid": "76ef6bd80980e2aa240d2da46ee1a99eb2562e99"}, "closed": true, "closedAt": "2020-03-26T05:11:26Z", "author": {"login": "ThisaruGuruge"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQZglIgH2gAyMzkyOTMzOTIzOjk3MjA4MTYzYzhiMGJlYTlkYTdkMWY4MzAyYjBlZWQwMmVhNWJlNzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRU434gFqTM4MTcwNDEzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "97208163c8b0bea9da7d1f8302b0eed02ea5be71", "author": {"user": {"login": "ThisaruGuruge", "name": "Thisaru Guruge"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/97208163c8b0bea9da7d1f8302b0eed02ea5be71", "committedDate": "2020-03-23T07:52:05Z", "message": "Add API documentation for AvroRecord"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "246d0f3bc7adf0f587bbb4fbac688815dbce2fd0", "author": {"user": {"login": "ThisaruGuruge", "name": "Thisaru Guruge"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/246d0f3bc7adf0f587bbb4fbac688815dbce2fd0", "committedDate": "2020-03-23T09:00:42Z", "message": "Arrange send functions into separtate classes byte value type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "916fd81de473a138d493805f625caa67efb80dfb", "author": {"user": {"login": "ThisaruGuruge", "name": "Thisaru Guruge"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/916fd81de473a138d493805f625caa67efb80dfb", "committedDate": "2020-03-23T17:17:09Z", "message": "Add Avro key serialization support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49cc493d547c5405aa2526ee1d333c52f9085a8b", "author": {"user": {"login": "ThisaruGuruge", "name": "Thisaru Guruge"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/49cc493d547c5405aa2526ee1d333c52f9085a8b", "committedDate": "2020-03-23T18:14:51Z", "message": "Add invalid serializer tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "573e7f0300ce682d3e6c58a9ec6146baf7a1d06e", "author": {"user": {"login": "ThisaruGuruge", "name": "Thisaru Guruge"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/573e7f0300ce682d3e6c58a9ec6146baf7a1d06e", "committedDate": "2020-03-24T12:46:43Z", "message": "Add avro key deserialization to consumers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0be0da117cfddd6edc0b077440d385df7f2b6e93", "author": {"user": {"login": "ThisaruGuruge", "name": "Thisaru Guruge"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0be0da117cfddd6edc0b077440d385df7f2b6e93", "committedDate": "2020-03-24T18:49:51Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into kafka-1.2.1-fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "491168770e91ce92b6fa170d4d6721785321559e", "author": {"user": {"login": "ThisaruGuruge", "name": "Thisaru Guruge"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/491168770e91ce92b6fa170d4d6721785321559e", "committedDate": "2020-03-25T05:53:47Z", "message": "Separate avro dependencies from the others"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTQ0OTU3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22145#pullrequestreview-380944957", "createdAt": "2020-03-25T08:40:13Z", "commit": {"oid": "491168770e91ce92b6fa170d4d6721785321559e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo0MDoxM1rOF7QvMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo0MDoxM1rOF7QvMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NDUyOA==", "bodyText": "Shall we revisit this function names? It bit difficult to get the idea that what this does by looking at the code?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22145#discussion_r397684528", "createdAt": "2020-03-25T08:40:13Z", "author": {"login": "wggihan"}, "path": "stdlib/messaging/kafka/src/main/ballerina/src/kafka/producer.bal", "diffHunk": "@@ -270,210 +271,246 @@ public type Producer client object {\n function sendStringValues(Producer producer, handle value, handle topic, anydata? key, int? partition, int? timestamp,\n     string keySerializerType) returns ProducerError? {\n     if (key is ()) {\n-        return producerSendString(producer, value, topic, partition, timestamp);\n+        return sendString(producer, value, topic, partition, timestamp);\n     }\n     if (keySerializerType == SER_STRING) {\n         if (key is string) {\n             handle keyHandle = java:fromString(key);\n-            return producerSendStringString(producer, value, topic, keyHandle, partition, timestamp);\n+            return sendStringString(producer, value, topic, keyHandle, partition, timestamp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "491168770e91ce92b6fa170d4d6721785321559e"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTQ3Mjk4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22145#pullrequestreview-380947298", "createdAt": "2020-03-25T08:43:48Z", "commit": {"oid": "491168770e91ce92b6fa170d4d6721785321559e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo0Mzo0OFrOF7Q2lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo0Mzo0OFrOF7Q2lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NjQyMQ==", "bodyText": "Shall we try to return ErrorValue here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22145#discussion_r397686421", "createdAt": "2020-03-25T08:43:48Z", "author": {"login": "wggihan"}, "path": "stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/utils/AvroUtils.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ *  Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.messaging.kafka.utils;\n+\n+import org.apache.avro.Schema;\n+import org.apache.avro.generic.GenericRecord;\n+import org.apache.avro.util.Utf8;\n+import org.ballerinalang.jvm.util.exceptions.BLangRuntimeException;\n+import org.ballerinalang.jvm.values.MapValue;\n+\n+import java.util.List;\n+\n+import static org.ballerinalang.messaging.kafka.utils.KafkaUtils.getAvroGenericRecord;\n+\n+/**\n+ * Utility functions to handle kafka avro operations.\n+ */\n+public class AvroUtils {\n+    /*\n+     * This is separated from the other classes since we don't pack avro dependencies  with the distribution.\n+     */\n+    private AvroUtils(){}\n+\n+    protected static void populateBallerinaGenericAvroRecord(MapValue<String, Object> genericAvroRecord,\n+                                                             GenericRecord record) {\n+        List<Schema.Field> fields = record.getSchema().getFields();\n+        for (Schema.Field field : fields) {\n+            if (record.get(field.name()) instanceof Utf8) {\n+                genericAvroRecord.put(field.name(), record.get(field.name()).toString());\n+            } else if (record.get(field.name()) instanceof GenericRecord) {\n+                populateBallerinaGenericAvroRecord(genericAvroRecord, (GenericRecord) record.get(field.name()));\n+            } else {\n+                genericAvroRecord.put(field.name(), record.get(field.name()));\n+            }\n+        }\n+    }\n+\n+    protected static MapValue<String, Object> handleAvroConsumer(Object value) {\n+        if (value instanceof GenericRecord) {\n+            MapValue<String, Object> genericAvroRecord = getAvroGenericRecord();\n+            populateBallerinaGenericAvroRecord(genericAvroRecord, (GenericRecord) value);\n+            return genericAvroRecord;\n+        } else {\n+            throw new BLangRuntimeException(\"Invalid type - expected: AvroGenericRecord\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "491168770e91ce92b6fa170d4d6721785321559e"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29ea23e03734ecdca6b4fdc7fc58b65324570820", "author": {"user": {"login": "ThisaruGuruge", "name": "Thisaru Guruge"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/29ea23e03734ecdca6b4fdc7fc58b65324570820", "committedDate": "2020-03-25T15:17:13Z", "message": "Update function names to increase readability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e949becbaa3bc5b7ff4b16e2393c49c1dcef286d", "author": {"user": {"login": "ThisaruGuruge", "name": "Thisaru Guruge"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e949becbaa3bc5b7ff4b16e2393c49c1dcef286d", "committedDate": "2020-03-25T15:17:46Z", "message": "Throw ErrorValue instead of BLangRuntimeException"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNzA0MTM5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22145#pullrequestreview-381704139", "createdAt": "2020-03-26T05:03:01Z", "commit": {"oid": "e949becbaa3bc5b7ff4b16e2393c49c1dcef286d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3784, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}