{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNjU4ODY3", "number": 22511, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODowNTozNVrODv4Rkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODowNTozNVrODv4Rkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNTMxNjY2OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/bytetype/BByteValueTest.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODowNTozNVrOGCjoWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMDoyMTo1NVrOGCozHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzNDEwNw==", "bodyText": "With new lang tests we've tried writing the tests in Ballerina itself as much as possible.\nFor example https://github.com/ballerina-platform/ballerina-lang/blob/master/tests/jballerina-unit-test/src/test/resources/test-src/expressions/listconstructor/list_constructor_infer_type.bal#L55\nWe can rewrite these tests similarly right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22511#discussion_r405334107", "createdAt": "2020-04-08T08:05:35Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/bytetype/BByteValueTest.java", "diffHunk": "@@ -792,4 +792,34 @@ private void invokeBitwisePrecedenceTestFunctionForInt(int a, int b, int c, Stri\n         BInteger bInteger = (BInteger) returns[0];\n         Assert.assertEquals(bInteger.intValue(), expected, \"Invalid byte value returned.\");\n     }\n+\n+    @Test(description = \"Test byte value return as int in lambda 1\")\n+    public void testByteReturnAsIntInLambda1() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testByteReturnAsIntInLambda1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "521ce0acae6cca0eb2e1dbf79b3f0baa84788078"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQwMjUyNw==", "bodyText": "looks like you have to repeat the assertEquality method for each new test bal file?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22511#discussion_r405402527", "createdAt": "2020-04-08T09:54:08Z", "author": {"login": "Kishanthan"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/bytetype/BByteValueTest.java", "diffHunk": "@@ -792,4 +792,34 @@ private void invokeBitwisePrecedenceTestFunctionForInt(int a, int b, int c, Stri\n         BInteger bInteger = (BInteger) returns[0];\n         Assert.assertEquals(bInteger.intValue(), expected, \"Invalid byte value returned.\");\n     }\n+\n+    @Test(description = \"Test byte value return as int in lambda 1\")\n+    public void testByteReturnAsIntInLambda1() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testByteReturnAsIntInLambda1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzNDEwNw=="}, "originalCommit": {"oid": "521ce0acae6cca0eb2e1dbf79b3f0baa84788078"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQwMzY1MQ==", "bodyText": "And yes, we can write that in the new style. The thing is all the other methods are written in the old way. May be we have to add a new bal test file with these new tests.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22511#discussion_r405403651", "createdAt": "2020-04-08T09:56:00Z", "author": {"login": "Kishanthan"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/bytetype/BByteValueTest.java", "diffHunk": "@@ -792,4 +792,34 @@ private void invokeBitwisePrecedenceTestFunctionForInt(int a, int b, int c, Stri\n         BInteger bInteger = (BInteger) returns[0];\n         Assert.assertEquals(bInteger.intValue(), expected, \"Invalid byte value returned.\");\n     }\n+\n+    @Test(description = \"Test byte value return as int in lambda 1\")\n+    public void testByteReturnAsIntInLambda1() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testByteReturnAsIntInLambda1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzNDEwNw=="}, "originalCommit": {"oid": "521ce0acae6cca0eb2e1dbf79b3f0baa84788078"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQwNTA0MQ==", "bodyText": "For the time-being yes, the assertEquality function has to be repeated in each test file. But once the compiler test suite is done we can directly switch to calling a similar (most-likely the same) function in that particular module.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22511#discussion_r405405041", "createdAt": "2020-04-08T09:58:21Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/bytetype/BByteValueTest.java", "diffHunk": "@@ -792,4 +792,34 @@ private void invokeBitwisePrecedenceTestFunctionForInt(int a, int b, int c, Stri\n         BInteger bInteger = (BInteger) returns[0];\n         Assert.assertEquals(bInteger.intValue(), expected, \"Invalid byte value returned.\");\n     }\n+\n+    @Test(description = \"Test byte value return as int in lambda 1\")\n+    public void testByteReturnAsIntInLambda1() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testByteReturnAsIntInLambda1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzNDEwNw=="}, "originalCommit": {"oid": "521ce0acae6cca0eb2e1dbf79b3f0baa84788078"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQxMTEyMw==", "bodyText": "Yeah, there is some inconsistency when adding tests to an existing file. But even then, IMO it's kinda OK given that we usually add new tests at the end?\nI'm OK with either approach.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22511#discussion_r405411123", "createdAt": "2020-04-08T10:08:38Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/bytetype/BByteValueTest.java", "diffHunk": "@@ -792,4 +792,34 @@ private void invokeBitwisePrecedenceTestFunctionForInt(int a, int b, int c, Stri\n         BInteger bInteger = (BInteger) returns[0];\n         Assert.assertEquals(bInteger.intValue(), expected, \"Invalid byte value returned.\");\n     }\n+\n+    @Test(description = \"Test byte value return as int in lambda 1\")\n+    public void testByteReturnAsIntInLambda1() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testByteReturnAsIntInLambda1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzNDEwNw=="}, "originalCommit": {"oid": "521ce0acae6cca0eb2e1dbf79b3f0baa84788078"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQxNTU1MA==", "bodyText": "Updated the tests :)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22511#discussion_r405415550", "createdAt": "2020-04-08T10:16:21Z", "author": {"login": "Kishanthan"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/bytetype/BByteValueTest.java", "diffHunk": "@@ -792,4 +792,34 @@ private void invokeBitwisePrecedenceTestFunctionForInt(int a, int b, int c, Stri\n         BInteger bInteger = (BInteger) returns[0];\n         Assert.assertEquals(bInteger.intValue(), expected, \"Invalid byte value returned.\");\n     }\n+\n+    @Test(description = \"Test byte value return as int in lambda 1\")\n+    public void testByteReturnAsIntInLambda1() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testByteReturnAsIntInLambda1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzNDEwNw=="}, "originalCommit": {"oid": "521ce0acae6cca0eb2e1dbf79b3f0baa84788078"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQxODc4MQ==", "bodyText": "Great, thanks!", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22511#discussion_r405418781", "createdAt": "2020-04-08T10:21:55Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/bytetype/BByteValueTest.java", "diffHunk": "@@ -792,4 +792,34 @@ private void invokeBitwisePrecedenceTestFunctionForInt(int a, int b, int c, Stri\n         BInteger bInteger = (BInteger) returns[0];\n         Assert.assertEquals(bInteger.intValue(), expected, \"Invalid byte value returned.\");\n     }\n+\n+    @Test(description = \"Test byte value return as int in lambda 1\")\n+    public void testByteReturnAsIntInLambda1() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testByteReturnAsIntInLambda1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMzNDEwNw=="}, "originalCommit": {"oid": "521ce0acae6cca0eb2e1dbf79b3f0baa84788078"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3962, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}