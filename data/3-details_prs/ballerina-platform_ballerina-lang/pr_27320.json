{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxNjM1OTkw", "number": 27320, "title": "Fix issue in optional field access ", "bodyText": "Purpose\nFix an issue occurred in optional field access for method invocation\n$subject\nFixes #25673\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-12-03T09:29:56Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320", "merged": true, "mergeCommit": {"oid": "4fba7128fa4883667baa663e044cd70d8473b633"}, "closed": true, "closedAt": "2020-12-21T16:03:18Z", "author": {"login": "KavinduZoysa"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdi9e6XAFqTU0NTI2MzExOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdoYKPngFqTU1NjQ4NzA5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MjYzMTE4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#pullrequestreview-545263118", "createdAt": "2020-12-04T20:08:37Z", "commit": {"oid": "b5161bf28071612f59f0c54d1d5ae3b0e4ece80b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMDowODozOFrOH_gSsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMDowODozOFrOH_gSsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM1MTQwOA==", "bodyText": "intended ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r536351408", "createdAt": "2020-12-04T20:08:38Z", "author": {"login": "KRVPerera"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -1,4 +1,3 @@\n-// Copyright (c) 2019 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5161bf28071612f59f0c54d1d5ae3b0e4ece80b"}, "originalPosition": 1}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b5161bf28071612f59f0c54d1d5ae3b0e4ece80b", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b5161bf28071612f59f0c54d1d5ae3b0e4ece80b", "committedDate": "2020-12-03T09:27:08Z", "message": "Fix issue in optional field access"}, "afterCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c9c473bb30b956a22a3821d93483b342f87fd7bc", "committedDate": "2020-12-07T15:11:57Z", "message": "Fix issue in optional field access"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTQzMjM2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#pullrequestreview-549543236", "createdAt": "2020-12-10T19:43:54Z", "commit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxOTo0Mzo1NFrOIDaUhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDoyNDoxN1rOIDbzdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ0Nzg3Ng==", "bodyText": "We don't need this change, right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r540447876", "createdAt": "2020-12-10T19:43:54Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2019 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ0ODM1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Address addr = {\n          \n          \n            \n                    street : \"Colombo\"\n          \n          \n            \n                };\n          \n          \n            \n                Address addr = {street: \"Colombo\"};", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r540448355", "createdAt": "2020-12-10T19:44:42Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -391,3 +391,40 @@ function testOptionalFieldAccessInUnionType() {\n     testOptionalFieldAccessInUnionType2();\n     testOptionalFieldAccessInUnionType3();\n }\n+\n+class Student {\n+    public Details? details = ();\n+\n+    function init(Details? details) {\n+        self.details = details;\n+    }\n+\n+    public function getDetails() returns Details? {\n+        return self.details;\n+    }\n+}\n+\n+public type Details record {\n+    Address addr?;\n+};\n+\n+public type Address record {\n+    string street;\n+};\n+\n+function testOptionalFieldAccessOnClassDef() {\n+    Address addr = {\n+        street : \"Colombo\"\n+    };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ0ODUzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Details details = {\n          \n          \n            \n                    addr : addr\n          \n          \n            \n                };\n          \n          \n            \n                Details details = {addr: addr};", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r540448535", "createdAt": "2020-12-10T19:44:59Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -391,3 +391,40 @@ function testOptionalFieldAccessInUnionType() {\n     testOptionalFieldAccessInUnionType2();\n     testOptionalFieldAccessInUnionType3();\n }\n+\n+class Student {\n+    public Details? details = ();\n+\n+    function init(Details? details) {\n+        self.details = details;\n+    }\n+\n+    public function getDetails() returns Details? {\n+        return self.details;\n+    }\n+}\n+\n+public type Details record {\n+    Address addr?;\n+};\n+\n+public type Address record {\n+    string street;\n+};\n+\n+function testOptionalFieldAccessOnClassDef() {\n+    Address addr = {\n+        street : \"Colombo\"\n+    };\n+\n+    Details details = {\n+        addr : addr\n+    };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ0ODcxOA==", "bodyText": "Shall we also add a test for when the field is not there?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r540448718", "createdAt": "2020-12-10T19:45:19Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -391,3 +391,40 @@ function testOptionalFieldAccessInUnionType() {\n     testOptionalFieldAccessInUnionType2();\n     testOptionalFieldAccessInUnionType3();\n }\n+\n+class Student {\n+    public Details? details = ();\n+\n+    function init(Details? details) {\n+        self.details = details;\n+    }\n+\n+    public function getDetails() returns Details? {\n+        return self.details;\n+    }\n+}\n+\n+public type Details record {\n+    Address addr?;\n+};\n+\n+public type Address record {\n+    string street;\n+};\n+\n+function testOptionalFieldAccessOnClassDef() {\n+    Address addr = {\n+        street : \"Colombo\"\n+    };\n+\n+    Details details = {\n+        addr : addr\n+    };\n+\n+    Student person = new Student(details);\n+    string? c1 = person.getDetails()?.addr?.street;\n+\n+    if (c1 != \"Colombo\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MjE4MA==", "bodyText": "While this change fixes the issue, wonder if we can remove the check for INVOCATION at https://github.com/ballerina-platform/ballerina-lang/blob/master/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java#L7770 altogether.\nIIRC, previously error/nil lifting access was allowed on invocations, but that is not allowed anymore. So we may be able to remove that condition. Shall we check if this is possible?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r540472180", "createdAt": "2020-12-10T20:24:17Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5290,7 +5290,7 @@ private BSymbol getLangLibMethod(BLangInvocation iExpr, BType bType) {\n     }\n \n     private void checkInvocationParamAndReturnType(BLangInvocation iExpr) {\n-        BType actualType = checkInvocationParam(iExpr);\n+        BType actualType = iExpr.originalType = checkInvocationParam(iExpr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c9c473bb30b956a22a3821d93483b342f87fd7bc", "committedDate": "2020-12-07T15:11:57Z", "message": "Fix issue in optional field access"}, "afterCommit": {"oid": "a3713ad6c2a4feddba242f1be30bdd89fc5361f4", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a3713ad6c2a4feddba242f1be30bdd89fc5361f4", "committedDate": "2020-12-12T15:43:17Z", "message": "Fix issue in optional field access"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5759ebbc86bdb96a0a81c515e4f84aa47e8cb35", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d5759ebbc86bdb96a0a81c515e4f84aa47e8cb35", "committedDate": "2020-12-21T05:42:52Z", "message": "Fix issue in optional field access"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a3713ad6c2a4feddba242f1be30bdd89fc5361f4", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a3713ad6c2a4feddba242f1be30bdd89fc5361f4", "committedDate": "2020-12-12T15:43:17Z", "message": "Fix issue in optional field access"}, "afterCommit": {"oid": "97e6973eaf38cd1de94d63bff34d2e3b3287a0fc", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/97e6973eaf38cd1de94d63bff34d2e3b3287a0fc", "committedDate": "2020-12-21T05:42:52Z", "message": "Add negative tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MTc0Mzc5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#pullrequestreview-556174379", "createdAt": "2020-12-21T07:24:05Z", "commit": {"oid": "97e6973eaf38cd1de94d63bff34d2e3b3287a0fc"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNzoyNDowNVrOIJOkYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNzoyNDoxNlrOIJOknw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU0Njc4Ng==", "bodyText": "Can merge these 2 lines.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546546786", "createdAt": "2020-12-21T07:24:05Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -7769,8 +7769,7 @@ private void handleSafeNavigation(BLangAccessExpression accessExpr, BType type,\n         // If the parent of current expr is the root, terminate\n         NodeKind kind = accessExpr.expr.getKind();\n         if (kind == NodeKind.FIELD_BASED_ACCESS_EXPR ||\n-                kind == NodeKind.INDEX_BASED_ACCESS_EXPR ||\n-                kind == NodeKind.INVOCATION) {\n+                kind == NodeKind.INDEX_BASED_ACCESS_EXPR) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97e6973eaf38cd1de94d63bff34d2e3b3287a0fc"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU0Njg0Nw==", "bodyText": "We don't need this change anymore, right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546546847", "createdAt": "2020-12-21T07:24:16Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5290,7 +5290,7 @@ private BSymbol getLangLibMethod(BLangInvocation iExpr, BType bType) {\n     }\n \n     private void checkInvocationParamAndReturnType(BLangInvocation iExpr) {\n-        BType actualType = checkInvocationParam(iExpr);\n+        BType actualType = iExpr.originalType = checkInvocationParam(iExpr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MjE4MA=="}, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5261dd4233dbe0531ad262d6ae98530448067ae", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a5261dd4233dbe0531ad262d6ae98530448067ae", "committedDate": "2020-12-21T08:31:34Z", "message": "Add negative tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97e6973eaf38cd1de94d63bff34d2e3b3287a0fc", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/97e6973eaf38cd1de94d63bff34d2e3b3287a0fc", "committedDate": "2020-12-21T05:42:52Z", "message": "Add negative tests"}, "afterCommit": {"oid": "a5261dd4233dbe0531ad262d6ae98530448067ae", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a5261dd4233dbe0531ad262d6ae98530448067ae", "committedDate": "2020-12-21T08:31:34Z", "message": "Add negative tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MzI2MDYx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#pullrequestreview-556326061", "createdAt": "2020-12-21T11:54:29Z", "commit": {"oid": "32eb20400abd1cfe990419cb8804b2d85d4f177a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMTo1NDoyOVrOIJVzRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMTo1NDo1OVrOIJV0Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY2NTI4NQ==", "bodyText": "Shall we rename this to\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            function testOptionalFieldAccessOnClassDef() {\n          \n          \n            \n            function testOptionalFieldAccessOnMethodCall() {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546665285", "createdAt": "2020-12-21T11:54:29Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -391,3 +391,43 @@ function testOptionalFieldAccessInUnionType() {\n     testOptionalFieldAccessInUnionType2();\n     testOptionalFieldAccessInUnionType3();\n }\n+\n+class Student {\n+    public Details? details = ();\n+\n+    function init(Details? details) {\n+        self.details = details;\n+    }\n+\n+    public function getDetails() returns Details? {\n+        return self.details;\n+    }\n+}\n+\n+public type Details record {\n+    Address addr?;\n+};\n+\n+public type Address record {\n+    string street;\n+};\n+\n+function testOptionalFieldAccessOnClassDef() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32eb20400abd1cfe990419cb8804b2d85d4f177a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY2NTQ3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testOptionalFieldAccessOnClassDef() {\n          \n          \n            \n                    BRunUtil.invoke(result, \"testOptionalFieldAccessOnClassDef\");\n          \n          \n            \n                public void testOptionalFieldAccessOnMethodCall() {\n          \n          \n            \n                    BRunUtil.invoke(result, \"testOptionalFieldAccessOnMethodCall\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546665478", "createdAt": "2020-12-21T11:54:59Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/access/OptionalFieldAccessTest.java", "diffHunk": "@@ -137,4 +139,9 @@ public void testOptionalFieldAccessOnInvocation(String function) {\n     public void testOptionalFieldAccessInUnionType() {\n         BRunUtil.invoke(result, \"testOptionalFieldAccessInUnionType\");\n     }\n+\n+    @Test\n+    public void testOptionalFieldAccessOnClassDef() {\n+        BRunUtil.invoke(result, \"testOptionalFieldAccessOnClassDef\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32eb20400abd1cfe990419cb8804b2d85d4f177a"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff67050c2cfb5cad2b4ea53c18a64ea034930288", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ff67050c2cfb5cad2b4ea53c18a64ea034930288", "committedDate": "2020-12-21T15:03:36Z", "message": "Add more tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32eb20400abd1cfe990419cb8804b2d85d4f177a", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/32eb20400abd1cfe990419cb8804b2d85d4f177a", "committedDate": "2020-12-21T10:47:23Z", "message": "Add more tests"}, "afterCommit": {"oid": "ff67050c2cfb5cad2b4ea53c18a64ea034930288", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ff67050c2cfb5cad2b4ea53c18a64ea034930288", "committedDate": "2020-12-21T15:03:36Z", "message": "Add more tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NDg3MDkz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#pullrequestreview-556487093", "createdAt": "2020-12-21T16:03:07Z", "commit": {"oid": "ff67050c2cfb5cad2b4ea53c18a64ea034930288"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4723, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}