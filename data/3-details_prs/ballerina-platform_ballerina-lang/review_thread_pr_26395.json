{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MjUxOTk3", "number": 26395, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNzowMTowN1rOEvK8gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNzowMTowN1rOEvK8gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3ODk3ODU5OnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BErrorCreator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNzowMTowN1rOHkAQ1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMToyODoyMFrOHkJ1rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUxNTA5Mg==", "bodyText": "This way we're creating two maps, first the mutable one and then the immutable one.\nInstead, shall we use https://github.com/ballerina-platform/ballerina-lang/blob/master/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/MapValueImpl.java#L101?\nWe can use https://github.com/ballerina-platform/ballerina-lang/blob/master/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/ReadOnlyUtils.java#L72 to get the immutable type and then pass the detail as a KeyValueEntry https://github.com/ballerina-platform/ballerina-lang/blob/master/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/MappingInitialValueEntry.java#L39.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26395#discussion_r507515092", "createdAt": "2020-10-19T07:01:07Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BErrorCreator.java", "diffHunk": "@@ -60,7 +62,12 @@ public static BError createError(BString message, BString details) {\n         if (details != null) {\n             detailMap.put(ERROR_MESSAGE_FIELD, details);\n         }\n-        return new ErrorValue(message, detailMap);\n+        return new ErrorValue(message, readonlyCloneDetailMap(detailMap));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "048b0c39717c08d9f91e3e6a048a2d007de07f92"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUxNjU0MA==", "bodyText": "The other helper methods here should also be updated, right? They don't seem to be making the error detail immutable?\nIMO, we should also check on the possibility of making org.ballerinalang.jvm.types.BTypes#typeErrorDetail itself be immutable (i.e., setting the readonly flag). @rdhananjaya, WDYT?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26395#discussion_r507516540", "createdAt": "2020-10-19T07:04:38Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BErrorCreator.java", "diffHunk": "@@ -60,7 +62,12 @@ public static BError createError(BString message, BString details) {\n         if (details != null) {\n             detailMap.put(ERROR_MESSAGE_FIELD, details);\n         }\n-        return new ErrorValue(message, detailMap);\n+        return new ErrorValue(message, readonlyCloneDetailMap(detailMap));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUxNTA5Mg=="}, "originalCommit": {"oid": "048b0c39717c08d9f91e3e6a048a2d007de07f92"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY3MTk4Mw==", "bodyText": "Agreed org.ballerinalang.jvm.types.BTypes#typeErrorDetail should also be the readonly varient.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26395#discussion_r507671983", "createdAt": "2020-10-19T11:28:20Z", "author": {"login": "rdhananjaya"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BErrorCreator.java", "diffHunk": "@@ -60,7 +62,12 @@ public static BError createError(BString message, BString details) {\n         if (details != null) {\n             detailMap.put(ERROR_MESSAGE_FIELD, details);\n         }\n-        return new ErrorValue(message, detailMap);\n+        return new ErrorValue(message, readonlyCloneDetailMap(detailMap));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUxNTA5Mg=="}, "originalCommit": {"oid": "048b0c39717c08d9f91e3e6a048a2d007de07f92"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4773, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}