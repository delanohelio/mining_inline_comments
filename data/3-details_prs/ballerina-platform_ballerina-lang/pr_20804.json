{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5MDQyMDMx", "number": 20804, "title": "Return error for already used http:Responses", "bodyText": "Purpose\n$Subject\nFixes #19845\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-01-30T12:16:38Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804", "merged": true, "mergeCommit": {"oid": "b0ba9b41491416c1d20ad25d773bc32e8d61507e"}, "closed": true, "closedAt": "2020-02-11T08:00:33Z", "author": {"login": "kalaiyarasiganeshalingam"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_c3HXAH2gAyMzY5MDQyMDMxOjI3OWMzNWZkZmJjNzVmYjRiMzI3MDc0ZmNiYzRmMTEyMzM5MDUzMDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDL_6MgFqTM1NjQ0MDE2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "279c35fdfbc75fb4b327074fcbc4f11233905309", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/279c35fdfbc75fb4b327074fcbc4f11233905309", "committedDate": "2020-01-30T16:09:42Z", "message": "Fix bug\n\nMinor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f54844221207308cadde865e72823b899d71b1f7", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f54844221207308cadde865e72823b899d71b1f7", "committedDate": "2020-02-06T09:52:59Z", "message": "Fix the build failed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MzU0NTMz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#pullrequestreview-354354533", "createdAt": "2020-02-06T10:44:50Z", "commit": {"oid": "f54844221207308cadde865e72823b899d71b1f7"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDo0NDo1MVrOFmWsSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDo1Mjo1MVrOFmW7xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc2MTk5NQ==", "bodyText": "already processed wording does not specifically say that the response is reused. Shall we rephrase it?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String errorMessage = \"Couldn't complete the outbound response which has been already processed.\";\n          \n          \n            \n                        String errorMessage = \"Couldn't complete the respond operation as the response has been already used.\";", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#discussion_r375761995", "createdAt": "2020-02-06T10:44:51Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -61,8 +62,18 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n         HttpCarbonMessage inboundRequestMsg = HttpUtil.getCarbonMsg(connectionObj, null);\n         Strand strand = Scheduler.getStrand();\n         DataContext dataContext = new DataContext(strand, new NonBlockingCallback(strand), inboundRequestMsg);\n-        HttpCarbonMessage outboundResponseMsg = HttpUtil\n-                .getCarbonMsg(outboundResponseObj, HttpUtil.createHttpCarbonMessage(false));\n+        HttpCarbonMessage outboundResponseMsg;\n+        if (outboundResponseObj.get(RESPONSE_CACHE_CONTROL_FIELD) == null && outboundResponseObj.\n+                getNativeData(HttpConstants.IS_RESPONSE_PROCESSED) != null) {\n+            String errorMessage = \"Couldn't complete the outbound response which has been already processed.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54844221207308cadde865e72823b899d71b1f7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc2MjkxNA==", "bodyText": "Shall we move this conditional check to a smaller method which has a descriptive method name? So that code will be readable", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#discussion_r375762914", "createdAt": "2020-02-06T10:46:39Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -61,8 +62,18 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n         HttpCarbonMessage inboundRequestMsg = HttpUtil.getCarbonMsg(connectionObj, null);\n         Strand strand = Scheduler.getStrand();\n         DataContext dataContext = new DataContext(strand, new NonBlockingCallback(strand), inboundRequestMsg);\n-        HttpCarbonMessage outboundResponseMsg = HttpUtil\n-                .getCarbonMsg(outboundResponseObj, HttpUtil.createHttpCarbonMessage(false));\n+        HttpCarbonMessage outboundResponseMsg;\n+        if (outboundResponseObj.get(RESPONSE_CACHE_CONTROL_FIELD) == null && outboundResponseObj.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54844221207308cadde865e72823b899d71b1f7"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc2MzYxNA==", "bodyText": "Shall we remove this object declaration?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#discussion_r375763614", "createdAt": "2020-02-06T10:48:07Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -61,8 +62,18 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n         HttpCarbonMessage inboundRequestMsg = HttpUtil.getCarbonMsg(connectionObj, null);\n         Strand strand = Scheduler.getStrand();\n         DataContext dataContext = new DataContext(strand, new NonBlockingCallback(strand), inboundRequestMsg);\n-        HttpCarbonMessage outboundResponseMsg = HttpUtil\n-                .getCarbonMsg(outboundResponseObj, HttpUtil.createHttpCarbonMessage(false));\n+        HttpCarbonMessage outboundResponseMsg;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54844221207308cadde865e72823b899d71b1f7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc2Mzc3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    outboundResponseMsg = HttpUtil.getCarbonMsg(outboundResponseObj, HttpUtil.\n          \n          \n            \n                    HttpCarbonMessage outboundResponseMsg = HttpUtil.getCarbonMsg(outboundResponseObj, HttpUtil.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#discussion_r375763774", "createdAt": "2020-02-06T10:48:20Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -61,8 +62,18 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n         HttpCarbonMessage inboundRequestMsg = HttpUtil.getCarbonMsg(connectionObj, null);\n         Strand strand = Scheduler.getStrand();\n         DataContext dataContext = new DataContext(strand, new NonBlockingCallback(strand), inboundRequestMsg);\n-        HttpCarbonMessage outboundResponseMsg = HttpUtil\n-                .getCarbonMsg(outboundResponseObj, HttpUtil.createHttpCarbonMessage(false));\n+        HttpCarbonMessage outboundResponseMsg;\n+        if (outboundResponseObj.get(RESPONSE_CACHE_CONTROL_FIELD) == null && outboundResponseObj.\n+                getNativeData(HttpConstants.IS_RESPONSE_PROCESSED) != null) {\n+            String errorMessage = \"Couldn't complete the outbound response which has been already processed.\";\n+            HttpUtil.sendOutboundResponse(inboundRequestMsg, HttpUtil.createErrorMessage(errorMessage, 500));\n+            unBlockStrand(strand);\n+            log.debug(errorMessage);\n+            return HttpUtil.createHttpError(errorMessage, HttpErrorType.GENERIC_LISTENER_ERROR);\n+        }\n+        outboundResponseObj.addNativeData(HttpConstants.IS_RESPONSE_PROCESSED, true);\n+        outboundResponseMsg = HttpUtil.getCarbonMsg(outboundResponseObj, HttpUtil.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54844221207308cadde865e72823b899d71b1f7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc2NTk1OQ==", "bodyText": "Shall we rephrase this as well?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String IS_RESPONSE_PROCESSED = \"isResponseProcessed\";\n          \n          \n            \n                public static final String IS_DIRTY_RESPONSE = \"isDirtyProcessed\";", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#discussion_r375765959", "createdAt": "2020-02-06T10:52:51Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/HttpConstants.java", "diffHunk": "@@ -138,6 +138,7 @@\n     public static final String ANNOTATION_METHOD_OPTIONS = HTTP_METHOD_OPTIONS;\n     public static final String ANN_NAME_PARAM_ORDER_CONFIG = \"ParamOrderConfig\";\n     public static final String ANN_FIELD_PATH_PARAM_ORDER = \"pathParamOrder\";\n+    public static final String IS_RESPONSE_PROCESSED = \"isResponseProcessed\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54844221207308cadde865e72823b899d71b1f7"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "432e71d87baf6831e22c40e21ff02ce4167674ba", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/432e71d87baf6831e22c40e21ff02ce4167674ba", "committedDate": "2020-02-06T16:21:36Z", "message": "Fix suggested changes\n\nMake changes in the test files\n\nChange the assert value"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NzA5Njkw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#pullrequestreview-355709690", "createdAt": "2020-02-10T06:21:45Z", "commit": {"oid": "432e71d87baf6831e22c40e21ff02ce4167674ba"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNjoyMTo0NVrOFnbKNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNjoyOTo0MlrOFnbQkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4Mzc2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String IS_DIRTY_RESPONSE = \"isDirtyProcessed\";\n          \n          \n            \n                public static final String DIRTY_RESPONSE = \"dirtyResponse\";", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#discussion_r376883764", "createdAt": "2020-02-10T06:21:45Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/HttpConstants.java", "diffHunk": "@@ -138,6 +138,7 @@\n     public static final String ANNOTATION_METHOD_OPTIONS = HTTP_METHOD_OPTIONS;\n     public static final String ANN_NAME_PARAM_ORDER_CONFIG = \"ParamOrderConfig\";\n     public static final String ANN_FIELD_PATH_PARAM_ORDER = \"pathParamOrder\";\n+    public static final String IS_DIRTY_RESPONSE = \"isDirtyProcessed\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "432e71d87baf6831e22c40e21ff02ce4167674ba"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4NTM5NQ==", "bodyText": "Shall we add another test case to check the returned error?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#discussion_r376885395", "createdAt": "2020-02-10T06:29:42Z", "author": {"login": "chamil321"}, "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/sample/HTTPCallerActionsTestCase.java", "diffHunk": "@@ -71,4 +71,14 @@ public void testNonBlockingRedirectAction() throws IOException {\n     public void testExecutionAfterRedirectAction() throws BallerinaTestException {\n         postRedirectLogLeecher.waitForText(LOG_LEECHER_TIMEOUT);\n     }\n+\n+    @Test\n+    public void testDirtyResponse() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "432e71d87baf6831e22c40e21ff02ce4167674ba"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "669e224b13f2e3faf940d6754d2337c41c2c04ce", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/669e224b13f2e3faf940d6754d2337c41c2c04ce", "committedDate": "2020-02-11T06:24:42Z", "message": "Fix suggested comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDQwMTYy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#pullrequestreview-356440162", "createdAt": "2020-02-11T06:46:37Z", "commit": {"oid": "669e224b13f2e3faf940d6754d2337c41c2c04ce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4281, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}