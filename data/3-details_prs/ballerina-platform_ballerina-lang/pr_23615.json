{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1MDY3MjUw", "number": 23615, "title": "Add transformer method for Implicit Anonymous Function Expression Node.", "bodyText": "Purpose\n$subject\nFixes #23614\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-05-29T12:12:30Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23615", "merged": true, "mergeCommit": {"oid": "1a2e41330483cef56a14c7b6d982b55c24655199"}, "closed": true, "closedAt": "2020-06-01T04:06:01Z", "author": {"login": "rdulmina"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcl7YMHAH2gAyNDI1MDY3MjUwOjkyZjJmZGM1ZGNkOGQ4NzY5ODM2YzU4MDIwMTAyMGQzYTBkZDQ2Zjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmZmvogFqTQyMTQyNTY3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "92f2fdc5dcd8d8769836c580201020d3a0dd46f9", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/92f2fdc5dcd8d8769836c580201020d3a0dd46f9", "committedDate": "2020-05-29T05:12:06Z", "message": "Transform function for implicit anon function expression."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd320e8a4738df1a8d0b88b609217824dc99e66f", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fd320e8a4738df1a8d0b88b609217824dc99e66f", "committedDate": "2020-05-29T06:17:29Z", "message": "Modified transformer method."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c5526c8f9a83445b862e6fcd8b31cf07e0fd165", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1c5526c8f9a83445b862e6fcd8b31cf07e0fd165", "committedDate": "2020-05-29T09:13:57Z", "message": "Changed transformer method."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2686b6e25f065c3edb70dea6280ff8a0eebd24e0", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2686b6e25f065c3edb70dea6280ff8a0eebd24e0", "committedDate": "2020-05-29T11:46:10Z", "message": "Updated transformer method."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cd00c0dcac25da770108347f3aeb8cadb098751", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9cd00c0dcac25da770108347f3aeb8cadb098751", "committedDate": "2020-05-29T12:04:01Z", "message": "Removed unused imports."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwOTA1MjYy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23615#pullrequestreview-420905262", "createdAt": "2020-05-29T12:28:02Z", "commit": {"oid": "2686b6e25f065c3edb70dea6280ff8a0eebd24e0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjoyODowMlrOGcaneA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjoyODowMlrOGcaneA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ0OTQwMA==", "bodyText": "extra space after = sign.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23615#discussion_r432449400", "createdAt": "2020-05-29T12:28:02Z", "author": {"login": "KavinduZoysa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -1429,6 +1434,42 @@ public BLangNode transform(SyncSendActionNode syncSendActionNode) {\n         return workerSendExpr;\n     }\n \n+    @Override\n+    public BLangNode transform(ImplicitAnonymousFunctionExpressionNode implicitAnonymousFunctionExpressionNode) {\n+        BLangArrowFunction arrowFunction = (BLangArrowFunction) TreeBuilder.createArrowFunctionNode();\n+        arrowFunction.pos = getPosition(implicitAnonymousFunctionExpressionNode);\n+        arrowFunction.functionName = TreeBuilder.createIdentifierNode();\n+        //TODO initialize other attributes\n+        //arrowFunction.funcType;\n+        //arrowFunction.function;\n+\n+        // Set Parameters\n+        Node param = implicitAnonymousFunctionExpressionNode.params();\n+        if (param.kind() == SyntaxKind.INFER_PARAM_LIST) {\n+            try {\n+                ImplicitAnonymousFunctionParameters paramsNode = (ImplicitAnonymousFunctionParameters) param;\n+                SeparatedNodeList<SimpleNameReferenceNode> paramList = paramsNode.parameters();\n+\n+                for (SimpleNameReferenceNode child : paramList) {\n+                    BLangUserDefinedType userDefinedType = (BLangUserDefinedType) child.apply(this);\n+                    BLangSimpleVariable parameter = (BLangSimpleVariable) TreeBuilder.createSimpleVariableNode();\n+                    parameter.name = userDefinedType.typeName;\n+                    arrowFunction.params.add(parameter);\n+                }\n+            } catch (Exception e) {\n+                System.out.println(\"Empty parameter list\");\n+            }\n+        } else {\n+            BLangUserDefinedType userDefinedType = (BLangUserDefinedType) param.apply(this);\n+            BLangSimpleVariable parameter = (BLangSimpleVariable) TreeBuilder.createSimpleVariableNode();\n+            parameter.name = userDefinedType.typeName;\n+            arrowFunction.params.add(parameter);\n+        }\n+        arrowFunction.body = new BLangExprFunctionBody();\n+        arrowFunction.body.expr =  createExpression(implicitAnonymousFunctionExpressionNode.expression());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2686b6e25f065c3edb70dea6280ff8a0eebd24e0"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwOTE0MDUw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23615#pullrequestreview-420914050", "createdAt": "2020-05-29T12:41:18Z", "commit": {"oid": "2686b6e25f065c3edb70dea6280ff8a0eebd24e0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjo0MToxOFrOGcbA3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjo0MToxOFrOGcbA3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1NTkwMA==", "bodyText": "above will fail the style guide.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23615#discussion_r432455900", "createdAt": "2020-05-29T12:41:18Z", "author": {"login": "manuranga"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -1429,6 +1434,42 @@ public BLangNode transform(SyncSendActionNode syncSendActionNode) {\n         return workerSendExpr;\n     }\n \n+    @Override\n+    public BLangNode transform(ImplicitAnonymousFunctionExpressionNode implicitAnonymousFunctionExpressionNode) {\n+        BLangArrowFunction arrowFunction = (BLangArrowFunction) TreeBuilder.createArrowFunctionNode();\n+        arrowFunction.pos = getPosition(implicitAnonymousFunctionExpressionNode);\n+        arrowFunction.functionName = TreeBuilder.createIdentifierNode();\n+        //TODO initialize other attributes\n+        //arrowFunction.funcType;\n+        //arrowFunction.function;\n+\n+        // Set Parameters\n+        Node param = implicitAnonymousFunctionExpressionNode.params();\n+        if (param.kind() == SyntaxKind.INFER_PARAM_LIST) {\n+            try {\n+                ImplicitAnonymousFunctionParameters paramsNode = (ImplicitAnonymousFunctionParameters) param;\n+                SeparatedNodeList<SimpleNameReferenceNode> paramList = paramsNode.parameters();\n+\n+                for (SimpleNameReferenceNode child : paramList) {\n+                    BLangUserDefinedType userDefinedType = (BLangUserDefinedType) child.apply(this);\n+                    BLangSimpleVariable parameter = (BLangSimpleVariable) TreeBuilder.createSimpleVariableNode();\n+                    parameter.name = userDefinedType.typeName;\n+                    arrowFunction.params.add(parameter);\n+                }\n+            } catch (Exception e) {\n+                System.out.println(\"Empty parameter list\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2686b6e25f065c3edb70dea6280ff8a0eebd24e0"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwOTE0Mzc2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23615#pullrequestreview-420914376", "createdAt": "2020-05-29T12:41:46Z", "commit": {"oid": "2686b6e25f065c3edb70dea6280ff8a0eebd24e0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjo0MTo0NlrOGcbBsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjo0MTo0NlrOGcbBsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1NjExNQ==", "bodyText": "What is the Exception you are trying to catch? we should fix it properly form the parser side first.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23615#discussion_r432456115", "createdAt": "2020-05-29T12:41:46Z", "author": {"login": "manuranga"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -1429,6 +1434,42 @@ public BLangNode transform(SyncSendActionNode syncSendActionNode) {\n         return workerSendExpr;\n     }\n \n+    @Override\n+    public BLangNode transform(ImplicitAnonymousFunctionExpressionNode implicitAnonymousFunctionExpressionNode) {\n+        BLangArrowFunction arrowFunction = (BLangArrowFunction) TreeBuilder.createArrowFunctionNode();\n+        arrowFunction.pos = getPosition(implicitAnonymousFunctionExpressionNode);\n+        arrowFunction.functionName = TreeBuilder.createIdentifierNode();\n+        //TODO initialize other attributes\n+        //arrowFunction.funcType;\n+        //arrowFunction.function;\n+\n+        // Set Parameters\n+        Node param = implicitAnonymousFunctionExpressionNode.params();\n+        if (param.kind() == SyntaxKind.INFER_PARAM_LIST) {\n+            try {\n+                ImplicitAnonymousFunctionParameters paramsNode = (ImplicitAnonymousFunctionParameters) param;\n+                SeparatedNodeList<SimpleNameReferenceNode> paramList = paramsNode.parameters();\n+\n+                for (SimpleNameReferenceNode child : paramList) {\n+                    BLangUserDefinedType userDefinedType = (BLangUserDefinedType) child.apply(this);\n+                    BLangSimpleVariable parameter = (BLangSimpleVariable) TreeBuilder.createSimpleVariableNode();\n+                    parameter.name = userDefinedType.typeName;\n+                    arrowFunction.params.add(parameter);\n+                }\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2686b6e25f065c3edb70dea6280ff8a0eebd24e0"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4740c5b3852dcdc797016f90128954bb9eda430a", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4740c5b3852dcdc797016f90128954bb9eda430a", "committedDate": "2020-05-29T12:51:54Z", "message": "Removed try catch in transformer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f34e2287a81048010e552ca9f862e16b6429b47", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3f34e2287a81048010e552ca9f862e16b6429b47", "committedDate": "2020-05-29T15:33:34Z", "message": "Remove extra space after =."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDc2MzAw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23615#pullrequestreview-421076300", "createdAt": "2020-05-29T15:50:13Z", "commit": {"oid": "3f34e2287a81048010e552ca9f862e16b6429b47"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ce52d99aa19781533aafe41f2d1bcca2c9de0b0", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3ce52d99aa19781533aafe41f2d1bcca2c9de0b0", "committedDate": "2020-05-29T16:06:53Z", "message": "Fix check style rule violation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e12171b7799673a80be8f2a62eb870b3ebae51c1", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e12171b7799673a80be8f2a62eb870b3ebae51c1", "committedDate": "2020-05-29T17:10:49Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into implicit-anon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0c26282d5fb61d6fc4e446a0304ab68f2db31fc", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d0c26282d5fb61d6fc4e446a0304ab68f2db31fc", "committedDate": "2020-05-30T07:58:36Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into implicit-anon\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c139b5b316a66ffaa590aac5418faec583190b8f", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c139b5b316a66ffaa590aac5418faec583190b8f", "committedDate": "2020-05-30T09:34:47Z", "message": "Resolve conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNDA2MTkx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23615#pullrequestreview-421406191", "createdAt": "2020-05-30T13:42:58Z", "commit": {"oid": "c139b5b316a66ffaa590aac5418faec583190b8f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNDI1Njcy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23615#pullrequestreview-421425672", "createdAt": "2020-05-30T16:25:09Z", "commit": {"oid": "c139b5b316a66ffaa590aac5418faec583190b8f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4474, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}