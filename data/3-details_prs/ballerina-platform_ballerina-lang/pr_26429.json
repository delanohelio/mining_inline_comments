{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NzIzMjc2", "number": 26429, "title": "Improve Error Recovery and Tests of Toml Parser", "bodyText": "Purpose\n\nThis PR contains several improvements to the error handling and recovery mechanism of the Toml Parser.\n\n\nEnsures Key Value pair, Table definition, Array of table definition should be in a single line.\nSupports Missing open bracket recovery for tables. (By peaking further before comitting to a key value pair when parsing)\nImproves error handling support for key list, arrays and other syntax.\n\n\nSyntax Tree Changes\n\n\nNew Line is not treated as trivia. Its now treated as seperate token.\nIntroduces InitialTrivia Node to store leading trivia of the first top level node.\nNewLine List is introduced to KeyValue pairs, Tables and Table of Arrays.\nAdd sign token for numerical node. Resolves #26290\n\n\nIntroduces JSON based tree test strucure for syntax tree. Resolves #26291\nRemoves Unnecessary errors and messages. Resolves #26289\nAddress Pending Review Comments from #26096\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-10-20T11:43:43Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429", "merged": true, "mergeCommit": {"oid": "d27a1afe5476485a2a67aae9bb60703b878dc7ee"}, "closed": true, "closedAt": "2020-11-17T04:27:58Z", "author": {"login": "xlight05"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYee2cAFqTUyMTM0NjcxNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABddRzx9gFqTUzMjAxMjcyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMzQ2NzE1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#pullrequestreview-521346715", "createdAt": "2020-11-02T05:55:22Z", "commit": {"oid": "3fa187aefb9546f01b633d222be1fd6c6716e64d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNTo1NToyM1rOHr3EgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNjoyMDoxNFrOHr3dzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1MzA4OQ==", "bodyText": "Why do we need this method?\nSeems this method and leadingTriviaList is not used anywhere..", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r515753089", "createdAt": "2020-11-02T05:55:23Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/java/io/ballerina/toml/internal/parser/AbstractLexer.java", "diffHunk": "@@ -117,4 +119,10 @@ protected STToken cloneWithDiagnostics(STToken toClone) {\n     protected void reportLexerError(DiagnosticCode diagnosticCode, Object... args) {\n         diagnostics.add(SyntaxErrors.createDiagnostic(diagnosticCode, args));\n     }\n+\n+    protected STNode getLeadingTrivia() {\n+        STNode trivia = STNodeFactory.createNodeList(this.leadingTriviaList);\n+        this.leadingTriviaList = new ArrayList<>(INITIAL_TRIVIA_CAPACITY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa187aefb9546f01b633d222be1fd6c6716e64d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1MzM4OQ==", "bodyText": "Do we need this change?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r515753389", "createdAt": "2020-11-02T05:56:38Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/java/io/ballerina/toml/internal/parser/AbstractParser.java", "diffHunk": "@@ -103,20 +102,20 @@ private STToken consumeWithInvalidNodes() {\n         return token;\n     }\n \n-    protected Solution recover(STToken token, ParserRuleContext currentCtx, Object... args) {\n-        Solution sol = this.errorHandler.recover(currentCtx, token, args);\n+    protected AbstractParserErrorHandler.Solution recover(STToken token, ParserRuleContext currentCtx, Object... args) {\n+        AbstractParserErrorHandler.Solution sol = this.errorHandler.recover(currentCtx, token, args);\n         // If the action is to remove, then re-parse the same rule.\n-        if (sol.action == Action.REMOVE) {\n+        if (sol.action == AbstractParserErrorHandler.Action.REMOVE) {\n             addInvalidTokenToNextToken(sol.removedToken);\n-        } else if (sol.action == Action.INSERT) {\n+        } else if (sol.action == AbstractParserErrorHandler.Action.INSERT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa187aefb9546f01b633d222be1fd6c6716e64d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1MzY5Ng==", "bodyText": "Let's remove these commented out code, if they are no longer needed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r515753696", "createdAt": "2020-11-02T05:57:56Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/java/io/ballerina/toml/internal/parser/ParserRuleContext.java", "diffHunk": "@@ -44,50 +51,35 @@\n     ARRAY_TABLE_FIRST_END(\"]\"),\n     ARRAY_TABLE_SECOND_END(\"]\"),\n \n-//    STRING_LIST(\"string-list\"),\n-//    STRING_START(\"string-start\"),\n-//    STRING_LIST_START(\"(\"),\n-//    STRING_LIST_END(\")\"),\n-//    STRING_START_OR_STRING_LIST_END(\"string-start-or-string-list-end\"),\n-//    STRING_END(\"arg-end\"),\n-\n-    KEY_ENTRY(\"key-entry\"),\n-    KEYS_END(\"keys-entry\"),\n-\n-\n     // Syntax tokens\n     ASSIGN_OP(\"=\"),\n     COLON(\":\"),\n     COMMA(\",\"),\n     DOT(\".\"),\n-    OPEN_BRACKET(\"[\"),\n-    CLOSE_BRACKET(\"]\"),\n-    PLUS_TOKEN(\"+\"),\n-    MINUS_TOKEN(\"-\"),\n+    SIGN_TOKEN(\"sign-token\"),\n \n-    IDENTIFIER(\"identifier\"),\n+    IDENTIFIER_LITERAL(\"identifier\"),\n \n     // Expressions\n     BASIC_LITERAL(\"basic-literal\"),\n     DECIMAL_INTEGER_LITERAL(\"decimal-int-literal\"),\n-    STRING_LITERAL(\"string-literal\"),\n-    HEX_INTEGER_LITERAL(\"hex-integer-literal\"),\n+    STRING_CONTENT(\"string-content\"),\n     NIL_LITERAL(\"nil-literal\"),\n     DECIMAL_FLOATING_POINT_LITERAL(\"decimal-floating-point-literal\"),\n-    HEX_FLOATING_POINT_LITERAL(\"hex-floating-point-literal\"),\n+    BOOLEAN_LITERAL(\"boolean-literal\"),\n+    NUMERICAL_LITERAL(\"numerical-literal\"),\n \n     //TOML\n-    KEY(\"key-toml\"),\n-    KEY_LIST(\"key-list\"),\n+//    KEY(\"key-toml\"),\n     VALUE(\"value-toml\"),\n     START_SQUARE_BRACES(\"start-square-braces\"),\n     END_SQUARE_BRACES(\"end-square-braces\"),\n     KEY_VALUE_PAIR (\"key-value-pair\"),\n     TOML_TABLE(\"toml-table\"),\n     TOML_TABLE_ARRAY(\"toml-table-array\"),\n-    DOUBLE_OPEN_BRACKET(\"[[\"),\n-    DOUBLE_CLOSE_BRACKET(\"]]\"),\n-    TOML_ARRAY(\"toml-array-value\"),\n+//    TABLE_OF_ARRAYS_START(\"[[\"),\n+//    TABLE_OF_ARRAYS_CLOSE(\"]]\"),\n+//    TOML_ARRAY(\"toml-array-value\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa187aefb9546f01b633d222be1fd6c6716e64d"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1NDY2OA==", "bodyText": "Why do we need to special case first token?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r515754668", "createdAt": "2020-11-02T06:01:41Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/java/io/ballerina/toml/internal/parser/TomlLexer.java", "diffHunk": "@@ -330,9 +341,11 @@ private void processSyntaxTrivia(List<STNode> triviaList, boolean isLeading) {\n                     break;\n                 case LexerTerminals.CARRIAGE_RETURN:\n                 case LexerTerminals.NEWLINE:\n-                    triviaList.add(processEndOfLine());\n-                    if (isLeading) {\n-                        break;\n+                    if (isInitialTrivia) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa187aefb9546f01b633d222be1fd6c6716e64d"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1NTI3Mw==", "bodyText": "Newlines should be part of minutiae", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r515755273", "createdAt": "2020-11-02T06:04:18Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/resources/syntax_tree_descriptor.json", "diffHunk": "@@ -1,191 +1,211 @@\n {\n-  \"root\": \"Node\",\n-  \"type\": \"abstract\",\n-  \"attributes\": [\n-    {\n-      \"name\": \"kind\",\n-      \"type\": \"SyntaxKind\"\n-    },\n-    {\n-      \"name\": \"width\",\n-      \"type\": \"int\"\n-    }\n-  ],\n-  \"nodes\": [\n-    {\n-      \"name\": \"DocumentNode\",\n-      \"base\": \"Node\",\n-      \"kind\": \"MODULE_PART\",\n-      \"attributes\": [\n+    \"root\": \"Node\",\n+    \"type\": \"abstract\",\n+    \"attributes\": [\n         {\n-          \"name\": \"members\",\n-          \"type\": \"DocumentMemberDeclarationNode\",\n-          \"occurrences\": \"MULTIPLE\"\n+            \"name\": \"kind\",\n+            \"type\": \"SyntaxKind\"\n         },\n         {\n-          \"name\": \"eofToken\",\n-          \"type\": \"Token\"\n+            \"name\": \"width\",\n+            \"type\": \"int\"\n         }\n-      ]\n-    },\n-    {\n-      \"name\": \"DocumentMemberDeclarationNode\",\n-      \"base\": \"Node\",\n-      \"isAbstract\": true\n-    },\n-    {\n-      \"name\": \"ValueNode\",\n-      \"base\": \"Node\",\n-      \"isAbstract\": true\n-    },\n-    {\n-      \"name\": \"TableNode\",\n-      \"base\": \"DocumentMemberDeclarationNode\",\n-      \"kind\": \"TABLE\",\n-      \"attributes\": [\n-        {\n-          \"name\": \"openBracket\",\n-          \"type\": \"Token\"\n-        },\n-        {\n-          \"name\": \"identifier\",\n-          \"type\": \"ValueNode\",\n-          \"occurrences\": \"MULTIPLE_SEPARATED\"\n+    ],\n+    \"nodes\": [\n+        {\n+            \"name\": \"DocumentNode\",\n+            \"base\": \"Node\",\n+            \"kind\": \"MODULE_PART\",\n+            \"attributes\": [\n+                {\n+                    \"name\": \"members\",\n+                    \"type\": \"DocumentMemberDeclarationNode\",\n+                    \"occurrences\": \"MULTIPLE\"\n+                },\n+                {\n+                    \"name\": \"eofToken\",\n+                    \"type\": \"Token\"\n+                }\n+            ]\n         },\n         {\n-          \"name\": \"closeBracket\",\n-          \"type\": \"Token\"\n-        },\n-        {\n-          \"name\": \"fields\",\n-          \"type\": \"KeyValueNode\",\n-          \"occurrences\": \"MULTIPLE\"\n-        }\n-      ]\n-    },\n-    {\n-      \"name\": \"TableArrayNode\",\n-      \"base\": \"DocumentMemberDeclarationNode\",\n-      \"kind\": \"TABLE_ARRAY\",\n-      \"attributes\": [\n-        {\n-          \"name\": \"firstOpenBracket\",\n-          \"type\": \"Token\"\n+            \"name\": \"DocumentMemberDeclarationNode\",\n+            \"base\": \"Node\",\n+            \"isAbstract\": true\n         },\n         {\n-          \"name\": \"secondOpenBracket\",\n-          \"type\": \"Token\"\n+            \"name\": \"ValueNode\",\n+            \"base\": \"Node\",\n+            \"isAbstract\": true\n         },\n         {\n-          \"name\": \"identifier\",\n-          \"type\": \"ValueNode\",\n-          \"occurrences\": \"MULTIPLE_SEPARATED\"\n+            \"name\": \"TableNode\",\n+            \"base\": \"DocumentMemberDeclarationNode\",\n+            \"kind\": \"TABLE\",\n+            \"attributes\": [\n+                {\n+                    \"name\": \"openBracket\",\n+                    \"type\": \"Token\"\n+                },\n+                {\n+                    \"name\": \"identifier\",\n+                    \"type\": \"ValueNode\",\n+                    \"occurrences\": \"MULTIPLE_SEPARATED\"\n+                },\n+                {\n+                    \"name\": \"closeBracket\",\n+                    \"type\": \"Token\"\n+                },\n+                {\n+                    \"name\": \"fields\",\n+                    \"type\": \"KeyValueNode\",\n+                    \"occurrences\": \"MULTIPLE\"\n+                },\n+                {\n+                    \"name\": \"newLines\",\n+                    \"type\": \"Token\",\n+                    \"occurrences\": \"MULTIPLE\"\n+                }\n+            ]\n         },\n         {\n-          \"name\": \"firstCloseBracket\",\n-          \"type\": \"Token\"\n+            \"name\": \"TableArrayNode\",\n+            \"base\": \"DocumentMemberDeclarationNode\",\n+            \"kind\": \"TABLE_ARRAY\",\n+            \"attributes\": [\n+                {\n+                    \"name\": \"firstOpenBracket\",\n+                    \"type\": \"Token\"\n+                },\n+                {\n+                    \"name\": \"secondOpenBracket\",\n+                    \"type\": \"Token\"\n+                },\n+                {\n+                    \"name\": \"identifier\",\n+                    \"type\": \"ValueNode\",\n+                    \"occurrences\": \"MULTIPLE_SEPARATED\"\n+                },\n+                {\n+                    \"name\": \"firstCloseBracket\",\n+                    \"type\": \"Token\"\n+                },\n+                {\n+                    \"name\": \"secondCloseBracket\",\n+                    \"type\": \"Token\"\n+                },\n+                {\n+                    \"name\": \"fields\",\n+                    \"type\": \"KeyValueNode\",\n+                    \"occurrences\": \"MULTIPLE\"\n+                },\n+                {\n+                    \"name\": \"newLines\",\n+                    \"type\": \"Token\",\n+                    \"occurrences\": \"MULTIPLE\"\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa187aefb9546f01b633d222be1fd6c6716e64d"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1NTU3Mg==", "bodyText": "can remove this", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r515755572", "createdAt": "2020-11-02T06:05:25Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/java/io/ballerina/toml/internal/parser/TomlParserErrorHandler.java", "diffHunk": "@@ -51,17 +51,37 @@\n public class TomlParserErrorHandler extends AbstractParserErrorHandler {\n \n     private static final ParserRuleContext[] TOP_LEVEL_NODE = {ParserRuleContext.EOF,\n-            ParserRuleContext.KEY_VALUE_PAIR, ParserRuleContext.TOML_TABLE, ParserRuleContext.TOML_TABLE_ARRAY};\n+            ParserRuleContext.NEW_LINE,\n+            ParserRuleContext.KEY_VALUE_PAIR,\n+            ParserRuleContext.TOML_TABLE,\n+            ParserRuleContext.TOML_TABLE_ARRAY\n+    };\n \n-    private static final ParserRuleContext[] VALUE_END = { ParserRuleContext.CLOSE_BRACKET, ParserRuleContext.COMMA };\n-\n-    private static final ParserRuleContext[] VALUE_START =\n-            { ParserRuleContext.VALUE, ParserRuleContext.TOML_ARRAY };\n+    private static final ParserRuleContext[] ARRAY_VALUE_END = {\n+            ParserRuleContext.COMMA,\n+            ParserRuleContext.ARRAY_VALUE_LIST_END}; //TODO does the order matter? why and how\n \n     private static final ParserRuleContext[] ARRAY_VALUE_START_OR_VALUE_LIST_END =\n             { ParserRuleContext.ARRAY_VALUE_LIST_END, ParserRuleContext.ARRAY_VALUE_START };\n \n+    private static final ParserRuleContext[] NUMERICAL_LITERAL = {ParserRuleContext.DECIMAL_INTEGER_LITERAL,\n+            ParserRuleContext.DECIMAL_FLOATING_POINT_LITERAL};\n+\n+    private static final ParserRuleContext[] VALUE = {ParserRuleContext.STRING_START,\n+            ParserRuleContext.SIGN_TOKEN, ParserRuleContext.NUMERICAL_LITERAL,\n+            ParserRuleContext.BOOLEAN_LITERAL,\n+//            ParserRuleContext.ARRAY_VALUE_LIST", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa187aefb9546f01b633d222be1fd6c6716e64d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1NjIyNQ==", "bodyText": "Parser should use newline token(s) only to make parsing-decisions. It should not use these tokens when creating nodes. Newlines should come from the minutiae as before.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r515756225", "createdAt": "2020-11-02T06:08:03Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/java/io/ballerina/toml/internal/parser/TomlParser.java", "diffHunk": "@@ -191,27 +202,35 @@ private STNode parseKeyValue() {\n         STNode identifier = parseKeys();\n         STNode equals = parseEquals();\n         STNode value = parseValue();\n+        STNode newLines = parseNewLines();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa187aefb9546f01b633d222be1fd6c6716e64d"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1NjUwMw==", "bodyText": "Remove commented out codes in all places", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r515756503", "createdAt": "2020-11-02T06:09:19Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/test/java/toml/parser/test/TestToml.java", "diffHunk": "@@ -66,8 +70,22 @@ private static void testParser(String content) {\n     private static void testAPI(String path) throws IOException {\n         InputStream inputStream = new FileInputStream(path);\n         Toml read = Toml.read(inputStream);\n-        TomlBooleanValueNode key1 = read.get(\"key\");\n+\n+        List<TomlDiagnostic> diagnostics = read.getDiagnostics();\n+        for (TomlDiagnostic diagnostic: diagnostics) {\n+            OUT.println(diagnostic.location().lineRange());\n+            OUT.println(diagnostic.message());\n+        }\n+\n+        TomlStringValueNode key1 = read.get(\"key\");\n         OUT.println(key1.getValue());\n+//        TomlArrayValueNode key1 = read.get(\"key\");\n+//        OUT.println(key1.get(0));\n+\n+//        TomlLongValueNode key = read.getTable(\"key\").get(\"hello ooo\");\n+//        OUT.println(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa187aefb9546f01b633d222be1fd6c6716e64d"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1NjY5Nw==", "bodyText": "Let's create an issue to track these disabled tests", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r515756697", "createdAt": "2020-11-02T06:09:58Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/test/java/toml/parser/test/api/errors/KeyValuePairTest.java", "diffHunk": "@@ -106,22 +107,22 @@ public void testMultipleMissing() throws IOException {\n     public void testArrayMissingComma() throws IOException {\n \n         InputStream inputStream = Thread.currentThread().getContextClassLoader()\n-                .getResourceAsStream(\"validations/syntax/array-missing-comma.toml\");\n+                .getResourceAsStream(\"validations/syntax/key-value/array/array-missing-comma.toml\");\n         Toml read = Toml.read(inputStream);\n         List<TomlDiagnostic> diagnostics = read.getDiagnostics();\n \n-        LineRange expectedLineRange = ErrorTestUtils.toLineRange(17, 17, 10, 11);\n+        LineRange expectedLineRange = ErrorTestUtils.toLineRange(17, 17, 10, 10);\n         TomlDiagnostic actualDiag = diagnostics.get(0);\n \n         ErrorTestUtils\n-                .validateDiagnostic(actualDiag, expectedLineRange, \"invalid token '2'\", DiagnosticSeverity.ERROR);\n+                .validateDiagnostic(actualDiag, expectedLineRange, \"missing comma token\", DiagnosticSeverity.ERROR);\n     }\n \n-    @Test\n+    @Test(enabled = false) //due to getExpectedTokenKind issue", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa187aefb9546f01b633d222be1fd6c6716e64d"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1NzE0MQ==", "bodyText": "Can call this AbstractTomlParserTest", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r515757141", "createdAt": "2020-11-02T06:11:23Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/test/java/toml/parser/test/tree/core/AbstractCoreTest.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package toml.parser.test.tree.core;\n+\n+import toml.parser.test.ParserTestUtils;\n+\n+import java.nio.file.Paths;\n+\n+/**\n+ * Test util for testing toml.\n+ */\n+public abstract class AbstractCoreTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa187aefb9546f01b633d222be1fd6c6716e64d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1ODE3Nw==", "bodyText": "We can have the test class package hierarchy as\ntoml.parser.test.syntax\n    |_ AbstractTomlParserTest\n    |_ KeyValueTest\n    |_ KeyValueNegativeTest\n    |_ TableTest\n    |_ TableNegativeTest", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r515758177", "createdAt": "2020-11-02T06:15:02Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/test/java/toml/parser/test/tree/core/KeyValueTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package toml.parser.test.tree.core;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa187aefb9546f01b633d222be1fd6c6716e64d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc1OTU2Nw==", "bodyText": "Resource files hierarchy doesn't seems to be consistent.\nShall we go as:\nsrc/test/resources/\n    |_ syntax\n        |_tables\n        |   |_source1.bal\n        |   |_source2.bal\n        |   |_assert1.bal\n        |   |_assert2.bal\n        |   |_<both positive and negative tests goes here. Can be distinguish by adding a suffix (say 'negative') to the file name>\n        |_keyValue", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r515759567", "createdAt": "2020-11-02T06:20:14Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/test/java/toml/parser/test/tree/errors/AbstractErrorTest.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package toml.parser.test.tree.errors;\n+\n+import toml.parser.test.ParserTestUtils;\n+\n+import java.nio.file.Paths;\n+\n+/**\n+ * Test util for testing toml.\n+ */\n+public abstract class AbstractErrorTest {\n+    void testFile(String path, String filePath) {\n+        ParserTestUtils.test(Paths.get(\"validations/syntax/\", path), Paths.get(\"validations/syntax/\", filePath));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa187aefb9546f01b633d222be1fd6c6716e64d"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3fa187aefb9546f01b633d222be1fd6c6716e64d", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3fa187aefb9546f01b633d222be1fd6c6716e64d", "committedDate": "2020-10-29T11:45:50Z", "message": "Remove InitialTriviaNode from ST"}, "afterCommit": {"oid": "61cdc6a8da8af93bb19ddb5a5a913a43343e8842", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/61cdc6a8da8af93bb19ddb5a5a913a43343e8842", "committedDate": "2020-11-04T08:04:21Z", "message": "Address Review Comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "61cdc6a8da8af93bb19ddb5a5a913a43343e8842", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/61cdc6a8da8af93bb19ddb5a5a913a43343e8842", "committedDate": "2020-11-04T08:04:21Z", "message": "Address Review Comments"}, "afterCommit": {"oid": "22a99e83b6f36f89ffb3d7c0bf3808396753254c", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/22a99e83b6f36f89ffb3d7c0bf3808396753254c", "committedDate": "2020-11-06T07:48:06Z", "message": "Address Review Comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22a99e83b6f36f89ffb3d7c0bf3808396753254c", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/22a99e83b6f36f89ffb3d7c0bf3808396753254c", "committedDate": "2020-11-06T07:48:06Z", "message": "Address Review Comments"}, "afterCommit": {"oid": "3ace3c3ca269f8054cde16c859926e708a50b21f", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3ace3c3ca269f8054cde16c859926e708a50b21f", "committedDate": "2020-11-06T07:57:04Z", "message": "Address Review Comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ace3c3ca269f8054cde16c859926e708a50b21f", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3ace3c3ca269f8054cde16c859926e708a50b21f", "committedDate": "2020-11-06T07:57:04Z", "message": "Address Review Comments"}, "afterCommit": {"oid": "3337c18a993ef38cb74a6d89e885aecdff9d5c97", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3337c18a993ef38cb74a6d89e885aecdff9d5c97", "committedDate": "2020-11-06T08:06:45Z", "message": "Address Review Comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1ODk2NTU0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#pullrequestreview-525896554", "createdAt": "2020-11-09T03:04:12Z", "commit": {"oid": "3337c18a993ef38cb74a6d89e885aecdff9d5c97"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMzowNDoxM1rOHvdjMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMzoxNDoyOVrOHvdsDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUyOTI2Nw==", "bodyText": "Remove commented out lines", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r519529267", "createdAt": "2020-11-09T03:04:13Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/java/io/ballerina/toml/internal/parser/ParserRuleContext.java", "diffHunk": "@@ -44,55 +51,35 @@\n     ARRAY_TABLE_FIRST_END(\"]\"),\n     ARRAY_TABLE_SECOND_END(\"]\"),\n \n-//    STRING_LIST(\"string-list\"),\n-//    STRING_START(\"string-start\"),\n-//    STRING_LIST_START(\"(\"),\n-//    STRING_LIST_END(\")\"),\n-//    STRING_START_OR_STRING_LIST_END(\"string-start-or-string-list-end\"),\n-//    STRING_END(\"arg-end\"),\n-\n-    KEY_ENTRY(\"key-entry\"),\n-    KEYS_END(\"keys-entry\"),\n-\n-\n     // Syntax tokens\n     ASSIGN_OP(\"=\"),\n     COLON(\":\"),\n     COMMA(\",\"),\n     DOT(\".\"),\n-    OPEN_BRACKET(\"[\"),\n-    CLOSE_BRACKET(\"]\"),\n-    PLUS_TOKEN(\"+\"),\n-    MINUS_TOKEN(\"-\"),\n-\n-    IDENTIFIER(\"identifier\"),\n+    SIGN_TOKEN(\"sign-token\"),\n+    IDENTIFIER_LITERAL(\"identifier\"),\n \n     // Expressions\n     BASIC_LITERAL(\"basic-literal\"),\n     DECIMAL_INTEGER_LITERAL(\"decimal-int-literal\"),\n-    STRING_LITERAL(\"string-literal\"),\n-    HEX_INTEGER_LITERAL(\"hex-integer-literal\"),\n+    STRING_CONTENT(\"string-content\"),\n     NIL_LITERAL(\"nil-literal\"),\n     DECIMAL_FLOATING_POINT_LITERAL(\"decimal-floating-point-literal\"),\n-    HEX_FLOATING_POINT_LITERAL(\"hex-floating-point-literal\"),\n+    BOOLEAN_LITERAL(\"boolean-literal\"),\n+    NUMERICAL_LITERAL(\"numerical-literal\"),\n \n     //TOML\n-    KEY(\"key-toml\"),\n-    KEY_LIST(\"key-list\"),\n+//    KEY(\"key-toml\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3337c18a993ef38cb74a6d89e885aecdff9d5c97"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUzMDczMA==", "bodyText": "Need to handle the carriage return properly.\nWe should emit only one newline token regardless whether it is \\n or \\r\\n", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r519530730", "createdAt": "2020-11-09T03:10:42Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/java/io/ballerina/toml/internal/parser/TomlLexer.java", "diffHunk": "@@ -383,14 +399,14 @@ private STNode processEndOfLine() {\n         char c = reader.peek();\n         switch (c) {\n             case LexerTerminals.NEWLINE:\n-                reader.advance();\n-                return STNodeFactory.createMinutiae(SyntaxKind.END_OF_LINE_MINUTIAE, getLexeme());\n+//                reader.advance();\n+                return STNodeFactory.createMinutiae(SyntaxKind.END_OF_LINE_MINUTIAE, \"\\n\");\n             case LexerTerminals.CARRIAGE_RETURN:\n-                reader.advance();\n-                if (reader.peek() == LexerTerminals.NEWLINE) {\n-                    reader.advance();\n-                }\n-                return STNodeFactory.createMinutiae(SyntaxKind.END_OF_LINE_MINUTIAE, getLexeme());\n+//                reader.advance();\n+//                if (reader.peek() == LexerTerminals.NEWLINE) {\n+//                    reader.advance();\n+//                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3337c18a993ef38cb74a6d89e885aecdff9d5c97"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUzMTUzNA==", "bodyText": "We could do this without this additional flag.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r519531534", "createdAt": "2020-11-09T03:14:29Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/java/io/ballerina/toml/internal/parser/TomlLexer.java", "diffHunk": "@@ -259,31 +266,41 @@ private STToken readLiteralStringToken() {\n             }\n         }\n \n-        return getLiteral(SyntaxKind.STRING_LITERAL);\n+        return getUnquotedKey();\n     }\n \n-    private STToken getSyntaxToken(SyntaxKind kind) {\n+    private STToken getNewlineToken(SyntaxKind kind) {\n+        if (isNewLineAddedByTrailing) {\n+            this.leadingTriviaList = new ArrayList<>(INITIAL_TRIVIA_CAPACITY);\n+            isNewLineAddedByTrailing = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3337c18a993ef38cb74a6d89e885aecdff9d5c97"}, "originalPosition": 87}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3337c18a993ef38cb74a6d89e885aecdff9d5c97", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3337c18a993ef38cb74a6d89e885aecdff9d5c97", "committedDate": "2020-11-06T08:06:45Z", "message": "Address Review Comments"}, "afterCommit": {"oid": "95bc5cfa9b676abc8ce95895c2aa645fc4c93719", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/95bc5cfa9b676abc8ce95895c2aa645fc4c93719", "committedDate": "2020-11-11T07:11:52Z", "message": "Fix New line mode"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95bc5cfa9b676abc8ce95895c2aa645fc4c93719", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/95bc5cfa9b676abc8ce95895c2aa645fc4c93719", "committedDate": "2020-11-11T07:11:52Z", "message": "Fix New line mode"}, "afterCommit": {"oid": "2c7b9990de4bb2917f1217a88a2e040dd60e2c9d", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2c7b9990de4bb2917f1217a88a2e040dd60e2c9d", "committedDate": "2020-11-11T08:55:49Z", "message": "Fix New line mode"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c7b9990de4bb2917f1217a88a2e040dd60e2c9d", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2c7b9990de4bb2917f1217a88a2e040dd60e2c9d", "committedDate": "2020-11-11T08:55:49Z", "message": "Fix New line mode"}, "afterCommit": {"oid": "aec020fbcac38bd4acf6ba1bf65c19102a4c6bd2", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aec020fbcac38bd4acf6ba1bf65c19102a4c6bd2", "committedDate": "2020-11-11T09:09:53Z", "message": "Fix New line mode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NzE4MDA5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#pullrequestreview-528718009", "createdAt": "2020-11-12T03:13:28Z", "commit": {"oid": "aec020fbcac38bd4acf6ba1bf65c19102a4c6bd2"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMzoxMzoyOFrOHxnmxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMzozNzowNFrOHxofQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc5MTE3Mw==", "bodyText": "Here its good to check whether the next character is a newline\n\nIf so, send the newline token.\nOtherwise, go back to the default mode and send a normal token.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r521791173", "createdAt": "2020-11-12T03:13:28Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/java/io/ballerina/toml/internal/parser/TomlLexer.java", "diffHunk": "@@ -200,6 +206,16 @@ private STToken readToken() {\n         return token;\n     }\n \n+    private STToken readNewlineToken() {\n+        reader.mark();\n+        if (reader.isEOF()) {\n+            return getSyntaxToken(SyntaxKind.EOF_TOKEN);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec020fbcac38bd4acf6ba1bf65c19102a4c6bd2"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc5NzM0MQ==", "bodyText": "Newline is a single word. Lets update in all places.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r521797341", "createdAt": "2020-11-12T03:24:25Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/java/io/ballerina/toml/internal/parser/TomlParser.java", "diffHunk": "@@ -191,27 +211,46 @@ private STNode parseKeyValue() {\n         STNode identifier = parseKeys();\n         STNode equals = parseEquals();\n         STNode value = parseValue();\n+        STNode newLine = parseNewLines();\n+        if (newLine.hasDiagnostics()) {\n+            value = SyntaxErrors.addSyntaxDiagnostics(value, newLine.diagnostics());\n+        }\n         endContext();\n         return STNodeFactory.createKeyValueNode(identifier, equals, value);\n     }\n \n+    /**\n+     * Pares new lines.\n+     * New lines are appended to trivia from lexer. These tokens are only used for validations purposes.\n+     */\n+    private STNode parseNewLines() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec020fbcac38bd4acf6ba1bf65c19102a4c6bd2"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc5ODUzNw==", "bodyText": "Should be a single word NEWLINE", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r521798537", "createdAt": "2020-11-12T03:26:06Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/java/io/ballerina/toml/syntax/tree/SyntaxKind.java", "diffHunk": "@@ -23,29 +23,20 @@\n  * @since 2.0.0\n  */\n public enum SyntaxKind {\n+    INITIAL_TRIVIA(200),\n+    NEW_LINE(201, \"\\n\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec020fbcac38bd4acf6ba1bf65c19102a4c6bd2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc5ODk0Nw==", "bodyText": "INITIAL_TRIVIA is unused?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r521798947", "createdAt": "2020-11-12T03:26:42Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/java/io/ballerina/toml/syntax/tree/SyntaxKind.java", "diffHunk": "@@ -23,29 +23,20 @@\n  * @since 2.0.0\n  */\n public enum SyntaxKind {\n+    INITIAL_TRIVIA(200),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec020fbcac38bd4acf6ba1bf65c19102a4c6bd2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc5OTg4OQ==", "bodyText": "Better to clean up and make the error code continuous within a group", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r521799889", "createdAt": "2020-11-12T03:28:11Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/java/io/ballerina/toml/syntax/tree/SyntaxKind.java", "diffHunk": "@@ -23,29 +23,20 @@\n  * @since 2.0.0\n  */\n public enum SyntaxKind {\n+    INITIAL_TRIVIA(200),\n+    NEW_LINE(201, \"\\n\"),\n \n     MODULE_NAME(3014),\n \n     TRUE_KEYWORD(203, \"true\"),\n     FALSE_KEYWORD(204, \"false\"),\n \n     // Separators\n-    OPEN_BRACE_TOKEN(500, \"{\"),\n-    CLOSE_BRACE_TOKEN(501, \"}\"),\n-    OPEN_PAREN_TOKEN(502, \"(\"),\n-    CLOSE_PAREN_TOKEN(503, \")\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec020fbcac38bd4acf6ba1bf65c19102a4c6bd2"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTgwNTYzMw==", "bodyText": "Shall we define System.lineSeparator() as a constant and use that?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#discussion_r521805633", "createdAt": "2020-11-12T03:37:04Z", "author": {"login": "SupunS"}, "path": "misc/toml-parser/src/main/java/io/ballerina/toml/internal/parser/TomlLexer.java", "diffHunk": "@@ -383,14 +404,12 @@ private STNode processEndOfLine() {\n         char c = reader.peek();\n         switch (c) {\n             case LexerTerminals.NEWLINE:\n-                reader.advance();\n-                return STNodeFactory.createMinutiae(SyntaxKind.END_OF_LINE_MINUTIAE, getLexeme());\n+                return STNodeFactory.createMinutiae(SyntaxKind.END_OF_LINE_MINUTIAE, System.lineSeparator());\n             case LexerTerminals.CARRIAGE_RETURN:\n-                reader.advance();\n                 if (reader.peek() == LexerTerminals.NEWLINE) {\n                     reader.advance();\n                 }\n-                return STNodeFactory.createMinutiae(SyntaxKind.END_OF_LINE_MINUTIAE, getLexeme());\n+                return STNodeFactory.createMinutiae(SyntaxKind.END_OF_LINE_MINUTIAE, System.lineSeparator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec020fbcac38bd4acf6ba1bf65c19102a4c6bd2"}, "originalPosition": 173}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "425cac95dd44b3029a322fa75b12db7d1ce2b239", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/425cac95dd44b3029a322fa75b12db7d1ce2b239", "committedDate": "2020-11-15T08:49:15Z", "message": "Fix windows tests"}, "afterCommit": {"oid": "2c7e744ae1693d89aec93b0c107f9df67b37f25f", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2c7e744ae1693d89aec93b0c107f9df67b37f25f", "committedDate": "2020-11-16T04:14:00Z", "message": "Rename properties files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c7e744ae1693d89aec93b0c107f9df67b37f25f", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2c7e744ae1693d89aec93b0c107f9df67b37f25f", "committedDate": "2020-11-16T04:14:00Z", "message": "Rename properties files"}, "afterCommit": {"oid": "a76d0b1f0ea35187ca3d596f0c40a4066f51ec5f", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a76d0b1f0ea35187ca3d596f0c40a4066f51ec5f", "committedDate": "2020-11-16T09:52:15Z", "message": "Fix windows tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a76d0b1f0ea35187ca3d596f0c40a4066f51ec5f", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a76d0b1f0ea35187ca3d596f0c40a4066f51ec5f", "committedDate": "2020-11-16T09:52:15Z", "message": "Fix windows tests"}, "afterCommit": {"oid": "009f96a4a62c6c273601097f92b6188256da3a41", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/009f96a4a62c6c273601097f92b6188256da3a41", "committedDate": "2020-11-16T11:16:51Z", "message": "Fix windows tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69d8a124aa7355dae29a60ca382ccc5810737fa0", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/69d8a124aa7355dae29a60ca382ccc5810737fa0", "committedDate": "2020-11-16T14:37:54Z", "message": "Initial Toml tree tests impl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4694d38b5969b009b3ea558dbca7ae07970b1310", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4694d38b5969b009b3ea558dbca7ae07970b1310", "committedDate": "2020-11-16T14:37:54Z", "message": "Add Syntax Tree Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "967d50144edae2bc18329bda8b9cbc6fc267843d", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/967d50144edae2bc18329bda8b9cbc6fc267843d", "committedDate": "2020-11-16T14:37:54Z", "message": "Remove Unnecessary errors and messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5ce04516e057fb4a6f57c68e95a30813ab28730", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d5ce04516e057fb4a6f57c68e95a30813ab28730", "committedDate": "2020-11-16T14:37:54Z", "message": "Add sign token for numerical node"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4f0471fe3df61fad51e543dd84e5978200e5d06", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f4f0471fe3df61fad51e543dd84e5978200e5d06", "committedDate": "2020-11-16T14:37:54Z", "message": "Remove InitialTriviaNode from ST"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5d279443e1333df6a5bbdb50a767af3ea3097ff", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b5d279443e1333df6a5bbdb50a767af3ea3097ff", "committedDate": "2020-11-16T14:37:54Z", "message": "Address Review Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30a91e29888d72c6f8f75a56633b48bc4a071a36", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/30a91e29888d72c6f8f75a56633b48bc4a071a36", "committedDate": "2020-11-16T14:37:54Z", "message": "Fix New line mode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "271a1bafbc4c083b4e07c7e46a2c822554baae47", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/271a1bafbc4c083b4e07c7e46a2c822554baae47", "committedDate": "2020-11-16T14:37:54Z", "message": "Fix minor review changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a0bd412ee8a652f96d571a528530a8eca7e666e", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8a0bd412ee8a652f96d571a528530a8eca7e666e", "committedDate": "2020-11-16T14:37:54Z", "message": "Fix windows tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "009f96a4a62c6c273601097f92b6188256da3a41", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/009f96a4a62c6c273601097f92b6188256da3a41", "committedDate": "2020-11-16T11:16:51Z", "message": "Fix windows tests"}, "afterCommit": {"oid": "8a0bd412ee8a652f96d571a528530a8eca7e666e", "author": {"user": {"login": "xlight05", "name": "Anjana Supun"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8a0bd412ee8a652f96d571a528530a8eca7e666e", "committedDate": "2020-11-16T14:37:54Z", "message": "Fix windows tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMDEyNzI3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26429#pullrequestreview-532012727", "createdAt": "2020-11-17T04:25:59Z", "commit": {"oid": "8a0bd412ee8a652f96d571a528530a8eca7e666e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4419, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}