{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNzIzOTYz", "number": 20883, "reviewThreads": {"totalCount": 43, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOToyNjowOVrODdnRTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMTozOVrODfFVMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzc4NzAyOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOToyNjoxMFrOFmUPbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNjo1MjozM1rOFojXqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyMTgzNw==", "bodyText": "Do we need -lg? I'm not sure if it's a common practice to use two chars as a shorter option.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r375721837", "createdAt": "2020-02-06T09:26:10Z", "author": {"login": "MaryamZi"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -125,6 +128,16 @@ public TestCommand(Path userDir, PrintStream outStream, PrintStream errStream, b\n     @CommandLine.Option(names = \"--debug\", description = \"start Ballerina in remote debugging mode\")\n     private String debugPort;\n \n+    // Testerina Flags\n+    @CommandLine.Option(names = {\"--list-groups\", \"-lg\"}, description = \"list the groups available in the tests\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd4080e4b410ad2e1ccb41f4b73708113f6f3f57"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc4NTE1NA==", "bodyText": "-lg was the short option used until 0.991.x. Therefore we are providing the same in 1.1.x", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r375785154", "createdAt": "2020-02-06T11:37:09Z", "author": {"login": "azinneera"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -125,6 +128,16 @@ public TestCommand(Path userDir, PrintStream outStream, PrintStream errStream, b\n     @CommandLine.Option(names = \"--debug\", description = \"start Ballerina in remote debugging mode\")\n     private String debugPort;\n \n+    // Testerina Flags\n+    @CommandLine.Option(names = {\"--list-groups\", \"-lg\"}, description = \"list the groups available in the tests\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyMTgzNw=="}, "originalCommit": {"oid": "fd4080e4b410ad2e1ccb41f4b73708113f6f3f57"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1MjU4Mg==", "bodyText": "IMO, we don't need this. We have other similar options for which we don't have shorter versions.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r377452582", "createdAt": "2020-02-11T05:38:10Z", "author": {"login": "MaryamZi"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -125,6 +128,16 @@ public TestCommand(Path userDir, PrintStream outStream, PrintStream errStream, b\n     @CommandLine.Option(names = \"--debug\", description = \"start Ballerina in remote debugging mode\")\n     private String debugPort;\n \n+    // Testerina Flags\n+    @CommandLine.Option(names = {\"--list-groups\", \"-lg\"}, description = \"list the groups available in the tests\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyMTgzNw=="}, "originalCommit": {"oid": "fd4080e4b410ad2e1ccb41f4b73708113f6f3f57"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2Njg1Nw==", "bodyText": "+1 to remove -lg. @hevayo", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378066857", "createdAt": "2020-02-12T06:52:33Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -125,6 +128,16 @@ public TestCommand(Path userDir, PrintStream outStream, PrintStream errStream, b\n     @CommandLine.Option(names = \"--debug\", description = \"start Ballerina in remote debugging mode\")\n     private String debugPort;\n \n+    // Testerina Flags\n+    @CommandLine.Option(names = {\"--list-groups\", \"-lg\"}, description = \"list the groups available in the tests\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyMTgzNw=="}, "originalCommit": {"oid": "fd4080e4b410ad2e1ccb41f4b73708113f6f3f57"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzc4OTU1OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOToyNjo1M1rOFmUQ6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMTozODowMVrOFmYIbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyMjIxNg==", "bodyText": "Do we need this comment?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r375722216", "createdAt": "2020-02-06T09:26:53Z", "author": {"login": "MaryamZi"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -125,6 +128,16 @@ public TestCommand(Path userDir, PrintStream outStream, PrintStream errStream, b\n     @CommandLine.Option(names = \"--debug\", description = \"start Ballerina in remote debugging mode\")\n     private String debugPort;\n \n+    // Testerina Flags", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd4080e4b410ad2e1ccb41f4b73708113f6f3f57"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc4NTU4Mg==", "bodyText": "We can remove it. Removed in 843a452", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r375785582", "createdAt": "2020-02-06T11:38:01Z", "author": {"login": "azinneera"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -125,6 +128,16 @@ public TestCommand(Path userDir, PrintStream outStream, PrintStream errStream, b\n     @CommandLine.Option(names = \"--debug\", description = \"start Ballerina in remote debugging mode\")\n     private String debugPort;\n \n+    // Testerina Flags", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyMjIxNg=="}, "originalCommit": {"oid": "fd4080e4b410ad2e1ccb41f4b73708113f6f3f57"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTA3Nzc4OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTozODo0M1rOFn94gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTozODo0M1rOFn94gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1MjY3NQ==", "bodyText": "Shall we add @since to the new classes?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r377452675", "createdAt": "2020-02-11T05:38:43Z", "author": {"login": "MaryamZi"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "843a4527564dbd04de2720695ac27e721221009c"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTA3ODA4OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunTestsTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTozODo1NlrOFn94rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTozODo1NlrOFn94rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1MjcxNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public RunTestsTask(){\n          \n          \n            \n                public RunTestsTask() {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r377452716", "createdAt": "2020-02-11T05:38:56Z", "author": {"login": "MaryamZi"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunTestsTask.java", "diffHunk": "@@ -34,11 +34,33 @@\n import java.util.List;\n import java.util.Map;\n \n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n /**\n  * Task for executing tests.\n  */\n public class RunTestsTask implements Task {\n \n+    private List<String> groupList;\n+    private List<String> disableGroupList;\n+    private TesterinaRegistry testerinaRegistry = TesterinaRegistry.getInstance();\n+\n+    public RunTestsTask(List<String> groupList, List<String> disableGroupList) {\n+        this.groupList = groupList;\n+        this.disableGroupList = disableGroupList;\n+        if (disableGroupList != null) {\n+            testerinaRegistry.setGroups(this.disableGroupList);\n+            testerinaRegistry.setShouldIncludeGroups(false);\n+        } else if (groupList != null) {\n+            testerinaRegistry.setGroups(this.groupList);\n+            testerinaRegistry.setShouldIncludeGroups(true);\n+        }\n+    }\n+\n+    public RunTestsTask(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "843a4527564dbd04de2720695ac27e721221009c"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTA3OTMwOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTo0MDowNFrOFn95cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTo0MTozM1rOFn96YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1MjkxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                       within the @test:config annotation.\n          \n          \n            \n                       in the @test:Config annotation.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r377452914", "createdAt": "2020-02-11T05:40:04Z", "author": {"login": "MaryamZi"}, "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "diffHunk": "@@ -22,6 +22,31 @@ OPTIONS\n            '--offline' option is specified, this remote check is not done and\n            the local artifacts will be used instead.\n \n+       -lg\n+       --list-groups\n+           Lists the test groups available in the test files. Groups are\n+           tags that are added to test functions. The groups are used to\n+           control the execution of test functions by specifying a\n+           group or a set of groups that need to be executed in a test\n+           run. A test function can be grouped with the groups parameter\n+           within the @test:config annotation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "843a4527564dbd04de2720695ac27e721221009c"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1MzE1Mw==", "bodyText": "Please check everywhere.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r377453153", "createdAt": "2020-02-11T05:41:33Z", "author": {"login": "MaryamZi"}, "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "diffHunk": "@@ -22,6 +22,31 @@ OPTIONS\n            '--offline' option is specified, this remote check is not done and\n            the local artifacts will be used instead.\n \n+       -lg\n+       --list-groups\n+           Lists the test groups available in the test files. Groups are\n+           tags that are added to test functions. The groups are used to\n+           control the execution of test functions by specifying a\n+           group or a set of groups that need to be executed in a test\n+           run. A test function can be grouped with the groups parameter\n+           within the @test:config annotation.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1MjkxNA=="}, "originalCommit": {"oid": "843a4527564dbd04de2720695ac27e721221009c"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTA3OTg3OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTo0MDo0MFrOFn95xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTo0MDo0MFrOFn95xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1Mjk5Nw==", "bodyText": "Shall we also use '' for these\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                       @test:Config annotation.\n          \n          \n            \n                       '@test:Config' annotation.\n          \n      \n    \n    \n  \n\nPlease check all options.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r377452997", "createdAt": "2020-02-11T05:40:40Z", "author": {"login": "MaryamZi"}, "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "diffHunk": "@@ -22,6 +22,31 @@ OPTIONS\n            '--offline' option is specified, this remote check is not done and\n            the local artifacts will be used instead.\n \n+       -lg\n+       --list-groups\n+           Lists the test groups available in the test files. Groups are\n+           tags that are added to test functions. The groups are used to\n+           control the execution of test functions by specifying a\n+           group or a set of groups that need to be executed in a test\n+           run. A test function can be grouped with the groups parameter\n+           within the @test:config annotation.\n+\n+       --groups <test_group, ...>\n+           Specify test groups to be executed. Groups are tags that are\n+           added to test functions. The groups are used to control the\n+           execution of test functions by specifying a group or a set of\n+           groups that need to be executed in a test run. A test\n+           function can be grouped with the groups parameter within the\n+           @test:Config annotation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "843a4527564dbd04de2720695ac27e721221009c"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTA4MDQ4OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTo0MToxNlrOFn96Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTo0MToxNlrOFn96Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1MzA5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                       run. A test function can be grouped with the groups parameter\n          \n          \n            \n                       run. A test function can be grouped using the 'groups' field", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r377453095", "createdAt": "2020-02-11T05:41:16Z", "author": {"login": "MaryamZi"}, "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "diffHunk": "@@ -22,6 +22,31 @@ OPTIONS\n            '--offline' option is specified, this remote check is not done and\n            the local artifacts will be used instead.\n \n+       -lg\n+       --list-groups\n+           Lists the test groups available in the test files. Groups are\n+           tags that are added to test functions. The groups are used to\n+           control the execution of test functions by specifying a\n+           group or a set of groups that need to be executed in a test\n+           run. A test function can be grouped with the groups parameter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "843a4527564dbd04de2720695ac27e721221009c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTA4MTc5OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTo0MjoyOVrOFn968g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTo0MjoyOVrOFn968g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1MzI5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List all test groups in math module\n          \n          \n            \n                    List all test groups in math module.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r377453298", "createdAt": "2020-02-11T05:42:29Z", "author": {"login": "MaryamZi"}, "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "diffHunk": "@@ -51,3 +76,10 @@ EXAMPLES\n \n         Run tests in math module.\n            $ ballerina test math\n+\n+        List all test groups in math module", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "843a4527564dbd04de2720695ac27e721221009c"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTA4MTkxOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTo0MjozN1rOFn97Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTo0MjozN1rOFn97Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1MzMxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Run only the set of tests belonging to group_x in current project\n          \n          \n            \n                    Run only the set of tests belonging to group_x in the current project.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r377453318", "createdAt": "2020-02-11T05:42:37Z", "author": {"login": "MaryamZi"}, "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "diffHunk": "@@ -51,3 +76,10 @@ EXAMPLES\n \n         Run tests in math module.\n            $ ballerina test math\n+\n+        List all test groups in math module\n+        $ ballerina test -lg math\n+\n+        Run only the set of tests belonging to group_x in current project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "843a4527564dbd04de2720695ac27e721221009c"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTA4MjM0OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTo0Mjo1NlrOFn97PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNTo0Mjo1NlrOFn97PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ1MzM3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    $ ballerina test --groups group_x  --all\n          \n          \n            \n                    $ ballerina test --groups group_x --all", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r377453372", "createdAt": "2020-02-11T05:42:56Z", "author": {"login": "MaryamZi"}, "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "diffHunk": "@@ -51,3 +76,10 @@ EXAMPLES\n \n         Run tests in math module.\n            $ ballerina test math\n+\n+        List all test groups in math module\n+        $ ballerina test -lg math\n+\n+        Run only the set of tests belonging to group_x in current project\n+        $ ballerina test --groups group_x  --all", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "843a4527564dbd04de2720695ac27e721221009c"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzODk4NzUwOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunTestsTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNjo0ODozMFrOFojSkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMDo0MzoxNFrOFopu-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2NTU1NQ==", "bodyText": "Do we need this?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378065555", "createdAt": "2020-02-12T06:48:30Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunTestsTask.java", "diffHunk": "@@ -34,11 +34,33 @@\n import java.util.List;\n import java.util.Map;\n \n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n /**\n  * Task for executing tests.\n  */\n public class RunTestsTask implements Task {\n \n+    private List<String> groupList;\n+    private List<String> disableGroupList;\n+    private TesterinaRegistry testerinaRegistry = TesterinaRegistry.getInstance();\n+\n+    public RunTestsTask(List<String> groupList, List<String> disableGroupList) {\n+        this.groupList = groupList;\n+        this.disableGroupList = disableGroupList;\n+        if (disableGroupList != null) {\n+            testerinaRegistry.setGroups(this.disableGroupList);\n+            testerinaRegistry.setShouldIncludeGroups(false);\n+        } else if (groupList != null) {\n+            testerinaRegistry.setGroups(this.groupList);\n+            testerinaRegistry.setShouldIncludeGroups(true);\n+        }\n+    }\n+\n+    public RunTestsTask() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE3MTEyOQ==", "bodyText": "We have it for build command. The reason is that the groups options are not relevant for build command.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378171129", "createdAt": "2020-02-12T10:43:14Z", "author": {"login": "azinneera"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunTestsTask.java", "diffHunk": "@@ -34,11 +34,33 @@\n import java.util.List;\n import java.util.Map;\n \n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n /**\n  * Task for executing tests.\n  */\n public class RunTestsTask implements Task {\n \n+    private List<String> groupList;\n+    private List<String> disableGroupList;\n+    private TesterinaRegistry testerinaRegistry = TesterinaRegistry.getInstance();\n+\n+    public RunTestsTask(List<String> groupList, List<String> disableGroupList) {\n+        this.groupList = groupList;\n+        this.disableGroupList = disableGroupList;\n+        if (disableGroupList != null) {\n+            testerinaRegistry.setGroups(this.disableGroupList);\n+            testerinaRegistry.setShouldIncludeGroups(false);\n+        } else if (groupList != null) {\n+            testerinaRegistry.setGroups(this.groupList);\n+            testerinaRegistry.setShouldIncludeGroups(true);\n+        }\n+    }\n+\n+    public RunTestsTask() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2NTU1NQ=="}, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTAwOTAwOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNjo1ODoyOVrOFojevg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMzowNzoxNFrOFot0Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2ODY3MA==", "bodyText": "Shall we add \"addTask(new ListTestGroupsTask(), listGroups)\" and addTask(new RunTestTask(), !listGroups)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378068670", "createdAt": "2020-02-12T06:58:29Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -276,7 +312,7 @@ public void execute() {\n                 .addTask(new CreateJarTask(this.dumpBIR, this.skipCopyLibsFromDist, this.nativeBinary, this.dumpLLVMIR,\n                         this.noOptimizeLLVM))\n                 .addTask(new CopyModuleJarTask(skipCopyLibsFromDist))\n-                .addTask(new RunTestsTask()) // run tests\n+                .addTask(testTask) // run tests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzODAxMQ==", "bodyText": "This is also fine but use comments to explain what is happening", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378238011", "createdAt": "2020-02-12T13:07:14Z", "author": {"login": "hevayo"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -276,7 +312,7 @@ public void execute() {\n                 .addTask(new CreateJarTask(this.dumpBIR, this.skipCopyLibsFromDist, this.nativeBinary, this.dumpLLVMIR,\n                         this.noOptimizeLLVM))\n                 .addTask(new CopyModuleJarTask(skipCopyLibsFromDist))\n-                .addTask(new RunTestsTask()) // run tests\n+                .addTask(testTask) // run tests", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2ODY3MA=="}, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTAwOTgyOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNjo1ODo1NlrOFojfOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMzowMDo0OFrOFotouA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2ODc5NA==", "bodyText": "We can use skip when adding tasks so this logic we can omit.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378068794", "createdAt": "2020-02-12T06:58:56Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -265,6 +295,12 @@ public void execute() {\n         boolean isSingleFileBuild = buildContext.getSourceType().equals(SINGLE_BAL_FILE);\n         // output path is the current directory if -o flag is not given.\n \n+        if (listGroups) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzNTA2NA==", "bodyText": "+1 for having the if then the logic is more clear for the reader. A comment above the if will also help for reading the code", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378235064", "createdAt": "2020-02-12T13:00:48Z", "author": {"login": "hevayo"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/TestCommand.java", "diffHunk": "@@ -265,6 +295,12 @@ public void execute() {\n         boolean isSingleFileBuild = buildContext.getSourceType().equals(SINGLE_BAL_FILE);\n         // output path is the current directory if -o flag is not given.\n \n+        if (listGroups) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2ODc5NA=="}, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTAxNjE0OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowMjoyMFrOFoji6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowMjoyMFrOFoji6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2OTczNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n          \n          \n            \n                    // Only tests in packages are executed so that the default packages (i.e. single BAL files), which have the package name", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378069737", "createdAt": "2020-02-12T07:02:20Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTAxNjYxOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowMjozMlrOFojjKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowMjozMlrOFojjKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2OTgwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n          \n          \n            \n                    // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command, which only executes tests", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378069801", "createdAt": "2020-02-12T07:02:32Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTAxODA5OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowMzowN1rOFojj8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNDowODoyNlrOFpGeRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDAwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // todo following is some legacy logic check if we need to do this.\n          \n          \n            \n                        // Following is some legacy logic to check if we need to do this.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378070001", "createdAt": "2020-02-12T07:03:07Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzNjM1NQ==", "bodyText": "@praneesha having todo is a practice to keep track of todo items in code", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378236355", "createdAt": "2020-02-12T13:03:37Z", "author": {"login": "hevayo"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDAwMQ=="}, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY0MTk5MA==", "bodyText": "@praneesha having todo is a practice to keep track of todo items in code\n\nAck. Thanks for the explanation.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378641990", "createdAt": "2020-02-13T04:08:26Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDAwMQ=="}, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTAxOTExOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowMzozM1rOFojkgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowMzozM1rOFojkgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDE0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // In this package there are no tests to be executed. But we need to say to the users that\n          \n          \n            \n                        // In this package there are no tests to be executed. However, we need to say to the users that", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378070147", "createdAt": "2020-02-12T07:03:33Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.\n+            // if (bLangPackage.containsTestablePkg()) {\n+            // } else {\n+            // In this package there are no tests to be executed. But we need to say to the users that", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTAxOTE2OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowMzozNlrOFojkjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNToyMzowNVrOFoy2cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDE1OQ==", "bodyText": "Do we need jar paths and class loader for list commands?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378070159", "createdAt": "2020-02-12T07:03:36Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.\n+            // if (bLangPackage.containsTestablePkg()) {\n+            // } else {\n+            // In this package there are no tests to be executed. But we need to say to the users that\n+            // there are no tests found in the package to be executed as :\n+            // Running tests\n+            //     <org-name>/<package-name>:<version>\n+            //         No tests found\n+            // }\n+            Path jarPath = buildContext.getTestJarPathFromTargetCache(packageID);\n+            Path modulejarPath = buildContext.getJarPathFromTargetCache(packageID);\n+            // subsitute test jar if module jar if tests not exists\n+            if (Files.notExists(jarPath)) {\n+                jarPath = modulejarPath;\n+            }\n+\n+            HashSet<Path> moduleDependencies = buildContext.moduleDependencyPathMap.get(packageID).platformLibs;\n+            // create a new set so that original set is not affected with test dependencies\n+            HashSet<Path> dependencyJarPaths = new HashSet<>(moduleDependencies);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMyMDQ5OA==", "bodyText": "Yes, the test suite is built for listing groups as well and due to this as per the current implementation, the classloader and jar paths are required to build the test suite.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378320498", "createdAt": "2020-02-12T15:23:05Z", "author": {"login": "azinneera"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.\n+            // if (bLangPackage.containsTestablePkg()) {\n+            // } else {\n+            // In this package there are no tests to be executed. But we need to say to the users that\n+            // there are no tests found in the package to be executed as :\n+            // Running tests\n+            //     <org-name>/<package-name>:<version>\n+            //         No tests found\n+            // }\n+            Path jarPath = buildContext.getTestJarPathFromTargetCache(packageID);\n+            Path modulejarPath = buildContext.getJarPathFromTargetCache(packageID);\n+            // subsitute test jar if module jar if tests not exists\n+            if (Files.notExists(jarPath)) {\n+                jarPath = modulejarPath;\n+            }\n+\n+            HashSet<Path> moduleDependencies = buildContext.moduleDependencyPathMap.get(packageID).platformLibs;\n+            // create a new set so that original set is not affected with test dependencies\n+            HashSet<Path> dependencyJarPaths = new HashSet<>(moduleDependencies);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDE1OQ=="}, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTAyMDU0OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowNDoxNlrOFojlTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowNDoxNlrOFojlTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDM0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // subsitute test jar if module jar if tests not exists\n          \n          \n            \n                        // Substitute test JAR if the module JAR if tests not exists\n          \n      \n    \n    \n  \n\nThe idea is not clear.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378070349", "createdAt": "2020-02-12T07:04:16Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.\n+            // if (bLangPackage.containsTestablePkg()) {\n+            // } else {\n+            // In this package there are no tests to be executed. But we need to say to the users that\n+            // there are no tests found in the package to be executed as :\n+            // Running tests\n+            //     <org-name>/<package-name>:<version>\n+            //         No tests found\n+            // }\n+            Path jarPath = buildContext.getTestJarPathFromTargetCache(packageID);\n+            Path modulejarPath = buildContext.getJarPathFromTargetCache(packageID);\n+            // subsitute test jar if module jar if tests not exists", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTAyMDk3OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowNDozM1rOFojlkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowNDozM1rOFojlkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDQxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // create a new set so that original set is not affected with test dependencies\n          \n          \n            \n                        // Create a new set so that the original set is not affected with the test dependencies.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378070419", "createdAt": "2020-02-12T07:04:33Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.\n+            // if (bLangPackage.containsTestablePkg()) {\n+            // } else {\n+            // In this package there are no tests to be executed. But we need to say to the users that\n+            // there are no tests found in the package to be executed as :\n+            // Running tests\n+            //     <org-name>/<package-name>:<version>\n+            //         No tests found\n+            // }\n+            Path jarPath = buildContext.getTestJarPathFromTargetCache(packageID);\n+            Path modulejarPath = buildContext.getJarPathFromTargetCache(packageID);\n+            // subsitute test jar if module jar if tests not exists\n+            if (Files.notExists(jarPath)) {\n+                jarPath = modulejarPath;\n+            }\n+\n+            HashSet<Path> moduleDependencies = buildContext.moduleDependencyPathMap.get(packageID).platformLibs;\n+            // create a new set so that original set is not affected with test dependencies", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTAyMTcwOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowNDo1OFrOFojl_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowNDo1OFrOFojl_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MDUyNg==", "bodyText": "We can remove -lg here as well, if we are removing it.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378070526", "createdAt": "2020-02-12T07:04:58Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "diffHunk": "@@ -22,6 +22,31 @@ OPTIONS\n            '--offline' option is specified, this remote check is not done and\n            the local artifacts will be used instead.\n \n+       -lg", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTAyNjkzOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzowNzozNVrOFojo8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzoxMTo0MlrOFojt0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MTI4MA==", "bodyText": "Do we need this task to build command. ( AFAIK groups works only with test)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378071280", "createdAt": "2020-02-12T07:07:35Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MjUyOQ==", "bodyText": "No it is only used in the test command. Are there any changes we need to do?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378072529", "createdAt": "2020-02-12T07:11:42Z", "author": {"login": "azinneera"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MTI4MA=="}, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE4MjM0OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxNjoxNVrOFolDnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxNjoxNVrOFolDnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NDQ5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                // find the set of dependency jar paths for running test for this module and update\n          \n          \n            \n                                // Find the set of dependency JAR paths for running the test for this module and update", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378094495", "createdAt": "2020-02-12T08:16:15Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.\n+            // if (bLangPackage.containsTestablePkg()) {\n+            // } else {\n+            // In this package there are no tests to be executed. But we need to say to the users that\n+            // there are no tests found in the package to be executed as :\n+            // Running tests\n+            //     <org-name>/<package-name>:<version>\n+            //         No tests found\n+            // }\n+            Path jarPath = buildContext.getTestJarPathFromTargetCache(packageID);\n+            Path modulejarPath = buildContext.getJarPathFromTargetCache(packageID);\n+            // subsitute test jar if module jar if tests not exists\n+            if (Files.notExists(jarPath)) {\n+                jarPath = modulejarPath;\n+            }\n+\n+            HashSet<Path> moduleDependencies = buildContext.moduleDependencyPathMap.get(packageID).platformLibs;\n+            // create a new set so that original set is not affected with test dependencies\n+            HashSet<Path> dependencyJarPaths = new HashSet<>(moduleDependencies);\n+\n+            if (bLangPackage.containsTestablePkg()) {\n+                for (BLangTestablePackage testablePackage : bLangPackage.getTestablePkgs()) {\n+                    // find the set of dependency jar paths for running test for this module and update", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE4Mjk2OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxNjoyM1rOFolD7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxNjoyM1rOFolD7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NDU3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // Create a class loader to run tests.\n          \n          \n            \n                        // Create a class loader to run the tests.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378094574", "createdAt": "2020-02-12T08:16:23Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ListTestGroupsTask.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.ballerinalang.testerina.util.TestarinaClassLoader;\n+import org.ballerinalang.testerina.util.TesterinaUtils;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangTestablePackage;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.ballerinalang.packerina.utils.TestFileUtils.updateDependencyJarPaths;\n+\n+/**\n+ * Task for listing groups defined in tests.\n+ *\n+ * @since 1.1.2\n+ */\n+public class ListTestGroupsTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRootPath = buildContext.get(BuildContextField.SOURCE_ROOT);\n+\n+        Map<BLangPackage, TestarinaClassLoader> programFileMap = new HashMap<>();\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        // Only tests in packages are executed so default packages i.e. single bal files which has the package name\n+        // as \".\" are ignored. This is to be consistent with the \"ballerina test\" command which only executes tests\n+        // in packages.\n+        for (BLangPackage bLangPackage : moduleBirMap) {\n+            PackageID packageID = bLangPackage.packageID;\n+\n+            if (!buildContext.moduleDependencyPathMap.containsKey(packageID)) {\n+                continue;\n+            }\n+\n+            // todo following is some legacy logic check if we need to do this.\n+            // if (bLangPackage.containsTestablePkg()) {\n+            // } else {\n+            // In this package there are no tests to be executed. But we need to say to the users that\n+            // there are no tests found in the package to be executed as :\n+            // Running tests\n+            //     <org-name>/<package-name>:<version>\n+            //         No tests found\n+            // }\n+            Path jarPath = buildContext.getTestJarPathFromTargetCache(packageID);\n+            Path modulejarPath = buildContext.getJarPathFromTargetCache(packageID);\n+            // subsitute test jar if module jar if tests not exists\n+            if (Files.notExists(jarPath)) {\n+                jarPath = modulejarPath;\n+            }\n+\n+            HashSet<Path> moduleDependencies = buildContext.moduleDependencyPathMap.get(packageID).platformLibs;\n+            // create a new set so that original set is not affected with test dependencies\n+            HashSet<Path> dependencyJarPaths = new HashSet<>(moduleDependencies);\n+\n+            if (bLangPackage.containsTestablePkg()) {\n+                for (BLangTestablePackage testablePackage : bLangPackage.getTestablePkgs()) {\n+                    // find the set of dependency jar paths for running test for this module and update\n+                    updateDependencyJarPaths(testablePackage.symbol.imports, buildContext, dependencyJarPaths);\n+                }\n+            }\n+\n+            // Create a class loader to run tests.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE4NDA2OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/utils/TestFileUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxNjo0MFrOFolEfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxNjo0MFrOFolEfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NDcxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Updates paths of dependency jars for test execution.\n          \n          \n            \n                 * Updates paths of dependency JARs for test execution.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378094717", "createdAt": "2020-02-12T08:16:40Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/utils/TestFileUtils.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.packerina.utils;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.wso2.ballerinalang.compiler.semantics.model.symbols.BPackageSymbol;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+/**\n+ * Utilities related to test files.\n+ */\n+public class TestFileUtils {\n+\n+    /**\n+     * Updates paths of dependency jars for test execution.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE4NTM1OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/utils/TestFileUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxNzowNFrOFolFOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxNzowNFrOFolFOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NDkwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // add imported module's dependent jar paths\n          \n          \n            \n                        // Add the dependent JAR paths of the imported modules", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378094907", "createdAt": "2020-02-12T08:17:04Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/utils/TestFileUtils.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.packerina.utils;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.wso2.ballerinalang.compiler.semantics.model.symbols.BPackageSymbol;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+/**\n+ * Utilities related to test files.\n+ */\n+public class TestFileUtils {\n+\n+    /**\n+     * Updates paths of dependency jars for test execution.\n+     *\n+     * @param importPackageSymbols  list of import package symbols\n+     * @param buildContext build context\n+     * @param dependencyJarPaths paths of dependency jars\n+     */\n+    public static void updateDependencyJarPaths(List<BPackageSymbol> importPackageSymbols, BuildContext buildContext,\n+                                          HashSet<Path> dependencyJarPaths) {\n+        for (BPackageSymbol importPackageSymbol : importPackageSymbols) {\n+            PackageID importPkgId = importPackageSymbol.pkgID;\n+            if (!buildContext.moduleDependencyPathMap.containsKey(importPkgId)) {\n+                continue;\n+            }\n+            // add imported module's dependent jar paths", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE4NjM0OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/utils/TestFileUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxNzoyN1rOFolFyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxNzoyN1rOFolFyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NTA1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // add imported module's jar path\n          \n          \n            \n                        // Add the JAR path of the imported module\n          \n      \n    \n    \n  \n\nIt seems this is the same comment as the above one. Please check.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378095051", "createdAt": "2020-02-12T08:17:27Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/utils/TestFileUtils.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.packerina.utils;\n+\n+import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.wso2.ballerinalang.compiler.semantics.model.symbols.BPackageSymbol;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+/**\n+ * Utilities related to test files.\n+ */\n+public class TestFileUtils {\n+\n+    /**\n+     * Updates paths of dependency jars for test execution.\n+     *\n+     * @param importPackageSymbols  list of import package symbols\n+     * @param buildContext build context\n+     * @param dependencyJarPaths paths of dependency jars\n+     */\n+    public static void updateDependencyJarPaths(List<BPackageSymbol> importPackageSymbols, BuildContext buildContext,\n+                                          HashSet<Path> dependencyJarPaths) {\n+        for (BPackageSymbol importPackageSymbol : importPackageSymbols) {\n+            PackageID importPkgId = importPackageSymbol.pkgID;\n+            if (!buildContext.moduleDependencyPathMap.containsKey(importPkgId)) {\n+                continue;\n+            }\n+            // add imported module's dependent jar paths\n+            HashSet<Path> testDependencies = buildContext.moduleDependencyPathMap.get(importPkgId).platformLibs;\n+            dependencyJarPaths.addAll(testDependencies);\n+\n+            // add imported module's jar path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE4ODI1OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxODowOVrOFolG-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxODowOVrOFolG-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NTM1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                       tags that are added to test functions. The groups are used to\n          \n          \n            \n                       tags that are added to test functions. They are used to", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378095352", "createdAt": "2020-02-12T08:18:09Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "diffHunk": "@@ -22,6 +22,31 @@ OPTIONS\n            '--offline' option is specified, this remote check is not done and\n            the local artifacts will be used instead.\n \n+       -lg\n+       --list-groups\n+           Lists the test groups available in the test files. Groups are\n+           tags that are added to test functions. The groups are used to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE4OTIxOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxODoyOVrOFolHig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxODoyOVrOFolHig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NTQ5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                       Specify test groups to be executed. Groups are tags that are\n          \n          \n            \n                       Specifies the test groups to be executed. Groups are tags that are", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378095498", "createdAt": "2020-02-12T08:18:29Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "diffHunk": "@@ -22,6 +22,31 @@ OPTIONS\n            '--offline' option is specified, this remote check is not done and\n            the local artifacts will be used instead.\n \n+       -lg\n+       --list-groups\n+           Lists the test groups available in the test files. Groups are\n+           tags that are added to test functions. The groups are used to\n+           control the execution of test functions by specifying a\n+           group or a set of groups that need to be executed in a test\n+           run. A test function can be grouped using the 'groups' parameter within the\n+           '@test:Config' annotation.\n+\n+       --groups <test_group, ...>\n+           Specify test groups to be executed. Groups are tags that are", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE4OTg4OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxODo0NVrOFolH_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxODo0NVrOFolH_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NTYxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                       added to test functions. The groups are used to control the\n          \n          \n            \n                       added to test functions. They are used to control the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378095613", "createdAt": "2020-02-12T08:18:45Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "diffHunk": "@@ -22,6 +22,31 @@ OPTIONS\n            '--offline' option is specified, this remote check is not done and\n            the local artifacts will be used instead.\n \n+       -lg\n+       --list-groups\n+           Lists the test groups available in the test files. Groups are\n+           tags that are added to test functions. The groups are used to\n+           control the execution of test functions by specifying a\n+           group or a set of groups that need to be executed in a test\n+           run. A test function can be grouped using the 'groups' parameter within the\n+           '@test:Config' annotation.\n+\n+       --groups <test_group, ...>\n+           Specify test groups to be executed. Groups are tags that are\n+           added to test functions. The groups are used to control the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE5MTAzOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxOToxMVrOFolIrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxOToxMVrOFolIrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NTc5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                       Specify test groups to be excluded. Groups are tags that are\n          \n          \n            \n                       Specifies the test groups to be excluded. Groups are tags that are", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378095791", "createdAt": "2020-02-12T08:19:11Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "diffHunk": "@@ -22,6 +22,31 @@ OPTIONS\n            '--offline' option is specified, this remote check is not done and\n            the local artifacts will be used instead.\n \n+       -lg\n+       --list-groups\n+           Lists the test groups available in the test files. Groups are\n+           tags that are added to test functions. The groups are used to\n+           control the execution of test functions by specifying a\n+           group or a set of groups that need to be executed in a test\n+           run. A test function can be grouped using the 'groups' parameter within the\n+           '@test:Config' annotation.\n+\n+       --groups <test_group, ...>\n+           Specify test groups to be executed. Groups are tags that are\n+           added to test functions. The groups are used to control the\n+           execution of test functions by specifying a group or a set of\n+           groups that need to be executed in a test run. A test\n+           function can be grouped using the 'groups' parameter within the\n+           '@test:Config' annotation.\n+\n+       --disable-groups <test_group, ...>\n+           Specify test groups to be excluded. Groups are tags that are", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE5MTQwOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxOToxOVrOFolI4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxOToxOVrOFolI4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NTg0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                       added to test functions. The groups are used to control the\n          \n          \n            \n                       added to test functions. They are used to control the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378095843", "createdAt": "2020-02-12T08:19:19Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "diffHunk": "@@ -22,6 +22,31 @@ OPTIONS\n            '--offline' option is specified, this remote check is not done and\n            the local artifacts will be used instead.\n \n+       -lg\n+       --list-groups\n+           Lists the test groups available in the test files. Groups are\n+           tags that are added to test functions. The groups are used to\n+           control the execution of test functions by specifying a\n+           group or a set of groups that need to be executed in a test\n+           run. A test function can be grouped using the 'groups' parameter within the\n+           '@test:Config' annotation.\n+\n+       --groups <test_group, ...>\n+           Specify test groups to be executed. Groups are tags that are\n+           added to test functions. The groups are used to control the\n+           execution of test functions by specifying a group or a set of\n+           groups that need to be executed in a test run. A test\n+           function can be grouped using the 'groups' parameter within the\n+           '@test:Config' annotation.\n+\n+       --disable-groups <test_group, ...>\n+           Specify test groups to be excluded. Groups are tags that are\n+           added to test functions. The groups are used to control the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE5MjIzOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxOTozM1rOFolJVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxOTozM1rOFolJVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NTk1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List all test groups in math module.\n          \n          \n            \n                    Lists all test groups in the math module.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378095957", "createdAt": "2020-02-12T08:19:33Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "diffHunk": "@@ -51,3 +76,10 @@ EXAMPLES\n \n         Run tests in math module.\n            $ ballerina test math\n+\n+        List all test groups in math module.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE5MjgyOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxOTo0N1rOFolJqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoxOTo0N1rOFolJqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NjA0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Run only the set of tests belonging to group_x in the current project\n          \n          \n            \n                    Runs only the set of tests belonging to group_x in the current project", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096042", "createdAt": "2020-02-12T08:19:47Z", "author": {"login": "praneesha"}, "path": "cli/ballerina-tool/src/main/resources/cli-help/ballerina-test.help", "diffHunk": "@@ -51,3 +76,10 @@ EXAMPLES\n \n         Run tests in math module.\n            $ ballerina test math\n+\n+        List all test groups in math module.\n+        $ ballerina test -lg math\n+\n+        Run only the set of tests belonging to group_x in the current project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE5MzMyOnYy", "diffSide": "RIGHT", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/BTestRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMDowMVrOFolJ_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMDowMVrOFolJ_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NjEyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Executes a given set of ballerina program files when running tests in unit tests.\n          \n          \n            \n                 * Executes a given set of Ballerina program files when running tests in the unit tests.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096125", "createdAt": "2020-02-12T08:20:01Z", "author": {"login": "praneesha"}, "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/BTestRunner.java", "diffHunk": "@@ -126,7 +126,7 @@ public void runTest(String sourceRoot, Path[] sourceFilePaths, List<String> grou\n     }\n \n     /**\n-     * Executes a given set of ballerina program files when running tests using the test command.\n+     * Executes a given set of ballerina program files when running tests in unit tests.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE5Mzc4OnYy", "diffSide": "RIGHT", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/BTestRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMDoxMlrOFolKPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMDoxMlrOFolKPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NjE5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Executes a given set of ballerina program files when running tests using the build/test command.\n          \n          \n            \n                 * Executes a given set of Ballerina program files when running tests using the build/test command.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096190", "createdAt": "2020-02-12T08:20:12Z", "author": {"login": "praneesha"}, "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/BTestRunner.java", "diffHunk": "@@ -146,7 +146,7 @@ public void runTest(String sourceRoot, Path[] sourceFilePaths, List<String> grou\n     }\n \n     /**\n-     * Executes a given set of ballerina program files when running tests using the build command.\n+     * Executes a given set of ballerina program files when running tests using the build/test command.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE5NDM2OnYy", "diffSide": "RIGHT", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/BTestRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMDoyN1rOFolKpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMDoyN1rOFolKpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NjI5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Build the test suites\n          \n          \n            \n                    //Builds the test suites.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096292", "createdAt": "2020-02-12T08:20:27Z", "author": {"login": "praneesha"}, "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/BTestRunner.java", "diffHunk": "@@ -174,10 +174,27 @@ private void filterTestSuites() {\n     }\n \n     /**\n-     * lists the groups available in tests.\n+     * Lists the groups available in tests.\n      *\n-     * @param sourceRoot        source root of the project\n-     * @param sourceFilePaths   module or program file paths\n+     * @param packageList map containing bLangPackage nodes along with their compiled program files\n+     */\n+    public void listGroups(Map<BLangPackage, TestarinaClassLoader> packageList) {\n+        //Build the test suites", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE5NDk5OnYy", "diffSide": "RIGHT", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/BTestRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMDozOFrOFolK_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMDozOFrOFolK_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NjM4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Lists the groups available in tests. This method is used for unit testing.\n          \n          \n            \n                 * Lists the groups available in the tests. This method is used for unit testing.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096381", "createdAt": "2020-02-12T08:20:38Z", "author": {"login": "praneesha"}, "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/BTestRunner.java", "diffHunk": "@@ -174,10 +174,27 @@ private void filterTestSuites() {\n     }\n \n     /**\n-     * lists the groups available in tests.\n+     * Lists the groups available in tests.\n      *\n-     * @param sourceRoot        source root of the project\n-     * @param sourceFilePaths   module or program file paths\n+     * @param packageList map containing bLangPackage nodes along with their compiled program files\n+     */\n+    public void listGroups(Map<BLangPackage, TestarinaClassLoader> packageList) {\n+        //Build the test suites\n+        buildSuites(packageList);\n+        List<String> groupList = getGroupList();\n+        if (groupList.size() == 0) {\n+            outStream.println(\"There are no groups available!\");\n+        } else {\n+            outStream.println(\"Following groups are available : \");\n+            outStream.println(groupList);\n+        }\n+    }\n+\n+    /**\n+     * Lists the groups available in tests. This method is used for unit testing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE5NTkwOnYy", "diffSide": "RIGHT", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/BTestRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMDo1NVrOFolLig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMDo1NVrOFolLig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NjUyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param sourceFilePaths module or program file paths\n          \n          \n            \n                 * @param sourceFilePaths file paths of the module or program", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096522", "createdAt": "2020-02-12T08:20:55Z", "author": {"login": "praneesha"}, "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/core/BTestRunner.java", "diffHunk": "@@ -174,10 +174,27 @@ private void filterTestSuites() {\n     }\n \n     /**\n-     * lists the groups available in tests.\n+     * Lists the groups available in tests.\n      *\n-     * @param sourceRoot        source root of the project\n-     * @param sourceFilePaths   module or program file paths\n+     * @param packageList map containing bLangPackage nodes along with their compiled program files\n+     */\n+    public void listGroups(Map<BLangPackage, TestarinaClassLoader> packageList) {\n+        //Build the test suites\n+        buildSuites(packageList);\n+        List<String> groupList = getGroupList();\n+        if (groupList.size() == 0) {\n+            outStream.println(\"There are no groups available!\");\n+        } else {\n+            outStream.println(\"Following groups are available : \");\n+            outStream.println(groupList);\n+        }\n+    }\n+\n+    /**\n+     * Lists the groups available in tests. This method is used for unit testing.\n+     *\n+     * @param sourceRoot source root of the project\n+     * @param sourceFilePaths module or program file paths", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE5NjU1OnYy", "diffSide": "RIGHT", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/util/TesterinaUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMToxMFrOFolL8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMToxMFrOFolL8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NjYyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param outStream      error stream for logging.\n          \n          \n            \n                 * @param outStream      error stream for logging", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096627", "createdAt": "2020-02-12T08:21:10Z", "author": {"login": "praneesha"}, "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/util/TesterinaUtils.java", "diffHunk": "@@ -104,14 +104,27 @@ public static void setManifestConfigs(Path sourceRoot) {\n     }\n \n     /**\n-     * Execute tests in build.\n+     * Method to be used in unit tests to list test groups.\n      *\n      * @param sourceRootPath source root path\n      * @param programFileMap map containing bLangPackage nodes along with their compiled program files\n+     * @param outStream      error stream for logging.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE5NjgwOnYy", "diffSide": "RIGHT", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/util/TesterinaUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMToxOFrOFolMJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMToxOFrOFolMJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5NjY3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param errStream      info stream for logging.\n          \n          \n            \n                 * @param errStream      info stream for logging", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096678", "createdAt": "2020-02-12T08:21:18Z", "author": {"login": "praneesha"}, "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/util/TesterinaUtils.java", "diffHunk": "@@ -104,14 +104,27 @@ public static void setManifestConfigs(Path sourceRoot) {\n     }\n \n     /**\n-     * Execute tests in build.\n+     * Method to be used in unit tests to list test groups.\n      *\n      * @param sourceRootPath source root path\n      * @param programFileMap map containing bLangPackage nodes along with their compiled program files\n+     * @param outStream      error stream for logging.\n+     * @param errStream      info stream for logging.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE5NzUwOnYy", "diffSide": "RIGHT", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/util/TesterinaUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMTozMlrOFolMjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMTozMlrOFolMjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5Njc4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Set org-name and version to the Testerina Registry.\n          \n          \n            \n                    // Sets the org-name and version to the Testerina Registry.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096782", "createdAt": "2020-02-12T08:21:32Z", "author": {"login": "praneesha"}, "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/util/TesterinaUtils.java", "diffHunk": "@@ -104,14 +104,27 @@ public static void setManifestConfigs(Path sourceRoot) {\n     }\n \n     /**\n-     * Execute tests in build.\n+     * Method to be used in unit tests to list test groups.\n      *\n      * @param sourceRootPath source root path\n      * @param programFileMap map containing bLangPackage nodes along with their compiled program files\n+     * @param outStream      error stream for logging.\n+     * @param errStream      info stream for logging.\n      */\n-    public static void executeTests(Path sourceRootPath, Map<BLangPackage, TestarinaClassLoader>\n-            programFileMap) {\n-        executeTests(sourceRootPath, programFileMap, System.out, System.err);\n+    public static void listTestGroups(Path sourceRootPath, Map<BLangPackage, TestarinaClassLoader> programFileMap,\n+                                      PrintStream outStream, PrintStream errStream) {\n+        // Set org-name and version to the Testerina Registry.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE5NzkyOnYy", "diffSide": "RIGHT", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/util/TesterinaUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMTozOVrOFolMyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyMTozOVrOFolMyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5Njg0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Run the tests\n          \n          \n            \n                    // Runs the tests.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20883#discussion_r378096840", "createdAt": "2020-02-12T08:21:39Z", "author": {"login": "praneesha"}, "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/util/TesterinaUtils.java", "diffHunk": "@@ -104,14 +104,27 @@ public static void setManifestConfigs(Path sourceRoot) {\n     }\n \n     /**\n-     * Execute tests in build.\n+     * Method to be used in unit tests to list test groups.\n      *\n      * @param sourceRootPath source root path\n      * @param programFileMap map containing bLangPackage nodes along with their compiled program files\n+     * @param outStream      error stream for logging.\n+     * @param errStream      info stream for logging.\n      */\n-    public static void executeTests(Path sourceRootPath, Map<BLangPackage, TestarinaClassLoader>\n-            programFileMap) {\n-        executeTests(sourceRootPath, programFileMap, System.out, System.err);\n+    public static void listTestGroups(Path sourceRootPath, Map<BLangPackage, TestarinaClassLoader> programFileMap,\n+                                      PrintStream outStream, PrintStream errStream) {\n+        // Set org-name and version to the Testerina Registry.\n+        setManifestConfigs(sourceRootPath);\n+\n+        BTestRunner testRunner = new BTestRunner(outStream, errStream);\n+        // Run the tests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a2dffe7b090af16b24d5c7c1b14c033450d578c"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1158, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}