{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzODAzOTgy", "number": 26364, "title": "Remove DiagnosticSource and DiagnosticPos usages", "bodyText": "Purpose\nRemove DiagnosticSource and DiagnosticPos usages\nFixes #25800\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-10-15T05:03:58Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26364", "merged": true, "mergeCommit": {"oid": "6ba3e01d88960835de02e6d079ba232caf255d01"}, "closed": true, "closedAt": "2020-10-21T07:25:48Z", "author": {"login": "dulajdilshan"}, "timelineItems": {"totalCount": 38, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSrR8DgBqjM4Nzk2OTI0NDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUoMecgFqTUxMzM3NzcxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e0580e8ab0f58b4a96f90bfb46764bc2900c5f9c", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e0580e8ab0f58b4a96f90bfb46764bc2900c5f9c", "committedDate": "2020-10-15T04:55:02Z", "message": "Deprecate DiagnosticPos and DiagnosticPosition"}, "afterCommit": {"oid": "ba972d0cb40a4b444762b9169f4444dd7a14d7be", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ba972d0cb40a4b444762b9169f4444dd7a14d7be", "committedDate": "2020-10-15T05:42:39Z", "message": "Deprecate DiagnosticPos and DiagnosticPosition"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba972d0cb40a4b444762b9169f4444dd7a14d7be", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ba972d0cb40a4b444762b9169f4444dd7a14d7be", "committedDate": "2020-10-15T05:42:39Z", "message": "Deprecate DiagnosticPos and DiagnosticPosition"}, "afterCommit": {"oid": "7ee8a17c45ef684d85b624890911ebfca6d78bb4", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7ee8a17c45ef684d85b624890911ebfca6d78bb4", "committedDate": "2020-10-16T19:35:45Z", "message": "Fix checkstyle errors and spotbug errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80baaff2e08d288438a419015f32e8ec3046f371", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/80baaff2e08d288438a419015f32e8ec3046f371", "committedDate": "2020-10-16T22:31:53Z", "message": "Remove DiagnosticSource usages through BLangCompilationUnit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8dbf993f7909460f96902a728116be4d038bf6c", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d8dbf993f7909460f96902a728116be4d038bf6c", "committedDate": "2020-10-16T22:31:53Z", "message": "Replace BDiagnosticSource's APIs with new APIs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1969befa67ed694a97524fd4b178fe1a35ef5fb", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d1969befa67ed694a97524fd4b178fe1a35ef5fb", "committedDate": "2020-10-16T22:31:54Z", "message": "Add location to BLangNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e0562fde0d5095e5bb226cd13bc531201c8b208", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0e0562fde0d5095e5bb226cd13bc531201c8b208", "committedDate": "2020-10-16T22:31:54Z", "message": "Add more support for tools-api/Location"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96d893d9f4046c79d7944e1bef98eeffeb23f766", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/96d893d9f4046c79d7944e1bef98eeffeb23f766", "committedDate": "2020-10-16T22:31:54Z", "message": "Replace BDiagnosticSource's APIs in BirTestUtils with new APIs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cd7a7d1584ac7877cd88cf8b2155ed2baa134d9", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5cd7a7d1584ac7877cd88cf8b2155ed2baa134d9", "committedDate": "2020-10-16T22:31:54Z", "message": "Remove DeleteRange and its usages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b43e5f9eefc8c8776d7ecc586ec1f9aa1b42e4ae", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b43e5f9eefc8c8776d7ecc586ec1f9aa1b42e4ae", "committedDate": "2020-10-16T22:31:54Z", "message": "Remove DiagnosticSource and its usages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca45c45dffcd6f8ce32c5391ef481fb97d9dc138", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ca45c45dffcd6f8ce32c5391ef481fb97d9dc138", "committedDate": "2020-10-16T22:31:54Z", "message": "Replace DiagnosticPos usages with BLangDiagnosticLocation APIs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fd748f6ee1da10ca7bbc932c759c7bb76377d3d", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4fd748f6ee1da10ca7bbc932c759c7bb76377d3d", "committedDate": "2020-10-16T22:31:54Z", "message": "Deprecate DiagnosticPos and DiagnosticPosition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2de9b479ee18978e4f6061c209f5b23b3657f306", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2de9b479ee18978e4f6061c209f5b23b3657f306", "committedDate": "2020-10-16T22:31:55Z", "message": "Remove package-id from diagnostic location"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cc21af1e0427f24d2be284194a38a2fcc44d77a", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2cc21af1e0427f24d2be284194a38a2fcc44d77a", "committedDate": "2020-10-16T22:31:55Z", "message": "Remove duplicate 'location'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "686b1eab9a367804de8a57b832e162f122e9195a", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/686b1eab9a367804de8a57b832e162f122e9195a", "committedDate": "2020-10-17T16:57:16Z", "message": "Fix checkstyle errors and spotbug errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6854823ce1c9f9b9ff7a9c0ec776b09bd5f0b5ec", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6854823ce1c9f9b9ff7a9c0ec776b09bd5f0b5ec", "committedDate": "2020-10-17T16:57:16Z", "message": "Fix ballerina-compiler-api test failing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ee8a17c45ef684d85b624890911ebfca6d78bb4", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7ee8a17c45ef684d85b624890911ebfca6d78bb4", "committedDate": "2020-10-16T19:35:45Z", "message": "Fix checkstyle errors and spotbug errors"}, "afterCommit": {"oid": "6854823ce1c9f9b9ff7a9c0ec776b09bd5f0b5ec", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6854823ce1c9f9b9ff7a9c0ec776b09bd5f0b5ec", "committedDate": "2020-10-17T16:57:16Z", "message": "Fix ballerina-compiler-api test failing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0111df9083f8c8b3f1688e4e7dfea61c381acc34", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0111df9083f8c8b3f1688e4e7dfea61c381acc34", "committedDate": "2020-10-19T04:42:00Z", "message": "Replace getStartLine(), getEndLine(), getStartColumn() and getEndColumn()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "852f10fa5846000d6ae3fb158a1aa5af8c12f23c", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/852f10fa5846000d6ae3fb158a1aa5af8c12f23c", "committedDate": "2020-10-19T04:46:44Z", "message": "Add a constructor to create BLangLocation objects with given line-range and text-range"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82834b3c805d07f1eca52beb3276baab0fe2089d", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/82834b3c805d07f1eca52beb3276baab0fe2089d", "committedDate": "2020-10-19T04:47:11Z", "message": "Rename 'storeDiagnosticInPackage' to 'storeDiagnosticInModule'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "879fe81a5bfa536ea681759e5e10cfff0d176400", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/879fe81a5bfa536ea681759e5e10cfff0d176400", "committedDate": "2020-10-19T05:01:32Z", "message": "Merge branch 'master' into diagnostic-change\n\n# Conflicts:\n#\tmisc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormatterUtils.java\n#\tmisc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNDM5MDEw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26364#pullrequestreview-511439010", "createdAt": "2020-10-19T06:19:15Z", "commit": {"oid": "879fe81a5bfa536ea681759e5e10cfff0d176400"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNjoxOToxNVrOHj_HWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNjo0MzoyMlrOHj_yzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ5NjI4Mw==", "bodyText": "cursorPos.lineRange().startLine() and location.lineRange().startLine() is called multiple times.\nBetter to extract that to a variable.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26364#discussion_r507496283", "createdAt": "2020-10-19T06:19:15Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java", "diffHunk": "@@ -161,9 +160,38 @@ public BallerinaSemanticModel(BLangPackage bLangPackage, CompilerContext context\n \n     // Private helper methods for the public APIs above.\n \n-    private boolean isSymbolInUserProject(BSymbol symbol, DiagnosticPos cursorPos) {\n+    private boolean isSymbolInUserProject(BSymbol symbol, BLangDiagnosticLocation cursorPos) {\n+        String packageDetailsString = bLangPackage.packageID.name.value\n+                + bLangPackage.packageID.getPackageVersion().value\n+                + cursorPos.lineRange().filePath();\n+        String symbolPackageDetailsString = symbol.pkgID.name.value\n+                + symbol.pkgID.getPackageVersion().value\n+                + symbol.pos.lineRange().filePath();\n+\n+        int value = packageDetailsString.compareTo(symbolPackageDetailsString);\n+\n+        BLangDiagnosticLocation location = symbol.pos;\n+\n+        if (value == 0) {\n+            // If the package detail strings are same, then compare the start line.\n+            if (cursorPos.lineRange().startLine().line() < location.lineRange().startLine().line()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879fe81a5bfa536ea681759e5e10cfff0d176400"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ5Nzk2NQ==", "bodyText": "Can't we simply use PackageID.equals()?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26364#discussion_r507497965", "createdAt": "2020-10-19T06:21:54Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java", "diffHunk": "@@ -161,9 +160,38 @@ public BallerinaSemanticModel(BLangPackage bLangPackage, CompilerContext context\n \n     // Private helper methods for the public APIs above.\n \n-    private boolean isSymbolInUserProject(BSymbol symbol, DiagnosticPos cursorPos) {\n+    private boolean isSymbolInUserProject(BSymbol symbol, BLangDiagnosticLocation cursorPos) {\n+        String packageDetailsString = bLangPackage.packageID.name.value\n+                + bLangPackage.packageID.getPackageVersion().value\n+                + cursorPos.lineRange().filePath();\n+        String symbolPackageDetailsString = symbol.pkgID.name.value\n+                + symbol.pkgID.getPackageVersion().value\n+                + symbol.pos.lineRange().filePath();\n+\n+        int value = packageDetailsString.compareTo(symbolPackageDetailsString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879fe81a5bfa536ea681759e5e10cfff0d176400"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ5OTMwOA==", "bodyText": "We should use interface classes (i.e: Location) in these method signatures", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26364#discussion_r507499308", "createdAt": "2020-10-19T06:24:09Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/symbols/Symbol.java", "diffHunk": "@@ -45,7 +45,7 @@\n \n     List<? extends Symbol> getEnclosedSymbols();\n \n-    DiagnosticPosition getPosition();\n+    BLangDiagnosticLocation getPosition();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879fe81a5bfa536ea681759e5e10cfff0d176400"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUwMDU3NQ==", "bodyText": "Same here.\nLet's update in all places.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26364#discussion_r507500575", "createdAt": "2020-10-19T06:26:08Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticLog.java", "diffHunk": "@@ -30,12 +32,19 @@\n \n \n     /**\n-     * Logs a message of the specified {@link Diagnostic.Kind} at the {@link DiagnosticPosition}.\n+     * Logs a message of the specified {@link Diagnostic.Kind} at the {@link BLangDiagnosticLocation}.\n      *\n      * @param kind    the kind of the diagnostic\n      * @param pos     the position of the source code element.\n      * @param message the message\n      */\n-    void logDiagnostic(Kind kind, DiagnosticPosition pos, CharSequence message);\n+    void logDiagnostic(Kind kind, BLangDiagnosticLocation pos, CharSequence message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879fe81a5bfa536ea681759e5e10cfff0d176400"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUwMDc1Nw==", "bodyText": "Same", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26364#discussion_r507500757", "createdAt": "2020-10-19T06:26:32Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/BIRPackageSymbolEnter.java", "diffHunk": "@@ -426,7 +422,7 @@ private void defineGlobalVarDependencies(BInvokableSymbol invokableSymbol, DataI\n     }\n \n     private void defineTypeDef(DataInputStream dataInStream) throws IOException {\n-        DiagnosticPos pos = readPosition(dataInStream);\n+        BLangDiagnosticLocation pos = readPosition(dataInStream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879fe81a5bfa536ea681759e5e10cfff0d176400"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUwMjM0NQ==", "bodyText": "Having the current package ID in the logger can be problematic. Only one logger is created per compilation. But a single compilation can have multiple modules.\nSo here it is expected to set the currentPackageId before visiting the package. That makes us depend on the order of usage of the methods, and also makes it easy for someone to miss it out.\nShall we send package ID as a parameter to the diagnostic reporting function every-time?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26364#discussion_r507502345", "createdAt": "2020-10-19T06:30:37Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/diagnostic/BLangDiagnosticLog.java", "diffHunk": "@@ -49,13 +47,15 @@\n \n     private int errorCount = 0;\n     private PackageCache packageCache;\n+    private PackageID currentPackageId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879fe81a5bfa536ea681759e5e10cfff0d176400"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUwNTQxNQ==", "bodyText": "Lets remove these commented out code", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26364#discussion_r507505415", "createdAt": "2020-10-19T06:38:33Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/Parser.java", "diffHunk": "@@ -117,30 +114,41 @@ private CompilationUnitNode generateCompilationUnitNew(CompilerInput sourceEntry\n             return compilationUnit;\n         }\n \n-        BLangNodeTransformer bLangNodeTransformer = new BLangNodeTransformer(this.context, diagnosticSource);\n+        BLangNodeTransformer bLangNodeTransformer = new BLangNodeTransformer(this.context, packageID, entryName);\n         compilationUnit = (BLangCompilationUnit) bLangNodeTransformer.accept(tree.rootNode()).get(0);\n+        compilationUnit.setPackageID(packageID);\n         parserCache.put(packageID, entryName, hash, length, compilationUnit);\n         // Node cloner will run for valid ASTs.\n         // This will verify, any modification done to the AST will get handled properly.\n         compilationUnit = nodeCloner.cloneCUnit(compilationUnit);\n         return compilationUnit;\n     }\n \n-    private BDiagnosticSource getDiagnosticSource(CompilerInput sourceEntry, PackageID packageID) {\n-        String entryName = sourceEntry.getEntryName();\n-        return new BDiagnosticSource(packageID, entryName);\n-    }\n-\n-\n     private static int getHash(byte[] code) {\n         // Assuming hash collision is unlikely in a modified source.\n         // Additionally code.Length is considered to avoid hash collision.\n         return Arrays.hashCode(code);\n     }\n \n-    private void reportSyntaxDiagnostics(BDiagnosticSource diagnosticSource, SyntaxTree tree) {\n+    private void reportSyntaxDiagnostics(String cUnitName, PackageID pkgID, SyntaxTree tree) {\n         for (Diagnostic syntaxDiagnostic : tree.diagnostics()) {\n-            dlog.logDiagnostic(diagnosticSource.pkgID, syntaxDiagnostic);\n+            dlog.logDiagnostic(pkgID, syntaxDiagnostic);\n         }\n     }\n+\n+//    private void reportSyntaxDiagnostics(String cUnitName, PackageID pkgID, SyntaxTree tree) {\n+//        for (Diagnostic syntaxDiagnostic : tree.diagnostics()) {\n+//            // This conversion is needed because the compiler diagnostic locations starting index\n+//            // is 1, where as syntax diagnostics locations starting index is 0.\n+//            Location syntaxLocation = syntaxDiagnostic.location();\n+//            LineRange lineRange = syntaxLocation.lineRange();\n+//            LinePosition startLine = lineRange.startLine();\n+//            LinePosition endLine = lineRange.startLine();\n+//            Location location = new BLangDiagnosticLocation(cUnitName, pkgID, startLine.line() + 1,\n+//                    endLine.line() + 1, startLine.offset() + 1, endLine.offset() + 1);\n+//            BLangDiagnostic diag =\n+//                    new BLangDiagnostic(location, syntaxDiagnostic.message(), syntaxDiagnostic.diagnosticInfo());\n+//            dlog.logDiagnostic(pkgID, diag);\n+//        }\n+//    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879fe81a5bfa536ea681759e5e10cfff0d176400"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUwNzQwNg==", "bodyText": "Looks like this constructor is never used", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26364#discussion_r507507406", "createdAt": "2020-10-19T06:43:22Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/diagnostic/BLangDiagnosticLocation.java", "diffHunk": "@@ -34,12 +34,18 @@\n     private LineRange lineRange;\n     private TextRange textRange;\n \n+    @Deprecated\n     public BLangDiagnosticLocation(String filePath, int startLine, int endLine, int startColumn, int endColumn) {\n         this.lineRange = LineRange.from(filePath, LinePosition.from(startLine, startColumn),\n                 LinePosition.from(endLine, endColumn));\n         this.textRange = TextRange.from(0, 0);\n     }\n \n+    public BLangDiagnosticLocation(LineRange lineRange, TextRange textRange) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879fe81a5bfa536ea681759e5e10cfff0d176400"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5907182c977a0d19464cd8bd9586c217fb7ec46", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f5907182c977a0d19464cd8bd9586c217fb7ec46", "committedDate": "2020-10-19T12:13:14Z", "message": "Replace BLangDiagnosticLocation with Location for variable types & parameter types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a36604c07ffc4d93dff3a205754ca2630ffad8e3", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a36604c07ffc4d93dff3a205754ca2630ffad8e3", "committedDate": "2020-10-19T12:43:04Z", "message": "Remove unwanted comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8188b74d9cd4c94e9b866b15b94f4baee97cd25", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b8188b74d9cd4c94e9b866b15b94f4baee97cd25", "committedDate": "2020-10-20T06:50:01Z", "message": "Refactor isSymbolInUserProject()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0be55e0027b057f6b75b9a7a20aa7ef142b66cd8", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0be55e0027b057f6b75b9a7a20aa7ef142b66cd8", "committedDate": "2020-10-20T07:20:30Z", "message": "Merge branch 'master' into diagnostic-change\n\n# Conflicts:\n#\tcli/ballerina-packerina/src/main/java/module-info.java\n#\tcompiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CompilerPluginRunner.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java\n#\tlanguage-server/modules/langserver-core/src/main/java/module-info.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/codeaction/builder/impl/ChangeReturnTypeCodeAction.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/common/utils/CommonUtil.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/TreeVisitor.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/CompletionVisitorUtil.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/positioning/resolvers/BlockStatementScopeResolver.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/positioning/resolvers/CursorPositionResolver.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/positioning/resolvers/ForkJoinStatementScopeResolver.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/positioning/resolvers/FunctionNodeScopeResolver.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/positioning/resolvers/InvocationParameterScopeResolver.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/positioning/resolvers/ListConstructorScopeResolver.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/positioning/resolvers/MatchExpressionScopeResolver.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/positioning/resolvers/MatchStatementScopeResolver.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/positioning/resolvers/ObjectTypeScopeResolver.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/positioning/resolvers/PackageNodeScopeResolver.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/positioning/resolvers/RecordLiteralScopeResolver.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/positioning/resolvers/RecordScopeResolver.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/positioning/resolvers/ResourceParamScopeResolver.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/positioning/resolvers/ServiceScopeResolver.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/util/positioning/resolvers/TopLevelNodeScopeResolver.java\n#\tlanguage-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/signature/SignatureTreeVisitor.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82185cad67ebd95ab3c8227193c2d07bdaa3a1f0", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/82185cad67ebd95ab3c8227193c2d07bdaa3a1f0", "committedDate": "2020-10-20T08:32:12Z", "message": "Correct checkstyles errors"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8aeb1c7d6d7333b31d64e945fa01edc0426075c1", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8aeb1c7d6d7333b31d64e945fa01edc0426075c1", "committedDate": "2020-10-20T07:51:51Z", "message": "Remove unused import"}, "afterCommit": {"oid": "82185cad67ebd95ab3c8227193c2d07bdaa3a1f0", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/82185cad67ebd95ab3c8227193c2d07bdaa3a1f0", "committedDate": "2020-10-20T08:32:12Z", "message": "Correct checkstyles errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f2adc278f705b6476d857752008b01dc0c7bcc5", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2f2adc278f705b6476d857752008b01dc0c7bcc5", "committedDate": "2020-10-20T08:35:44Z", "message": "Remove constructor since no requirement yet"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNzgwNDky", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26364#pullrequestreview-512780492", "createdAt": "2020-10-20T14:28:03Z", "commit": {"oid": "2f2adc278f705b6476d857752008b01dc0c7bcc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDoyODowM1rOHk_3Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDoyODowM1rOHk_3Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU1NzA2Mw==", "bodyText": "Shall we invert the condition and do early exit?\nif (!bLangPackage.packageID.equals(symbol.pkgID)) {\n    return false;\n}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26364#discussion_r508557063", "createdAt": "2020-10-20T14:28:03Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java", "diffHunk": "@@ -160,9 +160,34 @@ public BallerinaSemanticModel(BLangPackage bLangPackage, CompilerContext context\n \n     // Private helper methods for the public APIs above.\n \n-    private boolean isSymbolInUserProject(BSymbol symbol, DiagnosticPos cursorPos) {\n+    private boolean isSymbolInUserProject(BSymbol symbol, Location cursorPos) {\n+        int value = 0;\n+\n+        LinePosition cursorPosStartLine = cursorPos.lineRange().startLine();\n+        LinePosition symbolStartLine = symbol.pos.lineRange().startLine();\n+\n+        if (bLangPackage.packageID.equals(symbol.pkgID)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f2adc278f705b6476d857752008b01dc0c7bcc5"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNzkwMjkw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26364#pullrequestreview-512790290", "createdAt": "2020-10-20T14:36:31Z", "commit": {"oid": "2f2adc278f705b6476d857752008b01dc0c7bcc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDozNjozMVrOHlATVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDozNjozMVrOHlATVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU2NDMwOA==", "bodyText": "Can simplify this as:\nif (symbol.owner.getKind() == SymbolKind.PACKAGE || Symbols.isFlagOn(symbol.flags, Flags.WORKER) {\n   return true;\n}\n\nif (cursorPosStartLine.line() < symbolStartLine.line()) {\n    return false;\n} \n\nif (cursorPosStartLine.line() > symbolStartLine.line()) {\n    return true;\n}\n\n// means line numbers are equal. check for the column numbers\nreturn cursorPosStartLine.offset() <= symbolStartLine.offset();", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26364#discussion_r508564308", "createdAt": "2020-10-20T14:36:31Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/BallerinaSemanticModel.java", "diffHunk": "@@ -160,9 +160,34 @@ public BallerinaSemanticModel(BLangPackage bLangPackage, CompilerContext context\n \n     // Private helper methods for the public APIs above.\n \n-    private boolean isSymbolInUserProject(BSymbol symbol, DiagnosticPos cursorPos) {\n+    private boolean isSymbolInUserProject(BSymbol symbol, Location cursorPos) {\n+        int value = 0;\n+\n+        LinePosition cursorPosStartLine = cursorPos.lineRange().startLine();\n+        LinePosition symbolStartLine = symbol.pos.lineRange().startLine();\n+\n+        if (bLangPackage.packageID.equals(symbol.pkgID)) {\n+            // If the package detail strings are same, then compare the start line.\n+            if (cursorPosStartLine.line() < symbolStartLine.line()) {\n+                value = -1;\n+            } else if (cursorPosStartLine.line() > symbolStartLine.line()) {\n+                value = 1;\n+            }\n+\n+            if (value == 0) {\n+                // If the start line is the same, then compare the start column.\n+                if (cursorPosStartLine.offset() < symbolStartLine.offset()) {\n+                    value = -1;\n+                } else if (cursorPosStartLine.offset() > symbolStartLine.offset()) {\n+                    value = 1;\n+                }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f2adc278f705b6476d857752008b01dc0c7bcc5"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8720047fc0fe3b99e39b1e579ff37cbf9b3536e", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e8720047fc0fe3b99e39b1e579ff37cbf9b3536e", "committedDate": "2020-10-20T16:32:46Z", "message": "Refactor according to the review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc2201e3b906dba1b3c352e9ba7c7b2d89a531ab", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dc2201e3b906dba1b3c352e9ba7c7b2d89a531ab", "committedDate": "2020-10-20T17:11:58Z", "message": "Merge branch 'master' into diagnostic-change\n\n# Conflicts:\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/util/FunctionalConstructorBuilder.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e147a3e199059e4417c90c0fadceda36a56cde45", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e147a3e199059e4417c90c0fadceda36a56cde45", "committedDate": "2020-10-21T04:11:47Z", "message": "Refactor isSymbolInUserProject"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6b22b2b0f7a750c48d8d5e1e9ce9f0e98c6877d", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d6b22b2b0f7a750c48d8d5e1e9ce9f0e98c6877d", "committedDate": "2020-10-21T04:36:31Z", "message": "Rename isSymbolInUserProject to hasCursorPosPassedSymbolPos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbfe796ca739eb81cdd08ad2017f691f5573b24f", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dbfe796ca739eb81cdd08ad2017f691f5573b24f", "committedDate": "2020-10-21T05:14:51Z", "message": "Merge branch 'master' into diagnostic-change\n\n# Conflicts:\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/ASTBuilderUtil.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bac3664147f14f1f6ee932aada7e4acb1b7f91f2", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bac3664147f14f1f6ee932aada7e4acb1b7f91f2", "committedDate": "2020-10-21T05:44:33Z", "message": "Resolve conflicts"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f23b3c1c6dd9c306ff536b67c66e368833741ebc", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f23b3c1c6dd9c306ff536b67c66e368833741ebc", "committedDate": "2020-10-20T17:32:28Z", "message": "Refactor isSymbolInLineRange"}, "afterCommit": {"oid": "bac3664147f14f1f6ee932aada7e4acb1b7f91f2", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bac3664147f14f1f6ee932aada7e4acb1b7f91f2", "committedDate": "2020-10-21T05:44:33Z", "message": "Resolve conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMzc3NzE1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26364#pullrequestreview-513377715", "createdAt": "2020-10-21T07:25:33Z", "commit": {"oid": "bac3664147f14f1f6ee932aada7e4acb1b7f91f2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4366, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}