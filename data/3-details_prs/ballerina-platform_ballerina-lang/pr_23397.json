{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwOTg3OTky", "number": 23397, "title": "Add support for using variable references in extern functions' return types", "bodyText": "Purpose\n\nThis PR adds support for using typedesc variable references in the return type of an extern function.\nFixes #22930\n\nApproach\n\nThe approach taken was to introduce a new type called BParameterizedType for the var refs used in the return type. This type just simply captures the symbol of the parameter and its default value's (if there is one) type.\nWhen type checking function calls, if the return type of the function is parameterized, a parameterized type resolver will walk through the return type and replace any var refs with the appropriate concrete type for that particular context, using the arguments provided by the user. In Desugar, the type gets replaced by the narrowest static concrete type that can be resolved for the function's return type. For example, in the sample below, this would be map<anydata>.\nWhen generating the function itself also the return type is generated as the narrowest possible concrete type that can be resolved for the return type.\nBParameterizedType gets written to the BIR since we want the return type information to be persisted if the module will be used in other modules. But it doesn't have a runtime type since at runtime we will always be relying on concrete types and type casts to do the narrowing based on the contexts.\nThe name of the parameter is set as the name of the type. The default value type gets written to the BIR when visiting the BParameterizedType. Symbol info is not written. When reading it back, first the type gets created with the name and the default value type.After the invokable symbol's param symbols get defined, we walk through the return type recursively and if we come across a parameterized type, we lookup the param symbols using the type's name and fill the param symbol in the type.\n\nSamples\nimport ballerina/io;\n\npublic function main() {\n    map<int> m = query(\"foo\");\n    io:println(m);\n}\n\nfunction query(string q, typedesc<anydata> rowType = int) returns map<rowType> = @java:Method {\n    class: \"xyz.pubudu.Hello\",\n    name: \"query\",\n    paramTypes: [\"org.ballerinalang.jvm.values.api.BString\", \"org.ballerinalang.jvm.values.api.BTypedesc\"]\n} external;\n\\\nRemarks\n\n Add support for object types\n Complete the read/write from/to BIR\n Add test cases\n Clean up the code\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-05-20T19:57:25Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397", "merged": true, "mergeCommit": {"oid": "8ad3746ac49b89647dc24dd4017afcf7e920003b"}, "closed": true, "closedAt": "2020-06-12T06:28:55Z", "author": {"login": "pubudu91"}, "timelineItems": {"totalCount": 50, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABck_ySRABqjMzNzIyOTI0NjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqb_xwABqjM0MzY5NTQyNzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "51e41a5cef0bf3d8ed3b877f8df3a09c33973ffc", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/51e41a5cef0bf3d8ed3b877f8df3a09c33973ffc", "committedDate": "2020-05-25T19:42:11Z", "message": "Add test cases"}, "afterCommit": {"oid": "3bb8ff5b4e4f0904adb902c3d4b5ffbe7ebf29fc", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3bb8ff5b4e4f0904adb902c3d4b5ffbe7ebf29fc", "committedDate": "2020-05-26T07:45:58Z", "message": "Add test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bb8ff5b4e4f0904adb902c3d4b5ffbe7ebf29fc", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3bb8ff5b4e4f0904adb902c3d4b5ffbe7ebf29fc", "committedDate": "2020-05-26T07:45:58Z", "message": "Add test cases"}, "afterCommit": {"oid": "7996afecbdb64e16d1c37ad0bdca144d07b096cc", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7996afecbdb64e16d1c37ad0bdca144d07b096cc", "committedDate": "2020-05-26T07:51:34Z", "message": "Add test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f7f2797c42d36a8a5cd9e5440c61614816580a4", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7f7f2797c42d36a8a5cd9e5440c61614816580a4", "committedDate": "2020-05-27T12:46:22Z", "message": "Add negative test cases"}, "afterCommit": {"oid": "1b53e56e8f1a28cb5fab5444492b0f429b410ad7", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1b53e56e8f1a28cb5fab5444492b0f429b410ad7", "committedDate": "2020-05-27T12:50:41Z", "message": "Add negative test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b53e56e8f1a28cb5fab5444492b0f429b410ad7", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1b53e56e8f1a28cb5fab5444492b0f429b410ad7", "committedDate": "2020-05-27T12:50:41Z", "message": "Add negative test cases"}, "afterCommit": {"oid": "468e7812d665683b5968773f19d30e5b44f7fb45", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/468e7812d665683b5968773f19d30e5b44f7fb45", "committedDate": "2020-05-27T15:04:36Z", "message": "Add negative test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "468e7812d665683b5968773f19d30e5b44f7fb45", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/468e7812d665683b5968773f19d30e5b44f7fb45", "committedDate": "2020-05-27T15:04:36Z", "message": "Add negative test cases"}, "afterCommit": {"oid": "a07b61f618239abd4a3141b1478f3047ce94d67d", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a07b61f618239abd4a3141b1478f3047ce94d67d", "committedDate": "2020-05-27T19:36:03Z", "message": "Add negative test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5OTM1OTM1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#pullrequestreview-419935935", "createdAt": "2020-05-28T09:30:53Z", "commit": {"oid": "28ac1e0d6ff7aa8e058abc48638b499e17518827"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwOTozMDo1M1rOGbtJrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwOTozMDo1M1rOGbtJrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTcwNDQ5NQ==", "bodyText": "Recheck this. Might have to return from here.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#discussion_r431704495", "createdAt": "2020-05-28T09:30:53Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -1210,6 +1278,32 @@ public void visit(BLangUserDefinedType userDefinedTypeNode) {\n         resultType = symbol.type;\n     }\n \n+    private BType getTypedescParamValueType(List<BLangSimpleVariable> params, BSymbol varSym,\n+                                            DiagnosticPos retTypePos) {\n+        for (BLangSimpleVariable param : params) {\n+            if (param.name.value.equals(varSym.name.value)) {\n+                if (param.expr == null) {\n+                    return ((BTypedescType) varSym.type).constraint;\n+                }\n+\n+                if (param.expr.getKind() == NodeKind.TYPEDESC_EXPRESSION) {\n+                    return resolveTypeNode(((BLangTypedescExpr) param.expr).typeNode, this.env);\n+                }\n+\n+                if (param.expr.getKind() == NodeKind.SIMPLE_VARIABLE_REF) {\n+                    Name varName = names.fromIdNode(((BLangSimpleVarRef) param.expr).variableName);\n+                    BSymbol typeRefSym = lookupSymbolInMainSpace(this.env, varName);\n+                    return typeRefSym != symTable.notFoundSymbol ? typeRefSym.type : symTable.semanticError;\n+                }\n+\n+                dlog.error(param.pos, DiagnosticCode.INVALID_TYPEDESC_PARAM);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28ac1e0d6ff7aa8e058abc48638b499e17518827"}, "originalPosition": 269}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5OTcxMTk1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#pullrequestreview-419971195", "createdAt": "2020-05-28T10:20:01Z", "commit": {"oid": "28ac1e0d6ff7aa8e058abc48638b499e17518827"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDoyMDowMVrOGbu03w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDoyMDowMVrOGbu03w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTczMTkzNQ==", "bodyText": "Change to the name of the param", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#discussion_r431731935", "createdAt": "2020-05-28T10:20:01Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BParameterizedType.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.semantics.model.types;\n+\n+import org.wso2.ballerinalang.compiler.semantics.model.TypeVisitor;\n+import org.wso2.ballerinalang.compiler.semantics.model.symbols.BTypeSymbol;\n+import org.wso2.ballerinalang.compiler.semantics.model.symbols.BVarSymbol;\n+import org.wso2.ballerinalang.compiler.util.Name;\n+import org.wso2.ballerinalang.compiler.util.TypeTags;\n+\n+/**\n+ * Represents a parameterized type.\n+ */\n+public class BParameterizedType extends BType {\n+\n+    public BVarSymbol paramSymbol;\n+    public BType paramValueType;\n+\n+    public BParameterizedType(BType valueType, BVarSymbol paramSymbol, BTypeSymbol tSymbol, Name name) {\n+        super(TypeTags.PARAMETERIZED_TYPE, tSymbol);\n+        this.paramSymbol = paramSymbol;\n+        this.paramValueType = valueType;\n+        this.name = name;\n+    }\n+\n+    @Override\n+    public boolean isNullable() {\n+        // TODO: Check what the correct behaviour is for this\n+//        return this.paramSymbol.type.isNullable();\n+        return false;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"<T>\" + this.paramValueType.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28ac1e0d6ff7aa8e058abc48638b499e17518827"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5OTYwOTk2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#pullrequestreview-419960996", "createdAt": "2020-05-28T10:05:10Z", "commit": {"oid": "28ac1e0d6ff7aa8e058abc48638b499e17518827"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDowNToxMFrOGbuV7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDoyOTozN1rOGbvIlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTcyNDAxMw==", "bodyText": "If the enclosingType already has PARAMETERIZED flag we don't need to set again. Can skip loop.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#discussion_r431724013", "createdAt": "2020-05-28T10:05:10Z", "author": {"login": "KRVPerera"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -1358,6 +1456,28 @@ public BSymbol getBinaryEqualityForTypeSets(OperatorKind opKind, BType lhsType,\n         return symTable.notFoundSymbol;\n     }\n \n+    public boolean markParameterizedType(BType type, BType constituentType) {\n+        if (Symbols.isFlagOn(constituentType.flags, Flags.PARAMETERIZED)) {\n+            type.tsymbol.flags |= Flags.PARAMETERIZED;\n+            type.flags |= Flags.PARAMETERIZED;\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    public void markParameterizedType(BType enclosingType, Collection<BType> constituentTypes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28ac1e0d6ff7aa8e058abc48638b499e17518827"}, "originalPosition": 333}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTcyNTk4Mw==", "bodyText": "we can just make this markParameterizedType(tupleType, memberTypes) and call markParameterizedType again when tupleTypeNode.restParamType != null with restParamType\nmarkParameterizedType(tupleType, tupleTypeNode.restParamType).\nWith caching on markParameterizedType we can avoid creating a new ArrayList completely.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#discussion_r431725983", "createdAt": "2020-05-28T10:08:54Z", "author": {"login": "KRVPerera"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -1079,14 +1103,19 @@ public void visit(BLangTupleTypeNode tupleTypeNode) {\n         }\n \n         BTypeSymbol tupleTypeSymbol = Symbols.createTypeSymbol(SymTag.TUPLE_TYPE, Flags.asMask(EnumSet.of(Flag.PUBLIC)),\n-                Names.EMPTY, env.enclPkg.symbol.pkgID, null, env.scope.owner);\n+                                                               Names.EMPTY, env.enclPkg.symbol.pkgID, null,\n+                                                               env.scope.owner);\n \n+        List<BType> allMemTypes = new ArrayList<>(memberTypes);\n         BTupleType tupleType = new BTupleType(tupleTypeSymbol, memberTypes);\n         tupleTypeSymbol.type = tupleType;\n-        if (tupleTypeNode.restParamType !=  null) {\n+        if (tupleTypeNode.restParamType != null) {\n             tupleType.restType = resolveTypeNode(tupleTypeNode.restParamType, env);\n+            allMemTypes.add(tupleType.restType);\n         }\n \n+        markParameterizedType(tupleType, allMemTypes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28ac1e0d6ff7aa8e058abc48638b499e17518827"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTcyOTc2OQ==", "bodyText": "we can call markParameterizedType(streamType, constraintType) always and only call for error conditionally.\nif (error != null) {\n\tmarkParameterizedType(streamType, error);\n}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#discussion_r431729769", "createdAt": "2020-05-28T10:15:41Z", "author": {"login": "KRVPerera"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -1023,7 +1038,14 @@ public void visit(BLangStreamType streamTypeNode) {\n         BType streamType = new BStreamType(TypeTags.STREAM, constraintType, error, null);\n         BTypeSymbol typeSymbol = type.tsymbol;\n         streamType.tsymbol = Symbols.createTypeSymbol(typeSymbol.tag, typeSymbol.flags, typeSymbol.name,\n-                typeSymbol.pkgID, streamType, typeSymbol.owner);\n+                                                      typeSymbol.pkgID, streamType, typeSymbol.owner);\n+\n+        if (error != null) {\n+            markParameterizedType(streamType, Arrays.asList(constraintType, error));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28ac1e0d6ff7aa8e058abc48638b499e17518827"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTczNTI5NA==", "bodyText": "we can call symResolver.markParameterizedType(recordType, recordType.fields.values()); always and call again for\nsymResolver.markParameterizedType(recordType, recordType.restFieldType); that way we don't need a new array list.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#discussion_r431735294", "createdAt": "2020-05-28T10:26:26Z", "author": {"login": "KRVPerera"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -1138,7 +1139,14 @@ private void defineRecordTypeNode(BLangRecordTypeNode recordTypeNode, SymbolEnv\n             return;\n         }\n \n+        List<BType> fieldTypes = new ArrayList<>();\n+        for (BField field : recordType.fields.values()) {\n+            BType type = field.type;\n+            fieldTypes.add(type);\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28ac1e0d6ff7aa8e058abc48638b499e17518827"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTczNjk4Mw==", "bodyText": "We can pre-allocate ArrayList with an initialCapacity if neeed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#discussion_r431736983", "createdAt": "2020-05-28T10:29:37Z", "author": {"login": "KRVPerera"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -1138,7 +1139,14 @@ private void defineRecordTypeNode(BLangRecordTypeNode recordTypeNode, SymbolEnv\n             return;\n         }\n \n+        List<BType> fieldTypes = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28ac1e0d6ff7aa8e058abc48638b499e17518827"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNzM3Njg1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#pullrequestreview-420737685", "createdAt": "2020-05-29T08:06:16Z", "commit": {"oid": "28ac1e0d6ff7aa8e058abc48638b499e17518827"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODowNjoxN1rOGcS2lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODowNjoxN1rOGcS2lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMyMjE5OQ==", "bodyText": "@MaryamZi Should I do the same check done a few lines below this (L1272) here as well when logging errors for user defined types?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#discussion_r432322199", "createdAt": "2020-05-29T08:06:17Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -1190,8 +1231,35 @@ public void visit(BLangUserDefinedType userDefinedTypeNode) {\n         //    If the package alias is not empty or null, then find the package scope,\n         if (symbol == symTable.notFoundSymbol) {\n             BSymbol tempSymbol = lookupMainSpaceSymbolInPackage(userDefinedTypeNode.pos, env, pkgAlias, typeName);\n+\n             if ((tempSymbol.tag & SymTag.TYPE) == SymTag.TYPE) {\n                 symbol = tempSymbol;\n+            } else if (Symbols.isSymTagOn(tempSymbol, SymTag.VARIABLE) && env.node.getKind() == NodeKind.FUNCTION) {\n+                BLangFunction func = (BLangFunction) env.node;\n+\n+                if (func.returnTypeNode != null && func.hasBody() &&\n+                        func.body.getKind() == NodeKind.EXTERN_FUNCTION_BODY) {\n+                    BType paramValType = getTypedescParamValueType(func.requiredParams, tempSymbol,\n+                                                                   func.returnTypeNode.pos);\n+\n+                    if (paramValType == symTable.semanticError) {\n+                        this.resultType = symTable.semanticError;\n+                        return;\n+                    }\n+\n+                    BTypeSymbol tSymbol = new BTypeSymbol(SymTag.TYPE, Flags.PARAMETERIZED | tempSymbol.flags,\n+                                                          tempSymbol.name, tempSymbol.pkgID, null, func.symbol);\n+                    tSymbol.type = new BParameterizedType(paramValType, (BVarSymbol) tempSymbol,\n+                                                          tSymbol, tempSymbol.name);\n+\n+                    this.resultType = tSymbol.type;\n+                    this.resultType.flags |= Flags.PARAMETERIZED;\n+                    return;\n+                } else {\n+                    dlog.error(userDefinedTypeNode.pos, DiagnosticCode.INVALID_USE_OF_TYPEDESC_PARAM);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28ac1e0d6ff7aa8e058abc48638b499e17518827"}, "originalPosition": 240}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b5402e7a008498d6441a2d99ab95c08661faccfb", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b5402e7a008498d6441a2d99ab95c08661faccfb", "committedDate": "2020-05-29T08:57:19Z", "message": "Improve error handling logic in symbol resolver and fix review suggestions"}, "afterCommit": {"oid": "c4937c6da4ec6701b13ce942222ba67f77697874", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c4937c6da4ec6701b13ce942222ba67f77697874", "committedDate": "2020-05-29T09:06:31Z", "message": "Improve error handling logic in symbol resolver and fix review suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4937c6da4ec6701b13ce942222ba67f77697874", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c4937c6da4ec6701b13ce942222ba67f77697874", "committedDate": "2020-05-29T09:06:31Z", "message": "Improve error handling logic in symbol resolver and fix review suggestions"}, "afterCommit": {"oid": "a5d7d604f936a76a71e2deea11f76884d34f0806", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a5d7d604f936a76a71e2deea11f76884d34f0806", "committedDate": "2020-05-29T09:25:57Z", "message": "Improve error handling logic in symbol resolver and fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNDkxNDUz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#pullrequestreview-421491453", "createdAt": "2020-05-31T12:49:07Z", "commit": {"oid": "7c0f9f04e59b0d225345ed9fa8a4bcedd4290faf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMDgzNzEx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#pullrequestreview-423083711", "createdAt": "2020-06-02T21:52:49Z", "commit": {"oid": "61fa7ee13f433b13ce564d6728d4b277e6516bd0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTo1Mjo0OVrOGeFPig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTo1Mjo0OVrOGeFPig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5NjM2Mg==", "bodyText": "Copyright year\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *   Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n             *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#discussion_r434196362", "createdAt": "2020-06-02T21:52:49Z", "author": {"login": "dulajdilshan"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/balo/functions/VariableReturnTypesBaloTest.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ *   Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61fa7ee13f433b13ce564d6728d4b277e6516bd0"}, "originalPosition": 2}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "59db46fcb24615f64917e9f66e46239aae3b6264", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/59db46fcb24615f64917e9f66e46239aae3b6264", "committedDate": "2020-06-01T13:00:17Z", "message": "Add support for assigning variable return typed functions to vars"}, "afterCommit": {"oid": "35cc137fdb58ce3910a4cd59578c1c4672f5376f", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/35cc137fdb58ce3910a4cd59578c1c4672f5376f", "committedDate": "2020-06-08T19:09:40Z", "message": "Fix syncing issues and refactor type builder name and APIs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "35cc137fdb58ce3910a4cd59578c1c4672f5376f", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/35cc137fdb58ce3910a4cd59578c1c4672f5376f", "committedDate": "2020-06-08T19:09:40Z", "message": "Fix syncing issues and refactor type builder name and APIs"}, "afterCommit": {"oid": "2e78e4016875117ee390f4d863a85777d035328f", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2e78e4016875117ee390f4d863a85777d035328f", "committedDate": "2020-06-08T19:13:11Z", "message": "Fix syncing issues and refactor type builder name and APIs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e78e4016875117ee390f4d863a85777d035328f", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2e78e4016875117ee390f4d863a85777d035328f", "committedDate": "2020-06-08T19:13:11Z", "message": "Fix syncing issues and refactor type builder name and APIs"}, "afterCommit": {"oid": "dc84c4788069048f4fdb638ba9012dcd01d8a92e", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dc84c4788069048f4fdb638ba9012dcd01d8a92e", "committedDate": "2020-06-08T19:33:17Z", "message": "Fix syncing issues and refactor type builder name and APIs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97bb8ff711c74f29b7326208e81ea6209ced86bb", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/97bb8ff711c74f29b7326208e81ea6209ced86bb", "committedDate": "2020-06-08T20:32:12Z", "message": "Reset parameterized flag for resolved types"}, "afterCommit": {"oid": "ccf89e97d0db99b6674af65a153eb9f00f1531d4", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ccf89e97d0db99b6674af65a153eb9f00f1531d4", "committedDate": "2020-06-11T12:08:28Z", "message": "Reset parameterized flag for resolved types"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTc3Mjg4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23397#pullrequestreview-429177288", "createdAt": "2020-06-11T18:24:24Z", "commit": {"oid": "0e3cb8ed75d18c39b6cb516715de7d716b0a9a9a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e3cb8ed75d18c39b6cb516715de7d716b0a9a9a", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0e3cb8ed75d18c39b6cb516715de7d716b0a9a9a", "committedDate": "2020-06-11T16:28:23Z", "message": "Fix compilation errors in tests due to init method name change"}, "afterCommit": {"oid": "6835b9b4c6f298e235a3229144ac4fd90a2c8b91", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6835b9b4c6f298e235a3229144ac4fd90a2c8b91", "committedDate": "2020-06-11T21:27:31Z", "message": "Fix compilation errors in tests due to init method name change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "005e77e7e8adfe3174079d53d8ff8127b6e2ff5a", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/005e77e7e8adfe3174079d53d8ff8127b6e2ff5a", "committedDate": "2020-06-12T05:27:33Z", "message": "Enable referencing typedesc params in return type for extern functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36f9bb3265ecf83d9f06ac12936f71f5c94eb4c2", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/36f9bb3265ecf83d9f06ac12936f71f5c94eb4c2", "committedDate": "2020-06-12T05:27:33Z", "message": "Add parameterized return type support for extern functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2696fb9fb6b1409b24641ea2d146a97987102d3", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b2696fb9fb6b1409b24641ea2d146a97987102d3", "committedDate": "2020-06-12T05:27:33Z", "message": "Add support for defaultable params"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47142cc6d658325891f6dedde522228410f25e06", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/47142cc6d658325891f6dedde522228410f25e06", "committedDate": "2020-06-12T05:27:34Z", "message": "Add PARAMETERIZED flag and support for parameterized record types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3325ac522b36e7a19d9981281f3e7efd7587c64", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a3325ac522b36e7a19d9981281f3e7efd7587c64", "committedDate": "2020-06-12T05:27:34Z", "message": "Make use of the type builder when resolving ret type in codegen"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59d7b34c3768cdb155a5d2c8ce1fe97d66a8cabe", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/59d7b34c3768cdb155a5d2c8ce1fe97d66a8cabe", "committedDate": "2020-06-12T05:27:34Z", "message": "Add a cast to variable return-typed invocations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60026bbf6865933fa57dd91b9acd8c5c4f0b8d79", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/60026bbf6865933fa57dd91b9acd8c5c4f0b8d79", "committedDate": "2020-06-12T05:27:34Z", "message": "Disallow non-type-references as default value in typedesc params"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1159fb07af030a4344ce5fc28c29b574fb5581b", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c1159fb07af030a4344ce5fc28c29b574fb5581b", "committedDate": "2020-06-12T05:27:34Z", "message": "Improve typedesc param default value checking logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a937cd062899d264524790be77bf8d6653720d66", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a937cd062899d264524790be77bf8d6653720d66", "committedDate": "2020-06-12T05:27:34Z", "message": "Fix broken record type changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02665d2333167dfcb460659fa606dc3db88cad82", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/02665d2333167dfcb460659fa606dc3db88cad82", "committedDate": "2020-06-12T05:27:35Z", "message": "Refactor builtType() API and fix cast issue for defaultable typedesc param"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c2279b9a2049946ea1c7e1d8826676fc3255c01", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5c2279b9a2049946ea1c7e1d8826676fc3255c01", "committedDate": "2020-06-12T05:27:35Z", "message": "Fix type issue in call expr which resulted in visitMaxs failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60c6662833f87f6d8f30c84436f537315e6bf91a", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/60c6662833f87f6d8f30c84436f537315e6bf91a", "committedDate": "2020-06-12T05:27:35Z", "message": "Fix incorrect array type build and handle semantic errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8668e61f60f52c11cbd39d0cc9c18a4604324591", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8668e61f60f52c11cbd39d0cc9c18a4604324591", "committedDate": "2020-06-12T05:27:35Z", "message": "Allow parameterized types in XML constraint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72a0569c2cde80182ebd501d6ca8e8570bdccb52", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/72a0569c2cde80182ebd501d6ca8e8570bdccb52", "committedDate": "2020-06-12T05:27:35Z", "message": "Add parameterized type support for tables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa1970d7fdb5cc9c46ce5a16a9ddcfba364744ae", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fa1970d7fdb5cc9c46ce5a16a9ddcfba364744ae", "committedDate": "2020-06-12T05:27:35Z", "message": "Add test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f70d3662b8a1737238e0ed5466a1809a45f379f7", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f70d3662b8a1737238e0ed5466a1809a45f379f7", "committedDate": "2020-06-12T05:27:36Z", "message": "Change String usages to BString in tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "000bfece57c3a5389216953b0a683fedbcfce577", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/000bfece57c3a5389216953b0a683fedbcfce577", "committedDate": "2020-06-12T05:27:36Z", "message": "Add support for reading parameterized types from BIR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ada1958a30ecf5d3ccafae4513d749f50ed9649", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6ada1958a30ecf5d3ccafae4513d749f50ed9649", "committedDate": "2020-06-12T05:27:36Z", "message": "Add BIR test cases for parameterized types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37677833b897b328dc9ba9a07ff9511a62170c34", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/37677833b897b328dc9ba9a07ff9511a62170c34", "committedDate": "2020-06-12T05:27:36Z", "message": "Add negative test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdda007c2fc2107bc405e3a030183fdcba34257c", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bdda007c2fc2107bc405e3a030183fdcba34257c", "committedDate": "2020-06-12T05:27:36Z", "message": "Improve error handling for invalid typedesc param usage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0528f9dd29e2bc0fdbf4426f2ecf5555f301a334", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0528f9dd29e2bc0fdbf4426f2ecf5555f301a334", "committedDate": "2020-06-12T05:27:37Z", "message": "Add negative test cases for newly added error messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b5054cb824aac024535fa1f65ce9b9eaa33cc26", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4b5054cb824aac024535fa1f65ce9b9eaa33cc26", "committedDate": "2020-06-12T05:27:37Z", "message": "Cleanup the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8b5da4abbaf353365f9b97afae54ce2fcd37233", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b8b5da4abbaf353365f9b97afae54ce2fcd37233", "committedDate": "2020-06-12T05:27:37Z", "message": "Improve error handling logic in symbol resolver and fix review suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c56638b5108896577e66ea6a9f4a6714916c0658", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c56638b5108896577e66ea6a9f4a6714916c0658", "committedDate": "2020-06-12T05:27:37Z", "message": "Fix error handling for non-typedesc param reference"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c76781579f43b7cdbdbe24c816a5231b9b0c3a4", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3c76781579f43b7cdbdbe24c816a5231b9b0c3a4", "committedDate": "2020-06-12T05:27:37Z", "message": "Add support for assigning variable return typed functions to vars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb4e1882033ea403e069911856a7052e51d855a7", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eb4e1882033ea403e069911856a7052e51d855a7", "committedDate": "2020-06-12T05:27:37Z", "message": "Fix syncing issues and refactor type builder name and APIs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fec04827b6af361ebb70c9042c14b5f7b662538", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0fec04827b6af361ebb70c9042c14b5f7b662538", "committedDate": "2020-06-12T05:27:38Z", "message": "Reset parameterized flag for resolved types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f14cd4f8a0de3e71bb0ed129adbcd58cf81ff51b", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f14cd4f8a0de3e71bb0ed129adbcd58cf81ff51b", "committedDate": "2020-06-12T05:27:38Z", "message": "Fix syncing issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92c63ac75c10c38555f763007c4eb0d4415863a5", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/92c63ac75c10c38555f763007c4eb0d4415863a5", "committedDate": "2020-06-12T05:27:38Z", "message": "Fix compilation errors in tests due to init method name change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49514adceb4b01d80f6b2a145afa5332a277c253", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/49514adceb4b01d80f6b2a145afa5332a277c253", "committedDate": "2020-06-12T05:27:38Z", "message": "Fix broken var return type test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6835b9b4c6f298e235a3229144ac4fd90a2c8b91", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6835b9b4c6f298e235a3229144ac4fd90a2c8b91", "committedDate": "2020-06-11T21:27:31Z", "message": "Fix compilation errors in tests due to init method name change"}, "afterCommit": {"oid": "49514adceb4b01d80f6b2a145afa5332a277c253", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/49514adceb4b01d80f6b2a145afa5332a277c253", "committedDate": "2020-06-12T05:27:38Z", "message": "Fix broken var return type test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4521, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}