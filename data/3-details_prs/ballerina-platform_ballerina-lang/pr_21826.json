{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MjA3NTI2", "number": 21826, "title": "XML BBE fix: continuing #21796", "bodyText": "Purpose\nFix xml functions BBE and apply review suggestions of #21796\nFixes #\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-03-16T12:37:33Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826", "merged": true, "mergeCommit": {"oid": "94fddae642d111000dfe10880653f3c0e95729e0"}, "closed": true, "closedAt": "2020-03-17T05:02:36Z", "author": {"login": "rdhananjaya"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOK7x1AH2gAyMzg5MjA3NTI2OjQ0OWExZjQzZDA2ODMyOGQzNTg4YzNkNDhlNDE4ZDY1NGU5YTE5OWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOaXJPAH2gAyMzg5MjA3NTI2OmE2YmE3ZGNhOTgyMTU0MmI4YWJjYWE1NjE2NzVjMjcyYTEwZGYwMDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "449a1f43d068328d3588c3d48e418d654e9a199e", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/449a1f43d068328d3588c3d48e418d654e9a199e", "committedDate": "2020-03-16T09:45:22Z", "message": "Add BBEs to broken list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5909b775e9980df45cef5f52767667bd6f02e28c", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5909b775e9980df45cef5f52767667bd6f02e28c", "committedDate": "2020-03-16T12:06:10Z", "message": "Merge branch 'stage' of github.com:ballerina-platform/ballerina-lang into xml-bbe\n\n\u0001 Conflicts:\n\u0001\texamples/xml-attributes/xml_attributes.out"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f97e58598d08e158a88a8d99c067f403bfbe8f6c", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f97e58598d08e158a88a8d99c067f403bfbe8f6c", "committedDate": "2020-03-16T12:07:41Z", "message": "Fix and align xml functions BBEs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cb2893240607f34e4e29b1db3549282cc17bfce2", "committedDate": "2020-03-16T14:19:26Z", "message": "Apply review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MzEwMjE5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#pullrequestreview-375310219", "createdAt": "2020-03-16T15:10:30Z", "commit": {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNToxMDozMFrOF24vHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNToxMzo0NVrOF243sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5Njk5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // child elements conveniently using xml step expressions and XML filter expressions.\n          \n          \n            \n            // child elements conveniently using XML step expressions and XML filter expressions.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393096990", "createdAt": "2020-03-16T15:10:30Z", "author": {"login": "praneesha"}, "path": "examples/xml-access/xml_access.description", "diffHunk": "@@ -1,2 +1,2 @@\n // XML elements can contain child XML items. Ballerina allows you to access these\n-// child elements conveniently using xml step expressions and xml filter expressions.\n+// child elements conveniently using xml step expressions and XML filter expressions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5NzA5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // It is possible to get all the attributes of a `xml` element.\n          \n          \n            \n                // It is possible to get all the attributes of an `xml` element.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393097093", "createdAt": "2020-03-16T15:10:40Z", "author": {"login": "praneesha"}, "path": "examples/xml-attributes/xml_attributes.bal", "diffHunk": "@@ -15,19 +15,19 @@ public function main() {\n     string|error count = x1.count;\n     io:println(count);\n \n-    // Returns an error when accessing non existing attribute.\n+    // Accessing a non-existent attribute will return an error.\n     string|error count2 = x1.count2;\n     io:println(count2 is error);\n \n-    // It is possible to get all the attributes of a xml element.\n+    // It is possible to get all the attributes of a `xml` element.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5NzIwNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Updates an attribute by updating the attribute map of a `xml` element.\n          \n          \n            \n                // Update an attribute by updating the attribute map of an `xml` element.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393097205", "createdAt": "2020-03-16T15:10:50Z", "author": {"login": "praneesha"}, "path": "examples/xml-attributes/xml_attributes.bal", "diffHunk": "@@ -15,19 +15,19 @@ public function main() {\n     string|error count = x1.count;\n     io:println(count);\n \n-    // Returns an error when accessing non existing attribute.\n+    // Accessing a non-existent attribute will return an error.\n     string|error count2 = x1.count2;\n     io:println(count2 is error);\n \n-    // It is possible to get all the attributes of a xml element.\n+    // It is possible to get all the attributes of a `xml` element.\n     map<string> attributeMap = x1.getAttributes();\n     io:println(attributeMap);\n \n     // An attribute can also be accessed using the string representation of the qualified name from the attribute map.\n     string? s = attributeMap[\"{http://ballerina.com/aa}status\"];\n     io:println(s);\n \n-    // Updates an attribute by updating the attribute map of a xml element.\n+    // Updates an attribute by updating the attribute map of a `xml` element.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5NzM0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Concatenates xml and string values.\n          \n          \n            \n                // Concatenate XML and string values.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393097349", "createdAt": "2020-03-16T15:11:03Z", "author": {"login": "praneesha"}, "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -1,27 +1,25 @@\n import ballerina/io;\n+import ballerina/lang.'xml as xmllib;\n \n public function main() {\n     xml bookName = xml `<name>Book1</name>`;\n     xml bookComment = xml `<!--some comment-->`;\n     xml someText = xml `Hello, World!`;\n     xml content = someText + bookName + bookComment;\n \n-    xml book = xml `<book/>`;\n-\n-    // Gets the type of the XML element.\n-    io:println(bookComment.getItemType());\n+    xmllib:Element book = <xmllib:Element> xml `<book/>`;\n \n     // Gets the name of an XML element.\n-    io:println(bookName.getElementName());\n-\n-    // Gets the text content of an XML element.\n-    io:println(bookName.getTextValue());\n+    xmllib:Element bookNameElem = <xmllib:Element> bookName;\n+    io:println(bookNameElem.getName());\n \n-    // Checks if the XML element is empty.\n-    io:println(content.isEmpty());\n+    // Concatenates xml and string values.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5NzQzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Get the number of xml items in a sequence.\n          \n          \n            \n                // Get the number of XML items in a sequence.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393097438", "createdAt": "2020-03-16T15:11:11Z", "author": {"login": "praneesha"}, "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -1,27 +1,25 @@\n import ballerina/io;\n+import ballerina/lang.'xml as xmllib;\n \n public function main() {\n     xml bookName = xml `<name>Book1</name>`;\n     xml bookComment = xml `<!--some comment-->`;\n     xml someText = xml `Hello, World!`;\n     xml content = someText + bookName + bookComment;\n \n-    xml book = xml `<book/>`;\n-\n-    // Gets the type of the XML element.\n-    io:println(bookComment.getItemType());\n+    xmllib:Element book = <xmllib:Element> xml `<book/>`;\n \n     // Gets the name of an XML element.\n-    io:println(bookName.getElementName());\n-\n-    // Gets the text content of an XML element.\n-    io:println(bookName.getTextValue());\n+    xmllib:Element bookNameElem = <xmllib:Element> bookName;\n+    io:println(bookNameElem.getName());\n \n-    // Checks if the XML element is empty.\n-    io:println(content.isEmpty());\n+    // Concatenates xml and string values.\n+    xml concat = xmllib:concat(someText, bookName, bookComment);\n+    io:println(concat);\n+    io:println(content == concat);\n \n-    // Checks if the XML element has only one value.\n-    io:println(content.isSingleton());\n+    // Get the number of xml items in a sequence.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5NzU3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Strips the insignificant parts of the an xml value.\n          \n          \n            \n                // Strip the insignificant parts of an XML value.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393097575", "createdAt": "2020-03-16T15:11:24Z", "author": {"login": "praneesha"}, "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -31,23 +29,12 @@ public function main() {\n     x = content.elements();\n     io:println(x);\n \n-    // Retrieves an XML element by its name.\n-    x = content.select(\"name\");\n-    io:println(x);\n-\n     // Sets the children elements of an XML element.\n     book.setChildren(content);\n     io:println(book);\n \n-    // Retrieves a particular child of an XML element by its name.\n-    x = book.selectDescendants(\"name\");\n-    io:println(x);\n-\n-    // Removes any text items from an XML sequence that are all whitespaces.\n+    // Strips the insignificant parts of the an xml value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5Nzc5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Comment items, processing instruction items are considered insignificant.\n          \n          \n            \n                // Commented items and processing instruction items are considered insignificant.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393097791", "createdAt": "2020-03-16T15:11:42Z", "author": {"login": "praneesha"}, "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -31,23 +29,12 @@ public function main() {\n     x = content.elements();\n     io:println(x);\n \n-    // Retrieves an XML element by its name.\n-    x = content.select(\"name\");\n-    io:println(x);\n-\n     // Sets the children elements of an XML element.\n     book.setChildren(content);\n     io:println(book);\n \n-    // Retrieves a particular child of an XML element by its name.\n-    x = book.selectDescendants(\"name\");\n-    io:println(x);\n-\n-    // Removes any text items from an XML sequence that are all whitespaces.\n+    // Strips the insignificant parts of the an xml value.\n+    // Comment items, processing instruction items are considered insignificant.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5ODAzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // You can access child XML items using xml step expressions.\n          \n          \n            \n                // You can access child XML items using XML step expressions.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393098033", "createdAt": "2020-03-16T15:12:00Z", "author": {"login": "praneesha"}, "path": "examples/xml-access/xml_access.bal", "diffHunk": "@@ -17,13 +17,13 @@ public function main() {\n     // You can access child XML items using xml step expressions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5ODIwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Select all children using bellow syntax.\n          \n          \n            \n                // Select all children using the bellow syntax.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393098202", "createdAt": "2020-03-16T15:12:15Z", "author": {"login": "praneesha"}, "path": "examples/xml-access/xml_access.bal", "diffHunk": "@@ -17,13 +17,13 @@ public function main() {\n     // You can access child XML items using xml step expressions.\n     io:println(bookXML/<author>/<fname>);\n \n-    // Accessing a non-existing child will return empty xml sequence.\n+    // Accessing a non-existing child will return an empty `xml` sequence.\n     io:println(bookXML/<ISBN>/<code>);\n \n     // You can also retrieve attributes of the resulting child XML.\n     io:println(bookXML/<author>/<fname>.title);\n \n-    // You can match descendent elements using following steping access syntax.\n+    // You can match descendant elements using the following stepping access syntax.\n     io:println(bookXML/**/<fname>);\n \n     // Select all children using bellow syntax.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5ODM0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // And select all children elements using bellow syntax.\n          \n          \n            \n                // Select all children elements using the bellow syntax.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393098346", "createdAt": "2020-03-16T15:12:27Z", "author": {"login": "praneesha"}, "path": "examples/xml-access/xml_access.bal", "diffHunk": "@@ -32,12 +32,12 @@ public function main() {\n     // And select all children elements using bellow syntax.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5ODUyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Invoking the main function\n          \n          \n            \n                // Invoking the main function.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393098521", "createdAt": "2020-03-16T15:12:42Z", "author": {"login": "praneesha"}, "path": "examples/xml-functions/tests/xml_functions_test.bal", "diffHunk": "@@ -17,29 +17,20 @@ function testFunc() {\n     // Invoking the main function", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5ODk3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Gets the name of an XML element.\n          \n          \n            \n                // Get the name of an XML element.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393098976", "createdAt": "2020-03-16T15:13:26Z", "author": {"login": "praneesha"}, "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -1,27 +1,25 @@\n import ballerina/io;\n+import ballerina/lang.'xml as xmllib;\n \n public function main() {\n     xml bookName = xml `<name>Book1</name>`;\n     xml bookComment = xml `<!--some comment-->`;\n     xml someText = xml `Hello, World!`;\n     xml content = someText + bookName + bookComment;\n \n-    xml book = xml `<book/>`;\n-\n-    // Gets the type of the XML element.\n-    io:println(bookComment.getItemType());\n+    xmllib:Element book = <xmllib:Element> xml `<book/>`;\n \n     // Gets the name of an XML element.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5OTE4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Gets a subsequence of an XML sequence.\n          \n          \n            \n                // Get a subsequence of an XML sequence.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393099186", "createdAt": "2020-03-16T15:13:45Z", "author": {"login": "praneesha"}, "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -1,27 +1,25 @@\n import ballerina/io;\n+import ballerina/lang.'xml as xmllib;\n \n public function main() {\n     xml bookName = xml `<name>Book1</name>`;\n     xml bookComment = xml `<!--some comment-->`;\n     xml someText = xml `Hello, World!`;\n     xml content = someText + bookName + bookComment;\n \n-    xml book = xml `<book/>`;\n-\n-    // Gets the type of the XML element.\n-    io:println(bookComment.getItemType());\n+    xmllib:Element book = <xmllib:Element> xml `<book/>`;\n \n     // Gets the name of an XML element.\n-    io:println(bookName.getElementName());\n-\n-    // Gets the text content of an XML element.\n-    io:println(bookName.getTextValue());\n+    xmllib:Element bookNameElem = <xmllib:Element> bookName;\n+    io:println(bookNameElem.getName());\n \n-    // Checks if the XML element is empty.\n-    io:println(content.isEmpty());\n+    // Concatenates xml and string values.\n+    xml concat = xmllib:concat(someText, bookName, bookComment);\n+    io:println(concat);\n+    io:println(content == concat);\n \n-    // Checks if the XML element has only one value.\n-    io:println(content.isSingleton());\n+    // Get the number of xml items in a sequence.\n+    io:println(concat.length());\n \n     // Gets a subsequence of an XML sequence.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb2893240607f34e4e29b1db3549282cc17bfce2"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36882070bad4d683204540601371d7efa7ed99e8", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/36882070bad4d683204540601371d7efa7ed99e8", "committedDate": "2020-03-16T15:48:11Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91b1b7609ba3044fa708f970f284e04705fe9b5d", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/91b1b7609ba3044fa708f970f284e04705fe9b5d", "committedDate": "2020-03-16T15:58:45Z", "message": "Fix typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NzE4Nzcy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#pullrequestreview-375718772", "createdAt": "2020-03-17T03:31:32Z", "commit": {"oid": "91b1b7609ba3044fa708f970f284e04705fe9b5d"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMzozMTozMlrOF3M2OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMzozNjo0OVrOF3M6yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNjQ4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Select all children using the bellow syntax.\n          \n          \n            \n                // Select all the children elements using the below syntax.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393426489", "createdAt": "2020-03-17T03:31:32Z", "author": {"login": "praneesha"}, "path": "examples/xml-access/xml_access.bal", "diffHunk": "@@ -14,30 +14,30 @@ public function main() {\n                 <!--Price: $10-->\n                 </book>`;\n     \n-    // You can access child XML items using xml step expressions.\n+    // You can access child XML items using XML step expressions.\n     io:println(bookXML/<author>/<fname>);\n \n-    // Accessing a non-existing child will return empty xml sequence.\n+    // Accessing a non-existing child will return an empty `xml` sequence.\n     io:println(bookXML/<ISBN>/<code>);\n \n     // You can also retrieve attributes of the resulting child XML.\n     io:println(bookXML/<author>/<fname>.title);\n \n-    // You can match descendent elements using following steping access syntax.\n+    // You can match descendant elements using the following stepping access syntax.\n     io:println(bookXML/**/<fname>);\n \n-    // Select all children using bellow syntax.\n+    // Select all children using the bellow syntax.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91b1b7609ba3044fa708f970f284e04705fe9b5d"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNjU4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Select all the children belonging to a specific namespace.\n          \n          \n            \n                // Select all the children elements belonging to a specific namespace.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393426589", "createdAt": "2020-03-17T03:32:04Z", "author": {"login": "praneesha"}, "path": "examples/xml-access/xml_access.bal", "diffHunk": "@@ -14,30 +14,30 @@ public function main() {\n                 <!--Price: $10-->\n                 </book>`;\n     \n-    // You can access child XML items using xml step expressions.\n+    // You can access child XML items using XML step expressions.\n     io:println(bookXML/<author>/<fname>);\n \n-    // Accessing a non-existing child will return empty xml sequence.\n+    // Accessing a non-existing child will return an empty `xml` sequence.\n     io:println(bookXML/<ISBN>/<code>);\n \n     // You can also retrieve attributes of the resulting child XML.\n     io:println(bookXML/<author>/<fname>.title);\n \n-    // You can match descendent elements using following steping access syntax.\n+    // You can match descendant elements using the following stepping access syntax.\n     io:println(bookXML/**/<fname>);\n \n-    // Select all children using bellow syntax.\n+    // Select all children using the bellow syntax.\n     io:println(bookXML/*);\n \n-    // And select all children elements using bellow syntax.\n+    // Select all children elements using the bellow syntax.\n     io:println(bookXML/<*>);\n \n-    // Select all children belong to specific namespace.\n+    // Select all the children belonging to a specific namespace.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91b1b7609ba3044fa708f970f284e04705fe9b5d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNzQ0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // XML attribute access in ballerina is lax typed similar\n          \n          \n            \n            // XML attribute access in Ballerina is lax-typed similar", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393427446", "createdAt": "2020-03-17T03:35:55Z", "author": {"login": "praneesha"}, "path": "examples/xml-attributes/xml_attributes.description", "diffHunk": "@@ -3,5 +3,5 @@\n // In Ballerina, both of these types are treated the same. \n // XML attribute access in ballerina is lax typed similar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91b1b7609ba3044fa708f970f284e04705fe9b5d"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNzU0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // attribute of a xml value.\n          \n          \n            \n            // attribute of an XML value.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393427545", "createdAt": "2020-03-17T03:36:21Z", "author": {"login": "praneesha"}, "path": "examples/xml-attributes/xml_attributes.description", "diffHunk": "@@ -3,5 +3,5 @@\n // In Ballerina, both of these types are treated the same. \n // XML attribute access in ballerina is lax typed similar\n // to `json`, we can use field access expression (`.`) and\n-// optional field access expressions (``?.`) to access teh\n-// field of a xml value.\n+// optional field access expressions (``?.`) to access the\n+// attribute of a xml value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91b1b7609ba3044fa708f970f284e04705fe9b5d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNzYzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Gets all the element-type items in an XML sequence.\n          \n          \n            \n                // Get all the element-type items in an XML sequence.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393427636", "createdAt": "2020-03-17T03:36:41Z", "author": {"login": "praneesha"}, "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -1,53 +1,40 @@\n import ballerina/io;\n+import ballerina/lang.'xml as xmllib;\n \n public function main() {\n     xml bookName = xml `<name>Book1</name>`;\n     xml bookComment = xml `<!--some comment-->`;\n     xml someText = xml `Hello, World!`;\n     xml content = someText + bookName + bookComment;\n \n-    xml book = xml `<book/>`;\n+    xmllib:Element book = <xmllib:Element> xml `<book/>`;\n \n-    // Gets the type of the XML element.\n-    io:println(bookComment.getItemType());\n+    // Get the name of an XML element.\n+    xmllib:Element bookNameElem = <xmllib:Element> bookName;\n+    io:println(bookNameElem.getName());\n \n-    // Gets the name of an XML element.\n-    io:println(bookName.getElementName());\n+    // Concatenate XML and string values.\n+    xml concat = xmllib:concat(someText, bookName, bookComment);\n+    io:println(concat);\n+    io:println(content == concat);\n \n-    // Gets the text content of an XML element.\n-    io:println(bookName.getTextValue());\n+    // Get the number of XML items in a sequence.\n+    io:println(concat.length());\n \n-    // Checks if the XML element is empty.\n-    io:println(content.isEmpty());\n-\n-    // Checks if the XML element has only one value.\n-    io:println(content.isSingleton());\n-\n-    // Gets a subsequence of an XML sequence.\n+    // Get a subsequence of an XML sequence.\n     xml x = content.slice(2, 3);\n     io:println(x);\n \n     // Gets all the element-type items in an XML sequence.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91b1b7609ba3044fa708f970f284e04705fe9b5d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQyNzY1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Sets the children elements of an XML element.\n          \n          \n            \n                // Set the children elements of an XML element.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21826#discussion_r393427659", "createdAt": "2020-03-17T03:36:49Z", "author": {"login": "praneesha"}, "path": "examples/xml-functions/xml_functions.bal", "diffHunk": "@@ -1,53 +1,40 @@\n import ballerina/io;\n+import ballerina/lang.'xml as xmllib;\n \n public function main() {\n     xml bookName = xml `<name>Book1</name>`;\n     xml bookComment = xml `<!--some comment-->`;\n     xml someText = xml `Hello, World!`;\n     xml content = someText + bookName + bookComment;\n \n-    xml book = xml `<book/>`;\n+    xmllib:Element book = <xmllib:Element> xml `<book/>`;\n \n-    // Gets the type of the XML element.\n-    io:println(bookComment.getItemType());\n+    // Get the name of an XML element.\n+    xmllib:Element bookNameElem = <xmllib:Element> bookName;\n+    io:println(bookNameElem.getName());\n \n-    // Gets the name of an XML element.\n-    io:println(bookName.getElementName());\n+    // Concatenate XML and string values.\n+    xml concat = xmllib:concat(someText, bookName, bookComment);\n+    io:println(concat);\n+    io:println(content == concat);\n \n-    // Gets the text content of an XML element.\n-    io:println(bookName.getTextValue());\n+    // Get the number of XML items in a sequence.\n+    io:println(concat.length());\n \n-    // Checks if the XML element is empty.\n-    io:println(content.isEmpty());\n-\n-    // Checks if the XML element has only one value.\n-    io:println(content.isSingleton());\n-\n-    // Gets a subsequence of an XML sequence.\n+    // Get a subsequence of an XML sequence.\n     xml x = content.slice(2, 3);\n     io:println(x);\n \n     // Gets all the element-type items in an XML sequence.\n     x = content.elements();\n     io:println(x);\n \n-    // Retrieves an XML element by its name.\n-    x = content.select(\"name\");\n-    io:println(x);\n-\n     // Sets the children elements of an XML element.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91b1b7609ba3044fa708f970f284e04705fe9b5d"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6ba7dca9821542b8abcaa561675c272a10df000", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a6ba7dca9821542b8abcaa561675c272a10df000", "committedDate": "2020-03-17T03:43:50Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3803, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}