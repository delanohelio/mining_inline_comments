{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NDI1NDg4", "number": 20809, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMzoxMDo1NVrODgPapg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNjo0Njo1N1rODiOSvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTMzNjA2OnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMzoxMDo1NVrOFqV0gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMzozMzo1NVrOFqklJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk0MjAxOQ==", "bodyText": "I think we can use a concurrent hashmap here, and get rid of manual synchronization.\nhttps://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentHashMap.html", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r379942019", "createdAt": "2020-02-16T23:10:55Z", "author": {"login": "rdhananjaya"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockManager.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing,\n+ *   software distributed under the License is distributed on an\n+ *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *   KIND, either express or implied.  See the License for the\n+ *   specific language governing permissions and limitations\n+ *   under the License.\n+ */\n+\n+package org.ballerinalang.jvm;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLockManager {\n+\n+    /**\n+     * The map of locks inferred.\n+     */\n+    private static Map<String, BLock> globalLockMap;\n+\n+    static {\n+        globalLockMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cadb789f9c0e9796ee673f4f76a61464e47d3384"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE4Mzg0NQ==", "bodyText": "+1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r380183845", "createdAt": "2020-02-17T13:33:55Z", "author": {"login": "dulvinw"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockManager.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing,\n+ *   software distributed under the License is distributed on an\n+ *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *   KIND, either express or implied.  See the License for the\n+ *   specific language governing permissions and limitations\n+ *   under the License.\n+ */\n+\n+package org.ballerinalang.jvm;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLockManager {\n+\n+    /**\n+     * The map of locks inferred.\n+     */\n+    private static Map<String, BLock> globalLockMap;\n+\n+    static {\n+        globalLockMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk0MjAxOQ=="}, "originalCommit": {"oid": "cadb789f9c0e9796ee673f4f76a61464e47d3384"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTMzNjc1OnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMzoxMjozMlrOFqV05g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNTo1MDozOVrOFqZERA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk0MjExOA==", "bodyText": "This looks more like a lock store/registry, shall we add a proper name reflecting the expected behavior.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r379942118", "createdAt": "2020-02-16T23:12:32Z", "author": {"login": "rdhananjaya"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockManager.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing,\n+ *   software distributed under the License is distributed on an\n+ *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *   KIND, either express or implied.  See the License for the\n+ *   specific language governing permissions and limitations\n+ *   under the License.\n+ */\n+\n+package org.ballerinalang.jvm;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLockManager {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cadb789f9c0e9796ee673f4f76a61464e47d3384"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk5Mzk1MQ==", "bodyText": "Sure. Is BLockStore a better name?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r379993951", "createdAt": "2020-02-17T05:43:52Z", "author": {"login": "dulvinw"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockManager.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing,\n+ *   software distributed under the License is distributed on an\n+ *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *   KIND, either express or implied.  See the License for the\n+ *   specific language governing permissions and limitations\n+ *   under the License.\n+ */\n+\n+package org.ballerinalang.jvm;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLockManager {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk0MjExOA=="}, "originalCommit": {"oid": "cadb789f9c0e9796ee673f4f76a61464e47d3384"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk5NTIwNA==", "bodyText": "+1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r379995204", "createdAt": "2020-02-17T05:50:39Z", "author": {"login": "rdhananjaya"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockManager.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing,\n+ *   software distributed under the License is distributed on an\n+ *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *   KIND, either express or implied.  See the License for the\n+ *   specific language governing permissions and limitations\n+ *   under the License.\n+ */\n+\n+package org.ballerinalang.jvm;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLockManager {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk0MjExOA=="}, "originalCommit": {"oid": "cadb789f9c0e9796ee673f4f76a61464e47d3384"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDQwODkzOnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMzowOToyOVrOFtJMjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNDo0NjoxMlrOFtVoaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDkwOA==", "bodyText": "I think synchronized does not support your intention here. computeIfAbsent is atomic according to docs.\nIf the only getter we have is creating a lock too maybe we can remove addLockToMap function", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r382880908", "createdAt": "2020-02-22T03:09:29Z", "author": {"login": "KRVPerera"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockStore.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing,\n+ *   software distributed under the License is distributed on an\n+ *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *   KIND, either express or implied.  See the License for the\n+ *   specific language governing permissions and limitations\n+ *   under the License.\n+ */\n+\n+package org.ballerinalang.jvm;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLockStore {\n+\n+    /**\n+     * The map of locks inferred.\n+     */\n+    private  Map<String, BLock> globalLockMap;\n+\n+    public BLockStore() {\n+        globalLockMap = new ConcurrentHashMap<>();\n+    }\n+\n+    public void addLockToMap(String lockName) {\n+        globalLockMap.put(lockName, new BLock());\n+    }\n+\n+    public synchronized BLock getLockFromMap(String lockName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10af188b245d8faa97a82137be618ae2f2cb109a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA4NDY1MQ==", "bodyText": "Yes, should remove this.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r383084651", "createdAt": "2020-02-24T04:46:12Z", "author": {"login": "dulvinw"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockStore.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing,\n+ *   software distributed under the License is distributed on an\n+ *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *   KIND, either express or implied.  See the License for the\n+ *   specific language governing permissions and limitations\n+ *   under the License.\n+ */\n+\n+package org.ballerinalang.jvm;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLockStore {\n+\n+    /**\n+     * The map of locks inferred.\n+     */\n+    private  Map<String, BLock> globalLockMap;\n+\n+    public BLockStore() {\n+        globalLockMap = new ConcurrentHashMap<>();\n+    }\n+\n+    public void addLockToMap(String lockName) {\n+        globalLockMap.put(lockName, new BLock());\n+    }\n+\n+    public synchronized BLock getLockFromMap(String lockName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDkwOA=="}, "originalCommit": {"oid": "10af188b245d8faa97a82137be618ae2f2cb109a"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDQwOTExOnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMzowOTo1MFrOFtJMog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNDo0NTo1MVrOFtVoQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDkzMA==", "bodyText": "Shouldn't this be a thread sage singleton", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r382880930", "createdAt": "2020-02-22T03:09:50Z", "author": {"login": "KRVPerera"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockStore.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing,\n+ *   software distributed under the License is distributed on an\n+ *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *   KIND, either express or implied.  See the License for the\n+ *   specific language governing permissions and limitations\n+ *   under the License.\n+ */\n+\n+package org.ballerinalang.jvm;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLockStore {\n+\n+    /**\n+     * The map of locks inferred.\n+     */\n+    private  Map<String, BLock> globalLockMap;\n+\n+    public BLockStore() {\n+        globalLockMap = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10af188b245d8faa97a82137be618ae2f2cb109a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA4NDYxMQ==", "bodyText": "This class is accessed only once per program, using the init class in jbal", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r383084611", "createdAt": "2020-02-24T04:45:51Z", "author": {"login": "dulvinw"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BLockStore.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing,\n+ *   software distributed under the License is distributed on an\n+ *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *   KIND, either express or implied.  See the License for the\n+ *   specific language governing permissions and limitations\n+ *   under the License.\n+ */\n+\n+package org.ballerinalang.jvm;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLockStore {\n+\n+    /**\n+     * The map of locks inferred.\n+     */\n+    private  Map<String, BLock> globalLockMap;\n+\n+    public BLockStore() {\n+        globalLockMap = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDkzMA=="}, "originalCommit": {"oid": "10af188b245d8faa97a82137be618ae2f2cb109a"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjEyMzQ5OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/statements/BLangLock.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNjo0Njo1N1rOFtWyMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNjo0Njo1N1rOFtWyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEwMzUzOA==", "bodyText": "this is an unused variable.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20809#discussion_r383103538", "createdAt": "2020-02-24T06:46:57Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/statements/BLangLock.java", "diffHunk": "@@ -43,10 +32,6 @@\n \n     public BLangBlockStmt body;\n \n-    public Set<BVarSymbol> lockVariables = new HashSet<>();\n-\n-    public Map<BVarSymbol, Set<BLangStructFieldAccessExpr>> fieldVariables = new HashMap<>();\n-\n     public String uuid;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10af188b245d8faa97a82137be618ae2f2cb109a"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1258, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}