{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4Mzg3MTUy", "number": 24430, "title": "Enable LangLib test that fail due to assert errors and positions", "bodyText": "Purpose\nEnable LangLib test that fail due to assert errors and positions\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-06-23T07:51:31Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430", "merged": true, "mergeCommit": {"oid": "c73c13528e2a9a38a7400894ccad15c47e31fac9"}, "closed": true, "closedAt": "2020-07-03T11:14:38Z", "author": {"login": "m36dot"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuAlP4gH2gAyNDM4Mzg3MTUyOmI5NTk1NTAyMzA5NDU0ZjQ1N2FjYTExNzFmNjFiZTk0MDY4YTU4ZGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxRiflAFqTQ0MjM0MTU5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b9595502309454f457aca1171f61be94068a58db", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b9595502309454f457aca1171f61be94068a58db", "committedDate": "2020-06-23T07:47:17Z", "message": "Fix position for unary expressions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "646740f71d04426057716e05e504bd1f90e3fdcc", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/646740f71d04426057716e05e504bd1f90e3fdcc", "committedDate": "2020-06-23T07:49:38Z", "message": "Enabled testNegativeIntSubType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63c2135338593835ea5d9b60b8cc6e04e89b6eda", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/63c2135338593835ea5d9b60b8cc6e04e89b6eda", "committedDate": "2020-06-23T11:09:14Z", "message": "Fix position of BLangXMLTextLiteral and BLangXMLProcInsLiteral Node;Enable testNegativeConstraint test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d935c6ed62b91901bfc1aa95af44a010a551e37a", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d935c6ed62b91901bfc1aa95af44a010a551e37a", "committedDate": "2020-06-23T11:09:43Z", "message": "Remove extra comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f479a72934ab740652145b5a3b57e0d1d0f5b9bc", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f479a72934ab740652145b5a3b57e0d1d0f5b9bc", "committedDate": "2020-06-23T11:56:14Z", "message": "Fix position for restArgumentNode; enable testTypeParamNegative test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6de6b6e87a073fab62db31a4bd16f12f94b4f98", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d6de6b6e87a073fab62db31a4bd16f12f94b4f98", "committedDate": "2020-06-24T04:07:01Z", "message": "Enable testForeachSemanticsNegative test by commenting out error binding pattern usages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "381afa2290f05daccf8b86acbc92613f853d4a90", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/381afa2290f05daccf8b86acbc92613f853d4a90", "committedDate": "2020-06-24T04:40:54Z", "message": "Enable testForeachVarTypeNegative and add position for BLangBuiltInRefTypeNode and BLangConstrainedType"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MzU5MTQw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#pullrequestreview-436359140", "createdAt": "2020-06-24T06:31:01Z", "commit": {"oid": "381afa2290f05daccf8b86acbc92613f853d4a90"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNjozMTowMlrOGoEr4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNjozNDo1OFrOGoEx2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY3Mjk5NQ==", "bodyText": "As discussed in the meeting, positions in the new tree should be correct.\nLet's verify that and update the test case  with the correct line/column number info.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#discussion_r444672995", "createdAt": "2020-06-24T06:31:02Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -2901,7 +2889,7 @@ public BLangNode transform(XMLTextNode xmlTextNode) {\n \n     private BLangNode createXMLLiteral(TemplateExpressionNode expressionNode) {\n         BLangXMLTextLiteral xmlTextLiteral = (BLangXMLTextLiteral) TreeBuilder.createXMLTextLiteralNode();\n-        xmlTextLiteral.pos = getPosition(expressionNode);\n+        xmlTextLiteral.pos = getPosition(expressionNode.content().get(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "381afa2290f05daccf8b86acbc92613f853d4a90"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY3NDUyMQ==", "bodyText": "I feel it's better to leave this disabled, since it has unsupported features (functional binding pattern).\nOtherwise we will lose the track of this, since this is enabled..", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#discussion_r444674521", "createdAt": "2020-06-24T06:34:58Z", "author": {"login": "SupunS"}, "path": "langlib/langlib-test/src/test/java/org/ballerinalang/langlib/test/statements/foreach/ForeachNegativeTests.java", "diffHunk": "@@ -30,10 +30,10 @@\n  */\n public class ForeachNegativeTests {\n \n-    @Test(enabled = false)\n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "381afa2290f05daccf8b86acbc92613f853d4a90"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef427218e838a326c07a778901bdf1a6c1214be5", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ef427218e838a326c07a778901bdf1a6c1214be5", "committedDate": "2020-06-24T09:22:34Z", "message": "Refactor old test position to use up new position of parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b40b9e1ef1dc8f2ed459373ae9e103c0b4117f28", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b40b9e1ef1dc8f2ed459373ae9e103c0b4117f28", "committedDate": "2020-06-24T10:53:54Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into langlibTestAssertAndNullPointers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5427a4a9b18c54712bcb7367c83085a572051754", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5427a4a9b18c54712bcb7367c83085a572051754", "committedDate": "2020-06-30T04:53:19Z", "message": "Disable Foreach sematic negative test since we dont have error-binding-pattern"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "886674c8624ba325ad82c0dc3261f985e314e874", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/886674c8624ba325ad82c0dc3261f985e314e874", "committedDate": "2020-06-30T04:54:02Z", "message": "Disable Foreach sematic negative test since we dont have error-binding-pattern"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc272cee9c3b6d4c77cad34c202464fbed1b662c", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fc272cee9c3b6d4c77cad34c202464fbed1b662c", "committedDate": "2020-07-01T04:49:46Z", "message": "Enabled tests from LangLibValueTest.java; corrected spec deviations in old parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dda10a94a795d3cc769b5e9a489eebe1c518a736", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dda10a94a795d3cc769b5e9a489eebe1c518a736", "committedDate": "2020-07-01T04:55:39Z", "message": "Merge from master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49e276681332e562d21a88e77ea286a4f57018ac", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/49e276681332e562d21a88e77ea286a4f57018ac", "committedDate": "2020-07-01T05:37:01Z", "message": "Fix checkstyle issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMTI1ODEy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#pullrequestreview-442125812", "createdAt": "2020-07-03T03:30:11Z", "commit": {"oid": "49e276681332e562d21a88e77ea286a4f57018ac"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMzozMDoxMlrOGsiqpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMzozMzoyMVrOGsis8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM1ODUwMw==", "bodyText": "need this change?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#discussion_r449358503", "createdAt": "2020-07-03T03:30:12Z", "author": {"login": "SupunS"}, "path": "langlib/langlib-test/src/test/resources/test-src/statements/foreach/foreach-semantics-negative.bal", "diffHunk": "@@ -215,4 +215,4 @@ function print(any... v) {\n \n function concatString(int index, string value) {\n     output = output + index.toString() + \":\" + value + \" \";\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49e276681332e562d21a88e77ea286a4f57018ac"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM1ODg4Ng==", "bodyText": "do we need these whitespace changes?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#discussion_r449358886", "createdAt": "2020-07-03T03:32:14Z", "author": {"login": "SupunS"}, "path": "langlib/langlib-test/src/test/java/org/ballerinalang/langlib/test/statements/foreach/ForeachNegativeTests.java", "diffHunk": "@@ -36,31 +36,31 @@ public void testForeachSemanticsNegative() {\n         Assert.assertEquals(compile.getErrorCount(), 18);\n         int index = 0;\n         BAssertUtil.validateError(compile, index++,\n-                                  \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n-                                  39, 17);\n+                \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n+                39, 17);\n         BAssertUtil.validateError(compile, index++,\n-                                  \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n-                                  48, 17);\n+                \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n+                48, 17);\n         BAssertUtil.validateError(compile, index++, \"redeclared symbol 'i'\", 48, 18);\n         BAssertUtil.validateError(compile, index++, \"redeclared symbol 's'\", 48, 21);\n         BAssertUtil.validateError(compile, index++,\n-                                  \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n-                                  55, 17);\n+                \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n+                55, 17);\n         BAssertUtil.validateError(compile, index++, \"undefined symbol 'i'\", 58, 13);\n         BAssertUtil.validateError(compile, index++, \"incompatible types: 'int' is not an iterable collection\", 63,\n                 22);\n         BAssertUtil.validateError(compile, index++,\n-                                  \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n-                                  76, 17);\n+                \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n+                76, 17);\n         BAssertUtil.validateError(compile, index++,\n-                                  \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n-                                  84, 17);\n+                \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n+                84, 17);\n         BAssertUtil.validateError(compile, index++,\n-                                  \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'json'\",\n-                                  93, 17);\n+                \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'json'\",\n+                93, 17);\n         BAssertUtil.validateError(compile, index++,\n-                                  \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n-                                  119, 17);\n+                \"invalid tuple binding pattern: attempted to infer a tuple type, but found 'string'\",\n+                119, 17);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49e276681332e562d21a88e77ea286a4f57018ac"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM1OTA5MQ==", "bodyText": "any reason for comment-out these?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#discussion_r449359091", "createdAt": "2020-07-03T03:33:21Z", "author": {"login": "SupunS"}, "path": "langlib/langlib-test/src/test/resources/test-src/valuelib_test.bal", "diffHunk": "@@ -520,13 +530,13 @@ type StringArray string[];\n function testCloneWithTypeStringArray() {\n    string anArray = \"[\\\"hello\\\", \\\"world\\\"]\";\n    json j = <json> anArray.fromJsonString();\n-    string[]|error cloned = j.cloneWithType(StringArray);\n-    assert(cloned is string[], true);\n+// string[]|error cloned = j.cloneWithType(StringArray);\n+// assert(cloned is string[], true);\n \n-    string[]  clonedArr= <string[]> a2;\n-    assert(clonedArr.length(), anArray.length());\n-    assert(clonedArr[0], \"Hello\");\n-    assert(clonedArr[1], \"World\");\n+// string[]  clonedArr= <string[]> a2;\n+// assert(clonedArr.length(), anArray.length());\n+// assert(clonedArr[0], \"Hello\");\n+// assert(clonedArr[1], \"World\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49e276681332e562d21a88e77ea286a4f57018ac"}, "originalPosition": 107}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c42f88a476156a3e49b58b76f94421a5cf90dd2", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3c42f88a476156a3e49b58b76f94421a5cf90dd2", "committedDate": "2020-07-03T05:41:58Z", "message": "Add newline to EOF"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f64d24931f2201fa574f7d7bb6633d2c3f29c0e1", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f64d24931f2201fa574f7d7bb6633d2c3f29c0e1", "committedDate": "2020-07-03T05:46:19Z", "message": "Fix whitespace change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "531bb16e71954e5b59004394b89bef178eafaed6", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/531bb16e71954e5b59004394b89bef178eafaed6", "committedDate": "2020-07-03T06:20:07Z", "message": "Fix white spacing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMzQxNTk5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24430#pullrequestreview-442341599", "createdAt": "2020-07-03T11:14:26Z", "commit": {"oid": "531bb16e71954e5b59004394b89bef178eafaed6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4215, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}