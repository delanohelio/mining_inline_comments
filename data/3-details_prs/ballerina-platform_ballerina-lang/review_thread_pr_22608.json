{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMzA3MjM5", "number": 22608, "reviewThreads": {"totalCount": 95, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMzo1MjoyM1rODx52Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNTozNzozN1rODyISdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjU0NTQ3OnYy", "diffSide": "LEFT", "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMzo1MjoyM1rOGFo1Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMzo1MjoyM1rOGFo1Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU2NTA3OQ==", "bodyText": "Shall we keep these details and replace the examples with code snippets and BBEs.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408565079", "createdAt": "2020-04-15T03:52:23Z", "author": {"login": "daneshk"}, "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "diffHunk": "@@ -127,385 +104,26 @@ A hub client endpoint is also made available to publishers and subscribers to pe\n - Subscribers\n   - Subscribe/Unsubscribe to/from topics at a hub\n \n-## Samples\n-This sample demonstrates a Subscriber Service with `subscribeOnStartUp` set to true. This will result in a\n- subscription request being sent to the specified hub for the specified topic, with the specified lease seconds value \n- and the specified secret for authenticated content distribution.\n-Since an `onIntentVerification` resource function is not included, intent verification for subscription and unsubscription \n-requests would happen automatically, if the topic specified in the request matches that specified as an annotation or \n-that discovered for the annotated resource URL.\n- \n-```ballerina\n-import ballerina/log;\n-import ballerina/websub;\n-\n-listener websub:Listener websubEP = new(8181);\n-\n-@websub:SubscriberServiceConfig {\n-    path: \"/websub\",\n-    subscribeOnStartUp: true,\n-    target: [\"<HUB_URL>\", \"<TOPIC_URL>\"],\n-    leaseSeconds: 3600,\n-    secret: \"<SECRET>\"\n-}\n-service websubSubscriber on websubEP {\n-\n-    resource function onNotification(websub:Notification notification) {\n-        var payload = notification.getTextPayload();\n-        if (payload is string) {\n-            log:printInfo(\"WebSub Notification Received: \" + payload);\n-        } else {\n-            log:printError(\"Error retrieving payload as string\", payload);\n-        }\n-    }\n-}\n-```\n-\n-Explicit intent verification can be done by introducing an `onIntentVerification` resource function.\n-```ballerina\n-import ballerina/http;\n-import ballerina/log;\n-import ballerina/websub;\n-\n-listener websub:Listener websubEP = new(8181);\n-\n-@websub:SubscriberServiceConfig {\n-    path: \"/websub\",\n-    subscribeOnStartUp: true,\n-    target: [\"<HUB_URL>\", \"<TOPIC_URL>\"],\n-    leaseSeconds: 3600,\n-    secret: \"<SECRET>\"\n-}\n-service websubSubscriber on websubEP {\n-\n-    resource function onIntentVerification(websub:Caller caller, websub:IntentVerificationRequest request) {\n-        http:Response response = new;\n-        // Insert logic to build subscription/unsubscription intent verification response.\n-        var result = caller->respond(response);\n-        if (result is error) { \n-            log:printError(\"Error responding to intent verification request\", result);\n-        }\n-    }\n-\n-    resource function onNotification(websub:Notification notification) {\n-        var payload = notification.getTextPayload();\n-        if (payload is string) {\n-            log:printInfo(\"WebSub Notification Received: \" + payload);\n-        } else {\n-            log:printError(\"Error retrieving payload as string\", payload);\n-        }\n-    }\n-}\n-```\n-\n-Functions are made available on the `websub:IntentVerificationRequest` to build a subscription or unsubscription \n-verification response, specifying the topic to verify intent against:\n-```ballerina\n-http:Response response = request.buildSubscriptionVerificationResponse(\"<TOPIC_TO_VERIFY_FOR>\");\n-```\n-```ballerina\n-http:Response response = request.buildUnsubscriptionVerificationResponse(\"<TOPIC_TO_VERIFY_FOR>\");\n-```\n- \n-Ballerina publishers can start up and publish directly to the Ballerina WebSub hub.\n-```ballerina\n-import ballerina/log;\n-import ballerina/http;\n-import ballerina/runtime;\n-import ballerina/websub;\n-\n-public function main() {\n-\n-    log:printInfo(\"Starting up the Ballerina Hub Service\");\n-    var result = websub:startHub(new http:Listener(9191));\n-    websub:Hub webSubHub = result is websub:Hub ? result : result.startedUpHub;\n-\n-    var registrationResponse = webSubHub.registerTopic(\"<TOPIC_URL>\");\n-    if (registrationResponse is error) {\n-        log:printError(\"Error occurred registering topic: \" + <string>registrationResponse.detail()?.message);\n-    } else {\n-        log:printInfo(\"Topic registration successful!\");\n-    }\n-\n-    // Make the publisher wait until the subscriber subscribes at the hub.\n-    runtime:sleep(20000);\n-\n-    log:printInfo(\"Publishing update to internal Hub\");\n-    var publishResponse = webSubHub.publishUpdate(\"<TOPIC_URL>\", {\"action\": \"publish\", \"mode\": \"internal-hub\"});\n-    if (publishResponse is error) {\n-        log:printError(\"Error notifying hub: \" + <string>publishResponse.detail()?.message);\n-    } else {\n-        log:printInfo(\"Update notification successful!\");\n-    }\n-\n-    // Make sure the service is running until the subscriber receives the update notification.\n-    runtime:sleep(5000);\n-}\n-```\n-\n-Ballerina publishers can also use the `websub:PublisherClient` to register topics at Ballerina WebSub hubs \n-and publish/notify updates to the remote hubs.\n-```ballerina\n-import ballerina/log;\n-import ballerina/runtime;\n-import ballerina/websub;\n-\n-websub:PublisherClient websubHubClientEP = new (\"https://localhost:9191/websub/hub\");\n-\n-public function main() {\n-\n-    var registrationResponse = websubHubClientEP->registerTopic(\"<TOPIC_URL>\");\n-    if (registrationResponse is error) {\n-        log:printError(\"Error occurred registering topic: \" + <string>registrationResponse.detail()?.message);\n-    } else {\n-        log:printInfo(\"Topic registration successful!\");\n-    }\n-\n-    // Make the publisher wait until the subscriber subscribes at the hub.\n-    runtime:sleep(10000);\n-\n-    log:printInfo(\"Publishing update to remote Hub\");\n-    var publishResponse = websubHubClientEP->publishUpdate(\"<TOPIC_URL>\", { \"action\": \"publish\", \"mode\": \"remote-hub\" });\n-    if (publishResponse is error) {\n-        log:printError(\"Error notifying hub: \" + <string>publishResponse.detail()?.message);\n-    } else {\n-        log:printInfo(\"Update notification successful!\");\n-    }\n-\n-}\n-```\n-\n-The `websub:SubscriptionClient` can be used by subscribers to send subscription and unsubscription requests explicitly.\n-```ballerina\n-import ballerina/log;\n-import ballerina/websub;\n-\n-websub:SubscriptionClient websubHubClientEP = new(\"<HUB_URL>\");\n-\n-public function main() {\n-\n-    // Send subscription request for a subscriber service.\n-    websub:SubscriptionChangeRequest subscriptionRequest = {\n-        topic: \"<TOPIC_URL>\", \n-        callback: \"<CALLBACK_URL>\",\n-        secret: \"<SECRET>\"\n-    };\n-\n-    var subscriptionChangeResponse = websubHubClientEP->subscribe(subscriptionRequest);\n-    if (subscriptionChangeResponse is websub:SubscriptionChangeResponse) {\n-        log:printInfo(\"Subscription Request successful at Hub [\" + subscriptionChangeResponse.hub \n-                        + \"] for Topic [\" + subscriptionChangeResponse.topic + \"]\");\n-    } else {\n-        log:printError(\"Error occurred with Subscription Request\", err = subscriptionChangeResponse);\n-    }\n-\n-    // Send unsubscription request for the subscriber service.\n-    websub:SubscriptionChangeRequest unsubscriptionRequest = {\n-        topic: \"<TOPIC_URL>\",\n-        callback: \"<CALLBACK_URL>\"\n-    };\n-\n-    subscriptionChangeResponse = websubHubClientEP->unsubscribe(unsubscriptionRequest);\n-    if (subscriptionChangeResponse is websub:SubscriptionChangeResponse) {\n-        log:printInfo(\"Unsubscription Request successful at Hub [\" + subscriptionChangeResponse.hub\n-                + \"] for Topic [\" + subscriptionChangeResponse.topic + \"]\");\n-    } else {\n-        log:printError(\"Error occurred with Unsubscription Request\", err = subscriptionChangeResponse);\n-    }\n-}\n-```\n-\n-## Introducing Specific Subscriber Services (Webhook Callback Services)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 247}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjU1NjY1OnYy", "diffSide": "LEFT", "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMzo1OToyNFrOGFo7pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMzo1OToyNFrOGFo7pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU2NjY5NA==", "bodyText": "Send subscription request on service startup", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408566694", "createdAt": "2020-04-15T03:59:24Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "diffHunk": "@@ -127,385 +104,26 @@ A hub client endpoint is also made available to publishers and subscribers to pe\n - Subscribers\n   - Subscribe/Unsubscribe to/from topics at a hub\n \n-## Samples", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjU2NjkzOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDowNjowMlrOGFpBrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDowNjowMlrOGFpBrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU2ODIzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + host - The host name/IP of the  WebSub Subscriber Servic\n          \n          \n            \n            # + host - The hostname/IP of the  WebSub Subscriber Service", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408568236", "createdAt": "2020-04-15T04:06:02Z", "author": {"login": "daneshk"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -188,10 +225,10 @@ function externRetrieveSubscriptionParameters(Listener subscriberListener) retur\n } external;\n \n \n-# Object representing the configuration for the WebSub Subscriber Service Endpoint.\n+# Represents the configuration for the WebSub Subscriber Service.\n #\n-# + host - The host name/IP of the endpoint\n-# + httpServiceSecureSocket - The SSL configurations for the service endpoint\n+# + host - The host name/IP of the  WebSub Subscriber Servic", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjU2NzIzOnYy", "diffSide": "LEFT", "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDowNjoxMVrOGFpB2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDowNjoxMVrOGFpB2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU2ODI4MA==", "bodyText": "Do NOT remove these theoretical concepts? Rename the section as I have proposed above add following sentence to L131\n\nWhen the subscribeOnStartUp is set to true in the Subscriber Service, it will result in a", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408568280", "createdAt": "2020-04-15T04:06:11Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "diffHunk": "@@ -127,385 +104,26 @@ A hub client endpoint is also made available to publishers and subscribers to pe\n - Subscribers\n   - Subscribe/Unsubscribe to/from topics at a hub\n \n-## Samples\n-This sample demonstrates a Subscriber Service with `subscribeOnStartUp` set to true. This will result in a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjU2ODI4OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDowNjo0OVrOGFpCdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDowNjo0OVrOGFpCdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU2ODQzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + httpServiceSecureSocket - The SSL configurations for the WebSub Subscriber Servic\n          \n          \n            \n            # + httpServiceSecureSocket - The SSL configurations for the WebSub Subscriber Service", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408568438", "createdAt": "2020-04-15T04:06:49Z", "author": {"login": "daneshk"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -188,10 +225,10 @@ function externRetrieveSubscriptionParameters(Listener subscriberListener) retur\n } external;\n \n \n-# Object representing the configuration for the WebSub Subscriber Service Endpoint.\n+# Represents the configuration for the WebSub Subscriber Service.\n #\n-# + host - The host name/IP of the endpoint\n-# + httpServiceSecureSocket - The SSL configurations for the service endpoint\n+# + host - The host name/IP of the  WebSub Subscriber Servic\n+# + httpServiceSecureSocket - The SSL configurations for the WebSub Subscriber Servic", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjU4MTA5OnYy", "diffSide": "LEFT", "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoxNDoxNFrOGFpJwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoxNDoxNFrOGFpJwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3MDMwNg==", "bodyText": "These concepts are needed. Please undo all of these and add a minimum code snippet introducing a heading. For example, the here L164 can be replaced with a topic as follows\n\nExplicit intent verification\nUnder that keep the statement in the L164\nThen keep only L179 to L189 as the code snippet which explains this further\n\nCan you do the same for the rest as well? Please add a proper heading as a minimum code. It doesn't matter these are repeated in BBEs. These are the basics. So the user should learn this before moving to the BBEs", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408570306", "createdAt": "2020-04-15T04:14:14Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "diffHunk": "@@ -127,385 +104,26 @@ A hub client endpoint is also made available to publishers and subscribers to pe\n - Subscribers\n   - Subscribe/Unsubscribe to/from topics at a hub\n \n-## Samples\n-This sample demonstrates a Subscriber Service with `subscribeOnStartUp` set to true. This will result in a\n- subscription request being sent to the specified hub for the specified topic, with the specified lease seconds value \n- and the specified secret for authenticated content distribution.\n-Since an `onIntentVerification` resource function is not included, intent verification for subscription and unsubscription \n-requests would happen automatically, if the topic specified in the request matches that specified as an annotation or \n-that discovered for the annotated resource URL.\n- \n-```ballerina\n-import ballerina/log;\n-import ballerina/websub;\n-\n-listener websub:Listener websubEP = new(8181);\n-\n-@websub:SubscriberServiceConfig {\n-    path: \"/websub\",\n-    subscribeOnStartUp: true,\n-    target: [\"<HUB_URL>\", \"<TOPIC_URL>\"],\n-    leaseSeconds: 3600,\n-    secret: \"<SECRET>\"\n-}\n-service websubSubscriber on websubEP {\n-\n-    resource function onNotification(websub:Notification notification) {\n-        var payload = notification.getTextPayload();\n-        if (payload is string) {\n-            log:printInfo(\"WebSub Notification Received: \" + payload);\n-        } else {\n-            log:printError(\"Error retrieving payload as string\", payload);\n-        }\n-    }\n-}\n-```\n-\n-Explicit intent verification can be done by introducing an `onIntentVerification` resource function.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjU4MjQyOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoxNTowN1rOGFpKlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoxNTowN1rOGFpKlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3MDUxNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + request - A `http:Request` received for intent verification\n          \n          \n            \n            # + request - An `http:Request` received for intent verification\n          \n      \n    \n    \n  \n\nFix all the occurences", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408570516", "createdAt": "2020-04-15T04:15:07Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "diffHunk": "@@ -130,7 +130,7 @@ public const TOPIC_ID_HEADER_AND_PAYLOAD = \"TOPIC_ID_HEADER_AND_PAYLOAD\";\n # + challenge - The challenge to be echoed to verify intent to subscribe/unsubscribe\n # + leaseSeconds - The lease seconds period for which a subscription will be active if intent verification\n #                  is being done for subscription\n-# + request - The HTTP request received for intent verification\n+# + request - A `http:Request` received for intent verification", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjU4NDYzOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoxNjozMlrOGFpL7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoxNjo1MFrOGFpMNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3MDg2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - A`http:Response` for the hub verifying/denying intent to subscribe\n          \n          \n            \n                # + return - An`http:Response`, which to the hub verifying/denying intent to subscribe", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408570861", "createdAt": "2020-04-15T04:16:32Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "diffHunk": "@@ -142,15 +142,15 @@ public type IntentVerificationRequest object {\n     # Builds the response for the request, verifying intention to subscribe, if the topic matches that expected.\n     #\n     # + expectedTopic - The topic for which subscription should be accepted\n-    # + return - `http:Response` The response to the hub verifying/denying intent to subscribe\n+    # + return - A`http:Response` for the hub verifying/denying intent to subscribe", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3MDkzMw==", "bodyText": "Fix other occurrences as well", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408570933", "createdAt": "2020-04-15T04:16:50Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "diffHunk": "@@ -142,15 +142,15 @@ public type IntentVerificationRequest object {\n     # Builds the response for the request, verifying intention to subscribe, if the topic matches that expected.\n     #\n     # + expectedTopic - The topic for which subscription should be accepted\n-    # + return - `http:Response` The response to the hub verifying/denying intent to subscribe\n+    # + return - A`http:Response` for the hub verifying/denying intent to subscribe", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3MDg2MQ=="}, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjU4Njc0OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoxNzo1N1rOGFpNLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoxNzo1N1rOGFpNLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3MTE4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - An `true` if the specified header key exists or else `false`\n          \n          \n            \n                # + return - `true` if the specified header key exists or else `false`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408571183", "createdAt": "2020-04-15T04:17:57Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "diffHunk": "@@ -261,17 +261,17 @@ public type Notification object {\n         return self.request.getQueryParams();\n     }\n \n-    # Retrieves the `Entity` associated with the content delivery request.\n+    # Retrieves the `mime:Entity` associated with the content delivery request.\n     #\n-    # + return - The `Entity` of the request. An `error` is returned, if entity construction fails\n+    # + return - The `mime:Entity` of the request or else an `error` if entity construction fails\n     public function getEntity() returns mime:Entity|error {\n         return self.request.getEntity();\n     }\n \n     # Returns whether the requested header key exists in the header map of the content delivery request.\n     #\n     # + headerName - The header name\n-    # + return - Returns true if the specified header key exists\n+    # + return - An `true` if the specified header key exists or else `false`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjU4OTQ0OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoxOToxOFrOGFpOqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoxOToxOFrOGFpOqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3MTU2Mw==", "bodyText": "Why did you remove this part?\n\nIdeally, the Notification.hasHeader() needs to be used to check the existence of a header initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408571563", "createdAt": "2020-04-15T04:19:18Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "diffHunk": "@@ -280,17 +280,15 @@ public type Notification object {\n     # these values is returned.\n     #\n     # + headerName - The header name\n-    # + return - The first header value for the specified header name. Panic if no header is found. Ideally, the\n-    #            `Notification.hasHeader()` needs to be used to check the existence of a header initially.\n+    # + return - The first header value for the specified header name or else Panics if no header is found.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjU4OTc4OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoxOTozMVrOGFpO1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoxOTozMVrOGFpO1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3MTYwNQ==", "bodyText": "Same as above", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408571605", "createdAt": "2020-04-15T04:19:31Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "diffHunk": "@@ -280,17 +280,15 @@ public type Notification object {\n     # these values is returned.\n     #\n     # + headerName - The header name\n-    # + return - The first header value for the specified header name. Panic if no header is found. Ideally, the\n-    #            `Notification.hasHeader()` needs to be used to check the existence of a header initially.\n+    # + return - The first header value for the specified header name or else Panics if no header is found.\n     public function getHeader(string headerName) returns @tainted string {\n         return self.request.getHeader(headerName);\n     }\n \n     # Retrieves all the header values to which the specified header key maps to.\n     #\n     # + headerName - The header name\n-    # + return - The header values the specified header key maps to. Panic if no header is found. Ideally, the\n-    #            `Notification.hasHeader()` needs to be used to check the existence of a header initially.\n+    # + return - The header values for the specified header key maps to or else Panics if no header is found.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjU5MDc4OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoyMDoxMFrOGFpPaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoyMDoyNlrOGFpPqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3MTc1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - The first header value for the specified header name or else Panics if no header is found.\n          \n          \n            \n                # + return - The first header value for the specified header name or else panic if no header is found.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408571755", "createdAt": "2020-04-15T04:20:10Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "diffHunk": "@@ -280,17 +280,15 @@ public type Notification object {\n     # these values is returned.\n     #\n     # + headerName - The header name\n-    # + return - The first header value for the specified header name. Panic if no header is found. Ideally, the\n-    #            `Notification.hasHeader()` needs to be used to check the existence of a header initially.\n+    # + return - The first header value for the specified header name or else Panics if no header is found.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3MTgxOA==", "bodyText": "Check others as well", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408571818", "createdAt": "2020-04-15T04:20:26Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "diffHunk": "@@ -280,17 +280,15 @@ public type Notification object {\n     # these values is returned.\n     #\n     # + headerName - The header name\n-    # + return - The first header value for the specified header name. Panic if no header is found. Ideally, the\n-    #            `Notification.hasHeader()` needs to be used to check the existence of a header initially.\n+    # + return - The first header value for the specified header name or else Panics if no header is found.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3MTc1NQ=="}, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjU5NTkxOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoyMzoyOVrOGFpSgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDoyMzoyOVrOGFpSgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3MjU0NA==", "bodyText": "Error can be returned as a result of getXXXPayload issue. You have removed that part and only talks about an error if the content type is not JSON.\nPlease fix it, others as well\nDo not change the meaning of the docs", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408572544", "createdAt": "2020-04-15T04:23:29Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "diffHunk": "@@ -304,59 +302,58 @@ public type Notification object {\n \n     # Retrieves the type of the payload of the content delivery request (i.e: the `content-type` header value).\n     #\n-    # + return - Returns the `content-type` header value as a string\n+    # + return - The `content-type` header value as a `string`\n     public function getContentType() returns @tainted string {\n         return self.request.getContentType();\n     }\n \n     # Extracts `json` payload from the content delivery request.\n     #\n-    # + return - The `json` payload or `error` in case of errors. If the content type is not JSON, an `error` is returned.\n+    # + return - The `json` payload or else an `error` if the content type is not JSON", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjYxNjE1OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDozNjoyM1rOGFpevg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDozNjoyM1rOGFpevg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3NTY3OA==", "bodyText": "Again you have removed very important information by trying to adhere to the guidelines? Please undo this. Check other places as well", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408575678", "createdAt": "2020-04-15T04:36:23Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "diffHunk": "@@ -477,9 +477,7 @@ public type RemotePublishConfig record {|\n #               The publish URL is defined as {publicUrl}/{basePath}/{publishResourcePath} if `publicUrl` is\n #               specified, defaults to `http(s)://localhost:{port}/{basePath}/{publishResourcePath}` if not.\n # + hubConfiguration - The hub specific configuration\n-# + return - `Hub` The WebSub Hub object representing the newly started up hub, or `HubStartedUpError` indicating\n-#            that the hub is already started, and including the `websub:Hub` object representing the\n-#            already started up hub\n+# + return - A newly started WebSub Hub or else a `websub:HubStartedUpError` if the hub is already started", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 199}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjYyNTM2OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDo0MjoyOVrOGFpkVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDo0MjoyOVrOGFpkVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3NzEwOQ==", "bodyText": "Add this dropped information", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408577109", "createdAt": "2020-04-15T04:42:29Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "diffHunk": "@@ -27,14 +27,12 @@ import ballerina/java;\n # + basePath - The base path of the hub service\n # + subscriptionResourcePath - The resource path for subscription\n # + publishResourcePath - The resource path for publishing and topic registration\n-# + topicRegistrationRequired - Whether a topic needs to be registered at the hub prior to publishing/subscribing\n-#                               to the topic\n+# + topicRegistrationRequired - The status for whether a topic needs to be registered at the hub prior to\n+#                               publishing/subscribing to the topic\n # + publicUrl - The URL for the hub to be included in content delivery requests, defaults to\n #               `http(s)://localhost:{port}/websub/hub` if unspecified\n # + hubListener - The `http:Listener` to which the hub service is attached\n-# + return - `Hub` The WebSub Hub object representing the newly started up hub, or `HubStartedUpError` indicating\n-#            that the hub is already started, and including the WebSub Hub object representing the\n-#            already started up hub\n+# + return - The newly started up hub or else `websub:HubStartedUpError` if the hub is already started", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjYyNzQ5OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDo0MzozNFrOGFpleg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDo0MzozNFrOGFpleg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3NzQwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `error`if an error occurred registering the topic or esle `()`\n          \n          \n            \n            # + return - An `error` if an error occurred registering the topic or else `()`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408577402", "createdAt": "2020-04-15T04:43:34Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "diffHunk": "@@ -24,20 +24,26 @@ public type PublisherClient client object {\n     private string url;\n     private http:Client httpClient;\n \n-    # Initializer function for the client.\n-    #\n-    # + url    - The URL to publish/notify updates to\n-    # + config - The `http:ClientConfiguration` for the underlying client or `()`\n+# Initializes the `websub:PublisherClient`.\n+# ```ballerina\n+# websub:PublisherClient websubHubClientEP = new (\"http://localhost:9191/websub/publish\");\n+# ```\n+#\n+# + url    - The URL to publish/notify updates to\n+# + config - The `http:ClientConfiguration` for the underlying client or else `()`\n     public function __init(string url, http:ClientConfiguration? config = ()) {\n         self.url = url;\n         self.httpClient = new (self.url, config);\n     }\n \n-    # Registers a topic in a Ballerina WebSub Hub against which subscribers can subscribe and the publisher will\n-    # publish updates.\n-    #\n-    # + topic - The topic to register\n-    # + return - `error` if an error occurred registering the topic\n+# Registers a topic in a Ballerina WebSub Hub against which subscribers can subscribe and the publisher will\n+# publish updates.\n+# ```ballerina\n+# error? registerTopic = websubHubClientEP->registerTopic(\"http://websubpubtopic.com\");\n+# ```\n+#\n+# + topic - The topic to register\n+# + return - An `error`if an error occurred registering the topic or esle `()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjYzMTEzOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDo0NTo0OFrOGFpnmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDo0NTo0OFrOGFpnmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3Nzk0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - A subscription details if the request was successful or else an `error` if an error\n          \n          \n            \n            # + return - The `SubscriptionChangeResponse` indicating subscription details if the request was successful or else an `error` if an error", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408577944", "createdAt": "2020-04-15T04:45:48Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -36,11 +36,14 @@ public type SubscriptionClient client object {\n         self.followRedirects = config?.followRedirects;\n     }\n \n-    # Sends a subscription request to a WebSub Hub.\n-    #\n-    # + subscriptionRequest - The `SubscriptionChangeRequest` containing subscription details\n-    # + return - `SubscriptionChangeResponse` indicating subscription details, if the request was successful else\n-    #            `error` if an error occurred with the subscription request\n+# Sends a subscription request to a WebSub Hub.\n+# ```ballerina\n+# websub:SubscriptionChangeResponse|error response = websubHubClientEP->subscribe(subscriptionRequest);\n+# ```\n+#\n+# + subscriptionRequest - The `SubscriptionChangeRequest` containing subscription details\n+# + return - A subscription details if the request was successful or else an `error` if an error", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjYzMjg3OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDo0Njo1OFrOGFpomg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDo0Njo1OFrOGFpomg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3ODIwMg==", "bodyText": "Conceptually this change is incorrect. Please use the terminology subscription", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408578202", "createdAt": "2020-04-15T04:46:58Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -72,10 +77,10 @@ public type SubscriptionClient client object {\n \n # Function to build the subscription request to subscribe at the hub.\n #\n-# + mode - Whether the request is for subscription or unsubscription\n+# + mode - Whether the request is for registration or unregistration", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjY0MDAyOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDo1MToxN1rOGFpszA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNDo1MToxN1rOGFpszA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU3OTI3Ng==", "bodyText": "These are not service configs, but listener configs. Please correct other places as well\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents the configuration for the WebSub Subscriber Service.\n          \n          \n            \n            # Represents the configuration for the WebSub Subscriber Service Listener.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408579276", "createdAt": "2020-04-15T04:51:17Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -188,10 +225,10 @@ function externRetrieveSubscriptionParameters(Listener subscriberListener) retur\n } external;\n \n \n-# Object representing the configuration for the WebSub Subscriber Service Endpoint.\n+# Represents the configuration for the WebSub Subscriber Service.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc78e96980cdaaf4ea3767830cce8f1a990c6b33"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc4MzEyOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_configuration.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowNzoxM1rOGFrBdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowNzoxM1rOGFrBdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMDk1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `true` if persistence is enabled or else `false` if not\n          \n          \n            \n            # + return - `true` if persistence is enabled or else `false` otherwise", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408600951", "createdAt": "2020-04-15T06:07:13Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_configuration.bal", "diffHunk": "@@ -49,16 +49,16 @@ function startHubService(http:Listener hubServiceListener) {\n     checkpanic hubServiceListener.__start();\n }\n \n-# Function to retrieve if persistence is enabled for the Hub.\n+# Retrieves if persistence is enabled for the Hub.\n #\n-# + return - True if persistence is enabled, false if not\n+# + return - An `true` if persistence is enabled or else `false` if not", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc4Mzc2OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_configuration.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowNzozM1rOGFrB3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowNzozM1rOGFrB3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMTA1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `true` if persistence is enabled or else `false` if not\n          \n          \n            \n            # + return - `true` if persistence is enabled or else `false` otherwise", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408601055", "createdAt": "2020-04-15T06:07:33Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_configuration.bal", "diffHunk": "@@ -49,16 +49,16 @@ function startHubService(http:Listener hubServiceListener) {\n     checkpanic hubServiceListener.__start();\n }\n \n-# Function to retrieve if persistence is enabled for the Hub.\n+# Retrieves if persistence is enabled for the Hub.\n #\n-# + return - True if persistence is enabled, false if not\n+# + return - An `true` if persistence is enabled or else `false` if not\n function isHubPersistenceEnabled() returns boolean {\n     return hubPersistenceEnabled;\n }\n \n-# Function to retrieve if topics need to be registered at the Hub prior to publishing/subscribing.\n+# Retrieves if topics need to be registered at the Hub prior to publishing/subscribing.\n #\n-# + return - True if persistence is enabled, false if not\n+# + return - An `true` if persistence is enabled or else `false` if not", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc4NDQ0OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_persistence.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowNzo1M1rOGFrCSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowNzo1M1rOGFrCSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMTE2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - An `error` if an error occurred while adding the subscription, `()` otherwise\n          \n          \n            \n                # + return - An `error` if an error occurred while adding the subscription or else `()` otherwise\n          \n      \n    \n    \n  \n\nNeed to specify the error type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408601163", "createdAt": "2020-04-15T06:07:53Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_persistence.bal", "diffHunk": "@@ -17,38 +17,38 @@\n # Represents the hub persistence configuration and functions.\n public type HubPersistenceStore abstract object {\n \n-    # Function to add or update subscription details.\n+    # Adds or updates subscription details.\n     #\n     # + subscriptionDetails - The details of the subscription to add or update\n-    # + return - `error` if an error occurred while adding the subscription, `()` otherwise\n+    # + return - An `error` if an error occurred while adding the subscription, `()` otherwise", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc4NTAwOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_persistence.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowODoxNFrOGFrCsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowODoxNFrOGFrCsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMTI2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - An `error` if an error occurred while removing the subscription, `()` otherwise\n          \n          \n            \n                # + return - An `error` if an error occurred while removing the subscription or else `()` otherwise\n          \n      \n    \n    \n  \n\nNeed to specify the error type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408601264", "createdAt": "2020-04-15T06:08:14Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_persistence.bal", "diffHunk": "@@ -17,38 +17,38 @@\n # Represents the hub persistence configuration and functions.\n public type HubPersistenceStore abstract object {\n \n-    # Function to add or update subscription details.\n+    # Adds or updates subscription details.\n     #\n     # + subscriptionDetails - The details of the subscription to add or update\n-    # + return - `error` if an error occurred while adding the subscription, `()` otherwise\n+    # + return - An `error` if an error occurred while adding the subscription, `()` otherwise\n     public function addSubscription(SubscriptionDetails subscriptionDetails) returns error?;\n \n-    # Function to remove subscription details.\n+    # Removes subscription details.\n     #\n     # + subscriptionDetails - The details of the subscription to remove\n-    # + return - `error` if an error occurred while removing the subscription, `()` otherwise\n+    # + return - An `error` if an error occurred while removing the subscription, `()` otherwise", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc4NjAwOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_persistence.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowODo0MVrOGFrDRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowODo0MVrOGFrDRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMTQxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - An `error` if an error occurred while adding the topic, `()` otherwise\n          \n          \n            \n                # + return - An `error` if an error occurred while adding the topic or else `()` otherwise\n          \n      \n    \n    \n  \n\nNeed to specify the error type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408601413", "createdAt": "2020-04-15T06:08:41Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_persistence.bal", "diffHunk": "@@ -17,38 +17,38 @@\n # Represents the hub persistence configuration and functions.\n public type HubPersistenceStore abstract object {\n \n-    # Function to add or update subscription details.\n+    # Adds or updates subscription details.\n     #\n     # + subscriptionDetails - The details of the subscription to add or update\n-    # + return - `error` if an error occurred while adding the subscription, `()` otherwise\n+    # + return - An `error` if an error occurred while adding the subscription, `()` otherwise\n     public function addSubscription(SubscriptionDetails subscriptionDetails) returns error?;\n \n-    # Function to remove subscription details.\n+    # Removes subscription details.\n     #\n     # + subscriptionDetails - The details of the subscription to remove\n-    # + return - `error` if an error occurred while removing the subscription, `()` otherwise\n+    # + return - An `error` if an error occurred while removing the subscription, `()` otherwise\n     public function removeSubscription(SubscriptionDetails subscriptionDetails) returns error?;\n \n     # Function to add a topic.\n     #\n     # + topic - The topic to add\n-    # + return - `error` if an error occurred while adding the topic, `()` otherwise\n+    # + return - An `error` if an error occurred while adding the topic, `()` otherwise", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc4Njc0OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_persistence.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowODo1NlrOGFrDpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowODo1NlrOGFrDpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMTUxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - An `error` if an error occurred while removing the topic, `()` otherwise\n          \n          \n            \n                # + return - An `error` if an error occurred while removing the topic or else `()` otherwise\n          \n      \n    \n    \n  \n\nNeed to specify the error type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408601511", "createdAt": "2020-04-15T06:08:56Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_persistence.bal", "diffHunk": "@@ -17,38 +17,38 @@\n # Represents the hub persistence configuration and functions.\n public type HubPersistenceStore abstract object {\n \n-    # Function to add or update subscription details.\n+    # Adds or updates subscription details.\n     #\n     # + subscriptionDetails - The details of the subscription to add or update\n-    # + return - `error` if an error occurred while adding the subscription, `()` otherwise\n+    # + return - An `error` if an error occurred while adding the subscription, `()` otherwise\n     public function addSubscription(SubscriptionDetails subscriptionDetails) returns error?;\n \n-    # Function to remove subscription details.\n+    # Removes subscription details.\n     #\n     # + subscriptionDetails - The details of the subscription to remove\n-    # + return - `error` if an error occurred while removing the subscription, `()` otherwise\n+    # + return - An `error` if an error occurred while removing the subscription, `()` otherwise\n     public function removeSubscription(SubscriptionDetails subscriptionDetails) returns error?;\n \n     # Function to add a topic.\n     #\n     # + topic - The topic to add\n-    # + return - `error` if an error occurred while adding the topic, `()` otherwise\n+    # + return - An `error` if an error occurred while adding the topic, `()` otherwise\n     public function addTopic(string topic) returns error?;\n \n     # Function to remove a topic.\n     #\n     # + topic - The topic to remove\n-    # + return - `error` if an error occurred while removing the topic, `()` otherwise\n+    # + return - An `error` if an error occurred while removing the topic, `()` otherwise", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc4Nzg4OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_persistence.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowOToyMlrOGFrEQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowOToyMlrOGFrEQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMTY2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - An `error` if an error occurred while retrieving the subscriptions, an array of subscriber details\n          \n          \n            \n                # + return - An `error` if an error occurred while retrieving the subscriptions, an array of subscriber details\n          \n      \n    \n    \n  \n\nWrong return statement format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408601667", "createdAt": "2020-04-15T06:09:22Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_persistence.bal", "diffHunk": "@@ -17,38 +17,38 @@\n # Represents the hub persistence configuration and functions.\n public type HubPersistenceStore abstract object {\n \n-    # Function to add or update subscription details.\n+    # Adds or updates subscription details.\n     #\n     # + subscriptionDetails - The details of the subscription to add or update\n-    # + return - `error` if an error occurred while adding the subscription, `()` otherwise\n+    # + return - An `error` if an error occurred while adding the subscription, `()` otherwise\n     public function addSubscription(SubscriptionDetails subscriptionDetails) returns error?;\n \n-    # Function to remove subscription details.\n+    # Removes subscription details.\n     #\n     # + subscriptionDetails - The details of the subscription to remove\n-    # + return - `error` if an error occurred while removing the subscription, `()` otherwise\n+    # + return - An `error` if an error occurred while removing the subscription, `()` otherwise\n     public function removeSubscription(SubscriptionDetails subscriptionDetails) returns error?;\n \n     # Function to add a topic.\n     #\n     # + topic - The topic to add\n-    # + return - `error` if an error occurred while adding the topic, `()` otherwise\n+    # + return - An `error` if an error occurred while adding the topic, `()` otherwise\n     public function addTopic(string topic) returns error?;\n \n     # Function to remove a topic.\n     #\n     # + topic - The topic to remove\n-    # + return - `error` if an error occurred while removing the topic, `()` otherwise\n+    # + return - An `error` if an error occurred while removing the topic, `()` otherwise\n     public function removeTopic(string topic) returns error?;\n \n     # Function to retrieve subscription details of all subscribers.\n     #\n-    # + return - `error` if an error occurred while retrieving the subscriptions, an array of subscriber details\n+    # + return - An `error` if an error occurred while retrieving the subscriptions, an array of subscriber details", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc4ODA5OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_persistence.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowOToyOFrOGFrEaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowOToyOFrOGFrEaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMTcwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - An `error` if an error occurred while retrieving the topics, an array of topics otherwise\n          \n          \n            \n                # + return - An `error` if an error occurred while retrieving the topics, an array of topics otherwise\n          \n      \n    \n    \n  \n\nWrong return statement format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408601705", "createdAt": "2020-04-15T06:09:28Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_persistence.bal", "diffHunk": "@@ -17,38 +17,38 @@\n # Represents the hub persistence configuration and functions.\n public type HubPersistenceStore abstract object {\n \n-    # Function to add or update subscription details.\n+    # Adds or updates subscription details.\n     #\n     # + subscriptionDetails - The details of the subscription to add or update\n-    # + return - `error` if an error occurred while adding the subscription, `()` otherwise\n+    # + return - An `error` if an error occurred while adding the subscription, `()` otherwise\n     public function addSubscription(SubscriptionDetails subscriptionDetails) returns error?;\n \n-    # Function to remove subscription details.\n+    # Removes subscription details.\n     #\n     # + subscriptionDetails - The details of the subscription to remove\n-    # + return - `error` if an error occurred while removing the subscription, `()` otherwise\n+    # + return - An `error` if an error occurred while removing the subscription, `()` otherwise\n     public function removeSubscription(SubscriptionDetails subscriptionDetails) returns error?;\n \n     # Function to add a topic.\n     #\n     # + topic - The topic to add\n-    # + return - `error` if an error occurred while adding the topic, `()` otherwise\n+    # + return - An `error` if an error occurred while adding the topic, `()` otherwise\n     public function addTopic(string topic) returns error?;\n \n     # Function to remove a topic.\n     #\n     # + topic - The topic to remove\n-    # + return - `error` if an error occurred while removing the topic, `()` otherwise\n+    # + return - An `error` if an error occurred while removing the topic, `()` otherwise\n     public function removeTopic(string topic) returns error?;\n \n     # Function to retrieve subscription details of all subscribers.\n     #\n-    # + return - `error` if an error occurred while retrieving the subscriptions, an array of subscriber details\n+    # + return - An `error` if an error occurred while retrieving the subscriptions, an array of subscriber details\n     #               otherwise\n     public function retrieveAllSubscribers() returns SubscriptionDetails[]|error;\n \n     # Function to retrieve all registered topics.\n     #\n-    # + return - `error` if an error occurred while retrieving the topics, an array of topics otherwise\n+    # + return - An `error` if an error occurred while retrieving the topics, an array of topics otherwise", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc4OTAwOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowOTo0OVrOGFrE6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjowOTo0OVrOGFrE6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMTgzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Validates a subscription/unsubscription request, by validating the mode, topic and callback specified.\n          \n          \n            \n            # Validates a subscription/unsubscription request by validating the specified mode, topic, and callback.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408601835", "createdAt": "2020-04-15T06:09:49Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "diffHunk": "@@ -269,12 +269,12 @@ function getHubService() returns service {\n }\n \n \n-# Function to validate a subscription/unsubscription request, by validating the mode, topic and callback specified.\n+# Validates a subscription/unsubscription request, by validating the mode, topic and callback specified.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc4OTY2OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMDoxNFrOGFrFYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMDoxNFrOGFrFYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMTk1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `error` if validation failed for the subscription request\n          \n          \n            \n            # + return - An `error` if validation failed for the subscription request\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408601955", "createdAt": "2020-04-15T06:10:14Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "diffHunk": "@@ -269,12 +269,12 @@ function getHubService() returns service {\n }\n \n \n-# Function to validate a subscription/unsubscription request, by validating the mode, topic and callback specified.\n+# Validates a subscription/unsubscription request, by validating the mode, topic and callback specified.\n #\n # + mode - Mode specified in the subscription change request parameters\n # + topic - Topic specified in the subscription change request parameters\n # + callback - Callback specified in the subscription change request parameters\n-# + return - `error` if validation failed for the subscription request\n+# + return - An `error` if validation failed for the subscription request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5MDc4OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMDo0NFrOGFrGEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0NToyOVrOGF9OyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMjEyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `error` if an error occurred while persisting the change or else `()`\n          \n          \n            \n            # + return - An `error` if an error occurred while persisting the change or else `()`\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408602129", "createdAt": "2020-04-15T06:10:44Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "diffHunk": "@@ -385,11 +385,11 @@ function verifyIntentAndAddSubscription(string callback, string topic, map<strin\n     }\n }\n \n-# Function to add/remove the persisted details of topics registered.\n+# Adds/Removes the persisted details to/from the topics registered.\n #\n # + mode - Whether the change is for addition/removal\n # + topic - The topic for which registration is changing\n-# + return - `error` if an error occurred while persisting the change, `()` otherwise\n+# + return - An `error` if an error occurred while persisting the change or else `()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcwNjUyNg==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408706526", "createdAt": "2020-04-15T09:29:51Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "diffHunk": "@@ -385,11 +385,11 @@ function verifyIntentAndAddSubscription(string callback, string topic, map<strin\n     }\n }\n \n-# Function to add/remove the persisted details of topics registered.\n+# Adds/Removes the persisted details to/from the topics registered.\n #\n # + mode - Whether the change is for addition/removal\n # + topic - The topic for which registration is changing\n-# + return - `error` if an error occurred while persisting the change, `()` otherwise\n+# + return - An `error` if an error occurred while persisting the change or else `()`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMjEyOQ=="}, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg5OTI3Mw==", "bodyText": "+1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408899273", "createdAt": "2020-04-15T14:45:29Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "diffHunk": "@@ -385,11 +385,11 @@ function verifyIntentAndAddSubscription(string callback, string topic, map<strin\n     }\n }\n \n-# Function to add/remove the persisted details of topics registered.\n+# Adds/Removes the persisted details to/from the topics registered.\n #\n # + mode - Whether the change is for addition/removal\n # + topic - The topic for which registration is changing\n-# + return - `error` if an error occurred while persisting the change, `()` otherwise\n+# + return - An `error` if an error occurred while persisting the change or else `()`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMjEyOQ=="}, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5MTAyOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMDo1NlrOGFrGQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MzoxOFrOGF9nyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMjE3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `error` if an error occurred while persisting the change or else `()`\n          \n          \n            \n            # + return - An `error` if an error occurred while persisting the change or else `()`\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408602176", "createdAt": "2020-04-15T06:10:56Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "diffHunk": "@@ -401,11 +401,11 @@ function persistTopicRegistrationChange(string mode, string topic) returns error\n     }\n }\n \n-# Function to add/change/remove the persisted subscription details.\n+# Adds/Changes/Removes the persisted subscription details.\n #\n-# + mode - Whether the subscription change is for unsubscription/unsubscription\n+# + mode - Whether the subscription change is for subscription/unsubscription\n # + subscriptionDetails - The details of the subscription changing\n-# + return - `error` if an error occurred while persisting the change, `()` otherwise\n+# + return - An `error` if an error occurred while persisting the change or else `()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNTY3NA==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408905674", "createdAt": "2020-04-15T14:53:18Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "diffHunk": "@@ -401,11 +401,11 @@ function persistTopicRegistrationChange(string mode, string topic) returns error\n     }\n }\n \n-# Function to add/change/remove the persisted subscription details.\n+# Adds/Changes/Removes the persisted subscription details.\n #\n-# + mode - Whether the subscription change is for unsubscription/unsubscription\n+# + mode - Whether the subscription change is for subscription/unsubscription\n # + subscriptionDetails - The details of the subscription changing\n-# + return - `error` if an error occurred while persisting the change, `()` otherwise\n+# + return - An `error` if an error occurred while persisting the change or else `()`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMjE3Ng=="}, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5MTczOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMToyMFrOGFrGuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMToyMFrOGFrGuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMjI5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Distributes content to a subscriber on the notification from publishers.\n          \n          \n            \n            # Distributes content to a subscriber on the notification from the publishers.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408602297", "createdAt": "2020-04-15T06:11:20Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "diffHunk": "@@ -475,7 +475,7 @@ function fetchTopicUpdate(string topic) returns http:Response|error {\n     return fetchResponse;\n }\n \n-# Function to distribute content to a subscriber on notification from publishers.\n+# Distributes content to a subscriber on the notification from publishers.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5MjA2OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMTozMVrOGFrG8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMTozMVrOGFrG8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMjM1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Retrieves the cached subscriberCallbackClient for a given callback.\n          \n          \n            \n            # Retrieves the cached `subscriberCallbackClient` for a given callback.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408602353", "createdAt": "2020-04-15T06:11:31Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "diffHunk": "@@ -550,10 +550,10 @@ function distributeContent(string callback, SubscriptionDetails subscriptionDeta\n     return;\n }\n \n-# Function to retrieve cached subscriberCallbackClient for a given callback.\n+# Retrieves the cached subscriberCallbackClient for a given callback.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5MjU4OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMTo0NlrOGFrHOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMTo0NlrOGFrHOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMjQyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The `http:Client` for the given callback from cache or new `http:Client`\n          \n          \n            \n            # + return - The `http:Client` for the given callback from the cache or a new `http:Client`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408602425", "createdAt": "2020-04-15T06:11:46Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "diffHunk": "@@ -550,10 +550,10 @@ function distributeContent(string callback, SubscriptionDetails subscriptionDeta\n     return;\n }\n \n-# Function to retrieve cached subscriberCallbackClient for a given callback.\n+# Retrieves the cached subscriberCallbackClient for a given callback.\n #\n # + callback - The callback URL registered for the subscriber\n-# + return - `http:Client` indicating the client for a given callback from cache or new client\n+# + return - The `http:Client` for the given callback from cache or new `http:Client`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5Mzc3OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMjoyNVrOGFrH9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwOTozNTozNFrOGFxq0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMjYxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + pendingRequest - The pending subscription change request to check against\n          \n          \n            \n                # + pendingRequest - The pending subscription change request to be checked\n          \n      \n    \n    \n  \n\nagainst what?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408602612", "createdAt": "2020-04-15T06:12:25Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "diffHunk": "@@ -601,11 +601,10 @@ type PendingSubscriptionChangeRequest object {\n         self.callback = callback;\n     }\n \n-    # Function to check if two pending subscription change requests are equal.\n+    # Checks if two pending subscription change requests are equal.\n     #\n     # + pendingRequest - The pending subscription change request to check against", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcwOTg0Mg==", "bodyText": "pending subscription or unsubscription", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408709842", "createdAt": "2020-04-15T09:35:34Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "diffHunk": "@@ -601,11 +601,10 @@ type PendingSubscriptionChangeRequest object {\n         self.callback = callback;\n     }\n \n-    # Function to check if two pending subscription change requests are equal.\n+    # Checks if two pending subscription change requests are equal.\n     #\n     # + pendingRequest - The pending subscription change request to check against", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMjYxMg=="}, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5NTE0OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMjo1OFrOGFrIug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMjo1OFrOGFrIug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMjgxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Constructs an array of groups from the comma separed group string passed\n          \n          \n            \n            # Constructs an array of groups from the passed comma-separated group string", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408602810", "createdAt": "2020-04-15T06:12:58Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "diffHunk": "@@ -625,10 +624,10 @@ function buildWebSubLinkHeader(string hub, string topic) returns (string) {\n     return linkHeader;\n }\n \n-# Construct an array of groups from the comma separed group string passed\n+# Constructs an array of groups from the comma separed group string passed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5NTMzOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMzowNlrOGFrI3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMzowNlrOGFrI3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMjg0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + groupString - Comma separated string of groups\n          \n          \n            \n            # + groupString - Comma-separated string of groups", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408602847", "createdAt": "2020-04-15T06:13:06Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/hub_service.bal", "diffHunk": "@@ -625,10 +624,10 @@ function buildWebSubLinkHeader(string hub, string topic) returns (string) {\n     return linkHeader;\n }\n \n-# Construct an array of groups from the comma separed group string passed\n+# Constructs an array of groups from the comma separed group string passed\n #\n # + groupString - Comma separated string of groups", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5Njc1OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMzozOVrOGFrJow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxMzozOVrOGFrJow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMzA0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + publicUrl - The URL for the hub to be included in content delivery requests, defaults to\n          \n          \n            \n            # + publicUrl - The URL for the hub to be included in content delivery requests. The defaults value is", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408603043", "createdAt": "2020-04-15T06:13:39Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "diffHunk": "@@ -27,14 +27,12 @@ import ballerina/java;\n # + basePath - The base path of the hub service\n # + subscriptionResourcePath - The resource path for subscription\n # + publishResourcePath - The resource path for publishing and topic registration\n-# + topicRegistrationRequired - Whether a topic needs to be registered at the hub prior to publishing/subscribing\n-#                               to the topic\n+# + topicRegistrationRequired - The status for whether a topic needs to be registered at the hub prior to\n+#                               publishing/subscribing to the topic\n # + publicUrl - The URL for the hub to be included in content delivery requests, defaults to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5NzgzOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNDowM1rOGFrKOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNDowM1rOGFrKOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMzE5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The newly started up hub or else `websub:HubStartedUpError` if the hub is already started\n          \n          \n            \n            # + return - The newly-started hub or else a `websub:HubStartedUpError` if the hub is already started", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408603194", "createdAt": "2020-04-15T06:14:03Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "diffHunk": "@@ -27,14 +27,12 @@ import ballerina/java;\n # + basePath - The base path of the hub service\n # + subscriptionResourcePath - The resource path for subscription\n # + publishResourcePath - The resource path for publishing and topic registration\n-# + topicRegistrationRequired - Whether a topic needs to be registered at the hub prior to publishing/subscribing\n-#                               to the topic\n+# + topicRegistrationRequired - The status for whether a topic needs to be registered at the hub prior to\n+#                               publishing/subscribing to the topic\n # + publicUrl - The URL for the hub to be included in content delivery requests, defaults to\n #               `http(s)://localhost:{port}/websub/hub` if unspecified\n # + hubListener - The `http:Listener` to which the hub service is attached\n-# + return - `Hub` The WebSub Hub object representing the newly started up hub, or `HubStartedUpError` indicating\n-#            that the hub is already started, and including the WebSub Hub object representing the\n-#            already started up hub\n+# + return - The newly started up hub or else `websub:HubStartedUpError` if the hub is already started", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5ODQ2OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNDoxOVrOGFrKmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNDoxOVrOGFrKmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMzI4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Stops the Ballerina Hub, if started.\n          \n          \n            \n            # Stops the Ballerina Hub if started.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408603288", "createdAt": "2020-04-15T06:14:19Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "diffHunk": "@@ -50,10 +48,10 @@ function externStartUpHubService(handle basePath, handle subscriptionResourcePat\n     class: \"org.ballerinalang.net.websub.nativeimpl.HubNativeOperationHandler\"\n } external;\n \n-# Stop the Ballerina Hub, if started.\n+# Stops the Ballerina Hub, if started.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5OTExOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNDo0NVrOGFrLFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNDo0NVrOGFrLFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMzQxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - `()` if the Ballerina Hub had been started up and was stopped now or else an `error` if not\n          \n          \n            \n            # + return - `()` if the Ballerina Hub had been started and was stopped now or else an `error` otherwise\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408603415", "createdAt": "2020-04-15T06:14:45Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "diffHunk": "@@ -50,10 +48,10 @@ function externStartUpHubService(handle basePath, handle subscriptionResourcePat\n     class: \"org.ballerinalang.net.websub.nativeimpl.HubNativeOperationHandler\"\n } external;\n \n-# Stop the Ballerina Hub, if started.\n+# Stops the Ballerina Hub, if started.\n #\n # + hub - The `websub:Hub` object returned when starting the hub\n-# + return - `()` if the Ballerina Hub had been started up and was stopped now, `error` if not\n+# + return - `()` if the Ballerina Hub had been started up and was stopped now or else an `error` if not", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjc5OTc1OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNTowNVrOGFrLfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNTowNVrOGFrLfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMzUxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + content - The content to send to subscribers, with the payload and content-type specified\n          \n          \n            \n            # + content - The content to send to subscribers with the specified payload and content-type", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408603518", "createdAt": "2020-04-15T06:15:05Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "diffHunk": "@@ -69,7 +67,7 @@ function addSubscription(SubscriptionDetails subscriptionDetails) = @java:Method\n #\n # + topic - The topic for which the update should happen\n # + content - The content to send to subscribers, with the payload and content-type specified", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgwMDI2OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNToyMFrOGFrLzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MzowOFrOGF9nMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMzU5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `error` if an error occurred during publishing or esle `()`\n          \n          \n            \n            # + return - An `error` if an error occurred during publishing or esle `()`\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408603597", "createdAt": "2020-04-15T06:15:20Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "diffHunk": "@@ -69,7 +67,7 @@ function addSubscription(SubscriptionDetails subscriptionDetails) = @java:Method\n #\n # + topic - The topic for which the update should happen\n # + content - The content to send to subscribers, with the payload and content-type specified\n-# + return - `error` if an error occurred during publishing\n+# + return - An `error` if an error occurred during publishing or esle `()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNTUyMQ==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408905521", "createdAt": "2020-04-15T14:53:08Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "diffHunk": "@@ -69,7 +67,7 @@ function addSubscription(SubscriptionDetails subscriptionDetails) = @java:Method\n #\n # + topic - The topic for which the update should happen\n # + content - The content to send to subscribers, with the payload and content-type specified\n-# + return - `error` if an error occurred during publishing\n+# + return - An `error` if an error occurred during publishing or esle `()`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMzU5Nw=="}, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgwMDkxOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNTozN1rOGFrMMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNTozN1rOGFrMMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMzY5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `error` if an error occurred with registration\n          \n          \n            \n            # + return - An `error` if an error occurred during the registration\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408603698", "createdAt": "2020-04-15T06:15:37Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "diffHunk": "@@ -95,7 +93,7 @@ function externRemoveNativeSubscription(handle topic, handle callback) = @java:M\n # Registers a topic in the Ballerina Hub.\n #\n # + topic - The topic to register\n-# + return - `error` if an error occurred with registration\n+# + return - An `error` if an error occurred with registration", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgwMTUxOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNTo1NlrOGFrMlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNTo1NlrOGFrMlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMzc5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `error` if an error occurred with unregistration\n          \n          \n            \n            # + return - An `error` if an error occurred during the unregistration\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408603799", "createdAt": "2020-04-15T06:15:56Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "diffHunk": "@@ -108,7 +106,7 @@ function externRegisterTopicAtNativeHub(handle topic) returns error? = @java:Met\n # Unregisters a topic in the Ballerina Hub.\n #\n # + topic - The topic to unregister\n-# + return - `error` if an error occurred with unregistration\n+# + return - An `error` if an error occurred with unregistration", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgwMTk1OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNjoxMFrOGFrM3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNjoxMFrOGFrM3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMzg3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `true` if the topic has been registered by a publisher or else `false` if not\n          \n          \n            \n            # + return - `true` if the topic has been registered by a publisher or else `false`otherwise", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408603870", "createdAt": "2020-04-15T06:16:10Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "diffHunk": "@@ -121,7 +119,7 @@ function externUnregisterTopicAtNativeHub(handle topic) returns error? = @java:M\n # Retrieves whether a topic is registered with the Ballerina Hub.\n #\n # + topic - The topic to check\n-# + return - `boolean` True if the topic has been registered by a publisher, false if not\n+# + return - An `true` if the topic has been registered by a publisher or else `false` if not", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgwMjM3OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNjozMFrOGFrNNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNjozMFrOGFrNNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMzk1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + content - The content to send to subscribers, with the payload and content-type specified\n          \n          \n            \n            # + content - The content to send to subscribers with the specified payload and content-type", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408603957", "createdAt": "2020-04-15T06:16:30Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "diffHunk": "@@ -139,7 +137,7 @@ function externIsTopicRegistered(handle topic) returns boolean = @java:Method {\n # + publishUrl - The publisher URL of the Ballerina WebSub Hub as included in the `websub:Hub` object\n # + topic - The topic for which the update should happen\n # + content - The content to send to subscribers, with the payload and content-type specified", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgwMjU4OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNjozNlrOGFrNVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MzozMlrOGF9ogA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMzk5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `error` if an error occurred during publishing\n          \n          \n            \n            # + return - An `error` if an error occurred during publishing\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408603990", "createdAt": "2020-04-15T06:16:36Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "diffHunk": "@@ -139,7 +137,7 @@ function externIsTopicRegistered(handle topic) returns boolean = @java:Method {\n # + publishUrl - The publisher URL of the Ballerina WebSub Hub as included in the `websub:Hub` object\n # + topic - The topic for which the update should happen\n # + content - The content to send to subscribers, with the payload and content-type specified\n-# + return - `error` if an error occurred during publishing\n+# + return - An `error` if an error occurred during publishing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNTg1Ng==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408905856", "createdAt": "2020-04-15T14:53:32Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/natives.bal", "diffHunk": "@@ -139,7 +137,7 @@ function externIsTopicRegistered(handle topic) returns boolean = @java:Method {\n # + publishUrl - The publisher URL of the Ballerina WebSub Hub as included in the `websub:Hub` object\n # + topic - The topic for which the update should happen\n # + content - The content to send to subscribers, with the payload and content-type specified\n-# + return - `error` if an error occurred during publishing\n+# + return - An `error` if an error occurred during publishing", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwMzk5MA=="}, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgwMzE0OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNjo1MVrOGFrNrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNjo1MVrOGFrNrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNDA3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + url    - The URL to publish/notify updates to\n          \n          \n            \n            # + url    - The URL to publish/notify updates", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408604077", "createdAt": "2020-04-15T06:16:51Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "diffHunk": "@@ -24,20 +24,26 @@ public type PublisherClient client object {\n     private string url;\n     private http:Client httpClient;\n \n-    # Initializer function for the client.\n-    #\n-    # + url    - The URL to publish/notify updates to\n-    # + config - The `http:ClientConfiguration` for the underlying client or `()`\n+# Initializes the `websub:PublisherClient`.\n+# ```ballerina\n+# websub:PublisherClient websubHubClientEP = new (\"http://localhost:9191/websub/publish\");\n+# ```\n+#\n+# + url    - The URL to publish/notify updates to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgwMzU2OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNzowOFrOGFrN9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MjowNFrOGF9j-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNDE1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `error` if an error occurred registering the topic or esle `()`\n          \n          \n            \n            # + return - An `error` if an error occurred registering the topic or esle `()`\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408604151", "createdAt": "2020-04-15T06:17:08Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "diffHunk": "@@ -24,20 +24,26 @@ public type PublisherClient client object {\n     private string url;\n     private http:Client httpClient;\n \n-    # Initializer function for the client.\n-    #\n-    # + url    - The URL to publish/notify updates to\n-    # + config - The `http:ClientConfiguration` for the underlying client or `()`\n+# Initializes the `websub:PublisherClient`.\n+# ```ballerina\n+# websub:PublisherClient websubHubClientEP = new (\"http://localhost:9191/websub/publish\");\n+# ```\n+#\n+# + url    - The URL to publish/notify updates to\n+# + config - The `http:ClientConfiguration` for the underlying client or else `()`\n     public function __init(string url, http:ClientConfiguration? config = ()) {\n         self.url = url;\n         self.httpClient = new (self.url, config);\n     }\n \n-    # Registers a topic in a Ballerina WebSub Hub against which subscribers can subscribe and the publisher will\n-    # publish updates.\n-    #\n-    # + topic - The topic to register\n-    # + return - `error` if an error occurred registering the topic\n+# Registers a topic in a Ballerina WebSub Hub against which subscribers can subscribe and the publisher will\n+# publish updates.\n+# ```ballerina\n+# error? registerTopic = websubHubClientEP->registerTopic(\"http://websubpubtopic.com\");\n+# ```\n+#\n+# + topic - The topic to register\n+# + return - An `error` if an error occurred registering the topic or esle `()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNDY5Ng==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408904696", "createdAt": "2020-04-15T14:52:04Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "diffHunk": "@@ -24,20 +24,26 @@ public type PublisherClient client object {\n     private string url;\n     private http:Client httpClient;\n \n-    # Initializer function for the client.\n-    #\n-    # + url    - The URL to publish/notify updates to\n-    # + config - The `http:ClientConfiguration` for the underlying client or `()`\n+# Initializes the `websub:PublisherClient`.\n+# ```ballerina\n+# websub:PublisherClient websubHubClientEP = new (\"http://localhost:9191/websub/publish\");\n+# ```\n+#\n+# + url    - The URL to publish/notify updates to\n+# + config - The `http:ClientConfiguration` for the underlying client or else `()`\n     public function __init(string url, http:ClientConfiguration? config = ()) {\n         self.url = url;\n         self.httpClient = new (self.url, config);\n     }\n \n-    # Registers a topic in a Ballerina WebSub Hub against which subscribers can subscribe and the publisher will\n-    # publish updates.\n-    #\n-    # + topic - The topic to register\n-    # + return - `error` if an error occurred registering the topic\n+# Registers a topic in a Ballerina WebSub Hub against which subscribers can subscribe and the publisher will\n+# publish updates.\n+# ```ballerina\n+# error? registerTopic = websubHubClientEP->registerTopic(\"http://websubpubtopic.com\");\n+# ```\n+#\n+# + topic - The topic to register\n+# + return - An `error` if an error occurred registering the topic or esle `()`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNDE1MQ=="}, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgwMzk5OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNzoxOFrOGFrOMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1Mzo0MlrOGF9pEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNDIxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return -  An `error`if an error occurred unregistering the topic or else `()`\n          \n          \n            \n            # + return -  An `error`if an error occurred unregistering the topic or else `()`\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408604210", "createdAt": "2020-04-15T06:17:18Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "diffHunk": "@@ -57,10 +63,13 @@ public type PublisherClient client object {\n         }\n     }\n \n-    # Unregisters a topic in a Ballerina WebSub Hub.\n-    #\n-    # + topic - The topic to unregister\n-    # + return - `error` if an error occurred unregistering the topic\n+# Unregisters a topic in a Ballerina WebSub Hub.\n+# ```ballerina\n+# error? unregisterTopic = websubHubClientEP->unregisterTopic(\"http://websubpubtopic.com\");\n+#  ```\n+#\n+# + topic - The topic to unregister\n+# + return -  An `error`if an error occurred unregistering the topic or else `()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNjAwMw==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408906003", "createdAt": "2020-04-15T14:53:42Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "diffHunk": "@@ -57,10 +63,13 @@ public type PublisherClient client object {\n         }\n     }\n \n-    # Unregisters a topic in a Ballerina WebSub Hub.\n-    #\n-    # + topic - The topic to unregister\n-    # + return - `error` if an error occurred unregistering the topic\n+# Unregisters a topic in a Ballerina WebSub Hub.\n+# ```ballerina\n+# error? unregisterTopic = websubHubClientEP->unregisterTopic(\"http://websubpubtopic.com\");\n+#  ```\n+#\n+# + topic - The topic to unregister\n+# + return -  An `error`if an error occurred unregistering the topic or else `()`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNDIxMA=="}, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgwNDYxOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNzoyOVrOGFrOiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNzoyOVrOGFrOiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNDI5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + contentType - The type of the update content, to set as the `ContentType` header\n          \n          \n            \n            # + contentType - The type of the update content to set as the `ContentType` header", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408604296", "createdAt": "2020-04-15T06:17:29Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "diffHunk": "@@ -80,13 +89,17 @@ public type PublisherClient client object {\n         }\n     }\n \n-    # Publishes an update to a remote Ballerina WebSub Hub.\n-    #\n-    # + topic - The topic for which the update occurred\n-    # + payload - The update payload\n-    # + contentType - The type of the update content, to set as the `ContentType` header\n-    # + headers - The headers, if any, that need to be set\n-    # + return - `error` if an error occurred with the update\n+# Publishes an update to a remote Ballerina WebSub Hub.\n+# ```ballerina\n+# error? publishUpdate = websubHubClientEP->publishUpdate(\"http://websubpubtopic.com\",{\"action\": \"publish\",\n+#                                                          \"mode\": \"remote-hub\"});\n+#  ```\n+#\n+# + topic - The topic for which the update occurred\n+# + payload - The update payload\n+# + contentType - The type of the update content, to set as the `ContentType` header", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgwNTM2OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNzo0NVrOGFrO8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNzo0NVrOGFrO8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNDQwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + headers - The headers, if any, that need to be set\n          \n          \n            \n            # + headers - The headers that need to be set (if any)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408604401", "createdAt": "2020-04-15T06:17:45Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "diffHunk": "@@ -80,13 +89,17 @@ public type PublisherClient client object {\n         }\n     }\n \n-    # Publishes an update to a remote Ballerina WebSub Hub.\n-    #\n-    # + topic - The topic for which the update occurred\n-    # + payload - The update payload\n-    # + contentType - The type of the update content, to set as the `ContentType` header\n-    # + headers - The headers, if any, that need to be set\n-    # + return - `error` if an error occurred with the update\n+# Publishes an update to a remote Ballerina WebSub Hub.\n+# ```ballerina\n+# error? publishUpdate = websubHubClientEP->publishUpdate(\"http://websubpubtopic.com\",{\"action\": \"publish\",\n+#                                                          \"mode\": \"remote-hub\"});\n+#  ```\n+#\n+# + topic - The topic for which the update occurred\n+# + payload - The update payload\n+# + contentType - The type of the update content, to set as the `ContentType` header\n+# + headers - The headers, if any, that need to be set", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgwNTU0OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxNzo1MVrOGFrPDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MjoyNlrOGF9lAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNDQyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return -  An `error`if an error occurred with the update or else `()`\n          \n          \n            \n            # + return -  An `error`if an error occurred with the update or else `()`\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408604428", "createdAt": "2020-04-15T06:17:51Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "diffHunk": "@@ -80,13 +89,17 @@ public type PublisherClient client object {\n         }\n     }\n \n-    # Publishes an update to a remote Ballerina WebSub Hub.\n-    #\n-    # + topic - The topic for which the update occurred\n-    # + payload - The update payload\n-    # + contentType - The type of the update content, to set as the `ContentType` header\n-    # + headers - The headers, if any, that need to be set\n-    # + return - `error` if an error occurred with the update\n+# Publishes an update to a remote Ballerina WebSub Hub.\n+# ```ballerina\n+# error? publishUpdate = websubHubClientEP->publishUpdate(\"http://websubpubtopic.com\",{\"action\": \"publish\",\n+#                                                          \"mode\": \"remote-hub\"});\n+#  ```\n+#\n+# + topic - The topic for which the update occurred\n+# + payload - The update payload\n+# + contentType - The type of the update content, to set as the `ContentType` header\n+# + headers - The headers, if any, that need to be set\n+# + return -  An `error`if an error occurred with the update or else `()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNDk2MQ==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408904961", "createdAt": "2020-04-15T14:52:26Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "diffHunk": "@@ -80,13 +89,17 @@ public type PublisherClient client object {\n         }\n     }\n \n-    # Publishes an update to a remote Ballerina WebSub Hub.\n-    #\n-    # + topic - The topic for which the update occurred\n-    # + payload - The update payload\n-    # + contentType - The type of the update content, to set as the `ContentType` header\n-    # + headers - The headers, if any, that need to be set\n-    # + return - `error` if an error occurred with the update\n+# Publishes an update to a remote Ballerina WebSub Hub.\n+# ```ballerina\n+# error? publishUpdate = websubHubClientEP->publishUpdate(\"http://websubpubtopic.com\",{\"action\": \"publish\",\n+#                                                          \"mode\": \"remote-hub\"});\n+#  ```\n+#\n+# + topic - The topic for which the update occurred\n+# + payload - The update payload\n+# + contentType - The type of the update content, to set as the `ContentType` header\n+# + headers - The headers, if any, that need to be set\n+# + return -  An `error`if an error occurred with the update or else `()`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNDQyOA=="}, "originalCommit": {"oid": "676107955e511418a752577bc25be61ce5d014ef"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgwODI0OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxODo1NlrOGFrQnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxODo1NlrOGFrQnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNDgyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Notifies a remote WebSub Hub that an update is available to fetch, for hubs that require publishing to\n          \n          \n            \n            # Notifies a remote WebSub Hub from which an update is available to fetch for hubs that require publishing to", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408604829", "createdAt": "2020-04-15T06:18:56Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "diffHunk": "@@ -118,12 +131,15 @@ public type PublisherClient client object {\n         }\n     }\n \n-    # Notifies a remote WebSub Hub that an update is available to fetch, for hubs that require publishing to\n-    # happen as such.\n-    #\n-    # + topic - The topic for which the update occurred\n-    # + headers - The headers, if any, that need to be set\n-    # + return - `error` if an error occurred with the notification\n+# Notifies a remote WebSub Hub that an update is available to fetch, for hubs that require publishing to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c856017b5ad0e1f396167d34de340a8686051f89"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgwODkxOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxOTowOVrOGFrQ_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxOTowOVrOGFrQ_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNDkyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + headers - The headers, if any, that need to be set\n          \n          \n            \n            # + headers - The headers that need to be set (if any)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408604924", "createdAt": "2020-04-15T06:19:09Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "diffHunk": "@@ -118,12 +131,15 @@ public type PublisherClient client object {\n         }\n     }\n \n-    # Notifies a remote WebSub Hub that an update is available to fetch, for hubs that require publishing to\n-    # happen as such.\n-    #\n-    # + topic - The topic for which the update occurred\n-    # + headers - The headers, if any, that need to be set\n-    # + return - `error` if an error occurred with the notification\n+# Notifies a remote WebSub Hub that an update is available to fetch, for hubs that require publishing to\n+# happen as such.\n+# ```ballerina\n+#  error? notifyUpdate = websubHubClientEP->notifyUpdate(\"http://websubpubtopic.com\");\n+#   ```\n+#\n+# + topic - The topic for which the update occurred\n+# + headers - The headers, if any, that need to be set", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c856017b5ad0e1f396167d34de340a8686051f89"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgwOTExOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxOToxNVrOGFrRHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoxOToxNVrOGFrRHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNDk1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return -  An `error`if an error occurred with the notification or else `()`\n          \n          \n            \n            # + return -  An `error`if an error occurred with the notification or else `()`\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408604957", "createdAt": "2020-04-15T06:19:15Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "diffHunk": "@@ -118,12 +131,15 @@ public type PublisherClient client object {\n         }\n     }\n \n-    # Notifies a remote WebSub Hub that an update is available to fetch, for hubs that require publishing to\n-    # happen as such.\n-    #\n-    # + topic - The topic for which the update occurred\n-    # + headers - The headers, if any, that need to be set\n-    # + return - `error` if an error occurred with the notification\n+# Notifies a remote WebSub Hub that an update is available to fetch, for hubs that require publishing to\n+# happen as such.\n+# ```ballerina\n+#  error? notifyUpdate = websubHubClientEP->notifyUpdate(\"http://websubpubtopic.com\");\n+#   ```\n+#\n+# + topic - The topic for which the update occurred\n+# + headers - The headers, if any, that need to be set\n+# + return -  An `error`if an error occurred with the notification or else `()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c856017b5ad0e1f396167d34de340a8686051f89"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgxNjk2OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyMjo0MFrOGFrV_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyMjo0MFrOGFrV_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNjIwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `http:Request` to send to the hub to register/unregister\n          \n          \n            \n            # + return - An `http:Request` to be sent to the hub to register/unregister", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408606206", "createdAt": "2020-04-15T06:22:40Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/publisher_client.bal", "diffHunk": "@@ -156,7 +172,7 @@ public type PublisherClient client object {\n #\n # + mode - Whether the request is for registration or unregistration\n # + topic - The topic to register/unregister\n-# + return - `http:Request` The Request to send to the hub to register/unregister\n+# + return - An `http:Request` to send to the hub to register/unregister", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgxNzgxOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyMzowMVrOGFrWgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyMzowMVrOGFrWgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNjMzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + url    - The URL to change subscription at\n          \n          \n            \n                # + url    - The URL at which the subscription should be changed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408606338", "createdAt": "2020-04-15T06:23:01Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -26,7 +26,7 @@ public type SubscriptionClient client object {\n     private http:Client httpClient;\n     private http:FollowRedirects? followRedirects = ();\n \n-    # Initializer function for the client.\n+    # Initializes the `websub:SubscriptionClient`.\n     #\n     # + url    - The URL to change subscription at", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgxODMzOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyMzoxOFrOGFrW1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyMzoxOFrOGFrW1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNjQyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + subscriptionRequest - The `SubscriptionChangeRequest` containing subscription details\n          \n          \n            \n            # + subscriptionRequest - The `SubscriptionChangeRequest` containing the subscription details", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408606423", "createdAt": "2020-04-15T06:23:18Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -36,11 +36,14 @@ public type SubscriptionClient client object {\n         self.followRedirects = config?.followRedirects;\n     }\n \n-    # Sends a subscription request to a WebSub Hub.\n-    #\n-    # + subscriptionRequest - The `SubscriptionChangeRequest` containing subscription details\n-    # + return - `SubscriptionChangeResponse` indicating subscription details, if the request was successful else\n-    #            `error` if an error occurred with the subscription request\n+# Sends a subscription request to a WebSub Hub.\n+# ```ballerina\n+# websub:SubscriptionChangeResponse|error response = websubHubClientEP->subscribe(subscriptionRequest);\n+# ```\n+#\n+# + subscriptionRequest - The `SubscriptionChangeRequest` containing subscription details", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgxODc4OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyMzozMVrOGFrXHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NTo0NVrOGF9vQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNjQ5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #           or else an `error` if an error occurred with the subscription request\n          \n          \n            \n            #           or else an `error` if an error occurred with the subscription request\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408606494", "createdAt": "2020-04-15T06:23:31Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -36,11 +36,14 @@ public type SubscriptionClient client object {\n         self.followRedirects = config?.followRedirects;\n     }\n \n-    # Sends a subscription request to a WebSub Hub.\n-    #\n-    # + subscriptionRequest - The `SubscriptionChangeRequest` containing subscription details\n-    # + return - `SubscriptionChangeResponse` indicating subscription details, if the request was successful else\n-    #            `error` if an error occurred with the subscription request\n+# Sends a subscription request to a WebSub Hub.\n+# ```ballerina\n+# websub:SubscriptionChangeResponse|error response = websubHubClientEP->subscribe(subscriptionRequest);\n+# ```\n+#\n+# + subscriptionRequest - The `SubscriptionChangeRequest` containing subscription details\n+# + return - The `SubscriptionChangeResponse` indicating subscription details if the request was successful\n+#           or else an `error` if an error occurred with the subscription request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNzU4Nw==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408907587", "createdAt": "2020-04-15T14:55:45Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -36,11 +36,14 @@ public type SubscriptionClient client object {\n         self.followRedirects = config?.followRedirects;\n     }\n \n-    # Sends a subscription request to a WebSub Hub.\n-    #\n-    # + subscriptionRequest - The `SubscriptionChangeRequest` containing subscription details\n-    # + return - `SubscriptionChangeResponse` indicating subscription details, if the request was successful else\n-    #            `error` if an error occurred with the subscription request\n+# Sends a subscription request to a WebSub Hub.\n+# ```ballerina\n+# websub:SubscriptionChangeResponse|error response = websubHubClientEP->subscribe(subscriptionRequest);\n+# ```\n+#\n+# + subscriptionRequest - The `SubscriptionChangeRequest` containing subscription details\n+# + return - The `SubscriptionChangeResponse` indicating subscription details if the request was successful\n+#           or else an `error` if an error occurred with the subscription request", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNjQ5NA=="}, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgxOTUyOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyMzo0NlrOGFrXfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1Mzo1NVrOGF9pww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNjU5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            with the unsubscription request\n          \n          \n            \n            #            with the unsubscription request\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408606591", "createdAt": "2020-04-15T06:23:46Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -52,11 +55,13 @@ public type SubscriptionClient client object {\n                                   redirectCount);\n     }\n \n-    # Sends an unsubscription request to a WebSub Hub.\n-    #\n-    # + unsubscriptionRequest - The `SubscriptionChangeRequest` containing unsubscription details\n-    # + return - `SubscriptionChangeResponse` indicating unsubscription details, if the request was successful else\n-    #            `error` if an error occurred with the unsubscription request\n+# Sends an unsubscription request to a WebSub Hub.\n+# ```ballerina\n+# websub:SubscriptionChangeResponse|websub:error response = websubHubClientEP->unsubscribe(subscriptionRequest);\n+# ```\n+# + unsubscriptionRequest - The `SubscriptionChangeRequest` containing unsubscription details\n+# + return - An unsubscription details if the request was successful or else an `error` if an error occurred\n+#            with the unsubscription request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNjE3OQ==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408906179", "createdAt": "2020-04-15T14:53:55Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -52,11 +55,13 @@ public type SubscriptionClient client object {\n                                   redirectCount);\n     }\n \n-    # Sends an unsubscription request to a WebSub Hub.\n-    #\n-    # + unsubscriptionRequest - The `SubscriptionChangeRequest` containing unsubscription details\n-    # + return - `SubscriptionChangeResponse` indicating unsubscription details, if the request was successful else\n-    #            `error` if an error occurred with the unsubscription request\n+# Sends an unsubscription request to a WebSub Hub.\n+# ```ballerina\n+# websub:SubscriptionChangeResponse|websub:error response = websubHubClientEP->unsubscribe(subscriptionRequest);\n+# ```\n+# + unsubscriptionRequest - The `SubscriptionChangeRequest` containing unsubscription details\n+# + return - An unsubscription details if the request was successful or else an `error` if an error occurred\n+#            with the unsubscription request", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNjU5MQ=="}, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyMDExOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyMzo1N1rOGFrX0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyMzo1N1rOGFrX0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNjY3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + mode - Whether the request is for subscribe or unsubscribe\n          \n          \n            \n            # + mode - Whether the request is to subscribe or unsubscribe", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408606674", "createdAt": "2020-04-15T06:23:57Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -72,10 +77,10 @@ public type SubscriptionClient client object {\n \n # Function to build the subscription request to subscribe at the hub.\n #\n-# + mode - Whether the request is for subscription or unsubscription\n+# + mode - Whether the request is for subscribe or unsubscribe", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyMDg3OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNDowOVrOGFrYPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNDowOVrOGFrYPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNjc4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + subscriptionChangeRequest - The SubscriptionChangeRequest specifying the topic to subscribe to and the\n          \n          \n            \n            # + subscriptionChangeRequest - The SubscriptionChangeRequest specifying the topic to subscribe and the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408606780", "createdAt": "2020-04-15T06:24:09Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -72,10 +77,10 @@ public type SubscriptionClient client object {\n \n # Function to build the subscription request to subscribe at the hub.\n #\n-# + mode - Whether the request is for subscription or unsubscription\n+# + mode - Whether the request is for subscribe or unsubscribe\n # + subscriptionChangeRequest - The SubscriptionChangeRequest specifying the topic to subscribe to and the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyMTI1OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNDoyMFrOGFrYew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNDoyMFrOGFrYew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNjg0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `http:Request` The Request to send to the hub to subscribe/unsubscribe\n          \n          \n            \n            # + return - An `http:Request` to be sent to the hub to subscribe/unsubscribe", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408606843", "createdAt": "2020-04-15T06:24:20Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -72,10 +77,10 @@ public type SubscriptionClient client object {\n \n # Function to build the subscription request to subscribe at the hub.\n #\n-# + mode - Whether the request is for subscription or unsubscription\n+# + mode - Whether the request is for subscribe or unsubscribe\n # + subscriptionChangeRequest - The SubscriptionChangeRequest specifying the topic to subscribe to and the\n #                               parameters to use\n-# + return - `http:Request` The Request to send to the hub to subscribe/unsubscribe\n+# + return - An `http:Request` The Request to send to the hub to subscribe/unsubscribe", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyMTYxOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNDozMVrOGFrYuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNDozMVrOGFrYuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNjkwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + subscriptionChangeRequest - The subscription change request sent\n          \n          \n            \n            # + subscriptionChangeRequest - The sent subscription change request", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408606904", "createdAt": "2020-04-15T06:24:31Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -109,8 +114,8 @@ function buildSubscriptionChangeRequest(@untainted string mode,\n # + subscriptionChangeRequest - The subscription change request sent", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyMjcwOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNDo1N1rOGFrZUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNDo1N1rOGFrZUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNzA1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + response - The http:Response or error received on request to the hub\n          \n          \n            \n            # + response - The `http:Response` or an error received upon sending a request to the hub", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408607057", "createdAt": "2020-04-15T06:24:57Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -109,8 +114,8 @@ function buildSubscriptionChangeRequest(@untainted string mode,\n # + subscriptionChangeRequest - The subscription change request sent\n # + response - The http:Response or error received on request to the hub", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyMzA0OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNTowN1rOGFrZjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDowN1rOGF9qZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNzExOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            if an error occurred\n          \n          \n            \n            #            if an error occurred\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408607119", "createdAt": "2020-04-15T06:25:07Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -109,8 +114,8 @@ function buildSubscriptionChangeRequest(@untainted string mode,\n # + subscriptionChangeRequest - The subscription change request sent\n # + response - The http:Response or error received on request to the hub\n # + httpClient - The underlying HTTP Client Endpoint\n-# + return - `SubscriptionChangeResponse` indicating subscription/unsubscription details, if the request was successful\n-#            else `error` if an error occurred\n+# + return - The subscription/unsubscription details if the request was successful or else an `error`\n+#            if an error occurred", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNjM0Mg==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408906342", "createdAt": "2020-04-15T14:54:07Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -109,8 +114,8 @@ function buildSubscriptionChangeRequest(@untainted string mode,\n # + subscriptionChangeRequest - The subscription change request sent\n # + response - The http:Response or error received on request to the hub\n # + httpClient - The underlying HTTP Client Endpoint\n-# + return - `SubscriptionChangeResponse` indicating subscription/unsubscription details, if the request was successful\n-#            else `error` if an error occurred\n+# + return - The subscription/unsubscription details if the request was successful or else an `error`\n+#            if an error occurred", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNzExOQ=="}, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyMzcxOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNToyM1rOGFraAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNToyM1rOGFraAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNzIzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Invokes the WebSubSubscriberConnector's remote functions for subscription/unsubscription on redirection from the\n          \n          \n            \n            # Invokes the `WebSubSubscriberConnector`'s remote functions for subscription/unsubscription on redirection from the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408607232", "createdAt": "2020-04-15T06:25:23Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -158,15 +163,15 @@ function processHubResponse(@untainted string hub, @untainted string mode,\n     }\n }\n \n-# Function to invoke the WebSubSubscriberConnector's remote functions for subscription/unsubscription on redirection from the\n+# Invokes the WebSubSubscriberConnector's remote functions for subscription/unsubscription on redirection from the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyNDEzOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNTozNFrOGFraOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNTozNFrOGFraOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNzI4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + subscriptionChangeRequest - The request containing subscription/unsubscription details\n          \n          \n            \n            # + subscriptionChangeRequest - The request containing the subscription/unsubscription details", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408607288", "createdAt": "2020-04-15T06:25:34Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -158,15 +163,15 @@ function processHubResponse(@untainted string hub, @untainted string mode,\n     }\n }\n \n-# Function to invoke the WebSubSubscriberConnector's remote functions for subscription/unsubscription on redirection from the\n+# Invokes the WebSubSubscriberConnector's remote functions for subscription/unsubscription on redirection from the\n # original hub.\n #\n # + hub - The hub to which the subscription/unsubscription request is to be sent\n # + mode - Whether the request is for subscription or unsubscription\n # + subscriptionChangeRequest - The request containing subscription/unsubscription details", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyNDQ0OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNTo0NFrOGFrabA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNTo0NFrOGFrabA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNzM0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + auth - The auth config to use at the hub, if specified\n          \n          \n            \n            # + auth - The auth config to use at the hub (if specified)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408607340", "createdAt": "2020-04-15T06:25:44Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -158,15 +163,15 @@ function processHubResponse(@untainted string hub, @untainted string mode,\n     }\n }\n \n-# Function to invoke the WebSubSubscriberConnector's remote functions for subscription/unsubscription on redirection from the\n+# Invokes the WebSubSubscriberConnector's remote functions for subscription/unsubscription on redirection from the\n # original hub.\n #\n # + hub - The hub to which the subscription/unsubscription request is to be sent\n # + mode - Whether the request is for subscription or unsubscription\n # + subscriptionChangeRequest - The request containing subscription/unsubscription details\n # + auth - The auth config to use at the hub, if specified", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyNTAyOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNTo1N1rOGFravg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNTo1N1rOGFravg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNzQyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - A subscription/unsubscription details if the request was successful or else an `error`\n          \n          \n            \n            # + return - The subscription/unsubscription details if the request was successful or else an `error`\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408607422", "createdAt": "2020-04-15T06:25:57Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_client.bal", "diffHunk": "@@ -158,15 +163,15 @@ function processHubResponse(@untainted string hub, @untainted string mode,\n     }\n }\n \n-# Function to invoke the WebSubSubscriberConnector's remote functions for subscription/unsubscription on redirection from the\n+# Invokes the WebSubSubscriberConnector's remote functions for subscription/unsubscription on redirection from the\n # original hub.\n #\n # + hub - The hub to which the subscription/unsubscription request is to be sent\n # + mode - Whether the request is for subscription or unsubscription\n # + subscriptionChangeRequest - The request containing subscription/unsubscription details\n # + auth - The auth config to use at the hub, if specified\n-# + return - `SubscriptionChangeResponse` indicating subscription/unsubscription details, if the request was successful\n-#            else `error` if an error occurred\n+# + return - A subscription/unsubscription details if the request was successful or else an `error`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyNTczOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_caller.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNjoxN1rOGFrbJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDoyMlrOGF9rKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNzUyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `error` on failure or else `()`\n          \n          \n            \n            # + return - An `error` on failure or else `()`\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408607527", "createdAt": "2020-04-15T06:26:17Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_caller.bal", "diffHunk": "@@ -24,28 +24,37 @@ public type Caller client object {\n         self.httpCaller = httpCaller;\n     }\n \n-    # Sends the response to the caller.\n-    #\n-    # + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n-    #             or `mime:Entity[]`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller.\n+# ```ballerina\n+# error? response = caller->respond();\n+# ```\n+#\n+# + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `error` on failure or else `()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNjUzOQ==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408906539", "createdAt": "2020-04-15T14:54:22Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_caller.bal", "diffHunk": "@@ -24,28 +24,37 @@ public type Caller client object {\n         self.httpCaller = httpCaller;\n     }\n \n-    # Sends the response to the caller.\n-    #\n-    # + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n-    #             or `mime:Entity[]`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller.\n+# ```ballerina\n+# error? response = caller->respond();\n+# ```\n+#\n+# + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `error` on failure or else `()`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNzUyNw=="}, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyNjU5OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_caller.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNjozOFrOGFrbrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNjozOFrOGFrbrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNzY2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Sends the response to the caller with the status 200 OK.\n          \n          \n            \n            # Sends the response to the caller with the \"200 OK\" status.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408607661", "createdAt": "2020-04-15T06:26:38Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_caller.bal", "diffHunk": "@@ -24,28 +24,37 @@ public type Caller client object {\n         self.httpCaller = httpCaller;\n     }\n \n-    # Sends the response to the caller.\n-    #\n-    # + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n-    #             or `mime:Entity[]`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller.\n+# ```ballerina\n+# error? response = caller->respond();\n+# ```\n+#\n+# + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `error` on failure or else `()`\n     public remote function respond(http:ResponseMessage message = ()) returns error? {\n         return self.httpCaller->respond(message);\n     }\n \n-    # Sends the response to the caller with the status 200 OK.\n-    #\n-    # + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n-    #             or `mime:Entity[]`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller with the status 200 OK.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyNzI3OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_caller.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNjo1MFrOGFrcCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNjo1MFrOGFrcCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNzc1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `error` on failure or else `()`\n          \n          \n            \n            # + return - An `error` on failure or else `()`\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408607755", "createdAt": "2020-04-15T06:26:50Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_caller.bal", "diffHunk": "@@ -24,28 +24,37 @@ public type Caller client object {\n         self.httpCaller = httpCaller;\n     }\n \n-    # Sends the response to the caller.\n-    #\n-    # + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n-    #             or `mime:Entity[]`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller.\n+# ```ballerina\n+# error? response = caller->respond();\n+# ```\n+#\n+# + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `error` on failure or else `()`\n     public remote function respond(http:ResponseMessage message = ()) returns error? {\n         return self.httpCaller->respond(message);\n     }\n \n-    # Sends the response to the caller with the status 200 OK.\n-    #\n-    # + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n-    #             or `mime:Entity[]`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller with the status 200 OK.\n+# ```ballerina\n+# error? response = caller->ok();\n+# ```\n+#\n+# + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `error` on failure or else `()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyNzgwOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_caller.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNzowMFrOGFrcWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNzowMFrOGFrcWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNzgzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Sends the response to the caller with the status 202 Accepted.\n          \n          \n            \n            # Sends the response to the caller with the \"202 Accepted\" status.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408607832", "createdAt": "2020-04-15T06:27:00Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_caller.bal", "diffHunk": "@@ -24,28 +24,37 @@ public type Caller client object {\n         self.httpCaller = httpCaller;\n     }\n \n-    # Sends the response to the caller.\n-    #\n-    # + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n-    #             or `mime:Entity[]`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller.\n+# ```ballerina\n+# error? response = caller->respond();\n+# ```\n+#\n+# + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `error` on failure or else `()`\n     public remote function respond(http:ResponseMessage message = ()) returns error? {\n         return self.httpCaller->respond(message);\n     }\n \n-    # Sends the response to the caller with the status 200 OK.\n-    #\n-    # + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n-    #             or `mime:Entity[]`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller with the status 200 OK.\n+# ```ballerina\n+# error? response = caller->ok();\n+# ```\n+#\n+# + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `error` on failure or else `()`\n     public remote function ok(http:ResponseMessage message = ()) returns error? {\n         return self.httpCaller->ok(message);\n     }\n \n-    # Sends the response to the caller with the status 202 Accepted.\n-    #\n-    # + message - The response or any payload of type `http:ResponseMessage`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller with the status 202 Accepted.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyODI1OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_caller.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNzoxMlrOGFrclw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNzoxMlrOGFrclw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNzg5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + message - The response or any payload of type `http:ResponseMessage`\n          \n          \n            \n            # + message - The response or any payload of the `http:ResponseMessage` type", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408607895", "createdAt": "2020-04-15T06:27:12Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_caller.bal", "diffHunk": "@@ -24,28 +24,37 @@ public type Caller client object {\n         self.httpCaller = httpCaller;\n     }\n \n-    # Sends the response to the caller.\n-    #\n-    # + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n-    #             or `mime:Entity[]`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller.\n+# ```ballerina\n+# error? response = caller->respond();\n+# ```\n+#\n+# + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `error` on failure or else `()`\n     public remote function respond(http:ResponseMessage message = ()) returns error? {\n         return self.httpCaller->respond(message);\n     }\n \n-    # Sends the response to the caller with the status 200 OK.\n-    #\n-    # + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n-    #             or `mime:Entity[]`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller with the status 200 OK.\n+# ```ballerina\n+# error? response = caller->ok();\n+# ```\n+#\n+# + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `error` on failure or else `()`\n     public remote function ok(http:ResponseMessage message = ()) returns error? {\n         return self.httpCaller->ok(message);\n     }\n \n-    # Sends the response to the caller with the status 202 Accepted.\n-    #\n-    # + message - The response or any payload of type `http:ResponseMessage`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller with the status 202 Accepted.\n+# ```ballerina\n+# error? response = caller->accepted();\n+# ```\n+#\n+# + message - The response or any payload of type `http:ResponseMessage`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyODQ3OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_caller.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNzoxOFrOGFrctw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDozNVrOGF9r0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNzkyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `error` on failure or else `()`\n          \n          \n            \n            # + return - An `error` on failure or else `()`\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408607927", "createdAt": "2020-04-15T06:27:18Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_caller.bal", "diffHunk": "@@ -24,28 +24,37 @@ public type Caller client object {\n         self.httpCaller = httpCaller;\n     }\n \n-    # Sends the response to the caller.\n-    #\n-    # + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n-    #             or `mime:Entity[]`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller.\n+# ```ballerina\n+# error? response = caller->respond();\n+# ```\n+#\n+# + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `error` on failure or else `()`\n     public remote function respond(http:ResponseMessage message = ()) returns error? {\n         return self.httpCaller->respond(message);\n     }\n \n-    # Sends the response to the caller with the status 200 OK.\n-    #\n-    # + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n-    #             or `mime:Entity[]`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller with the status 200 OK.\n+# ```ballerina\n+# error? response = caller->ok();\n+# ```\n+#\n+# + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `error` on failure or else `()`\n     public remote function ok(http:ResponseMessage message = ()) returns error? {\n         return self.httpCaller->ok(message);\n     }\n \n-    # Sends the response to the caller with the status 202 Accepted.\n-    #\n-    # + message - The response or any payload of type `http:ResponseMessage`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller with the status 202 Accepted.\n+# ```ballerina\n+# error? response = caller->accepted();\n+# ```\n+#\n+# + message - The response or any payload of type `http:ResponseMessage`\n+# + return - An `error` on failure or else `()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNjcwNA==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408906704", "createdAt": "2020-04-15T14:54:35Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_caller.bal", "diffHunk": "@@ -24,28 +24,37 @@ public type Caller client object {\n         self.httpCaller = httpCaller;\n     }\n \n-    # Sends the response to the caller.\n-    #\n-    # + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n-    #             or `mime:Entity[]`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller.\n+# ```ballerina\n+# error? response = caller->respond();\n+# ```\n+#\n+# + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `error` on failure or else `()`\n     public remote function respond(http:ResponseMessage message = ()) returns error? {\n         return self.httpCaller->respond(message);\n     }\n \n-    # Sends the response to the caller with the status 200 OK.\n-    #\n-    # + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`\n-    #             or `mime:Entity[]`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller with the status 200 OK.\n+# ```ballerina\n+# error? response = caller->ok();\n+# ```\n+#\n+# + message - The response or any payload of type `string`, `xml`, `json`, `byte[]`, `io:ReadableByteChannel`,\n+#             or `mime:Entity[]`\n+# + return - An `error` on failure or else `()`\n     public remote function ok(http:ResponseMessage message = ()) returns error? {\n         return self.httpCaller->ok(message);\n     }\n \n-    # Sends the response to the caller with the status 202 Accepted.\n-    #\n-    # + message - The response or any payload of type `http:ResponseMessage`\n-    # + return - Returns an `error` on failure\n+# Sends the response to the caller with the status 202 Accepted.\n+# ```ballerina\n+# error? response = caller->accepted();\n+# ```\n+#\n+# + message - The response or any payload of type `http:ResponseMessage`\n+# + return - An `error` on failure or else `()`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwNzkyNw=="}, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyOTIzOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNzozNVrOGFrdKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDo0M1rOGF9sNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODA0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - `()` or else an `error` upon failure to register the listener\n          \n          \n            \n            # + return - `()` or else an `error` upon failure to register the listener\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408608043", "createdAt": "2020-04-15T06:27:35Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -35,24 +35,55 @@ public type Listener object {\n \n     private http:Listener? serviceEndpoint = ();\n \n+    # Creates a new `websub:Listener`.\n+    #\n+    # + port - The port number of the remote service\n+    # + config - The configurations related to the `websub:Listener`\n     public function __init(int port, SubscriberListenerConfiguration? config = ()) {\n         self.init(port, config);\n     }\n \n+# Binds a service to the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__attach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + name - Name of the service\n+# + return - `()` or else an `error` upon failure to register the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNjgwNw==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408906807", "createdAt": "2020-04-15T14:54:43Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -35,24 +35,55 @@ public type Listener object {\n \n     private http:Listener? serviceEndpoint = ();\n \n+    # Creates a new `websub:Listener`.\n+    #\n+    # + port - The port number of the remote service\n+    # + config - The configurations related to the `websub:Listener`\n     public function __init(int port, SubscriberListenerConfiguration? config = ()) {\n         self.init(port, config);\n     }\n \n+# Binds a service to the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__attach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + name - Name of the service\n+# + return - `()` or else an `error` upon failure to register the listener", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODA0Mw=="}, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgyOTY4OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNzo0NlrOGFrdcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDo1MlrOGF9srA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODExNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - `()` or else an `error` upon failure to detach the service\n          \n          \n            \n            # + return - `()` or else an `error` upon failure to detach the service\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408608114", "createdAt": "2020-04-15T06:27:46Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -35,24 +35,55 @@ public type Listener object {\n \n     private http:Listener? serviceEndpoint = ();\n \n+    # Creates a new `websub:Listener`.\n+    #\n+    # + port - The port number of the remote service\n+    # + config - The configurations related to the `websub:Listener`\n     public function __init(int port, SubscriberListenerConfiguration? config = ()) {\n         self.init(port, config);\n     }\n \n+# Binds a service to the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__attach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + name - Name of the service\n+# + return - `()` or else an `error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         // TODO: handle data and return error on error\n         externRegisterWebSubSubscriberService(self, s);\n     }\n \n+# Stops consuming messages and detaches the service from the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__detach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + return - `()` or else an `error` upon failure to detach the service", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNjkyNA==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408906924", "createdAt": "2020-04-15T14:54:52Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -35,24 +35,55 @@ public type Listener object {\n \n     private http:Listener? serviceEndpoint = ();\n \n+    # Creates a new `websub:Listener`.\n+    #\n+    # + port - The port number of the remote service\n+    # + config - The configurations related to the `websub:Listener`\n     public function __init(int port, SubscriberListenerConfiguration? config = ()) {\n         self.init(port, config);\n     }\n \n+# Binds a service to the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__attach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + name - Name of the service\n+# + return - `()` or else an `error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         // TODO: handle data and return error on error\n         externRegisterWebSubSubscriberService(self, s);\n     }\n \n+# Stops consuming messages and detaches the service from the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__detach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + return - `()` or else an `error` upon failure to detach the service", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODExNA=="}, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgzMDEyOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyNzo1N1rOGFrdtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NTozMlrOGF9uow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODE4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - `()` or else an `error` upon failure to start the listener\n          \n          \n            \n            # + return - `()` or else an `error` upon failure to start the listener\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408608183", "createdAt": "2020-04-15T06:27:57Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -35,24 +35,55 @@ public type Listener object {\n \n     private http:Listener? serviceEndpoint = ();\n \n+    # Creates a new `websub:Listener`.\n+    #\n+    # + port - The port number of the remote service\n+    # + config - The configurations related to the `websub:Listener`\n     public function __init(int port, SubscriberListenerConfiguration? config = ()) {\n         self.init(port, config);\n     }\n \n+# Binds a service to the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__attach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + name - Name of the service\n+# + return - `()` or else an `error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         // TODO: handle data and return error on error\n         externRegisterWebSubSubscriberService(self, s);\n     }\n \n+# Stops consuming messages and detaches the service from the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__detach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + return - `()` or else an `error` upon failure to detach the service\n     public function __detach(service s) returns error? {\n     }\n \n+# Starts the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__start();\n+# ```\n+#\n+# + return - `()` or else an `error` upon failure to start the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNzQyNw==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408907427", "createdAt": "2020-04-15T14:55:32Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -35,24 +35,55 @@ public type Listener object {\n \n     private http:Listener? serviceEndpoint = ();\n \n+    # Creates a new `websub:Listener`.\n+    #\n+    # + port - The port number of the remote service\n+    # + config - The configurations related to the `websub:Listener`\n     public function __init(int port, SubscriberListenerConfiguration? config = ()) {\n         self.init(port, config);\n     }\n \n+# Binds a service to the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__attach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + name - Name of the service\n+# + return - `()` or else an `error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         // TODO: handle data and return error on error\n         externRegisterWebSubSubscriberService(self, s);\n     }\n \n+# Stops consuming messages and detaches the service from the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__detach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + return - `()` or else an `error` upon failure to detach the service\n     public function __detach(service s) returns error? {\n     }\n \n+# Starts the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__start();\n+# ```\n+#\n+# + return - `()` or else an `error` upon failure to start the listener", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODE4Mw=="}, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgzMDY2OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyODoxM1rOGFreEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyODoxM1rOGFreEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODI3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Gracefully stops the `websub:Listener`.\n          \n          \n            \n            # Stops the `websub:Listener` gracefully.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408608273", "createdAt": "2020-04-15T06:28:13Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -35,24 +35,55 @@ public type Listener object {\n \n     private http:Listener? serviceEndpoint = ();\n \n+    # Creates a new `websub:Listener`.\n+    #\n+    # + port - The port number of the remote service\n+    # + config - The configurations related to the `websub:Listener`\n     public function __init(int port, SubscriberListenerConfiguration? config = ()) {\n         self.init(port, config);\n     }\n \n+# Binds a service to the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__attach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + name - Name of the service\n+# + return - `()` or else an `error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         // TODO: handle data and return error on error\n         externRegisterWebSubSubscriberService(self, s);\n     }\n \n+# Stops consuming messages and detaches the service from the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__detach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + return - `()` or else an `error` upon failure to detach the service\n     public function __detach(service s) returns error? {\n     }\n \n+# Starts the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__start();\n+# ```\n+#\n+# + return - `()` or else an `error` upon failure to start the listener\n     public function __start() returns error? {\n         check externStartWebSubSubscriberServiceEndpoint(self);\n         // TODO: handle data and return error on error\n         self.sendSubscriptionRequests();\n     }\n \n+# Gracefully stops the `websub:Listener`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgzMTA5OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyODoyMFrOGFreTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NTowMlrOGF9tLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODMzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - `()` or else an `error` upon failure to stop the listener\n          \n          \n            \n            # + return - `()` or else an `error` upon failure to stop the listener\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408608332", "createdAt": "2020-04-15T06:28:20Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -35,24 +35,55 @@ public type Listener object {\n \n     private http:Listener? serviceEndpoint = ();\n \n+    # Creates a new `websub:Listener`.\n+    #\n+    # + port - The port number of the remote service\n+    # + config - The configurations related to the `websub:Listener`\n     public function __init(int port, SubscriberListenerConfiguration? config = ()) {\n         self.init(port, config);\n     }\n \n+# Binds a service to the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__attach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + name - Name of the service\n+# + return - `()` or else an `error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         // TODO: handle data and return error on error\n         externRegisterWebSubSubscriberService(self, s);\n     }\n \n+# Stops consuming messages and detaches the service from the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__detach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + return - `()` or else an `error` upon failure to detach the service\n     public function __detach(service s) returns error? {\n     }\n \n+# Starts the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__start();\n+# ```\n+#\n+# + return - `()` or else an `error` upon failure to start the listener\n     public function __start() returns error? {\n         check externStartWebSubSubscriberServiceEndpoint(self);\n         // TODO: handle data and return error on error\n         self.sendSubscriptionRequests();\n     }\n \n+# Gracefully stops the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__gracefulStop();\n+# ```\n+#\n+# + return - `()` or else an `error` upon failure to stop the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNzA1NA==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408907054", "createdAt": "2020-04-15T14:55:02Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -35,24 +35,55 @@ public type Listener object {\n \n     private http:Listener? serviceEndpoint = ();\n \n+    # Creates a new `websub:Listener`.\n+    #\n+    # + port - The port number of the remote service\n+    # + config - The configurations related to the `websub:Listener`\n     public function __init(int port, SubscriberListenerConfiguration? config = ()) {\n         self.init(port, config);\n     }\n \n+# Binds a service to the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__attach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + name - Name of the service\n+# + return - `()` or else an `error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         // TODO: handle data and return error on error\n         externRegisterWebSubSubscriberService(self, s);\n     }\n \n+# Stops consuming messages and detaches the service from the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__detach(helloService);\n+# ```\n+#\n+# + s - Type descriptor of the service\n+# + return - `()` or else an `error` upon failure to detach the service\n     public function __detach(service s) returns error? {\n     }\n \n+# Starts the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__start();\n+# ```\n+#\n+# + return - `()` or else an `error` upon failure to start the listener\n     public function __start() returns error? {\n         check externStartWebSubSubscriberServiceEndpoint(self);\n         // TODO: handle data and return error on error\n         self.sendSubscriptionRequests();\n     }\n \n+# Gracefully stops the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__gracefulStop();\n+# ```\n+#\n+# + return - `()` or else an `error` upon failure to stop the listener", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODMzMg=="}, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgzMTY1OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyODozMFrOGFremw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyODozMFrOGFremw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODQxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Forcefully stops the `websub:Listener`.\n          \n          \n            \n            # Stops the `websub:Listener` forcefully.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408608411", "createdAt": "2020-04-15T06:28:30Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -61,12 +92,18 @@ public type Listener object {\n         return ();\n     }\n \n+# Forcefully stops the `websub:Listener`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgzMTg1OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyODozN1rOGFrevQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NToxNFrOGF9ttQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODQ0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - () or else an `error` upon failure to stop the listener\n          \n          \n            \n            # + return - () or else an `error` upon failure to stop the listener\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408608445", "createdAt": "2020-04-15T06:28:37Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -61,12 +92,18 @@ public type Listener object {\n         return ();\n     }\n \n+# Forcefully stops the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__immediateStop();\n+# ```\n+#\n+# + return - () or else an `error` upon failure to stop the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNzE4OQ==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408907189", "createdAt": "2020-04-15T14:55:14Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -61,12 +92,18 @@ public type Listener object {\n         return ();\n     }\n \n+# Forcefully stops the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__immediateStop();\n+# ```\n+#\n+# + return - () or else an `error` upon failure to stop the listener", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODQ0NQ=="}, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgzMjM1OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyODo0NlrOGFrfAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyODo0NlrOGFrfAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODUxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Gets called when the `websub:Listener` is being initialized during module initialization.\n          \n          \n            \n                # Gets called when the `websub:Listener` is being initialized during the module initialization.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408608513", "createdAt": "2020-04-15T06:28:46Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -61,12 +92,18 @@ public type Listener object {\n         return ();\n     }\n \n+# Forcefully stops the `websub:Listener`.\n+# ```ballerina\n+# error? result = websubListener.__immediateStop();\n+# ```\n+#\n+# + return - () or else an `error` upon failure to stop the listener\n     public function __immediateStop() returns error? {\n     }\n \n-    # Gets called when the endpoint is being initialized during module initialization.\n+    # Gets called when the `websub:Listener` is being initialized during module initialization.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgzMzQwOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyOTowNlrOGFrflA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyOTowNlrOGFrflA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODY2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Discovers hub and topic URLs defined by a resource URL.\n          \n          \n            \n            # Discovers the hub and topic URLs defined by a resource URL.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408608660", "createdAt": "2020-04-15T06:29:06Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -242,11 +279,11 @@ public type ExtensionConfig record {|\n     map<map<map<[string, typedesc<record {}>]>>>? headerAndPayloadKeyResourceMap = ();\n |};\n \n-# The function called to discover hub and topic URLs defined by a resource URL.\n+# Discovers hub and topic URLs defined by a resource URL.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgzMzcyOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyOToxNlrOGFrfxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyOToxNlrOGFrfxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODcwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + resourceUrl - The resource URL advertising hub and topic URLs\n          \n          \n            \n            # + resourceUrl - The resource URL advertising the hub and topic URLs", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408608708", "createdAt": "2020-04-15T06:29:16Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -242,11 +279,11 @@ public type ExtensionConfig record {|\n     map<map<map<[string, typedesc<record {}>]>>>? headerAndPayloadKeyResourceMap = ();\n |};\n \n-# The function called to discover hub and topic URLs defined by a resource URL.\n+# Discovers hub and topic URLs defined by a resource URL.\n #\n # + resourceUrl - The resource URL advertising hub and topic URLs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgzNDMyOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyOToyN1rOGFrgFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MjozOFrOGF9lpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODc5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - A `(hub, topic)` as a `(string, string)` if successful or else an `error` if not\n          \n          \n            \n            # + return - A `(hub, topic)` as a `(string, string)` if successful or else an `error` if not\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408608791", "createdAt": "2020-04-15T06:29:27Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -242,11 +279,11 @@ public type ExtensionConfig record {|\n     map<map<map<[string, typedesc<record {}>]>>>? headerAndPayloadKeyResourceMap = ();\n |};\n \n-# The function called to discover hub and topic URLs defined by a resource URL.\n+# Discovers hub and topic URLs defined by a resource URL.\n #\n # + resourceUrl - The resource URL advertising hub and topic URLs\n # + publisherClientConfig - The configuration for the publisher client\n-# + return - `(string, string)` (hub, topic) URLs if successful, `error` if not\n+# + return - A `(hub, topic)` as a `(string, string)` if successful or else an `error` if not", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNTEyNA==", "bodyText": "We are using a common error in this module. So we don't need to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408905124", "createdAt": "2020-04-15T14:52:38Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -242,11 +279,11 @@ public type ExtensionConfig record {|\n     map<map<map<[string, typedesc<record {}>]>>>? headerAndPayloadKeyResourceMap = ();\n |};\n \n-# The function called to discover hub and topic URLs defined by a resource URL.\n+# Discovers hub and topic URLs defined by a resource URL.\n #\n # + resourceUrl - The resource URL advertising hub and topic URLs\n # + publisherClientConfig - The configuration for the publisher client\n-# + return - `(string, string)` (hub, topic) URLs if successful, `error` if not\n+# + return - A `(hub, topic)` as a `(string, string)` if successful or else an `error` if not", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODc5MQ=="}, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjgzNDc1OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyOTozN1rOGFrgWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNjoyOTozN1rOGFrgWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYwODg1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Invokes the WebSubSubscriberConnector's remote functions for the subscription.\n          \n          \n            \n            # Invokes the `WebSubSubscriberConnector`'s remote functions for the subscription.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408608858", "createdAt": "2020-04-15T06:29:37Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/subscriber_service_endpoint.bal", "diffHunk": "@@ -272,11 +309,11 @@ function retrieveHubAndTopicUrl(string resourceUrl, http:ClientConfiguration? pu\n     return websubError;\n }\n \n-# Function to invoke the WebSubSubscriberConnector's remote functions for subscription.\n+# Invokes the WebSubSubscriberConnector's remote functions for the subscription.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004c8279966f9392242b7800b1c7d53f2dcb2e47"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODU4NDUxOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDoyOTowMFrOGF8cnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDoyOTowMFrOGF8cnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4NjQzMQ==", "bodyText": "Shall we move this section up? Otherwise, things come under the publisher and subscriber are hard to understand", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408886431", "createdAt": "2020-04-15T14:29:00Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "diffHunk": "@@ -123,199 +136,59 @@ URLs, which facilitates WebSub discovery.\n A hub client endpoint is also made available to publishers and subscribers to perform the following:\n - Publishers\n   - Register a topic at the Hub\n+    ```ballerina\n+    websub:PublisherClient websubHubClientEP = new (\"http://localhost:9191/websub/publish\");\n+    error? registrationResponse = websubHubClientEP->registerTopic(\"http://websubpubtopic.com\");\n+    ```\n+    \n   - Publish to the hub indicating an update of the topic\n+    ```ballerina\n+    websub:PublisherClient websubHubClientEP = new (\"http://localhost:9191/websub/publish\");\n+    error? publishResponse = websubHubClientEP.publishUpdate(\"http://websubpubtopic.com\",\n+                                {\"action\": \"publish\", \"mode\": \"internal-hub\"});   \n+    ```\n+    \n - Subscribers\n   - Subscribe/Unsubscribe to/from topics at a hub\n-\n-## Samples\n-This sample demonstrates a Subscriber Service with `subscribeOnStartUp` set to true. This will result in a\n- subscription request being sent to the specified hub for the specified topic, with the specified lease seconds value \n- and the specified secret for authenticated content distribution.\n-Since an `onIntentVerification` resource function is not included, intent verification for subscription and unsubscription \n-requests would happen automatically, if the topic specified in the request matches that specified as an annotation or \n-that discovered for the annotated resource URL.\n- \n-```ballerina\n-import ballerina/log;\n-import ballerina/websub;\n-\n-listener websub:Listener websubEP = new(8181);\n-\n-@websub:SubscriberServiceConfig {\n-    path: \"/websub\",\n-    subscribeOnStartUp: true,\n-    target: [\"<HUB_URL>\", \"<TOPIC_URL>\"],\n-    leaseSeconds: 3600,\n-    secret: \"<SECRET>\"\n-}\n-service websubSubscriber on websubEP {\n-\n-    resource function onNotification(websub:Notification notification) {\n-        var payload = notification.getTextPayload();\n-        if (payload is string) {\n-            log:printInfo(\"WebSub Notification Received: \" + payload);\n-        } else {\n-            log:printError(\"Error retrieving payload as string\", payload);\n-        }\n-    }\n-}\n-```\n-\n-Explicit intent verification can be done by introducing an `onIntentVerification` resource function.\n-```ballerina\n-import ballerina/http;\n-import ballerina/log;\n-import ballerina/websub;\n-\n-listener websub:Listener websubEP = new(8181);\n-\n-@websub:SubscriberServiceConfig {\n-    path: \"/websub\",\n-    subscribeOnStartUp: true,\n-    target: [\"<HUB_URL>\", \"<TOPIC_URL>\"],\n-    leaseSeconds: 3600,\n-    secret: \"<SECRET>\"\n-}\n-service websubSubscriber on websubEP {\n-\n-    resource function onIntentVerification(websub:Caller caller, websub:IntentVerificationRequest request) {\n-        http:Response response = new;\n-        // Insert logic to build subscription/unsubscription intent verification response.\n-        var result = caller->respond(response);\n-        if (result is error) { \n-            log:printError(\"Error responding to intent verification request\", result);\n-        }\n-    }\n-\n-    resource function onNotification(websub:Notification notification) {\n-        var payload = notification.getTextPayload();\n-        if (payload is string) {\n-            log:printInfo(\"WebSub Notification Received: \" + payload);\n-        } else {\n-            log:printError(\"Error retrieving payload as string\", payload);\n-        }\n-    }\n-}\n-```\n-\n-Functions are made available on the `websub:IntentVerificationRequest` to build a subscription or unsubscription \n-verification response, specifying the topic to verify intent against:\n-```ballerina\n-http:Response response = request.buildSubscriptionVerificationResponse(\"<TOPIC_TO_VERIFY_FOR>\");\n-```\n-```ballerina\n-http:Response response = request.buildUnsubscriptionVerificationResponse(\"<TOPIC_TO_VERIFY_FOR>\");\n-```\n- \n-Ballerina publishers can start up and publish directly to the Ballerina WebSub hub.\n-```ballerina\n-import ballerina/log;\n-import ballerina/http;\n-import ballerina/runtime;\n-import ballerina/websub;\n-\n-public function main() {\n-\n-    log:printInfo(\"Starting up the Ballerina Hub Service\");\n-    var result = websub:startHub(new http:Listener(9191));\n-    websub:Hub webSubHub = result is websub:Hub ? result : result.startedUpHub;\n-\n-    var registrationResponse = webSubHub.registerTopic(\"<TOPIC_URL>\");\n-    if (registrationResponse is error) {\n-        log:printError(\"Error occurred registering topic: \" + <string>registrationResponse.detail()?.message);\n-    } else {\n-        log:printInfo(\"Topic registration successful!\");\n-    }\n-\n-    // Make the publisher wait until the subscriber subscribes at the hub.\n-    runtime:sleep(20000);\n-\n-    log:printInfo(\"Publishing update to internal Hub\");\n-    var publishResponse = webSubHub.publishUpdate(\"<TOPIC_URL>\", {\"action\": \"publish\", \"mode\": \"internal-hub\"});\n-    if (publishResponse is error) {\n-        log:printError(\"Error notifying hub: \" + <string>publishResponse.detail()?.message);\n-    } else {\n-        log:printInfo(\"Update notification successful!\");\n-    }\n-\n-    // Make sure the service is running until the subscriber receives the update notification.\n-    runtime:sleep(5000);\n-}\n-```\n-\n-Ballerina publishers can also use the `websub:PublisherClient` to register topics at Ballerina WebSub hubs \n-and publish/notify updates to the remote hubs.\n-```ballerina\n-import ballerina/log;\n-import ballerina/runtime;\n-import ballerina/websub;\n-\n-websub:PublisherClient websubHubClientEP = new (\"https://localhost:9191/websub/hub\");\n-\n-public function main() {\n-\n-    var registrationResponse = websubHubClientEP->registerTopic(\"<TOPIC_URL>\");\n-    if (registrationResponse is error) {\n-        log:printError(\"Error occurred registering topic: \" + <string>registrationResponse.detail()?.message);\n-    } else {\n-        log:printInfo(\"Topic registration successful!\");\n-    }\n-\n-    // Make the publisher wait until the subscriber subscribes at the hub.\n-    runtime:sleep(10000);\n-\n-    log:printInfo(\"Publishing update to remote Hub\");\n-    var publishResponse = websubHubClientEP->publishUpdate(\"<TOPIC_URL>\", { \"action\": \"publish\", \"mode\": \"remote-hub\" });\n-    if (publishResponse is error) {\n-        log:printError(\"Error notifying hub: \" + <string>publishResponse.detail()?.message);\n-    } else {\n-        log:printInfo(\"Update notification successful!\");\n-    }\n-\n-}\n-```\n-\n-The `websub:SubscriptionClient` can be used by subscribers to send subscription and unsubscription requests explicitly.\n-```ballerina\n-import ballerina/log;\n-import ballerina/websub;\n-\n-websub:SubscriptionClient websubHubClientEP = new(\"<HUB_URL>\");\n-\n-public function main() {\n-\n+    \n+    ```ballerina\n+    websub:SubscriptionClient websubHubClientEP = new(\"<HUB_URL>\");\n+    \n     // Send subscription request for a subscriber service.\n     websub:SubscriptionChangeRequest subscriptionRequest = {\n         topic: \"<TOPIC_URL>\", \n         callback: \"<CALLBACK_URL>\",\n         secret: \"<SECRET>\"\n     };\n-\n-    var subscriptionChangeResponse = websubHubClientEP->subscribe(subscriptionRequest);\n-    if (subscriptionChangeResponse is websub:SubscriptionChangeResponse) {\n-        log:printInfo(\"Subscription Request successful at Hub [\" + subscriptionChangeResponse.hub \n-                        + \"] for Topic [\" + subscriptionChangeResponse.topic + \"]\");\n-    } else {\n-        log:printError(\"Error occurred with Subscription Request\", err = subscriptionChangeResponse);\n-    }\n-\n+    websub:SubscriptionChangeResponse|error subscriptionChangeResponse = websubHubClientEP->subscribe(subscriptionRequest);\n+    \n     // Send unsubscription request for the subscriber service.\n     websub:SubscriptionChangeRequest unsubscriptionRequest = {\n         topic: \"<TOPIC_URL>\",\n         callback: \"<CALLBACK_URL>\"\n     };\n+    ebsub:SubscriptionChangeResponse|error subscriptionChangeResponse = websubHubClientEP->unsubscribe(unsubscriptionRequest);\n+    ```\n \n-    subscriptionChangeResponse = websubHubClientEP->unsubscribe(unsubscriptionRequest);\n-    if (subscriptionChangeResponse is websub:SubscriptionChangeResponse) {\n-        log:printInfo(\"Unsubscription Request successful at Hub [\" + subscriptionChangeResponse.hub\n-                + \"] for Topic [\" + subscriptionChangeResponse.topic + \"]\");\n-    } else {\n-        log:printError(\"Error occurred with Unsubscription Request\", err = subscriptionChangeResponse);\n-    }\n-}\n-```\n+### Basic flow with WebSub", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b707a7169025e9b9c3b4352784b14376e1ca76"}, "originalPosition": 313}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY4MTk5OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0OTo0MlrOGF9cbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0OTo0MlrOGF9cbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwMjc2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            **Sends subscription request with on service startup and explicit intent verification**\n          \n          \n            \n            **Sends subscription request on service startup and explicit intent verification**", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408902767", "createdAt": "2020-04-15T14:49:42Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "diffHunk": "@@ -29,15 +26,49 @@ verification\n \n 5. The hub delivers the identified content to the subscribers of the topic.\n \n-### Features\n-\n #### Subscriber\n \n This module allows introducing a WebSub Subscriber Service with `onIntentVerification`, which accepts HTTP GET requests for intent verification, and `onNotification`, which accepts HTTP POST requests for notifications. The WebSub Subscriber Service provides the following capabilities:\n  - When the service is started a subscription request is sent for a hub/topic combination, either specified as annotations or discovered based on the resource URL specified as an annotation.\n  - If `onIntentVerification` is not specified, intent verification will be done automatically against the topic specified as an annotation or discovered based on the resource URL specified as an annotation.\n  - If a secret is specified for the subscription, signature validation will be done for authenticated content distribution.\n+ \n+**Sends subscription request with on service startup and explicit intent verification**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33a6cbba9df2e888a2274b3f3d101ef63958c29a"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODgyODM2OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNToyMDoxNFrOGF-5Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNToyMDoxNFrOGF-5Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyNjUzNQ==", "bodyText": "Add following here\nSince an `onIntentVerification` resource function is not included, intent verification for subscription and unsubscription requests would happen automatically.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408926535", "createdAt": "2020-04-15T15:20:14Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "diffHunk": "@@ -37,7 +34,45 @@ This module allows introducing a WebSub Subscriber Service with `onIntentVerific\n  - When the service is started a subscription request is sent for a hub/topic combination, either specified as annotations or discovered based on the resource URL specified as an annotation.\n  - If `onIntentVerification` is not specified, intent verification will be done automatically against the topic specified as an annotation or discovered based on the resource URL specified as an annotation.\n  - If a secret is specified for the subscription, signature validation will be done for authenticated content distribution.\n+ \n+**Sends the subscription request**\n   \n+  > When the `subscribeOnStartUp` is set to true in the Subscriber Service, it will result in a subscription request being sent to the specified hub for the specified topic, with the specified lease seconds value and the specified secret for authenticated content distribution. \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9b777bb048686557acc18e3680bd6350d4296a2"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODkwOTc1OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNTozNzowNlrOGF_sEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNTozNzowNlrOGF_sEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkzOTUzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              >Since an `onIntentVerification` resource function is not included, intent verification for subscription and unsubscription requests would happen automatically.\n          \n          \n            \n              > Since an `onIntentVerification` resource function is not included, intent verification for subscription and unsubscription requests would happen automatically.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408939537", "createdAt": "2020-04-15T15:37:06Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "diffHunk": "@@ -37,7 +34,47 @@ This module allows introducing a WebSub Subscriber Service with `onIntentVerific\n  - When the service is started a subscription request is sent for a hub/topic combination, either specified as annotations or discovered based on the resource URL specified as an annotation.\n  - If `onIntentVerification` is not specified, intent verification will be done automatically against the topic specified as an annotation or discovered based on the resource URL specified as an annotation.\n  - If a secret is specified for the subscription, signature validation will be done for authenticated content distribution.\n+ \n+**Sends subscription request on service startup and explicit intent verification**\n   \n+  > When the `subscribeOnStartUp` is set to true in the Subscriber Service, it will result in a subscription request being sent to the specified hub for the specified topic, with the specified lease seconds value and the specified secret for authenticated content distribution. \n+  \n+  >Since an `onIntentVerification` resource function is not included, intent verification for subscription and unsubscription requests would happen automatically.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14afdb923d6a66e62ae37758b5d6a98316148429"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODkxMTg5OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNTozNzozN1rOGF_thg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNTozNzozN1rOGF_thg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkzOTkxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ebsub:SubscriptionChangeResponse|error subscriptionChangeResponse = websubHubClientEP->unsubscribe(unsubscriptionRequest);\n          \n          \n            \n                websub:SubscriptionChangeResponse|error subscriptionChangeResponse = websubHubClientEP->unsubscribe(unsubscriptionRequest);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22608#discussion_r408939910", "createdAt": "2020-04-15T15:37:37Z", "author": {"login": "chamil321"}, "path": "stdlib/websub/src/main/ballerina/src/websub/Module.md", "diffHunk": "@@ -123,199 +160,41 @@ URLs, which facilitates WebSub discovery.\n A hub client endpoint is also made available to publishers and subscribers to perform the following:\n - Publishers\n   - Register a topic at the Hub\n+    ```ballerina\n+    websub:PublisherClient websubHubClientEP = new (\"http://localhost:9191/websub/publish\");\n+    error? registrationResponse = websubHubClientEP->registerTopic(\"http://websubpubtopic.com\");\n+    ```\n+    \n   - Publish to the hub indicating an update of the topic\n+    ```ballerina\n+    websub:PublisherClient websubHubClientEP = new (\"http://localhost:9191/websub/publish\");\n+    error? publishResponse = websubHubClientEP.publishUpdate(\"http://websubpubtopic.com\",\n+                                {\"action\": \"publish\", \"mode\": \"internal-hub\"});   \n+    ```\n+    \n - Subscribers\n   - Subscribe/Unsubscribe to/from topics at a hub\n-\n-## Samples\n-This sample demonstrates a Subscriber Service with `subscribeOnStartUp` set to true. This will result in a\n- subscription request being sent to the specified hub for the specified topic, with the specified lease seconds value \n- and the specified secret for authenticated content distribution.\n-Since an `onIntentVerification` resource function is not included, intent verification for subscription and unsubscription \n-requests would happen automatically, if the topic specified in the request matches that specified as an annotation or \n-that discovered for the annotated resource URL.\n- \n-```ballerina\n-import ballerina/log;\n-import ballerina/websub;\n-\n-listener websub:Listener websubEP = new(8181);\n-\n-@websub:SubscriberServiceConfig {\n-    path: \"/websub\",\n-    subscribeOnStartUp: true,\n-    target: [\"<HUB_URL>\", \"<TOPIC_URL>\"],\n-    leaseSeconds: 3600,\n-    secret: \"<SECRET>\"\n-}\n-service websubSubscriber on websubEP {\n-\n-    resource function onNotification(websub:Notification notification) {\n-        var payload = notification.getTextPayload();\n-        if (payload is string) {\n-            log:printInfo(\"WebSub Notification Received: \" + payload);\n-        } else {\n-            log:printError(\"Error retrieving payload as string\", payload);\n-        }\n-    }\n-}\n-```\n-\n-Explicit intent verification can be done by introducing an `onIntentVerification` resource function.\n-```ballerina\n-import ballerina/http;\n-import ballerina/log;\n-import ballerina/websub;\n-\n-listener websub:Listener websubEP = new(8181);\n-\n-@websub:SubscriberServiceConfig {\n-    path: \"/websub\",\n-    subscribeOnStartUp: true,\n-    target: [\"<HUB_URL>\", \"<TOPIC_URL>\"],\n-    leaseSeconds: 3600,\n-    secret: \"<SECRET>\"\n-}\n-service websubSubscriber on websubEP {\n-\n-    resource function onIntentVerification(websub:Caller caller, websub:IntentVerificationRequest request) {\n-        http:Response response = new;\n-        // Insert logic to build subscription/unsubscription intent verification response.\n-        var result = caller->respond(response);\n-        if (result is error) { \n-            log:printError(\"Error responding to intent verification request\", result);\n-        }\n-    }\n-\n-    resource function onNotification(websub:Notification notification) {\n-        var payload = notification.getTextPayload();\n-        if (payload is string) {\n-            log:printInfo(\"WebSub Notification Received: \" + payload);\n-        } else {\n-            log:printError(\"Error retrieving payload as string\", payload);\n-        }\n-    }\n-}\n-```\n-\n-Functions are made available on the `websub:IntentVerificationRequest` to build a subscription or unsubscription \n-verification response, specifying the topic to verify intent against:\n-```ballerina\n-http:Response response = request.buildSubscriptionVerificationResponse(\"<TOPIC_TO_VERIFY_FOR>\");\n-```\n-```ballerina\n-http:Response response = request.buildUnsubscriptionVerificationResponse(\"<TOPIC_TO_VERIFY_FOR>\");\n-```\n- \n-Ballerina publishers can start up and publish directly to the Ballerina WebSub hub.\n-```ballerina\n-import ballerina/log;\n-import ballerina/http;\n-import ballerina/runtime;\n-import ballerina/websub;\n-\n-public function main() {\n-\n-    log:printInfo(\"Starting up the Ballerina Hub Service\");\n-    var result = websub:startHub(new http:Listener(9191));\n-    websub:Hub webSubHub = result is websub:Hub ? result : result.startedUpHub;\n-\n-    var registrationResponse = webSubHub.registerTopic(\"<TOPIC_URL>\");\n-    if (registrationResponse is error) {\n-        log:printError(\"Error occurred registering topic: \" + <string>registrationResponse.detail()?.message);\n-    } else {\n-        log:printInfo(\"Topic registration successful!\");\n-    }\n-\n-    // Make the publisher wait until the subscriber subscribes at the hub.\n-    runtime:sleep(20000);\n-\n-    log:printInfo(\"Publishing update to internal Hub\");\n-    var publishResponse = webSubHub.publishUpdate(\"<TOPIC_URL>\", {\"action\": \"publish\", \"mode\": \"internal-hub\"});\n-    if (publishResponse is error) {\n-        log:printError(\"Error notifying hub: \" + <string>publishResponse.detail()?.message);\n-    } else {\n-        log:printInfo(\"Update notification successful!\");\n-    }\n-\n-    // Make sure the service is running until the subscriber receives the update notification.\n-    runtime:sleep(5000);\n-}\n-```\n-\n-Ballerina publishers can also use the `websub:PublisherClient` to register topics at Ballerina WebSub hubs \n-and publish/notify updates to the remote hubs.\n-```ballerina\n-import ballerina/log;\n-import ballerina/runtime;\n-import ballerina/websub;\n-\n-websub:PublisherClient websubHubClientEP = new (\"https://localhost:9191/websub/hub\");\n-\n-public function main() {\n-\n-    var registrationResponse = websubHubClientEP->registerTopic(\"<TOPIC_URL>\");\n-    if (registrationResponse is error) {\n-        log:printError(\"Error occurred registering topic: \" + <string>registrationResponse.detail()?.message);\n-    } else {\n-        log:printInfo(\"Topic registration successful!\");\n-    }\n-\n-    // Make the publisher wait until the subscriber subscribes at the hub.\n-    runtime:sleep(10000);\n-\n-    log:printInfo(\"Publishing update to remote Hub\");\n-    var publishResponse = websubHubClientEP->publishUpdate(\"<TOPIC_URL>\", { \"action\": \"publish\", \"mode\": \"remote-hub\" });\n-    if (publishResponse is error) {\n-        log:printError(\"Error notifying hub: \" + <string>publishResponse.detail()?.message);\n-    } else {\n-        log:printInfo(\"Update notification successful!\");\n-    }\n-\n-}\n-```\n-\n-The `websub:SubscriptionClient` can be used by subscribers to send subscription and unsubscription requests explicitly.\n-```ballerina\n-import ballerina/log;\n-import ballerina/websub;\n-\n-websub:SubscriptionClient websubHubClientEP = new(\"<HUB_URL>\");\n-\n-public function main() {\n-\n+    \n+    ```ballerina\n+    websub:SubscriptionClient websubHubClientEP = new(\"<HUB_URL>\");\n+    \n     // Send subscription request for a subscriber service.\n     websub:SubscriptionChangeRequest subscriptionRequest = {\n         topic: \"<TOPIC_URL>\", \n         callback: \"<CALLBACK_URL>\",\n         secret: \"<SECRET>\"\n     };\n-\n-    var subscriptionChangeResponse = websubHubClientEP->subscribe(subscriptionRequest);\n-    if (subscriptionChangeResponse is websub:SubscriptionChangeResponse) {\n-        log:printInfo(\"Subscription Request successful at Hub [\" + subscriptionChangeResponse.hub \n-                        + \"] for Topic [\" + subscriptionChangeResponse.topic + \"]\");\n-    } else {\n-        log:printError(\"Error occurred with Subscription Request\", err = subscriptionChangeResponse);\n-    }\n-\n+    websub:SubscriptionChangeResponse|error subscriptionChangeResponse = websubHubClientEP->subscribe(subscriptionRequest);\n+    \n     // Send unsubscription request for the subscriber service.\n     websub:SubscriptionChangeRequest unsubscriptionRequest = {\n         topic: \"<TOPIC_URL>\",\n         callback: \"<CALLBACK_URL>\"\n     };\n+    ebsub:SubscriptionChangeResponse|error subscriptionChangeResponse = websubHubClientEP->unsubscribe(unsubscriptionRequest);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14afdb923d6a66e62ae37758b5d6a98316148429"}, "originalPosition": 287}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4413, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}