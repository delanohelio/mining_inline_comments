{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MDk5MTU0", "number": 24417, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwODoyMDo1MVrOEOlDjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyMzo0MlrOEOvIOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzIyNjM5OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwODoyMDo1MVrOGxzfLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwODoyMDo1MVrOGxzfLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDg3Njk3NA==", "bodyText": "Shall we add a comment about what's being desugared into what?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24417#discussion_r454876974", "createdAt": "2020-07-15T08:20:51Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -5454,21 +5454,72 @@ private void reorderArguments(BLangInvocation iExpr) {\n             stmtExpression.type = firstNonRestArg.type;\n             iExpr.requiredArgs.add(0, stmtExpression);\n \n-            // The original value passed as the vararg has to now be sliced to pass only the args for the rest param,\n-            // if there is a rest param.\n+            // If there's no rest param, the vararg only provided for required/defaultable params.\n             if (invokableSymbol.restParam == null) {\n+                restArgs.remove(0);\n                 return;\n             }\n \n+            // If there is a rest param, the vararg could provide for the rest param too.\n+            // Create a new array with just the members of the original vararg specified for the rest param.\n+            BLangRestArgsExpression restArgsExpression = (BLangRestArgsExpression) restArgs.remove(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f2552f5dabd1cca6841d90cc6ec554a342c3d"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODg2NzA0OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyMTo0M1rOGyDT9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozNDo1OVrOGyD3rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEzNjI0Nw==", "bodyText": "Is this indentation correct here? I think we can change this latter", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24417#discussion_r455136247", "createdAt": "2020-07-15T15:21:43Z", "author": {"login": "rdhananjaya"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java", "diffHunk": "@@ -2445,6 +2473,28 @@ private void analyzeInvocation(BLangInvocation invocationExpr) {\n         getCurrentAnalysisState().taintedStatus = returnTaintedStatus;\n     }\n \n+    private boolean restoreTableIfIgnored(BInvokableSymbol invokableSymbol, Map<Integer, TaintRecord> origTaintTable,\n+     TaintedStatus argumentTaintReturnValue) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "579416ae8c78cf098770eb09387b214f12325cfe"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0NTM5MA==", "bodyText": "Ack, will fix this.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24417#discussion_r455145390", "createdAt": "2020-07-15T15:34:59Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java", "diffHunk": "@@ -2445,6 +2473,28 @@ private void analyzeInvocation(BLangInvocation invocationExpr) {\n         getCurrentAnalysisState().taintedStatus = returnTaintedStatus;\n     }\n \n+    private boolean restoreTableIfIgnored(BInvokableSymbol invokableSymbol, Map<Integer, TaintRecord> origTaintTable,\n+     TaintedStatus argumentTaintReturnValue) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEzNjI0Nw=="}, "originalCommit": {"oid": "579416ae8c78cf098770eb09387b214f12325cfe"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODg3Njc0OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyMzo0MlrOGyDaMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjowMDo0OFrOGyE2aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEzNzg0MQ==", "bodyText": "Do we need this param returnTaintedStatus", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24417#discussion_r455137841", "createdAt": "2020-07-15T15:23:42Z", "author": {"login": "rdhananjaya"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java", "diffHunk": "@@ -2445,6 +2473,28 @@ private void analyzeInvocation(BLangInvocation invocationExpr) {\n         getCurrentAnalysisState().taintedStatus = returnTaintedStatus;\n     }\n \n+    private boolean restoreTableIfIgnored(BInvokableSymbol invokableSymbol, Map<Integer, TaintRecord> origTaintTable,\n+     TaintedStatus argumentTaintReturnValue) {\n+        if (argumentTaintReturnValue != TaintedStatus.IGNORED) {\n+            return false;\n+        }\n+        invokableSymbol.taintTable = origTaintTable; // restore taint table.\n+        return true;\n+    }\n+\n+    private TaintedStatus updateAndGetTaintedStatus(BLangInvocation invocationExpr, TaintedStatus returnTaintedStatus,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "579416ae8c78cf098770eb09387b214f12325cfe"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0NTEyOA==", "bodyText": "If argumentTaintReturnValue == TaintedStatus.TAINTED evaluates to false, we seem to be using this original returnTaintedStatus, so I guess we still need it?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24417#discussion_r455145128", "createdAt": "2020-07-15T15:34:32Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java", "diffHunk": "@@ -2445,6 +2473,28 @@ private void analyzeInvocation(BLangInvocation invocationExpr) {\n         getCurrentAnalysisState().taintedStatus = returnTaintedStatus;\n     }\n \n+    private boolean restoreTableIfIgnored(BInvokableSymbol invokableSymbol, Map<Integer, TaintRecord> origTaintTable,\n+     TaintedStatus argumentTaintReturnValue) {\n+        if (argumentTaintReturnValue != TaintedStatus.IGNORED) {\n+            return false;\n+        }\n+        invokableSymbol.taintTable = origTaintTable; // restore taint table.\n+        return true;\n+    }\n+\n+    private TaintedStatus updateAndGetTaintedStatus(BLangInvocation invocationExpr, TaintedStatus returnTaintedStatus,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEzNzg0MQ=="}, "originalCommit": {"oid": "579416ae8c78cf098770eb09387b214f12325cfe"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2MTQ0OA==", "bodyText": "ack", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24417#discussion_r455161448", "createdAt": "2020-07-15T16:00:48Z", "author": {"login": "rdhananjaya"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java", "diffHunk": "@@ -2445,6 +2473,28 @@ private void analyzeInvocation(BLangInvocation invocationExpr) {\n         getCurrentAnalysisState().taintedStatus = returnTaintedStatus;\n     }\n \n+    private boolean restoreTableIfIgnored(BInvokableSymbol invokableSymbol, Map<Integer, TaintRecord> origTaintTable,\n+     TaintedStatus argumentTaintReturnValue) {\n+        if (argumentTaintReturnValue != TaintedStatus.IGNORED) {\n+            return false;\n+        }\n+        invokableSymbol.taintTable = origTaintTable; // restore taint table.\n+        return true;\n+    }\n+\n+    private TaintedStatus updateAndGetTaintedStatus(BLangInvocation invocationExpr, TaintedStatus returnTaintedStatus,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEzNzg0MQ=="}, "originalCommit": {"oid": "579416ae8c78cf098770eb09387b214f12325cfe"}, "originalPosition": 142}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3276, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}