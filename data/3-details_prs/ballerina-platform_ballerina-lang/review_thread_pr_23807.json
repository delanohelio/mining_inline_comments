{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMDgyOTk0", "number": 23807, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMjoxODozMlrOEDaruQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNToxNjo1MlrOEEJLTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDE4MzYxOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/clients/11_grpc_byte_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMjoxODozMlrOGgbB8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMjoxODozMlrOGgbB8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY1MDQ4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return io:sprintf(\"File read error: %s - %s\", err.message());\n          \n          \n            \n                        return io:sprintf(\"File read error: %s\", err.message());", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23807#discussion_r436650483", "createdAt": "2020-06-08T12:18:32Z", "author": {"login": "daneshk"}, "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/clients/11_grpc_byte_client.bal", "diffHunk": "@@ -60,7 +60,7 @@ function testLargeByteArray(string filePath) returns (string) {\n             }\n         } else {\n             error err = resultBytes;\n-            return io:sprintf(\"File read error: %s - %s\", err.reason(), <string> err.detail()[\"message\"]);\n+            return io:sprintf(\"File read error: %s - %s\", err.message());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a04e1732b009e384633ef485275cb70ef8fdc4f6"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDE4NzkwOnYy", "diffSide": "RIGHT", "path": "stdlib/grpc/src/main/ballerina/src/grpc/grpc_errors.bal", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMjoxOTo1OVrOGgbEuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzozMTozNFrOGhJ6oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY1MTE5NQ==", "bodyText": "Do we still need to maintain constants values for the error? or shall we remove those", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23807#discussion_r436651195", "createdAt": "2020-06-08T12:19:59Z", "author": {"login": "daneshk"}, "path": "stdlib/grpc/src/main/ballerina/src/grpc/grpc_errors.bal", "diffHunk": "@@ -14,101 +14,92 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# The details of a gRPC error.\n-#\n-# + message - Specific error message for the error\n-# + cause - Cause of the error if this error occurred due to another error (probably from another module)\n-public type Detail record {\n-    string message;\n-    error cause?;\n-};\n-\n-# Represents the reason of the cancelled error.\n-public const CANCELLED_ERROR = \"{ballerina/grpc}CancelledError\";\n+# Represents the type of the cancelled error.\n+public const CANCELLED_ERROR = \"CancelledError\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "043fee2f4473d27f59b3c2b78160c6f4d2bd31de"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY2MDUyNg==", "bodyText": "No need these constants for the error but these used to create the ErrorType(https://github.com/ballerina-platform/ballerina-lang/blob/master/stdlib/grpc/src/main/ballerina/src/grpc/grpc_errors.bal#L116). ErrorType used in the retryConfig. Therefore, I keep this.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23807#discussion_r436660526", "createdAt": "2020-06-08T12:38:05Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/grpc/src/main/ballerina/src/grpc/grpc_errors.bal", "diffHunk": "@@ -14,101 +14,92 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# The details of a gRPC error.\n-#\n-# + message - Specific error message for the error\n-# + cause - Cause of the error if this error occurred due to another error (probably from another module)\n-public type Detail record {\n-    string message;\n-    error cause?;\n-};\n-\n-# Represents the reason of the cancelled error.\n-public const CANCELLED_ERROR = \"{ballerina/grpc}CancelledError\";\n+# Represents the type of the cancelled error.\n+public const CANCELLED_ERROR = \"CancelledError\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY1MTE5NQ=="}, "originalCommit": {"oid": "043fee2f4473d27f59b3c2b78160c6f4d2bd31de"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcyOTE1OQ==", "bodyText": "In retryConfig, instead of ErrorType const, is it possible to pass the actual error typedesc value", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23807#discussion_r436729159", "createdAt": "2020-06-08T14:00:27Z", "author": {"login": "daneshk"}, "path": "stdlib/grpc/src/main/ballerina/src/grpc/grpc_errors.bal", "diffHunk": "@@ -14,101 +14,92 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# The details of a gRPC error.\n-#\n-# + message - Specific error message for the error\n-# + cause - Cause of the error if this error occurred due to another error (probably from another module)\n-public type Detail record {\n-    string message;\n-    error cause?;\n-};\n-\n-# Represents the reason of the cancelled error.\n-public const CANCELLED_ERROR = \"{ballerina/grpc}CancelledError\";\n+# Represents the type of the cancelled error.\n+public const CANCELLED_ERROR = \"CancelledError\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY1MTE5NQ=="}, "originalCommit": {"oid": "043fee2f4473d27f59b3c2b78160c6f4d2bd31de"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0MjE3MA==", "bodyText": "yes, we can use it but it will affect the API. So, I skipped this.\nCan we do the changes in the API?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23807#discussion_r436742170", "createdAt": "2020-06-08T14:14:05Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/grpc/src/main/ballerina/src/grpc/grpc_errors.bal", "diffHunk": "@@ -14,101 +14,92 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# The details of a gRPC error.\n-#\n-# + message - Specific error message for the error\n-# + cause - Cause of the error if this error occurred due to another error (probably from another module)\n-public type Detail record {\n-    string message;\n-    error cause?;\n-};\n-\n-# Represents the reason of the cancelled error.\n-public const CANCELLED_ERROR = \"{ballerina/grpc}CancelledError\";\n+# Represents the type of the cancelled error.\n+public const CANCELLED_ERROR = \"CancelledError\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY1MTE5NQ=="}, "originalCommit": {"oid": "043fee2f4473d27f59b3c2b78160c6f4d2bd31de"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQxODY1Nw==", "bodyText": "Fixed in 26e0f03", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23807#discussion_r437418657", "createdAt": "2020-06-09T13:31:34Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/grpc/src/main/ballerina/src/grpc/grpc_errors.bal", "diffHunk": "@@ -14,101 +14,92 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# The details of a gRPC error.\n-#\n-# + message - Specific error message for the error\n-# + cause - Cause of the error if this error occurred due to another error (probably from another module)\n-public type Detail record {\n-    string message;\n-    error cause?;\n-};\n-\n-# Represents the reason of the cancelled error.\n-public const CANCELLED_ERROR = \"{ballerina/grpc}CancelledError\";\n+# Represents the type of the cancelled error.\n+public const CANCELLED_ERROR = \"CancelledError\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY1MTE5NQ=="}, "originalCommit": {"oid": "043fee2f4473d27f59b3c2b78160c6f4d2bd31de"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzgwMDI3OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/clients/11_grpc_byte_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNToxNjoxOFrOGhlKNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNToxNjoxOFrOGhlKNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2NTAxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return io:sprintf(\"Error from Connector: %s - %s\", addResponse.message());\n          \n          \n            \n                            return io:sprintf(\"Error from Connector: %s\", addResponse.message());", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23807#discussion_r437865014", "createdAt": "2020-06-10T05:16:18Z", "author": {"login": "daneshk"}, "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/clients/11_grpc_byte_client.bal", "diffHunk": "@@ -48,7 +48,7 @@ function testLargeByteArray(string filePath) returns (string) {\n         if (resultBytes is byte[]) {\n             var addResponse = blockingEp->checkBytes(resultBytes);\n             if (addResponse is grpc:Error) {\n-                return io:sprintf(\"Error from Connector: %s - %s\", addResponse.reason(), <string> addResponse.detail()[\"message\"]);\n+                return io:sprintf(\"Error from Connector: %s - %s\", addResponse.message());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26e0f03aae208b8548b387b65f5208a5f7cd536e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzgwMDQ5OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/clients/11_grpc_byte_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNToxNjoyOFrOGhlKWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNToxNjoyOFrOGhlKWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2NTA1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return io:sprintf(\"Error from Connector: %s - %s\", addResponse.message());\n          \n          \n            \n                    return io:sprintf(\"Error from Connector: %s\", addResponse.message());", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23807#discussion_r437865051", "createdAt": "2020-06-10T05:16:28Z", "author": {"login": "daneshk"}, "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/clients/11_grpc_byte_client.bal", "diffHunk": "@@ -29,7 +29,7 @@ function testByteArray() returns (string) {\n     byte[] bytes = statement.toBytes();\n     var addResponse = blockingEp->checkBytes(bytes);\n     if (addResponse is grpc:Error) {\n-        return io:sprintf(\"Error from Connector: %s - %s\", addResponse.reason(), <string> addResponse.detail()[\"message\"]);\n+        return io:sprintf(\"Error from Connector: %s - %s\", addResponse.message());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26e0f03aae208b8548b387b65f5208a5f7cd536e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzgwMDc5OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/clients/10_grpc_ssl_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNToxNjo0MFrOGhlKiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNToxNjo0MFrOGhlKiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2NTA5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return io:sprintf(\"Error from Connector: %s - %s\", unionResp.message());\n          \n          \n            \n                    return io:sprintf(\"Error from Connector: %s\", unionResp.message());", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23807#discussion_r437865099", "createdAt": "2020-06-10T05:16:40Z", "author": {"login": "daneshk"}, "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/clients/10_grpc_ssl_client.bal", "diffHunk": "@@ -35,7 +35,7 @@ function testUnarySecuredBlockingWithCerts() returns (string) {\n \n     [string, grpc:Headers]|grpc:Error unionResp = helloWorldBlockingEp->hello(\"WSO2\");\n     if (unionResp is grpc:Error) {\n-        return io:sprintf(\"Error from Connector: %s - %s\", unionResp.reason(), <string> unionResp.detail()[\"message\"]);\n+        return io:sprintf(\"Error from Connector: %s - %s\", unionResp.message());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26e0f03aae208b8548b387b65f5208a5f7cd536e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzgwMTEwOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/clients/09_grpc_secured_unary_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNToxNjo1MlrOGhlKtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNToxNjo1MlrOGhlKtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2NTE0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return io:sprintf(\"Error from Connector: %s - %s\", unionResp.message());\n          \n          \n            \n                    return io:sprintf(\"Error from Connector: %s\", unionResp.message());", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23807#discussion_r437865142", "createdAt": "2020-06-10T05:16:52Z", "author": {"login": "daneshk"}, "path": "tests/jballerina-integration-test/src/test/resources/grpc/src/clients/09_grpc_secured_unary_client.bal", "diffHunk": "@@ -47,7 +47,7 @@ function testUnarySecuredBlocking(string keystorePath, string truststorePath) re\n \n     [string, grpc:Headers]|grpc:Error unionResp = helloWorldBlockingEp->hello(\"WSO2\");\n     if (unionResp is grpc:Error) {\n-        return io:sprintf(\"Error from Connector: %s - %s\", unionResp.reason(), <string> unionResp.detail()[\"message\"]);\n+        return io:sprintf(\"Error from Connector: %s - %s\", unionResp.message());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26e0f03aae208b8548b387b65f5208a5f7cd536e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3477, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}