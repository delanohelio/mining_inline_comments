{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyOTc4MTYw", "number": 26101, "title": "Add support to import predeclared langlibs manually for testable packages", "bodyText": "Purpose\n\n$Subject.\n\nFixes #25990\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-09-25T10:21:52Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101", "merged": true, "mergeCommit": {"oid": "11d01307d4ba6b81a719eff33929e23841e4cf5a"}, "closed": true, "closedAt": "2020-10-20T05:31:54Z", "author": {"login": "chiranSachintha"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMSekAAH2gAyNDkyOTc4MTYwOjM0NjhmZTFkNjA4YWRhM2I5NzcwYjE3YjRjMWY4NmVlMDUzZjI3MTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdURbbeAFqTUxMjMyOTYzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3468fe1d608ada3b9770b17b4c1f86ee053f2714", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3468fe1d608ada3b9770b17b4c1f86ee053f2714", "committedDate": "2020-09-25T09:36:00Z", "message": "Avoid resolving alias in root level for testable pkgs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f116f296c640ba36b7af9e7281cae544d65402a1", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f116f296c640ba36b7af9e7281cae544d65402a1", "committedDate": "2020-09-25T10:37:08Z", "message": "Add testerina tests for predeclared imports"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "48fb6b81b6feb6bef3d3e73d7f487fcdf273fe6d", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/48fb6b81b6feb6bef3d3e73d7f487fcdf273fe6d", "committedDate": "2020-09-25T09:36:00Z", "message": "Add testerina tests for predeclared imports"}, "afterCommit": {"oid": "f116f296c640ba36b7af9e7281cae544d65402a1", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f116f296c640ba36b7af9e7281cae544d65402a1", "committedDate": "2020-09-25T10:37:08Z", "message": "Add testerina tests for predeclared imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MDk2NzA4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101#pullrequestreview-499096708", "createdAt": "2020-09-30T05:38:13Z", "commit": {"oid": "f116f296c640ba36b7af9e7281cae544d65402a1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNTozODoxM1rOHaN87Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzo0Njo0MFrOHaRP4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI1MzYxMw==", "bodyText": "Can we check if the node kind of env.node is NodeKind.PACKAGE and then check\n((BLangPackage) node).flagSet.contains(Flag.TESTABLE) instead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101#discussion_r497253613", "createdAt": "2020-09-30T05:38:13Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -415,7 +416,7 @@ public BSymbol resolvePrefixSymbol(SymbolEnv env, Name pkgAlias, Name compUnit)\n             entry = entry.next;\n         }\n \n-        if (env.enclEnv != null) {\n+        if (env.enclEnv != null && !(env.node instanceof BLangTestablePackage)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f116f296c640ba36b7af9e7281cae544d65402a1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMwNzYxNg==", "bodyText": "Shall we also add a negative test for duplicate imports of langlib modules that have been predeclared?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101#discussion_r497307616", "createdAt": "2020-09-30T07:46:40Z", "author": {"login": "MaryamZi"}, "path": "tests/testerina-integration-test/src/test/resources/project-based-tests/predeclared-import-tests/src/importTests/tests/imports-tests.bal", "diffHunk": "@@ -0,0 +1,40 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import ballerina/test;\n+import ballerina/lang.'float;\n+import ballerina/lang.'int;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f116f296c640ba36b7af9e7281cae544d65402a1"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47eeda14817707e49fcd4170312a5121390de0fd", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/47eeda14817707e49fcd4170312a5121390de0fd", "committedDate": "2020-10-07T18:20:59Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into issue-25990"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16e2744d772b47bc58607e5e8351fc950c9d764f", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/16e2744d772b47bc58607e5e8351fc950c9d764f", "committedDate": "2020-10-08T04:45:15Z", "message": "Define predeclared imports compilation unit wise"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b7c2340c7c11ecf9d38fc63a380217121886d53", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1b7c2340c7c11ecf9d38fc63a380217121886d53", "committedDate": "2020-10-08T04:58:12Z", "message": "Fix review suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b174eec2360743f2375609686f22f735f0d66f00", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b174eec2360743f2375609686f22f735f0d66f00", "committedDate": "2020-10-08T04:46:04Z", "message": "Fix review suggestions"}, "afterCommit": {"oid": "1b7c2340c7c11ecf9d38fc63a380217121886d53", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1b7c2340c7c11ecf9d38fc63a380217121886d53", "committedDate": "2020-10-08T04:58:12Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0ODIxMDkz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101#pullrequestreview-504821093", "createdAt": "2020-10-08T14:06:39Z", "commit": {"oid": "1b7c2340c7c11ecf9d38fc63a380217121886d53"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDowNjo0MFrOHegV9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDowODo0N1rOHegcbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc0OTIzNg==", "bodyText": "We don't have to do this if the user has an import with this alias, right? Shall we move these two lines to L820?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101#discussion_r501749236", "createdAt": "2020-10-08T14:06:40Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -809,18 +807,23 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n-    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules,\n+                                       List<BLangCompilationUnit> compUnits, SymbolEnv env) {\n         SymbolEnv prevEnv = this.env;\n         this.env = env;\n-        for (Name alias : predeclaredModules.keySet()) {\n-            ScopeEntry entry = this.env.scope.lookup(alias);\n-            if (entry == NOT_FOUND_ENTRY) {\n-                this.env.scope.define(alias, predeclaredModules.get(alias));\n-            } else {\n-                while (entry.next != NOT_FOUND_ENTRY) {\n-                    entry = entry.next;\n+        for (BLangCompilationUnit compUnit : compUnits) {\n+            for (Name alias : predeclaredModules.keySet()) {\n+                BPackageSymbol symbol = duplicatePackagSymbol(predeclaredModules.get(alias));\n+                symbol.compUnit = new Name(compUnit.name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b7c2340c7c11ecf9d38fc63a380217121886d53"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1MDg5NQ==", "bodyText": "How about changing this to something like\n                if (entry == NOT_FOUND_ENTRY) {\n                    this.env.scope.define(alias, symbol);\n                    continue;\n                }\n\n                while (entry.next != NOT_FOUND_ENTRY) {\n                    entry = entry.next;\n                }\n                entry.next = new ScopeEntry(symbol, NOT_FOUND_ENTRY);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101#discussion_r501750895", "createdAt": "2020-10-08T14:08:47Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -809,18 +807,23 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n-    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules,\n+                                       List<BLangCompilationUnit> compUnits, SymbolEnv env) {\n         SymbolEnv prevEnv = this.env;\n         this.env = env;\n-        for (Name alias : predeclaredModules.keySet()) {\n-            ScopeEntry entry = this.env.scope.lookup(alias);\n-            if (entry == NOT_FOUND_ENTRY) {\n-                this.env.scope.define(alias, predeclaredModules.get(alias));\n-            } else {\n-                while (entry.next != NOT_FOUND_ENTRY) {\n-                    entry = entry.next;\n+        for (BLangCompilationUnit compUnit : compUnits) {\n+            for (Name alias : predeclaredModules.keySet()) {\n+                BPackageSymbol symbol = duplicatePackagSymbol(predeclaredModules.get(alias));\n+                symbol.compUnit = new Name(compUnit.name);\n+                ScopeEntry entry = this.env.scope.lookup(alias);\n+                if (entry == NOT_FOUND_ENTRY) {\n+                    this.env.scope.define(alias, symbol);\n+                } else {\n+                    while (entry.next != NOT_FOUND_ENTRY) {\n+                        entry = entry.next;\n+                    }\n+                    entry.next = new ScopeEntry(symbol, NOT_FOUND_ENTRY);\n                 }\n-                entry.next = new ScopeEntry(predeclaredModules.get(alias), NOT_FOUND_ENTRY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b7c2340c7c11ecf9d38fc63a380217121886d53"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ada5f3692609067e3003518212949c2e891ae313", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ada5f3692609067e3003518212949c2e891ae313", "committedDate": "2020-10-10T13:20:04Z", "message": "Refactor `initPredeclaredModules` function"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MDgyNDcy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101#pullrequestreview-507082472", "createdAt": "2020-10-13T05:39:04Z", "commit": {"oid": "ada5f3692609067e3003518212949c2e891ae313"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNTozOTowNFrOHgWGCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNTo0MTozMVrOHgWJAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY3ODQ3Mg==", "bodyText": "@chiranSachintha, shall we check if we can switch the loops as discussed during the call?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101#discussion_r503678472", "createdAt": "2020-10-13T05:39:04Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -809,18 +807,33 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n-    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules,\n+                                       List<BLangCompilationUnit> compUnits, SymbolEnv env) {\n         SymbolEnv prevEnv = this.env;\n         this.env = env;\n-        for (Name alias : predeclaredModules.keySet()) {\n-            ScopeEntry entry = this.env.scope.lookup(alias);\n-            if (entry == NOT_FOUND_ENTRY) {\n-                this.env.scope.define(alias, predeclaredModules.get(alias));\n-            } else {\n-                while (entry.next != NOT_FOUND_ENTRY) {\n-                    entry = entry.next;\n+        for (BLangCompilationUnit compUnit : compUnits) {\n+            for (Name alias : predeclaredModules.keySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada5f3692609067e3003518212949c2e891ae313"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY3ODYxOQ==", "bodyText": "Let's try moving this out to a method and calling it only where necessary.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101#discussion_r503678619", "createdAt": "2020-10-13T05:39:30Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -809,18 +807,23 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n-    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules,\n+                                       List<BLangCompilationUnit> compUnits, SymbolEnv env) {\n         SymbolEnv prevEnv = this.env;\n         this.env = env;\n-        for (Name alias : predeclaredModules.keySet()) {\n-            ScopeEntry entry = this.env.scope.lookup(alias);\n-            if (entry == NOT_FOUND_ENTRY) {\n-                this.env.scope.define(alias, predeclaredModules.get(alias));\n-            } else {\n-                while (entry.next != NOT_FOUND_ENTRY) {\n-                    entry = entry.next;\n+        for (BLangCompilationUnit compUnit : compUnits) {\n+            for (Name alias : predeclaredModules.keySet()) {\n+                BPackageSymbol symbol = duplicatePackagSymbol(predeclaredModules.get(alias));\n+                symbol.compUnit = new Name(compUnit.name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc0OTIzNg=="}, "originalCommit": {"oid": "1b7c2340c7c11ecf9d38fc63a380217121886d53"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY3OTIzMg==", "bodyText": "Missing the @since annotation.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101#discussion_r503679232", "createdAt": "2020-10-13T05:41:31Z", "author": {"login": "MaryamZi"}, "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/ImportTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.testerina.test;\n+\n+import org.ballerinalang.test.context.BMainInstance;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.ballerinalang.test.context.LogLeecher;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * Test class to test predeclared langlibs using a ballerina project.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada5f3692609067e3003518212949c2e891ae313"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0065adf92e2ed872f128aa2fa15abb2a339a573f", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0065adf92e2ed872f128aa2fa15abb2a339a573f", "committedDate": "2020-10-15T05:47:58Z", "message": "Refactor `duplicatePackagSymbol` function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c96b7b191a699b6b4b93e612dac1c889388ba8ca", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c96b7b191a699b6b4b93e612dac1c889388ba8ca", "committedDate": "2020-10-15T06:55:44Z", "message": "Refactor `initPredeclaredModules` function"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MTY2NzA2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101#pullrequestreview-509166706", "createdAt": "2020-10-15T09:01:59Z", "commit": {"oid": "c96b7b191a699b6b4b93e612dac1c889388ba8ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTowMjowMFrOHh9org==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTowMjowMFrOHh9org==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM3NDg5NA==", "bodyText": "Needs to come after the description.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101#discussion_r505374894", "createdAt": "2020-10-15T09:02:00Z", "author": {"login": "MaryamZi"}, "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/ImportTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.testerina.test;\n+\n+import org.ballerinalang.test.context.BMainInstance;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.ballerinalang.test.context.LogLeecher;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * @since Swan Lake", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c96b7b191a699b6b4b93e612dac1c889388ba8ca"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21742dace76a0a19c596f5fd2ac8805e1d835130", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/21742dace76a0a19c596f5fd2ac8805e1d835130", "committedDate": "2020-10-19T19:58:08Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMzIzNzI1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101#pullrequestreview-512323725", "createdAt": "2020-10-20T04:33:48Z", "commit": {"oid": "21742dace76a0a19c596f5fd2ac8805e1d835130"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNDozMzo0OFrOHkqRCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNDozMzo0OFrOHkqRCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIwMzI3Mg==", "bodyText": "Shall we extract compUnits.get(i).name out to a variable?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101#discussion_r508203272", "createdAt": "2020-10-20T04:33:48Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -802,25 +800,40 @@ public void visit(BLangImportPackage importPkgNode) {\n \n         // get a copy of the package symbol, add compilation unit info to it,\n         // and define it in the current package scope\n-        BPackageSymbol symbol = duplicatePackagSymbol(pkgSymbol);\n-        symbol.compUnit = names.fromIdNode(importPkgNode.compUnit);\n+        BPackageSymbol symbol = dupPackageSymbolAndSetCompUnit(pkgSymbol, names.fromIdNode(importPkgNode.compUnit));\n         symbol.scope = pkgSymbol.scope;\n         importPkgNode.symbol = symbol;\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n-    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules,\n+                                       List<BLangCompilationUnit> compUnits, SymbolEnv env) {\n         SymbolEnv prevEnv = this.env;\n         this.env = env;\n         for (Name alias : predeclaredModules.keySet()) {\n+            int index = 0;\n             ScopeEntry entry = this.env.scope.lookup(alias);\n-            if (entry == NOT_FOUND_ENTRY) {\n-                this.env.scope.define(alias, predeclaredModules.get(alias));\n-            } else {\n+            if (entry == NOT_FOUND_ENTRY && !compUnits.isEmpty()) {\n+                this.env.scope.define(alias, dupPackageSymbolAndSetCompUnit(predeclaredModules.get(alias),\n+                        new Name(compUnits.get(index++).name)));\n+                entry = this.env.scope.lookup(alias);\n+            }\n+            for (int i = index; i < compUnits.size(); i++) {\n+                boolean isUndefinedModule = true;\n+                if (((BPackageSymbol) entry.symbol).compUnit.value.equals(compUnits.get(i).name)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21742dace76a0a19c596f5fd2ac8805e1d835130"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adc644debff7b0628deb4a357180c5fee6623f97", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/adc644debff7b0628deb4a357180c5fee6623f97", "committedDate": "2020-10-20T04:50:43Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMzI5NjM3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26101#pullrequestreview-512329637", "createdAt": "2020-10-20T04:54:04Z", "commit": {"oid": "adc644debff7b0628deb4a357180c5fee6623f97"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4674, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}