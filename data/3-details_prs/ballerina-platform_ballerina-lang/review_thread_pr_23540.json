{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNzYwNDA0", "number": 23540, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMTo1Mjo1OFrOEADZoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxOTowMDo0MVrOEAopGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDkxMTY4OnYy", "diffSide": "RIGHT", "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/Utils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMTo1Mjo1OFrOGbFvqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxODo1ODo0NFrOGcCdvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1ODg1Ng==", "bodyText": "This still doesn't address the said issue though. Here, the getPackagePath() method needs to be called anyway to get the module name for a given log call. These if conditions are duplicating two checks/functionalities:\n\nThe call to get the module name\nThe check to see if the log level is enabled (since it is checked in the logMessage() method)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23540#discussion_r431058856", "createdAt": "2020-05-27T11:52:58Z", "author": {"login": "pubudu91"}, "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/Utils.java", "diffHunk": "@@ -27,39 +27,76 @@\n  * @since 1.1.0\n  */\n public class Utils extends AbstractLogFunction {\n+    private static boolean logLevelEnabled = false;\n+\n     public static void printDebug(Object msg) {\n-        logMessage(Scheduler.getStrand(), msg, BLogLevel.DEBUG, getPackagePath(),\n-                (pkg, message) -> {\n-            getLogger(pkg).debug(message);\n-        });\n+        if (LOG_MANAGER.isModuleLogLevelEnabled()) {\n+            logLevelEnabled = isLogLevelEnabled(BLogLevel.DEBUG, getPackagePath());\n+        } else {\n+            logLevelEnabled = isLogLevelEnabled(BLogLevel.DEBUG, \"\");\n+        }\n+        if (logLevelEnabled) {\n+            logMessage(Scheduler.getStrand(), msg, BLogLevel.DEBUG, getPackagePath(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a290f7bdb57dd395e869b61f43ba9822d9e40206"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4MjI0Mg==", "bodyText": "As mentioned before, it makes a considerable performance improvement when the log level is not enabled. With the new implementation, if module log level is not enabled, getPackagePath() does not have to get called in order to check if the log level is enabled. If only the log level is enabled, getPackagePath() will be called to print the log message.\nYes, agree with the second point. the check in logMessage() is not redundant since it is already confirmed that the log level is enabled. Hence removed that check.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23540#discussion_r431082242", "createdAt": "2020-05-27T12:35:12Z", "author": {"login": "MadhukaHarith92"}, "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/Utils.java", "diffHunk": "@@ -27,39 +27,76 @@\n  * @since 1.1.0\n  */\n public class Utils extends AbstractLogFunction {\n+    private static boolean logLevelEnabled = false;\n+\n     public static void printDebug(Object msg) {\n-        logMessage(Scheduler.getStrand(), msg, BLogLevel.DEBUG, getPackagePath(),\n-                (pkg, message) -> {\n-            getLogger(pkg).debug(message);\n-        });\n+        if (LOG_MANAGER.isModuleLogLevelEnabled()) {\n+            logLevelEnabled = isLogLevelEnabled(BLogLevel.DEBUG, getPackagePath());\n+        } else {\n+            logLevelEnabled = isLogLevelEnabled(BLogLevel.DEBUG, \"\");\n+        }\n+        if (logLevelEnabled) {\n+            logMessage(Scheduler.getStrand(), msg, BLogLevel.DEBUG, getPackagePath(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1ODg1Ng=="}, "originalCommit": {"oid": "a290f7bdb57dd395e869b61f43ba9822d9e40206"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA1MzY5Mg==", "bodyText": "Sorry, yeah, you are right, no need to be doing additional evaluations if the log level is not enabled", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23540#discussion_r432053692", "createdAt": "2020-05-28T18:58:44Z", "author": {"login": "pubudu91"}, "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/Utils.java", "diffHunk": "@@ -27,39 +27,76 @@\n  * @since 1.1.0\n  */\n public class Utils extends AbstractLogFunction {\n+    private static boolean logLevelEnabled = false;\n+\n     public static void printDebug(Object msg) {\n-        logMessage(Scheduler.getStrand(), msg, BLogLevel.DEBUG, getPackagePath(),\n-                (pkg, message) -> {\n-            getLogger(pkg).debug(message);\n-        });\n+        if (LOG_MANAGER.isModuleLogLevelEnabled()) {\n+            logLevelEnabled = isLogLevelEnabled(BLogLevel.DEBUG, getPackagePath());\n+        } else {\n+            logLevelEnabled = isLogLevelEnabled(BLogLevel.DEBUG, \"\");\n+        }\n+        if (logLevelEnabled) {\n+            logMessage(Scheduler.getStrand(), msg, BLogLevel.DEBUG, getPackagePath(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1ODg1Ng=="}, "originalCommit": {"oid": "a290f7bdb57dd395e869b61f43ba9822d9e40206"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDkzMzI0OnYy", "diffSide": "RIGHT", "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/AbstractLogFunction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMTo1OTo1N1rOGbF9sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMzozMDowMFrOGbKLjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2MjQ1MQ==", "bodyText": "This API is sort of redundant isn't it? This is basically doing the same thing as what LogManager.getPackageLogLevel() API does.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23540#discussion_r431062451", "createdAt": "2020-05-27T11:59:57Z", "author": {"login": "pubudu91"}, "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/AbstractLogFunction.java", "diffHunk": "@@ -91,4 +91,14 @@ static String getPackagePath() {\n         }\n         return \".\";\n     }\n+\n+    static boolean isLogLevelEnabled(BLogLevel logLevel, String pckg) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a290f7bdb57dd395e869b61f43ba9822d9e40206"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEzMTUzMw==", "bodyText": "Updated in a924c62", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23540#discussion_r431131533", "createdAt": "2020-05-27T13:30:00Z", "author": {"login": "MadhukaHarith92"}, "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/AbstractLogFunction.java", "diffHunk": "@@ -91,4 +91,14 @@ static String getPackagePath() {\n         }\n         return \".\";\n     }\n+\n+    static boolean isLogLevelEnabled(BLogLevel logLevel, String pckg) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2MjQ1MQ=="}, "originalCommit": {"oid": "a290f7bdb57dd395e869b61f43ba9822d9e40206"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTAxMzM5OnYy", "diffSide": "RIGHT", "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/Utils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxOTowMDo0MVrOGcCiMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNDoxNDoyNFrOGcOOKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA1NDgzMg==", "bodyText": "Why is this maintained at class level? There's no need for this right? Each time a log function is called this is updated, but never used. Plus, this class is meant to be stateless isn't it?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23540#discussion_r432054832", "createdAt": "2020-05-28T19:00:41Z", "author": {"login": "pubudu91"}, "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/Utils.java", "diffHunk": "@@ -27,39 +27,76 @@\n  * @since 1.1.0\n  */\n public class Utils extends AbstractLogFunction {\n+    private static boolean logLevelEnabled = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a924c621e865d2da539992fa3c4d34461046558e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI0NjMxNQ==", "bodyText": "Updated in 78c8c82", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23540#discussion_r432246315", "createdAt": "2020-05-29T04:14:24Z", "author": {"login": "MadhukaHarith92"}, "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/Utils.java", "diffHunk": "@@ -27,39 +27,76 @@\n  * @since 1.1.0\n  */\n public class Utils extends AbstractLogFunction {\n+    private static boolean logLevelEnabled = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA1NDgzMg=="}, "originalCommit": {"oid": "a924c621e865d2da539992fa3c4d34461046558e"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3507, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}