{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3ODY1NTA3", "number": 22860, "title": "Add support for fork statement incremental parser", "bodyText": "Add support for fork statement in incremental parser\nfork-stmt := fork { named-worker-decl+ }\nhttps://ballerina.io/spec/lang/2020R1/#fork-stmt\nFixes  #22485\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-23T11:52:32Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22860", "merged": true, "mergeCommit": {"oid": "314d5515d34fb716b0eed0f2eb5fc65065793700"}, "closed": true, "closedAt": "2020-04-27T09:10:04Z", "author": {"login": "m36dot"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaZ9XXAH2gAyNDA3ODY1NTA3OjAzZjRmMGE0YzQwNDc2YWM3OGM0MDMxNTkzYzk1OWRjY2NhNTFmZDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbrmYugFqTQwMDc2NTIyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "03f4f0a4c40476ac78c4031593c959dccca51fd1", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/03f4f0a4c40476ac78c4031593c959dccca51fd1", "committedDate": "2020-04-23T10:02:46Z", "message": "Add fork statement support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e673f3e3ba41f6e385faf9333e9fd71997ca40d5", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e673f3e3ba41f6e385faf9333e9fd71997ca40d5", "committedDate": "2020-04-23T11:45:27Z", "message": "Add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2439bfa427013d9d92e43a23562f21fd4b51c896", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2439bfa427013d9d92e43a23562f21fd4b51c896", "committedDate": "2020-04-23T11:46:50Z", "message": "Add forkstatement json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d71ecb25083e743acef947ae6ae13de4da9b09b0", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d71ecb25083e743acef947ae6ae13de4da9b09b0", "committedDate": "2020-04-23T11:55:04Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into incremental-parser"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNTAwMjAz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22860#pullrequestreview-400500203", "createdAt": "2020-04-26T12:42:48Z", "commit": {"oid": "d71ecb25083e743acef947ae6ae13de4da9b09b0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxMjo0Mjo0OFrOGMEBWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxMjo1MjoxN1rOGMEI6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMwMTk3OA==", "bodyText": "Please remove unnecessary newlines L#668 and L#6670", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22860#discussion_r415301978", "createdAt": "2020-04-26T12:42:48Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -6638,4 +6643,70 @@ private STNode parseLockKeyword() {\n             return sol.recoveredNode;\n         }\n     }\n+\n+    /**\n+     * Parse fork-keyword.\n+     *\n+     * @return Fork-keyword node\n+     */\n+    private STNode parseForkKeyword() {\n+        STToken token = peek();\n+        if (token.kind == SyntaxKind.FORK_KEYWORD) {\n+            return consume();\n+        } else {\n+            Solution sol = recover(token, ParserRuleContext.FORK_KEYWORD);\n+            return sol.recoveredNode;\n+        }\n+    }\n+\n+    /**\n+    * Parse multiple named worker declarations.\n+    *\n+    * @return named-worker-declarations node array\n+    */\n+    private STNode parseMultileNamedWorkerDeclarations() {\n+\n+        STToken token = peek();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d71ecb25083e743acef947ae6ae13de4da9b09b0"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMwMjUxMw==", "bodyText": "Else throw an error. Then we know the parser has come to an invalid state, and easy to debug :)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22860#discussion_r415302513", "createdAt": "2020-04-26T12:45:37Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -2187,6 +2199,17 @@ private ParserRuleContext getNextRuleForCloseBrace(int nextLookahead) {\n                     return ParserRuleContext.STATEMENT;\n                 } else if (parentCtx == ParserRuleContext.NAMED_WORKER_DECL) {\n                     endContext(); // end named-worker\n+                    parentCtx = getParentContext();\n+                    if (parentCtx == ParserRuleContext.FORK_STMT) {\n+                        nextToken = this.tokenReader.peek(nextLookahead);\n+                        switch (nextToken.kind) {\n+                            case AT_TOKEN:\n+                            case WORKER_KEYWORD:\n+                                return ParserRuleContext.NAMED_WORKER_DECL;\n+                            default:\n+                                return ParserRuleContext.CLOSE_BRACE;\n+                        }\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d71ecb25083e743acef947ae6ae13de4da9b09b0"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMwMzQwNQ==", "bodyText": "I feel we should make STATEMENT as the next rule. So that it will proceed even when there are other statements thought its not valid. But the parser will do that validation anyway.\nOtherwise the issue here is, if there is some additional token before the@ or worker keyword, then this will try searching for a close brace, which is kind of wrong.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22860#discussion_r415303405", "createdAt": "2020-04-26T12:49:50Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -2187,6 +2199,17 @@ private ParserRuleContext getNextRuleForCloseBrace(int nextLookahead) {\n                     return ParserRuleContext.STATEMENT;\n                 } else if (parentCtx == ParserRuleContext.NAMED_WORKER_DECL) {\n                     endContext(); // end named-worker\n+                    parentCtx = getParentContext();\n+                    if (parentCtx == ParserRuleContext.FORK_STMT) {\n+                        nextToken = this.tokenReader.peek(nextLookahead);\n+                        switch (nextToken.kind) {\n+                            case AT_TOKEN:\n+                            case WORKER_KEYWORD:\n+                                return ParserRuleContext.NAMED_WORKER_DECL;\n+                            default:\n+                                return ParserRuleContext.CLOSE_BRACE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d71ecb25083e743acef947ae6ae13de4da9b09b0"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMwMzc2Mg==", "bodyText": "add version", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22860#discussion_r415303762", "createdAt": "2020-04-26T12:51:23Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/syntax/statements/ForkStatement.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.ballerinalang.compiler.parser.test.syntax.statements;\n+\n+import org.testng.annotations.Test;\n+\n+/**\n+ * Test parsing Fork Statements.\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d71ecb25083e743acef947ae6ae13de4da9b09b0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMwMzg4OQ==", "bodyText": "Class name should be LockStatementTest", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22860#discussion_r415303889", "createdAt": "2020-04-26T12:52:04Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/syntax/statements/LockStatement.java", "diffHunk": "@@ -20,7 +20,7 @@\n import org.testng.annotations.Test;\n \n /**\n- * Test parsing object type definitions.\n+ * Test parsing Lock statements.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d71ecb25083e743acef947ae6ae13de4da9b09b0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMwMzkxNA==", "bodyText": "Should be ForkStatementTest", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22860#discussion_r415303914", "createdAt": "2020-04-26T12:52:17Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/syntax/statements/ForkStatement.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.ballerinalang.compiler.parser.test.syntax.statements;\n+\n+import org.testng.annotations.Test;\n+\n+/**\n+ * Test parsing Fork Statements.\n+ */\n+public class ForkStatement extends AbstractStatementTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d71ecb25083e743acef947ae6ae13de4da9b09b0"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01ddf7f42d83c11d8d0d597294176b80787ff042", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/01ddf7f42d83c11d8d0d597294176b80787ff042", "committedDate": "2020-04-27T07:54:44Z", "message": "Fix recovery for ForkStatement and some typos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eae2496c643a4ceccd0e76dca59f6f45c421a65d", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eae2496c643a4ceccd0e76dca59f6f45c421a65d", "committedDate": "2020-04-27T08:16:20Z", "message": "Fix merge conflict"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNzY1MjI4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22860#pullrequestreview-400765228", "createdAt": "2020-04-27T09:09:53Z", "commit": {"oid": "eae2496c643a4ceccd0e76dca59f6f45c421a65d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3449, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}