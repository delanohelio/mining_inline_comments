{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwOTUwNjk2", "number": 22527, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjoxNDoxNVrODwRJIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjoxNTowOFrODwRJ2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxOTM5MTA0OnYy", "diffSide": "RIGHT", "path": "stdlib/log-api/src/main/ballerina/src/log/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjoxNDoxNVrOGDK44w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjoxNDoxNVrOGDK44w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk3NzMxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Suppose there is a module named `foo`. We can set the log level of `foo` to `DEBUG` in a configuration file by placing the following entry in it:\n          \n          \n            \n            If there is a module named `foo`, we can set the log level of `foo` to `DEBUG` in a configuration file by placing the following entry in it:\n          \n      \n    \n    \n  \n\nCheck if it is ok to use names like \"foo\".", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22527#discussion_r405977315", "createdAt": "2020-04-09T06:14:15Z", "author": {"login": "praneesha"}, "path": "stdlib/log-api/src/main/ballerina/src/log/Module.md", "diffHunk": "@@ -34,29 +32,7 @@ $ ballerina run program.bal --b7a.log.level=<LOG_LEVEL>\n \n Log levels can be configured for modules either through a configuration file as `<MODULE_NAME>.loglevel=\"<LOG_LEVEL>\"` or through a CLI parameter as `<MODULE_NAME>.loglevel=<LOG_LEVEL>`.\n \n-The following code snippet depicts the usage of all the functions in the log API.\n-```ballerina\n-// Logs the message at ERROR level\n-log:printError(\"error log\");\n-\n-// Logs the message at ERROR level, along with an error record\n-error e = error(\"error occurred\");\n-log:printError(\"error log with cause\", err = e);\n-\n-// Logs the message at WARN level\n-log:printWarn(\"warn log\");\n-\n-// Logs the message at INFO level\n-log:printInfo(\"info log\");\n-\n-// Logs the message at DEBUG level\n-log:printDebug(\"debug log\");\n-\n-// Logs the message at TRACE level\n-log:printTrace(\"trace log\");\n-```\n-\n-Suppose that the above code snippet resides in a module named `foo`. We can set the log level of `foo` to `DEBUG` in a configuration file by placing the following entry in it:\n+Suppose there is a module named `foo`. We can set the log level of `foo` to `DEBUG` in a configuration file by placing the following entry in it:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd9e560bbd0d5e13cd46266c2eb0abe1be3e6709"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxOTM5MjA3OnYy", "diffSide": "RIGHT", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjoxNDo0M1rOGDK5gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjoxNDo0M1rOGDK5gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk3NzQ3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Logs the specified message at ERROR level.\n          \n          \n            \n            # Logs the specified message at the ERROR level.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22527#discussion_r405977475", "createdAt": "2020-04-09T06:14:43Z", "author": {"login": "praneesha"}, "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -17,42 +17,53 @@\n import ballerina/java;\n \n # Logs the specified value at DEBUG level.\n+# ```ballerina\n+# log:printDebug(\"debug log\");\n+# ```\n #\n # + msg - The message to be logged\n-public function printDebug(string | (function() returns (string)) msg) =\n-@java:Method {\n+public function printDebug(string|(function () returns (string)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at ERROR level.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd9e560bbd0d5e13cd46266c2eb0abe1be3e6709"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxOTM5MjMyOnYy", "diffSide": "RIGHT", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjoxNDo1MlrOGDK5qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjoxNDo1MlrOGDK5qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk3NzUxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Logs the specified message at INFO level.\n          \n          \n            \n            # Logs the specified message at the INFO level.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22527#discussion_r405977514", "createdAt": "2020-04-09T06:14:52Z", "author": {"login": "praneesha"}, "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -17,42 +17,53 @@\n import ballerina/java;\n \n # Logs the specified value at DEBUG level.\n+# ```ballerina\n+# log:printDebug(\"debug log\");\n+# ```\n #\n # + msg - The message to be logged\n-public function printDebug(string | (function() returns (string)) msg) =\n-@java:Method {\n+public function printDebug(string|(function () returns (string)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at ERROR level.\n-#\n+# ```ballerina\n+# error e = error(\"error occurred\");\n+# log:printError(\"error log with cause\", err = e);\n+# ```\n+# \n # + msg - The message to be logged\n # + err - The error struct to be logged\n-public function printError(string | (function() returns (string)) msg, public error? err = ()) =\n-@java:Method {\n+public function printError(string|(function () returns (string)) msg, public error? err = ()) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at INFO level.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd9e560bbd0d5e13cd46266c2eb0abe1be3e6709"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxOTM5MjU0OnYy", "diffSide": "RIGHT", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjoxNTowMFrOGDK5zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjoxNTowMFrOGDK5zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk3NzU1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Logs the specified message at TRACE level.\n          \n          \n            \n            # Logs the specified message at the TRACE level.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22527#discussion_r405977550", "createdAt": "2020-04-09T06:15:00Z", "author": {"login": "praneesha"}, "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -17,42 +17,53 @@\n import ballerina/java;\n \n # Logs the specified value at DEBUG level.\n+# ```ballerina\n+# log:printDebug(\"debug log\");\n+# ```\n #\n # + msg - The message to be logged\n-public function printDebug(string | (function() returns (string)) msg) =\n-@java:Method {\n+public function printDebug(string|(function () returns (string)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at ERROR level.\n-#\n+# ```ballerina\n+# error e = error(\"error occurred\");\n+# log:printError(\"error log with cause\", err = e);\n+# ```\n+# \n # + msg - The message to be logged\n # + err - The error struct to be logged\n-public function printError(string | (function() returns (string)) msg, public error? err = ()) =\n-@java:Method {\n+public function printError(string|(function () returns (string)) msg, public error? err = ()) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at INFO level.\n-#\n+# ```ballerina\n+# log:printInfo(\"info log\");\n+# ```\n+# \n # + msg - The message to be logged\n-public function printInfo(string | (function() returns (string)) msg) =\n-@java:Method {\n+public function printInfo(string|(function () returns (string)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at TRACE level.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd9e560bbd0d5e13cd46266c2eb0abe1be3e6709"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxOTM5MjkxOnYy", "diffSide": "RIGHT", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjoxNTowOFrOGDK6Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjoxNTowOFrOGDK6Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk3NzYwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Logs the specified message at WARN level.\n          \n          \n            \n            # Logs the specified message at the WARN level.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22527#discussion_r405977603", "createdAt": "2020-04-09T06:15:08Z", "author": {"login": "praneesha"}, "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -17,42 +17,53 @@\n import ballerina/java;\n \n # Logs the specified value at DEBUG level.\n+# ```ballerina\n+# log:printDebug(\"debug log\");\n+# ```\n #\n # + msg - The message to be logged\n-public function printDebug(string | (function() returns (string)) msg) =\n-@java:Method {\n+public function printDebug(string|(function () returns (string)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at ERROR level.\n-#\n+# ```ballerina\n+# error e = error(\"error occurred\");\n+# log:printError(\"error log with cause\", err = e);\n+# ```\n+# \n # + msg - The message to be logged\n # + err - The error struct to be logged\n-public function printError(string | (function() returns (string)) msg, public error? err = ()) =\n-@java:Method {\n+public function printError(string|(function () returns (string)) msg, public error? err = ()) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at INFO level.\n-#\n+# ```ballerina\n+# log:printInfo(\"info log\");\n+# ```\n+# \n # + msg - The message to be logged\n-public function printInfo(string | (function() returns (string)) msg) =\n-@java:Method {\n+public function printInfo(string|(function () returns (string)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at TRACE level.\n-#\n+# ```ballerina\n+# log:printTrace(\"trace log\");\n+# ```\n+# \n # + msg - The message to be logged\n-public function printTrace(string | (function() returns (string)) msg) =\n-@java:Method {\n+public function printTrace(string|(function () returns (string)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n \n # Logs the specified message at WARN level.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd9e560bbd0d5e13cd46266c2eb0abe1be3e6709"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4056, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}