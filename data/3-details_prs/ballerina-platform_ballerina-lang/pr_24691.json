{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MjkzNTI0", "number": 24691, "title": "Add cookie field in the WebSocket config", "bodyText": "Purpose\nWebsocket hasn't any method to add the cookie into the WebSocket request. So, This pr fixes this issue and add test cases for this.\nFixes #24429\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-07-10T08:08:26Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24691", "merged": true, "mergeCommit": {"oid": "8c0fc1900e073a9899fe99d782fe4b5146428918"}, "closed": true, "closedAt": "2020-07-15T16:31:37Z", "author": {"login": "kalaiyarasiganeshalingam"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcze-FVgH2gAyNDQ3MjkzNTI0OmQyZjg1Mjg4MThiNDBmNzU5YTFkNTg1YjdmNjI4NzFkN2IwZDM1YjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1K1pdgFqTQ0ODk2MzEyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d2f8528818b40f759a1d585b7f62871d7b0d35b0", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d2f8528818b40f759a1d585b7f62871d7b0d35b0", "committedDate": "2020-07-10T08:01:11Z", "message": "Add the cookie field in the config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89175bf7dfe631bc0950a4f907a3b502adb87928", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/89175bf7dfe631bc0950a4f907a3b502adb87928", "committedDate": "2020-07-10T08:04:33Z", "message": "Add the new line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81910335405de54f51c8fc5eea261263d2682f67", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/81910335405de54f51c8fc5eea261263d2682f67", "committedDate": "2020-07-10T08:11:38Z", "message": "change the description"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1b2a621c5f91d526ab50c63edc5072e923948d4", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d1b2a621c5f91d526ab50c63edc5072e923948d4", "committedDate": "2020-07-10T08:47:29Z", "message": "Fix test failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4479dd208ae671deedbec5670878ba5f835a3622", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4479dd208ae671deedbec5670878ba5f835a3622", "committedDate": "2020-07-10T08:54:24Z", "message": "Merge with master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3fc6ae9a9a1c982d6e1212650b94b4e7cff7d89", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c3fc6ae9a9a1c982d6e1212650b94b4e7cff7d89", "committedDate": "2020-07-10T09:11:47Z", "message": "Remove white spaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c2e01e241ec533574f09edd023f1d4d1f0217b3", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6c2e01e241ec533574f09edd023f1d4d1f0217b3", "committedDate": "2020-07-10T10:54:10Z", "message": "Merge https://github.com/ballerina-platform/ballerina-lang"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca1b034c996bbfbe135ad4178aa813a05a5e950b", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ca1b034c996bbfbe135ad4178aa813a05a5e950b", "committedDate": "2020-07-10T11:48:36Z", "message": "Fix server core test failures"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4OTIwODEw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24691#pullrequestreview-448920810", "createdAt": "2020-07-15T12:51:58Z", "commit": {"oid": "ca1b034c996bbfbe135ad4178aa813a05a5e950b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMjo1MTo1OVrOGx8ofA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzowNjowNVrOGx9J7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyNjgxMg==", "bodyText": "can this headers be null?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24691#discussion_r455026812", "createdAt": "2020-07-15T12:51:59Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/websocket/WebSocketUtil.java", "diffHunk": "@@ -502,12 +500,31 @@ public static void populateClientConnectorConfig(MapValue<BString, Object> clien\n                 clientEndpointConfig.getBooleanValue(WebSocketConstants.COMPRESSION_ENABLED_CONFIG));\n     }\n \n-    private static Map<String, String> getCustomHeaders(MapValue<BString, Object> headers) {\n+    private static void populateCustomHeaders(MapValue<BString, Object> clientEndpointConfig,\n+                                              WebSocketClientConnectorConfig clientConnectorConfig) {\n         Map<String, String> customHeaders = new HashMap<>();\n-        headers.entrySet().forEach(\n-                entry -> customHeaders.put(entry.getKey().getValue(), headers.get(entry.getKey()).toString())\n-        );\n-        return customHeaders;\n+        @SuppressWarnings(WebSocketConstants.UNCHECKED)\n+        MapValue<BString, Object> headers = (MapValue<BString, Object>) clientEndpointConfig.getMapValue(\n+                WebSocketConstants.CLIENT_CUSTOM_HEADERS_CONFIG);\n+        if (!headers.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1b034c996bbfbe135ad4178aa813a05a5e950b"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAzNDE3Mw==", "bodyText": "Why do we need to access payload here as we use getCookies() API to access cookies?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24691#discussion_r455034173", "createdAt": "2020-07-15T13:04:11Z", "author": {"login": "chamil321"}, "path": "tests/jballerina-integration-test/src/test/resources/websocket/src/wsservices/37_cookie_client.bal", "diffHunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import ballerina/http;\n+import ballerina/io;\n+import ballerina/log;\n+\n+http:ClientConfiguration clientEPConfig = {\n+    cookieConfig: {\n+        enabled: true\n+    }\n+};\n+\n+@http:WebSocketServiceConfig {\n+}\n+service on new http:Listener(21037) {\n+\n+    resource function onOpen(http:WebSocketCaller wsEp) {\n+        http:Client httpClient = new(\"http://localhost:21036/cookie-demo\", clientEPConfig);\n+\n+        http:Request request = new;\n+\n+        json jsonPart = {\n+            name: \"John\",\n+            password: \"p@ssw0rd\"\n+        };\n+        request.setJsonPayload(jsonPart);\n+\n+        var loginResp = httpClient->post(\"/login\", request);\n+\n+        if (loginResp is http:Response) {\n+            string|error loginMessage = loginResp.getTextPayload();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1b034c996bbfbe135ad4178aa813a05a5e950b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAzNTM3Mg==", "bodyText": "Here also, do we need the payload?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24691#discussion_r455035372", "createdAt": "2020-07-15T13:06:05Z", "author": {"login": "chamil321"}, "path": "tests/jballerina-integration-test/src/test/resources/websocket/src/wsservices/38_incorrect_cookie.bal", "diffHunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import ballerina/http;\n+import ballerina/io;\n+import ballerina/log;\n+\n+http:ClientConfiguration clientConfig = {\n+    cookieConfig: {\n+        enabled: true\n+    }\n+};\n+\n+@http:WebSocketServiceConfig {\n+}\n+service on new http:Listener(21038) {\n+\n+    resource function onOpen(http:WebSocketCaller wsEp) {\n+        http:Client httpClient = new(\"http://localhost:21036/cookie-demo\", clientConfig);\n+\n+        http:Request request = new;\n+\n+        json jsonPart = {\n+            name: \"John\",\n+            password: \"p@ssw0rd\"\n+        };\n+        request.setJsonPayload(jsonPart);\n+\n+        var loginResp = httpClient->post(\"/login\", request);\n+\n+        if (loginResp is http:Response) {\n+            string|error loginMessage = loginResp.getTextPayload();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1b034c996bbfbe135ad4178aa813a05a5e950b"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4OTYzMTIw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24691#pullrequestreview-448963120", "createdAt": "2020-07-15T13:40:03Z", "commit": {"oid": "ca1b034c996bbfbe135ad4178aa813a05a5e950b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0MDowM1rOGx-m3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0MDowM1rOGx-m3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA1OTE2Nw==", "bodyText": "Shall we make the cookies  an array of Cookie rather than having it as a  map<string>", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24691#discussion_r455059167", "createdAt": "2020-07-15T13:40:03Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/ballerina/src/http/websocket/websocket_client.bal", "diffHunk": "@@ -201,7 +223,7 @@ public type WebSocketClientConfiguration record {|\n     int maxFrameSize = 0;\n     boolean webSocketCompressionEnabled = true;\n     int handShakeTimeoutInSeconds = 300;\n-    WebSocketRetryConfig retryConfig?;\n+    map<string> cookies?;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1b034c996bbfbe135ad4178aa813a05a5e950b"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4184, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}