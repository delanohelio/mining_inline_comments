{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNzcxODA2", "number": 22980, "title": "fix an issue where anonymous toplevel nodes were not created for record types.", "bodyText": "Purpose\n\nfix an issue where anonymous top level nodes were not created for record types when they are used as members of union types.\n\nFixes #11183\nApproach\n\nIn the ParserListener, isAnonymous is decided checking if there are more than 1 child available in the finiteType.\n\nSamples\n\ntype FB3 \"A\" | record {| string f; |}; are supported now\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-29T15:05:17Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22980", "merged": true, "mergeCommit": {"oid": "1db655ba072f71b46ce56ca18d9c407eb1975f91"}, "closed": true, "closedAt": "2020-05-13T21:22:43Z", "author": {"login": "dulvinw"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccszRLgFqTQwMzQ5OTY3MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg4wcDgFqTQxMDkxNDY3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzNDk5Njcw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22980#pullrequestreview-403499670", "createdAt": "2020-04-30T13:06:27Z", "commit": {"oid": "f811a3540bdc007e64159a6dea938b07bdc4da65"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMzowNjoyN1rOGOoXAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMzowNzo0MFrOGOoaBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk5NDQ5OA==", "bodyText": "I think we can test the complete logic here when we set isAnonymous itself. This is to prevent setting the isAnonymous  again and again. Good call on creating a function. But it is better to move this logic inside to your function.\nCheck here also.\n\n  \n    \n      ballerina-lang/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java\n    \n    \n         Line 489\n      in\n      b9f51f0\n    \n    \n    \n    \n\n        \n          \n           boolean isAnonymous = !(ctx.parent.parent instanceof BallerinaParser.FiniteTypeUnitContext)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22980#discussion_r417994498", "createdAt": "2020-04-30T13:06:27Z", "author": {"login": "KRVPerera"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java", "diffHunk": "@@ -866,9 +866,30 @@ public void exitInclusiveRecordTypeDescriptor(BallerinaParser.InclusiveRecordTyp\n \n         boolean isAnonymous = !(ctx.parent.parent instanceof BallerinaParser.FiniteTypeUnitContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f811a3540bdc007e64159a6dea938b07bdc4da65"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk5NTI2OQ==", "bodyText": "Do we need to check the ctx type here?\nI feel like we are pretty sure about this from the places we call this function.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22980#discussion_r417995269", "createdAt": "2020-04-30T13:07:40Z", "author": {"login": "KRVPerera"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java", "diffHunk": "@@ -866,9 +866,30 @@ public void exitInclusiveRecordTypeDescriptor(BallerinaParser.InclusiveRecordTyp\n \n         boolean isAnonymous = !(ctx.parent.parent instanceof BallerinaParser.FiniteTypeUnitContext);\n \n+        // Validate type AB \"A\"| record { string f; };\n+        if (!isAnonymous) {\n+            isAnonymous = checkIfAnonymousInTypeDef(ctx);\n+        }\n+\n         this.pkgBuilder.addRecordType(getCurrentPos(ctx), getWS(ctx), isAnonymous, false, false);\n     }\n \n+    /**\n+     * Validate if this is a anonymous record type describe in union with a type descriptor.\n+     *\n+     * @param ctx the current context to be validated. can be InclusiveRecordTypeDescriptor or ExclusiveRecordTypeDes.\n+     * @return true if is part of a union type descriptor with on the fly definition\n+     */\n+    private boolean checkIfAnonymousInTypeDef(ParserRuleContext ctx) {\n+        if (!(ctx instanceof BallerinaParser.InclusiveRecordTypeDescriptorContext ||\n+            ctx instanceof BallerinaParser.ExclusiveRecordTypeDescriptorContext)) {\n+            return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f811a3540bdc007e64159a6dea938b07bdc4da65"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4611afcfe3fec5e83f462df8179947275c164568", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4611afcfe3fec5e83f462df8179947275c164568", "committedDate": "2020-05-05T08:51:36Z", "message": "Fixed an issue where anonumous records were not getting created for type definitions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06b65cd234b23069269ee65222cc24639971f2f5", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/06b65cd234b23069269ee65222cc24639971f2f5", "committedDate": "2020-05-05T08:51:36Z", "message": "Add testcases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc6e47c04095fb4e7944bcf7e3249f33b869424c", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cc6e47c04095fb4e7944bcf7e3249f33b869424c", "committedDate": "2020-05-05T08:51:36Z", "message": "Checkstyle Fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c40364a7733a8e17bb9a18a1ba4265f1b0cb73d", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8c40364a7733a8e17bb9a18a1ba4265f1b0cb73d", "committedDate": "2020-05-05T08:51:36Z", "message": "Review Suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6188bc7d91783f3295f01b79fc89c54586d57d32", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6188bc7d91783f3295f01b79fc89c54586d57d32", "committedDate": "2020-05-04T08:44:15Z", "message": "Review Suggestions"}, "afterCommit": {"oid": "8c40364a7733a8e17bb9a18a1ba4265f1b0cb73d", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8c40364a7733a8e17bb9a18a1ba4265f1b0cb73d", "committedDate": "2020-05-05T08:51:36Z", "message": "Review Suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2ODUwNjcw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22980#pullrequestreview-406850670", "createdAt": "2020-05-06T17:51:09Z", "commit": {"oid": "8c40364a7733a8e17bb9a18a1ba4265f1b0cb73d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwOTE0Njc4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22980#pullrequestreview-410914678", "createdAt": "2020-05-13T13:19:15Z", "commit": {"oid": "8c40364a7733a8e17bb9a18a1ba4265f1b0cb73d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3342, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}