{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MTI5OTIz", "number": 22287, "title": "[1.2.x] Add deprecation support", "bodyText": "Purpose\n$subject\nFixes #21621\nFixes #21907\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-03-28T17:50:21Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287", "merged": true, "mergeCommit": {"oid": "9da0cf77b7fc7b5e8c93018c31be565878517644"}, "closed": true, "closedAt": "2020-04-02T04:25:32Z", "author": {"login": "KavinduZoysa"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSaf59ABqjMxNzU5MzgzOTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcT51XHgFqTM4Njk0MTE0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82ffff5f93c9cfdd301665ba5455384e979f2c53", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/82ffff5f93c9cfdd301665ba5455384e979f2c53", "committedDate": "2020-03-28T17:49:30Z", "message": "Add deprecation support"}, "afterCommit": {"oid": "4625fbaa458d45ab0b1e8d3984acba4da18b694c", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4625fbaa458d45ab0b1e8d3984acba4da18b694c", "committedDate": "2020-03-29T14:08:05Z", "message": "Add deprecation support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNDM5MDI3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#pullrequestreview-383439027", "createdAt": "2020-03-29T18:10:37Z", "commit": {"oid": "4625fbaa458d45ab0b1e8d3984acba4da18b694c"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxODoxMDozN1rOF9T3YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwMzo0NTo0OVrOF9YtsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzMjkyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static MarkDownDocumentationDeprecatedParametersAttributeNode createMarkDeprecatedParametersAttributeNode() {\n          \n          \n            \n                public static MarkDownDocumentationDeprecatedParametersAttributeNode createMarkDownDeprecatedParametersAttributeNode() {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r399832928", "createdAt": "2020-03-29T18:10:37Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/TreeBuilder.java", "diffHunk": "@@ -654,6 +656,10 @@ public static MarkDownDocumentationDeprecationAttributeNode createMarkDownDeprec\n         return new BLangMarkDownDeprecationDocumentation();\n     }\n \n+    public static MarkDownDocumentationDeprecatedParametersAttributeNode createMarkDeprecatedParametersAttributeNode() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4625fbaa458d45ab0b1e8d3984acba4da18b694c"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzMjk3Mw==", "bodyText": "Incorrect version.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r399832973", "createdAt": "2020-03-29T18:11:17Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/expressions/MarkDownDocumentationDeprecatedParametersAttributeNode.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.model.tree.expressions;\n+\n+import org.wso2.ballerinalang.compiler.tree.expressions.BLangMarkdownParameterDocumentation;\n+\n+import java.util.LinkedList;\n+\n+/**\n+ * Represents attributes in deprecated parameters documentation.\n+ *\n+ * @since 1.2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4625fbaa458d45ab0b1e8d3984acba4da18b694c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzNDM3NA==", "bodyText": "Shall we introduce a new one or use an existing NodeKind for this instead of returning null?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r399834374", "createdAt": "2020-03-29T18:23:41Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.tree.expressions;\n+\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.ballerinalang.model.tree.expressions.MarkDownDocumentationDeprecatedParametersAttributeNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+\n+import java.util.LinkedList;\n+\n+/**\n+ * Represents deprecated parameters documentation node.\n+ *\n+ * @since 1.2.0\n+ */\n+public class BLangMarkDownDeprecatedParametersDocumentation extends BLangExpression\n+        implements MarkDownDocumentationDeprecatedParametersAttributeNode {\n+\n+    public String deprecationLine;\n+    public boolean isCorrectDeprecationLine = false;\n+    public LinkedList<BLangMarkdownParameterDocumentation> parameters;\n+\n+    public BLangMarkDownDeprecatedParametersDocumentation() {\n+        parameters = new LinkedList<>();\n+    }\n+\n+    @Override\n+    public void addParameter(BLangMarkdownParameterDocumentation parameter) {\n+        parameters.add(parameter);\n+    }\n+\n+    @Override\n+    public LinkedList<BLangMarkdownParameterDocumentation> getParameters() {\n+        return parameters;\n+    }\n+\n+    @Override\n+    public void addDeprecatedParametersLine(String text) {\n+        deprecationLine = text;\n+        if (deprecationLine.equals(\"# # Deprecated parameters\")) {\n+            isCorrectDeprecationLine = true;\n+        }\n+    }\n+\n+    @Override\n+    public void accept(BLangNodeVisitor visitor) {\n+        visitor.visit(this);\n+    }\n+\n+    @Override\n+    public NodeKind getKind() {\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4625fbaa458d45ab0b1e8d3984acba4da18b694c"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzNDQ3NQ==", "bodyText": "Incorrect version.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r399834475", "createdAt": "2020-03-29T18:24:23Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.tree.expressions;\n+\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.ballerinalang.model.tree.expressions.MarkDownDocumentationDeprecatedParametersAttributeNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+\n+import java.util.LinkedList;\n+\n+/**\n+ * Represents deprecated parameters documentation node.\n+ *\n+ * @since 1.2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4625fbaa458d45ab0b1e8d3984acba4da18b694c"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzNzE5OA==", "bodyText": "Shall we call analyzeNode instead?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    conversionExpr.annAttachments.forEach(annotationAttachment -> annotationAttachment.accept(this));\n          \n          \n            \n                    conversionExpr.annAttachments.forEach(annotationAttachment -> analyzeNode(annotationAttachment, env));", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r399837198", "createdAt": "2020-03-29T18:48:11Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -2211,6 +2255,7 @@ public void visit(BLangTypedescExpr accessExpr) {\n \n     public void visit(BLangTypeConversionExpr conversionExpr) {\n         analyzeExpr(conversionExpr.expr);\n+        conversionExpr.annAttachments.forEach(annotationAttachment -> annotationAttachment.accept(this));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4625fbaa458d45ab0b1e8d3984acba4da18b694c"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjE5OA==", "bodyText": "Can this be null here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r399912198", "createdAt": "2020-03-30T03:44:59Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java", "diffHunk": "@@ -3401,6 +3401,16 @@ public void exitDeprecateAnnotationDescriptionLine(BallerinaParser.DeprecateAnno\n         this.pkgBuilder.endDeprecateAnnotationDocumentationDescription(getWS(ctx), description);\n     }\n \n+    @Override\n+    public void exitDeprecatedParametersDocumentation(BallerinaParser.DeprecatedParametersDocumentationContext ctx) {\n+        if (isInErrorState) {\n+            return;\n+        }\n+        String str = ctx.DeprecatedParametersDocumentation() != null ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4625fbaa458d45ab0b1e8d3984acba4da18b694c"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjM2OA==", "bodyText": "What about the return type?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r399912368", "createdAt": "2020-03-30T03:45:49Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -356,6 +358,9 @@ public void visit(BLangFunction funcNode) {\n         if (isLambda) {\n             return;\n         }\n+\n+        validateParams(funcNode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4625fbaa458d45ab0b1e8d3984acba4da18b694c"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a546a53bf90a9c13c8179b9a12fca58ffffae295", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a546a53bf90a9c13c8179b9a12fca58ffffae295", "committedDate": "2020-03-31T11:00:08Z", "message": "Add tests for return type deprecation"}, "afterCommit": {"oid": "d9199966e2f8d63707ed1ac2a3fbe84ea7ed8d10", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d9199966e2f8d63707ed1ac2a3fbe84ea7ed8d10", "committedDate": "2020-03-31T11:56:24Z", "message": "Identify the deprecation for return type"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9199966e2f8d63707ed1ac2a3fbe84ea7ed8d10", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d9199966e2f8d63707ed1ac2a3fbe84ea7ed8d10", "committedDate": "2020-03-31T11:56:24Z", "message": "Identify the deprecation for return type"}, "afterCommit": {"oid": "91d80a8b98e813523512899300cdb6b9f405bfc7", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/91d80a8b98e813523512899300cdb6b9f405bfc7", "committedDate": "2020-03-31T11:59:23Z", "message": "Identify the deprecation for return type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0OTAxMzY2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#pullrequestreview-384901366", "createdAt": "2020-03-31T16:24:53Z", "commit": {"oid": "4625fbaa458d45ab0b1e8d3984acba4da18b694c"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNjoyNDo1M1rOF-d_wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNjo0Njo0OVrOF-e3rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0NzQ5MA==", "bodyText": "But does exitDeprecatedParametersDocumentation() get invoked then?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401047490", "createdAt": "2020-03-31T16:24:53Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java", "diffHunk": "@@ -3401,6 +3401,16 @@ public void exitDeprecateAnnotationDescriptionLine(BallerinaParser.DeprecateAnno\n         this.pkgBuilder.endDeprecateAnnotationDocumentationDescription(getWS(ctx), description);\n     }\n \n+    @Override\n+    public void exitDeprecatedParametersDocumentation(BallerinaParser.DeprecatedParametersDocumentationContext ctx) {\n+        if (isInErrorState) {\n+            return;\n+        }\n+        String str = ctx.DeprecatedParametersDocumentation() != null ?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMjE5OA=="}, "originalCommit": {"oid": "4625fbaa458d45ab0b1e8d3984acba4da18b694c"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1NDIyMA==", "bodyText": "Do we need to maintain this text? Can't we just maintain isCorrectDeprecationLine?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401054220", "createdAt": "2020-03-31T16:35:06Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.tree.expressions;\n+\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.ballerinalang.model.tree.expressions.MarkDownDocumentationDeprecatedParametersAttributeNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+\n+import java.util.LinkedList;\n+\n+/**\n+ * Represents deprecated parameters documentation node.\n+ *\n+ * @since 1.2.1\n+ */\n+public class BLangMarkDownDeprecatedParametersDocumentation extends BLangExpression\n+        implements MarkDownDocumentationDeprecatedParametersAttributeNode {\n+\n+    public String deprecationLine;\n+    public boolean isCorrectDeprecationLine = false;\n+    public LinkedList<BLangMarkdownParameterDocumentation> parameters;\n+\n+    public BLangMarkDownDeprecatedParametersDocumentation() {\n+        parameters = new LinkedList<>();\n+    }\n+\n+    @Override\n+    public void addParameter(BLangMarkdownParameterDocumentation parameter) {\n+        parameters.add(parameter);\n+    }\n+\n+    @Override\n+    public LinkedList<BLangMarkdownParameterDocumentation> getParameters() {\n+        return parameters;\n+    }\n+\n+    @Override\n+    public void addDeprecatedParametersLine(String text) {\n+        deprecationLine = text;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91d80a8b98e813523512899300cdb6b9f405bfc7"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1NTcyMw==", "bodyText": "Shall we use a plain old foreach instead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401055723", "createdAt": "2020-03-31T16:37:29Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -380,6 +385,14 @@ public void visit(BLangFunction funcNode) {\n         } finally {\n             this.finalizeCurrentWorkerActionSystem();\n         }\n+        funcNode.annAttachments.forEach(annotationAttachment -> analyzeNode(annotationAttachment, env));\n+    }\n+\n+    private void validateParams(BLangFunction funcNode) {\n+        funcNode.requiredParams.forEach(param -> analyzeNode(param, env));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91d80a8b98e813523512899300cdb6b9f405bfc7"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1NjU3Mw==", "bodyText": "Why do we need this change?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401056573", "createdAt": "2020-03-31T16:38:54Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java", "diffHunk": "@@ -207,9 +209,11 @@ public void visit(BLangService serviceNode) {\n     public void visit(BLangTypeDefinition typeDefinition) {\n         BLangType typeNode = typeDefinition.getTypeNode();\n         if (typeDefinition.typeNode.getKind() == NodeKind.OBJECT_TYPE) {\n-            List<? extends SimpleVariableNode> fields = ((BLangObjectTypeNode) typeNode).getFields();\n+            List<BLangSimpleVariable> fields = ((BLangObjectTypeNode) typeNode).fields;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91d80a8b98e813523512899300cdb6b9f405bfc7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1NzQwMA==", "bodyText": "We may have to deprecate this instead.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401057400", "createdAt": "2020-03-31T16:40:11Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -404,14 +404,6 @@ public BSymbol resolveObjectMethod(DiagnosticPos pos, SymbolEnv env, Name fieldN\n         return lookupMemberSymbol(pos, objectSymbol.methodScope, env, fieldName, SymTag.VARIABLE);\n     }\n \n-    public BType resolveTypeNodeWithDeprecationCheck(BLangType typeNode, SymbolEnv env) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91d80a8b98e813523512899300cdb6b9f405bfc7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA2MTgwNQ==", "bodyText": "Can't we just return here if documentation.deprecatedParametersDocumentation != null? Will remove the nesting and the initialization to empty map at L565.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401061805", "createdAt": "2020-03-31T16:46:49Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java", "diffHunk": "@@ -534,4 +518,82 @@ private void validateReturnParameter(DocumentableNode documentableNode, BLangNod\n             returnParameter.setReturnType(((BLangFunction) node).getReturnTypeNode().type);\n         }\n     }\n+\n+    // List that holds fields that are documented at field level.\n+    private List<String> getDocumentedFields(List<? extends SimpleVariableNode> actualParameters) {\n+        List<String> fieldsDocumentedAtFieldLevel = new ArrayList<>();\n+        for (SimpleVariableNode field : actualParameters) {\n+            if (field.getMarkdownDocumentationAttachment() == null) {\n+                continue;\n+            }\n+            fieldsDocumentedAtFieldLevel.add(field.getName().getValue());\n+        }\n+        return fieldsDocumentedAtFieldLevel;\n+    }\n+\n+    private Map<String, BLangMarkdownParameterDocumentation> getDocumentedParameters(\n+            LinkedList<BLangMarkdownParameterDocumentation> deprecatedParameters,\n+            List<String> fieldsDocumentedFields,\n+            DiagnosticCode parameterAlreadyDefined) {\n+        Map<String, BLangMarkdownParameterDocumentation> documentedDeprecatedParameterMap = new HashMap<>();\n+\n+        for (BLangMarkdownParameterDocumentation parameter : deprecatedParameters) {\n+            String parameterName = parameter.getParameterName().getValue();\n+            // Check for parameters which are documented multiple times.\n+            if (documentedDeprecatedParameterMap.containsKey(parameterName) ||\n+                    fieldsDocumentedFields.contains(parameterName)) {\n+                dlog.warning(parameter.pos, parameterAlreadyDefined, parameterName);\n+                continue;\n+            }\n+            documentedDeprecatedParameterMap.put(parameterName, parameter);\n+        }\n+        return documentedDeprecatedParameterMap;\n+    }\n+\n+    private void validateDeprecatedParameters(DocumentableNode documentableNode,\n+                                             List<BLangSimpleVariable> actualParameters,\n+                                             BLangSimpleVariable restParam,\n+                                             DiagnosticCode parameterAlreadyDefined,\n+                                             DiagnosticCode noSuchParameter) {\n+        BLangMarkdownDocumentation documentation = documentableNode.getMarkdownDocumentationAttachment();\n+        if (documentation == null) {\n+            return;\n+        }\n+\n+        List<String> fieldsDocumentedAtFieldLevel = getDocumentedFields(actualParameters);\n+\n+        Map<String, BLangMarkdownParameterDocumentation> documentedDeprecatedParameterMap = new HashMap<>();\n+        if (documentation.deprecatedParametersDocumentation != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91d80a8b98e813523512899300cdb6b9f405bfc7"}, "originalPosition": 154}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MjUwNzM3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#pullrequestreview-385250737", "createdAt": "2020-04-01T04:00:10Z", "commit": {"oid": "4cab47e0ebc990c47ae204c2563e27a49e32e9c0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNDowMDoxMVrOF-wBzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNDowMDoxMVrOF-wBzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM0MjkyNA==", "bodyText": "We have fields in an object, not parameters. I think we should allow documenting like this only for functions.\nFor objects, if someone wants to add deprecated docs for a field, shouldn't the following (documenting at field level) work and be enough?\n# The `Object2` is a user-defined object.\n# \n# + fieldTwo - This is the description of the `Object2`'s `fieldTwo` field.\npublic type Object2 object {\n\n    # This is the description of the `Object2`'s `fieldOne` field.\n    # # Deprecated\n    # deprecated docs\n    @deprecated\n    public string fieldOne = \"Foo\";\n\n    # This is the description of the `Object2`'s `t` field.\n    # # Deprecated\n    # deprecated docs\n    @deprecated\n    TYPE1 t = CONST3;\n\n    public string fieldTwo = \"\";\n\n    public function doThatOnObject(string paramOne, TYPE1 t) {\n        self.fieldOne = paramOne;\n        self.t = t;\n    }\n};\n\nconst string CONST3 = \"CONST3\";\nconst string CONST4 = \"CONST4\";\n\npublic type TYPE1 CONST3|CONST4;\nCurrently says\nerror: .::xyz.bal:6:5: constructs annotated as '@deprecated' must have 'Deprecated' documentation\nerror: .::xyz.bal:12:5: constructs annotated as '@deprecated' must have 'Deprecated' documentation", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401342924", "createdAt": "2020-04-01T04:00:11Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/annotations/deprecation_annotation.bal", "diffHunk": "@@ -53,3 +53,149 @@ public function func3() {\n public function func4() {\n     func3();\n }\n+\n+type Annot record {\n+    string foo;\n+    int bar?;\n+};\n+\n+# Annotation for record 'Annot'\n+#\n+# # Deprecated\n+@deprecated\n+public annotation Annot v1 on type;\n+@deprecated\n+public annotation Annot[] v2 on object type;\n+@deprecated\n+public annotation map<int> v4 on object function, function;\n+\n+string strValue = \"v1 value\";\n+\n+@v1 {\n+    foo: strValue,\n+    bar: 1\n+}\n+public type T1 record {\n+    string name;\n+};\n+\n+T1 a = { name: \"John\" };\n+\n+function testAnnotationDeprecation() {\n+    typedesc<any> t = typeof a;\n+    Annot? annot1 = t.@v1;\n+    Annot[]? annot2 = t.@v2;\n+}\n+\n+@v1 {\n+    foo: strValue\n+}\n+@v2 {\n+    foo: \"v2 value 1\"\n+}\n+@v2 {\n+    foo: \"v2 value 2\"\n+}\n+type T2 object {\n+    string name = \"ballerina\";\n+\n+    @v4 {\n+        val: 42\n+    }\n+    public function objMethod() {\n+    }\n+};\n+\n+@v4 {\n+        val: 42\n+}\n+public function deprecated_annotation_func() {\n+}\n+\n+# Test function doc\n+# + x - first integer\n+# + y - second integer\n+# + z - third integer\n+# + return - Returns the sum\n+# # Deprecated parameters\n+# + x - deprecated parameter\n+# + y - deprecated parameter\n+# + z - deprecated parameter\n+# # Deprecated\n+# function is deprecated\n+@deprecated\n+function add1(@deprecated public int x, @deprecated int y, @deprecated int z) returns int {\n+    return x + y + z;\n+}\n+\n+@deprecated\n+function add2(@deprecated public int x, @deprecated int y, @deprecated int z) returns int {\n+    return x + y + z;\n+}\n+\n+const string CONST3 = \"CONST3\";\n+const string CONST4 = \"CONST4\";\n+\n+public type TYPE1 CONST3|CONST4;\n+\n+@deprecated\n+public type Object1 object {\n+\n+    @deprecated\n+    public string fieldOne = \"Foo\";\n+    @deprecated\n+    TYPE1 t = CONST3;\n+    public string fieldTwo = \"\";\n+\n+    public function doThatOnObject(string paramOne, TYPE1 t) {\n+        self.fieldOne = paramOne;\n+        self.t = t;\n+    }\n+};\n+\n+# The `Object2` is a user-defined object.\n+#\n+# + fieldOne - This is the description of the `Object2`'s `fieldOne` field.\n+# + fieldTwo - This is the description of the `Object2`'s `fieldTwo` field.\n+# # Deprecated parameters", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cab47e0ebc990c47ae204c2563e27a49e32e9c0"}, "originalPosition": 108}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MjUxMzkx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#pullrequestreview-385251391", "createdAt": "2020-04-01T04:02:57Z", "commit": {"oid": "4cab47e0ebc990c47ae204c2563e27a49e32e9c0"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNDowMjo1N1rOF-wEGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNDowODoxMFrOF-wJYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM0MzUxMg==", "bodyText": "Don't we allow deprecated on record fields?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401343512", "createdAt": "2020-04-01T04:02:57Z", "author": {"login": "MaryamZi"}, "path": "langlib/lang.annotations/src/main/ballerina/src/lang.annotations/annotations.bal", "diffHunk": "@@ -41,7 +41,8 @@ annotation ArgsData DefaultableArgs on function;\n #\n # The usage of a deprecated program element is not recommended due to\n # various reasons. Hence, the compiler issues a warning when such an element is used.\n-public const annotation deprecated on source type, source object type, source const, source function, source object function;\n+public const annotation deprecated on source type, source object type, source const, source annotation,\n+                source function, source parameter, source object function, source object field;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cab47e0ebc990c47ae204c2563e27a49e32e9c0"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM0NDUzOA==", "bodyText": "If this method is called, text.equals(\"# # Deprecated parameters\") always evaluates to true right? I think we have to just have a method setCorrectDeprecationLine", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401344538", "createdAt": "2020-04-01T04:06:58Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.tree.expressions;\n+\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.ballerinalang.model.tree.expressions.MarkDownDocumentationDeprecatedParametersAttributeNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+\n+import java.util.LinkedList;\n+\n+/**\n+ * Represents deprecated parameters documentation node.\n+ *\n+ * @since 1.2.1\n+ */\n+public class BLangMarkDownDeprecatedParametersDocumentation extends BLangExpression\n+        implements MarkDownDocumentationDeprecatedParametersAttributeNode {\n+\n+    public boolean isCorrectDeprecationLine = false;\n+    public LinkedList<BLangMarkdownParameterDocumentation> parameters;\n+\n+    public BLangMarkDownDeprecatedParametersDocumentation() {\n+        parameters = new LinkedList<>();\n+    }\n+\n+    @Override\n+    public void addParameter(BLangMarkdownParameterDocumentation parameter) {\n+        parameters.add(parameter);\n+    }\n+\n+    @Override\n+    public LinkedList<BLangMarkdownParameterDocumentation> getParameters() {\n+        return parameters;\n+    }\n+\n+    @Override\n+    public void setCorrectDeprecationLine(String text) {\n+        if (text.equals(\"# # Deprecated parameters\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cab47e0ebc990c47ae204c2563e27a49e32e9c0"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM0NDg2Ng==", "bodyText": "Accordingly we may not need to pass the description at https://github.com/ballerina-platform/ballerina-lang/pull/22287/files#diff-87627a1d9b0a3201b74c0067bc4bdcbbR3410", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401344866", "createdAt": "2020-04-01T04:08:10Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/expressions/BLangMarkDownDeprecatedParametersDocumentation.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.tree.expressions;\n+\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.ballerinalang.model.tree.expressions.MarkDownDocumentationDeprecatedParametersAttributeNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+\n+import java.util.LinkedList;\n+\n+/**\n+ * Represents deprecated parameters documentation node.\n+ *\n+ * @since 1.2.1\n+ */\n+public class BLangMarkDownDeprecatedParametersDocumentation extends BLangExpression\n+        implements MarkDownDocumentationDeprecatedParametersAttributeNode {\n+\n+    public boolean isCorrectDeprecationLine = false;\n+    public LinkedList<BLangMarkdownParameterDocumentation> parameters;\n+\n+    public BLangMarkDownDeprecatedParametersDocumentation() {\n+        parameters = new LinkedList<>();\n+    }\n+\n+    @Override\n+    public void addParameter(BLangMarkdownParameterDocumentation parameter) {\n+        parameters.add(parameter);\n+    }\n+\n+    @Override\n+    public LinkedList<BLangMarkdownParameterDocumentation> getParameters() {\n+        return parameters;\n+    }\n+\n+    @Override\n+    public void setCorrectDeprecationLine(String text) {\n+        if (text.equals(\"# # Deprecated parameters\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM0NDUzOA=="}, "originalCommit": {"oid": "4cab47e0ebc990c47ae204c2563e27a49e32e9c0"}, "originalPosition": 53}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "959bf3bc955c27a87c1e0685a34d263b1d0fba8c", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/959bf3bc955c27a87c1e0685a34d263b1d0fba8c", "committedDate": "2020-04-01T07:13:47Z", "message": "Handle null in deprecation documentation"}, "afterCommit": {"oid": "7cd428c5f8fd75768a13e92113a86f9b56615a70", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7cd428c5f8fd75768a13e92113a86f9b56615a70", "committedDate": "2020-04-01T08:02:21Z", "message": "Handle null in deprecation documentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzUwMzc2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#pullrequestreview-385350376", "createdAt": "2020-04-01T08:04:13Z", "commit": {"oid": "959bf3bc955c27a87c1e0685a34d263b1d0fba8c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODowNjoxNlrOF-1Quw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODowNjoxNlrOF-1Quw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQyODY2Nw==", "bodyText": "This still wouldn't detect scenarios like the following right?\n# Docs for `i`\n# \n# # Deprecated parameters\n# + i - deprecated i\nint i = 1;\nWe need to check all places where documentation is allowed.\nShall we work on a separate PR to fix this?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401428667", "createdAt": "2020-04-01T08:06:16Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java", "diffHunk": "@@ -228,7 +233,13 @@ public void visit(BLangTypeDefinition typeDefinition) {\n                 validateReferences(field);\n             }\n         }\n-        validateDeprecationDocumentation(typeDefinition.markdownDocumentationAttachment,\n+\n+        BLangMarkdownDocumentation documentation = typeDefinition.markdownDocumentationAttachment;\n+        if (documentation != null && documentation.deprecatedParametersDocumentation != null) {\n+            dlog.error(typeDefinition.pos, DiagnosticCode.DEPRECATED_PARAMETERS_DOCUMENTATION_NOT_ALLOWED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cd428c5f8fd75768a13e92113a86f9b56615a70"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzY0MjQ0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#pullrequestreview-385364244", "createdAt": "2020-04-01T08:23:49Z", "commit": {"oid": "7cd428c5f8fd75768a13e92113a86f9b56615a70"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cbabbde0310111a26e8f657d892594937048dd48", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cbabbde0310111a26e8f657d892594937048dd48", "committedDate": "2020-04-01T13:37:01Z", "message": "Validate the deprecation for not supported constructs"}, "afterCommit": {"oid": "1f8a0d416256f005583728b81594bc10fdfb13e3", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1f8a0d416256f005583728b81594bc10fdfb13e3", "committedDate": "2020-04-01T13:45:16Z", "message": "Validate the deprecation for not supported constructs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NjUyNDU1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#pullrequestreview-385652455", "createdAt": "2020-04-01T14:40:36Z", "commit": {"oid": "1f8a0d416256f005583728b81594bc10fdfb13e3"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo0MDozN1rOF_D4qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo0ODo1NFrOF_ERkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2ODI2NA==", "bodyText": "There is a validation below to check if the deprecation annotation is available right? And the annotation specifies on what kind of constructs it can be used.\nSo, IMO we don't need this check. Since it'll fail below anyway.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401668264", "createdAt": "2020-04-01T14:40:37Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java", "diffHunk": "@@ -241,14 +255,24 @@ public void visit(BLangResource resourceNode) {\n \n         validateReturnParameter(resourceNode, null, false);\n         validateReferences(resourceNode);\n+        validateDeprecationDocumentation(resourceNode.markdownDocumentationAttachment, false, resourceNode.pos, false);\n+        validateDeprecatedParametersDocumentation(resourceNode.markdownDocumentationAttachment, resourceNode.pos);\n     }\n \n     private void validateDeprecationDocumentation(BLangMarkdownDocumentation documentation,\n-                                                  boolean isDeprecationAnnotationAvailable, DiagnosticPos pos) {\n+                                                  boolean isDeprecationAnnotationAvailable,\n+                                                  DiagnosticPos pos, boolean isExpected) {\n         if (documentation == null) {\n             return;\n         }\n \n+        BLangMarkDownDeprecationDocumentation deprecationDocumentation =\n+                documentation.getDeprecationDocumentation();\n+        if (!isExpected && deprecationDocumentation != null) {\n+            dlog.error(pos, DiagnosticCode.DEPRECATION_DOCUMENTATION_NOT_ALLOWED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f8a0d416256f005583728b81594bc10fdfb13e3"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2OTU5MQ==", "bodyText": "Why are we passing false for isDeprecationAnnotationAvailable and isExpected?\nA resource is a function (resource function) so the annotation is allowed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401669591", "createdAt": "2020-04-01T14:42:27Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java", "diffHunk": "@@ -241,14 +255,24 @@ public void visit(BLangResource resourceNode) {\n \n         validateReturnParameter(resourceNode, null, false);\n         validateReferences(resourceNode);\n+        validateDeprecationDocumentation(resourceNode.markdownDocumentationAttachment, false, resourceNode.pos, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f8a0d416256f005583728b81594bc10fdfb13e3"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NDY0Mg==", "bodyText": "Can't we use the deprecationDocumentation variable?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r401674642", "createdAt": "2020-04-01T14:48:54Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DocumentationAnalyzer.java", "diffHunk": "@@ -241,14 +255,24 @@ public void visit(BLangResource resourceNode) {\n \n         validateReturnParameter(resourceNode, null, false);\n         validateReferences(resourceNode);\n+        validateDeprecationDocumentation(resourceNode.markdownDocumentationAttachment, false, resourceNode.pos, false);\n+        validateDeprecatedParametersDocumentation(resourceNode.markdownDocumentationAttachment, resourceNode.pos);\n     }\n \n     private void validateDeprecationDocumentation(BLangMarkdownDocumentation documentation,\n-                                                  boolean isDeprecationAnnotationAvailable, DiagnosticPos pos) {\n+                                                  boolean isDeprecationAnnotationAvailable,\n+                                                  DiagnosticPos pos, boolean isExpected) {\n         if (documentation == null) {\n             return;\n         }\n \n+        BLangMarkDownDeprecationDocumentation deprecationDocumentation =\n+                documentation.getDeprecationDocumentation();\n+        if (!isExpected && deprecationDocumentation != null) {\n+            dlog.error(pos, DiagnosticCode.DEPRECATION_DOCUMENTATION_NOT_ALLOWED);\n+            return;\n+        }\n+\n         boolean isDeprecationDocumentationAvailable = false;\n         if (documentation.deprecationDocumentation != null &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f8a0d416256f005583728b81594bc10fdfb13e3"}, "originalPosition": 114}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f8a0d416256f005583728b81594bc10fdfb13e3", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1f8a0d416256f005583728b81594bc10fdfb13e3", "committedDate": "2020-04-01T13:45:16Z", "message": "Validate the deprecation for not supported constructs"}, "afterCommit": {"oid": "f9337256782dbf330254a536ade6c1d632451e78", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f9337256782dbf330254a536ade6c1d632451e78", "committedDate": "2020-04-01T15:57:10Z", "message": "Validate the deprecation for not supported constructs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fdf42e08f1c1ca4a00c954df15aea557edf93a9", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0fdf42e08f1c1ca4a00c954df15aea557edf93a9", "committedDate": "2020-04-01T17:46:05Z", "message": "Add deprecation support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1ad2abccea5941476b022ecdd0ee99c40d7454d", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c1ad2abccea5941476b022ecdd0ee99c40d7454d", "committedDate": "2020-04-01T17:46:05Z", "message": "Fix the suggested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5d2a671eca8ac1e15fc038ce3dad4f4df16b635", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c5d2a671eca8ac1e15fc038ce3dad4f4df16b635", "committedDate": "2020-04-01T17:46:05Z", "message": "Identify the deprecation for return type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "440769cee2e53d01286bef97db276f2384ebc59b", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/440769cee2e53d01286bef97db276f2384ebc59b", "committedDate": "2020-04-01T17:46:05Z", "message": "Fix suggested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db6af4a4e64b7b15fb7c8faf13b1c166794aca2d", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/db6af4a4e64b7b15fb7c8faf13b1c166794aca2d", "committedDate": "2020-04-01T17:46:05Z", "message": "Handle object field deprecation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fbbd67c7ec58a092e8ffb684e459613519be014", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6fbbd67c7ec58a092e8ffb684e459613519be014", "committedDate": "2020-04-01T17:46:05Z", "message": "Add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53bd68ecd641cb2f3c8e1c03e8d87464d55fae98", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/53bd68ecd641cb2f3c8e1c03e8d87464d55fae98", "committedDate": "2020-04-01T17:46:05Z", "message": "Handle null in deprecation documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dbff103b88cc7faff5ea381899b0c3ba9cf6079", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0dbff103b88cc7faff5ea381899b0c3ba9cf6079", "committedDate": "2020-04-01T17:46:05Z", "message": "Validate the deprecation for not supported constructs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9337256782dbf330254a536ade6c1d632451e78", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f9337256782dbf330254a536ade6c1d632451e78", "committedDate": "2020-04-01T15:57:10Z", "message": "Validate the deprecation for not supported constructs"}, "afterCommit": {"oid": "0dbff103b88cc7faff5ea381899b0c3ba9cf6079", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0dbff103b88cc7faff5ea381899b0c3ba9cf6079", "committedDate": "2020-04-01T17:46:05Z", "message": "Validate the deprecation for not supported constructs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1ODQ5Mzg5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#pullrequestreview-385849389", "createdAt": "2020-04-01T18:37:48Z", "commit": {"oid": "0dbff103b88cc7faff5ea381899b0c3ba9cf6079"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2OTQxMTQ0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#pullrequestreview-386941144", "createdAt": "2020-04-03T05:13:31Z", "commit": {"oid": "0dbff103b88cc7faff5ea381899b0c3ba9cf6079"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNToxMzozMVrOGAFWBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNToxMzozMVrOGAFWBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0MDc0MQ==", "bodyText": "@KavinduZoysa we can remove this right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22287#discussion_r402740741", "createdAt": "2020-04-03T05:13:31Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/resources/compiler.properties", "diffHunk": "@@ -1236,5 +1236,11 @@ error.invalid.deprecation.documentation=\\\n error.deprecation.documentation.should.available=\\\n   constructs annotated as ''@deprecated'' must have ''Deprecated'' documentation\n \n+error.deprecated.parameters.documentation.not.allowed=\\\n+  ''Deprecated parameters'' documentation is not allowed here\n+\n+error.deprecation.documentation.not.allowed=\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dbff103b88cc7faff5ea381899b0c3ba9cf6079"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4246, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}