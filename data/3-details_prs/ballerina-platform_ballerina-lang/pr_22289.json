{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1Mjc3ODM5", "number": 22289, "title": "Fix hasfiller value for BFiniteType created for const literals", "bodyText": "Purpose\nBFiniteType were compared using == operator in BSameTypeVisitor. This fails to identify that two BFiniteTypes belong to the same type (eg: int). Due to this reason sample code fails to compile. Failing condition is that a union must have a single basic type for all of its members to have a filler value.\nFixes #21251\nApproach\nBFiniteTypes value space is flattened recursively and passed to BSameTypeVisitor.\nSamples\nconst FOO = 0;\ntype Bar FOO|1;\npublic function main() {\n    Bar[2] x = [];\n}\nList expression now supports this syntax..\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n#22403\n\nconst FOO_ZERO = 0;\ntype FOO_FOUR_THREE  4 | 3;\ntype BarMultiple FOO_ZERO | 1 | FOO_FOUR_THREE;\nfunction createMultipleConstLiteralAutoFilledSealedArray() {\n    BarMultiple a = 1;\n    BarMultiple[5] sealedArray = [a, a];\n    sealedArray[3] = a;\n    //assertEqualPanic(0, sealedArray[2]); \n}\nThe compiler still fails to fill arrays with valid values for complex unions. In above code array index 2 is not filled with any value.\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-03-29T16:17:50Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22289", "merged": true, "mergeCommit": {"oid": "56c946b28cb7617974f4c290970fcd67505ab0ac"}, "closed": true, "closedAt": "2020-04-16T17:16:10Z", "author": {"login": "KRVPerera"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTICiFgFqTM4NTAxNzU1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYFRUBAFqTM5NDI5NTgxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MDE3NTU4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22289#pullrequestreview-385017558", "createdAt": "2020-03-31T18:57:28Z", "commit": {"oid": "31c43acf21d221d5b0a60df10e82b5801493ccac"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODo1NzoyOVrOF-j0CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxOToxMjoyMVrOF-kV5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE0Mjc5Mg==", "bodyText": "Why are we doing these changes? IINM some of them are as per the style guidelines.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22289#discussion_r401142792", "createdAt": "2020-03-31T18:57:29Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -1887,18 +1843,15 @@ public Boolean visit(BServiceType t, BType s) {\n \n         @Override\n         public Boolean visit(BTypedescType t, BType s) {\n-\n             if (s.tag != TypeTags.TYPEDESC) {\n                 return false;\n             }\n             BTypedescType sType = ((BTypedescType) s);\n             return isSameType(sType.constraint, t.constraint, this.unresolvedTypes);\n         }\n \n-\n         @Override\n         public Boolean visit(BFiniteType t, BType s) {\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31c43acf21d221d5b0a60df10e82b5801493ccac"}, "originalPosition": 343}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE0NTg0OQ==", "bodyText": "Type tags mean something else for the compiler right? Shall we use a different name?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22289#discussion_r401145849", "createdAt": "2020-03-31T19:02:34Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -2893,14 +2843,27 @@ private boolean checkFillerValue(BUnionType type) {\n         if (type.isNullable()) {\n             return true;\n         }\n-        Iterator<BType> iterator = type.getMemberTypes().iterator();\n+        Set<BType> typeTags = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31c43acf21d221d5b0a60df10e82b5801493ccac"}, "originalPosition": 376}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE0OTI2Ng==", "bodyText": "The name of the function is not accurate right?\nAlso, this is like a specific scenario so I think this shouldn't be a method in BFiniteType.java. We can maybe introduce a method in the Types.java class itself instead.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22289#discussion_r401149266", "createdAt": "2020-03-31T19:08:36Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BFiniteType.java", "diffHunk": "@@ -115,4 +116,16 @@ public void addValue(BLangExpression value) {\n             nullable = true;\n         }\n     }\n+\n+    public Set<BType> getUniqueValues() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31c43acf21d221d5b0a60df10e82b5801493ccac"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE1MTQ2Mg==", "bodyText": "Can you please share an example where the member in the value space of a finite type is another finite type?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22289#discussion_r401151462", "createdAt": "2020-03-31T19:12:21Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BFiniteType.java", "diffHunk": "@@ -115,4 +116,16 @@ public void addValue(BLangExpression value) {\n             nullable = true;\n         }\n     }\n+\n+    public Set<BType> getUniqueValues() {\n+        Set<BType> uniqueType = new HashSet<>();\n+        for (BLangExpression expression : this.valueSpace) {\n+            if (expression.type.tag != TypeTags.FINITE) {\n+                uniqueType.add(expression.type);\n+            } else {\n+                uniqueType.addAll(((BFiniteType) expression.type).getUniqueValues());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31c43acf21d221d5b0a60df10e82b5801493ccac"}, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "31c43acf21d221d5b0a60df10e82b5801493ccac", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/31c43acf21d221d5b0a60df10e82b5801493ccac", "committedDate": "2020-03-29T16:09:14Z", "message": "Fix list-expr filler value check for Union\n\nConst Types or singleton values were comparison does not check the type\nbut does a `==` check for BFiniteType.\n\nNow filler value check will specially handle Unions with BFiniteType.\nIts Types will be flattened and collected together and check for is same\ntype on the collected list. Default filler value check still process\nBFiniteType without flattening it.\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}, "afterCommit": {"oid": "9360d49bd743b890cd22ec8132cb12474c389dc5", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9360d49bd743b890cd22ec8132cb12474c389dc5", "committedDate": "2020-03-31T22:09:42Z", "message": "Fix code formatting suggestions in code review\n\nRemoved recursive finite flattening as bad logic. Refactor variable\nnames for clarity.\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65d6b563b593ca75ff0ac10667be0b0e071e8488", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/65d6b563b593ca75ff0ac10667be0b0e071e8488", "committedDate": "2020-03-31T22:23:22Z", "message": "Fix code conflicts\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}, "afterCommit": {"oid": "8ca2e8ba069d94e0511bc97bef7a82057638a72d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8ca2e8ba069d94e0511bc97bef7a82057638a72d", "committedDate": "2020-03-31T22:28:36Z", "message": "Fix code conflicts\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ca2e8ba069d94e0511bc97bef7a82057638a72d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8ca2e8ba069d94e0511bc97bef7a82057638a72d", "committedDate": "2020-03-31T22:28:36Z", "message": "Fix code conflicts\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}, "afterCommit": {"oid": "0b912eccfa70fe70490e19528e531ee4496cfbe6", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0b912eccfa70fe70490e19528e531ee4496cfbe6", "committedDate": "2020-03-31T22:31:13Z", "message": "Fix code conflicts\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b912eccfa70fe70490e19528e531ee4496cfbe6", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0b912eccfa70fe70490e19528e531ee4496cfbe6", "committedDate": "2020-03-31T22:31:13Z", "message": "Fix code conflicts\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}, "afterCommit": {"oid": "7d8c6b9b8a27dc232f9f3996ed8307c27ae87208", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7d8c6b9b8a27dc232f9f3996ed8307c27ae87208", "committedDate": "2020-03-31T22:32:43Z", "message": "Fix code formatting suggestions in code review\n\nRemoved recursive finite flattening as bad logic. Refactor variable\nnames for clarity. Revert unwanted code changes.\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f4b9c7ac9d2d224db4fe2216944593d3cb0d9bf", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3f4b9c7ac9d2d224db4fe2216944593d3cb0d9bf", "committedDate": "2020-04-02T10:30:27Z", "message": "Add test cases for union filling\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8d4a6c8202c9906d53e53d27d2981e8d77da2bc", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e8d4a6c8202c9906d53e53d27d2981e8d77da2bc", "committedDate": "2020-04-02T10:30:27Z", "message": "Fix list-expr filler value check for Union\n\nConst Types or singleton values were comparison does not check the type\nbut does a `==` check for BFiniteType.\n\nNow filler value check will specially handle Unions with BFiniteType.\nIts Types will be flattened and collected together and check for is same\ntype on the collected list. Default filler value check still process\nBFiniteType without flattening it.\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8fd0cee4f0f4a2ffa37ea2be14773597c5a7cc2", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d8fd0cee4f0f4a2ffa37ea2be14773597c5a7cc2", "committedDate": "2020-04-02T10:30:27Z", "message": "Fix code formatting suggestions in code review\n\nRemoved recursive finite flattening as bad logic. Refactor variable\nnames for clarity. Revert unwanted code changes.\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93d8caaef728a03fafe25ff808dce87c03ef8116", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/93d8caaef728a03fafe25ff808dce87c03ef8116", "committedDate": "2020-04-02T10:30:27Z", "message": "Add default filler value check for const unions\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "880e7af4ac473ae93b81aa57dfcc4882476b0142", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/880e7af4ac473ae93b81aa57dfcc4882476b0142", "committedDate": "2020-04-02T10:30:27Z", "message": "Fix code style\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0928ea34135e755b6a15bfb17ec1911b97e83d3", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a0928ea34135e755b6a15bfb17ec1911b97e83d3", "committedDate": "2020-04-02T10:30:27Z", "message": "Update compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java\n\nCo-Authored-By: Maryam Ziyad <maryamziyadm@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60789aac7dbc9847a8c14fc2f082b9a153187c6a", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/60789aac7dbc9847a8c14fc2f082b9a153187c6a", "committedDate": "2020-04-02T10:30:27Z", "message": "Add test int literal int - filler value check\n[no ci]\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9002903d01ad1d3c3655a31b9da67d0467190d0", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a9002903d01ad1d3c3655a31b9da67d0467190d0", "committedDate": "2020-04-02T10:30:27Z", "message": "Code refactor hasFillerValue area\n[no ci]\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3935c00a60cf8d02f2be3328ba188faf57d32fd4", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3935c00a60cf8d02f2be3328ba188faf57d32fd4", "committedDate": "2020-04-02T10:30:27Z", "message": "Add int subtype union\n[ci skip]\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed9d97de7b35f83b85b098db7961c55ce8e9421a", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ed9d97de7b35f83b85b098db7961c55ce8e9421a", "committedDate": "2020-04-02T10:30:27Z", "message": "Fix int subtype union filler value check issue\n[ci skip]\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54766e1f9a45f17fd32a7be39fede4c6f6e4987f", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/54766e1f9a45f17fd32a7be39fede4c6f6e4987f", "committedDate": "2020-04-02T10:30:27Z", "message": "Add mistakenly removed test cases\n[ci skip]\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63ca6e27a95701192a37d569969ab15705d7ff4e", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/63ca6e27a95701192a37d569969ab15705d7ff4e", "committedDate": "2020-04-02T10:30:27Z", "message": "Add integer,string,xml subtypes filler value check\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6717a280495752afa6459e355c717906021923e2", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6717a280495752afa6459e355c717906021923e2", "committedDate": "2020-04-02T10:30:27Z", "message": "Remove xml subtypes and byte string\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2737276d251ce378ce2ff09242685b692045ae1", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e2737276d251ce378ce2ff09242685b692045ae1", "committedDate": "2020-04-02T10:30:27Z", "message": "Code style fix\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6909b5eaea12c609747ba9819164a3ee6fa317dc", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6909b5eaea12c609747ba9819164a3ee6fa317dc", "committedDate": "2020-04-02T10:30:40Z", "message": "Merge branch 'fix_hasfiller_value_v3' of github.com:KRVPerera/ballerina-lang into fix_hasfiller_value_v3"}, "afterCommit": {"oid": "e2737276d251ce378ce2ff09242685b692045ae1", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e2737276d251ce378ce2ff09242685b692045ae1", "committedDate": "2020-04-02T10:30:27Z", "message": "Code style fix\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb39e254ae3b399a9536b9f39dfdfb18df240303", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bb39e254ae3b399a9536b9f39dfdfb18df240303", "committedDate": "2020-04-02T11:00:16Z", "message": "Enable createSealedArraysOfIntSubtypes test case\n\nSigned-off-by: KRVPerera <rukshan.viduranga@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6190f385252dbc6dcf85c1086975a3d762e2b483", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6190f385252dbc6dcf85c1086975a3d762e2b483", "committedDate": "2020-04-15T06:31:44Z", "message": "Remove xml subtype commented filler value code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0Mjk1ODEz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22289#pullrequestreview-394295813", "createdAt": "2020-04-16T04:48:42Z", "commit": {"oid": "6190f385252dbc6dcf85c1086975a3d762e2b483"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4249, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}