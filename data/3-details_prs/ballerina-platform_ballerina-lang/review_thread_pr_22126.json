{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyODAzODQ0", "number": 22126, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjo1ODoyOVrODsDZnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNDoxNDoxOVrODsgTiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTE5NjQ1OnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLNonElementItem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjo1ODoyOVrOF8v_Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMToyNjoyNFrOF9Q2tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0NTE1OA==", "bodyText": "This logic only applies to XMLText.java now right? Shall we remove this implementation and implement copy() XMLText.java instead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399245158", "createdAt": "2020-03-27T12:58:29Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLNonElementItem.java", "diffHunk": "@@ -137,7 +138,6 @@ public XMLValue getItem(int index) {\n \n     @Override\n     public Object copy(Map<Object, Object> refs) {\n-        // XMLContentHolderItem is immutable\n         return this;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4ca4ff6b259ececa1595afa42987f7ec362a8bd"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc4MzYwNA==", "bodyText": "+1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399783604", "createdAt": "2020-03-29T11:26:24Z", "author": {"login": "rdhananjaya"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLNonElementItem.java", "diffHunk": "@@ -137,7 +138,6 @@ public XMLValue getItem(int index) {\n \n     @Override\n     public Object copy(Map<Object, Object> refs) {\n-        // XMLContentHolderItem is immutable\n         return this;\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0NTE1OA=="}, "originalCommit": {"oid": "e4ca4ff6b259ececa1595afa42987f7ec362a8bd"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTE5OTMzOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/builtinfunctions/FreezeAndIsFrozenTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjo1OToxMlrOF8wBJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxNToxNDozN1rOF9Si-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0NTYwNA==", "bodyText": "Shall we move these assertions to the bal file instead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399245604", "createdAt": "2020-03-27T12:59:12Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/builtinfunctions/FreezeAndIsFrozenTest.java", "diffHunk": "@@ -436,6 +436,16 @@ public void testFrozenValueUpdatePanicWithCheckTrap() {\n                             \"failed to set element to json: message=modification not allowed on readonly value\");\n     }\n \n+    @Test\n+    public void testXMLItemsCloneReadOnly() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testXMLItemsCloneReadOnly\", new BValue[0]);\n+        Assert.assertTrue(((BBoolean) returns[0]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[1]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[2]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[3]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[4]).booleanValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4ca4ff6b259ececa1595afa42987f7ec362a8bd"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxMTMyMg==", "bodyText": "Moved", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399811322", "createdAt": "2020-03-29T15:14:37Z", "author": {"login": "rdhananjaya"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/builtinfunctions/FreezeAndIsFrozenTest.java", "diffHunk": "@@ -436,6 +436,16 @@ public void testFrozenValueUpdatePanicWithCheckTrap() {\n                             \"failed to set element to json: message=modification not allowed on readonly value\");\n     }\n \n+    @Test\n+    public void testXMLItemsCloneReadOnly() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testXMLItemsCloneReadOnly\", new BValue[0]);\n+        Assert.assertTrue(((BBoolean) returns[0]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[1]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[2]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[3]).booleanValue());\n+        Assert.assertTrue(((BBoolean) returns[4]).booleanValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0NTYwNA=="}, "originalCommit": {"oid": "e4ca4ff6b259ececa1595afa42987f7ec362a8bd"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3OTkyNzc5OnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLSequence.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNDoxMToxNVrOF9ZBdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNTozMjowM1rOF9aI3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzQzMA==", "bodyText": "IIUC, a sequence cannot be updated. So if all the children are read-only that indirectly makes the sequence also read-only?\nIf that is the case, if the following check evaluates to true, can't we set the frozen flag to true here? That way in the read-only scenario, we can avoid going through all the children over and over again?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399917430", "createdAt": "2020-03-30T04:11:15Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLSequence.java", "diffHunk": "@@ -551,6 +551,16 @@ public void freezeDirect() {\n         }\n     }\n \n+    @Override\n+    public synchronized boolean isFrozen() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxOTkwNg==", "bodyText": "Membership of the sequence is unmodifiable but each individual xml item is not.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399919906", "createdAt": "2020-03-30T04:23:31Z", "author": {"login": "rdhananjaya"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLSequence.java", "diffHunk": "@@ -551,6 +551,16 @@ public void freezeDirect() {\n         }\n     }\n \n+    @Override\n+    public synchronized boolean isFrozen() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzQzMA=="}, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyNjkwNw==", "bodyText": "Yeah, but if this evaluates to true once, it will always be true after that right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399926907", "createdAt": "2020-03-30T04:55:43Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLSequence.java", "diffHunk": "@@ -551,6 +551,16 @@ public void freezeDirect() {\n         }\n     }\n \n+    @Override\n+    public synchronized boolean isFrozen() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzQzMA=="}, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkzNTcxMA==", "bodyText": "Ah yes, I miss that on your first comment.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399935710", "createdAt": "2020-03-30T05:32:03Z", "author": {"login": "rdhananjaya"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLSequence.java", "diffHunk": "@@ -551,6 +551,16 @@ public void freezeDirect() {\n         }\n     }\n \n+    @Override\n+    public synchronized boolean isFrozen() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzQzMA=="}, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3OTkyOTM0OnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLText.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNDoxMjoyMlrOF9ZCYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwNDoxMjoxMVrOF-Ep-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzY2Nw==", "bodyText": "Shouldn't we override attemptFreeze(), freezeDirect() and freeze() too?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399917667", "createdAt": "2020-03-30T04:12:22Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLText.java", "diffHunk": "@@ -57,6 +58,21 @@ public String getItemType() {\n         return getNodeType().value();\n     }\n \n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMTIzOA==", "bodyText": "We can re-use the super class methods without any ill efect IMO", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399921238", "createdAt": "2020-03-30T04:29:55Z", "author": {"login": "rdhananjaya"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLText.java", "diffHunk": "@@ -57,6 +58,21 @@ public String getItemType() {\n         return getNodeType().value();\n     }\n \n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzY2Nw=="}, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyNzEzMg==", "bodyText": "Aren't they unnecessary though?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399927132", "createdAt": "2020-03-30T04:56:39Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLText.java", "diffHunk": "@@ -57,6 +58,21 @@ public String getItemType() {\n         return getNodeType().value();\n     }\n \n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzY2Nw=="}, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkzNDMwNA==", "bodyText": "They are sitting high in the hierarchy, providing expected behavior.\nIn my view, overriding them with empty methods are unnecessary.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399934304", "createdAt": "2020-03-30T05:26:37Z", "author": {"login": "rdhananjaya"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLText.java", "diffHunk": "@@ -57,6 +58,21 @@ public String getItemType() {\n         return getNodeType().value();\n     }\n \n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzY2Nw=="}, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk1NjI4Nw==", "bodyText": "freezeDirect() is OK.\nBut for attemptFreeze() if (by the slightest chance) there is an attempt to freeze the same value concurrently there is a chance it'll panic. https://github.com/ballerina-platform/ballerina-lang/blob/master/bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/freeze/FreezeUtils.java#L45 unless we set the frozen flag when creating the value itself.\nThis IMO is unnecessary since it's making it read-only is always possible.\nAnd for freeze() I think we can remove freezeDirect() call.\n    @Override\n    public Object freeze() {\n        // freezeDirect(); we can remove this\n        return this;\n    }", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399956287", "createdAt": "2020-03-30T06:37:06Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLText.java", "diffHunk": "@@ -57,6 +58,21 @@ public String getItemType() {\n         return getNodeType().value();\n     }\n \n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzY2Nw=="}, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAyNzExOQ==", "bodyText": "If I'm not mistaken freeze action could only be initiated from a cloneReadOnly operation, which means there couldn't be any concurrent invocations", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r400027119", "createdAt": "2020-03-30T08:52:28Z", "author": {"login": "rdhananjaya"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLText.java", "diffHunk": "@@ -57,6 +58,21 @@ public String getItemType() {\n         return getNodeType().value();\n     }\n \n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzY2Nw=="}, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYzMjMxNQ==", "bodyText": "I guess it'll work since we seem to be checking isFrozen() on  copy() results before attempting freezing and  .cloneReadOnly() seems to be calling freezeDirect().", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r400632315", "createdAt": "2020-03-31T04:12:11Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/XMLText.java", "diffHunk": "@@ -57,6 +58,21 @@ public String getItemType() {\n         return getNodeType().value();\n     }\n \n+    @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzY2Nw=="}, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3OTkzMDk4OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/builtinoperations/freeze-and-isfrozen.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNDoxMzozM1rOF9ZDVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNDozMDoxN1rOF9ZQnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzkwOQ==", "bodyText": "Can we add some false tests too?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399917909", "createdAt": "2020-03-30T04:13:33Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/builtinoperations/freeze-and-isfrozen.bal", "diffHunk": "@@ -251,6 +251,20 @@ function testFrozenXmlSetChildrenDeep() {\n     authorEm.setChildren(x2);\n }\n \n+function testXMLItemsCloneReadOnly() {\n+    xml x0 = xmllib:concat(xml `<hello>world</hello>`,\n+                        xml `<!-- comment text -->`,\n+                        xml `<?PIT data?>`,\n+                        xml `<item><child>String Content <sub></sub>More Str</child><child></child></item>`);\n+\n+    xml x1 = x0.cloneReadOnly();\n+    assertTrue((x1.<hello>).isReadOnly());\n+    assertTrue((x1.<hello>/*).isReadOnly());\n+    assertTrue(x1[1].isReadOnly());\n+    assertTrue(x1[2].isReadOnly());\n+    assertTrue((x1/**/<child>/*)[0].isReadOnly());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMTMwOA==", "bodyText": "Will do", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399921308", "createdAt": "2020-03-30T04:30:17Z", "author": {"login": "rdhananjaya"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/builtinoperations/freeze-and-isfrozen.bal", "diffHunk": "@@ -251,6 +251,20 @@ function testFrozenXmlSetChildrenDeep() {\n     authorEm.setChildren(x2);\n }\n \n+function testXMLItemsCloneReadOnly() {\n+    xml x0 = xmllib:concat(xml `<hello>world</hello>`,\n+                        xml `<!-- comment text -->`,\n+                        xml `<?PIT data?>`,\n+                        xml `<item><child>String Content <sub></sub>More Str</child><child></child></item>`);\n+\n+    xml x1 = x0.cloneReadOnly();\n+    assertTrue((x1.<hello>).isReadOnly());\n+    assertTrue((x1.<hello>/*).isReadOnly());\n+    assertTrue(x1[1].isReadOnly());\n+    assertTrue(x1[2].isReadOnly());\n+    assertTrue((x1/**/<child>/*)[0].isReadOnly());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxNzkwOQ=="}, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3OTkzMjI1OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/builtinoperations/freeze-and-isfrozen.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNDoxNDoxOVrOF9ZD9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNDozMToyMVrOF9ZRXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxODA3MA==", "bodyText": "Shall we use a reason without spaces?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    error e = error(\"Not True\", message = \"expected: true, found: \" + value.toString());\n          \n          \n            \n                    panic e;\n          \n          \n            \n                    error e = panic error(\"AssertionError\", message = \"expected: true, found: \" + value.toString());", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399918070", "createdAt": "2020-03-30T04:14:19Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/builtinoperations/freeze-and-isfrozen.bal", "diffHunk": "@@ -489,3 +503,10 @@ type FreezeAllowedDepartment record {|\n     string head;\n     (int)...;\n |};\n+\n+function assertTrue(boolean value) {\n+    if !(value) {\n+        error e = error(\"Not True\", message = \"expected: true, found: \" + value.toString());\n+        panic e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkyMTUwMQ==", "bodyText": "+1, I blindly copied it from some other code will change", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22126#discussion_r399921501", "createdAt": "2020-03-30T04:31:21Z", "author": {"login": "rdhananjaya"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/builtinoperations/freeze-and-isfrozen.bal", "diffHunk": "@@ -489,3 +503,10 @@ type FreezeAllowedDepartment record {|\n     string head;\n     (int)...;\n |};\n+\n+function assertTrue(boolean value) {\n+    if !(value) {\n+        error e = error(\"Not True\", message = \"expected: true, found: \" + value.toString());\n+        panic e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxODA3MA=="}, "originalCommit": {"oid": "24f7ef1eb310acf7ace27ed071e24ecf79a7be31"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 671, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}