{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NzE2NzU5", "number": 26274, "title": "Refactor http filter desugar and Add function to get annotation keys", "bodyText": "Purpose\n\nRemove custom path param annotation and refactor\nAdd function to retrieve annotation keys from annotatable types\n\nRelated issue\n\nhttps://github.com/ballerina-platform/module-ballerina-http/issues/64\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-10-08T07:21:12Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26274", "merged": true, "mergeCommit": {"oid": "fa357beb1b07cc062b4c623025f0815aee275653"}, "closed": true, "closedAt": "2020-10-13T03:27:23Z", "author": {"login": "chamil321"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQcQuZAH2gAyNDk5NzE2NzU5OmIyZDZmMzI5OWNiMjIyMjY1YzU2Y2M1NDc3NmVmMDU3NzEwMTBiNDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdR_-dDgFqTUwNzA0MzYwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b2d6f3299cb222265c56cc54776ef05771010b47", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b2d6f3299cb222265c56cc54776ef05771010b47", "committedDate": "2020-10-08T07:15:38Z", "message": "Remove custom path param annotation and refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d7129fdc3d4d804fa9d522ed7713c22c0ddc5d5", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0d7129fdc3d4d804fa9d522ed7713c22c0ddc5d5", "committedDate": "2020-10-08T07:17:13Z", "message": "Add function to get annotation keys"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e69bb3d6524249456a62fdfbecf048da0cacb434", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e69bb3d6524249456a62fdfbecf048da0cacb434", "committedDate": "2020-10-12T05:03:05Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into v2.0.0-Preview4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84962484828e7ee6c9f181dd2184995b331967ae", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/84962484828e7ee6c9f181dd2184995b331967ae", "committedDate": "2020-10-12T06:51:58Z", "message": "Fix checkstyle failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MzgyNTQ3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26274#pullrequestreview-506382547", "createdAt": "2020-10-12T08:03:50Z", "commit": {"oid": "84962484828e7ee6c9f181dd2184995b331967ae"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMzo1MVrOHfzXfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODoxNDoxN1rOHfzuZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwOTUwMQ==", "bodyText": "Don't we need this anymore?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26274#discussion_r503109501", "createdAt": "2020-10-12T08:03:51Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/ServiceDesugar.java", "diffHunk": "@@ -197,7 +197,8 @@ void engageCustomServiceDesugar(BLangService service, SymbolEnv env) {\n     }\n \n     private void engageCustomResourceDesugar(BLangFunction functionNode, SymbolEnv env) {\n-        httpFiltersDesugar.addHttpFilterStatementsToResource(functionNode, env);\n-        httpFiltersDesugar.addCustomAnnotationToResource(functionNode, env);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84962484828e7ee6c9f181dd2184995b331967ae"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExMDE1Nw==", "bodyText": "The \"if it is http\" part is no longer relevant, right? Since we do the check before calling this method now?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param resourceNode The resource to apply filter on if it is http\n          \n          \n            \n                 * @param resourceNode The resource to apply filters on", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26274#discussion_r503110157", "createdAt": "2020-10-12T08:05:02Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/HttpFiltersDesugar.java", "diffHunk": "@@ -175,7 +146,13 @@ private boolean isHttpResource(BLangFunction resourceNode) {\n                 CALLER_TYPE_NAME.equals(tsymbol.name.value);\n     }\n \n-    private void addFilterStatements(BLangFunction resourceNode, SymbolEnv env) {\n+    /**\n+     * Apply filter statements.\n+     *\n+     * @param resourceNode The resource to apply filter on if it is http", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84962484828e7ee6c9f181dd2184995b331967ae"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExMTM0NQ==", "bodyText": "Shouldn't the docs for resourceNode be updated? Filters are not relevant for this check, right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26274#discussion_r503111345", "createdAt": "2020-10-12T08:07:14Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/HttpFiltersDesugar.java", "diffHunk": "@@ -155,18 +132,12 @@ private HttpFiltersDesugar(CompilerContext context) {\n     }\n \n     /**\n-     * Check if the resource is an http resource and apply filter.\n+     * Check if the resource is an http resource.\n      *\n      * @param resourceNode The resource to apply filter on if it is http\n-     * @param env          the symbol environment\n+     * @return true if the resource is an http resource\n      */\n-    void addHttpFilterStatementsToResource(BLangFunction resourceNode, SymbolEnv env) {\n-        if (isHttpResource(resourceNode)) {\n-            addFilterStatements(resourceNode, env);\n-        }\n-    }\n-\n-    private boolean isHttpResource(BLangFunction resourceNode) {\n+    static boolean isHttpResource(BLangFunction resourceNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84962484828e7ee6c9f181dd2184995b331967ae"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExNTM2NQ==", "bodyText": "Wondering if we should have a public method in AnnotatableType that returns all the annotations, and move this logic to wherever this specific set of keys is needed.\n@Kishanthan, thoughts please?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26274#discussion_r503115365", "createdAt": "2020-10-12T08:14:17Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BFunctionType.java", "diffHunk": "@@ -135,4 +138,14 @@ public String getAnnotationKey() {\n     public boolean isReadOnly() {\n         return true;\n     }\n+\n+    public List<BString> getParamAnnotationKeys() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84962484828e7ee6c9f181dd2184995b331967ae"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "faa2c13a121f5a3d0f086f349fa9140e52a5f1de", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/faa2c13a121f5a3d0f086f349fa9140e52a5f1de", "committedDate": "2020-10-12T10:10:04Z", "message": "Refactor code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b23fbf942ba32ca2c60b7156fbd394afec5b464", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3b23fbf942ba32ca2c60b7156fbd394afec5b464", "committedDate": "2020-10-12T19:07:19Z", "message": "Add function to annotatable type class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MDQzNjA1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26274#pullrequestreview-507043605", "createdAt": "2020-10-13T03:26:11Z", "commit": {"oid": "3b23fbf942ba32ca2c60b7156fbd394afec5b464"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4541, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}