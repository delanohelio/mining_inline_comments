{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNjQ5NzU5", "number": 21306, "title": "[IntelliJ Plugin] Improve handling ballerina source files inside non-ballerina projects", "bodyText": "Purpose\nFixes #20718.\nRemarks\n\nRelated PR - #21273\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-02-27T05:45:58Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21306", "merged": true, "mergeCommit": {"oid": "db806f0a3c6b76354da9a0bc3c669a8261404957"}, "closed": true, "closedAt": "2020-03-04T03:25:54Z", "author": {"login": "NipunaRanasinghe"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIUrYtAH2gAyMzgwNjQ5NzU5OjA1YzI1ZmE5OWE4NDE2NzdlNWE0NGY3NTg1Y2QxMzc2ZGY5YWMwMTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKM4DwgH2gAyMzgwNjQ5NzU5OmJlMDYwYjUxZWY4OGM2OGMxMzNmOGIyNTI2NTZmYTY0NzdmOTE0Njc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "05c25fa99a841677e5a44f7585cd1376df9ac018", "author": {"user": {"login": "NipunaRanasinghe", "name": "Nipuna Ransinghe "}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/05c25fa99a841677e5a44f7585cd1376df9ac018", "committedDate": "2020-02-27T05:42:58Z", "message": "Improve handling ballerina source files inside non-ballerina projects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbd82f8a45b029070d6cfd03ccbb2f32a5acc3b7", "author": {"user": {"login": "NipunaRanasinghe", "name": "Nipuna Ransinghe "}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bbd82f8a45b029070d6cfd03ccbb2f32a5acc3b7", "committedDate": "2020-02-27T05:43:01Z", "message": "Add minor fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e22e5e829cb648174476e70c60ac86ac5d68be7b", "author": {"user": {"login": "NipunaRanasinghe", "name": "Nipuna Ransinghe "}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e22e5e829cb648174476e70c60ac86ac5d68be7b", "committedDate": "2020-02-27T05:43:08Z", "message": "Fix licence headers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba6ba480e358eebaa75f8881f228ab4a086ab238", "author": {"user": {"login": "NipunaRanasinghe", "name": "Nipuna Ransinghe "}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ba6ba480e358eebaa75f8881f228ab4a086ab238", "committedDate": "2020-02-27T05:43:13Z", "message": "Add review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NTU2NjAz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21306#pullrequestreview-365556603", "createdAt": "2020-02-27T10:10:32Z", "commit": {"oid": "ba6ba480e358eebaa75f8881f228ab4a086ab238"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDoxMDozM1rOFvMTBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDoxMTowN1rOFvMURw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAyODg3MQ==", "bodyText": "Shall we document these methods since it a public API?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21306#discussion_r385028871", "createdAt": "2020-02-27T10:10:33Z", "author": {"login": "rasika"}, "path": "tool-plugins/intellij/src/main/java/io/ballerina/plugins/idea/preloading/BallerinaEditorFactoryListener.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package io.ballerina.plugins.idea.preloading;\n+\n+import com.intellij.openapi.editor.event.EditorFactoryEvent;\n+import com.intellij.openapi.editor.event.EditorFactoryListener;\n+import com.intellij.openapi.fileEditor.FileDocumentManager;\n+import com.intellij.openapi.project.Project;\n+import com.intellij.openapi.vfs.VirtualFile;\n+import com.intellij.testFramework.LightVirtualFileBase;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import static io.ballerina.plugins.idea.BallerinaConstants.BAL_FILE_EXT;\n+import static io.ballerina.plugins.idea.preloading.LSPUtils.registerServerDefinition;\n+\n+/**\n+ * Editor listener implementation which is used to handle ballerina source files inside non-ballerina projects.\n+ *\n+ * @since 1.1.4\n+ */\n+public class BallerinaEditorFactoryListener implements EditorFactoryListener {\n+\n+    private Project project;\n+    private boolean balSourcesFound = false;\n+\n+    public BallerinaEditorFactoryListener(Project project) {\n+        this.project = project;\n+    }\n+\n+    @Override\n+    public void editorCreated(@NotNull EditorFactoryEvent event) {\n+        Project project = event.getEditor().getProject();\n+        if (project == null) {\n+            return;\n+        }\n+        VirtualFile file = FileDocumentManager.getInstance().getFile(event.getEditor().getDocument());\n+        if (!balSourcesFound && project.equals(this.project) && isBalFile(file)) {\n+            registerServerDefinition(project);\n+            balSourcesFound = true;\n+        }\n+    }\n+\n+    public static boolean isBalFile(@Nullable VirtualFile file) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba6ba480e358eebaa75f8881f228ab4a086ab238"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAyOTE5MQ==", "bodyText": "Is this version correct?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21306#discussion_r385029191", "createdAt": "2020-02-27T10:11:07Z", "author": {"login": "rasika"}, "path": "tool-plugins/intellij/src/main/java/io/ballerina/plugins/idea/preloading/LSPUtils.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package io.ballerina.plugins.idea.preloading;\n+\n+import com.google.common.base.Strings;\n+import com.intellij.openapi.application.ApplicationManager;\n+import com.intellij.openapi.project.Project;\n+import com.intellij.openapi.project.ProjectManager;\n+import com.intellij.openapi.ui.MessageType;\n+import io.ballerina.plugins.idea.extensions.BallerinaLSPExtensionManager;\n+import io.ballerina.plugins.idea.notifiers.BallerinaAutoDetectNotifier;\n+import io.ballerina.plugins.idea.sdk.BallerinaSdk;\n+import io.ballerina.plugins.idea.sdk.BallerinaSdkUtils;\n+import io.ballerina.plugins.idea.settings.autodetect.BallerinaAutoDetectionSettings;\n+import io.ballerina.plugins.idea.settings.langserverlogs.LangServerLogsSettings;\n+import org.jetbrains.annotations.NotNull;\n+import org.wso2.lsp4intellij.IntellijLanguageClient;\n+import org.wso2.lsp4intellij.client.languageserver.serverdefinition.ProcessBuilderServerDefinition;\n+\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static io.ballerina.plugins.idea.BallerinaConstants.BAL_FILE_EXT;\n+import static io.ballerina.plugins.idea.BallerinaConstants.LAUNCHER_SCRIPT_PATH;\n+import static io.ballerina.plugins.idea.BallerinaConstants.SYS_PROP_EXPERIMENTAL;\n+import static io.ballerina.plugins.idea.BallerinaConstants.SYS_PROP_LS_DEBUG;\n+import static io.ballerina.plugins.idea.BallerinaConstants.SYS_PROP_LS_TRACE;\n+\n+/**\n+ * Language server protocol related utils.\n+ *\n+ * @since 1.1.4", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba6ba480e358eebaa75f8881f228ab4a086ab238"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be060b51ef88c68c133f8b252656fa6477f91467", "author": {"user": {"login": "NipunaRanasinghe", "name": "Nipuna Ransinghe "}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/be060b51ef88c68c133f8b252656fa6477f91467", "committedDate": "2020-03-04T01:45:25Z", "message": "Add minor change"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4037, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}