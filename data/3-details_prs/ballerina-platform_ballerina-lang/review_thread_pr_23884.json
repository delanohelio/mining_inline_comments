{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMzgxMDk4", "number": 23884, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QwNTozOToyMFrOEFO89A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo1ODo1NFrOEFscWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTIzMzE2OnYy", "diffSide": "RIGHT", "path": "language-server/modules/langserver-core/src/test/java/org/ballerinalang/langserver/completion/definitions/TestablePackageCompletionTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QwNTozOToyMFrOGjV3zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjoxMzo1N1rOGjviSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcxMTY5Mg==", "bodyText": "Have we created an issue to track enabling these disabled langserver tests?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439711692", "createdAt": "2020-06-13T05:39:20Z", "author": {"login": "MaryamZi"}, "path": "language-server/modules/langserver-core/src/test/java/org/ballerinalang/langserver/completion/definitions/TestablePackageCompletionTest.java", "diffHunk": "@@ -35,7 +35,7 @@\n         log.info(\"Test textDocument/completion for Function Definition Scope\");\n         return new Object[][] {\n //                {\"topLevelCompletion.json\", \"testablepackage\"},\n-                {\"blockStatementCompletion.json\", \"testablepackage\"},\n+//                {\"blockStatementCompletion.json\", \"testablepackage\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAxMTcwNA==", "bodyText": "No, I will create", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440011704", "createdAt": "2020-06-15T08:28:50Z", "author": {"login": "chiranSachintha"}, "path": "language-server/modules/langserver-core/src/test/java/org/ballerinalang/langserver/completion/definitions/TestablePackageCompletionTest.java", "diffHunk": "@@ -35,7 +35,7 @@\n         log.info(\"Test textDocument/completion for Function Definition Scope\");\n         return new Object[][] {\n //                {\"topLevelCompletion.json\", \"testablepackage\"},\n-                {\"blockStatementCompletion.json\", \"testablepackage\"},\n+//                {\"blockStatementCompletion.json\", \"testablepackage\"},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcxMTY5Mg=="}, "originalCommit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEzMjE3MQ==", "bodyText": "#24153", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440132171", "createdAt": "2020-06-15T12:13:57Z", "author": {"login": "chiranSachintha"}, "path": "language-server/modules/langserver-core/src/test/java/org/ballerinalang/langserver/completion/definitions/TestablePackageCompletionTest.java", "diffHunk": "@@ -35,7 +35,7 @@\n         log.info(\"Test textDocument/completion for Function Definition Scope\");\n         return new Object[][] {\n //                {\"topLevelCompletion.json\", \"testablepackage\"},\n-                {\"blockStatementCompletion.json\", \"testablepackage\"},\n+//                {\"blockStatementCompletion.json\", \"testablepackage\"},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcxMTY5Mg=="}, "originalCommit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDMxMzYzOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNzozNDo1OVrOGjeaVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQyMTowNzozMlrOGjfY4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1MTYwNA==", "bodyText": "Shall we add a comment explaining why we need to check for null?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439851604", "createdAt": "2020-06-14T17:34:59Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -528,6 +530,25 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+        SymbolEnv prevEnv = this.env;\n+        this.env = env;\n+        for (Name alias : predeclaredModules.keySet()) {\n+            ScopeEntry entry = this.env.scope.lookup(alias);\n+            if (predeclaredModules.get(alias) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2NzYxNg==", "bodyText": "With the changes this logic removed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439867616", "createdAt": "2020-06-14T21:07:32Z", "author": {"login": "chiranSachintha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -528,6 +530,25 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+        SymbolEnv prevEnv = this.env;\n+        this.env = env;\n+        for (Name alias : predeclaredModules.keySet()) {\n+            ScopeEntry entry = this.env.scope.lookup(alias);\n+            if (predeclaredModules.get(alias) != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1MTYwNA=="}, "originalCommit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDMxNDMxOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxNzozNTo1NlrOGjearA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQyMToxMDo1OVrOGjfZ4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1MTY5Mg==", "bodyText": "We can extract predeclaredModules.get(alias) out to a variable right? We seem to be using it again.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439851692", "createdAt": "2020-06-14T17:35:56Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -528,6 +530,25 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+        SymbolEnv prevEnv = this.env;\n+        this.env = env;\n+        for (Name alias : predeclaredModules.keySet()) {\n+            ScopeEntry entry = this.env.scope.lookup(alias);\n+            if (predeclaredModules.get(alias) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2Nzg3NQ==", "bodyText": "With the changes this logic removed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439867875", "createdAt": "2020-06-14T21:10:59Z", "author": {"login": "chiranSachintha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -528,6 +530,25 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+        SymbolEnv prevEnv = this.env;\n+        this.env = env;\n+        for (Name alias : predeclaredModules.keySet()) {\n+            ScopeEntry entry = this.env.scope.lookup(alias);\n+            if (predeclaredModules.get(alias) != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1MTY5Mg=="}, "originalCommit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDM0Mjc2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxODoyMzowNVrOGjepdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMTo1MDoyMFrOGjuyeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1NTQ3OQ==", "bodyText": "A minor thing. Was wondering whether we should make this an immutable map.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439855479", "createdAt": "2020-06-14T18:23:05Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolTable.java", "diffHunk": "@@ -185,6 +185,7 @@\n \n     private Names names;\n     public Map<BPackageSymbol, SymbolEnv> pkgEnvMap = new HashMap<>();\n+    public Map<Name, BPackageSymbol> predeclaredModules = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDExOTkyOQ==", "bodyText": "Changed to immutable map.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440119929", "createdAt": "2020-06-15T11:50:20Z", "author": {"login": "chiranSachintha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolTable.java", "diffHunk": "@@ -185,6 +185,7 @@\n \n     private Names names;\n     public Map<BPackageSymbol, SymbolEnv> pkgEnvMap = new HashMap<>();\n+    public Map<Name, BPackageSymbol> predeclaredModules = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1NTQ3OQ=="}, "originalCommit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDM3NTE3OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/imports/predeclared-imports/src/bar/predeclared-error.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxOToyMDozMVrOGje6Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQyMTowMjoyMlrOGjfXWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1OTczNQ==", "bodyText": "Let's add the licence header to all the newly added files.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439859735", "createdAt": "2020-06-14T19:20:31Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/imports/predeclared-imports/src/bar/predeclared-error.bal", "diffHunk": "@@ -0,0 +1,4 @@\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "565a373ea6df666d2a8a47b4e511f447dafa994e"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2NzIyNA==", "bodyText": "Done", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439867224", "createdAt": "2020-06-14T21:02:22Z", "author": {"login": "chiranSachintha"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/imports/predeclared-imports/src/bar/predeclared-error.bal", "diffHunk": "@@ -0,0 +1,4 @@\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1OTczNQ=="}, "originalCommit": {"oid": "565a373ea6df666d2a8a47b4e511f447dafa994e"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDM5NDA5OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxOTo1MzoyMlrOGjfD4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQyMTowMDozNFrOGjfWsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2MjI0Mg==", "bodyText": "This null check is not necessary right? We are iterating through the key set of the predeclared modules map. Therefore, there's no reason for the map to not contain the key it just retrieved", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439862242", "createdAt": "2020-06-14T19:53:22Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -533,6 +535,25 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+        SymbolEnv prevEnv = this.env;\n+        this.env = env;\n+        for (Name alias : predeclaredModules.keySet()) {\n+            ScopeEntry entry = this.env.scope.lookup(alias);\n+            if (predeclaredModules.get(alias) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "565a373ea6df666d2a8a47b4e511f447dafa994e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2NzA1OQ==", "bodyText": "Fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439867059", "createdAt": "2020-06-14T21:00:34Z", "author": {"login": "chiranSachintha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -533,6 +535,25 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+        SymbolEnv prevEnv = this.env;\n+        this.env = env;\n+        for (Name alias : predeclaredModules.keySet()) {\n+            ScopeEntry entry = this.env.scope.lookup(alias);\n+            if (predeclaredModules.get(alias) != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2MjI0Mg=="}, "originalCommit": {"oid": "565a373ea6df666d2a8a47b4e511f447dafa994e"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDQxNzc2OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/imports/ImportsNegativeTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQyMDozNjo0NFrOGjfQRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODoxNjoxMlrOGjnvFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2NTQxMw==", "bodyText": "If we do\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(result.getErrorCount(), 5);\n          \n          \n            \n                    validateError(result, 0, \"undefined function 'max'\", 3, 12);\n          \n          \n            \n                    validateError(result, 1, \"undefined function 'min'\", 7, 12);\n          \n          \n            \n                    validateError(result, 2, \"undefined function 'concat'\", 8, 12);\n          \n          \n            \n                    validateError(result, 3, \"unknown type 'Listener'\", 12, 6);\n          \n          \n            \n                    validateError(result, 4, \"unknown type 'CallStackElement'\", 35, 30);\n          \n          \n            \n                    int index = 0;\n          \n          \n            \n                    validateError(result, index++, \"undefined function 'max'\", 3, 12);\n          \n          \n            \n                    validateError(result, index++, \"undefined function 'min'\", 7, 12);\n          \n          \n            \n                    validateError(result, index++, \"undefined function 'concat'\", 8, 12);\n          \n          \n            \n                    validateError(result, index++, \"unknown type 'Listener'\", 12, 6);\n          \n          \n            \n                    validateError(result, index++, \"unknown type 'CallStackElement'\", 35, 30);\n          \n          \n            \n                    assertEquals(result.getErrorCount(), index);\n          \n      \n    \n    \n  \n\ninstead, we also assert that the actual error count matches the expected and that we've asserted all of the errors.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439865413", "createdAt": "2020-06-14T20:36:44Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/imports/ImportsNegativeTests.java", "diffHunk": "@@ -39,4 +39,16 @@ public void testInvalidImportOnMultipleFiles() {\n         validateError(result, 0, \"cannot resolve module 'unknown/module'\", 1, 1);\n         validateError(result, 1, \"cannot resolve module 'unknown/module'\", 1, 1);\n     }\n+\n+    @Test(description = \"Test invalid autoimports\")\n+    public void testInvalidAutoImports() {\n+        CompileResult result = BCompileUtil.compile(\"test-src/imports/predeclared-imports\", \"rpg\");\n+        assertEquals(result.getErrorCount(), 5);\n+        validateError(result, 0, \"undefined function 'max'\", 3, 12);\n+        validateError(result, 1, \"undefined function 'min'\", 7, 12);\n+        validateError(result, 2, \"undefined function 'concat'\", 8, 12);\n+        validateError(result, 3, \"unknown type 'Listener'\", 12, 6);\n+        validateError(result, 4, \"unknown type 'CallStackElement'\", 35, 30);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "565a373ea6df666d2a8a47b4e511f447dafa994e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAwNDM3Mg==", "bodyText": "Fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440004372", "createdAt": "2020-06-15T08:16:12Z", "author": {"login": "chiranSachintha"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/imports/ImportsNegativeTests.java", "diffHunk": "@@ -39,4 +39,16 @@ public void testInvalidImportOnMultipleFiles() {\n         validateError(result, 0, \"cannot resolve module 'unknown/module'\", 1, 1);\n         validateError(result, 1, \"cannot resolve module 'unknown/module'\", 1, 1);\n     }\n+\n+    @Test(description = \"Test invalid autoimports\")\n+    public void testInvalidAutoImports() {\n+        CompileResult result = BCompileUtil.compile(\"test-src/imports/predeclared-imports\", \"rpg\");\n+        assertEquals(result.getErrorCount(), 5);\n+        validateError(result, 0, \"undefined function 'max'\", 3, 12);\n+        validateError(result, 1, \"undefined function 'min'\", 7, 12);\n+        validateError(result, 2, \"undefined function 'concat'\", 8, 12);\n+        validateError(result, 3, \"unknown type 'Listener'\", 12, 6);\n+        validateError(result, 4, \"unknown type 'CallStackElement'\", 35, 30);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2NTQxMw=="}, "originalCommit": {"oid": "565a373ea6df666d2a8a47b4e511f447dafa994e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDQzNjY0OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQyMToxMToxNVrOGjfZ8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODoxNTo0MFrOGjnt3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2Nzg4OA==", "bodyText": "Shall we refactor this into something like\n            if ((entry.symbol.tag & SymTag.IMPORT) == SymTag.IMPORT) {\n                Name importCompUnit = ((BPackageSymbol) entry.symbol).compUnit;\n                if (importCompUnit == null) {\n                    return entry.symbol;\n                } else if (importCompUnit.equals(compUnit)) {\n                    ((BPackageSymbol) entry.symbol).isUsed = true;\n                    return entry.symbol;\n                }\n            }", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439867888", "createdAt": "2020-06-14T21:11:15Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -395,6 +395,9 @@ public BSymbol resolvePrefixSymbol(SymbolEnv env, Name pkgAlias, Name compUnit)\n             }\n \n             if ((entry.symbol.tag & SymTag.IMPORT) == SymTag.IMPORT &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87176ad4ba78825830441be15941426a7416fa92"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2NzkyMQ==", "bodyText": "Let's also add a comment to say why the compUnit can be null here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439867921", "createdAt": "2020-06-14T21:11:38Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -395,6 +395,9 @@ public BSymbol resolvePrefixSymbol(SymbolEnv env, Name pkgAlias, Name compUnit)\n             }\n \n             if ((entry.symbol.tag & SymTag.IMPORT) == SymTag.IMPORT &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2Nzg4OA=="}, "originalCommit": {"oid": "87176ad4ba78825830441be15941426a7416fa92"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAwNDA2Mw==", "bodyText": "Done", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440004063", "createdAt": "2020-06-15T08:15:40Z", "author": {"login": "chiranSachintha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -395,6 +395,9 @@ public BSymbol resolvePrefixSymbol(SymbolEnv env, Name pkgAlias, Name compUnit)\n             }\n \n             if ((entry.symbol.tag & SymTag.IMPORT) == SymTag.IMPORT &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2Nzg4OA=="}, "originalCommit": {"oid": "87176ad4ba78825830441be15941426a7416fa92"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjA5NzE5OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolTable.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjowMToxN1rOGjvI_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTo1NjoxM1rOGkEHCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEyNTY5Mg==", "bodyText": "What I meant was something like\nMap<Name, BPackageSymbol> modules = new HashMap<>();\nmodules.put(Names.ERROR, this.langErrorModuleSymbol);\nmodules.put(Names.OBJECT, this.langObjectModuleSymbol);\nmodules.put(Names.XML, this.langXmlModuleSymbol);\n\nthis.predeclaredModules = Collections.unmodifiableMap(modules);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440125692", "createdAt": "2020-06-15T12:01:17Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolTable.java", "diffHunk": "@@ -347,6 +349,14 @@ public BType getLangLibSubType(String name) {\n         throw new IllegalStateException(\"LangLib Subtype not found: \" + name);\n     }\n \n+    public void loadPredeclaredModules() {\n+        this.predeclaredModules.put(Names.ERROR, this.langErrorModuleSymbol);\n+        this.predeclaredModules.put(Names.OBJECT, this.langObjectModuleSymbol);\n+        this.predeclaredModules.put(Names.XML, this.langXmlModuleSymbol);\n+\n+        this.predeclaredModules = Collections.unmodifiableMap(this.predeclaredModules);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "048014dcd4d756b7ce6058835bfc2f832061fc86"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE0MzM4Mg==", "bodyText": "It gives NullPointerException while building blang packages in this way.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440143382", "createdAt": "2020-06-15T12:35:06Z", "author": {"login": "chiranSachintha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolTable.java", "diffHunk": "@@ -347,6 +349,14 @@ public BType getLangLibSubType(String name) {\n         throw new IllegalStateException(\"LangLib Subtype not found: \" + name);\n     }\n \n+    public void loadPredeclaredModules() {\n+        this.predeclaredModules.put(Names.ERROR, this.langErrorModuleSymbol);\n+        this.predeclaredModules.put(Names.OBJECT, this.langObjectModuleSymbol);\n+        this.predeclaredModules.put(Names.XML, this.langXmlModuleSymbol);\n+\n+        this.predeclaredModules = Collections.unmodifiableMap(this.predeclaredModules);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEyNTY5Mg=="}, "originalCommit": {"oid": "048014dcd4d756b7ce6058835bfc2f832061fc86"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2OTI1Ng==", "bodyText": "Changed (As mention in the #23884 (comment))", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440469256", "createdAt": "2020-06-15T21:56:13Z", "author": {"login": "chiranSachintha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolTable.java", "diffHunk": "@@ -347,6 +349,14 @@ public BType getLangLibSubType(String name) {\n         throw new IllegalStateException(\"LangLib Subtype not found: \" + name);\n     }\n \n+    public void loadPredeclaredModules() {\n+        this.predeclaredModules.put(Names.ERROR, this.langErrorModuleSymbol);\n+        this.predeclaredModules.put(Names.OBJECT, this.langObjectModuleSymbol);\n+        this.predeclaredModules.put(Names.XML, this.langXmlModuleSymbol);\n+\n+        this.predeclaredModules = Collections.unmodifiableMap(this.predeclaredModules);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEyNTY5Mg=="}, "originalCommit": {"oid": "048014dcd4d756b7ce6058835bfc2f832061fc86"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDA2NDkxOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/imports/ImportsTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo1ODo1NFrOGkChtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMToxNDowN1rOGkH3mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MzMxNw==", "bodyText": "Are we only building these or are we also validating the functionality?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440443317", "createdAt": "2020-06-15T20:58:54Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/imports/ImportsTest.java", "diffHunk": "@@ -63,4 +63,10 @@ public void testSameModuleNameDifferentOrgImports() {\n         BValue[] returns = BRunUtil.invoke(result, \"getStringValueOfPI\");\n         Assert.assertTrue((returns[0]).stringValue().startsWith(\"3.14\"));\n     }\n+\n+    @Test(description = \"Test auto imports\")\n+    public void testPredeclaredModules() {\n+        BCompileUtil.compile(\"test-src/imports/predeclared-imports\", \"bar\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4db20d5f908137493cfc496e8bdc31ed33cb1cc6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1ODIwNw==", "bodyText": "Only building that module. Is it need to validate functionality here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440458207", "createdAt": "2020-06-15T21:30:11Z", "author": {"login": "chiranSachintha"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/imports/ImportsTest.java", "diffHunk": "@@ -63,4 +63,10 @@ public void testSameModuleNameDifferentOrgImports() {\n         BValue[] returns = BRunUtil.invoke(result, \"getStringValueOfPI\");\n         Assert.assertTrue((returns[0]).stringValue().startsWith(\"3.14\"));\n     }\n+\n+    @Test(description = \"Test auto imports\")\n+    public void testPredeclaredModules() {\n+        BCompileUtil.compile(\"test-src/imports/predeclared-imports\", \"bar\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MzMxNw=="}, "originalCommit": {"oid": "4db20d5f908137493cfc496e8bdc31ed33cb1cc6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzMDg0MQ==", "bodyText": "Could you please send a separate PR validating 0 diagnostics.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440530841", "createdAt": "2020-06-16T01:14:07Z", "author": {"login": "rdhananjaya"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/imports/ImportsTest.java", "diffHunk": "@@ -63,4 +63,10 @@ public void testSameModuleNameDifferentOrgImports() {\n         BValue[] returns = BRunUtil.invoke(result, \"getStringValueOfPI\");\n         Assert.assertTrue((returns[0]).stringValue().startsWith(\"3.14\"));\n     }\n+\n+    @Test(description = \"Test auto imports\")\n+    public void testPredeclaredModules() {\n+        BCompileUtil.compile(\"test-src/imports/predeclared-imports\", \"bar\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MzMxNw=="}, "originalCommit": {"oid": "4db20d5f908137493cfc496e8bdc31ed33cb1cc6"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3397, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}