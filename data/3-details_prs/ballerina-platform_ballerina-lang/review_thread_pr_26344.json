{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMTM4NjY2", "number": 26344, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjoyMjoyNlrOEtdPQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjoyMjoyNlrOEtdPQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTAwNDE3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjoyMjoyNlrOHhQRvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToxNDoxN1rOHhYJTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYzMTc0MQ==", "bodyText": "Inside the same method, there seems to be multiple places where we call STNodeFactory.createNodeList(member); with member possibly being null.\nShall we fix those as well? :)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26344#discussion_r504631741", "createdAt": "2020-10-14T12:22:26Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -14165,7 +14165,15 @@ private STNode parseTypedBindingPatternOrMemberAccessRhs(STNode typeDescOrExpr,\n             case CLOSE_BRACE_TOKEN: // T[a]}\n             case COMMA_TOKEN:// T[a],\n                 if (context == ParserRuleContext.AMBIGUOUS_STMT) {\n-                    keyExpr = STNodeFactory.createNodeList(member);\n+                    if (member == null) {\n+                        STNode missingVarRef = STNodeFactory.createSimpleNameReferenceNode(\n+                                SyntaxErrors.createMissingToken(SyntaxKind.IDENTIFIER_TOKEN));\n+                        keyExpr = STNodeFactory.createNodeList(missingVarRef);\n+                        closeBracket = SyntaxErrors.addDiagnostic(closeBracket,\n+                                DiagnosticErrorCode.ERROR_MISSING_KEY_EXPR_IN_MEMBER_ACCESS_EXPR);\n+                    } else {\n+                        keyExpr = STNodeFactory.createNodeList(member);\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1703da5fae798944b58df53f7801ba5933bdb4a7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2MDY1NA==", "bodyText": "+1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26344#discussion_r504760654", "createdAt": "2020-10-14T15:14:17Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -14165,7 +14165,15 @@ private STNode parseTypedBindingPatternOrMemberAccessRhs(STNode typeDescOrExpr,\n             case CLOSE_BRACE_TOKEN: // T[a]}\n             case COMMA_TOKEN:// T[a],\n                 if (context == ParserRuleContext.AMBIGUOUS_STMT) {\n-                    keyExpr = STNodeFactory.createNodeList(member);\n+                    if (member == null) {\n+                        STNode missingVarRef = STNodeFactory.createSimpleNameReferenceNode(\n+                                SyntaxErrors.createMissingToken(SyntaxKind.IDENTIFIER_TOKEN));\n+                        keyExpr = STNodeFactory.createNodeList(missingVarRef);\n+                        closeBracket = SyntaxErrors.addDiagnostic(closeBracket,\n+                                DiagnosticErrorCode.ERROR_MISSING_KEY_EXPR_IN_MEMBER_ACCESS_EXPR);\n+                    } else {\n+                        keyExpr = STNodeFactory.createNodeList(member);\n+                    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYzMTc0MQ=="}, "originalCommit": {"oid": "1703da5fae798944b58df53f7801ba5933bdb4a7"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4729, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}