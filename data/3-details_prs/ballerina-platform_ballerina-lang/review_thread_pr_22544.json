{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMzU1NjUx", "number": 22544, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTowOTowNFrODwXDSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTo1NDoyNlrODwX6Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDM1OTE1OnYy", "diffSide": "RIGHT", "path": "stdlib/jsonutils/src/main/ballerina/src/jsonutils/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTowOTowNFrOGDUK9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTowOTowNFrOGDUK9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyOTM5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This module provides utility functions to manipulate built-in `json` data type. It provides APIs to convert an `xml` to a `json`, or convert a `table` to a `json`.\n          \n          \n            \n            This module provides utility functions to manipulate the built-in `json` data type. It provides APIs to convert an `xml` to a `json` or convert a `table` to a `json`.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22544#discussion_r406129397", "createdAt": "2020-04-09T11:09:04Z", "author": {"login": "praneesha"}, "path": "stdlib/jsonutils/src/main/ballerina/src/jsonutils/Module.md", "diffHunk": "@@ -1,49 +1 @@\n-## Module overview\n-\n-This module provides utility functions to manipulate built-in `json` data type.\n-It provides APIs to convert an `xml` to a `json`, or convert a `table` to a `json`.\n-\n-### Samples\n-\n-#### Convert an `xml` to its `json` representation\n-```ballerina\n-import ballerina/io;\n-import ballerina/jsonutils;\n-\n-public function main() {\n-    var xmlSubElement1 = xml `<!-- outer comment -->`;\n-    var xmlSubElement2 = xml `<name>Sam</name>`;\n-    xml xmlElement = xmlSubElement1 + xmlSubElement2;\n-\n-    json | error jsonObject = jsonutils:fromXML(xmlElement);\n-    if (jsonObject is error) {\n-        io:println(\"An error occurred: \", jsonObject);\n-    } else {\n-        io:println(jsonObject.toJsonString());\n-    }\n-}\n-```\n-\n-#### Convert a `table` to its `json` representation\n-```ballerina\n-import ballerina/io;\n-import ballerina/jsonutils;\n-\n-type Person record {\n-    int id;\n-    string name;\n-};\n-\n-public function main() {\n-    table<Person> peopleTable = table {\n-        {key id, name},\n-        [\n-            { 1, \"Sam\"},\n-            { 2, \"John\"}\n-        ]\n-    };\n-\n-    json peopleJson = jsonutils:fromTable(peopleTable);\n-    io:println(peopleJson.toJsonString());\n-}\n-```\n+This module provides utility functions to manipulate built-in `json` data type. It provides APIs to convert an `xml` to a `json`, or convert a `table` to a `json`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec7792361eb71d7cc8d374f5f8d87d22c0de8160"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDM2MDE3OnYy", "diffSide": "RIGHT", "path": "stdlib/jsonutils/src/main/ballerina/src/jsonutils/jsonutils.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTowOToyNVrOGDULlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTowOToyNVrOGDULlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyOTU1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + options - The `XmlOptions` record consisting the configurations for the conversion\n          \n          \n            \n            # + options - The `XmlOptions` record consisting of the configurations for the conversion", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22544#discussion_r406129556", "createdAt": "2020-04-09T11:09:25Z", "author": {"login": "praneesha"}, "path": "stdlib/jsonutils/src/main/ballerina/src/jsonutils/jsonutils.bal", "diffHunk": "@@ -16,20 +16,24 @@\n \n import ballerina/java;\n \n-# Type for XML options.\n+# Provides configurations for converting XML to JSON.\n #\n-# + attributePrefix - Attribute prefix used in the XML.\n-# + preserveNamespaces - Instructs whether to preserve the namespaces of the XML when converting.\n+# + attributePrefix - Attribute prefix used in the XML\n+# + preserveNamespaces - Instructs whether to preserve the namespaces of the XML when converting\n public type XmlOptions record {\n     string attributePrefix = \"@\";\n     boolean preserveNamespaces = true;\n };\n \n # Converts an XML object to its JSON representation.\n+# ```ballerina\n+# xml xmlValue = xml `<!-- outer comment -->` + xml `<name>supun</name>`;\n+# json|error jsonValue = fromXML(mxlValue);\n+# ```\n #\n-# + x - The xml source\n-# + options - XmlOptions record for XML to JSON conversion properties\n-# + return - JSON representation of the given XML, or an error if the conversion fails\n+# + x - The XML source to be converted to JSON\n+# + options - The `XmlOptions` record consisting the configurations for the conversion", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec7792361eb71d7cc8d374f5f8d87d22c0de8160"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDM2MTYzOnYy", "diffSide": "RIGHT", "path": "stdlib/jsonutils/src/main/ballerina/src/jsonutils/jsonutils.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTowOTo0OFrOGDUMYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTowOTo0OFrOGDUMYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjEyOTc2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The JSON representation of the given XML or an error if the conversion fails\n          \n          \n            \n            # + return - The JSON representation of the given XML or else an error if the conversion fails\n          \n      \n    \n    \n  \n\nRefer the guideline for the description of the return statement.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22544#discussion_r406129763", "createdAt": "2020-04-09T11:09:48Z", "author": {"login": "praneesha"}, "path": "stdlib/jsonutils/src/main/ballerina/src/jsonutils/jsonutils.bal", "diffHunk": "@@ -16,20 +16,24 @@\n \n import ballerina/java;\n \n-# Type for XML options.\n+# Provides configurations for converting XML to JSON.\n #\n-# + attributePrefix - Attribute prefix used in the XML.\n-# + preserveNamespaces - Instructs whether to preserve the namespaces of the XML when converting.\n+# + attributePrefix - Attribute prefix used in the XML\n+# + preserveNamespaces - Instructs whether to preserve the namespaces of the XML when converting\n public type XmlOptions record {\n     string attributePrefix = \"@\";\n     boolean preserveNamespaces = true;\n };\n \n # Converts an XML object to its JSON representation.\n+# ```ballerina\n+# xml xmlValue = xml `<!-- outer comment -->` + xml `<name>supun</name>`;\n+# json|error jsonValue = fromXML(mxlValue);\n+# ```\n #\n-# + x - The xml source\n-# + options - XmlOptions record for XML to JSON conversion properties\n-# + return - JSON representation of the given XML, or an error if the conversion fails\n+# + x - The XML source to be converted to JSON\n+# + options - The `XmlOptions` record consisting the configurations for the conversion\n+# + return - The JSON representation of the given XML or an error if the conversion fails", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec7792361eb71d7cc8d374f5f8d87d22c0de8160"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDQ5OTIyOnYy", "diffSide": "RIGHT", "path": "stdlib/jsonutils/src/main/ballerina/src/jsonutils/jsonutils.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTo1NDoyNlrOGDVfzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMTo1NDoyNlrOGDVfzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE1MTExOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The JSON representation of the given XML on success, else returns an `error`\n          \n          \n            \n            # + return - The JSON representation of the given XML on success, else returns an `error`\n          \n      \n    \n    \n  \n\nPlease refer the guidelines on the template for the return statment.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22544#discussion_r406151119", "createdAt": "2020-04-09T11:54:26Z", "author": {"login": "praneesha"}, "path": "stdlib/jsonutils/src/main/ballerina/src/jsonutils/jsonutils.bal", "diffHunk": "@@ -16,20 +16,24 @@\n \n import ballerina/java;\n \n-# Type for XML options.\n+# Provides configurations for converting XML to JSON.\n #\n-# + attributePrefix - Attribute prefix used in the XML.\n-# + preserveNamespaces - Instructs whether to preserve the namespaces of the XML when converting.\n+# + attributePrefix - Attribute prefix used in the XML\n+# + preserveNamespaces - Instructs whether to preserve the namespaces of the XML when converting\n public type XmlOptions record {\n     string attributePrefix = \"@\";\n     boolean preserveNamespaces = true;\n };\n \n # Converts an XML object to its JSON representation.\n+# ```ballerina\n+# xml xmlValue = xml `<!-- outer comment -->` + xml `<name>supun</name>`;\n+# json|error jsonValue = fromXML(mxlValue);\n+# ```\n #\n-# + x - The xml source\n-# + options - XmlOptions record for XML to JSON conversion properties\n-# + return - JSON representation of the given XML, or an error if the conversion fails\n+# + x - The XML source to be converted to JSON\n+# + options - The `XmlOptions` record consisting of the configurations for the conversion\n+# + return - The JSON representation of the given XML on success, else returns an `error`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b3abe18d1e3302e2f7797bf6c321c155d30457b"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4090, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}