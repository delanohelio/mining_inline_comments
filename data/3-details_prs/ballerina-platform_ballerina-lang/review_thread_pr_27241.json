{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MDQ4Njcz", "number": 27241, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwODoxMTozMVrOFDV8sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwODoxMTo1NlrOFDV9ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MDQ5NjUxOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/interop/JMethodResolver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwODoxMTozMVrOIC8dkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwODoxMTozMVrOIC8dkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk1ODY3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private JInteropException paramCountMismatchError(JMethodRequest jMethodRequest) {\n          \n          \n            \n                private JInteropException throwParamCountMismatchError(JMethodRequest jMethodRequest) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27241#discussion_r539958675", "createdAt": "2020-12-10T08:11:31Z", "author": {"login": "warunalakshitha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/interop/JMethodResolver.java", "diffHunk": "@@ -859,19 +814,40 @@ private String getParamTypesAsString(ParamTypeConstraint[] constraints) {\n         return stringJoiner.toString();\n     }\n \n-    private JInteropException getNoSuchMethodError(String methodName, Class<?> jType, BType bType,\n+    private JInteropException methodNotFoundError(JMethodRequest jMethodRequest) {\n+\n+        if (jMethodRequest.kind == JMethodKind.CONSTRUCTOR) {\n+            throw new JInteropException(DiagnosticErrorCode.CONSTRUCTOR_NOT_FOUND,\n+                    \"No such public constructor with '\" + jMethodRequest.bFuncParamCount +\n+                            \"' parameter(s) found in class '\" + jMethodRequest.declaringClass + \"'\");\n+        } else {\n+            if (jMethodRequest.bFuncParamCount == 0 || jMethodRequest.bParamTypes[0].tag != TypeTags.HANDLE) {\n+                throw new JInteropException(DiagnosticErrorCode.METHOD_NOT_FOUND,\n+                        \"No such public static method '\" + jMethodRequest.methodName + \"' with '\" +\n+                                jMethodRequest.bFuncParamCount +\n+                                \"' parameter(s) found in class '\" + jMethodRequest.declaringClass + \"'\");\n+            } else {\n+                throw new JInteropException(DiagnosticErrorCode.METHOD_NOT_FOUND,\n+                        \"No such public method '\" + jMethodRequest.methodName + \"' with '\" +\n+                                jMethodRequest.bFuncParamCount +\n+                                \"' parameter(s) found in class '\" + jMethodRequest.declaringClass + \"'\");\n+            }\n+        }\n+    }\n+\n+    private JInteropException noSuchMethodError(String methodName, Class<?> jType, BType bType,\n                                                    Class<?> declaringClass) {\n \n-        return new JInteropException(DiagnosticErrorCode.METHOD_SIGNATURE_DOES_NOT_MATCH,\n+        throw new JInteropException(DiagnosticErrorCode.METHOD_SIGNATURE_DOES_NOT_MATCH,\n                 \"Incompatible param type for method '\" + methodName + \"' in class '\" + declaringClass.getName() +\n                         \"': Java type '\" + jType.getName() + \"' will not be matched to ballerina type '\" +\n                         (bType.tag == TypeTags.FINITE ? bType.tsymbol.name.value : bType) + \"'\");\n     }\n \n-    private JInteropException getParamCountMismatchError(JMethodRequest jMethodRequest) {\n+    private JInteropException paramCountMismatchError(JMethodRequest jMethodRequest) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7c481d96a8d84680a23be79ab511adbdb056a2e"}, "originalPosition": 263}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MDQ5ODUxOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/interop/JMethodResolver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwODoxMTo1NlrOIC8emg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwODoxMTo1NlrOIC8emg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk1ODkzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private JInteropException methodNotFoundError(JMethodRequest jMethodRequest) {\n          \n          \n            \n                private JInteropException throwMethodNotFoundError(JMethodRequest jMethodRequest) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27241#discussion_r539958938", "createdAt": "2020-12-10T08:11:56Z", "author": {"login": "warunalakshitha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/interop/JMethodResolver.java", "diffHunk": "@@ -859,19 +814,40 @@ private String getParamTypesAsString(ParamTypeConstraint[] constraints) {\n         return stringJoiner.toString();\n     }\n \n-    private JInteropException getNoSuchMethodError(String methodName, Class<?> jType, BType bType,\n+    private JInteropException methodNotFoundError(JMethodRequest jMethodRequest) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7c481d96a8d84680a23be79ab511adbdb056a2e"}, "originalPosition": 231}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2992, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}