{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMzgxMDk4", "number": 23884, "title": "Allow error, object, xml module prefixes without importing", "bodyText": "Purpose\n\nTo align auto imports with the spec.\n\n\n8.1 Import declaration says:\nA module prefix of t, where t is one of error, object or xml, is predeclared as referring to the lang.t lang library module, but this can be overridden by an import-decl.\n\nFixes #23099\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-06-10T11:07:20Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884", "merged": true, "mergeCommit": {"oid": "bd77ab2d2286eb7429d9d2bf8d4eae83e09f163e"}, "closed": true, "closedAt": "2020-06-16T01:11:35Z", "author": {"login": "chiranSachintha"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp04PMAH2gAyNDMyMzgxMDk4OmY1ZWExOTMyODMxNzc0ZTU2MTg2ZTYyMjI3ZTA3OTFiYzIwNjIxNWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrquSmAFqTQzMTA5Mjg3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f5ea1932831774e56186e62227e0791bc206215a", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f5ea1932831774e56186e62227e0791bc206215a", "committedDate": "2020-06-10T07:53:28Z", "message": "Predeclared error, object, xml module prefixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21086b20fdb9135fd48908d30f79a79c1e8736d8", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/21086b20fdb9135fd48908d30f79a79c1e8736d8", "committedDate": "2020-06-10T08:10:57Z", "message": "Add auto-import tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd630b192f8b5be2f7e0a2fc04c552327902809f", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fd630b192f8b5be2f7e0a2fc04c552327902809f", "committedDate": "2020-06-10T14:48:13Z", "message": "Fix checkstyle issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e1cafd008414a2c5c15eb47de37c2dbfc1db1b4", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8e1cafd008414a2c5c15eb47de37c2dbfc1db1b4", "committedDate": "2020-06-12T03:55:00Z", "message": "fix language server test failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4292bc6893c2a95272fefb48c58aebea5bdb074c", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4292bc6893c2a95272fefb48c58aebea5bdb074c", "committedDate": "2020-06-12T04:19:21Z", "message": "Merge pull request #1 from nadeeshaan/issue-23099-local\n\nFix language server test failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a53093b715fb8304db4c20838ce1f8d0df7b5d62", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a53093b715fb8304db4c20838ce1f8d0df7b5d62", "committedDate": "2020-06-12T04:54:00Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into issue-23099\n\n\u0001 Conflicts:\n\u0001\tlanguage-server/modules/langserver-core/src/test/resources/completion/testablepackage/blockStatementCompletion.json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64ca65d72b11f889a9cf3031adbaf00429359aa9", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/64ca65d72b11f889a9cf3031adbaf00429359aa9", "committedDate": "2020-06-12T06:02:45Z", "message": "Fix checkstyle issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ee701f93309ea1194fd53685e0add80eab4592cf", "committedDate": "2020-06-12T09:57:43Z", "message": "Disable a test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMjQwODY4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#pullrequestreview-430240868", "createdAt": "2020-06-14T18:23:04Z", "commit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxODoyMzowNVrOGjepdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxODoyMzowNVrOGjepdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1NTQ3OQ==", "bodyText": "A minor thing. Was wondering whether we should make this an immutable map.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439855479", "createdAt": "2020-06-14T18:23:05Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolTable.java", "diffHunk": "@@ -185,6 +185,7 @@\n \n     private Names names;\n     public Map<BPackageSymbol, SymbolEnv> pkgEnvMap = new HashMap<>();\n+    public Map<Name, BPackageSymbol> predeclaredModules = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8be54826ba3dcf38e4786b5f13e4947a8cb2bbd", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b8be54826ba3dcf38e4786b5f13e4947a8cb2bbd", "committedDate": "2020-06-14T18:24:06Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into issue-23099\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/CompilerDriver.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "565a373ea6df666d2a8a47b4e511f447dafa994e", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/565a373ea6df666d2a8a47b4e511f447dafa994e", "committedDate": "2020-06-14T19:15:29Z", "message": "Resolve conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMjQ2NTI4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#pullrequestreview-430246528", "createdAt": "2020-06-14T19:53:22Z", "commit": {"oid": "565a373ea6df666d2a8a47b4e511f447dafa994e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxOTo1MzoyMlrOGjfD4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxOTo1MzoyMlrOGjfD4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2MjI0Mg==", "bodyText": "This null check is not necessary right? We are iterating through the key set of the predeclared modules map. Therefore, there's no reason for the map to not contain the key it just retrieved", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439862242", "createdAt": "2020-06-14T19:53:22Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -533,6 +535,25 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+        SymbolEnv prevEnv = this.env;\n+        this.env = env;\n+        for (Name alias : predeclaredModules.keySet()) {\n+            ScopeEntry entry = this.env.scope.lookup(alias);\n+            if (predeclaredModules.get(alias) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "565a373ea6df666d2a8a47b4e511f447dafa994e"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTE1OTI3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#pullrequestreview-430115927", "createdAt": "2020-06-13T05:39:20Z", "commit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QwNTozOToyMFrOGjV3zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxOToyMDozMVrOGje6Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcxMTY5Mg==", "bodyText": "Have we created an issue to track enabling these disabled langserver tests?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439711692", "createdAt": "2020-06-13T05:39:20Z", "author": {"login": "MaryamZi"}, "path": "language-server/modules/langserver-core/src/test/java/org/ballerinalang/langserver/completion/definitions/TestablePackageCompletionTest.java", "diffHunk": "@@ -35,7 +35,7 @@\n         log.info(\"Test textDocument/completion for Function Definition Scope\");\n         return new Object[][] {\n //                {\"topLevelCompletion.json\", \"testablepackage\"},\n-                {\"blockStatementCompletion.json\", \"testablepackage\"},\n+//                {\"blockStatementCompletion.json\", \"testablepackage\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1MTYwNA==", "bodyText": "Shall we add a comment explaining why we need to check for null?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439851604", "createdAt": "2020-06-14T17:34:59Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -528,6 +530,25 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+        SymbolEnv prevEnv = this.env;\n+        this.env = env;\n+        for (Name alias : predeclaredModules.keySet()) {\n+            ScopeEntry entry = this.env.scope.lookup(alias);\n+            if (predeclaredModules.get(alias) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1MTY5Mg==", "bodyText": "We can extract predeclaredModules.get(alias) out to a variable right? We seem to be using it again.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439851692", "createdAt": "2020-06-14T17:35:56Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -528,6 +530,25 @@ public void visit(BLangImportPackage importPkgNode) {\n         this.env.scope.define(pkgAlias, symbol);\n     }\n \n+    public void initPredeclaredModules(Map<Name, BPackageSymbol> predeclaredModules, SymbolEnv env) {\n+        SymbolEnv prevEnv = this.env;\n+        this.env = env;\n+        for (Name alias : predeclaredModules.keySet()) {\n+            ScopeEntry entry = this.env.scope.lookup(alias);\n+            if (predeclaredModules.get(alias) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee701f93309ea1194fd53685e0add80eab4592cf"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1OTczNQ==", "bodyText": "Let's add the licence header to all the newly added files.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439859735", "createdAt": "2020-06-14T19:20:31Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/imports/predeclared-imports/src/bar/predeclared-error.bal", "diffHunk": "@@ -0,0 +1,4 @@\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "565a373ea6df666d2a8a47b4e511f447dafa994e"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87176ad4ba78825830441be15941426a7416fa92", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/87176ad4ba78825830441be15941426a7416fa92", "committedDate": "2020-06-14T20:58:23Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMjQ5MjA1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#pullrequestreview-430249205", "createdAt": "2020-06-14T20:36:44Z", "commit": {"oid": "565a373ea6df666d2a8a47b4e511f447dafa994e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQyMDozNjo0NFrOGjfQRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQyMToxMTozOFrOGjfaEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2NTQxMw==", "bodyText": "If we do\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(result.getErrorCount(), 5);\n          \n          \n            \n                    validateError(result, 0, \"undefined function 'max'\", 3, 12);\n          \n          \n            \n                    validateError(result, 1, \"undefined function 'min'\", 7, 12);\n          \n          \n            \n                    validateError(result, 2, \"undefined function 'concat'\", 8, 12);\n          \n          \n            \n                    validateError(result, 3, \"unknown type 'Listener'\", 12, 6);\n          \n          \n            \n                    validateError(result, 4, \"unknown type 'CallStackElement'\", 35, 30);\n          \n          \n            \n                    int index = 0;\n          \n          \n            \n                    validateError(result, index++, \"undefined function 'max'\", 3, 12);\n          \n          \n            \n                    validateError(result, index++, \"undefined function 'min'\", 7, 12);\n          \n          \n            \n                    validateError(result, index++, \"undefined function 'concat'\", 8, 12);\n          \n          \n            \n                    validateError(result, index++, \"unknown type 'Listener'\", 12, 6);\n          \n          \n            \n                    validateError(result, index++, \"unknown type 'CallStackElement'\", 35, 30);\n          \n          \n            \n                    assertEquals(result.getErrorCount(), index);\n          \n      \n    \n    \n  \n\ninstead, we also assert that the actual error count matches the expected and that we've asserted all of the errors.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439865413", "createdAt": "2020-06-14T20:36:44Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/imports/ImportsNegativeTests.java", "diffHunk": "@@ -39,4 +39,16 @@ public void testInvalidImportOnMultipleFiles() {\n         validateError(result, 0, \"cannot resolve module 'unknown/module'\", 1, 1);\n         validateError(result, 1, \"cannot resolve module 'unknown/module'\", 1, 1);\n     }\n+\n+    @Test(description = \"Test invalid autoimports\")\n+    public void testInvalidAutoImports() {\n+        CompileResult result = BCompileUtil.compile(\"test-src/imports/predeclared-imports\", \"rpg\");\n+        assertEquals(result.getErrorCount(), 5);\n+        validateError(result, 0, \"undefined function 'max'\", 3, 12);\n+        validateError(result, 1, \"undefined function 'min'\", 7, 12);\n+        validateError(result, 2, \"undefined function 'concat'\", 8, 12);\n+        validateError(result, 3, \"unknown type 'Listener'\", 12, 6);\n+        validateError(result, 4, \"unknown type 'CallStackElement'\", 35, 30);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "565a373ea6df666d2a8a47b4e511f447dafa994e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2Nzg4OA==", "bodyText": "Shall we refactor this into something like\n            if ((entry.symbol.tag & SymTag.IMPORT) == SymTag.IMPORT) {\n                Name importCompUnit = ((BPackageSymbol) entry.symbol).compUnit;\n                if (importCompUnit == null) {\n                    return entry.symbol;\n                } else if (importCompUnit.equals(compUnit)) {\n                    ((BPackageSymbol) entry.symbol).isUsed = true;\n                    return entry.symbol;\n                }\n            }", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439867888", "createdAt": "2020-06-14T21:11:15Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -395,6 +395,9 @@ public BSymbol resolvePrefixSymbol(SymbolEnv env, Name pkgAlias, Name compUnit)\n             }\n \n             if ((entry.symbol.tag & SymTag.IMPORT) == SymTag.IMPORT &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87176ad4ba78825830441be15941426a7416fa92"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2NzkyMQ==", "bodyText": "Let's also add a comment to say why the compUnit can be null here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r439867921", "createdAt": "2020-06-14T21:11:38Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -395,6 +395,9 @@ public BSymbol resolvePrefixSymbol(SymbolEnv env, Name pkgAlias, Name compUnit)\n             }\n \n             if ((entry.symbol.tag & SymTag.IMPORT) == SymTag.IMPORT &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2Nzg4OA=="}, "originalCommit": {"oid": "87176ad4ba78825830441be15941426a7416fa92"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "048014dcd4d756b7ce6058835bfc2f832061fc86", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/048014dcd4d756b7ce6058835bfc2f832061fc86", "committedDate": "2020-06-15T11:46:47Z", "message": "Fix review suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ee1b3929a3c456eaf4ea8bfc4cfbec6c316ece1", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0ee1b3929a3c456eaf4ea8bfc4cfbec6c316ece1", "committedDate": "2020-06-15T08:12:12Z", "message": "Fix review suggestions"}, "afterCommit": {"oid": "048014dcd4d756b7ce6058835bfc2f832061fc86", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/048014dcd4d756b7ce6058835bfc2f832061fc86", "committedDate": "2020-06-15T11:46:47Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNTc1ODE5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#pullrequestreview-430575819", "createdAt": "2020-06-15T12:01:16Z", "commit": {"oid": "048014dcd4d756b7ce6058835bfc2f832061fc86"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjowMToxN1rOGjvI_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjowMToxN1rOGjvI_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEyNTY5Mg==", "bodyText": "What I meant was something like\nMap<Name, BPackageSymbol> modules = new HashMap<>();\nmodules.put(Names.ERROR, this.langErrorModuleSymbol);\nmodules.put(Names.OBJECT, this.langObjectModuleSymbol);\nmodules.put(Names.XML, this.langXmlModuleSymbol);\n\nthis.predeclaredModules = Collections.unmodifiableMap(modules);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440125692", "createdAt": "2020-06-15T12:01:17Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolTable.java", "diffHunk": "@@ -347,6 +349,14 @@ public BType getLangLibSubType(String name) {\n         throw new IllegalStateException(\"LangLib Subtype not found: \" + name);\n     }\n \n+    public void loadPredeclaredModules() {\n+        this.predeclaredModules.put(Names.ERROR, this.langErrorModuleSymbol);\n+        this.predeclaredModules.put(Names.OBJECT, this.langObjectModuleSymbol);\n+        this.predeclaredModules.put(Names.XML, this.langXmlModuleSymbol);\n+\n+        this.predeclaredModules = Collections.unmodifiableMap(this.predeclaredModules);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "048014dcd4d756b7ce6058835bfc2f832061fc86"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4db20d5f908137493cfc496e8bdc31ed33cb1cc6", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4db20d5f908137493cfc496e8bdc31ed33cb1cc6", "committedDate": "2020-06-15T17:48:18Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into issue-23099"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTYzMTE0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#pullrequestreview-430963114", "createdAt": "2020-06-15T20:19:02Z", "commit": {"oid": "4db20d5f908137493cfc496e8bdc31ed33cb1cc6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTg4ODM3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#pullrequestreview-430988837", "createdAt": "2020-06-15T20:58:53Z", "commit": {"oid": "4db20d5f908137493cfc496e8bdc31ed33cb1cc6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo1ODo1NFrOGkChtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo1ODo1NFrOGkChtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ0MzMxNw==", "bodyText": "Are we only building these or are we also validating the functionality?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#discussion_r440443317", "createdAt": "2020-06-15T20:58:54Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/imports/ImportsTest.java", "diffHunk": "@@ -63,4 +63,10 @@ public void testSameModuleNameDifferentOrgImports() {\n         BValue[] returns = BRunUtil.invoke(result, \"getStringValueOfPI\");\n         Assert.assertTrue((returns[0]).stringValue().startsWith(\"3.14\"));\n     }\n+\n+    @Test(description = \"Test auto imports\")\n+    public void testPredeclaredModules() {\n+        BCompileUtil.compile(\"test-src/imports/predeclared-imports\", \"bar\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4db20d5f908137493cfc496e8bdc31ed33cb1cc6"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b2fa5a3138358eeb79631adea903a6891a43dd9", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3b2fa5a3138358eeb79631adea903a6891a43dd9", "committedDate": "2020-06-15T21:27:32Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMDkyODcx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23884#pullrequestreview-431092871", "createdAt": "2020-06-16T01:11:25Z", "commit": {"oid": "3b2fa5a3138358eeb79631adea903a6891a43dd9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4349, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}