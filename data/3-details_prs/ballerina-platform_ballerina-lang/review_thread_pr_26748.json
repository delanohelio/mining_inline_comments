{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MzE2OTQz", "number": 26748, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMTo0MTo0MFrOE1MBSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTo1NzoxNVrOE1SaqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjA2OTIxOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunExecutableTask.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMTo0MTo0MFrOHtUiHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMTo1NTo0MVrOHtU-Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI4NDM4Mg==", "bodyText": "Don't we need to exit if get exception while running the command?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26748#discussion_r517284382", "createdAt": "2020-11-04T11:41:40Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunExecutableTask.java", "diffHunk": "@@ -130,6 +130,10 @@ private void runGeneratedExecutable(BLangPackage executableModule, BuildContext\n             ProcessBuilder pb = new ProcessBuilder(commands).inheritIO();\n             Process process = pb.start();\n             process.waitFor();\n+            int exitValue = process.exitValue();\n+            if (exitValue != 0) {\n+                Runtime.getRuntime().exit(exitValue);\n+            }\n         } catch (IOException | InterruptedException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e28aa9a1ed120ab2484b2b53bbc584bcb45c5b95"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI4NzM5OA==", "bodyText": "The thrown exceptions are handled and exits are covered at the main class at https://github.com/ballerina-platform/ballerina-lang/blob/ballerina-1.2.x/cli/ballerina-tool/src/main/java/org/ballerinalang/tool/Main.java\nBut when there is no exception thrown as in the case when the ballerina program panics with an error, the exit code does not reflect the actual status. That's why I am suggesting this fix.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26748#discussion_r517287398", "createdAt": "2020-11-04T11:47:29Z", "author": {"login": "Dilhasha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunExecutableTask.java", "diffHunk": "@@ -130,6 +130,10 @@ private void runGeneratedExecutable(BLangPackage executableModule, BuildContext\n             ProcessBuilder pb = new ProcessBuilder(commands).inheritIO();\n             Process process = pb.start();\n             process.waitFor();\n+            int exitValue = process.exitValue();\n+            if (exitValue != 0) {\n+                Runtime.getRuntime().exit(exitValue);\n+            }\n         } catch (IOException | InterruptedException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI4NDM4Mg=="}, "originalCommit": {"oid": "e28aa9a1ed120ab2484b2b53bbc584bcb45c5b95"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI5MTUzNA==", "bodyText": "I realised, we can throw an exception when exit code is not zero and let the main class handle it to keep it consistent. I'll fix it.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26748#discussion_r517291534", "createdAt": "2020-11-04T11:55:41Z", "author": {"login": "Dilhasha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunExecutableTask.java", "diffHunk": "@@ -130,6 +130,10 @@ private void runGeneratedExecutable(BLangPackage executableModule, BuildContext\n             ProcessBuilder pb = new ProcessBuilder(commands).inheritIO();\n             Process process = pb.start();\n             process.waitFor();\n+            int exitValue = process.exitValue();\n+            if (exitValue != 0) {\n+                Runtime.getRuntime().exit(exitValue);\n+            }\n         } catch (IOException | InterruptedException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI4NDM4Mg=="}, "originalCommit": {"oid": "e28aa9a1ed120ab2484b2b53bbc584bcb45c5b95"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzExMjg1OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/java/org/ballerinalang/tool/Main.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTo1NjoxNVrOHtehbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTo1NjoxNVrOHtehbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ0ODA0Nw==", "bodyText": "I think the e.getMessage will not have any useful info as always print \"Execution exited with the exit code <some non 0 value>\". Runtime already print the actual cause when panic. Therefore we do not need to print the error.  Also this will miss the exit code when we print the echo $? which will be always 1. So we can save the exitValue in PanicException and set in here without printing any thing.\ncatch (BLangPanicException e) {\nRuntime.getRuntime().exit(((BlangPanicException).getExitValue())\n}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26748#discussion_r517448047", "createdAt": "2020-11-04T15:56:15Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-tool/src/main/java/org/ballerinalang/tool/Main.java", "diffHunk": "@@ -68,6 +68,9 @@ public static void main(String... args) {\n         } catch (BLauncherException e) {\n             LauncherUtils.printLauncherException(e, errStream);\n             Runtime.getRuntime().exit(1);\n+        } catch (BLangPanicException e) {\n+            errStream.println(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff8ad7402fc6ab98d131598f2804771d4b21d7a0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzExNzIxOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/java/org/ballerinalang/tool/BLangPanicException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTo1NzoxNVrOHtekFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTo1NzoxNVrOHtekFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ0ODcyNQ==", "bodyText": "Since actuall runtime gets panic shall we rename RuntimePanicException", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26748#discussion_r517448725", "createdAt": "2020-11-04T15:57:15Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-tool/src/main/java/org/ballerinalang/tool/BLangPanicException.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *   WSO2 Inc. licenses this file to you under the Apache License,\n+ *   Version 2.0 (the \"License\"); you may not use this file except\n+ *   in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing,\n+ *   software distributed under the License is distributed on an\n+ *   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *   KIND, either express or implied.  See the License for the\n+ *   specific language governing permissions and limitations\n+ *   under the License.\n+ */\n+package org.ballerinalang.tool;\n+\n+/**\n+ * Thrown to indicate a non zero exit code from Ballerina executable.\n+ *\n+ * @since 1.2.10\n+ */\n+public class BLangPanicException extends RuntimeException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff8ad7402fc6ab98d131598f2804771d4b21d7a0"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3194, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}