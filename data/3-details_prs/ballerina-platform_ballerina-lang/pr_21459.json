{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMzM5MjEw", "number": 21459, "title": "Add removeIfHasKey", "bodyText": "Purpose\n$subject\nFixes #21235\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-03-04T04:56:10Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21459", "merged": true, "mergeCommit": {"oid": "d4e37c48a93b5180457f28553839536c1261de06"}, "closed": true, "closedAt": "2020-03-05T06:27:32Z", "author": {"login": "KavinduZoysa"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKQmvJgFqTM2ODUyMzM2MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKkt3IABqjMwOTk3MjI5NjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NTIzMzYw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21459#pullrequestreview-368523360", "createdAt": "2020-03-04T06:06:07Z", "commit": {"oid": "0b7aca57f46737731b1a532b175cf0022d7c3760"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNjowNjowN1rOFxg89Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNjowNjowN1rOFxg89Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NDQzNw==", "bodyText": "Shall we add @since annotation for this?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21459#discussion_r387464437", "createdAt": "2020-03-04T06:06:07Z", "author": {"login": "anupama-pathirage"}, "path": "langlib/lang.map/src/main/java/org/ballerinalang/langlib/map/RemoveIfHasKey.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.langlib.map;\n+\n+import org.ballerinalang.jvm.BallerinaErrors;\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.jvm.values.MapValue;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+import org.ballerinalang.natives.annotations.ReturnType;\n+\n+import static org.ballerinalang.jvm.MapUtils.checkIsMapOnlyOperation;\n+import static org.ballerinalang.jvm.MapUtils.checkValidFieldForRecord;\n+\n+/**\n+ * Extern function to remove element from the map if key exists.\n+ * ballerina.model.map:removeIfHasKey(string)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b7aca57f46737731b1a532b175cf0022d7c3760"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b7aca57f46737731b1a532b175cf0022d7c3760", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0b7aca57f46737731b1a532b175cf0022d7c3760", "committedDate": "2020-03-04T04:48:52Z", "message": "Add tests to langlib tests"}, "afterCommit": {"oid": "9894e6269d1c2e2f20b1c5399bc79c5b75a49211", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9894e6269d1c2e2f20b1c5399bc79c5b75a49211", "committedDate": "2020-03-04T06:37:50Z", "message": "Add tests to langlib tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NTc4NzEz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21459#pullrequestreview-368578713", "createdAt": "2020-03-04T08:24:28Z", "commit": {"oid": "9894e6269d1c2e2f20b1c5399bc79c5b75a49211"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODoyNDoyOFrOFxjung==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODoyNDoyOFrOFxjung==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwOTkxOA==", "bodyText": "Shall we move this to a constant?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21459#discussion_r387509918", "createdAt": "2020-03-04T08:24:28Z", "author": {"login": "pubudu91"}, "path": "langlib/lang.map/src/main/java/org/ballerinalang/langlib/map/RemoveIfHasKey.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.langlib.map;\n+\n+import org.ballerinalang.jvm.BallerinaErrors;\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.jvm.values.MapValue;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+import org.ballerinalang.natives.annotations.ReturnType;\n+\n+import static org.ballerinalang.jvm.MapUtils.checkIsMapOnlyOperation;\n+import static org.ballerinalang.jvm.MapUtils.checkValidFieldForRecord;\n+\n+/**\n+ * Extern function to remove element from the map if key exists.\n+ * ballerina.model.map:removeIfHasKey(string)\n+ *\n+ * @since 1.2.0\n+ */\n+@BallerinaFunction(\n+        orgName = \"ballerina\", packageName = \"lang.map\", functionName = \"removeIfHasKey\",\n+        args = {@Argument(name = \"m\", type = TypeKind.MAP), @Argument(name = \"k\", type = TypeKind.STRING)},\n+        returnType = {@ReturnType(type = TypeKind.ANY)},\n+        isPublic = true\n+)\n+public class RemoveIfHasKey {\n+\n+    public static Object removeIfHasKey(Strand strand, MapValue<?, ?> m, String k) {\n+        String op = \"removeIfHasKey()\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9894e6269d1c2e2f20b1c5399bc79c5b75a49211"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NTc5NDk3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21459#pullrequestreview-368579497", "createdAt": "2020-03-04T08:25:52Z", "commit": {"oid": "9894e6269d1c2e2f20b1c5399bc79c5b75a49211"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODoyNTo1MlrOFxjxIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODoyNTo1MlrOFxjxIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUxMDU2MA==", "bodyText": "Need to verify whether this is consistent with how freeze panics are handled in other places. (i.e., the error message and its format)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21459#discussion_r387510560", "createdAt": "2020-03-04T08:25:52Z", "author": {"login": "pubudu91"}, "path": "langlib/lang.map/src/main/java/org/ballerinalang/langlib/map/RemoveIfHasKey.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.langlib.map;\n+\n+import org.ballerinalang.jvm.BallerinaErrors;\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.jvm.values.MapValue;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+import org.ballerinalang.natives.annotations.ReturnType;\n+\n+import static org.ballerinalang.jvm.MapUtils.checkIsMapOnlyOperation;\n+import static org.ballerinalang.jvm.MapUtils.checkValidFieldForRecord;\n+\n+/**\n+ * Extern function to remove element from the map if key exists.\n+ * ballerina.model.map:removeIfHasKey(string)\n+ *\n+ * @since 1.2.0\n+ */\n+@BallerinaFunction(\n+        orgName = \"ballerina\", packageName = \"lang.map\", functionName = \"removeIfHasKey\",\n+        args = {@Argument(name = \"m\", type = TypeKind.MAP), @Argument(name = \"k\", type = TypeKind.STRING)},\n+        returnType = {@ReturnType(type = TypeKind.ANY)},\n+        isPublic = true\n+)\n+public class RemoveIfHasKey {\n+\n+    public static Object removeIfHasKey(Strand strand, MapValue<?, ?> m, String k) {\n+        String op = \"removeIfHasKey()\";\n+\n+        checkIsMapOnlyOperation(m.getType(), op);\n+        checkValidFieldForRecord(m, k, op);\n+        try {\n+            return m.remove(k);\n+        } catch (org.ballerinalang.jvm.util.exceptions.BLangFreezeException e) {\n+            throw BallerinaErrors.createError(e.getMessage(),\n+                    \"Failed to remove element from map: \" + e.getDetail());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9894e6269d1c2e2f20b1c5399bc79c5b75a49211"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04fec55142654310bb492463e38836d6e61ca3e9", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/04fec55142654310bb492463e38836d6e61ca3e9", "committedDate": "2020-03-05T05:28:59Z", "message": "Add removeIfHasKey to map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "252c3bee4a939a7cc4f1ff29c11f153403a42d1b", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/252c3bee4a939a7cc4f1ff29c11f153403a42d1b", "committedDate": "2020-03-05T05:28:59Z", "message": "fix failing language server completion tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb38104f721152fe1e0e41c65d9018f439b792a1", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fb38104f721152fe1e0e41c65d9018f439b792a1", "committedDate": "2020-03-05T05:28:59Z", "message": "Add support for record"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee20a950d44acfc12ff41f7e0e0b0eed38780044", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ee20a950d44acfc12ff41f7e0e0b0eed38780044", "committedDate": "2020-03-05T05:28:59Z", "message": "Add tests for records"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54c5692fdb6bf6524133277af4a8719f4849b68d", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/54c5692fdb6bf6524133277af4a8719f4849b68d", "committedDate": "2020-03-05T05:28:59Z", "message": "Add tests to langlib tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba0698bc170af433b86279e2b832b9d00ea03b45", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ba0698bc170af433b86279e2b832b9d00ea03b45", "committedDate": "2020-03-05T05:30:07Z", "message": "Add method to a constant"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ceafe14a189ebe1129e7dca8e3b4e3e0e765bb2", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8ceafe14a189ebe1129e7dca8e3b4e3e0e765bb2", "committedDate": "2020-03-05T04:24:52Z", "message": "Add method to a constant"}, "afterCommit": {"oid": "ba0698bc170af433b86279e2b832b9d00ea03b45", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ba0698bc170af433b86279e2b832b9d00ea03b45", "committedDate": "2020-03-05T05:30:07Z", "message": "Add method to a constant"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3949, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}