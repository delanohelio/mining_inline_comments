{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0ODY3ODE4", "number": 26725, "title": "Support API to get current module from runtime", "bodyText": "Purpose\nFixes #24443\nFixes #26054\nThis will support an api to get current module for given interop function environment.\nAlso fixes the ballerina environment passing issue with instance methods(receivers) and ballerina object methods.\nAdded test cases for each scenario.\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-11-03T16:53:38Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26725", "merged": true, "mergeCommit": {"oid": "9b6edd29c675f5fcf41832be7039aef0ac756e39"}, "closed": true, "closedAt": "2020-11-17T09:35:43Z", "author": {"login": "warunalakshitha"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdY79uNAH2gAyNTE0ODY3ODE4OjY5M2U1ZjljOGQ3YjMyODBhMTRkZmE3MTY5OTJkN2FjNGUyMzZhYjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddUpGdAFqTUzMjA4ODU0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "693e5f9c8d7b3280a14dfa716992d7ac4e236ab2", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/693e5f9c8d7b3280a14dfa716992d7ac4e236ab2", "committedDate": "2020-11-03T16:43:14Z", "message": "Support bal env for object and receiver interops"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c7d1ac361a57f98322d63e9b38a63f8886ca7be", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4c7d1ac361a57f98322d63e9b38a63f8886ca7be", "committedDate": "2020-11-03T16:45:30Z", "message": "Support getting current module from bal env"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "148d16123cc697de510835215218c95bf4fb0f4c", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/148d16123cc697de510835215218c95bf4fb0f4c", "committedDate": "2020-11-03T16:45:44Z", "message": "Add tests for getting current module for interops"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5482fa808526ffdf34a96da2763ec44278c5d050", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5482fa808526ffdf34a96da2763ec44278c5d050", "committedDate": "2020-11-03T17:41:44Z", "message": "Merge master branch and fix conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5d812c7c25ea74a24936f8561cb111210c9020e", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d5d812c7c25ea74a24936f8561cb111210c9020e", "committedDate": "2020-11-10T10:07:55Z", "message": "Merge master branch and fix conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTI2NTMz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26725#pullrequestreview-527126533", "createdAt": "2020-11-10T11:53:19Z", "commit": {"oid": "d5d812c7c25ea74a24936f8561cb111210c9020e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMTo1MzoyMFrOHwZG7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMTo1NDozNFrOHwZJfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwNTA2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    mv.visitLdcInsn(module.org.value);\n          \n          \n            \n                    mv.visitLdcInsn(IdentifierUtils.decodeIdentifier(module.org.value));", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26725#discussion_r520505069", "createdAt": "2020-11-10T11:53:20Z", "author": {"login": "HindujaB"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "diffHunk": "@@ -256,20 +260,41 @@ private static void generateStaticInitializer(ClassWriter cw, String className,\n         }\n         MethodVisitor mv = cw.visitMethod(ACC_STATIC, \"<clinit>\", \"()V\", null, null);\n         if (isInitClass) {\n-            String lockStoreClass = \"L\" + LOCK_STORE + \";\";\n-            mv.visitTypeInsn(NEW, LOCK_STORE);\n-            mv.visitInsn(DUP);\n-            mv.visitMethodInsn(INVOKESPECIAL, LOCK_STORE, JVM_INIT_METHOD, \"()V\", false);\n-            mv.visitFieldInsn(PUTSTATIC, className, LOCK_STORE_VAR_NAME, lockStoreClass);\n+            setLockStoreField(mv, className);\n             setServiceEPAvailableField(cw, mv, serviceEPAvailable, className);\n             setModuleStatusField(cw, mv, className);\n+            setCurrentModuleField(cw, mv, module, className);\n         }\n         JvmCodeGenUtil.generateStrandMetadata(mv, className, module, asyncDataCollector);\n         mv.visitInsn(RETURN);\n         mv.visitMaxs(0, 0);\n         mv.visitEnd();\n     }\n \n+    private static void setLockStoreField(MethodVisitor mv, String className) {\n+        String lockStoreClass = \"L\" + LOCK_STORE + \";\";\n+        mv.visitTypeInsn(NEW, LOCK_STORE);\n+        mv.visitInsn(DUP);\n+        mv.visitMethodInsn(INVOKESPECIAL, LOCK_STORE, JVM_INIT_METHOD, \"()V\", false);\n+        mv.visitFieldInsn(PUTSTATIC, className, LOCK_STORE_VAR_NAME, lockStoreClass);\n+    }\n+\n+    private static void setCurrentModuleField(ClassWriter cw, MethodVisitor mv, BIRPackage module,\n+                                              String moduleInitClass) {\n+        FieldVisitor fv = cw.visitField(ACC_PUBLIC + ACC_STATIC, CURRENT_MODULE_VAR_NAME,\n+                                        String.format(\"L%s;\", MODULE), null, null);\n+        fv.visitEnd();\n+        mv.visitTypeInsn(Opcodes.NEW, MODULE);\n+        mv.visitInsn(Opcodes.DUP);\n+        mv.visitLdcInsn(module.org.value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5d812c7c25ea74a24936f8561cb111210c9020e"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwNTcyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    mv.visitLdcInsn(module.name.value);\n          \n          \n            \n                    mv.visitLdcInsn(IdentifierUtils.decodeIdentifier(module.name.value));", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26725#discussion_r520505724", "createdAt": "2020-11-10T11:54:34Z", "author": {"login": "HindujaB"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "diffHunk": "@@ -256,20 +260,41 @@ private static void generateStaticInitializer(ClassWriter cw, String className,\n         }\n         MethodVisitor mv = cw.visitMethod(ACC_STATIC, \"<clinit>\", \"()V\", null, null);\n         if (isInitClass) {\n-            String lockStoreClass = \"L\" + LOCK_STORE + \";\";\n-            mv.visitTypeInsn(NEW, LOCK_STORE);\n-            mv.visitInsn(DUP);\n-            mv.visitMethodInsn(INVOKESPECIAL, LOCK_STORE, JVM_INIT_METHOD, \"()V\", false);\n-            mv.visitFieldInsn(PUTSTATIC, className, LOCK_STORE_VAR_NAME, lockStoreClass);\n+            setLockStoreField(mv, className);\n             setServiceEPAvailableField(cw, mv, serviceEPAvailable, className);\n             setModuleStatusField(cw, mv, className);\n+            setCurrentModuleField(cw, mv, module, className);\n         }\n         JvmCodeGenUtil.generateStrandMetadata(mv, className, module, asyncDataCollector);\n         mv.visitInsn(RETURN);\n         mv.visitMaxs(0, 0);\n         mv.visitEnd();\n     }\n \n+    private static void setLockStoreField(MethodVisitor mv, String className) {\n+        String lockStoreClass = \"L\" + LOCK_STORE + \";\";\n+        mv.visitTypeInsn(NEW, LOCK_STORE);\n+        mv.visitInsn(DUP);\n+        mv.visitMethodInsn(INVOKESPECIAL, LOCK_STORE, JVM_INIT_METHOD, \"()V\", false);\n+        mv.visitFieldInsn(PUTSTATIC, className, LOCK_STORE_VAR_NAME, lockStoreClass);\n+    }\n+\n+    private static void setCurrentModuleField(ClassWriter cw, MethodVisitor mv, BIRPackage module,\n+                                              String moduleInitClass) {\n+        FieldVisitor fv = cw.visitField(ACC_PUBLIC + ACC_STATIC, CURRENT_MODULE_VAR_NAME,\n+                                        String.format(\"L%s;\", MODULE), null, null);\n+        fv.visitEnd();\n+        mv.visitTypeInsn(Opcodes.NEW, MODULE);\n+        mv.visitInsn(Opcodes.DUP);\n+        mv.visitLdcInsn(module.org.value);\n+        mv.visitLdcInsn(module.name.value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5d812c7c25ea74a24936f8561cb111210c9020e"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49c768d595018cbfa358a43a7934d82b6193c76e", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/49c768d595018cbfa358a43a7934d82b6193c76e", "committedDate": "2020-11-10T18:02:41Z", "message": "Add code review suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9429c3a9a0d275bc47fe5b3c8c7523fc796c7da4", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9429c3a9a0d275bc47fe5b3c8c7523fc796c7da4", "committedDate": "2020-11-11T05:08:02Z", "message": "Remove module constant from observability"}, "afterCommit": {"oid": "031b34a557ba75feb971b5100e986b6da022c845", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/031b34a557ba75feb971b5100e986b6da022c845", "committedDate": "2020-11-11T06:06:28Z", "message": "Remove module constant from observability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dccab252580d6a7567f080c2c5d3f67444878ad", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1dccab252580d6a7567f080c2c5d3f67444878ad", "committedDate": "2020-11-11T06:08:51Z", "message": "Remove module constant from observability"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "031b34a557ba75feb971b5100e986b6da022c845", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/031b34a557ba75feb971b5100e986b6da022c845", "committedDate": "2020-11-11T06:06:28Z", "message": "Remove module constant from observability"}, "afterCommit": {"oid": "1dccab252580d6a7567f080c2c5d3f67444878ad", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1dccab252580d6a7567f080c2c5d3f67444878ad", "committedDate": "2020-11-11T06:08:51Z", "message": "Remove module constant from observability"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MDU0MTQx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26725#pullrequestreview-528054141", "createdAt": "2020-11-11T10:37:48Z", "commit": {"oid": "1dccab252580d6a7567f080c2c5d3f67444878ad"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDozNzo0OFrOHxHmPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDozOToxOFrOHxHpSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI2Njc1MQ==", "bodyText": "I have been wondering if there could be a better way rather than having to pass this parameter to many methods", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26725#discussion_r521266751", "createdAt": "2020-11-11T10:37:48Z", "author": {"login": "riyafa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "diffHunk": "@@ -452,7 +477,7 @@ CompiledJarFile generate(BIRNode.BIRPackage module, InteropValidator interopVali\n \n         // generate object/record value classes\n         JvmValueGen valueGen = new JvmValueGen(module, this, methodGen, lambdaGen);\n-        valueGen.generateValueClasses(jarEntries);\n+        valueGen.generateValueClasses(jarEntries, moduleInitClass);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dccab252580d6a7567f080c2c5d3f67444878ad"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI2NzUzMA==", "bodyText": "I think it is a bad idea to pass a null to a constructor. We can have two constructors in the Environment class to handle this.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26725#discussion_r521267530", "createdAt": "2020-11-11T10:39:18Z", "author": {"login": "riyafa"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/observability/ObserveUtils.java", "diffHunk": "@@ -257,7 +257,7 @@ public static void logMessageToActiveSpan(String logLevel, Supplier<String> logM\n         if (!tracingEnabled) {\n             return;\n         }\n-        Environment balEnv = new Environment(Scheduler.getStrand());\n+        Environment balEnv = new Environment(Scheduler.getStrand(), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dccab252580d6a7567f080c2c5d3f67444878ad"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "38810e5a0cff2d76e4d14120ec5bc307c9168a32", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/38810e5a0cff2d76e4d14120ec5bc307c9168a32", "committedDate": "2020-11-11T13:43:10Z", "message": "Fix review comments"}, "afterCommit": {"oid": "eca9aa0e7987f902a4034cfe40b752d7a17faf9d", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eca9aa0e7987f902a4034cfe40b752d7a17faf9d", "committedDate": "2020-11-11T14:20:50Z", "message": "Fix review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eca9aa0e7987f902a4034cfe40b752d7a17faf9d", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eca9aa0e7987f902a4034cfe40b752d7a17faf9d", "committedDate": "2020-11-11T14:20:50Z", "message": "Fix review comments"}, "afterCommit": {"oid": "11dc01c04bb30289b61343427b1a1ba9c235c998", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/11dc01c04bb30289b61343427b1a1ba9c235c998", "committedDate": "2020-11-11T14:24:11Z", "message": "Fix review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "11dc01c04bb30289b61343427b1a1ba9c235c998", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/11dc01c04bb30289b61343427b1a1ba9c235c998", "committedDate": "2020-11-11T14:24:11Z", "message": "Fix review comments"}, "afterCommit": {"oid": "7538b807ede47315cbad63d32e481abfdd42ab96", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7538b807ede47315cbad63d32e481abfdd42ab96", "committedDate": "2020-11-11T14:26:46Z", "message": "Fix review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8010382bed44e8ce4e0bc124e093e35f9a63a163", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8010382bed44e8ce4e0bc124e093e35f9a63a163", "committedDate": "2020-11-11T14:30:03Z", "message": "Fix review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7538b807ede47315cbad63d32e481abfdd42ab96", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7538b807ede47315cbad63d32e481abfdd42ab96", "committedDate": "2020-11-11T14:26:46Z", "message": "Fix review comments"}, "afterCommit": {"oid": "8010382bed44e8ce4e0bc124e093e35f9a63a163", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8010382bed44e8ce4e0bc124e093e35f9a63a163", "committedDate": "2020-11-11T14:30:03Z", "message": "Fix review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NzQxNTIy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26725#pullrequestreview-529741522", "createdAt": "2020-11-13T05:09:59Z", "commit": {"oid": "8010382bed44e8ce4e0bc124e093e35f9a63a163"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNTowOTo1OVrOHycHEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNToxNjoyMlrOHycbNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY1MTQwOA==", "bodyText": "Since this is unit tests we can use the test:assertEquals function from the ballerina/test package. Then we need not define this function", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26725#discussion_r522651408", "createdAt": "2020-11-13T05:09:59Z", "author": {"login": "riyafa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/javainterop/basic/instance_method_tests.bal", "diffHunk": "@@ -191,3 +200,15 @@ function newByte(int val) returns handle = @java:Constructor {\n    'class: \"java.lang.Byte\"\n } external;\n \n+const ASSERTION_ERROR_REASON = \"AssertionError\";\n+\n+function assertEquality(any|error expected, any|error actual) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8010382bed44e8ce4e0bc124e093e35f9a63a163"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY1NTQwNg==", "bodyText": "Shall we also have test where self is also passed as a parameter for an instance method? I mean self and Environment both.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26725#discussion_r522655406", "createdAt": "2020-11-13T05:15:02Z", "author": {"login": "riyafa"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/nativeimpl/jvm/tests/InstanceMethods.java", "diffHunk": "@@ -172,4 +176,10 @@ public int getInt(ObjectValue objectValue, int x) {\n     public int getRandomInt() {\n         return 123;\n     }\n+\n+    public BString getCurrentModule(Environment env, long b) {\n+        Module callerModule = env.getCurrentModule();\n+        return StringUtils.fromString(callerModule.getOrg() + \"#\" + callerModule.getName() + \"#\" +\n+                                              callerModule.getVersion() + \"#\" + b);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8010382bed44e8ce4e0bc124e093e35f9a63a163"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY1NjU2Nw==", "bodyText": "Shall we also see what happens if the methods with both without self and with self and Environment have the same name(overloaded)?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26725#discussion_r522656567", "createdAt": "2020-11-13T05:16:22Z", "author": {"login": "riyafa"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/nativeimpl/jvm/tests/InstanceMethods.java", "diffHunk": "@@ -172,4 +176,10 @@ public int getInt(ObjectValue objectValue, int x) {\n     public int getRandomInt() {\n         return 123;\n     }\n+\n+    public BString getCurrentModule(Environment env, long b) {\n+        Module callerModule = env.getCurrentModule();\n+        return StringUtils.fromString(callerModule.getOrg() + \"#\" + callerModule.getName() + \"#\" +\n+                                              callerModule.getVersion() + \"#\" + b);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY1NTQwNg=="}, "originalCommit": {"oid": "8010382bed44e8ce4e0bc124e093e35f9a63a163"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdc4e377f50cbf1e025d3da7fd4a958a8904231a", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bdc4e377f50cbf1e025d3da7fd4a958a8904231a", "committedDate": "2020-11-16T09:06:16Z", "message": "Replace assertEquality with test:assertEqual"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMjI1NjQ5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26725#pullrequestreview-531225649", "createdAt": "2020-11-16T11:13:17Z", "commit": {"oid": "bdc4e377f50cbf1e025d3da7fd4a958a8904231a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMToxMzoxN1rOHz21ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMToxMzoxN1rOHz21ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDEzNzkyMw==", "bodyText": "We can add the function name to the above data provider", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26725#discussion_r524137923", "createdAt": "2020-11-16T11:13:17Z", "author": {"login": "riyafa"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/javainterop/basic/StaticMethodTest.java", "diffHunk": "@@ -171,4 +171,9 @@ public void testBalEnvSlowAsync(String funcName) {\n                 \"testBalEnvFastAsync\", \"testReturnNullString\", \"testReturnNotNullString\", \"testStaticResolve\",\n                 \"testStringCast\"};\n     }\n+\n+    @Test\n+    public void testGetCurrentModule() {\n+        BRunUtil.invoke(result, \"testGetCurrentModule\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdc4e377f50cbf1e025d3da7fd4a958a8904231a"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bf442607482613377ee533d2e3a6d9e0a553486", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4bf442607482613377ee533d2e3a6d9e0a553486", "committedDate": "2020-11-16T12:37:39Z", "message": "Add test cases for bal env with overloaded methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6391d186f7b4100703e45374912567ae80651377", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6391d186f7b4100703e45374912567ae80651377", "committedDate": "2020-11-16T12:25:29Z", "message": "Add test cases for bal env with overloaded methods"}, "afterCommit": {"oid": "4bf442607482613377ee533d2e3a6d9e0a553486", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4bf442607482613377ee533d2e3a6d9e0a553486", "committedDate": "2020-11-16T12:37:39Z", "message": "Add test cases for bal env with overloaded methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8519a46361b73990d3352d8d8161dd66f443d7f5", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8519a46361b73990d3352d8d8161dd66f443d7f5", "committedDate": "2020-11-16T12:38:28Z", "message": "Merge master branch"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMDg4NTQw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26725#pullrequestreview-532088540", "createdAt": "2020-11-17T07:44:02Z", "commit": {"oid": "8519a46361b73990d3352d8d8161dd66f443d7f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3297, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}