{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwODUzMjQw", "number": 26008, "title": "[Formatter] Fix several formatting issues", "bodyText": "Purpose\nFixes #26002\nFixes #26001\nFixes #26005\nFixes #26004\nDisables the formatting of nested if statements and query expressions in order to reduce the priority levels of the following issues.\n#25999\n#25988\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-09-22T10:50:22Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26008", "merged": true, "mergeCommit": {"oid": "8902f18c478cc1836510dc75976bd3c9253b9301"}, "closed": true, "closedAt": "2020-09-22T14:13:10Z", "author": {"login": "IrushiL"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLS73cgH2gAyNDkwODUzMjQwOmYyZTFkMGM1MjI5MjBhYzVjMWVhMTRlMDVlMTU3MTAzZjU2N2UwZDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLYpEfgFqTQ5MzUwNDg1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f2e1d0c522920ac5c1ea14e05e157103f567e0d2", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f2e1d0c522920ac5c1ea14e05e157103f567e0d2", "committedDate": "2020-09-22T07:34:05Z", "message": "Fix the union type issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eeb61d79fba4eee6e90fe825cdfa40fd8d5ab6d6", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eeb61d79fba4eee6e90fe825cdfa40fd8d5ab6d6", "committedDate": "2020-09-22T07:44:54Z", "message": "Fix the issue in the while statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23036d6647f656a4b5381b6d71768b6c5eac4b76", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/23036d6647f656a4b5381b6d71768b6c5eac4b76", "committedDate": "2020-09-22T08:10:19Z", "message": "Disable the if else issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab81d6c51e03adfb924ffb55aeb8944063d41b81", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ab81d6c51e03adfb924ffb55aeb8944063d41b81", "committedDate": "2020-09-22T08:24:08Z", "message": "Fix issues in method calls and panic statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b67da2ef5eabd2b8cb0b7efd5f8a5122a92032a6", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b67da2ef5eabd2b8cb0b7efd5f8a5122a92032a6", "committedDate": "2020-09-22T08:34:03Z", "message": "Fix the new line endings issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc0b18800f5e254c2131ef5a31c2a617b2a9d42d", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fc0b18800f5e254c2131ef5a31c2a617b2a9d42d", "committedDate": "2020-09-22T10:02:23Z", "message": "Add test cases for query expressions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ad35f4e787106fbf3e3448d6669a827825eba21", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0ad35f4e787106fbf3e3448d6669a827825eba21", "committedDate": "2020-09-22T10:41:33Z", "message": "Disable the query expression formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5282dd4c7522577352827c93021c322389f81df", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f5282dd4c7522577352827c93021c322389f81df", "committedDate": "2020-09-22T10:44:30Z", "message": "Fix the streaming node"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f0b843031c3e28fbb4fc2dd14b591b9d2a8ee44", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5f0b843031c3e28fbb4fc2dd14b591b9d2a8ee44", "committedDate": "2020-09-22T10:53:46Z", "message": "Fix formatter issue for type-descriptors with parenthesis"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMzQ4MjUw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26008#pullrequestreview-493348250", "createdAt": "2020-09-22T11:05:58Z", "commit": {"oid": "5f0b843031c3e28fbb4fc2dd14b591b9d2a8ee44"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMTowNTo1OFrOHV06wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMTowNTo1OFrOHV06wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY0OTE1Mw==", "bodyText": "Shall we get rid of these comments?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26008#discussion_r492649153", "createdAt": "2020-09-22T11:05:58Z", "author": {"login": "sanjana"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -2996,26 +3005,26 @@ public SelectClauseNode transform(SelectClauseNode selectClauseNode) {\n \n     @Override\n     public QueryExpressionNode transform(QueryExpressionNode queryExpressionNode) {\n-        if (!isInLineRange(queryExpressionNode, lineRange)) {\n+//        if (!isInLineRange(queryExpressionNode, lineRange)) {\n             return queryExpressionNode;\n-        }\n-        QueryConstructTypeNode queryConstructType =\n-                this.modifyNode(queryExpressionNode.queryConstructType().orElse(null));\n-        QueryPipelineNode queryPipeline = this.modifyNode(queryExpressionNode.queryPipeline());\n-        SelectClauseNode selectClause = this.modifyNode(queryExpressionNode.selectClause());\n-        OnConflictClauseNode onConflictClause = this.modifyNode(queryExpressionNode.onConflictClause().orElse(null));\n-        if (queryConstructType != null) {\n-            queryExpressionNode = queryExpressionNode.modify()\n-                    .withQueryConstructType(queryConstructType).apply();\n-        }\n-        if (onConflictClause != null) {\n-            queryExpressionNode = queryExpressionNode.modify()\n-                    .withOnConflictClause(onConflictClause).apply();\n-        }\n-        return queryExpressionNode.modify()\n-                .withQueryPipeline(queryPipeline)\n-                .withSelectClause(selectClause)\n-                .apply();\n+//        }\n+//        QueryConstructTypeNode queryConstructType =\n+//                this.modifyNode(queryExpressionNode.queryConstructType().orElse(null));\n+//        QueryPipelineNode queryPipeline = this.modifyNode(queryExpressionNode.queryPipeline());\n+//        SelectClauseNode selectClause = this.modifyNode(queryExpressionNode.selectClause());\n+//        OnConflictClauseNode onConflictClause = this.modifyNode(queryExpressionNode.onConflictClause().orElse(null));\n+//        if (queryConstructType != null) {\n+//            queryExpressionNode = queryExpressionNode.modify()\n+//                    .withQueryConstructType(queryConstructType).apply();\n+//        }\n+//        if (onConflictClause != null) {\n+//            queryExpressionNode = queryExpressionNode.modify()\n+//                    .withOnConflictClause(onConflictClause).apply();\n+//        }\n+//        return queryExpressionNode.modify()\n+//                .withQueryPipeline(queryPipeline)\n+//                .withSelectClause(selectClause)\n+//                .apply();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f0b843031c3e28fbb4fc2dd14b591b9d2a8ee44"}, "originalPosition": 144}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMzYxNzM4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26008#pullrequestreview-493361738", "createdAt": "2020-09-22T11:27:03Z", "commit": {"oid": "5f0b843031c3e28fbb4fc2dd14b591b9d2a8ee44"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMToyNzowNFrOHV1iag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMToyNzowNFrOHV1iag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY1OTMwNg==", "bodyText": "This will create an impact when formatting the following type of nested-if code.\npublic function foo() {\n    if (true) {\n        \n        if (1 < 2) {\n            int x = 2;\n        }\n    } else {\n        int y = 0;\n        return i;\n    }\n}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26008#discussion_r492659306", "createdAt": "2020-09-22T11:27:04Z", "author": {"login": "sanjana"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -912,7 +914,7 @@ public SimpleNameReferenceNode transform(SimpleNameReferenceNode simpleNameRefer\n \n     @Override\n     public IfElseStatementNode transform(IfElseStatementNode ifElseStatementNode) {\n-        if (!isInLineRange(ifElseStatementNode, lineRange)) {\n+        if (!isInLineRange(ifElseStatementNode, lineRange) || !nestedIfBlock(ifElseStatementNode).isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f0b843031c3e28fbb4fc2dd14b591b9d2a8ee44"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f6ed5255fd32467abfbb94e0be373bfb6b8fefa", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7f6ed5255fd32467abfbb94e0be373bfb6b8fefa", "committedDate": "2020-09-22T11:39:18Z", "message": "Add a new if else test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb979f22861749933fb75bea27b0a8c9241852aa", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fb979f22861749933fb75bea27b0a8c9241852aa", "committedDate": "2020-09-22T11:40:51Z", "message": "Fix the issue with leading comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMzk1MTIw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26008#pullrequestreview-493395120", "createdAt": "2020-09-22T12:15:10Z", "commit": {"oid": "5f0b843031c3e28fbb4fc2dd14b591b9d2a8ee44"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3d4f4eac4c8264876afd307c758e66c963244c1", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b3d4f4eac4c8264876afd307c758e66c963244c1", "committedDate": "2020-09-22T13:30:01Z", "message": "Fix the preserving of comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNTA0ODU4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26008#pullrequestreview-493504858", "createdAt": "2020-09-22T14:12:59Z", "commit": {"oid": "b3d4f4eac4c8264876afd307c758e66c963244c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4643, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}