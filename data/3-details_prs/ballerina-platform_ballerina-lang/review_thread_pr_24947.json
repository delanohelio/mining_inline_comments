{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2ODg4MTcx", "number": 24947, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMToxMDozM1rOESV2kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMToxNjo0OVrOESV92A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjY3ODU4OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/adapter/ServiceDebugTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMToxMDozM1rOG3d-UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODozMzo0OVrOG6AgpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxNTk1Mg==", "bodyText": "Shall we add this to an @AfterClass method? If the test throws an error before executing this line, the termination would not take place. When we define the annotation we should define it as @AfterClass(alwaysRun=true).", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24947#discussion_r460815952", "createdAt": "2020-07-27T11:10:33Z", "author": {"login": "azinneera"}, "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/adapter/ServiceDebugTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.debugger.test.adapter;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.ballerinalang.debugger.test.DebugAdapterBaseTestCase;\n+import org.ballerinalang.debugger.test.utils.BallerinaTestDebugPoint;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.eclipse.lsp4j.debug.StoppedEventArguments;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+\n+import static org.ballerinalang.debugger.test.utils.DebugUtils.findFreePort;\n+\n+/**\n+ * Test class for service related debug scenarios.\n+ */\n+public class ServiceDebugTest extends DebugAdapterBaseTestCase {\n+    private String projectPath;\n+\n+    @BeforeClass\n+    public void setup() {\n+        testProjectName = \"breakpoint-tests\";\n+        testModuleName = \"myService\";\n+        projectPath = testProjectBaseDir + File.separator + testProjectName;\n+\n+        testModuleFileName = \"tests\" + File.separator + \"hello_service_test.bal\";\n+        testProjectPath = testProjectBaseDir.toString() + File.separator + testProjectName;\n+        testEntryFilePath = Paths.get(testProjectPath, \"src\", testModuleName, testModuleFileName).toString();\n+    }\n+\n+    @Test\n+    public void testServiceDebugScenarios() throws BallerinaTestException {\n+        String fileName = \"serviceDirectory\" + File.separator + \"serviceFile.bal\";\n+        String filePath = Paths.get(testProjectPath, \"src\", testModuleName, fileName).toString();\n+        int port = findFreePort();\n+\n+        runDebuggeeProgram(projectPath, port);\n+        addBreakPoint(new BallerinaTestDebugPoint(filePath, 36));\n+        initDebugSession(null, port);\n+\n+        // Test for service debug engage\n+        Pair<BallerinaTestDebugPoint, StoppedEventArguments> debugHitInfo = waitForDebugHit(20000);\n+        Assert.assertEquals(debugHitInfo.getLeft(), testBreakpoints.get(0));\n+\n+        terminateDebugSession();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "906f93082429b8379d6946b3622d26bbc5dd0d8c"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkzOTkzNA==", "bodyText": "@azinneera I think here we have a requirement to terminate (and re-initiate) the debug session for each test case. Therefore shall we consider using @AfterMethod instead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24947#discussion_r460939934", "createdAt": "2020-07-27T14:39:26Z", "author": {"login": "NipunaRanasinghe"}, "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/adapter/ServiceDebugTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.debugger.test.adapter;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.ballerinalang.debugger.test.DebugAdapterBaseTestCase;\n+import org.ballerinalang.debugger.test.utils.BallerinaTestDebugPoint;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.eclipse.lsp4j.debug.StoppedEventArguments;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+\n+import static org.ballerinalang.debugger.test.utils.DebugUtils.findFreePort;\n+\n+/**\n+ * Test class for service related debug scenarios.\n+ */\n+public class ServiceDebugTest extends DebugAdapterBaseTestCase {\n+    private String projectPath;\n+\n+    @BeforeClass\n+    public void setup() {\n+        testProjectName = \"breakpoint-tests\";\n+        testModuleName = \"myService\";\n+        projectPath = testProjectBaseDir + File.separator + testProjectName;\n+\n+        testModuleFileName = \"tests\" + File.separator + \"hello_service_test.bal\";\n+        testProjectPath = testProjectBaseDir.toString() + File.separator + testProjectName;\n+        testEntryFilePath = Paths.get(testProjectPath, \"src\", testModuleName, testModuleFileName).toString();\n+    }\n+\n+    @Test\n+    public void testServiceDebugScenarios() throws BallerinaTestException {\n+        String fileName = \"serviceDirectory\" + File.separator + \"serviceFile.bal\";\n+        String filePath = Paths.get(testProjectPath, \"src\", testModuleName, fileName).toString();\n+        int port = findFreePort();\n+\n+        runDebuggeeProgram(projectPath, port);\n+        addBreakPoint(new BallerinaTestDebugPoint(filePath, 36));\n+        initDebugSession(null, port);\n+\n+        // Test for service debug engage\n+        Pair<BallerinaTestDebugPoint, StoppedEventArguments> debugHitInfo = waitForDebugHit(20000);\n+        Assert.assertEquals(debugHitInfo.getLeft(), testBreakpoints.get(0));\n+\n+        terminateDebugSession();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxNTk1Mg=="}, "originalCommit": {"oid": "906f93082429b8379d6946b3622d26bbc5dd0d8c"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3MDQ5NA==", "bodyText": "+1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24947#discussion_r461070494", "createdAt": "2020-07-27T18:00:37Z", "author": {"login": "azinneera"}, "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/adapter/ServiceDebugTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.debugger.test.adapter;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.ballerinalang.debugger.test.DebugAdapterBaseTestCase;\n+import org.ballerinalang.debugger.test.utils.BallerinaTestDebugPoint;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.eclipse.lsp4j.debug.StoppedEventArguments;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+\n+import static org.ballerinalang.debugger.test.utils.DebugUtils.findFreePort;\n+\n+/**\n+ * Test class for service related debug scenarios.\n+ */\n+public class ServiceDebugTest extends DebugAdapterBaseTestCase {\n+    private String projectPath;\n+\n+    @BeforeClass\n+    public void setup() {\n+        testProjectName = \"breakpoint-tests\";\n+        testModuleName = \"myService\";\n+        projectPath = testProjectBaseDir + File.separator + testProjectName;\n+\n+        testModuleFileName = \"tests\" + File.separator + \"hello_service_test.bal\";\n+        testProjectPath = testProjectBaseDir.toString() + File.separator + testProjectName;\n+        testEntryFilePath = Paths.get(testProjectPath, \"src\", testModuleName, testModuleFileName).toString();\n+    }\n+\n+    @Test\n+    public void testServiceDebugScenarios() throws BallerinaTestException {\n+        String fileName = \"serviceDirectory\" + File.separator + \"serviceFile.bal\";\n+        String filePath = Paths.get(testProjectPath, \"src\", testModuleName, fileName).toString();\n+        int port = findFreePort();\n+\n+        runDebuggeeProgram(projectPath, port);\n+        addBreakPoint(new BallerinaTestDebugPoint(filePath, 36));\n+        initDebugSession(null, port);\n+\n+        // Test for service debug engage\n+        Pair<BallerinaTestDebugPoint, StoppedEventArguments> debugHitInfo = waitForDebugHit(20000);\n+        Assert.assertEquals(debugHitInfo.getLeft(), testBreakpoints.get(0));\n+\n+        terminateDebugSession();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxNTk1Mg=="}, "originalCommit": {"oid": "906f93082429b8379d6946b3622d26bbc5dd0d8c"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ3ODk0OQ==", "bodyText": "Fixed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24947#discussion_r463478949", "createdAt": "2020-07-31T08:33:49Z", "author": {"login": "praveennadarajah"}, "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/adapter/ServiceDebugTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.debugger.test.adapter;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.ballerinalang.debugger.test.DebugAdapterBaseTestCase;\n+import org.ballerinalang.debugger.test.utils.BallerinaTestDebugPoint;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.eclipse.lsp4j.debug.StoppedEventArguments;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+\n+import static org.ballerinalang.debugger.test.utils.DebugUtils.findFreePort;\n+\n+/**\n+ * Test class for service related debug scenarios.\n+ */\n+public class ServiceDebugTest extends DebugAdapterBaseTestCase {\n+    private String projectPath;\n+\n+    @BeforeClass\n+    public void setup() {\n+        testProjectName = \"breakpoint-tests\";\n+        testModuleName = \"myService\";\n+        projectPath = testProjectBaseDir + File.separator + testProjectName;\n+\n+        testModuleFileName = \"tests\" + File.separator + \"hello_service_test.bal\";\n+        testProjectPath = testProjectBaseDir.toString() + File.separator + testProjectName;\n+        testEntryFilePath = Paths.get(testProjectPath, \"src\", testModuleName, testModuleFileName).toString();\n+    }\n+\n+    @Test\n+    public void testServiceDebugScenarios() throws BallerinaTestException {\n+        String fileName = \"serviceDirectory\" + File.separator + \"serviceFile.bal\";\n+        String filePath = Paths.get(testProjectPath, \"src\", testModuleName, fileName).toString();\n+        int port = findFreePort();\n+\n+        runDebuggeeProgram(projectPath, port);\n+        addBreakPoint(new BallerinaTestDebugPoint(filePath, 36));\n+        initDebugSession(null, port);\n+\n+        // Test for service debug engage\n+        Pair<BallerinaTestDebugPoint, StoppedEventArguments> debugHitInfo = waitForDebugHit(20000);\n+        Assert.assertEquals(debugHitInfo.getLeft(), testBreakpoints.get(0));\n+\n+        terminateDebugSession();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxNTk1Mg=="}, "originalCommit": {"oid": "906f93082429b8379d6946b3622d26bbc5dd0d8c"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjY5NzIwOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/adapter/ServiceDebugTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMToxNjo0OVrOG3eJfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwODozMzozNVrOG6AgPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxODgxMg==", "bodyText": "Shall we change the above 2 lines to use Paths.get since File.sperator is a pre-1.7 JDK way??", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24947#discussion_r460818812", "createdAt": "2020-07-27T11:16:49Z", "author": {"login": "azinneera"}, "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/adapter/ServiceDebugTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.debugger.test.adapter;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.ballerinalang.debugger.test.DebugAdapterBaseTestCase;\n+import org.ballerinalang.debugger.test.utils.BallerinaTestDebugPoint;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.eclipse.lsp4j.debug.StoppedEventArguments;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+\n+import static org.ballerinalang.debugger.test.utils.DebugUtils.findFreePort;\n+\n+/**\n+ * Test class for service related debug scenarios.\n+ */\n+public class ServiceDebugTest extends DebugAdapterBaseTestCase {\n+    private String projectPath;\n+\n+    @BeforeClass\n+    public void setup() {\n+        testProjectName = \"breakpoint-tests\";\n+        testModuleName = \"myService\";\n+        projectPath = testProjectBaseDir + File.separator + testProjectName;\n+\n+        testModuleFileName = \"tests\" + File.separator + \"hello_service_test.bal\";\n+        testProjectPath = testProjectBaseDir.toString() + File.separator + testProjectName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "906f93082429b8379d6946b3622d26bbc5dd0d8c"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ3ODg0Ng==", "bodyText": "Fixed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24947#discussion_r463478846", "createdAt": "2020-07-31T08:33:35Z", "author": {"login": "praveennadarajah"}, "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/adapter/ServiceDebugTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.debugger.test.adapter;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.ballerinalang.debugger.test.DebugAdapterBaseTestCase;\n+import org.ballerinalang.debugger.test.utils.BallerinaTestDebugPoint;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.eclipse.lsp4j.debug.StoppedEventArguments;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+\n+import static org.ballerinalang.debugger.test.utils.DebugUtils.findFreePort;\n+\n+/**\n+ * Test class for service related debug scenarios.\n+ */\n+public class ServiceDebugTest extends DebugAdapterBaseTestCase {\n+    private String projectPath;\n+\n+    @BeforeClass\n+    public void setup() {\n+        testProjectName = \"breakpoint-tests\";\n+        testModuleName = \"myService\";\n+        projectPath = testProjectBaseDir + File.separator + testProjectName;\n+\n+        testModuleFileName = \"tests\" + File.separator + \"hello_service_test.bal\";\n+        testProjectPath = testProjectBaseDir.toString() + File.separator + testProjectName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxODgxMg=="}, "originalCommit": {"oid": "906f93082429b8379d6946b3622d26bbc5dd0d8c"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 449, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}