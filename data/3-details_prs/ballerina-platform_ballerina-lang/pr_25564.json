{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3Nzg4MjUx", "number": 25564, "title": "Fix functional type related issues.", "bodyText": "Purpose\n$Subject\nFixes #25260, #25259, #25287\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-09-02T12:34:10Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25564", "merged": true, "mergeCommit": {"oid": "c259834dcfb1dd0243647147224291230dc0fe3d"}, "closed": true, "closedAt": "2020-09-08T02:49:29Z", "author": {"login": "rdulmina"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdA_fRsgH2gAyNDc3Nzg4MjUxOjRiZDNhMWEzMDI0Yjg0NzcxNWY0ZTk5YTQ5NjE4OWNmYWZjNGQzZjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGueH5gFqTQ4Mzc2MzI0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4bd3a1a3024b847715f4e99a496189cfafc4d3f0", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4bd3a1a3024b847715f4e99a496189cfafc4d3f0", "committedDate": "2020-08-21T07:15:25Z", "message": "Fix issue parsing complex type desc starting with functional type desc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a385b4dcf45bcdd11012e9dc6ad79b8c7a28b696", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a385b4dcf45bcdd11012e9dc6ad79b8c7a28b696", "committedDate": "2020-09-02T07:21:11Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into bug-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b26e7e812f222c11f9381b87c4c73ca4e593822", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3b26e7e812f222c11f9381b87c4c73ca4e593822", "committedDate": "2020-09-02T12:30:19Z", "message": "Fix public keyword allowed with functional type-desc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3800787f627956d06d9b98e6ced46212770b5aa9", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3800787f627956d06d9b98e6ced46212770b5aa9", "committedDate": "2020-09-02T12:35:19Z", "message": "Add new line."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6be391116750ce85b989965e1ca158325d16a802", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6be391116750ce85b989965e1ca158325d16a802", "committedDate": "2020-09-02T12:54:22Z", "message": "Change diagnosticId for ERROR_QUALIFIER_NOT_ALLOWED."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d181b20617c1868e8ec416b9905120807c5abe7", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7d181b20617c1868e8ec416b9905120807c5abe7", "committedDate": "2020-09-02T12:57:24Z", "message": "Undo unwanted files changed."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fb5a5d7ba1e93ec273c05f92d27a568332f4072", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9fb5a5d7ba1e93ec273c05f92d27a568332f4072", "committedDate": "2020-09-03T04:08:16Z", "message": "Add missing lines to syntax_diagnostic_message.properties."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ff79090cb9ca5c94205e3901ece9168eda9c0ee", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1ff79090cb9ca5c94205e3901ece9168eda9c0ee", "committedDate": "2020-09-03T04:59:45Z", "message": "Add more missing lines to syntax_diagnostic_message.properties."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad68f0e7dcfba7ad3c97b4fe65c5cd13bd18c807", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ad68f0e7dcfba7ad3c97b4fe65c5cd13bd18c807", "committedDate": "2020-09-03T16:00:22Z", "message": "\tMerge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into bug-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e95695a4731a49fac4cc1354442192f06b8eae2", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8e95695a4731a49fac4cc1354442192f06b8eae2", "committedDate": "2020-09-04T06:24:38Z", "message": "allow public qualifier in object field."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bede459c28c7f51d8340d0d55b68fc9fc1039a40", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bede459c28c7f51d8340d0d55b68fc9fc1039a40", "committedDate": "2020-09-04T06:29:38Z", "message": "Remove extra new line."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNDk0NTQw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25564#pullrequestreview-482494540", "createdAt": "2020-09-04T09:16:24Z", "commit": {"oid": "8e95695a4731a49fac4cc1354442192f06b8eae2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOToxNjoyNVrOHNGOeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOToxNjoyNVrOHNGOeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5NTU0Ng==", "bodyText": "do we need the similar validation for object members too (i.e: if isObjectMember is true) ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25564#discussion_r483495546", "createdAt": "2020-09-04T09:16:25Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -992,11 +980,44 @@ private STNode parseReturnTypeDescRhs(STNode metadata, STNode functionKeyword, S\n         funcSignature = validateAndGetFuncParams((STFunctionSignatureNode) funcSignature);\n \n         STNode funcDef =\n-                createFuncDefOrMethodDecl(metadata, functionKeyword, isObjectMethod, name, funcSignature, qualifiers);\n+                createFuncDefOrMethodDecl(metadata, functionKeyword, isObjectMember, name, funcSignature, qualifiers);\n         endContext();\n         return funcDef;\n     }\n \n+    private STNode parseVarDeclWithFunctionType(STNode typeDesc, boolean isObjectMember, STNode qualifiers,\n+                                                STNode metadata) {\n+        STNodeList qualifierList = (STNodeList) qualifiers;\n+        if (isObjectMember) {\n+            // public qualifier allowed in object field.\n+            STNode readonlyQualifier = STNodeFactory.createEmptyNode();\n+            STNode fieldName = parseVariableName();\n+            if (qualifierList.isEmpty()) {\n+                return parseObjectFieldRhs(metadata, STNodeFactory.createEmptyNode(), readonlyQualifier,\n+                        typeDesc, fieldName);\n+            } else {\n+                return parseObjectFieldRhs(metadata, qualifiers.childInBucket(0), readonlyQualifier, typeDesc,\n+                        fieldName);\n+            }\n+        }\n+\n+        STNode finalKeyword = STNodeFactory.createEmptyNode();\n+        // Only the final keyword is allowed as a qualifier\n+        for (int position = 0; position < qualifierList.size(); position++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e95695a4731a49fac4cc1354442192f06b8eae2"}, "originalPosition": 147}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bda753c4dd1996d79fb98683602d92c98efb7eb", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2bda753c4dd1996d79fb98683602d92c98efb7eb", "committedDate": "2020-09-04T10:06:13Z", "message": "Validate object field qualifiers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8067db29b953f72ad3518245b3831ac9a0d7def9", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8067db29b953f72ad3518245b3831ac9a0d7def9", "committedDate": "2020-09-04T10:23:04Z", "message": "Fix checkstyle issue."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0ec4202940b5bac8277edd4ef932fc83e762153", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d0ec4202940b5bac8277edd4ef932fc83e762153", "committedDate": "2020-09-04T10:27:12Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into bug-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f504a777e112145668800b1146739f3bfe3a2569", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f504a777e112145668800b1146739f3bfe3a2569", "committedDate": "2020-09-04T11:57:49Z", "message": "Add missing break in NodeTransformer."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNDUyMDEw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25564#pullrequestreview-483452010", "createdAt": "2020-09-07T10:41:14Z", "commit": {"oid": "f504a777e112145668800b1146739f3bfe3a2569"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo0MToxNFrOHN6WdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo0MToxNFrOHN6WdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0OTU1Nw==", "bodyText": "I think error msg like this:  ''{0}'' qualifier not allowed here would be better.\nIn the class-change branch it is already using that way for error.qualifier.not.allowed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25564#discussion_r484349557", "createdAt": "2020-09-07T10:41:14Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-parser/src/main/resources/syntax_diagnostic_message.properties", "diffHunk": "@@ -202,6 +215,8 @@ error.import.declaration.after.other.declarations=import declaration after other\n error.annotations.attached.to.expression=annotations attached to expression\n error.invalid.expression.in.start.action=invalid expression in start action\n error.same.object.type.qualifier=same object type qualifier\n+error.duplicate.qualifier=duplicate qualifier\n+error.qualifier.not.allowed=qualifier not allowed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f504a777e112145668800b1146739f3bfe3a2569"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNDUyNTg2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25564#pullrequestreview-483452586", "createdAt": "2020-09-07T10:42:06Z", "commit": {"oid": "f504a777e112145668800b1146739f3bfe3a2569"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo0MjowNlrOHN6YGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo0MjowNlrOHN6YGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0OTk3Nw==", "bodyText": "duplicate ''{0}'' qualifier would be better", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25564#discussion_r484349977", "createdAt": "2020-09-07T10:42:06Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-parser/src/main/resources/syntax_diagnostic_message.properties", "diffHunk": "@@ -202,6 +215,8 @@ error.import.declaration.after.other.declarations=import declaration after other\n error.annotations.attached.to.expression=annotations attached to expression\n error.invalid.expression.in.start.action=invalid expression in start action\n error.same.object.type.qualifier=same object type qualifier\n+error.duplicate.qualifier=duplicate qualifier", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f504a777e112145668800b1146739f3bfe3a2569"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNDU1MjU0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25564#pullrequestreview-483455254", "createdAt": "2020-09-07T10:44:09Z", "commit": {"oid": "f504a777e112145668800b1146739f3bfe3a2569"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo0NDoxMFrOHN6cew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo0NDoxMFrOHN6cew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1MTA5OQ==", "bodyText": "Related above comment.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                typeDesc = SyntaxErrors.cloneWithLeadingInvalidNodeMinutiae(typeDesc, qualifier,\n          \n          \n            \n                                        DiagnosticErrorCode.ERROR_QUALIFIER_NOT_ALLOWED);\n          \n          \n            \n                                typeDesc = SyntaxErrors.cloneWithLeadingInvalidNodeMinutiae(typeDesc, qualifier,\n          \n          \n            \n                                        DiagnosticErrorCode.ERROR_QUALIFIER_NOT_ALLOWED, ((STToken) qualifier).text()));", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25564#discussion_r484351099", "createdAt": "2020-09-07T10:44:10Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -992,11 +980,42 @@ private STNode parseReturnTypeDescRhs(STNode metadata, STNode functionKeyword, S\n         funcSignature = validateAndGetFuncParams((STFunctionSignatureNode) funcSignature);\n \n         STNode funcDef =\n-                createFuncDefOrMethodDecl(metadata, functionKeyword, isObjectMethod, name, funcSignature, qualifiers);\n+                createFuncDefOrMethodDecl(metadata, functionKeyword, isObjectMember, name, funcSignature, qualifiers);\n         endContext();\n         return funcDef;\n     }\n \n+    private STNode parseVarDeclWithFunctionType(STNode typeDesc, boolean isObjectMember, STNode qualifiers,\n+                                                STNode metadata) {\n+        STNodeList qualifierList = (STNodeList) qualifiers;\n+        STNode visibilityQualifier = STNodeFactory.createEmptyNode();\n+        // qualifiers are not allowed except for object filed\n+        for (int position = 0; position < qualifierList.size(); position++) {\n+            STNode qualifier = qualifierList.get(position);\n+            if (isObjectMember) {\n+                // public or private qualifier allowed in object field.\n+                if (qualifier.kind == SyntaxKind.PUBLIC_KEYWORD || qualifier.kind == SyntaxKind.PRIVATE_KEYWORD) {\n+                    visibilityQualifier = qualifier;\n+                } else {\n+                    // if remote or transactional qualifier present\n+                    typeDesc = SyntaxErrors.cloneWithLeadingInvalidNodeMinutiae(typeDesc, qualifier,\n+                            DiagnosticErrorCode.ERROR_QUALIFIER_NOT_ALLOWED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f504a777e112145668800b1146739f3bfe3a2569"}, "originalPosition": 143}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNDU5NTYz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25564#pullrequestreview-483459563", "createdAt": "2020-09-07T10:50:41Z", "commit": {"oid": "f504a777e112145668800b1146739f3bfe3a2569"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo1MDo0MVrOHN6qsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo1MDo0MVrOHN6qsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1NDczNg==", "bodyText": "I think we can merge this checks and avoid nested if clause.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25564#discussion_r484354736", "createdAt": "2020-09-07T10:50:41Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -992,11 +980,42 @@ private STNode parseReturnTypeDescRhs(STNode metadata, STNode functionKeyword, S\n         funcSignature = validateAndGetFuncParams((STFunctionSignatureNode) funcSignature);\n \n         STNode funcDef =\n-                createFuncDefOrMethodDecl(metadata, functionKeyword, isObjectMethod, name, funcSignature, qualifiers);\n+                createFuncDefOrMethodDecl(metadata, functionKeyword, isObjectMember, name, funcSignature, qualifiers);\n         endContext();\n         return funcDef;\n     }\n \n+    private STNode parseVarDeclWithFunctionType(STNode typeDesc, boolean isObjectMember, STNode qualifiers,\n+                                                STNode metadata) {\n+        STNodeList qualifierList = (STNodeList) qualifiers;\n+        STNode visibilityQualifier = STNodeFactory.createEmptyNode();\n+        // qualifiers are not allowed except for object filed\n+        for (int position = 0; position < qualifierList.size(); position++) {\n+            STNode qualifier = qualifierList.get(position);\n+            if (isObjectMember) {\n+                // public or private qualifier allowed in object field.\n+                if (qualifier.kind == SyntaxKind.PUBLIC_KEYWORD || qualifier.kind == SyntaxKind.PRIVATE_KEYWORD) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f504a777e112145668800b1146739f3bfe3a2569"}, "originalPosition": 138}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNDYwMjEw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25564#pullrequestreview-483460210", "createdAt": "2020-09-07T10:51:42Z", "commit": {"oid": "f504a777e112145668800b1146739f3bfe3a2569"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo1MTo0MlrOHN6ssQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo1MTo0MlrOHN6ssQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1NTI0OQ==", "bodyText": "new lines at top and bottom would be cleaner", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25564#discussion_r484355249", "createdAt": "2020-09-07T10:51:42Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -992,11 +980,42 @@ private STNode parseReturnTypeDescRhs(STNode metadata, STNode functionKeyword, S\n         funcSignature = validateAndGetFuncParams((STFunctionSignatureNode) funcSignature);\n \n         STNode funcDef =\n-                createFuncDefOrMethodDecl(metadata, functionKeyword, isObjectMethod, name, funcSignature, qualifiers);\n+                createFuncDefOrMethodDecl(metadata, functionKeyword, isObjectMember, name, funcSignature, qualifiers);\n         endContext();\n         return funcDef;\n     }\n \n+    private STNode parseVarDeclWithFunctionType(STNode typeDesc, boolean isObjectMember, STNode qualifiers,\n+                                                STNode metadata) {\n+        STNodeList qualifierList = (STNodeList) qualifiers;\n+        STNode visibilityQualifier = STNodeFactory.createEmptyNode();\n+        // qualifiers are not allowed except for object filed\n+        for (int position = 0; position < qualifierList.size(); position++) {\n+            STNode qualifier = qualifierList.get(position);\n+            if (isObjectMember) {\n+                // public or private qualifier allowed in object field.\n+                if (qualifier.kind == SyntaxKind.PUBLIC_KEYWORD || qualifier.kind == SyntaxKind.PRIVATE_KEYWORD) {\n+                    visibilityQualifier = qualifier;\n+                } else {\n+                    // if remote or transactional qualifier present\n+                    typeDesc = SyntaxErrors.cloneWithLeadingInvalidNodeMinutiae(typeDesc, qualifier,\n+                            DiagnosticErrorCode.ERROR_QUALIFIER_NOT_ALLOWED);\n+                }\n+            } else {\n+                typeDesc = SyntaxErrors.cloneWithLeadingInvalidNodeMinutiae(typeDesc, qualifier,\n+                        DiagnosticErrorCode.ERROR_QUALIFIER_NOT_ALLOWED);\n+            }\n+        }\n+        if (isObjectMember) {\n+            STNode readonlyQualifier = STNodeFactory.createEmptyNode();\n+            STNode fieldName = parseVariableName();\n+            return parseObjectFieldRhs(metadata, visibilityQualifier, readonlyQualifier, typeDesc, fieldName);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f504a777e112145668800b1146739f3bfe3a2569"}, "originalPosition": 154}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "510bb1d27bd8ccdaa893d6da2d5df3271a9dff7b", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/510bb1d27bd8ccdaa893d6da2d5df3271a9dff7b", "committedDate": "2020-09-07T11:10:31Z", "message": "Improve error message and refactor code."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNzYzMjQ5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25564#pullrequestreview-483763249", "createdAt": "2020-09-08T02:49:19Z", "commit": {"oid": "510bb1d27bd8ccdaa893d6da2d5df3271a9dff7b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4791, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}