{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxNjM1OTkw", "number": 27320, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMDowODozOFrOFA9d8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMTo1NDo1OVrOFHw-WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTUxNDA4OnYy", "diffSide": "LEFT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMDowODozOFrOH_gSsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNToxMzoxMFrOIAriuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM1MTQwOA==", "bodyText": "intended ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r536351408", "createdAt": "2020-12-04T20:08:38Z", "author": {"login": "KRVPerera"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -1,4 +1,3 @@\n-// Copyright (c) 2019 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5161bf28071612f59f0c54d1d5ae3b0e4ece80b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU4NDMxNQ==", "bodyText": "This is a mistake, fixed it", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r537584315", "createdAt": "2020-12-07T15:13:10Z", "author": {"login": "KavinduZoysa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -1,4 +1,3 @@\n-// Copyright (c) 2019 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM1MTQwOA=="}, "originalCommit": {"oid": "b5161bf28071612f59f0c54d1d5ae3b0e4ece80b"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzczMzk1OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxOTo0Mzo1NFrOIDaUhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMzo0MDoyM1rOIE-lmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ0Nzg3Ng==", "bodyText": "We don't need this change, right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r540447876", "createdAt": "2020-12-10T19:43:54Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2019 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA5MDY1MQ==", "bodyText": "Fixed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r542090651", "createdAt": "2020-12-14T03:40:23Z", "author": {"login": "KavinduZoysa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2019 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ0Nzg3Ng=="}, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzczNzE1OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxOTo0NDo0MlrOIDaWYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMzo0MDoxMFrOIE-lXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ0ODM1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Address addr = {\n          \n          \n            \n                    street : \"Colombo\"\n          \n          \n            \n                };\n          \n          \n            \n                Address addr = {street: \"Colombo\"};", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r540448355", "createdAt": "2020-12-10T19:44:42Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -391,3 +391,40 @@ function testOptionalFieldAccessInUnionType() {\n     testOptionalFieldAccessInUnionType2();\n     testOptionalFieldAccessInUnionType3();\n }\n+\n+class Student {\n+    public Details? details = ();\n+\n+    function init(Details? details) {\n+        self.details = details;\n+    }\n+\n+    public function getDetails() returns Details? {\n+        return self.details;\n+    }\n+}\n+\n+public type Details record {\n+    Address addr?;\n+};\n+\n+public type Address record {\n+    string street;\n+};\n+\n+function testOptionalFieldAccessOnClassDef() {\n+    Address addr = {\n+        street : \"Colombo\"\n+    };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA5MDU5MA==", "bodyText": "Fixed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r542090590", "createdAt": "2020-12-14T03:40:10Z", "author": {"login": "KavinduZoysa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -391,3 +391,40 @@ function testOptionalFieldAccessInUnionType() {\n     testOptionalFieldAccessInUnionType2();\n     testOptionalFieldAccessInUnionType3();\n }\n+\n+class Student {\n+    public Details? details = ();\n+\n+    function init(Details? details) {\n+        self.details = details;\n+    }\n+\n+    public function getDetails() returns Details? {\n+        return self.details;\n+    }\n+}\n+\n+public type Details record {\n+    Address addr?;\n+};\n+\n+public type Address record {\n+    string street;\n+};\n+\n+function testOptionalFieldAccessOnClassDef() {\n+    Address addr = {\n+        street : \"Colombo\"\n+    };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ0ODM1NQ=="}, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzczODMzOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxOTo0NDo1OVrOIDaXFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMzo0MDo0MlrOIE-l2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ0ODUzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Details details = {\n          \n          \n            \n                    addr : addr\n          \n          \n            \n                };\n          \n          \n            \n                Details details = {addr: addr};", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r540448535", "createdAt": "2020-12-10T19:44:59Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -391,3 +391,40 @@ function testOptionalFieldAccessInUnionType() {\n     testOptionalFieldAccessInUnionType2();\n     testOptionalFieldAccessInUnionType3();\n }\n+\n+class Student {\n+    public Details? details = ();\n+\n+    function init(Details? details) {\n+        self.details = details;\n+    }\n+\n+    public function getDetails() returns Details? {\n+        return self.details;\n+    }\n+}\n+\n+public type Details record {\n+    Address addr?;\n+};\n+\n+public type Address record {\n+    string street;\n+};\n+\n+function testOptionalFieldAccessOnClassDef() {\n+    Address addr = {\n+        street : \"Colombo\"\n+    };\n+\n+    Details details = {\n+        addr : addr\n+    };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA5MDcxNQ==", "bodyText": "Fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r542090715", "createdAt": "2020-12-14T03:40:42Z", "author": {"login": "KavinduZoysa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -391,3 +391,40 @@ function testOptionalFieldAccessInUnionType() {\n     testOptionalFieldAccessInUnionType2();\n     testOptionalFieldAccessInUnionType3();\n }\n+\n+class Student {\n+    public Details? details = ();\n+\n+    function init(Details? details) {\n+        self.details = details;\n+    }\n+\n+    public function getDetails() returns Details? {\n+        return self.details;\n+    }\n+}\n+\n+public type Details record {\n+    Address addr?;\n+};\n+\n+public type Address record {\n+    string street;\n+};\n+\n+function testOptionalFieldAccessOnClassDef() {\n+    Address addr = {\n+        street : \"Colombo\"\n+    };\n+\n+    Details details = {\n+        addr : addr\n+    };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ0ODUzNQ=="}, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzczOTUzOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxOTo0NToxOVrOIDaXzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNTo0NDoxMVrOIJM5gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ0ODcxOA==", "bodyText": "Shall we also add a test for when the field is not there?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r540448718", "createdAt": "2020-12-10T19:45:19Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -391,3 +391,40 @@ function testOptionalFieldAccessInUnionType() {\n     testOptionalFieldAccessInUnionType2();\n     testOptionalFieldAccessInUnionType3();\n }\n+\n+class Student {\n+    public Details? details = ();\n+\n+    function init(Details? details) {\n+        self.details = details;\n+    }\n+\n+    public function getDetails() returns Details? {\n+        return self.details;\n+    }\n+}\n+\n+public type Details record {\n+    Address addr?;\n+};\n+\n+public type Address record {\n+    string street;\n+};\n+\n+function testOptionalFieldAccessOnClassDef() {\n+    Address addr = {\n+        street : \"Colombo\"\n+    };\n+\n+    Details details = {\n+        addr : addr\n+    };\n+\n+    Student person = new Student(details);\n+    string? c1 = person.getDetails()?.addr?.street;\n+\n+    if (c1 != \"Colombo\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUxOTQyNw==", "bodyText": "Added", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546519427", "createdAt": "2020-12-21T05:44:11Z", "author": {"login": "KavinduZoysa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -391,3 +391,40 @@ function testOptionalFieldAccessInUnionType() {\n     testOptionalFieldAccessInUnionType2();\n     testOptionalFieldAccessInUnionType3();\n }\n+\n+class Student {\n+    public Details? details = ();\n+\n+    function init(Details? details) {\n+        self.details = details;\n+    }\n+\n+    public function getDetails() returns Details? {\n+        return self.details;\n+    }\n+}\n+\n+public type Details record {\n+    Address addr?;\n+};\n+\n+public type Address record {\n+    string street;\n+};\n+\n+function testOptionalFieldAccessOnClassDef() {\n+    Address addr = {\n+        street : \"Colombo\"\n+    };\n+\n+    Details details = {\n+        addr : addr\n+    };\n+\n+    Student person = new Student(details);\n+    string? c1 = person.getDetails()?.addr?.street;\n+\n+    if (c1 != \"Colombo\") {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ0ODcxOA=="}, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Mzg5NDY2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDoyNDoxN1rOIDbzdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODozMzo1OFrOIJQLng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MjE4MA==", "bodyText": "While this change fixes the issue, wonder if we can remove the check for INVOCATION at https://github.com/ballerina-platform/ballerina-lang/blob/master/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java#L7770 altogether.\nIIRC, previously error/nil lifting access was allowed on invocations, but that is not allowed anymore. So we may be able to remove that condition. Shall we check if this is possible?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r540472180", "createdAt": "2020-12-10T20:24:17Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5290,7 +5290,7 @@ private BSymbol getLangLibMethod(BLangInvocation iExpr, BType bType) {\n     }\n \n     private void checkInvocationParamAndReturnType(BLangInvocation iExpr) {\n-        BType actualType = checkInvocationParam(iExpr);\n+        BType actualType = iExpr.originalType = checkInvocationParam(iExpr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUxOTQ3Mg==", "bodyText": "Changed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546519472", "createdAt": "2020-12-21T05:44:22Z", "author": {"login": "KavinduZoysa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5290,7 +5290,7 @@ private BSymbol getLangLibMethod(BLangInvocation iExpr, BType bType) {\n     }\n \n     private void checkInvocationParamAndReturnType(BLangInvocation iExpr) {\n-        BType actualType = checkInvocationParam(iExpr);\n+        BType actualType = iExpr.originalType = checkInvocationParam(iExpr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MjE4MA=="}, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU0Njg0Nw==", "bodyText": "We don't need this change anymore, right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546546847", "createdAt": "2020-12-21T07:24:16Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5290,7 +5290,7 @@ private BSymbol getLangLibMethod(BLangInvocation iExpr, BType bType) {\n     }\n \n     private void checkInvocationParamAndReturnType(BLangInvocation iExpr) {\n-        BType actualType = checkInvocationParam(iExpr);\n+        BType actualType = iExpr.originalType = checkInvocationParam(iExpr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MjE4MA=="}, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3MzIxNA==", "bodyText": "Yes, removed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546573214", "createdAt": "2020-12-21T08:33:58Z", "author": {"login": "KavinduZoysa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5290,7 +5290,7 @@ private BSymbol getLangLibMethod(BLangInvocation iExpr, BType bType) {\n     }\n \n     private void checkInvocationParamAndReturnType(BLangInvocation iExpr) {\n-        BType actualType = checkInvocationParam(iExpr);\n+        BType actualType = iExpr.originalType = checkInvocationParam(iExpr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MjE4MA=="}, "originalCommit": {"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNjA3MTg0OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNzoyNDowNVrOIJOkYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODozNDowNVrOIJQLyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU0Njc4Ng==", "bodyText": "Can merge these 2 lines.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546546786", "createdAt": "2020-12-21T07:24:05Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -7769,8 +7769,7 @@ private void handleSafeNavigation(BLangAccessExpression accessExpr, BType type,\n         // If the parent of current expr is the root, terminate\n         NodeKind kind = accessExpr.expr.getKind();\n         if (kind == NodeKind.FIELD_BASED_ACCESS_EXPR ||\n-                kind == NodeKind.INDEX_BASED_ACCESS_EXPR ||\n-                kind == NodeKind.INVOCATION) {\n+                kind == NodeKind.INDEX_BASED_ACCESS_EXPR) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97e6973eaf38cd1de94d63bff34d2e3b3287a0fc"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3MzI1OQ==", "bodyText": "Done", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546573259", "createdAt": "2020-12-21T08:34:05Z", "author": {"login": "KavinduZoysa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -7769,8 +7769,7 @@ private void handleSafeNavigation(BLangAccessExpression accessExpr, BType type,\n         // If the parent of current expr is the root, terminate\n         NodeKind kind = accessExpr.expr.getKind();\n         if (kind == NodeKind.FIELD_BASED_ACCESS_EXPR ||\n-                kind == NodeKind.INDEX_BASED_ACCESS_EXPR ||\n-                kind == NodeKind.INVOCATION) {\n+                kind == NodeKind.INDEX_BASED_ACCESS_EXPR) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU0Njc4Ng=="}, "originalCommit": {"oid": "97e6973eaf38cd1de94d63bff34d2e3b3287a0fc"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNjg2NjA5OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMTo1NDoyOVrOIJVzRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTowNDoyM1rOIJbU9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY2NTI4NQ==", "bodyText": "Shall we rename this to\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            function testOptionalFieldAccessOnClassDef() {\n          \n          \n            \n            function testOptionalFieldAccessOnMethodCall() {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546665285", "createdAt": "2020-12-21T11:54:29Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -391,3 +391,43 @@ function testOptionalFieldAccessInUnionType() {\n     testOptionalFieldAccessInUnionType2();\n     testOptionalFieldAccessInUnionType3();\n }\n+\n+class Student {\n+    public Details? details = ();\n+\n+    function init(Details? details) {\n+        self.details = details;\n+    }\n+\n+    public function getDetails() returns Details? {\n+        return self.details;\n+    }\n+}\n+\n+public type Details record {\n+    Address addr?;\n+};\n+\n+public type Address record {\n+    string street;\n+};\n+\n+function testOptionalFieldAccessOnClassDef() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32eb20400abd1cfe990419cb8804b2d85d4f177a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc1NTgzMQ==", "bodyText": "Fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546755831", "createdAt": "2020-12-21T15:04:23Z", "author": {"login": "KavinduZoysa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/access/optional_field_access.bal", "diffHunk": "@@ -391,3 +391,43 @@ function testOptionalFieldAccessInUnionType() {\n     testOptionalFieldAccessInUnionType2();\n     testOptionalFieldAccessInUnionType3();\n }\n+\n+class Student {\n+    public Details? details = ();\n+\n+    function init(Details? details) {\n+        self.details = details;\n+    }\n+\n+    public function getDetails() returns Details? {\n+        return self.details;\n+    }\n+}\n+\n+public type Details record {\n+    Address addr?;\n+};\n+\n+public type Address record {\n+    string street;\n+};\n+\n+function testOptionalFieldAccessOnClassDef() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY2NTI4NQ=="}, "originalCommit": {"oid": "32eb20400abd1cfe990419cb8804b2d85d4f177a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNjg2NzQ0OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/access/OptionalFieldAccessTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMTo1NDo1OVrOIJV0Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTowNDoyOVrOIJbVKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY2NTQ3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testOptionalFieldAccessOnClassDef() {\n          \n          \n            \n                    BRunUtil.invoke(result, \"testOptionalFieldAccessOnClassDef\");\n          \n          \n            \n                public void testOptionalFieldAccessOnMethodCall() {\n          \n          \n            \n                    BRunUtil.invoke(result, \"testOptionalFieldAccessOnMethodCall\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546665478", "createdAt": "2020-12-21T11:54:59Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/access/OptionalFieldAccessTest.java", "diffHunk": "@@ -137,4 +139,9 @@ public void testOptionalFieldAccessOnInvocation(String function) {\n     public void testOptionalFieldAccessInUnionType() {\n         BRunUtil.invoke(result, \"testOptionalFieldAccessInUnionType\");\n     }\n+\n+    @Test\n+    public void testOptionalFieldAccessOnClassDef() {\n+        BRunUtil.invoke(result, \"testOptionalFieldAccessOnClassDef\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32eb20400abd1cfe990419cb8804b2d85d4f177a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc1NTg4Mw==", "bodyText": "Fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546755883", "createdAt": "2020-12-21T15:04:29Z", "author": {"login": "KavinduZoysa"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/access/OptionalFieldAccessTest.java", "diffHunk": "@@ -137,4 +139,9 @@ public void testOptionalFieldAccessOnInvocation(String function) {\n     public void testOptionalFieldAccessInUnionType() {\n         BRunUtil.invoke(result, \"testOptionalFieldAccessInUnionType\");\n     }\n+\n+    @Test\n+    public void testOptionalFieldAccessOnClassDef() {\n+        BRunUtil.invoke(result, \"testOptionalFieldAccessOnClassDef\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY2NTQ3OA=="}, "originalCommit": {"oid": "32eb20400abd1cfe990419cb8804b2d85d4f177a"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2841, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}