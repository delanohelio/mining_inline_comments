{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NzM2MDY0", "number": 26826, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNTo0Mjo0MlrOE4f3tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDo1ODowNFrOE8KiwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3Njc3ODc4OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNTo0Mjo0MlrOHydFkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNTo1MjoxOVrOHydOtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY2NzQwOQ==", "bodyText": "We shouldn't return here. Continue with the error. Otherwise, we will not type check RHS of the variable.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26826#discussion_r522667409", "createdAt": "2020-11-13T05:42:42Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -611,7 +611,14 @@ public void visit(BLangAnnotationAttachment annAttachmentNode) {\n \n     public void visit(BLangSimpleVariable varNode) {\n \n+        boolean configurable = isConfigurable(varNode);\n+\n         if (varNode.isDeclaredWithVar) {\n+            // Configurable variable cannot be declared with var\n+            if (configurable) {\n+                dlog.error(varNode.pos, DiagnosticCode.CONFIGURABLE_VARIABLE_CANNOT_BE_DECLARED_WITH_VAR);\n+                return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "055383267c0da3c46fb5263fed5afe402875f927"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY2OTc0OQ==", "bodyText": "thanx will change", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26826#discussion_r522669749", "createdAt": "2020-11-13T05:52:19Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -611,7 +611,14 @@ public void visit(BLangAnnotationAttachment annAttachmentNode) {\n \n     public void visit(BLangSimpleVariable varNode) {\n \n+        boolean configurable = isConfigurable(varNode);\n+\n         if (varNode.isDeclaredWithVar) {\n+            // Configurable variable cannot be declared with var\n+            if (configurable) {\n+                dlog.error(varNode.pos, DiagnosticCode.CONFIGURABLE_VARIABLE_CANNOT_BE_DECLARED_WITH_VAR);\n+                return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY2NzQwOQ=="}, "originalCommit": {"oid": "055383267c0da3c46fb5263fed5afe402875f927"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3Njc3OTkwOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNTo0MzozNFrOHydGQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNjowMzoxMFrOHydYlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY2NzU4NA==", "bodyText": "Same as the previous comment. Log the error and continue.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26826#discussion_r522667584", "createdAt": "2020-11-13T05:43:34Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -744,6 +759,12 @@ private void validateWorkerAnnAttachments(BLangExpression expr) {\n \n     public void visit(BLangRecordVariable varNode) {\n \n+        // Only simple variables are allowed to be configurable.\n+        if (isConfigurable(varNode)) {\n+            dlog.error(varNode.pos, DiagnosticCode.ONLY_SIMPLE_VARIABLES_ARE_ALLOWED_TO_BE_CONFIGURABLE);\n+            return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "055383267c0da3c46fb5263fed5afe402875f927"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY2ODUzOQ==", "bodyText": "Handle this in other places as well.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26826#discussion_r522668539", "createdAt": "2020-11-13T05:47:10Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -744,6 +759,12 @@ private void validateWorkerAnnAttachments(BLangExpression expr) {\n \n     public void visit(BLangRecordVariable varNode) {\n \n+        // Only simple variables are allowed to be configurable.\n+        if (isConfigurable(varNode)) {\n+            dlog.error(varNode.pos, DiagnosticCode.ONLY_SIMPLE_VARIABLES_ARE_ALLOWED_TO_BE_CONFIGURABLE);\n+            return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY2NzU4NA=="}, "originalCommit": {"oid": "055383267c0da3c46fb5263fed5afe402875f927"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3MjI3Nw==", "bodyText": "Done", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26826#discussion_r522672277", "createdAt": "2020-11-13T06:03:10Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -744,6 +759,12 @@ private void validateWorkerAnnAttachments(BLangExpression expr) {\n \n     public void visit(BLangRecordVariable varNode) {\n \n+        // Only simple variables are allowed to be configurable.\n+        if (isConfigurable(varNode)) {\n+            dlog.error(varNode.pos, DiagnosticCode.ONLY_SIMPLE_VARIABLES_ARE_ALLOWED_TO_BE_CONFIGURABLE);\n+            return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY2NzU4NA=="}, "originalCommit": {"oid": "055383267c0da3c46fb5263fed5afe402875f927"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDgxODQwOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwNDoxODozM1rOHznz-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwNDoyMzowOVrOHzn3fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg5MTcwNw==", "bodyText": "We need to remove this one as well. Otherwise init expr validation is not happening.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26826#discussion_r523891707", "createdAt": "2020-11-16T04:18:33Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -666,6 +672,14 @@ public void visit(BLangSimpleVariable varNode) {\n         BType lhsType = varNode.symbol.type;\n         varNode.type = lhsType;\n \n+        // Configurable variable type must be a subtype of anydata&readonly.\n+        if (configurable && varNode.typeNode != null) {\n+            if (!(types.isAssignable(lhsType, symTable.anydataType) &&\n+                    types.isAssignable(lhsType, symTable.readonlyType))) {\n+                dlog.error(varNode.typeNode.pos, DiagnosticCode.CONFIGURABLE_VARIABLE_MUST_BE_ANYDATA_AND_READONLY);\n+                return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84725a5aea5dfc81ed883813847951e13fa6dabb"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg5MjYwNw==", "bodyText": "Done thanx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26826#discussion_r523892607", "createdAt": "2020-11-16T04:23:09Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -666,6 +672,14 @@ public void visit(BLangSimpleVariable varNode) {\n         BType lhsType = varNode.symbol.type;\n         varNode.type = lhsType;\n \n+        // Configurable variable type must be a subtype of anydata&readonly.\n+        if (configurable && varNode.typeNode != null) {\n+            if (!(types.isAssignable(lhsType, symTable.anydataType) &&\n+                    types.isAssignable(lhsType, symTable.readonlyType))) {\n+                dlog.error(varNode.typeNode.pos, DiagnosticCode.CONFIGURABLE_VARIABLE_MUST_BE_ANYDATA_AND_READONLY);\n+                return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg5MTcwNw=="}, "originalCommit": {"oid": "84725a5aea5dfc81ed883813847951e13fa6dabb"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTIyNzUzOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDo1ODowNFrOH4IX9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzo0NToyOFrOH4OE-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxOTUxMA==", "bodyText": "Spec allows this, Can you create an issue to track this?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26826#discussion_r528619510", "createdAt": "2020-11-23T10:58:04Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -749,6 +763,11 @@ private void validateWorkerAnnAttachments(BLangExpression expr) {\n \n     public void visit(BLangRecordVariable varNode) {\n \n+        // Only simple variables are allowed to be configurable.\n+        if (isConfigurable(varNode)) {\n+            dlog.error(varNode.pos, DiagnosticErrorCode.ONLY_SIMPLE_VARIABLES_ARE_ALLOWED_TO_BE_CONFIGURABLE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "209973d8d9bf33bd557865e7fe0a806f86aaa736"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY4NjQyMA==", "bodyText": "Spec says binding-pattern must be just a variable-name so only simple variables are allowed right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26826#discussion_r528686420", "createdAt": "2020-11-23T13:01:26Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -749,6 +763,11 @@ private void validateWorkerAnnAttachments(BLangExpression expr) {\n \n     public void visit(BLangRecordVariable varNode) {\n \n+        // Only simple variables are allowed to be configurable.\n+        if (isConfigurable(varNode)) {\n+            dlog.error(varNode.pos, DiagnosticErrorCode.ONLY_SIMPLE_VARIABLES_ARE_ALLOWED_TO_BE_CONFIGURABLE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxOTUxMA=="}, "originalCommit": {"oid": "209973d8d9bf33bd557865e7fe0a806f86aaa736"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcxMjk1NQ==", "bodyText": "Yes, You are correct. I missed it.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26826#discussion_r528712955", "createdAt": "2020-11-23T13:45:28Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -749,6 +763,11 @@ private void validateWorkerAnnAttachments(BLangExpression expr) {\n \n     public void visit(BLangRecordVariable varNode) {\n \n+        // Only simple variables are allowed to be configurable.\n+        if (isConfigurable(varNode)) {\n+            dlog.error(varNode.pos, DiagnosticErrorCode.ONLY_SIMPLE_VARIABLES_ARE_ALLOWED_TO_BE_CONFIGURABLE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYxOTUxMA=="}, "originalCommit": {"oid": "209973d8d9bf33bd557865e7fe0a806f86aaa736"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3131, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}