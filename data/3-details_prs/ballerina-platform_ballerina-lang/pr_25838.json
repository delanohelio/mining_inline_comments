{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NzU0MTE5", "number": 25838, "title": "Add ordered-list for diagnostics to BLangPackage", "bodyText": "Purpose\n\nEnable self-ordering the list of diagnostics\n\nFixes #\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-09-16T06:06:49Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25838", "merged": true, "mergeCommit": {"oid": "6bd7f022bffc52fc042f8262545957faee3d4707"}, "closed": true, "closedAt": "2020-09-17T03:52:06Z", "author": {"login": "dulajdilshan"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJbKuHAFqTQ4OTU1MDY3OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJokP8gBqjM3NzU5MDgwMTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NTUwNjc5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25838#pullrequestreview-489550679", "createdAt": "2020-09-16T11:59:58Z", "commit": {"oid": "b4386ea9073454496f18056898765b4953aaf29a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo1OTo1OFrOHStdOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjowMTozNVrOHStgcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM4MTE3OQ==", "bodyText": "Theres another usage of dlog in the same class. Can we remove that too and completely remove the dlog from this class?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25838#discussion_r489381179", "createdAt": "2020-09-16T11:59:58Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/CompilerDriver.java", "diffHunk": "@@ -358,7 +358,7 @@ private boolean stopCompilation(BLangPackage pkgNode, CompilerPhase nextPhase) {\n         if (compilerPhase.compareTo(nextPhase) < 0) {\n             return true;\n         }\n-        return (checkNextPhase(nextPhase) && dlog.errorCount() > 0);\n+        return (checkNextPhase(nextPhase) && pkgNode.getErrorCount() > 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4386ea9073454496f18056898765b4953aaf29a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM4MTI0Mw==", "bodyText": "Let use the constructor that accepts a comparator. Then we can avoid the diagnostic related classes from having to implement Comparable<T>", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25838#discussion_r489381243", "createdAt": "2020-09-16T12:00:03Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/BLangPackage.java", "diffHunk": "@@ -99,7 +100,7 @@ public BLangPackage() {\n         this.completedPhases = EnumSet.noneOf(CompilerPhase.class);\n         this.testablePkgs = new ArrayList<>();\n         this.flagSet = EnumSet.noneOf(Flag.class);\n-        this.diagnostics = new ArrayList<>();\n+        this.diagnostics = new TreeSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4386ea9073454496f18056898765b4953aaf29a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM4MTY5NA==", "bodyText": "Let's remove all usages of dlog from this class", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25838#discussion_r489381694", "createdAt": "2020-09-16T12:00:54Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/Compiler.java", "diffHunk": "@@ -97,7 +97,7 @@ public BLangPackage build(String sourcePackage) {\n         }\n         this.outStream.println(\"Compiling source\");\n         BLangPackage bLangPackage = compile(sourcePackage, true);\n-        if (this.dlog.errorCount() > 0) {\n+        if (bLangPackage.getErrorCount() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4386ea9073454496f18056898765b4953aaf29a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM4MjAwMg==", "bodyText": "extract otherLineRange.startLine.line() to a variable", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25838#discussion_r489382002", "createdAt": "2020-09-16T12:01:35Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-tools-api/src/main/java/io/ballerina/tools/text/LineRange.java", "diffHunk": "@@ -73,4 +73,14 @@ public int hashCode() {\n     public String toString() {\n         return \"(\" + startLine + \",\" + endLine + \")\";\n     }\n+\n+    @Override\n+    public int compareTo(LineRange otherLineRange) {\n+        if (startLine.line() < otherLineRange.startLine.line()) {\n+            return -1;\n+        } else if (startLine.line() > otherLineRange.startLine.line()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4386ea9073454496f18056898765b4953aaf29a"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d92253335147d1e4ad4fd568d5da50058b4322b", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6d92253335147d1e4ad4fd568d5da50058b4322b", "committedDate": "2020-09-17T03:31:31Z", "message": "Add ordered-list for diagnostics to BLangPackage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e26e13c218ea1673afd9f117387b64a6ecd6a09", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4e26e13c218ea1673afd9f117387b64a6ecd6a09", "committedDate": "2020-09-17T03:31:32Z", "message": "Change diagnostic-location constructor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b76471b5b007c124cf3579fa476e2e676a8f8f49", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b76471b5b007c124cf3579fa476e2e676a8f8f49", "committedDate": "2020-09-17T03:22:19Z", "message": "Remove comparable"}, "afterCommit": {"oid": "714208c31b08f706f37145030babefe0ba1be377", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/714208c31b08f706f37145030babefe0ba1be377", "committedDate": "2020-09-17T03:31:32Z", "message": "Remove comparable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb0ba6c71a45d23dc7135bbd9825dc70e24c8a93", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bb0ba6c71a45d23dc7135bbd9825dc70e24c8a93", "committedDate": "2020-09-17T03:37:56Z", "message": "Improve ordering diagnostics"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "714208c31b08f706f37145030babefe0ba1be377", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/714208c31b08f706f37145030babefe0ba1be377", "committedDate": "2020-09-17T03:31:32Z", "message": "Remove comparable"}, "afterCommit": {"oid": "bb0ba6c71a45d23dc7135bbd9825dc70e24c8a93", "author": {"user": {"login": "dulajdilshan", "name": "Dulaj Dilshan"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bb0ba6c71a45d23dc7135bbd9825dc70e24c8a93", "committedDate": "2020-09-17T03:37:56Z", "message": "Improve ordering diagnostics"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4756, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}