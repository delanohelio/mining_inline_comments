{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NjEyOTIy", "number": 24242, "title": "Introduce a fail-safe mechanism for the error recorvery of the parser", "bodyText": "Purpose\nParser error recovery can cause Infinite loops due to invalid logics of error recovery. This PR introduces an initial approach fail-safe mechanism for such cases until those invalid logics are fixed.\nFixes #24148\nApproach\nLimit the number of times parser tries to recover staying on the same token index.\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-06-17T05:31:55Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242", "merged": true, "mergeCommit": {"oid": "4d094119fc71c701a7b7e981ce14aa7176afc5a1"}, "closed": true, "closedAt": "2020-06-18T08:07:15Z", "author": {"login": "rdulmina"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsC0EbAH2gAyNDM1NjEyOTIyOmFmNzJiMDAxMTIxZWZiN2I1M2YzMTc4ZjVhOTJhOWRjYzNlNDQ2YzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsX_mVAFqTQzMjk2MDYwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "af72b001121efb7b53f3178f5a92a9dcc3e446c4", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/af72b001121efb7b53f3178f5a92a9dcc3e446c4", "committedDate": "2020-06-17T05:15:26Z", "message": "Fail-safe mechanism for the error recorvery.\nAdd a limit for the number of times parser tries to recover staying on the same token index.\nThis will prevent parser going to infinite loops."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba02b29645226685e712d54869676e01128c2027", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ba02b29645226685e712d54869676e01128c2027", "committedDate": "2020-06-17T05:16:12Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "264bbe0da0a12b30b400459f5671aca0088fcceb", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/264bbe0da0a12b30b400459f5671aca0088fcceb", "committedDate": "2020-06-17T05:34:57Z", "message": "Add new line."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4ad5b8703a1c102f38542de419d5858c82a1f5c", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d4ad5b8703a1c102f38542de419d5858c82a1f5c", "committedDate": "2020-06-17T05:35:21Z", "message": "Add new line."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDcxNjg0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#pullrequestreview-432071684", "createdAt": "2020-06-17T05:38:02Z", "commit": {"oid": "d4ad5b8703a1c102f38542de419d5858c82a1f5c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTozODowMlrOGk2Sgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0Mjo1M1rOGk2Ycw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5MTM5NQ==", "bodyText": "Can we move this check to before calling seekMatch()?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#discussion_r441291395", "createdAt": "2020-06-17T05:38:02Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/AbstractParserErrorHandler.java", "diffHunk": "@@ -82,10 +92,18 @@ public Solution recover(ParserRuleContext currentCtx, STToken nextToken, Object.\n             return fix;\n         }\n \n+        int currentIndex = this.tokenReader.getCurrentIndex();\n+        if (currentIndex == this.previousIndex) {\n+            itterCount++;\n+        } else {\n+            itterCount = 0;\n+            previousIndex = currentIndex;\n+        }\n+\n         Result bestMatch = seekMatch(currentCtx);\n         if (bestMatch.matches > 0) {\n             Solution sol = bestMatch.solution;\n-            if (sol != null) {\n+            if (sol != null && itterCount < ITTER_LIMIT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ad5b8703a1c102f38542de419d5858c82a1f5c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5MTg4OA==", "bodyText": "How about a limit of 5? will it break things?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#discussion_r441291888", "createdAt": "2020-06-17T05:39:26Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/AbstractParserErrorHandler.java", "diffHunk": "@@ -35,15 +35,25 @@\n     protected final AbstractTokenReader tokenReader;\n     protected final BallerinaParserErrorListener errorListener;\n     private ArrayDeque<ParserRuleContext> ctxStack = new ArrayDeque<>();\n+    private int previousIndex;\n+    private int itterCount;\n \n     /**\n      * Limit for the distance to travel, to determine a successful lookahead.\n      */\n     protected static final int LOOKAHEAD_LIMIT = 5;\n \n+    /**\n+     * Limit for the number of times parser tries to recover staying on the same token index.\n+     * This will prevent parser going to infinite loops.\n+     */\n+    private static final int ITTER_LIMIT = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ad5b8703a1c102f38542de419d5858c82a1f5c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5MjkxNQ==", "bodyText": "Looks like other methods don't have the public qualifier. Shall we do the same?\nAlso, let move this to the other non-private methods section.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#discussion_r441292915", "createdAt": "2020-06-17T05:42:53Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/incremental/HybridNodeStorage.java", "diffHunk": "@@ -178,4 +178,8 @@ private TextEditRange markAffectedRange(ModulePartNode oldTree, TextEdit textEdi\n                 (textRange.startOffset() - affectedTokenStartOffset);\n         return new TextEditRange(affectedTokenStartOffset, textRange.endOffset(), newTextLength);\n     }\n+\n+    public int getCurrentIndex() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ad5b8703a1c102f38542de419d5858c82a1f5c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1db82fe45b6335589bbc535219421f109a963e7d", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1db82fe45b6335589bbc535219421f109a963e7d", "committedDate": "2020-06-17T06:01:57Z", "message": "Refactor code."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDc0Njg0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#pullrequestreview-432074684", "createdAt": "2020-06-17T05:45:35Z", "commit": {"oid": "d4ad5b8703a1c102f38542de419d5858c82a1f5c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0NTozNVrOGk2b5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0NTozNVrOGk2b5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5Mzc5Ng==", "bodyText": "IMO, \"currentIndex\" is too generic. Can we use a descriptive term for this?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#discussion_r441293796", "createdAt": "2020-06-17T05:45:35Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/TokenReader.java", "diffHunk": "@@ -113,6 +113,14 @@ public void endMode() {\n         this.lexer.endMode();\n     }\n \n+    /**\n+     *\n+     * @return current token index\n+     */\n+    public int getCurrentIndex() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ad5b8703a1c102f38542de419d5858c82a1f5c"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODU4OTI3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#pullrequestreview-432858927", "createdAt": "2020-06-18T00:17:27Z", "commit": {"oid": "1db82fe45b6335589bbc535219421f109a963e7d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDoxNzoyN1rOGlbfmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDoxNzoyN1rOGlbfmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDk1Mg==", "bodyText": "previousIndex is also not a descriptive name", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#discussion_r441900952", "createdAt": "2020-06-18T00:17:27Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/AbstractParserErrorHandler.java", "diffHunk": "@@ -35,15 +35,25 @@\n     protected final AbstractTokenReader tokenReader;\n     protected final BallerinaParserErrorListener errorListener;\n     private ArrayDeque<ParserRuleContext> ctxStack = new ArrayDeque<>();\n+    private int previousIndex;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1db82fe45b6335589bbc535219421f109a963e7d"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyOTYwNjAw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#pullrequestreview-432960600", "createdAt": "2020-06-18T05:56:02Z", "commit": {"oid": "1db82fe45b6335589bbc535219421f109a963e7d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4271, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}