{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5NTcyODA5", "number": 25622, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNTozMDo0OVrOEhFgZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTozODoyMlrOEhNBvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTI4Njc5OnYy", "diffSide": "LEFT", "path": "tests/testerina-integration-test/src/test/resources/project-based-tests/outside-tests/src/pathVerification/tests/main_test.bal", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNTozMDo0OVrOHONOGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzoyMzozMFrOHOQBiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1ODcxMg==", "bodyText": "@Ibaqu We need to add logic(appending test and asserting it) to test that the functions get executed in correct order. WDYT?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25622#discussion_r484658712", "createdAt": "2020-09-08T05:30:49Z", "author": {"login": "Dilhasha"}, "path": "tests/testerina-integration-test/src/test/resources/project-based-tests/outside-tests/src/pathVerification/tests/main_test.bal", "diffHunk": "@@ -14,20 +14,17 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-import ballerina/io;\n import ballerina/test;\n \n # Before Suite Function\n \n @test:BeforeSuite\n function beforeSuiteFunc() {\n-    io:println(\"I'm the before suite function!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77cf53bb44687109cbbd8739d90fc735beb523b8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY2NDA4OQ==", "bodyText": "There is a similar logic included in the beforeAfter and beforeEachAfterEach test cases. It is also there in the dependsOn test case as well. In those tests, a string is passed between the functions and the end result is asserted to see if the order is executed correctly. https://github.com/ballerina-platform/ballerina-lang/pull/25622/files#diff-43b6d1a6469d4251593b5734978c5e38\n@Dilhasha Is this what you are referring to? If so, should I include such logic in the 'pathVerification' test case as well?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25622#discussion_r484664089", "createdAt": "2020-09-08T05:48:41Z", "author": {"login": "Ibaqu"}, "path": "tests/testerina-integration-test/src/test/resources/project-based-tests/outside-tests/src/pathVerification/tests/main_test.bal", "diffHunk": "@@ -14,20 +14,17 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-import ballerina/io;\n import ballerina/test;\n \n # Before Suite Function\n \n @test:BeforeSuite\n function beforeSuiteFunc() {\n-    io:println(\"I'm the before suite function!\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1ODcxMg=="}, "originalCommit": {"oid": "77cf53bb44687109cbbd8739d90fc735beb523b8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY3MTMwMg==", "bodyText": "Yes that's correct.\nLet's include similar logic in test cases wherever applicable rather than using println.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25622#discussion_r484671302", "createdAt": "2020-09-08T06:09:14Z", "author": {"login": "Dilhasha"}, "path": "tests/testerina-integration-test/src/test/resources/project-based-tests/outside-tests/src/pathVerification/tests/main_test.bal", "diffHunk": "@@ -14,20 +14,17 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-import ballerina/io;\n import ballerina/test;\n \n # Before Suite Function\n \n @test:BeforeSuite\n function beforeSuiteFunc() {\n-    io:println(\"I'm the before suite function!\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1ODcxMg=="}, "originalCommit": {"oid": "77cf53bb44687109cbbd8739d90fc735beb523b8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcwNDY1MQ==", "bodyText": "Added changes to pathVerification test", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25622#discussion_r484704651", "createdAt": "2020-09-08T07:23:30Z", "author": {"login": "Ibaqu"}, "path": "tests/testerina-integration-test/src/test/resources/project-based-tests/outside-tests/src/pathVerification/tests/main_test.bal", "diffHunk": "@@ -14,20 +14,17 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-import ballerina/io;\n import ballerina/test;\n \n # Before Suite Function\n \n @test:BeforeSuite\n function beforeSuiteFunc() {\n-    io:println(\"I'm the before suite function!\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1ODcxMg=="}, "originalCommit": {"oid": "77cf53bb44687109cbbd8739d90fc735beb523b8"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTU5NTg0OnYy", "diffSide": "RIGHT", "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/BasicCasesTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzoyNDoxOFrOHOQDQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzozOTo1MVrOHOQmsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcwNTA4OQ==", "bodyText": "we can remove the (enabled = true), All functions are enabled by default. We don't need to specify it explicitly.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25622#discussion_r484705089", "createdAt": "2020-09-08T07:24:18Z", "author": {"login": "azinneera"}, "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/BasicCasesTest.java", "diffHunk": "@@ -31,13 +31,13 @@\n     private BMainInstance balClient;\n     private String projectPath;\n \n-    @BeforeClass(enabled = false)\n+    @BeforeClass(enabled = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c7a524b6337b859883729411c412874cfba133"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxNDE2Mg==", "bodyText": "Removed the enabled = true from the test cases", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25622#discussion_r484714162", "createdAt": "2020-09-08T07:39:51Z", "author": {"login": "Ibaqu"}, "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/BasicCasesTest.java", "diffHunk": "@@ -31,13 +31,13 @@\n     private BMainInstance balClient;\n     private String projectPath;\n \n-    @BeforeClass(enabled = false)\n+    @BeforeClass(enabled = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcwNTA4OQ=="}, "originalCommit": {"oid": "b1c7a524b6337b859883729411c412874cfba133"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjUxOTAxOnYy", "diffSide": "RIGHT", "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/BasicCasesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTozODoyM1rOHOY40Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTozODoyM1rOHOY40Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0OTg3Mw==", "bodyText": "Shall we remove \"enabled = true\" from here too?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25622#discussion_r484849873", "createdAt": "2020-09-08T11:38:23Z", "author": {"login": "Dilhasha"}, "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/BasicCasesTest.java", "diffHunk": "@@ -31,13 +31,13 @@\n     private BMainInstance balClient;\n     private String projectPath;\n \n-    @BeforeClass(enabled = false)\n+    @BeforeClass(enabled = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1ee2387a95ebb755957e09a964ea86457d30089"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 187, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}