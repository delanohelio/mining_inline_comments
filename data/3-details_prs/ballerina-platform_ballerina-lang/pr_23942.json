{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyOTYxNTk0", "number": 23942, "title": "batchExecute functionality for SQL connector", "bodyText": "Purpose\nImplement batchExecute functionality for SQL connector.\nPartially fix #23565\nApproach\nUsed JDBC PreparedStatement batchExecute()\nSamples\nimport ballerina/io;\nimport ballerina/mysql;\nimport ballerina/sql;\n\npublic function main() {\n\n    sql:Error? err = initializeClients();\n    if (err is sql:Error) {\n        io:println(\"Error occured\", err);\n    } else {\n        io:println(\"Sample executed successfully!\");\n    }\n}\n\nfunction initializeClients(boolean test = false) returns sql:Error? {\n\n    mysql:Client mysqlClient = check new (\"localhost\", \"test\", \"\", \"test\");\n    io:println(\"MySQL client with user and password created.\");\n\n    _ = check mysqlClient->execute(\"DROP TABLE Persons\");\n    _ = check mysqlClient->execute(\"CREATE TABLE Persons (id int(11) NOT NULL AUTO_INCREMENT, name varchar(255) DEFAULT NULL, PRIMARY KEY (`id`))\");\n\n     sql:ParameterizedString sqlQuery1 = {\n         parts : [\"INSERT INTO Persons (name) values (\",\")\"],\n         insertions: [\"Alice\"]\n     };\n\n     sql:ParameterizedString sqlQuery2 = {\n         parts : [\"INSERT INTO Persons (name) values (\",\")\"],\n         insertions: [\"Alice\"]\n     };\n\n     sql:ParameterizedString sqlQuery3 = {\n         parts : [\"INSERT INTO Persons (name) values (\",\")\"],\n         insertions: [\"Alice\"]\n     };\n\n     sql:ParameterizedString[] sqlQueriues = [sqlQuery1, sqlQuery2, sqlQuery3];\n\n    sql:ExecuteResult[]? result = check mysqlClient->batchExecute(sqlQueries);\n    io:println(result);\n    check mysqlClient.close();\n}\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-06-11T09:43:27Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23942", "merged": true, "mergeCommit": {"oid": "5e4d2405ae85b8ab55322d83e16694e6046f26d1"}, "closed": true, "closedAt": "2020-06-11T14:01:50Z", "author": {"login": "niveathika"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABco60NBAH2gAyNDMyOTYxNTk0OjQ1MzhhYWNjZWYwYTY5ZTNlMDZiYzc2YWY5OGU4YzM3YTM1NWQ5ZjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqN7XxgFqTQyODg4NTU0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4538aaccef0a69e3e06bc76af98e8c37a355d9f6", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4538aaccef0a69e3e06bc76af98e8c37a355d9f6", "committedDate": "2020-06-07T12:14:34Z", "message": "Add SQL BatchExecute"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d4cc266f954a4bcbfdff4090e439be8946e2dab", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2d4cc266f954a4bcbfdff4090e439be8946e2dab", "committedDate": "2020-06-07T12:54:41Z", "message": "Execute only one batch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93bf4567db1fe9a9302187d18656a67be13a477e", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/93bf4567db1fe9a9302187d18656a67be13a477e", "committedDate": "2020-06-07T13:04:50Z", "message": "Implement rollbackInFailure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f10c1d7d493a83ce996aff6fa2649bc688cb0414", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f10c1d7d493a83ce996aff6fa2649bc688cb0414", "committedDate": "2020-06-07T14:03:52Z", "message": "Remove redundant class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32e91265bcf2917e9bd773e5d00f807c8bc06673", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/32e91265bcf2917e9bd773e5d00f807c8bc06673", "committedDate": "2020-06-08T09:47:42Z", "message": "Refactor ExecuteResult"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c76f2688b534bafdbbd52109b7209e85385040b1", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c76f2688b534bafdbbd52109b7209e85385040b1", "committedDate": "2020-06-09T08:24:32Z", "message": "Adding API docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bd6db9f5df340d30e9f2099b29ac4efaec85993", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7bd6db9f5df340d30e9f2099b29ac4efaec85993", "committedDate": "2020-06-09T08:27:31Z", "message": "Remove unnecessary lines"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f796fa2e8dd6c035ad36844429f93fb2bfd36475", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f796fa2e8dd6c035ad36844429f93fb2bfd36475", "committedDate": "2020-06-11T07:24:21Z", "message": "Add SQL batch execute tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "337475bddc4693fc0f1a97864a0f2638bd7220f8", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/337475bddc4693fc0f1a97864a0f2638bd7220f8", "committedDate": "2020-06-11T08:11:43Z", "message": "Fix BatchExecuteError not under sql:Error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9550aa4c125f71e7c47234c9bea174a6a397a624", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9550aa4c125f71e7c47234c9bea174a6a397a624", "committedDate": "2020-06-11T08:12:28Z", "message": "Add jdbc batchExecute testcases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0672d91238dad3385b73135295794215cb523a26", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0672d91238dad3385b73135295794215cb523a26", "committedDate": "2020-06-11T08:13:16Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NzU3Mzgz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23942#pullrequestreview-428757383", "createdAt": "2020-06-11T09:47:33Z", "commit": {"oid": "0672d91238dad3385b73135295794215cb523a26"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOTo0NzozM1rOGiWQrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOTo0NzozM1rOGiWQrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2OTQ4NA==", "bodyText": "Isn't this should be 2.0.0?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23942#discussion_r438669484", "createdAt": "2020-06-11T09:47:33Z", "author": {"login": "sinthuja"}, "path": "stdlib/database/jdbc/src/test/java/org/ballerinalang/jdbc/batchexecute/BatchExecuteTest.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.jdbc.batchexecute;\n+\n+import org.ballerinalang.jdbc.utils.SQLDBUtils;\n+import org.ballerinalang.model.values.BError;\n+import org.ballerinalang.model.values.BMap;\n+import org.ballerinalang.model.values.BString;\n+import org.ballerinalang.model.values.BValue;\n+import org.ballerinalang.model.values.BValueArray;\n+import org.ballerinalang.model.values.BValueType;\n+import org.ballerinalang.sql.Constants;\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.BRunUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.sql.SQLException;\n+\n+import static org.ballerinalang.sql.Constants.ErrorRecordFields.EXECUTION_RESULTS;\n+\n+/**\n+ * This test class verifies the behaviour of the batch execute.\n+ *\n+ * @since 1.3.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0672d91238dad3385b73135295794215cb523a26"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NzU3NTkw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23942#pullrequestreview-428757590", "createdAt": "2020-06-11T09:47:49Z", "commit": {"oid": "0672d91238dad3385b73135295794215cb523a26"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOTo0Nzo0OVrOGiWRcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOTo0Nzo0OVrOGiWRcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2OTY4MA==", "bodyText": "Looks like a formatting issue?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23942#discussion_r438669680", "createdAt": "2020-06-11T09:47:49Z", "author": {"login": "sinthuja"}, "path": "stdlib/database/jdbc/src/test/java/org/ballerinalang/jdbc/batchexecute/BatchExecuteTest.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.jdbc.batchexecute;\n+\n+import org.ballerinalang.jdbc.utils.SQLDBUtils;\n+import org.ballerinalang.model.values.BError;\n+import org.ballerinalang.model.values.BMap;\n+import org.ballerinalang.model.values.BString;\n+import org.ballerinalang.model.values.BValue;\n+import org.ballerinalang.model.values.BValueArray;\n+import org.ballerinalang.model.values.BValueType;\n+import org.ballerinalang.sql.Constants;\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.BRunUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.sql.SQLException;\n+\n+import static org.ballerinalang.sql.Constants.ErrorRecordFields.EXECUTION_RESULTS;\n+\n+/**\n+ * This test class verifies the behaviour of the batch execute.\n+ *\n+ * @since 1.3.0\n+ */\n+public class BatchExecuteTest {\n+    private CompileResult result;\n+    private static final String DB_NAME = \"TEST_SQL_BATCH_EXECUTE\";\n+    private static final String JDBC_URL = \"jdbc:h2:file:\" + SQLDBUtils.DB_DIR + DB_NAME;\n+    private BValue[] args = {new BString(JDBC_URL), new BString(SQLDBUtils.DB_USER),\n+            new BString(SQLDBUtils.DB_PASSWORD)};\n+    @BeforeClass\n+    public void setup() throws SQLException {\n+        result = BCompileUtil.compileOffline(SQLDBUtils.getBalFilesDir(\"batchexecute\",\n+                                                                            \"batch-execute-query-test.bal\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0672d91238dad3385b73135295794215cb523a26"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e00abadeee63ba34c9c0cc85598ca8544dc2a17e", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e00abadeee63ba34c9c0cc85598ca8544dc2a17e", "committedDate": "2020-06-11T10:02:46Z", "message": "Reformat"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4ODg1NTQ1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23942#pullrequestreview-428885545", "createdAt": "2020-06-11T13:04:31Z", "commit": {"oid": "e00abadeee63ba34c9c0cc85598ca8544dc2a17e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4365, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}