{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMTcwMTQ1", "number": 22606, "title": "Improve Ballerina-file API doc", "bodyText": "Purpose\nImprove Ballerina-file API doc\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-14T13:01:50Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606", "merged": true, "mergeCommit": {"oid": "98e817555bfcec70268455489aec3f0500112c8d"}, "closed": true, "closedAt": "2020-04-15T15:37:01Z", "author": {"login": "niveathika"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXjENegH2gAyNDAzMTcwMTQ1OjU2NjZiNThkNzViMjc2MDU3ODAyZGYxODVjZThiYTk4YzRjNzRjYjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX5cKAgFqTM5Mzg2MjQ3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5666b58d75b276057802df185ce8ba98c4c74cb9", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5666b58d75b276057802df185ce8ba98c4c74cb9", "committedDate": "2020-04-14T12:57:37Z", "message": "Improve API docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "315632332345a0d5da01a6d7eb8f5eabddf17d8a", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/315632332345a0d5da01a6d7eb8f5eabddf17d8a", "committedDate": "2020-04-14T14:31:23Z", "message": "Add api docs for directory listener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/62db2b8c76e0e5541a07a51a1e99dca10fb184a3", "committedDate": "2020-04-14T14:42:33Z", "message": "Fix doc comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNTIzOTMw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#pullrequestreview-393523930", "createdAt": "2020-04-15T07:35:00Z", "commit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 46, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzozNTowMFrOGFtWLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzo0NTo0MlrOGFtthg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYzOTAyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            file/directory and retrieve metadata of the file.\n          \n          \n            \n            file/directory, and retrieve metadata of the file.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408639020", "createdAt": "2020-04-15T07:35:00Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/Module.md", "diffHunk": "@@ -1,52 +1,10 @@\n-## Module overview\n-\n This module contains functions to perform file system based operations such as create, delete, rename the\n file/directory and retrieve metadata of the file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYzOTQwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For an example on the usage of file operations, see the [File Example](https://ballerina.io/v1-2/learn/by-example/file.html).\n          \n          \n            \n            For an example on the usage of the operations, see the [File Example](https://ballerina.io/learn/by-example/file.html).", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408639406", "createdAt": "2020-04-15T07:35:41Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/Module.md", "diffHunk": "@@ -1,52 +1,10 @@\n-## Module overview\n-\n This module contains functions to perform file system based operations such as create, delete, rename the\n file/directory and retrieve metadata of the file.\n \n-## Sample\n-\n-The sample given below uses the functions in the module to get the system-level information.\n-\n-```ballerina\n-import ballerina/file;\n-import ballerina/io;\n-\n-public function main() {\n-\n-    // Get the current directory path.\n-    io:println(\"Current directory: \" + file:getCurrentDirectory());\n-\n-    // Check whether file or directory of the provided path exists.\n-    boolean result = file:exists(\"foo/bar.txt\");\n-\n-    // Create a new directory.\n-    string | error results = file:createDir(\"foo/bar\");\n-\n-    // Create a directory with any non-existent parents.\n-    string | error results = file:createDir(\"foo/bar\", true);\n-\n-    // Remove the file or directory in the specified file path.\n-    error? results = file:remove(\"foo/bar.txt\");\n-\n-    // Remove the directory in the specified file path with all its children.\n-    error? results = file:remove(\"foo/bar\", true);\n-\n-    // Rename(Move) the file or directory to the new path.\n-    error? results = file:rename(\"/A/B/C\", \"/A/B/D\");\n-\n-    // Get default directory use for temporary files.\n-    string results = file:tempDir();\n-\n-    // Create a file in given file path.\n-    string | error results = file:createFile(\"bar.txt\");\n+For an example on the usage of file operations, see the [File Example](https://ballerina.io/v1-2/learn/by-example/file.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MDAzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For an example on the usage of `Directory Listener` see the [Directory Listener Example](https://ballerina.io/v1-2/learn/by-example/directory-listener.html).\n          \n          \n            \n            For an example on the usage of the operations, see the [Directory Listener Example](https://ballerina.io/learn/by-example/directory-listener.html).", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408640038", "createdAt": "2020-04-15T07:36:55Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/Module.md", "diffHunk": "@@ -1,52 +1,10 @@\n-## Module overview\n-\n This module contains functions to perform file system based operations such as create, delete, rename the\n file/directory and retrieve metadata of the file.\n \n-## Sample\n-\n-The sample given below uses the functions in the module to get the system-level information.\n-\n-```ballerina\n-import ballerina/file;\n-import ballerina/io;\n-\n-public function main() {\n-\n-    // Get the current directory path.\n-    io:println(\"Current directory: \" + file:getCurrentDirectory());\n-\n-    // Check whether file or directory of the provided path exists.\n-    boolean result = file:exists(\"foo/bar.txt\");\n-\n-    // Create a new directory.\n-    string | error results = file:createDir(\"foo/bar\");\n-\n-    // Create a directory with any non-existent parents.\n-    string | error results = file:createDir(\"foo/bar\", true);\n-\n-    // Remove the file or directory in the specified file path.\n-    error? results = file:remove(\"foo/bar.txt\");\n-\n-    // Remove the directory in the specified file path with all its children.\n-    error? results = file:remove(\"foo/bar\", true);\n-\n-    // Rename(Move) the file or directory to the new path.\n-    error? results = file:rename(\"/A/B/C\", \"/A/B/D\");\n-\n-    // Get default directory use for temporary files.\n-    string results = file:tempDir();\n-\n-    // Create a file in given file path.\n-    string | error results = file:createFile(\"bar.txt\");\n+For an example on the usage of file operations, see the [File Example](https://ballerina.io/v1-2/learn/by-example/file.html).\n \n-    // Get metadata information of the file.\n-    file:FileInfo | error result = file:getFileInfo(\"foo/bar.txt\");\n+## Directory Listener \n \n-    // Get the list of files in the directory.\n-    file:FileInfo[] | error results = file:readDir(\"foo/bar\");\n+The `Directory Listener` is used to listen to a directory in the local file system. It notifies when new files are created in the directory or when the existing files are deleted or modified.\n \n-    // Copy the file or directory to the new path.\n-    error? results = file:copy(\"/A/B/C\", \"/A/B/D\", true);\n-}\n-```\n+For an example on the usage of `Directory Listener` see the [Directory Listener Example](https://ballerina.io/v1-2/learn/by-example/directory-listener.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MDE0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Current working directory, or else an empty string if the current working directory cannot be determined\n          \n          \n            \n            # + return - Current working directory or else an empty string if the current working directory cannot be determined", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408640143", "createdAt": "2020-04-15T07:37:06Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -17,8 +17,11 @@\n import ballerina/java;\n \n # Returns the current working directory.\n-#\n-# + return - Current working directory or an empty string if the current working directory cannot be determined\n+# ```ballerina\n+# string dirPath = file:getCurrentDirectory();\n+# ```\n+# \n+# + return - Current working directory, or else an empty string if the current working directory cannot be determined", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MDI1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Reports whether file or directory exists for the given the path.\n          \n          \n            \n            # Reports whether the file or directory exists in the given the path.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408640259", "createdAt": "2020-04-15T07:37:18Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -29,9 +32,12 @@ function externGetCurrentDirectory() returns handle = @java:Method {\n } external;\n \n # Reports whether file or directory exists for the given the path.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MDMyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + path - String value of file path\n          \n          \n            \n            # + path - String value of the file path", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408640328", "createdAt": "2020-04-15T07:37:25Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -29,9 +32,12 @@ function externGetCurrentDirectory() returns handle = @java:Method {\n } external;\n \n # Reports whether file or directory exists for the given the path.\n+# ```ballerina\n+# boolean result = file:exists(\"foo/bar.txt\");\n+# ```\n #\n-# + path - String value of file path.\n-# + return - True if path is absolute, else false\n+# + path - String value of file path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MDQwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - True if path is absolute, or else false\n          \n          \n            \n            # + return - True if the path is absolute or else false", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408640401", "createdAt": "2020-04-15T07:37:35Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -29,9 +32,12 @@ function externGetCurrentDirectory() returns handle = @java:Method {\n } external;\n \n # Reports whether file or directory exists for the given the path.\n+# ```ballerina\n+# boolean result = file:exists(\"foo/bar.txt\");\n+# ```\n #\n-# + path - String value of file path.\n-# + return - True if path is absolute, else false\n+# + path - String value of file path\n+# + return - True if path is absolute, or else false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MDYxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # If parentDirs flag is true, Creates a directory in specified path with any necessary parents.\n          \n          \n            \n            # If the `parentDirs` flag is true, it creates a directory in the specified path with any necessary parents.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408640619", "createdAt": "2020-04-15T07:37:57Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -43,10 +49,13 @@ function externExists(handle path) returns boolean = @java:Method {\n \n # Creates a new directory with the specified file name.\n # If parentDirs flag is true, Creates a directory in specified path with any necessary parents.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MDc2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Absolute path value of the created directory, or else an `Error` if failed\n          \n          \n            \n            # + return - Absolute path value of the created directory or else an `Error` if failed\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408640769", "createdAt": "2020-04-15T07:38:14Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -43,10 +49,13 @@ function externExists(handle path) returns boolean = @java:Method {\n \n # Creates a new directory with the specified file name.\n # If parentDirs flag is true, Creates a directory in specified path with any necessary parents.\n+# ```ballerina\n+# string | error results = file:createDir(\"foo/bar\");\n+# ```\n #\n-# + dir - directory name.\n-# + parentDirs - Indicates whether the `createDir` should create non-existing parent directories.\n-# + return - Returns absolute path value of the created directory or an `Error` if failed\n+# + dir - Directory name\n+# + parentDirs - Indicates whether the `createDir` should create non-existing parent directories\n+# + return - Absolute path value of the created directory, or else an `Error` if failed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MDg4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # If recursive flag is true, Removes the path and any children it contains.\n          \n          \n            \n            # If the recursive flag is true, it removes the path and any children it contains.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408640888", "createdAt": "2020-04-15T07:38:28Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -63,10 +72,13 @@ function externCreateDir(handle dir, boolean parentDirs) returns handle|Error =\n \n # Removes the specified file or directory.\n # If recursive flag is true, Removes the path and any children it contains.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MDk1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + path - String value of file/directory path\n          \n          \n            \n            # + path - String value of the file/directory path", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408640954", "createdAt": "2020-04-15T07:38:36Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -63,10 +72,13 @@ function externCreateDir(handle dir, boolean parentDirs) returns handle|Error =\n \n # Removes the specified file or directory.\n # If recursive flag is true, Removes the path and any children it contains.\n+# ```ballerina\n+# file:Error? results = file:remove(\"foo/bar.txt\");\n+# ```\n #\n-# + path - String value of file/directory path.\n-# + recursive - Indicates whether the `remove` should recursively remove all the file inside the given directory.\n-# + return - Returns an `Error` if failed to remove.\n+# + path - String value of file/directory path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MTA3MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + recursive - Indicates whether the `remove` should recursively remove all the file inside the given directory\n          \n          \n            \n            # + recursive - Indicates whether the `remove` should recursively remove all the files inside the given directory", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408641070", "createdAt": "2020-04-15T07:38:48Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -63,10 +72,13 @@ function externCreateDir(handle dir, boolean parentDirs) returns handle|Error =\n \n # Removes the specified file or directory.\n # If recursive flag is true, Removes the path and any children it contains.\n+# ```ballerina\n+# file:Error? results = file:remove(\"foo/bar.txt\");\n+# ```\n #\n-# + path - String value of file/directory path.\n-# + recursive - Indicates whether the `remove` should recursively remove all the file inside the given directory.\n-# + return - Returns an `Error` if failed to remove.\n+# + path - String value of file/directory path\n+# + recursive - Indicates whether the `remove` should recursively remove all the file inside the given directory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MTI0MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `Error` if failed to remove\n          \n          \n            \n            # + return - An `Error` if failed to remove\n          \n      \n    \n    \n  \n\nDo we need to specify the error?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408641241", "createdAt": "2020-04-15T07:39:04Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -63,10 +72,13 @@ function externCreateDir(handle dir, boolean parentDirs) returns handle|Error =\n \n # Removes the specified file or directory.\n # If recursive flag is true, Removes the path and any children it contains.\n+# ```ballerina\n+# file:Error? results = file:remove(\"foo/bar.txt\");\n+# ```\n #\n-# + path - String value of file/directory path.\n-# + recursive - Indicates whether the `remove` should recursively remove all the file inside the given directory.\n-# + return - Returns an `Error` if failed to remove.\n+# + path - String value of file/directory path\n+# + recursive - Indicates whether the `remove` should recursively remove all the file inside the given directory\n+# + return - An `Error` if failed to remove", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MTQxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Renames(Moves) old path to new path.\n          \n          \n            \n            # Renames(Moves) the old path with the new path.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408641411", "createdAt": "2020-04-15T07:39:26Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -78,10 +90,13 @@ function externRemove(handle path, boolean recursive) returns Error? = @java:Met\n \n # Renames(Moves) old path to new path.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MTUxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # If new path already exists and it is not a directory, this replaces the file.\n          \n          \n            \n            # If the new path already exists and it is not a directory, this replaces the file.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408641518", "createdAt": "2020-04-15T07:39:34Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -78,10 +90,13 @@ function externRemove(handle path, boolean recursive) returns Error? = @java:Met\n \n # Renames(Moves) old path to new path.\n # If new path already exists and it is not a directory, this replaces the file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MTYxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + oldPath - String value of old file path\n          \n          \n            \n            # + oldPath - String value of the old file path", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408641616", "createdAt": "2020-04-15T07:39:45Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -78,10 +90,13 @@ function externRemove(handle path, boolean recursive) returns Error? = @java:Met\n \n # Renames(Moves) old path to new path.\n # If new path already exists and it is not a directory, this replaces the file.\n+# ```ballerina\n+# file:error? results = file:rename(\"/A/B/C\", \"/A/B/D\");\n+# ```\n #\n-# + oldPath - String value of old file path.\n-# + newPath - String value of new file path.\n-# + return - Returns an `Error` if failed to rename.\n+# + oldPath - String value of old file path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MTY3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + newPath - String value of new file path\n          \n          \n            \n            # + newPath - String value of the new file path", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408641671", "createdAt": "2020-04-15T07:39:51Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -78,10 +90,13 @@ function externRemove(handle path, boolean recursive) returns Error? = @java:Met\n \n # Renames(Moves) old path to new path.\n # If new path already exists and it is not a directory, this replaces the file.\n+# ```ballerina\n+# file:error? results = file:rename(\"/A/B/C\", \"/A/B/D\");\n+# ```\n #\n-# + oldPath - String value of old file path.\n-# + newPath - String value of new file path.\n-# + return - Returns an `Error` if failed to rename.\n+# + oldPath - String value of old file path\n+# + newPath - String value of new file path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MTc0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `Error` if failed to rename\n          \n          \n            \n            # + return - An `Error` if failed to rename\n          \n      \n    \n    \n  \n\nDo we need to specify the error?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408641748", "createdAt": "2020-04-15T07:39:58Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -78,10 +90,13 @@ function externRemove(handle path, boolean recursive) returns Error? = @java:Met\n \n # Renames(Moves) old path to new path.\n # If new path already exists and it is not a directory, this replaces the file.\n+# ```ballerina\n+# file:error? results = file:rename(\"/A/B/C\", \"/A/B/D\");\n+# ```\n #\n-# + oldPath - String value of old file path.\n-# + newPath - String value of new file path.\n-# + return - Returns an `Error` if failed to rename.\n+# + oldPath - String value of old file path\n+# + newPath - String value of new file path\n+# + return - An `Error` if failed to rename", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MTg2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Creates a file in specified file path.\n          \n          \n            \n            # Creates a file in the specified file path.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408641862", "createdAt": "2020-04-15T07:40:09Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -105,9 +123,12 @@ function externTempDir() returns handle = @java:Method {\n \n # Creates a file in specified file path.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MTk0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Truncates if file already exists in the given path.\n          \n          \n            \n            # Truncates if the file already exists in the given path.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408641942", "createdAt": "2020-04-15T07:40:16Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -105,9 +123,12 @@ function externTempDir() returns handle = @java:Method {\n \n # Creates a file in specified file path.\n # Truncates if file already exists in the given path.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MjAwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + path - String value of file path\n          \n          \n            \n            # + path - String value of the file path", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408642001", "createdAt": "2020-04-15T07:40:23Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -105,9 +123,12 @@ function externTempDir() returns handle = @java:Method {\n \n # Creates a file in specified file path.\n # Truncates if file already exists in the given path.\n+# ```ballerina\n+# string | error results = file:createFile(\"bar.txt\");\n+# ```\n #\n-# + path - String value of file path.\n-# + return - Returns absolute path value of the created file or an `Error` if failed\n+# + path - String value of file path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MjExOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Absolute path value of the created file, or else an `Error` if failed\n          \n          \n            \n            # + return - Absolute path value of the created file or else an `Error` if failed\n          \n      \n    \n    \n  \n\nDo we need to specify the error?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408642119", "createdAt": "2020-04-15T07:40:36Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -105,9 +123,12 @@ function externTempDir() returns handle = @java:Method {\n \n # Creates a file in specified file path.\n # Truncates if file already exists in the given path.\n+# ```ballerina\n+# string | error results = file:createFile(\"bar.txt\");\n+# ```\n #\n-# + path - String value of file path.\n-# + return - Returns absolute path value of the created file or an `Error` if failed\n+# + path - String value of file path\n+# + return - Absolute path value of the created file, or else an `Error` if failed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MjE4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Returns metadata information of the file specified in file path.\n          \n          \n            \n            # Returns the metadata information of the file specified in the file path.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408642188", "createdAt": "2020-04-15T07:40:45Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -123,9 +144,12 @@ function externCreateFile(handle path) returns handle|Error = @java:Method {\n } external;\n \n # Returns metadata information of the file specified in file path.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MjM3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - FileInfo instance with file metadata, or else an `Error`\n          \n          \n            \n            # + return - The `FileInfo` instance with the file metadata or else an `Error`\n          \n      \n    \n    \n  \n\nDo we need to specify the error?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408642378", "createdAt": "2020-04-15T07:41:09Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -123,9 +144,12 @@ function externCreateFile(handle path) returns handle|Error = @java:Method {\n } external;\n \n # Returns metadata information of the file specified in file path.\n+# ```ballerina\n+# file:FileInfo | error result = file:getFileInfo(\"foo/bar.txt\");\n+# ```\n #\n # + path - String value of the file path.\n-# + return - Returns FileInfo instance with file metadata or an `Error`\n+# + return - FileInfo instance with file metadata, or else an `Error`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MjQ4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Reads the directory and returns a list of files and directories # inside the specified directory.\n          \n          \n            \n            # Reads the directory and returns a list of files and directories \n          \n          \n            \n            # inside the specified directory.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408642486", "createdAt": "2020-04-15T07:41:24Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -135,11 +159,14 @@ function externGetFileInfo(handle path) returns FileInfo|Error = @java:Method {\n     name: \"getFileInfo\"\n } external;\n \n-# Reads the directory and returns a list of files and directories # inside the specified directory\n+# Reads the directory and returns a list of files and directories # inside the specified directory.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MjU1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + path - String value of directory path.\n          \n          \n            \n            # + path - String value of the directory path.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408642558", "createdAt": "2020-04-15T07:41:32Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -135,11 +159,14 @@ function externGetFileInfo(handle path) returns FileInfo|Error = @java:Method {\n     name: \"getFileInfo\"\n } external;\n \n-# Reads the directory and returns a list of files and directories # inside the specified directory\n+# Reads the directory and returns a list of files and directories # inside the specified directory.\n+# ```ballerina\n+# file:FileInfo[] | error results = file:readDir(\"foo/bar\");\n+# ```\n #\n # + path - String value of directory path.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0Mjc5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - FileInfo array, or else an `Error` if there is an error while changing the mode.\n          \n          \n            \n            # + return - The `FileInfo` array or else an `Error` if there is an error while changing the mode.\n          \n      \n    \n    \n  \n\nDo we need to specify the error?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408642796", "createdAt": "2020-04-15T07:41:55Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -135,11 +159,14 @@ function externGetFileInfo(handle path) returns FileInfo|Error = @java:Method {\n     name: \"getFileInfo\"\n } external;\n \n-# Reads the directory and returns a list of files and directories # inside the specified directory\n+# Reads the directory and returns a list of files and directories # inside the specified directory.\n+# ```ballerina\n+# file:FileInfo[] | error results = file:readDir(\"foo/bar\");\n+# ```\n #\n # + path - String value of directory path.\n-# + maxDepth - The maximum number of directory levels to visit. -1 to indicate that all levels should be visited.\n-# + return - Returns FileInfo array or an `Error` if there is an error while changing the mode.\n+# + maxDepth - The maximum number of directory levels to visit. -1 to indicate that all levels should be visited\n+# + return - FileInfo array, or else an `Error` if there is an error while changing the mode.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MjkwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Copy file/directory in old path to new path.\n          \n          \n            \n            # Copy the file/directory in the old path to the new path.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408642907", "createdAt": "2020-04-15T07:42:08Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -151,11 +178,14 @@ function externReadDir(handle path, int maxDepth) returns FileInfo[]|Error = @ja\n \n # Copy file/directory in old path to new path.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MzEwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # If new path already exists, this replaces the file.\n          \n          \n            \n            # If a file already exists in the new path, this replaces that file.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408643106", "createdAt": "2020-04-15T07:42:33Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -151,11 +178,14 @@ function externReadDir(handle path, int maxDepth) returns FileInfo[]|Error = @ja\n \n # Copy file/directory in old path to new path.\n # If new path already exists, this replaces the file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MzI4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + sourcePath - String value of old file path\n          \n          \n            \n            # + sourcePath - String value of the old file path", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408643285", "createdAt": "2020-04-15T07:42:51Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -151,11 +178,14 @@ function externReadDir(handle path, int maxDepth) returns FileInfo[]|Error = @ja\n \n # Copy file/directory in old path to new path.\n # If new path already exists, this replaces the file.\n+# ```ballerina\n+# file:Error? results = file:copy(\"/A/B/C\", \"/A/B/D\", true);\n+# ```\n #\n-# + sourcePath - String value of old file path.\n-# + destinationPath - String value of new file path.\n-# + replaceExisting - Flag to allow replace if file already exists in destination path.\n-# + return - Returns an `Error` if failed to rename.\n+# + sourcePath - String value of old file path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MzM0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + destinationPath - String value of new file path\n          \n          \n            \n            # + destinationPath - String value of the new file path", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408643342", "createdAt": "2020-04-15T07:42:57Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -151,11 +178,14 @@ function externReadDir(handle path, int maxDepth) returns FileInfo[]|Error = @ja\n \n # Copy file/directory in old path to new path.\n # If new path already exists, this replaces the file.\n+# ```ballerina\n+# file:Error? results = file:copy(\"/A/B/C\", \"/A/B/D\", true);\n+# ```\n #\n-# + sourcePath - String value of old file path.\n-# + destinationPath - String value of new file path.\n-# + replaceExisting - Flag to allow replace if file already exists in destination path.\n-# + return - Returns an `Error` if failed to rename.\n+# + sourcePath - String value of old file path\n+# + destinationPath - String value of new file path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MzUyNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + replaceExisting - Flag to allow replace if file already exists in destination path\n          \n          \n            \n            # + replaceExisting - Flag to replace if the file already exists in the destination path", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408643527", "createdAt": "2020-04-15T07:43:15Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -151,11 +178,14 @@ function externReadDir(handle path, int maxDepth) returns FileInfo[]|Error = @ja\n \n # Copy file/directory in old path to new path.\n # If new path already exists, this replaces the file.\n+# ```ballerina\n+# file:Error? results = file:copy(\"/A/B/C\", \"/A/B/D\", true);\n+# ```\n #\n-# + sourcePath - String value of old file path.\n-# + destinationPath - String value of new file path.\n-# + replaceExisting - Flag to allow replace if file already exists in destination path.\n-# + return - Returns an `Error` if failed to rename.\n+# + sourcePath - String value of old file path\n+# + destinationPath - String value of new file path\n+# + replaceExisting - Flag to allow replace if file already exists in destination path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MzU4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `Error` if failed to rename\n          \n          \n            \n            # + return - An `Error` if failed to rename\n          \n      \n    \n    \n  \n\nDo we need to specify the error?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408643589", "createdAt": "2020-04-15T07:43:21Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file.bal", "diffHunk": "@@ -151,11 +178,14 @@ function externReadDir(handle path, int maxDepth) returns FileInfo[]|Error = @ja\n \n # Copy file/directory in old path to new path.\n # If new path already exists, this replaces the file.\n+# ```ballerina\n+# file:Error? results = file:copy(\"/A/B/C\", \"/A/B/D\", true);\n+# ```\n #\n-# + sourcePath - String value of old file path.\n-# + destinationPath - String value of new file path.\n-# + replaceExisting - Flag to allow replace if file already exists in destination path.\n-# + return - Returns an `Error` if failed to rename.\n+# + sourcePath - String value of old file path\n+# + destinationPath - String value of new file path\n+# + replaceExisting - Flag to allow replace if file already exists in destination path\n+# + return - An `Error` if failed to rename", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MzY0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Returns the last modified time of the file.\n          \n          \n            \n                # Returns the last-modified time of the file.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408643647", "createdAt": "2020-04-15T07:43:28Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file_info.bal", "diffHunk": "@@ -57,21 +57,21 @@ public type FileInfo object {\n \n     # Returns the last modified time of the file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MzczMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - Last modified time of the file\n          \n          \n            \n                # + return - Last-modified time of the file", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408643733", "createdAt": "2020-04-15T07:43:36Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/file_info.bal", "diffHunk": "@@ -57,21 +57,21 @@ public type FileInfo object {\n \n     # Returns the last modified time of the file.\n     #\n-    # + return - Last modified time of the file.\n+    # + return - Last modified time of the file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0Mzk0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents directory listener endpoint where used to listen to a directory in the local file system.\n          \n          \n            \n            # Represents the directory listener endpoint, which is used to listen to a directory in the local file system.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408643945", "createdAt": "2020-04-15T07:43:58Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/service_endpoint.bal", "diffHunk": "@@ -20,13 +20,16 @@ import ballerina/java;\n ///////////////////////////////////\n /// Direcotry Listener Endpoint ///\n ///////////////////////////////////\n+\n # Represents directory listener endpoint where used to listen to a directory in the local file system.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0NDA2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + listenerConfig - ListenerConfig record with directory details \n          \n          \n            \n                # + listenerConfig - The `ListenerConfig` record with the directory details", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408644060", "createdAt": "2020-04-15T07:44:10Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/service_endpoint.bal", "diffHunk": "@@ -20,13 +20,16 @@ import ballerina/java;\n ///////////////////////////////////\n /// Direcotry Listener Endpoint ///\n ///////////////////////////////////\n+\n # Represents directory listener endpoint where used to listen to a directory in the local file system.\n-#\n public type Listener object {\n     private ListenerConfig config;\n \n     *lang:Listener;\n \n+    # Creates a new Directory listener.\n+    # \n+    # + listenerConfig - ListenerConfig record with directory details ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0NDE4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - (), or else error upon failure to start the listener \n          \n          \n            \n                # + return - () or else error upon failure to start the listener \n          \n      \n    \n    \n  \n\nDo we need to specify the error?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408644185", "createdAt": "2020-04-15T07:44:19Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/service_endpoint.bal", "diffHunk": "@@ -35,22 +38,40 @@ public type Listener object {\n         }\n     }\n \n+    # Starts the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to start the listener ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0NDM0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Gracefully stops the `file:Listener`.\n          \n          \n            \n                # Stops the `file:Listener` gracefully.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408644345", "createdAt": "2020-04-15T07:44:35Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/service_endpoint.bal", "diffHunk": "@@ -35,22 +38,40 @@ public type Listener object {\n         }\n     }\n \n+    # Starts the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to start the listener \n     public function __start() returns error? {\n         return start(self);\n     }\n \n-    public function __gracefulStop() returns error? {\n+    # Gracefully stops the `file:Listener`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0NDQ1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - (), or else error upon failure to stop the listener \n          \n          \n            \n                # + return - () or else error upon failure to stop the listener \n          \n      \n    \n    \n  \n\nDo we need to specify the error?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408644458", "createdAt": "2020-04-15T07:44:45Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/service_endpoint.bal", "diffHunk": "@@ -35,22 +38,40 @@ public type Listener object {\n         }\n     }\n \n+    # Starts the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to start the listener \n     public function __start() returns error? {\n         return start(self);\n     }\n \n-    public function __gracefulStop() returns error? {\n+    # Gracefully stops the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to stop the listener ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0NDU4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Forecefully stops the `file:Listener`.\n          \n          \n            \n                # Stops the `file:Listener` forcefully.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408644581", "createdAt": "2020-04-15T07:44:59Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/service_endpoint.bal", "diffHunk": "@@ -35,22 +38,40 @@ public type Listener object {\n         }\n     }\n \n+    # Starts the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to start the listener \n     public function __start() returns error? {\n         return start(self);\n     }\n \n-    public function __gracefulStop() returns error? {\n+    # Gracefully stops the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to stop the listener \n+        public function __gracefulStop() returns error? {\n         return ();\n     }\n \n+    # Forecefully stops the `file:Listener`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0NDY4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - (), or else error upon failure to stop the listener \n          \n          \n            \n                # + return - () or else error upon failure to stop the listener \n          \n      \n    \n    \n  \n\nDo we need to specify the error?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408644681", "createdAt": "2020-04-15T07:45:09Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/service_endpoint.bal", "diffHunk": "@@ -35,22 +38,40 @@ public type Listener object {\n         }\n     }\n \n+    # Starts the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to start the listener \n     public function __start() returns error? {\n         return start(self);\n     }\n \n-    public function __gracefulStop() returns error? {\n+    # Gracefully stops the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to stop the listener \n+        public function __gracefulStop() returns error? {\n         return ();\n     }\n \n+    # Forecefully stops the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to stop the listener ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0NDc0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Binds a service to `file:Listener`.\n          \n          \n            \n                # Binds a service to the `file:Listener`.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408644745", "createdAt": "2020-04-15T07:45:17Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/service_endpoint.bal", "diffHunk": "@@ -35,22 +38,40 @@ public type Listener object {\n         }\n     }\n \n+    # Starts the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to start the listener \n     public function __start() returns error? {\n         return start(self);\n     }\n \n-    public function __gracefulStop() returns error? {\n+    # Gracefully stops the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to stop the listener \n+        public function __gracefulStop() returns error? {\n         return ();\n     }\n \n+    # Forecefully stops the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to stop the listener \n     public function __immediateStop() returns error? {\n         return ();\n     }\n \n+    # Binds a service to `file:Listener`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0NDgyNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - (), or else error upon failure to attach to the service\n          \n          \n            \n                # + return - () or else error upon failure to attach to the service\n          \n      \n    \n    \n  \n\nDo we need to specify the error?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408644827", "createdAt": "2020-04-15T07:45:25Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/service_endpoint.bal", "diffHunk": "@@ -35,22 +38,40 @@ public type Listener object {\n         }\n     }\n \n+    # Starts the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to start the listener \n     public function __start() returns error? {\n         return start(self);\n     }\n \n-    public function __gracefulStop() returns error? {\n+    # Gracefully stops the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to stop the listener \n+        public function __gracefulStop() returns error? {\n         return ();\n     }\n \n+    # Forecefully stops the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to stop the listener \n     public function __immediateStop() returns error? {\n         return ();\n     }\n \n+    # Binds a service to `file:Listener`.\n+    # \n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - (), or else error upon failure to attach to the service", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0NDkxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Stops listening to the directory and detaches service from the `file:Listener`.\n          \n          \n            \n                # Stops listening to the directory and detaches the service from the `file:Listener`.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408644910", "createdAt": "2020-04-15T07:45:34Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/service_endpoint.bal", "diffHunk": "@@ -35,22 +38,40 @@ public type Listener object {\n         }\n     }\n \n+    # Starts the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to start the listener \n     public function __start() returns error? {\n         return start(self);\n     }\n \n-    public function __gracefulStop() returns error? {\n+    # Gracefully stops the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to stop the listener \n+        public function __gracefulStop() returns error? {\n         return ();\n     }\n \n+    # Forecefully stops the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to stop the listener \n     public function __immediateStop() returns error? {\n         return ();\n     }\n \n+    # Binds a service to `file:Listener`.\n+    # \n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - (), or else error upon failure to attach to the service\n     public function __attach(service s, string? name = ()) returns error? {\n         return register(self, s, name);\n     }\n \n+    # Stops listening to the directory and detaches service from the `file:Listener`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0NDk5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - (), or else error upon failure to detach to the service\n          \n          \n            \n                # + return - () or else error upon failure to detach to the service\n          \n      \n    \n    \n  \n\nDo we need to specify the error?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#discussion_r408644998", "createdAt": "2020-04-15T07:45:42Z", "author": {"login": "praneesha"}, "path": "stdlib/file/src/main/ballerina/src/file/service_endpoint.bal", "diffHunk": "@@ -35,22 +38,40 @@ public type Listener object {\n         }\n     }\n \n+    # Starts the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to start the listener \n     public function __start() returns error? {\n         return start(self);\n     }\n \n-    public function __gracefulStop() returns error? {\n+    # Gracefully stops the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to stop the listener \n+        public function __gracefulStop() returns error? {\n         return ();\n     }\n \n+    # Forecefully stops the `file:Listener`.\n+    # \n+    # + return - (), or else error upon failure to stop the listener \n     public function __immediateStop() returns error? {\n         return ();\n     }\n \n+    # Binds a service to `file:Listener`.\n+    # \n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - (), or else error upon failure to attach to the service\n     public function __attach(service s, string? name = ()) returns error? {\n         return register(self, s, name);\n     }\n \n+    # Stops listening to the directory and detaches service from the `file:Listener`.\n+    # \n+    # + s - Type descriptor of the service\n+    # + return - (), or else error upon failure to detach to the service", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62db2b8c76e0e5541a07a51a1e99dca10fb184a3"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dc1cfe65423a1d89e9fad96f14555e952538af3", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1dc1cfe65423a1d89e9fad96f14555e952538af3", "committedDate": "2020-04-15T14:44:26Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dba6e942f0d70df6187ba472afa654d200deffc0", "author": {"user": {"login": "niveathika", "name": "Niveathika"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dba6e942f0d70df6187ba472afa654d200deffc0", "committedDate": "2020-04-15T14:54:48Z", "message": "Improve error description"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzODYyNDc2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22606#pullrequestreview-393862476", "createdAt": "2020-04-15T15:01:41Z", "commit": {"oid": "dba6e942f0d70df6187ba472afa654d200deffc0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4045, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}