{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NjAzODg1", "number": 25524, "title": "Improve the symbol lookup method in the semantic API", "bodyText": "Purpose\nThis PR introduces a number of changes to the compiler FE in order to make it easier to filter the symbols when using the semantic API.\nApproach\n\nAdd and persist information about the origin of the symbol. e.g., is it coming from a source or a BIR\nAdd and persist position information for public constructs\nIn the symbol lookup API implementation, use the above info to filter out the relevant symbols\n\nRemarks\nOpened #25607 to keep track of the issue of excluding the symbol currently being defined when the cursor position is in a var definition statement.\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-08-28T19:28:24Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524", "merged": true, "mergeCommit": {"oid": "a8539de577ca3c706c3c186dad226a4bd77bf07a"}, "closed": true, "closedAt": "2020-09-10T06:08:26Z", "author": {"login": "pubudu91"}, "timelineItems": {"totalCount": 59, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDaVQ9ABqjM3MDUzOTUyMDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHagwegFqTQ4NTYwNzMyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c2f10cc79ed9dc52c773b200e2f2ec8c9fa24d0", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9c2f10cc79ed9dc52c773b200e2f2ec8c9fa24d0", "committedDate": "2020-08-28T19:25:55Z", "message": "Improve symbol filtering logic and add basic test cases"}, "afterCommit": {"oid": "0f4929f60919f33364ec2ea7150629671719ed51", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0f4929f60919f33364ec2ea7150629671719ed51", "committedDate": "2020-08-28T19:39:29Z", "message": "Improve symbol filtering logic and add basic test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f4929f60919f33364ec2ea7150629671719ed51", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0f4929f60919f33364ec2ea7150629671719ed51", "committedDate": "2020-08-28T19:39:29Z", "message": "Improve symbol filtering logic and add basic test cases"}, "afterCommit": {"oid": "67c4251b06e3b082c3963101c9a317f433926344", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/67c4251b06e3b082c3963101c9a317f433926344", "committedDate": "2020-08-31T05:26:52Z", "message": "Improve symbol filtering logic and add basic test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9e15423cb7df9c76cfecd8cc9d14887c62acbe7", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c9e15423cb7df9c76cfecd8cc9d14887c62acbe7", "committedDate": "2020-09-01T19:33:40Z", "message": "Persist origin info for constants"}, "afterCommit": {"oid": "a452bdef86d7d428bffd444b097b81714cf10a5a", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a452bdef86d7d428bffd444b097b81714cf10a5a", "committedDate": "2020-09-01T20:03:20Z", "message": "Sync with API changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d80bbef3ae304d90d982d148fbfc197fb49b8d5", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5d80bbef3ae304d90d982d148fbfc197fb49b8d5", "committedDate": "2020-09-02T16:43:19Z", "message": "Improve symbol lookup logic in imported modules"}, "afterCommit": {"oid": "0679d5981ebbcead6ad2038a98ca3c49f5c665e0", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0679d5981ebbcead6ad2038a98ca3c49f5c665e0", "committedDate": "2020-09-02T16:55:45Z", "message": "Improve symbol lookup logic in imported modules"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2712d3c2e05c41e4e946047a5ab833300b4e55dd", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2712d3c2e05c41e4e946047a5ab833300b4e55dd", "committedDate": "2020-09-03T14:27:22Z", "message": "Fix symbol visibility issue in let expr"}, "afterCommit": {"oid": "7946f130b913f8e62e01feac83f286d201a68006", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7946f130b913f8e62e01feac83f286d201a68006", "committedDate": "2020-09-03T14:53:50Z", "message": "Fix symbol visibility issue in let expr"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2cfb96647dc4a6ec2b37abcd9e61a2627dfd7ead", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2cfb96647dc4a6ec2b37abcd9e61a2627dfd7ead", "committedDate": "2020-09-03T18:22:55Z", "message": "Fix checkstyle issues"}, "afterCommit": {"oid": "c42f07d65a3d20de868c2dc9055c077d1bd67c2f", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c42f07d65a3d20de868c2dc9055c077d1bd67c2f", "committedDate": "2020-09-03T18:25:43Z", "message": "Fix checkstyle issues"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c42f07d65a3d20de868c2dc9055c077d1bd67c2f", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c42f07d65a3d20de868c2dc9055c077d1bd67c2f", "committedDate": "2020-09-03T18:25:43Z", "message": "Fix checkstyle issues"}, "afterCommit": {"oid": "3cce37f038ee7084e263fda7fd295624fdda904e", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3cce37f038ee7084e263fda7fd295624fdda904e", "committedDate": "2020-09-04T04:28:07Z", "message": "Fix checkstyle issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMzY1MTQx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#pullrequestreview-482365141", "createdAt": "2020-09-04T05:20:50Z", "commit": {"oid": "3cce37f038ee7084e263fda7fd295624fdda904e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNToyMDo1MFrOHM_9Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNToyMDo1MFrOHM_9Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM5MjgwMw==", "bodyText": "is it possible to handle the cursor position without converting to a diagnostic position?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#discussion_r483392803", "createdAt": "2020-09-04T05:20:50Z", "author": {"login": "nadeeshaan"}, "path": "compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaSemanticModel.java", "diffHunk": "@@ -71,12 +80,19 @@ public BallerinaSemanticModel(BLangCompilationUnit compilationUnit, BLangPackage\n         Map<Name, List<Scope.ScopeEntry>> scopeSymbols =\n                 symbolResolver.getAllVisibleInScopeSymbols(lookupVisitor.lookUp(this.compilationUnit));\n \n-        for (Entry<Name, List<ScopeEntry>> entry : scopeSymbols.entrySet()) {\n+        DiagnosticPos cursorPos = new DiagnosticPos(new BDiagnosticSource(bLangPackage.packageID, compilationUnit.name),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cce37f038ee7084e263fda7fd295624fdda904e"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMzg1MDg3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#pullrequestreview-482385087", "createdAt": "2020-09-04T06:17:10Z", "commit": {"oid": "3cce37f038ee7084e263fda7fd295624fdda904e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjoxNzoxMFrOHNA-Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjoyMDo0N1rOHNBDUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQwOTQ5OQ==", "bodyText": "Apparently SYMBOL_POSITION constant is redundant and the name is misleading here. Shall we just use 0 for the clarity.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#discussion_r483409499", "createdAt": "2020-09-04T06:17:10Z", "author": {"login": "rasika"}, "path": "compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaSemanticModel.java", "diffHunk": "@@ -99,4 +115,16 @@ public BallerinaSemanticModel(BLangCompilationUnit compilationUnit, BLangPackage\n     public List<Diagnostic> diagnostics(TextRange range) {\n         return new ArrayList<>();\n     }\n+\n+    private boolean isSymbolInUserProject(BSymbol symbol, DiagnosticPos cursorPos) {\n+        return symbol.origin == SOURCE &&\n+                (cursorPos.compareTo(symbol.pos) > SYMBOL_POSITION ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cce37f038ee7084e263fda7fd295624fdda904e"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxMDc3MQ==", "bodyText": "Any specific reason to use FQCN org.ballerinalang.model.symbols.SymbolKind.FUNCTION here? or else shall we just use SymbolKind.FUNCTION for better readability", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#discussion_r483410771", "createdAt": "2020-09-04T06:20:47Z", "author": {"login": "rasika"}, "path": "compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/symbols/BallerinaModule.java", "diffHunk": "@@ -71,9 +74,10 @@ protected BallerinaModule(String name, PackageID moduleID, BPackageSymbol packag\n         List<FunctionSymbol> functions = new ArrayList<>();\n         for (Map.Entry<Name, ScopeEntry> entry : this.packageSymbol.scope.entries.entrySet()) {\n             ScopeEntry scopeEntry = entry.getValue();\n-            if (scopeEntry.symbol instanceof BInvokableSymbol &&\n-                    (scopeEntry.symbol.flags & Flags.PUBLIC) == Flags.PUBLIC &&\n-                    scopeEntry.symbol.kind != org.ballerinalang.model.symbols.SymbolKind.ERROR_CONSTRUCTOR) {\n+            if (scopeEntry.symbol != null\n+                    && scopeEntry.symbol.kind == org.ballerinalang.model.symbols.SymbolKind.FUNCTION", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cce37f038ee7084e263fda7fd295624fdda904e"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNTU1NTg4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#pullrequestreview-482555588", "createdAt": "2020-09-04T10:54:10Z", "commit": {"oid": "3cce37f038ee7084e263fda7fd295624fdda904e"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDo1NDoxMFrOHNJIUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMToyMDo1OVrOHNJ0qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU0MzEyMg==", "bodyText": "Will this be fixed sometime soon? Or do we need to create an issue specifying how this can be improved?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#discussion_r483543122", "createdAt": "2020-09-04T10:54:10Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaModuleID.java", "diffHunk": "@@ -66,4 +66,24 @@ public String toString() {\n         }\n         return this.orgName() + \"/\" + this.moduleName() + \":\" + this.version();\n     }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+\n+        if (obj == null || getClass() != obj.getClass()) {\n+            return false;\n+        }\n+\n+        // TODO: Improve this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cce37f038ee7084e263fda7fd295624fdda904e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU0NDEwMA==", "bodyText": "Can we check if owner kind is SymbolKind.PACKAGE instead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#discussion_r483544100", "createdAt": "2020-09-04T10:56:20Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaSemanticModel.java", "diffHunk": "@@ -99,4 +115,16 @@ public BallerinaSemanticModel(BLangCompilationUnit compilationUnit, BLangPackage\n     public List<Diagnostic> diagnostics(TextRange range) {\n         return new ArrayList<>();\n     }\n+\n+    private boolean isSymbolInUserProject(BSymbol symbol, DiagnosticPos cursorPos) {\n+        return symbol.origin == SOURCE &&\n+                (cursorPos.compareTo(symbol.pos) > SYMBOL_POSITION ||\n+                        symbol.owner instanceof BPackageSymbol ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cce37f038ee7084e263fda7fd295624fdda904e"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU0ODIxMQ==", "bodyText": "Can we test without ballerina/io? Just wondering if we have the requirement for this to be independent of stdlib modules.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#discussion_r483548211", "createdAt": "2020-09-04T11:05:53Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-compiler-api/build.gradle", "diffHunk": "@@ -27,6 +27,11 @@ dependencies {\n \n     testCompile 'org.testng:testng'\n     testCompile project(path: ':ballerina-test-utils', configuration: 'shadow')\n+    testCompile project(':ballerina-io')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cce37f038ee7084e263fda7fd295624fdda904e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU1NDQ3NA==", "bodyText": "Is this correct or should this be SOURCE?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#discussion_r483554474", "createdAt": "2020-09-04T11:20:59Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/symbols/SymbolOrigin.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.ballerinalang.model.symbols;\n+\n+/**\n+ * Represents the various origination points of a symbol.\n+ *\n+ * @since 2.0.0\n+ */\n+public enum SymbolOrigin {\n+\n+    /**\n+     * These are symbols which are defined internally by the compiler. e.g., symbols defined in the symbol table,\n+     * symbols defined in lang lib\n+     */\n+    BUILTIN {\n+        @Override\n+        public SymbolOrigin toBIROrigin() {\n+            return BUILTIN;\n+        }\n+\n+        @Override\n+        public byte value() {\n+            return 1;\n+        }\n+    },\n+\n+    /**\n+     * These are symbols for which there is a corresponding construct in the source file written by the user.\n+     */\n+    SOURCE {\n+        @Override\n+        public SymbolOrigin toBIROrigin() {\n+            return COMPILED_SOURCE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cce37f038ee7084e263fda7fd295624fdda904e"}, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3cce37f038ee7084e263fda7fd295624fdda904e", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3cce37f038ee7084e263fda7fd295624fdda904e", "committedDate": "2020-09-04T04:28:07Z", "message": "Fix checkstyle issues"}, "afterCommit": {"oid": "db53530150ab4ed11e8503bfa7668474e18d85c4", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/db53530150ab4ed11e8503bfa7668474e18d85c4", "committedDate": "2020-09-07T05:48:17Z", "message": "Fix checkstyle issues"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f8188ada88841d4fa52bfdfd6d0d3d46efcc7763", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f8188ada88841d4fa52bfdfd6d0d3d46efcc7763", "committedDate": "2020-09-08T06:18:33Z", "message": "Add position info to public member symbols of a module"}, "afterCommit": {"oid": "688cea0942eb0122f76d937a375538c3035139d5", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/688cea0942eb0122f76d937a375538c3035139d5", "committedDate": "2020-09-08T08:36:24Z", "message": "Fix conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0Njk2NDAy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#pullrequestreview-484696402", "createdAt": "2020-09-09T06:29:53Z", "commit": {"oid": "688cea0942eb0122f76d937a375538c3035139d5"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNjoyOTo1M1rOHO4hPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzowMTowN1rOHO5Zjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM2ODEyNQ==", "bodyText": "how about srcFile --> documentName or fileName?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#discussion_r485368125", "createdAt": "2020-09-09T06:29:53Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/api/SemanticModel.java", "diffHunk": "@@ -35,10 +35,11 @@\n     /**\n      * Lookup the visible symbols at the given location.\n      *\n+     * @param srcFile  path for the file in which we need to look up symbols, relative to the source root path\n      * @param position text position in the source\n      * @return {@link List} of visible symbols in the given location\n      */\n-    List<Symbol> visibleSymbols(LinePosition position);\n+    List<Symbol> visibleSymbols(String srcFile, LinePosition position);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "688cea0942eb0122f76d937a375538c3035139d5"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM3NzcxOQ==", "bodyText": "What do we check here anyway?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#discussion_r485377719", "createdAt": "2020-09-09T06:50:58Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaSemanticModel.java", "diffHunk": "@@ -99,4 +115,16 @@ public BallerinaSemanticModel(BLangCompilationUnit compilationUnit, BLangPackage\n     public List<Diagnostic> diagnostics(TextRange range) {\n         return new ArrayList<>();\n     }\n+\n+    private boolean isSymbolInUserProject(BSymbol symbol, DiagnosticPos cursorPos) {\n+        return symbol.origin == SOURCE &&\n+                (cursorPos.compareTo(symbol.pos) > SYMBOL_POSITION ||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQwOTQ5OQ=="}, "originalCommit": {"oid": "3cce37f038ee7084e263fda7fd295624fdda904e"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM4MDI5OQ==", "bodyText": "Shall we create an issue for this and remove the TODO? I think we will not be addressing this along with the semantic API changes..", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#discussion_r485380299", "createdAt": "2020-09-09T06:56:22Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolTable.java", "diffHunk": "@@ -216,31 +220,31 @@ private SymbolTable(CompilerContext context) {\n         this.rootPkgSymbol.scope = this.rootScope;\n         this.rootPkgSymbol.pos = this.builtinPos;\n \n-        this.notFoundSymbol = new BSymbol(SymTag.NIL, Flags.PUBLIC, Names.INVALID,\n-                                          rootPkgSymbol.pkgID, noType, rootPkgSymbol, builtinPos);\n+        this.notFoundSymbol = new BSymbol(SymTag.NIL, Flags.PUBLIC, Names.INVALID, rootPkgSymbol.pkgID, noType,\n+                                          rootPkgSymbol, builtinPos, SymbolOrigin.VIRTUAL);\n         // Initialize built-in types in Ballerina\n-        initializeType(intType, TypeKind.INT.typeName());\n-        initializeType(byteType, TypeKind.BYTE.typeName());\n-        initializeType(floatType, TypeKind.FLOAT.typeName());\n-        initializeType(decimalType, TypeKind.DECIMAL.typeName());\n-        initializeType(stringType, TypeKind.STRING.typeName());\n-        initializeType(booleanType, TypeKind.BOOLEAN.typeName());\n-        initializeType(jsonType, TypeKind.JSON.typeName());\n-        initializeType(xmlType, TypeKind.XML.typeName());\n-        initializeType(streamType, TypeKind.STREAM.typeName());\n-        initializeType(tableType, TypeKind.TABLE.typeName());\n-        initializeType(mapType, TypeKind.MAP.typeName());\n-        initializeType(mapStringType, TypeKind.MAP.typeName());\n-        initializeType(mapAnydataType, TypeKind.MAP.typeName());\n-        initializeType(futureType, TypeKind.FUTURE.typeName());\n-        initializeType(anyType, TypeKind.ANY.typeName());\n-        initializeType(anydataType, TypeKind.ANYDATA.typeName());\n-        initializeType(nilType, TypeKind.NIL.typeName());\n-        initializeType(neverType, TypeKind.NEVER.typeName());\n-        initializeType(anyServiceType, TypeKind.SERVICE.typeName());\n-        initializeType(handleType, TypeKind.HANDLE.typeName());\n-        initializeType(typeDesc, TypeKind.TYPEDESC.typeName());\n-        initializeType(readonlyType, TypeKind.READONLY.typeName());\n+        initializeType(intType, TypeKind.INT.typeName(), BUILTIN);\n+        initializeType(byteType, TypeKind.BYTE.typeName(), BUILTIN);\n+        initializeType(floatType, TypeKind.FLOAT.typeName(), BUILTIN);\n+        initializeType(decimalType, TypeKind.DECIMAL.typeName(), BUILTIN);\n+        initializeType(stringType, TypeKind.STRING.typeName(), BUILTIN);\n+        initializeType(booleanType, TypeKind.BOOLEAN.typeName(), BUILTIN);\n+        initializeType(jsonType, TypeKind.JSON.typeName(), BUILTIN);\n+        initializeType(xmlType, TypeKind.XML.typeName(), BUILTIN);\n+        initializeType(streamType, TypeKind.STREAM.typeName(), BUILTIN);\n+        initializeType(tableType, TypeKind.TABLE.typeName(), BUILTIN);\n+        initializeType(mapType, TypeKind.MAP.typeName(), VIRTUAL); // TODO: Do we need these map types to be defined?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "688cea0942eb0122f76d937a375538c3035139d5"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM4MjU0Mw==", "bodyText": "Shall we convert these TODOs to issues, and remove the comments?\nHaving people references in a public code-base is a bit weird.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#discussion_r485382543", "createdAt": "2020-09-09T07:01:07Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -1493,7 +1497,7 @@ private boolean isRestDetailBindingAvailable(BLangErrorVariable errorVariable) {\n \n     private BTypeSymbol createTypeSymbol(int type) {\n         return new BTypeSymbol(type, Flags.PUBLIC, Names.EMPTY, env.enclPkg.packageID,\n-                               null, env.scope.owner, symTable.builtinPos); // TODO: Check with Dhananjaya\n+                               null, env.scope.owner, symTable.builtinPos, VIRTUAL); // TODO: Check with Dhananjaya", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "688cea0942eb0122f76d937a375538c3035139d5"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c21ce805194b32a5ca6338b9265ac408788f5f56", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c21ce805194b32a5ca6338b9265ac408788f5f56", "committedDate": "2020-09-09T12:22:54Z", "message": "Add an API to retrieve the origin info of symbols"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f692b6b80c994140ed46c2ea4188f60431d84b07", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f692b6b80c994140ed46c2ea4188f60431d84b07", "committedDate": "2020-09-09T12:23:06Z", "message": "Refactor the usages of the BSymbol constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e615464c61dc209ae1868ac967a96c5212b2943", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1e615464c61dc209ae1868ac967a96c5212b2943", "committedDate": "2020-09-09T12:23:07Z", "message": "Add COMPILE_SOURCE symbol origin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c45ff4d80237069fbe14daf304f89f39c92d9c13", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c45ff4d80237069fbe14daf304f89f39c92d9c13", "committedDate": "2020-09-09T12:23:07Z", "message": "Add origin info to annotation symbol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a8fec82e085077e581c23d62f1228b88df8ca16", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1a8fec82e085077e581c23d62f1228b88df8ca16", "committedDate": "2020-09-09T12:23:07Z", "message": "Add origin info to BTypeSymbol and refactor its constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26ea84b8a52f8e6e4cdb03de7df4a834f6fdd064", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/26ea84b8a52f8e6e4cdb03de7df4a834f6fdd064", "committedDate": "2020-09-09T12:23:07Z", "message": "Add origin info to error type symbol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a4d334558bec744a2cc327446f4c9bfb78551fa", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2a4d334558bec744a2cc327446f4c9bfb78551fa", "committedDate": "2020-09-09T12:23:08Z", "message": "Add origin info to function type symbol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95ef5791aa4c942b7b5d0755144df3599f9fc935", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/95ef5791aa4c942b7b5d0755144df3599f9fc935", "committedDate": "2020-09-09T12:23:08Z", "message": "Add origin info to object type symbol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9256f6fd737bf59d03a1f899293f03d3719720bb", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9256f6fd737bf59d03a1f899293f03d3719720bb", "committedDate": "2020-09-09T12:23:08Z", "message": "Add origin info to record type symbol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "424e187409518cb163f32010d1911f5ff2b3be75", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/424e187409518cb163f32010d1911f5ff2b3be75", "committedDate": "2020-09-09T12:23:09Z", "message": "Refactor usages of createTypeSymbol()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0220668a46c34531a99f7fff382de7096956f868", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0220668a46c34531a99f7fff382de7096956f868", "committedDate": "2020-09-09T12:23:09Z", "message": "Add origin info to var symbol and refactor its constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7c2183c208254dc2ccfef74f16c28f41c04bbda", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f7c2183c208254dc2ccfef74f16c28f41c04bbda", "committedDate": "2020-09-09T12:23:09Z", "message": "Add origin info to constant symbol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecfd92bc08e804a6a65ad25d3e6a7cf05c388f4a", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ecfd92bc08e804a6a65ad25d3e6a7cf05c388f4a", "committedDate": "2020-09-09T12:23:09Z", "message": "Add origin info to service symbol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfeb9e0f47b70ee6fe6be60199b88ff5d527ac9d", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dfeb9e0f47b70ee6fe6be60199b88ff5d527ac9d", "committedDate": "2020-09-09T12:23:10Z", "message": "Add origin info to invokable symbol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ae89f1ecfd3b21371e02c0cdb887a64415bdd39", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8ae89f1ecfd3b21371e02c0cdb887a64415bdd39", "committedDate": "2020-09-09T12:23:10Z", "message": "Add origin info to constructor symbol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46b5c9735c0a692236c2a469ffd986dd580b2a86", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/46b5c9735c0a692236c2a469ffd986dd580b2a86", "committedDate": "2020-09-09T12:23:10Z", "message": "Add origin info to operator symbol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b3a88d6987172a357c081e06862bfc977568693", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2b3a88d6987172a357c081e06862bfc977568693", "committedDate": "2020-09-09T12:23:10Z", "message": "Add origin info to var symbol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95f698ad513be0b5164df13f04e343ae2d032415", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/95f698ad513be0b5164df13f04e343ae2d032415", "committedDate": "2020-09-09T12:23:11Z", "message": "Add origin info to package symbol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ae399530f5dd13710d0184b1e0fd99956c3ef6d", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2ae399530f5dd13710d0184b1e0fd99956c3ef6d", "committedDate": "2020-09-09T12:23:11Z", "message": "Make symbol lookup visitor's position comparison 1-based"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d6768dab299f5216bd458888a87a302677f9c27", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7d6768dab299f5216bd458888a87a302677f9c27", "committedDate": "2020-09-09T12:23:11Z", "message": "Add position info to worker related identifiers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1980fe4d2538e30e068a57d9d5c0f9380188623c", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1980fe4d2538e30e068a57d9d5c0f9380188623c", "committedDate": "2020-09-09T12:23:11Z", "message": "Mark anon type symbols and lambdas as virtual"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe4260f14c52985bb0aea3cd41e4794b3bd14654", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fe4260f14c52985bb0aea3cd41e4794b3bd14654", "committedDate": "2020-09-09T12:23:12Z", "message": "Add a flag to BLangNode to distinguish internal models from source constructs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "649bbefe2e8040fe6950f76305bc1eeaec37229f", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/649bbefe2e8040fe6950f76305bc1eeaec37229f", "committedDate": "2020-09-09T12:23:12Z", "message": "Add position to expr function body"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "059638bbc430b34110468c4a173a99615dffcc70", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/059638bbc430b34110468c4a173a99615dffcc70", "committedDate": "2020-09-09T12:23:12Z", "message": "Improve symbol filtering logic and add basic test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31830e494258160e3f55875916571334a5efe39e", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/31830e494258160e3f55875916571334a5efe39e", "committedDate": "2020-09-09T12:23:12Z", "message": "Update dependencies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "677c4bc65b5a545ffb0b77ef908e3f38c7b11466", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/677c4bc65b5a545ffb0b77ef908e3f38c7b11466", "committedDate": "2020-09-09T12:23:12Z", "message": "Fix position and filtering issues in records and objects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46f064b50b72928f7102f7da125f3be6025d15fc", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/46f064b50b72928f7102f7da125f3be6025d15fc", "committedDate": "2020-09-09T12:23:13Z", "message": "Add test cases for symbol lookup in type defs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a019aca4ae60514df0ffaa60016a55f2d8bc2529", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a019aca4ae60514df0ffaa60016a55f2d8bc2529", "committedDate": "2020-09-09T12:23:13Z", "message": "Persist origin info for constants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5af003ddfe107257be196f389bafee3d18318d3", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b5af003ddfe107257be196f389bafee3d18318d3", "committedDate": "2020-09-09T12:23:13Z", "message": "Sync API changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58843c97c6a349eb6e1ca75f6ca3aac2e16f87ff", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/58843c97c6a349eb6e1ca75f6ca3aac2e16f87ff", "committedDate": "2020-09-09T12:23:13Z", "message": "Persist origin info in module vars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "671dcadb6b98885b3f7e6f96fe2e1560a7bfa686", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/671dcadb6b98885b3f7e6f96fe2e1560a7bfa686", "committedDate": "2020-09-09T12:23:14Z", "message": "Persist origin info in typedef symbols"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca4c1719b7c61de53c1cfeec0f74fd69e4739286", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ca4c1719b7c61de53c1cfeec0f74fd69e4739286", "committedDate": "2020-09-09T12:23:14Z", "message": "Persist origin info for functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb3eeaa90d1574dcc175ae29a52cdcefc241d609", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bb3eeaa90d1574dcc175ae29a52cdcefc241d609", "committedDate": "2020-09-09T12:23:14Z", "message": "Persist origin info for annotations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fce61c4207b66691bb5ec16a89d7646504105355", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fce61c4207b66691bb5ec16a89d7646504105355", "committedDate": "2020-09-09T12:23:14Z", "message": "Improve symbol lookup logic in imported modules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22be9be00d314cd20d8861b6bf09180e270c31a9", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/22be9be00d314cd20d8861b6bf09180e270c31a9", "committedDate": "2020-09-09T12:23:14Z", "message": "Fix symbol visibility issue in let expr"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44041b54a98ae44bb05c4aed2567d4ce38485d92", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/44041b54a98ae44bb05c4aed2567d4ce38485d92", "committedDate": "2020-09-09T12:23:15Z", "message": "Fix checkstyle issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcc1f35de8b60921eff7b786b8959e30ad0c283a", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fcc1f35de8b60921eff7b786b8959e30ad0c283a", "committedDate": "2020-09-09T12:23:15Z", "message": "Refactor symbol lookup API to accept file name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3560ba157dabc32dab001cb05e4ce2118aa0bd68", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3560ba157dabc32dab001cb05e4ce2118aa0bd68", "committedDate": "2020-09-09T12:23:15Z", "message": "Add position info to public member symbols of a module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd133e7c47b43aa22e41631b0f3c19e0260c6b1f", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cd133e7c47b43aa22e41631b0f3c19e0260c6b1f", "committedDate": "2020-09-09T12:23:15Z", "message": "Fix conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65feea2894016ad7248697ea08356aecbafc0d2f", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/65feea2894016ad7248697ea08356aecbafc0d2f", "committedDate": "2020-09-09T12:23:16Z", "message": "Replace io module based BIR test with a custom balo test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6386eba22d2ac9a4d369ccf87e9f6024c08b246", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d6386eba22d2ac9a4d369ccf87e9f6024c08b246", "committedDate": "2020-09-09T19:24:56Z", "message": "Address review suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e01de308bd99740e8c981d273f7033695213b7bf", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e01de308bd99740e8c981d273f7033695213b7bf", "committedDate": "2020-09-09T10:33:09Z", "message": "Address review suggestions"}, "afterCommit": {"oid": "d6386eba22d2ac9a4d369ccf87e9f6024c08b246", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d6386eba22d2ac9a4d369ccf87e9f6024c08b246", "committedDate": "2020-09-09T19:24:56Z", "message": "Address review suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02f3decc97f76430b2a79e65e0b5731df9e534d5", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/02f3decc97f76430b2a79e65e0b5731df9e534d5", "committedDate": "2020-09-10T05:07:57Z", "message": "fix invalid constant suggestion for field access expression"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "516876f94c2732cd6fd21e243831d635a07dbf7e", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/516876f94c2732cd6fd21e243831d635a07dbf7e", "committedDate": "2020-09-10T05:18:11Z", "message": "remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eccafd7fb0f71b23f31d3f5500f4552b3674318b", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eccafd7fb0f71b23f31d3f5500f4552b3674318b", "committedDate": "2020-09-10T05:19:19Z", "message": "Merge pull request #22 from nadeeshaan/fix-25328-local\n\nFix invalid constant suggestion for field access expression"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NjA3MzI5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25524#pullrequestreview-485607329", "createdAt": "2020-09-10T06:08:01Z", "commit": {"oid": "eccafd7fb0f71b23f31d3f5500f4552b3674318b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4772, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}