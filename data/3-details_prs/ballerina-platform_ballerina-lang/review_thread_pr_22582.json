{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxODgwNzc0", "number": 22582, "reviewThreads": {"totalCount": 45, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MTozNlrODwyD6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTozNjoyOFrODyCCXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc4NDQxOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MTozNlrOGD9_5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MTozNlrOGD9_5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNDY5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This module supports following three client types, \n          \n          \n            \n            This module supports the following three client types.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406814693", "createdAt": "2020-04-10T15:41:36Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports following three client types, ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc4NDc3OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MTo0NFrOGD-AJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MTo0NFrOGD-AJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNDc1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - `email:SmtpClient` - The client that supports sending an email using the SMTP protocol.\n          \n          \n            \n            - `email:SmtpClient` - The client, which supports sending an email using the SMTP protocol.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406814757", "createdAt": "2020-04-10T15:41:44Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports following three client types, \n+\n+- `email:SmtpClient` - The client that supports sending an email using the SMTP protocol.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc4NTMwOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MTo1NlrOGD-Aew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MTo1NlrOGD-Aew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNDg0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - `email:PopClient` - The client that supports receiving an email using the POP3 protocol.\n          \n          \n            \n            - `email:PopClient` - The client, which supports receiving an email using the POP3 protocol.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406814843", "createdAt": "2020-04-10T15:41:56Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports following three client types, \n+\n+- `email:SmtpClient` - The client that supports sending an email using the SMTP protocol.\n+- `email:PopClient` - The client that supports receiving an email using the POP3 protocol.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc4NTY3OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MjowNVrOGD-Avw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MjowNVrOGD-Avw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNDkxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - `email:ImapClient` - The client that supports receiving an email using the IMAP4 protocol.\n          \n          \n            \n            - `email:ImapClient` - The client, which supports receiving an email using the IMAP4 protocol.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406814911", "createdAt": "2020-04-10T15:42:05Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports following three client types, \n+\n+- `email:SmtpClient` - The client that supports sending an email using the SMTP protocol.\n+- `email:PopClient` - The client that supports receiving an email using the POP3 protocol.\n+- `email:ImapClient` - The client that supports receiving an email using the IMAP4 protocol.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc4NjgwOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MjozM1rOGD-BeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MjozM1rOGD-BeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNTA5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The following code creates a SMTP client which connects to default port(465) and enables SSL.\n          \n          \n            \n            The following code creates an SMTP client, which connects to the default port(465) and enables SSL.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406815096", "createdAt": "2020-04-10T15:42:33Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports following three client types, \n+\n+- `email:SmtpClient` - The client that supports sending an email using the SMTP protocol.\n+- `email:PopClient` - The client that supports receiving an email using the POP3 protocol.\n+- `email:ImapClient` - The client that supports receiving an email using the IMAP4 protocol.\n \n-The below sample uses the functions in the module to send an email using the SMTP protocol.\n+#### SMTP Client\n \n+To send an email using the SMTP protocol, you must first create a `email:SmtpClient` object. The code for creating a `email:SmtpClient` can be found\n+ below.\n+\n+##### Creating a client\n+\n+The following code creates a SMTP client which connects to default port(465) and enables SSL.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc4NzQwOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0Mjo0N1rOGD-B1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0Mjo0N1rOGD-B1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNTE4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The port number of the server and/or the SSL support can be also configured by passing following configurations,\n          \n          \n            \n            The port number of the server and/or the SSL support can be also configured by passing the following configurations.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406815188", "createdAt": "2020-04-10T15:42:47Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports following three client types, \n+\n+- `email:SmtpClient` - The client that supports sending an email using the SMTP protocol.\n+- `email:PopClient` - The client that supports receiving an email using the POP3 protocol.\n+- `email:ImapClient` - The client that supports receiving an email using the IMAP4 protocol.\n \n-The below sample uses the functions in the module to send an email using the SMTP protocol.\n+#### SMTP Client\n \n+To send an email using the SMTP protocol, you must first create a `email:SmtpClient` object. The code for creating a `email:SmtpClient` can be found\n+ below.\n+\n+##### Creating a client\n+\n+The following code creates a SMTP client which connects to default port(465) and enables SSL.\n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\");\n-    email:Email email = {\n-        to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n-        cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n-        bcc: [\"receiver5@email.com\"],\n-        subject: \"Sample Email\",\n-        body: \"This is a sample email.\",\n-        'from: \"author@email.com\",\n-        sender: \"sender@email.com\",\n-        replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n-    };\n-\n-    email:Error? response = smtpClient->send(email);\n-    if (response is email:Error) {\n-        io:println(\"Error while sending the email: \" + response.toString());\n-    }\n-\n-}\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\");\n ```\n-\n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+The port number of the server and/or the SSL support can be also configured by passing following configurations,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc4ODYxOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MzowOFrOGD-CkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MzowOFrOGD-CkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNTM3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Once the `email:SmtpClient` is created, an email using the SMTP protocol can be sent through that client.\n          \n          \n            \n            Once the `email:SmtpClient` is created, an email can be sent using the SMTP protocol through that client.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406815377", "createdAt": "2020-04-10T15:43:08Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports following three client types, \n+\n+- `email:SmtpClient` - The client that supports sending an email using the SMTP protocol.\n+- `email:PopClient` - The client that supports receiving an email using the POP3 protocol.\n+- `email:ImapClient` - The client that supports receiving an email using the IMAP4 protocol.\n \n-The below sample uses the functions in the module to send an email using the SMTP protocol.\n+#### SMTP Client\n \n+To send an email using the SMTP protocol, you must first create a `email:SmtpClient` object. The code for creating a `email:SmtpClient` can be found\n+ below.\n+\n+##### Creating a client\n+\n+The following code creates a SMTP client which connects to default port(465) and enables SSL.\n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\");\n-    email:Email email = {\n-        to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n-        cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n-        bcc: [\"receiver5@email.com\"],\n-        subject: \"Sample Email\",\n-        body: \"This is a sample email.\",\n-        'from: \"author@email.com\",\n-        sender: \"sender@email.com\",\n-        replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n-    };\n-\n-    email:Error? response = smtpClient->send(email);\n-    if (response is email:Error) {\n-        io:println(\"Error while sending the email: \" + response.toString());\n-    }\n-\n-}\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\");\n ```\n-\n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+The port number of the server and/or the SSL support can be also configured by passing following configurations,\n \n ```ballerina\n email:SmtpConfig smtpConfig = {\n     port: 465, // Can use ports, 465, 587 or 25\n     enableSsl: true // Set true to enable SSL (SMTPS connections)\n };\n \n-email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\", smtpConfig);\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\",\n+                                    smtpConfig);\n ```\n \n+##### Sending an email\n \n-The below sample uses the functions in the module to receive an email using the POP3 protocol.\n+Once the `email:SmtpClient` is created, an email using the SMTP protocol can be sent through that client.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc4OTE4OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MzoyMFrOGD-C3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MzoyMFrOGD-C3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNTQ1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To receive an email using the POP3 protocol, you must first create a `email:PopClient` object. The code for creating a\n          \n          \n            \n            To receive an email using the POP3 protocol, you must first create an `email:PopClient` object. The code for creating an", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406815455", "createdAt": "2020-04-10T15:43:20Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports following three client types, \n+\n+- `email:SmtpClient` - The client that supports sending an email using the SMTP protocol.\n+- `email:PopClient` - The client that supports receiving an email using the POP3 protocol.\n+- `email:ImapClient` - The client that supports receiving an email using the IMAP4 protocol.\n \n-The below sample uses the functions in the module to send an email using the SMTP protocol.\n+#### SMTP Client\n \n+To send an email using the SMTP protocol, you must first create a `email:SmtpClient` object. The code for creating a `email:SmtpClient` can be found\n+ below.\n+\n+##### Creating a client\n+\n+The following code creates a SMTP client which connects to default port(465) and enables SSL.\n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\");\n-    email:Email email = {\n-        to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n-        cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n-        bcc: [\"receiver5@email.com\"],\n-        subject: \"Sample Email\",\n-        body: \"This is a sample email.\",\n-        'from: \"author@email.com\",\n-        sender: \"sender@email.com\",\n-        replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n-    };\n-\n-    email:Error? response = smtpClient->send(email);\n-    if (response is email:Error) {\n-        io:println(\"Error while sending the email: \" + response.toString());\n-    }\n-\n-}\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\");\n ```\n-\n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+The port number of the server and/or the SSL support can be also configured by passing following configurations,\n \n ```ballerina\n email:SmtpConfig smtpConfig = {\n     port: 465, // Can use ports, 465, 587 or 25\n     enableSsl: true // Set true to enable SSL (SMTPS connections)\n };\n \n-email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\", smtpConfig);\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\",\n+                                    smtpConfig);\n ```\n \n+##### Sending an email\n \n-The below sample uses the functions in the module to receive an email using the POP3 protocol.\n+Once the `email:SmtpClient` is created, an email using the SMTP protocol can be sent through that client.\n+Samples for this operation can be found below.\n \n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:PopClient|email:Error popClient = new (\"pop.email.com\", \"reader@email.com\", \"pass456\");\n-    if (popClient is email:PopClient) {\n-        email:Email|email:Error? emailResponse = popClient->read();\n-        if(emailResponse is email:Email) {\n-            io:println(\"Email Subject: \", emailResponse.subject);\n-            io:println(\"Email Body: \", emailResponse.body);\n-        } else if (emailResponse is ()) {\n-            io:println(\"There are no emails in the INBOX.\");\n-        } else {\n-            io:println(\"Error while getting getting response: \" + emailResponse.toString());\n-        }\n-    } else {\n-        io:println(\"Error while creating client: \" + popClient.toString());\n-    }\n-}\n+email:Email email = {\n+    to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n+    cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n+    bcc: [\"receiver5@email.com\"],\n+    subject: \"Sample Email\",\n+    body: \"This is a sample email.\",\n+    'from: \"author@email.com\",\n+    sender: \"sender@email.com\",\n+    replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n+};\n+\n+email:Error? response = smtpClient->send(email);\n ```\n \n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+#### POP3 Client\n+\n+To receive an email using the POP3 protocol, you must first create a `email:PopClient` object. The code for creating a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc5MDI1OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0Mzo0MFrOGD-DfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0Mzo0MFrOGD-DfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNTYxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The following code creates a POP3 client which connects default port(995) and enables SSL.\n          \n          \n            \n            The following code creates a POP3 client, which connects to the default port(995) and enables SSL.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406815613", "createdAt": "2020-04-10T15:43:40Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports following three client types, \n+\n+- `email:SmtpClient` - The client that supports sending an email using the SMTP protocol.\n+- `email:PopClient` - The client that supports receiving an email using the POP3 protocol.\n+- `email:ImapClient` - The client that supports receiving an email using the IMAP4 protocol.\n \n-The below sample uses the functions in the module to send an email using the SMTP protocol.\n+#### SMTP Client\n \n+To send an email using the SMTP protocol, you must first create a `email:SmtpClient` object. The code for creating a `email:SmtpClient` can be found\n+ below.\n+\n+##### Creating a client\n+\n+The following code creates a SMTP client which connects to default port(465) and enables SSL.\n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\");\n-    email:Email email = {\n-        to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n-        cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n-        bcc: [\"receiver5@email.com\"],\n-        subject: \"Sample Email\",\n-        body: \"This is a sample email.\",\n-        'from: \"author@email.com\",\n-        sender: \"sender@email.com\",\n-        replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n-    };\n-\n-    email:Error? response = smtpClient->send(email);\n-    if (response is email:Error) {\n-        io:println(\"Error while sending the email: \" + response.toString());\n-    }\n-\n-}\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\");\n ```\n-\n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+The port number of the server and/or the SSL support can be also configured by passing following configurations,\n \n ```ballerina\n email:SmtpConfig smtpConfig = {\n     port: 465, // Can use ports, 465, 587 or 25\n     enableSsl: true // Set true to enable SSL (SMTPS connections)\n };\n \n-email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\", smtpConfig);\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\",\n+                                    smtpConfig);\n ```\n \n+##### Sending an email\n \n-The below sample uses the functions in the module to receive an email using the POP3 protocol.\n+Once the `email:SmtpClient` is created, an email using the SMTP protocol can be sent through that client.\n+Samples for this operation can be found below.\n \n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:PopClient|email:Error popClient = new (\"pop.email.com\", \"reader@email.com\", \"pass456\");\n-    if (popClient is email:PopClient) {\n-        email:Email|email:Error? emailResponse = popClient->read();\n-        if(emailResponse is email:Email) {\n-            io:println(\"Email Subject: \", emailResponse.subject);\n-            io:println(\"Email Body: \", emailResponse.body);\n-        } else if (emailResponse is ()) {\n-            io:println(\"There are no emails in the INBOX.\");\n-        } else {\n-            io:println(\"Error while getting getting response: \" + emailResponse.toString());\n-        }\n-    } else {\n-        io:println(\"Error while creating client: \" + popClient.toString());\n-    }\n-}\n+email:Email email = {\n+    to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n+    cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n+    bcc: [\"receiver5@email.com\"],\n+    subject: \"Sample Email\",\n+    body: \"This is a sample email.\",\n+    'from: \"author@email.com\",\n+    sender: \"sender@email.com\",\n+    replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n+};\n+\n+email:Error? response = smtpClient->send(email);\n ```\n \n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+#### POP3 Client\n+\n+To receive an email using the POP3 protocol, you must first create a `email:PopClient` object. The code for creating a\n+ `email:PopClient` can be found below.\n \n+##### Creating a client\n+\n+The following code creates a POP3 client which connects default port(995) and enables SSL.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc5MjAwOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NDoxNFrOGD-EeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NDoxNFrOGD-EeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNTg2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The port number of the server and/or the SSL support can be also configured by passing following configurations,\n          \n          \n            \n            The port number of the server and/or the SSL support can also be configured by passing the following configurations.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406815865", "createdAt": "2020-04-10T15:44:14Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports following three client types, \n+\n+- `email:SmtpClient` - The client that supports sending an email using the SMTP protocol.\n+- `email:PopClient` - The client that supports receiving an email using the POP3 protocol.\n+- `email:ImapClient` - The client that supports receiving an email using the IMAP4 protocol.\n \n-The below sample uses the functions in the module to send an email using the SMTP protocol.\n+#### SMTP Client\n \n+To send an email using the SMTP protocol, you must first create a `email:SmtpClient` object. The code for creating a `email:SmtpClient` can be found\n+ below.\n+\n+##### Creating a client\n+\n+The following code creates a SMTP client which connects to default port(465) and enables SSL.\n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\");\n-    email:Email email = {\n-        to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n-        cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n-        bcc: [\"receiver5@email.com\"],\n-        subject: \"Sample Email\",\n-        body: \"This is a sample email.\",\n-        'from: \"author@email.com\",\n-        sender: \"sender@email.com\",\n-        replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n-    };\n-\n-    email:Error? response = smtpClient->send(email);\n-    if (response is email:Error) {\n-        io:println(\"Error while sending the email: \" + response.toString());\n-    }\n-\n-}\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\");\n ```\n-\n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+The port number of the server and/or the SSL support can be also configured by passing following configurations,\n \n ```ballerina\n email:SmtpConfig smtpConfig = {\n     port: 465, // Can use ports, 465, 587 or 25\n     enableSsl: true // Set true to enable SSL (SMTPS connections)\n };\n \n-email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\", smtpConfig);\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\",\n+                                    smtpConfig);\n ```\n \n+##### Sending an email\n \n-The below sample uses the functions in the module to receive an email using the POP3 protocol.\n+Once the `email:SmtpClient` is created, an email using the SMTP protocol can be sent through that client.\n+Samples for this operation can be found below.\n \n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:PopClient|email:Error popClient = new (\"pop.email.com\", \"reader@email.com\", \"pass456\");\n-    if (popClient is email:PopClient) {\n-        email:Email|email:Error? emailResponse = popClient->read();\n-        if(emailResponse is email:Email) {\n-            io:println(\"Email Subject: \", emailResponse.subject);\n-            io:println(\"Email Body: \", emailResponse.body);\n-        } else if (emailResponse is ()) {\n-            io:println(\"There are no emails in the INBOX.\");\n-        } else {\n-            io:println(\"Error while getting getting response: \" + emailResponse.toString());\n-        }\n-    } else {\n-        io:println(\"Error while creating client: \" + popClient.toString());\n-    }\n-}\n+email:Email email = {\n+    to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n+    cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n+    bcc: [\"receiver5@email.com\"],\n+    subject: \"Sample Email\",\n+    body: \"This is a sample email.\",\n+    'from: \"author@email.com\",\n+    sender: \"sender@email.com\",\n+    replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n+};\n+\n+email:Error? response = smtpClient->send(email);\n ```\n \n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+#### POP3 Client\n+\n+To receive an email using the POP3 protocol, you must first create a `email:PopClient` object. The code for creating a\n+ `email:PopClient` can be found below.\n \n+##### Creating a client\n+\n+The following code creates a POP3 client which connects default port(995) and enables SSL.\n+```ballerina\n+email:PopClient|email:Error popClient = new (\"pop.email.com\",\n+                                             \"reader@email.com\",\n+                                             \"pass456\");\n+```\n+\n+The port number of the server and/or the SSL support can be also configured by passing following configurations,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc5MzA1OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NDozN1rOGD-FJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NDozN1rOGD-FJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNjAzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To receive an email using the IMAP4 protocol, you must first create a `email:ImapClient` object. The code for creating a\n          \n          \n            \n            To receive an email using the IMAP4 protocol, you must first create an `email:ImapClient` object. The code for creating an", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406816038", "createdAt": "2020-04-10T15:44:37Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports following three client types, \n+\n+- `email:SmtpClient` - The client that supports sending an email using the SMTP protocol.\n+- `email:PopClient` - The client that supports receiving an email using the POP3 protocol.\n+- `email:ImapClient` - The client that supports receiving an email using the IMAP4 protocol.\n \n-The below sample uses the functions in the module to send an email using the SMTP protocol.\n+#### SMTP Client\n \n+To send an email using the SMTP protocol, you must first create a `email:SmtpClient` object. The code for creating a `email:SmtpClient` can be found\n+ below.\n+\n+##### Creating a client\n+\n+The following code creates a SMTP client which connects to default port(465) and enables SSL.\n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\");\n-    email:Email email = {\n-        to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n-        cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n-        bcc: [\"receiver5@email.com\"],\n-        subject: \"Sample Email\",\n-        body: \"This is a sample email.\",\n-        'from: \"author@email.com\",\n-        sender: \"sender@email.com\",\n-        replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n-    };\n-\n-    email:Error? response = smtpClient->send(email);\n-    if (response is email:Error) {\n-        io:println(\"Error while sending the email: \" + response.toString());\n-    }\n-\n-}\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\");\n ```\n-\n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+The port number of the server and/or the SSL support can be also configured by passing following configurations,\n \n ```ballerina\n email:SmtpConfig smtpConfig = {\n     port: 465, // Can use ports, 465, 587 or 25\n     enableSsl: true // Set true to enable SSL (SMTPS connections)\n };\n \n-email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\", smtpConfig);\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\",\n+                                    smtpConfig);\n ```\n \n+##### Sending an email\n \n-The below sample uses the functions in the module to receive an email using the POP3 protocol.\n+Once the `email:SmtpClient` is created, an email using the SMTP protocol can be sent through that client.\n+Samples for this operation can be found below.\n \n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:PopClient|email:Error popClient = new (\"pop.email.com\", \"reader@email.com\", \"pass456\");\n-    if (popClient is email:PopClient) {\n-        email:Email|email:Error? emailResponse = popClient->read();\n-        if(emailResponse is email:Email) {\n-            io:println(\"Email Subject: \", emailResponse.subject);\n-            io:println(\"Email Body: \", emailResponse.body);\n-        } else if (emailResponse is ()) {\n-            io:println(\"There are no emails in the INBOX.\");\n-        } else {\n-            io:println(\"Error while getting getting response: \" + emailResponse.toString());\n-        }\n-    } else {\n-        io:println(\"Error while creating client: \" + popClient.toString());\n-    }\n-}\n+email:Email email = {\n+    to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n+    cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n+    bcc: [\"receiver5@email.com\"],\n+    subject: \"Sample Email\",\n+    body: \"This is a sample email.\",\n+    'from: \"author@email.com\",\n+    sender: \"sender@email.com\",\n+    replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n+};\n+\n+email:Error? response = smtpClient->send(email);\n ```\n \n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+#### POP3 Client\n+\n+To receive an email using the POP3 protocol, you must first create a `email:PopClient` object. The code for creating a\n+ `email:PopClient` can be found below.\n \n+##### Creating a client\n+\n+The following code creates a POP3 client which connects default port(995) and enables SSL.\n+```ballerina\n+email:PopClient|email:Error popClient = new (\"pop.email.com\",\n+                                             \"reader@email.com\",\n+                                             \"pass456\");\n+```\n+\n+The port number of the server and/or the SSL support can be also configured by passing following configurations,\n ```ballerina\n email:PopConfig popConfig = {\n     port: 995,\n     enableSsl: true\n };\n \n-email:PopClient|email:Error popClient = new (\"pop.email.com\", \"reader@email.com\", \"pass456\", popConfig);\n+email:PopClient|email:Error popClient = new (\"pop.email.com\",\n+                                             \"reader@email.com\",\n+                                             \"pass456\",\n+                                              popConfig);\n ```\n \n-The below sample uses the functions in the module to receive an email using the IMAP4 protocol.\n+##### Receiving an email\n+Once the `email:PopClient` is created, emails can be received using the POP3 protocol through that client.\n+Samples for this operation can be found below.\n \n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:ImapClient|email:Error imapClient = new (\"imap.email.com\", \"reader@email.com\", \"pass456\");\n-    if (imapClient is email:ImapClient) {\n-            email:Email|email:Error emailResponse = imapClient->read();\n-        if(emailResponse is email:Email) {\n-            io:println(\"Email Subject: \", emailResponse.subject);\n-            io:println(\"Email Body: \", emailResponse.body);\n-        } else if (emailResponse is ()) {\n-            io:println(\"There are no emails in the INBOX.\");\n-        } else {\n-            io:println(\"Error while getting getting response: \" + emailResponse.toString());\n-        }\n-    } else {\n-        io:println(\"Error while creating client: \" + imapClient.toString());\n-    }\n-}\n+email:Email|email:Error? emailResponse = popClient->read();\n ```\n \n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+#### IMAP4 Client\n+\n+To receive an email using the IMAP4 protocol, you must first create a `email:ImapClient` object. The code for creating a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 167}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc5Mzg5OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NDo1M1rOGD-FrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NDo1M1rOGD-FrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNjE3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The following code creates a IMAP4 client which connects to default port(993) and enables SSL.\n          \n          \n            \n            The following code creates an IMAP4 client, which connects to the default port(993) and enables SSL.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406816173", "createdAt": "2020-04-10T15:44:53Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports following three client types, \n+\n+- `email:SmtpClient` - The client that supports sending an email using the SMTP protocol.\n+- `email:PopClient` - The client that supports receiving an email using the POP3 protocol.\n+- `email:ImapClient` - The client that supports receiving an email using the IMAP4 protocol.\n \n-The below sample uses the functions in the module to send an email using the SMTP protocol.\n+#### SMTP Client\n \n+To send an email using the SMTP protocol, you must first create a `email:SmtpClient` object. The code for creating a `email:SmtpClient` can be found\n+ below.\n+\n+##### Creating a client\n+\n+The following code creates a SMTP client which connects to default port(465) and enables SSL.\n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\");\n-    email:Email email = {\n-        to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n-        cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n-        bcc: [\"receiver5@email.com\"],\n-        subject: \"Sample Email\",\n-        body: \"This is a sample email.\",\n-        'from: \"author@email.com\",\n-        sender: \"sender@email.com\",\n-        replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n-    };\n-\n-    email:Error? response = smtpClient->send(email);\n-    if (response is email:Error) {\n-        io:println(\"Error while sending the email: \" + response.toString());\n-    }\n-\n-}\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\");\n ```\n-\n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+The port number of the server and/or the SSL support can be also configured by passing following configurations,\n \n ```ballerina\n email:SmtpConfig smtpConfig = {\n     port: 465, // Can use ports, 465, 587 or 25\n     enableSsl: true // Set true to enable SSL (SMTPS connections)\n };\n \n-email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\", smtpConfig);\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\",\n+                                    smtpConfig);\n ```\n \n+##### Sending an email\n \n-The below sample uses the functions in the module to receive an email using the POP3 protocol.\n+Once the `email:SmtpClient` is created, an email using the SMTP protocol can be sent through that client.\n+Samples for this operation can be found below.\n \n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:PopClient|email:Error popClient = new (\"pop.email.com\", \"reader@email.com\", \"pass456\");\n-    if (popClient is email:PopClient) {\n-        email:Email|email:Error? emailResponse = popClient->read();\n-        if(emailResponse is email:Email) {\n-            io:println(\"Email Subject: \", emailResponse.subject);\n-            io:println(\"Email Body: \", emailResponse.body);\n-        } else if (emailResponse is ()) {\n-            io:println(\"There are no emails in the INBOX.\");\n-        } else {\n-            io:println(\"Error while getting getting response: \" + emailResponse.toString());\n-        }\n-    } else {\n-        io:println(\"Error while creating client: \" + popClient.toString());\n-    }\n-}\n+email:Email email = {\n+    to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n+    cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n+    bcc: [\"receiver5@email.com\"],\n+    subject: \"Sample Email\",\n+    body: \"This is a sample email.\",\n+    'from: \"author@email.com\",\n+    sender: \"sender@email.com\",\n+    replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n+};\n+\n+email:Error? response = smtpClient->send(email);\n ```\n \n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+#### POP3 Client\n+\n+To receive an email using the POP3 protocol, you must first create a `email:PopClient` object. The code for creating a\n+ `email:PopClient` can be found below.\n \n+##### Creating a client\n+\n+The following code creates a POP3 client which connects default port(995) and enables SSL.\n+```ballerina\n+email:PopClient|email:Error popClient = new (\"pop.email.com\",\n+                                             \"reader@email.com\",\n+                                             \"pass456\");\n+```\n+\n+The port number of the server and/or the SSL support can be also configured by passing following configurations,\n ```ballerina\n email:PopConfig popConfig = {\n     port: 995,\n     enableSsl: true\n };\n \n-email:PopClient|email:Error popClient = new (\"pop.email.com\", \"reader@email.com\", \"pass456\", popConfig);\n+email:PopClient|email:Error popClient = new (\"pop.email.com\",\n+                                             \"reader@email.com\",\n+                                             \"pass456\",\n+                                              popConfig);\n ```\n \n-The below sample uses the functions in the module to receive an email using the IMAP4 protocol.\n+##### Receiving an email\n+Once the `email:PopClient` is created, emails can be received using the POP3 protocol through that client.\n+Samples for this operation can be found below.\n \n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:ImapClient|email:Error imapClient = new (\"imap.email.com\", \"reader@email.com\", \"pass456\");\n-    if (imapClient is email:ImapClient) {\n-            email:Email|email:Error emailResponse = imapClient->read();\n-        if(emailResponse is email:Email) {\n-            io:println(\"Email Subject: \", emailResponse.subject);\n-            io:println(\"Email Body: \", emailResponse.body);\n-        } else if (emailResponse is ()) {\n-            io:println(\"There are no emails in the INBOX.\");\n-        } else {\n-            io:println(\"Error while getting getting response: \" + emailResponse.toString());\n-        }\n-    } else {\n-        io:println(\"Error while creating client: \" + imapClient.toString());\n-    }\n-}\n+email:Email|email:Error? emailResponse = popClient->read();\n ```\n \n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+#### IMAP4 Client\n+\n+To receive an email using the IMAP4 protocol, you must first create a `email:ImapClient` object. The code for creating a\n+ `email:ImapClient` can be found below.\n+\n+##### Creating a client\n+\n+The following code creates a IMAP4 client which connects to default port(993) and enables SSL.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 172}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc5NDYzOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NTowOFrOGD-GIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NTowOFrOGD-GIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNjI4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The port number of the server and/or the SSL support can be also configured by passing following configurations,\n          \n          \n            \n            The port number of the server and/or the SSL support can also be configured by passing the following configurations.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406816289", "createdAt": "2020-04-10T15:45:08Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports following three client types, \n+\n+- `email:SmtpClient` - The client that supports sending an email using the SMTP protocol.\n+- `email:PopClient` - The client that supports receiving an email using the POP3 protocol.\n+- `email:ImapClient` - The client that supports receiving an email using the IMAP4 protocol.\n \n-The below sample uses the functions in the module to send an email using the SMTP protocol.\n+#### SMTP Client\n \n+To send an email using the SMTP protocol, you must first create a `email:SmtpClient` object. The code for creating a `email:SmtpClient` can be found\n+ below.\n+\n+##### Creating a client\n+\n+The following code creates a SMTP client which connects to default port(465) and enables SSL.\n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\");\n-    email:Email email = {\n-        to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n-        cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n-        bcc: [\"receiver5@email.com\"],\n-        subject: \"Sample Email\",\n-        body: \"This is a sample email.\",\n-        'from: \"author@email.com\",\n-        sender: \"sender@email.com\",\n-        replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n-    };\n-\n-    email:Error? response = smtpClient->send(email);\n-    if (response is email:Error) {\n-        io:println(\"Error while sending the email: \" + response.toString());\n-    }\n-\n-}\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\");\n ```\n-\n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+The port number of the server and/or the SSL support can be also configured by passing following configurations,\n \n ```ballerina\n email:SmtpConfig smtpConfig = {\n     port: 465, // Can use ports, 465, 587 or 25\n     enableSsl: true // Set true to enable SSL (SMTPS connections)\n };\n \n-email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\", smtpConfig);\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\",\n+                                    smtpConfig);\n ```\n \n+##### Sending an email\n \n-The below sample uses the functions in the module to receive an email using the POP3 protocol.\n+Once the `email:SmtpClient` is created, an email using the SMTP protocol can be sent through that client.\n+Samples for this operation can be found below.\n \n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:PopClient|email:Error popClient = new (\"pop.email.com\", \"reader@email.com\", \"pass456\");\n-    if (popClient is email:PopClient) {\n-        email:Email|email:Error? emailResponse = popClient->read();\n-        if(emailResponse is email:Email) {\n-            io:println(\"Email Subject: \", emailResponse.subject);\n-            io:println(\"Email Body: \", emailResponse.body);\n-        } else if (emailResponse is ()) {\n-            io:println(\"There are no emails in the INBOX.\");\n-        } else {\n-            io:println(\"Error while getting getting response: \" + emailResponse.toString());\n-        }\n-    } else {\n-        io:println(\"Error while creating client: \" + popClient.toString());\n-    }\n-}\n+email:Email email = {\n+    to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n+    cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n+    bcc: [\"receiver5@email.com\"],\n+    subject: \"Sample Email\",\n+    body: \"This is a sample email.\",\n+    'from: \"author@email.com\",\n+    sender: \"sender@email.com\",\n+    replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n+};\n+\n+email:Error? response = smtpClient->send(email);\n ```\n \n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+#### POP3 Client\n+\n+To receive an email using the POP3 protocol, you must first create a `email:PopClient` object. The code for creating a\n+ `email:PopClient` can be found below.\n \n+##### Creating a client\n+\n+The following code creates a POP3 client which connects default port(995) and enables SSL.\n+```ballerina\n+email:PopClient|email:Error popClient = new (\"pop.email.com\",\n+                                             \"reader@email.com\",\n+                                             \"pass456\");\n+```\n+\n+The port number of the server and/or the SSL support can be also configured by passing following configurations,\n ```ballerina\n email:PopConfig popConfig = {\n     port: 995,\n     enableSsl: true\n };\n \n-email:PopClient|email:Error popClient = new (\"pop.email.com\", \"reader@email.com\", \"pass456\", popConfig);\n+email:PopClient|email:Error popClient = new (\"pop.email.com\",\n+                                             \"reader@email.com\",\n+                                             \"pass456\",\n+                                              popConfig);\n ```\n \n-The below sample uses the functions in the module to receive an email using the IMAP4 protocol.\n+##### Receiving an email\n+Once the `email:PopClient` is created, emails can be received using the POP3 protocol through that client.\n+Samples for this operation can be found below.\n \n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:ImapClient|email:Error imapClient = new (\"imap.email.com\", \"reader@email.com\", \"pass456\");\n-    if (imapClient is email:ImapClient) {\n-            email:Email|email:Error emailResponse = imapClient->read();\n-        if(emailResponse is email:Email) {\n-            io:println(\"Email Subject: \", emailResponse.subject);\n-            io:println(\"Email Body: \", emailResponse.body);\n-        } else if (emailResponse is ()) {\n-            io:println(\"There are no emails in the INBOX.\");\n-        } else {\n-            io:println(\"Error while getting getting response: \" + emailResponse.toString());\n-        }\n-    } else {\n-        io:println(\"Error while creating client: \" + imapClient.toString());\n-    }\n-}\n+email:Email|email:Error? emailResponse = popClient->read();\n ```\n \n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+#### IMAP4 Client\n+\n+To receive an email using the IMAP4 protocol, you must first create a `email:ImapClient` object. The code for creating a\n+ `email:ImapClient` can be found below.\n+\n+##### Creating a client\n+\n+The following code creates a IMAP4 client which connects to default port(993) and enables SSL.\n+```ballerina\n+email:ImapClient|email:Error imapClient = new (\"imap.email.com\",\n+                                               \"reader@email.com\",\n+                                               \"pass456\");\n+```\n \n+The port number of the server and/or the SSL support can be also configured by passing following configurations,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 179}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc5NjAwOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/email_errors.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NTo0NFrOGD-HDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NTo0NFrOGD-HDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNjUyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents the reason for the email send related errors.\n          \n          \n            \n            # Represents the reason for the email sending related errors.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406816526", "createdAt": "2020-04-10T15:45:44Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/email_errors.bal", "diffHunk": "@@ -14,26 +14,26 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# Record type to hold the details of an error.\n+# The details of an error.\n #\n-# + message - Specific error message of the error.\n-# + cause - Any other error, which causes this error.\n+# + message - Specific error message of the error\n+# + cause - Any other error, which causes this error\n public type Detail record {\n     string message;\n     error cause?;\n };\n \n-# SMTP email send error.\n+# Represents the reason for the email send related errors.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc5NjYwOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/email_errors.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NTo1NlrOGD-HaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NTo1NlrOGD-HaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNjYxNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents the reason for the email receive related errors.\n          \n          \n            \n            # Represents the reason for the email receipt related errors.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406816616", "createdAt": "2020-04-10T15:45:56Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/email_errors.bal", "diffHunk": "@@ -14,26 +14,26 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# Record type to hold the details of an error.\n+# The details of an error.\n #\n-# + message - Specific error message of the error.\n-# + cause - Any other error, which causes this error.\n+# + message - Specific error message of the error\n+# + cause - Any other error, which causes this error\n public type Detail record {\n     string message;\n     error cause?;\n };\n \n-# SMTP email send error.\n+# Represents the reason for the email send related errors.\n public const SEND_ERROR = \"{ballerina/email}SendError\";\n # Represents an error that occurs when sending an email fails.\n public type SendError error<SEND_ERROR, Detail>;\n \n-# Identifies an email server store access failure error.\n+# Represents the reason for the server access failure error.\n public const READ_CLIENT_INIT_ERROR = \"{ballerina/email}ReadClientInitError\";\n # Represents an error that occurs when the email store access fails.\n public type ReadClientInitError error<READ_CLIENT_INIT_ERROR, Detail>;\n \n-# Identifies email receive error.\n+# Represents the reason for the email receive related errors.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc5Njk3OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NjowNlrOGD-Hmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NjowNlrOGD-Hmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNjY2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Gets invoked during `email:ImapClient` initialization.\n          \n          \n            \n                # Gets invoked during the `email:ImapClient` initialization.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406816667", "createdAt": "2020-04-10T15:46:06Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents an IMAP Client, which interacts with an IMAP Server.\n public type ImapClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during `email:ImapClient` initialization.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc5Nzk3OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NjoyN1rOGD-IQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NjoyN1rOGD-IQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNjgzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An`email:Email` if read message is successful, () if there is no emails in the specified folder\n          \n          \n            \n            # + return - An`email:Email` if read message is successful, () if there is no emails in the specified folder,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406816833", "createdAt": "2020-04-10T15:46:27Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents an IMAP Client, which interacts with an IMAP Server.\n public type ImapClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during `email:ImapClient` initialization.\n     #\n     # + host - Host of the IMAP Client\n     # + username - Username of the IMAP Client\n     # + password - Password of the IMAP Client\n     # + clientConfig - Configurations for the IMAP Client\n-    # + return - An `Error` if failed while creating the client\n+    # + return - An `email:Error` if failed while creating the client or else ()\n     public function __init(@untainted string host, @untainted string username, @untainted string password,\n             ImapConfig clientConfig = {}) returns Error? {\n         return initImapClientEndpoint(self, java:fromString(host), java:fromString(username), java:fromString(password),\n             clientConfig);\n     }\n \n-    # Reads a message.\n-    #\n-    # + folder - Folder to read emails\n-    # + return - An`Email` in success and `Error` if failed to receive the message to the recipient\n+# Reads a message.\n+# ```ballerina\n+# email:Email|email:Error emailResponse = imapClient->read();\n+# ```\n+#\n+# + folder - Folder to read emails. Default value is `INDOX`\n+# + return - An`email:Email` if read message is successful, () if there is no emails in the specified folder", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc5ODI2OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NjozNVrOGD-Icw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NjozNVrOGD-Icw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNjg4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            or else a `email:Error` if failed to receive the message to the recipient\n          \n          \n            \n            #            or else an `email:Error` if failed to receive the message to the recipient", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406816883", "createdAt": "2020-04-10T15:46:35Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents an IMAP Client, which interacts with an IMAP Server.\n public type ImapClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during `email:ImapClient` initialization.\n     #\n     # + host - Host of the IMAP Client\n     # + username - Username of the IMAP Client\n     # + password - Password of the IMAP Client\n     # + clientConfig - Configurations for the IMAP Client\n-    # + return - An `Error` if failed while creating the client\n+    # + return - An `email:Error` if failed while creating the client or else ()\n     public function __init(@untainted string host, @untainted string username, @untainted string password,\n             ImapConfig clientConfig = {}) returns Error? {\n         return initImapClientEndpoint(self, java:fromString(host), java:fromString(username), java:fromString(password),\n             clientConfig);\n     }\n \n-    # Reads a message.\n-    #\n-    # + folder - Folder to read emails\n-    # + return - An`Email` in success and `Error` if failed to receive the message to the recipient\n+# Reads a message.\n+# ```ballerina\n+# email:Email|email:Error emailResponse = imapClient->read();\n+# ```\n+#\n+# + folder - Folder to read emails. Default value is `INDOX`\n+# + return - An`email:Email` if read message is successful, () if there is no emails in the specified folder\n+#            or else a `email:Error` if failed to receive the message to the recipient", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDc5OTI0OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0Njo1M1rOGD-JAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0Njo1M1rOGD-JAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNzAyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Gets invoked during `email:PopClient` initialization.\n          \n          \n            \n                # Gets invoked during the `email:PopClient` initialization.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406817027", "createdAt": "2020-04-10T15:46:53Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents a POP Client, which interacts with a POP Server.\n public type PopClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during `email:PopClient` initialization.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDgwMDA1OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NzoxNlrOGD-JkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NzoxNlrOGD-JkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNzE2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An`email:Email` if read message is successful, () if there is no emails in the specified folder\n          \n          \n            \n            # + return - An`email:Email` if read message is successful, () if there is no emails in the specified folder,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406817169", "createdAt": "2020-04-10T15:47:16Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents a POP Client, which interacts with a POP Server.\n public type PopClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during `email:PopClient` initialization.\n     #\n     # + host - Host of the POP Client\n     # + username - Username of the POP Client\n     # + password - Password of the POP Client\n     # + clientConfig - Configurations for the POP Client\n-    # + return - An `Error` if failed while creating the client\n+    # + return - An `email:Error` if failed while creating the client or else ()\n     public function __init(@untainted string host, @untainted string username, @untainted string password,\n             PopConfig clientConfig = {}) returns Error? {\n         return initPopClientEndpoint(self, java:fromString(host), java:fromString(username),\n             java:fromString(password), clientConfig);\n     }\n \n-    # Used to read a message.\n-    #\n-    # + folder - Folder to read emails\n-    # + return - An`Email` in success and `Error` if failed to receive the message to the recipient\n+# Reads a message.\n+# ```ballerina\n+# email:Email|email:Error? emailResponse = popClient->read();\n+# ```\n+#\n+# + folder - Folder to read emails. Default value is `INDOX`\n+# + return - An`email:Email` if read message is successful, () if there is no emails in the specified folder", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDgwMDM1OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NzoyM1rOGD-Jxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0NzoyM1rOGD-Jxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNzIyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            or else a `email:Error` if failed to receive the message to the recipient\n          \n          \n            \n            #            or else an `email:Error` if failed to receive the message to the recipient", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406817222", "createdAt": "2020-04-10T15:47:23Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents a POP Client, which interacts with a POP Server.\n public type PopClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during `email:PopClient` initialization.\n     #\n     # + host - Host of the POP Client\n     # + username - Username of the POP Client\n     # + password - Password of the POP Client\n     # + clientConfig - Configurations for the POP Client\n-    # + return - An `Error` if failed while creating the client\n+    # + return - An `email:Error` if failed while creating the client or else ()\n     public function __init(@untainted string host, @untainted string username, @untainted string password,\n             PopConfig clientConfig = {}) returns Error? {\n         return initPopClientEndpoint(self, java:fromString(host), java:fromString(username),\n             java:fromString(password), clientConfig);\n     }\n \n-    # Used to read a message.\n-    #\n-    # + folder - Folder to read emails\n-    # + return - An`Email` in success and `Error` if failed to receive the message to the recipient\n+# Reads a message.\n+# ```ballerina\n+# email:Email|email:Error? emailResponse = popClient->read();\n+# ```\n+#\n+# + folder - Folder to read emails. Default value is `INDOX`\n+# + return - An`email:Email` if read message is successful, () if there is no emails in the specified folder\n+#            or else a `email:Error` if failed to receive the message to the recipient", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDgwMTE5OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/smtp_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0Nzo0MVrOGD-KTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0Nzo0MVrOGD-KTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNzM1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Gets invoked during `email:SmtpClient` initialization.\n          \n          \n            \n                # Gets invoked during the `email:SmtpClient` initialization.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406817357", "createdAt": "2020-04-10T15:47:41Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/smtp_client_endpoint.bal", "diffHunk": "@@ -19,7 +19,7 @@ import ballerina/java;\n # Represents an SMTP Client, which interacts with an SMTP Server.\n public type SmtpClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during `email:SmtpClient` initialization.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDgwMjE1OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/smtp_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0Nzo1N1rOGD-K0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0Nzo1N1rOGD-K0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNzQ4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + email - A `email:Email` message which needs to send to the recipient\n          \n          \n            \n            # + email - An `email:Email` message, which needs to be sent to the recipient", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406817488", "createdAt": "2020-04-10T15:47:57Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/smtp_client_endpoint.bal", "diffHunk": "@@ -31,10 +31,13 @@ public type SmtpClient client object {\n             java:fromString(password), clientConfig);\n     }\n \n-    # Send a message.\n-    #\n-    # + email - String message\n-    # + return - An `SendError` if failed to send the message to the recipient\n+# Sends a message.\n+# ```ballerina\n+# email:Error? response = smtpClient->send(email);\n+# ```\n+#\n+# + email - A `email:Email` message which needs to send to the recipient", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDgwMjcxOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/smtp_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0ODoxMFrOGD-LKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0ODoxMFrOGD-LKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNzU3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - A `email:SendError` if failed to send the message to the recipient or else ()\n          \n          \n            \n            # + return - An `email:SendError` if failed to send the message to the recipient or else ()", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r406817578", "createdAt": "2020-04-10T15:48:10Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/smtp_client_endpoint.bal", "diffHunk": "@@ -31,10 +31,13 @@ public type SmtpClient client object {\n             java:fromString(password), clientConfig);\n     }\n \n-    # Send a message.\n-    #\n-    # + email - String message\n-    # + return - An `SendError` if failed to send the message to the recipient\n+# Sends a message.\n+# ```ballerina\n+# email:Error? response = smtpClient->send(email);\n+# ```\n+#\n+# + email - A `email:Email` message which needs to send to the recipient\n+# + return - A `email:SendError` if failed to send the message to the recipient or else ()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1174731b62ac6c324ce330e7ad7a73a82abf10e"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjIxMzQ5OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo0MzoxNVrOGEK7Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo0MzoxNVrOGEK7Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNjQ4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To send an email using the SMTP protocol, you must first create a `email:SmtpClient` object. The code for creating a `email:SmtpClient` can be found\n          \n          \n            \n            To send an email using the SMTP protocol, you must first create an `email:SmtpClient` object. The code for creating an `email:SmtpClient` can be found", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r407026487", "createdAt": "2020-04-11T06:43:15Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports the following three client types.\n+\n+- `email:SmtpClient` - The client, which supports sending an email using the SMTP protocol.\n+- `email:PopClient` - The client, which supports receiving an email using the POP3 protocol.\n+- `email:ImapClient` - The client, which supports receiving an email using the IMAP4 protocol.\n \n-The below sample uses the functions in the module to send an email using the SMTP protocol.\n+#### SMTP Client\n \n+To send an email using the SMTP protocol, you must first create a `email:SmtpClient` object. The code for creating a `email:SmtpClient` can be found", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c4ecb2601f1ee1246db7ee13cba404ee7e92d3"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjIxNDU0OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo0NDoyMFrOGEK7sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo0NDoyMFrOGEK7sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNjYwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For information on the operation, which you can perform with this module, see the below **Functions**. For examples on the usage of the operation, see the [Send and Receive Emails Example](https://ballerina.io/learn/by-example/send-and-receive-emails.html).\n          \n          \n            \n            For information on the operations, which you can perform with this module, see the below **Functions**. For examples on the usage of the operation, see the [Send and Receive Emails Example](https://ballerina.io/learn/by-example/send-and-receive-emails.html).", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r407026609", "createdAt": "2020-04-11T06:44:20Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports the following three client types.\n+\n+- `email:SmtpClient` - The client, which supports sending an email using the SMTP protocol.\n+- `email:PopClient` - The client, which supports receiving an email using the POP3 protocol.\n+- `email:ImapClient` - The client, which supports receiving an email using the IMAP4 protocol.\n \n-The below sample uses the functions in the module to send an email using the SMTP protocol.\n+#### SMTP Client\n \n+To send an email using the SMTP protocol, you must first create a `email:SmtpClient` object. The code for creating a `email:SmtpClient` can be found\n+ below.\n+\n+##### Creating a client\n+\n+The following code creates an SMTP client, which connects to the default port(465) and enables SSL.\n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\");\n-    email:Email email = {\n-        to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n-        cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n-        bcc: [\"receiver5@email.com\"],\n-        subject: \"Sample Email\",\n-        body: \"This is a sample email.\",\n-        'from: \"author@email.com\",\n-        sender: \"sender@email.com\",\n-        replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n-    };\n-\n-    email:Error? response = smtpClient->send(email);\n-    if (response is email:Error) {\n-        io:println(\"Error while sending the email: \" + response.toString());\n-    }\n-\n-}\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\");\n ```\n-\n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+The port number of the server and/or the SSL support can be also configured by passing the following configurations.\n \n ```ballerina\n email:SmtpConfig smtpConfig = {\n     port: 465, // Can use ports, 465, 587 or 25\n     enableSsl: true // Set true to enable SSL (SMTPS connections)\n };\n \n-email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\", smtpConfig);\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\",\n+                                    smtpConfig);\n ```\n \n+##### Sending an email\n \n-The below sample uses the functions in the module to receive an email using the POP3 protocol.\n+Once the `email:SmtpClient` is created, an email can be sent using the SMTP protocol through that client.\n+Samples for this operation can be found below.\n \n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:PopClient|email:Error popClient = new (\"pop.email.com\", \"reader@email.com\", \"pass456\");\n-    if (popClient is email:PopClient) {\n-        email:Email|email:Error? emailResponse = popClient->read();\n-        if(emailResponse is email:Email) {\n-            io:println(\"Email Subject: \", emailResponse.subject);\n-            io:println(\"Email Body: \", emailResponse.body);\n-        } else if (emailResponse is ()) {\n-            io:println(\"There are no emails in the INBOX.\");\n-        } else {\n-            io:println(\"Error while getting getting response: \" + emailResponse.toString());\n-        }\n-    } else {\n-        io:println(\"Error while creating client: \" + popClient.toString());\n-    }\n-}\n+email:Email email = {\n+    to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n+    cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n+    bcc: [\"receiver5@email.com\"],\n+    subject: \"Sample Email\",\n+    body: \"This is a sample email.\",\n+    'from: \"author@email.com\",\n+    sender: \"sender@email.com\",\n+    replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n+};\n+\n+email:Error? response = smtpClient->send(email);\n ```\n \n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+#### POP3 Client\n+\n+To receive an email using the POP3 protocol, you must first create an `email:PopClient` object. The code for creating an\n+ `email:PopClient` can be found below.\n \n+##### Creating a client\n+\n+The following code creates a POP3 client, which connects to the default port(995) and enables SSL.\n+```ballerina\n+email:PopClient|email:Error popClient = new (\"pop.email.com\",\n+                                             \"reader@email.com\",\n+                                             \"pass456\");\n+```\n+\n+The port number of the server and/or the SSL support can also be configured by passing the following configurations.\n ```ballerina\n email:PopConfig popConfig = {\n     port: 995,\n     enableSsl: true\n };\n \n-email:PopClient|email:Error popClient = new (\"pop.email.com\", \"reader@email.com\", \"pass456\", popConfig);\n+email:PopClient|email:Error popClient = new (\"pop.email.com\",\n+                                             \"reader@email.com\",\n+                                             \"pass456\",\n+                                              popConfig);\n ```\n \n-The below sample uses the functions in the module to receive an email using the IMAP4 protocol.\n+##### Receiving an email\n+Once the `email:PopClient` is created, emails can be received using the POP3 protocol through that client.\n+Samples for this operation can be found below.\n \n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:ImapClient|email:Error imapClient = new (\"imap.email.com\", \"reader@email.com\", \"pass456\");\n-    if (imapClient is email:ImapClient) {\n-            email:Email|email:Error emailResponse = imapClient->read();\n-        if(emailResponse is email:Email) {\n-            io:println(\"Email Subject: \", emailResponse.subject);\n-            io:println(\"Email Body: \", emailResponse.body);\n-        } else if (emailResponse is ()) {\n-            io:println(\"There are no emails in the INBOX.\");\n-        } else {\n-            io:println(\"Error while getting getting response: \" + emailResponse.toString());\n-        }\n-    } else {\n-        io:println(\"Error while creating client: \" + imapClient.toString());\n-    }\n-}\n+email:Email|email:Error? emailResponse = popClient->read();\n ```\n \n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+#### IMAP4 Client\n+\n+To receive an email using the IMAP4 protocol, you must first create an `email:ImapClient` object. The code for creating an\n+ `email:ImapClient` can be found below.\n+\n+##### Creating a client\n+\n+The following code creates an IMAP4 client, which connects to the default port(993) and enables SSL.\n+```ballerina\n+email:ImapClient|email:Error imapClient = new (\"imap.email.com\",\n+                                               \"reader@email.com\",\n+                                               \"pass456\");\n+```\n \n+The port number of the server and/or the SSL support can also be configured by passing the following configurations.\n ```ballerina\n email:ImapConfig imapConfig = {\n     port: 993,\n     enableSsl: true\n };\n \n-email:ImapClient|email:Error imapClient = new (\"imap.email.com\", \"reader@email.com\", \"pass456\", imapConfig);\n+email:ImapClient|email:Error imapClient = new (\"imap.email.com\",\n+                                               \"reader@email.com\",\n+                                               \"pass456\",\n+                                                imapConfig);\n ```\n+\n+##### Receiving an email\n+Once the `email:ImapClient` is created, emails can be received using the IMAP4 protocol through that client.\n+Samples for this operation can be found below.\n+\n+```ballerina\n+email:Email|email:Error emailResponse = imapClient->read();\n+```\n+\n+For information on the operation, which you can perform with this module, see the below **Functions**. For examples on the usage of the operation, see the [Send and Receive Emails Example](https://ballerina.io/learn/by-example/send-and-receive-emails.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c4ecb2601f1ee1246db7ee13cba404ee7e92d3"}, "originalPosition": 201}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjIxNTE1OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo0NToyOFrOGEK8AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo0NToyOFrOGEK8AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNjY4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + folder - Folder to read emails. Default value is `INDOX`\n          \n          \n            \n            # + folder - Folder to read emails. Default value is `INBOX`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r407026688", "createdAt": "2020-04-11T06:45:28Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents a POP Client, which interacts with a POP Server.\n public type PopClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during the `email:PopClient` initialization.\n     #\n     # + host - Host of the POP Client\n     # + username - Username of the POP Client\n     # + password - Password of the POP Client\n     # + clientConfig - Configurations for the POP Client\n-    # + return - An `Error` if failed while creating the client\n+    # + return - An `email:Error` if failed while creating the client or else ()\n     public function __init(@untainted string host, @untainted string username, @untainted string password,\n             PopConfig clientConfig = {}) returns Error? {\n         return initPopClientEndpoint(self, java:fromString(host), java:fromString(username),\n             java:fromString(password), clientConfig);\n     }\n \n-    # Used to read a message.\n-    #\n-    # + folder - Folder to read emails\n-    # + return - An`Email` in success and `Error` if failed to receive the message to the recipient\n+# Reads a message.\n+# ```ballerina\n+# email:Email|email:Error? emailResponse = popClient->read();\n+# ```\n+#\n+# + folder - Folder to read emails. Default value is `INDOX`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9c4ecb2601f1ee1246db7ee13cba404ee7e92d3"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzI0OTE2OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozNjoyMVrOGFvf5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozNjoyMVrOGFvf5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3NDI3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n          \n          \n            \n            This module contains functions to perform email operations such as sending and reading emails using the SMTP, POP3, and IMAP4 protocols.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408674278", "createdAt": "2020-04-15T08:36:21Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3078b51aa2a83e8de5a72c946c1a011fc17cd8b"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzI1MTEzOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozNjo1M1rOGFvhFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozNjo1M1rOGFvhFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3NDU4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The port number of the server and/or the SSL support can be also configured by passing the following configurations.\n          \n          \n            \n            The port number of the server and/or the SSL support can also be configured by passing the following configurations.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408674583", "createdAt": "2020-04-15T08:36:53Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/Module.md", "diffHunk": "@@ -1,114 +1,128 @@\n-## Module overview\n-\n This module contains functions to perform email operations such as sending and reading emails using SMTP, POP3, and IMAP4 protocols.\n \n-## Sample\n+### Client\n+\n+This module supports the following three client types.\n+\n+- `email:SmtpClient` - The client, which supports sending an email using the SMTP protocol.\n+- `email:PopClient` - The client, which supports receiving an email using the POP3 protocol.\n+- `email:ImapClient` - The client, which supports receiving an email using the IMAP4 protocol.\n \n-The below sample uses the functions in the module to send an email using the SMTP protocol.\n+#### SMTP Client\n \n+To send an email using the SMTP protocol, you must first create an `email:SmtpClient` object. The code for creating an `email:SmtpClient` can be found\n+ below.\n+\n+##### Creating a client\n+\n+The following code creates an SMTP client, which connects to the default port(465) and enables SSL.\n ```ballerina\n-import ballerina/email;\n-import ballerina/io;\n-\n-public function main() {\n-    email:SmtpClient smtpClient = new (\"smtp.email.com\", \"sender@email.com\", \"pass123\");\n-    email:Email email = {\n-        to: [\"receiver1@email.com\", \"receiver2@email.com\"],\n-        cc: [\"receiver3@email.com\", \"receiver4@email.com\"],\n-        bcc: [\"receiver5@email.com\"],\n-        subject: \"Sample Email\",\n-        body: \"This is a sample email.\",\n-        'from: \"author@email.com\",\n-        sender: \"sender@email.com\",\n-        replyTo: [\"replyTo1@email.com\", \"replyTo2@email.com\"]\n-    };\n-\n-    email:Error? response = smtpClient->send(email);\n-    if (response is email:Error) {\n-        io:println(\"Error while sending the email: \" + response.toString());\n-    }\n-\n-}\n+email:SmtpClient smtpClient = new (\"smtp.email.com\",\n+                                   \"sender@email.com\",\n+                                   \"pass123\");\n ```\n-\n-Port number of the server and/or the SSL support can be also configured with a configuration as follows.\n+The port number of the server and/or the SSL support can be also configured by passing the following configurations.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3078b51aa2a83e8de5a72c946c1a011fc17cd8b"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzI1NTMyOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/email_errors.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozODowMVrOGFvjxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozODowMVrOGFvjxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3NTI2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents the reason for the server access failure error.\n          \n          \n            \n            # Represents the reason for the server access failure errors.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408675269", "createdAt": "2020-04-15T08:38:01Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/email_errors.bal", "diffHunk": "@@ -14,26 +14,26 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# Record type to hold the details of an error.\n+# The details of an error.\n #\n-# + message - Specific error message of the error.\n-# + cause - Any other error, which causes this error.\n+# + message - Specific error message of the error\n+# + cause - Any other error, which causes this error\n public type Detail record {\n     string message;\n     error cause?;\n };\n \n-# SMTP email send error.\n+# Represents the reason for the email sending related errors.\n public const SEND_ERROR = \"{ballerina/email}SendError\";\n # Represents an error that occurs when sending an email fails.\n public type SendError error<SEND_ERROR, Detail>;\n \n-# Identifies an email server store access failure error.\n+# Represents the reason for the server access failure error.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3078b51aa2a83e8de5a72c946c1a011fc17cd8b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzI1NjUzOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozODoyMlrOGFvkjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozODoyMlrOGFvkjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3NTQ2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - An `email:Error` if failed while creating the client or else ()\n          \n          \n            \n                # + return - An `email:Error` if failed while creating the client or else `()`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408675469", "createdAt": "2020-04-15T08:38:22Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents an IMAP Client, which interacts with an IMAP Server.\n public type ImapClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during the `email:ImapClient` initialization.\n     #\n     # + host - Host of the IMAP Client\n     # + username - Username of the IMAP Client\n     # + password - Password of the IMAP Client\n     # + clientConfig - Configurations for the IMAP Client\n-    # + return - An `Error` if failed while creating the client\n+    # + return - An `email:Error` if failed while creating the client or else ()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3078b51aa2a83e8de5a72c946c1a011fc17cd8b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzI1NzY3OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozODozN1rOGFvlLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozODozN1rOGFvlLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3NTYyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + folder - Folder to read emails. Default value is `INDOX`\n          \n          \n            \n            # + folder - Folder to read emails. The default value is `INBOX`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408675628", "createdAt": "2020-04-15T08:38:37Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents an IMAP Client, which interacts with an IMAP Server.\n public type ImapClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during the `email:ImapClient` initialization.\n     #\n     # + host - Host of the IMAP Client\n     # + username - Username of the IMAP Client\n     # + password - Password of the IMAP Client\n     # + clientConfig - Configurations for the IMAP Client\n-    # + return - An `Error` if failed while creating the client\n+    # + return - An `email:Error` if failed while creating the client or else ()\n     public function __init(@untainted string host, @untainted string username, @untainted string password,\n             ImapConfig clientConfig = {}) returns Error? {\n         return initImapClientEndpoint(self, java:fromString(host), java:fromString(username), java:fromString(password),\n             clientConfig);\n     }\n \n-    # Reads a message.\n-    #\n-    # + folder - Folder to read emails\n-    # + return - An`Email` in success and `Error` if failed to receive the message to the recipient\n+# Reads a message.\n+# ```ballerina\n+# email:Email|email:Error emailResponse = imapClient->read();\n+# ```\n+#\n+# + folder - Folder to read emails. Default value is `INDOX`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3078b51aa2a83e8de5a72c946c1a011fc17cd8b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzI1OTM2OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozOTowMlrOGFvmPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozOTowMlrOGFvmPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3NTkwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An`email:Email` if read message is successful, () if there is no emails in the specified folder,\n          \n          \n            \n            # + return - An`email:Email` if reading the message is successful, `()` if there are no emails in the specified folder,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408675903", "createdAt": "2020-04-15T08:39:02Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents an IMAP Client, which interacts with an IMAP Server.\n public type ImapClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during the `email:ImapClient` initialization.\n     #\n     # + host - Host of the IMAP Client\n     # + username - Username of the IMAP Client\n     # + password - Password of the IMAP Client\n     # + clientConfig - Configurations for the IMAP Client\n-    # + return - An `Error` if failed while creating the client\n+    # + return - An `email:Error` if failed while creating the client or else ()\n     public function __init(@untainted string host, @untainted string username, @untainted string password,\n             ImapConfig clientConfig = {}) returns Error? {\n         return initImapClientEndpoint(self, java:fromString(host), java:fromString(username), java:fromString(password),\n             clientConfig);\n     }\n \n-    # Reads a message.\n-    #\n-    # + folder - Folder to read emails\n-    # + return - An`Email` in success and `Error` if failed to receive the message to the recipient\n+# Reads a message.\n+# ```ballerina\n+# email:Email|email:Error emailResponse = imapClient->read();\n+# ```\n+#\n+# + folder - Folder to read emails. Default value is `INDOX`\n+# + return - An`email:Email` if read message is successful, () if there is no emails in the specified folder,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3078b51aa2a83e8de5a72c946c1a011fc17cd8b"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzI2MTE4OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozOToyOFrOGFvnXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozOToyOFrOGFvnXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3NjE5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #               Defaults to true for the \"imaps\" protocol and false for the \"imap\" protocol.\n          \n          \n            \n            #               The defaults value is true for the \"imaps\" protocol and false for the \"imap\" protocol.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408676190", "createdAt": "2020-04-15T08:39:28Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "diffHunk": "@@ -57,7 +61,7 @@ function imapRead(ImapClient clientEndpoint, handle folder) returns Email|Error?\n #\n # + port - Port number of the IMAP server\n # + enableSsl - If set to true, use SSL to connect and use the SSL port by default.\n-#   Defaults to true for the \"imaps\" protocol and false for the \"imap\" protocol.\n+#               Defaults to true for the \"imaps\" protocol and false for the \"imap\" protocol.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3078b51aa2a83e8de5a72c946c1a011fc17cd8b"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzI2MjY3OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozOTo0OVrOGFvoMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODozOTo0OVrOGFvoMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3NjQwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - An `email:Error` if failed while creating the client or else ()\n          \n          \n            \n                # + return - An `email:Error` if failed while creating the client or else `()`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408676403", "createdAt": "2020-04-15T08:39:49Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents a POP Client, which interacts with a POP Server.\n public type PopClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during the `email:PopClient` initialization.\n     #\n     # + host - Host of the POP Client\n     # + username - Username of the POP Client\n     # + password - Password of the POP Client\n     # + clientConfig - Configurations for the POP Client\n-    # + return - An `Error` if failed while creating the client\n+    # + return - An `email:Error` if failed while creating the client or else ()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3078b51aa2a83e8de5a72c946c1a011fc17cd8b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzI2MzM3OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODo0MDowMFrOGFvomw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODo0MDowMFrOGFvomw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3NjUwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + folder - Folder to read emails. Default value is `INBOX`\n          \n          \n            \n            # + folder - Folder to read emails. The default value is `INBOX`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408676507", "createdAt": "2020-04-15T08:40:00Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents a POP Client, which interacts with a POP Server.\n public type PopClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during the `email:PopClient` initialization.\n     #\n     # + host - Host of the POP Client\n     # + username - Username of the POP Client\n     # + password - Password of the POP Client\n     # + clientConfig - Configurations for the POP Client\n-    # + return - An `Error` if failed while creating the client\n+    # + return - An `email:Error` if failed while creating the client or else ()\n     public function __init(@untainted string host, @untainted string username, @untainted string password,\n             PopConfig clientConfig = {}) returns Error? {\n         return initPopClientEndpoint(self, java:fromString(host), java:fromString(username),\n             java:fromString(password), clientConfig);\n     }\n \n-    # Used to read a message.\n-    #\n-    # + folder - Folder to read emails\n-    # + return - An`Email` in success and `Error` if failed to receive the message to the recipient\n+# Reads a message.\n+# ```ballerina\n+# email:Email|email:Error? emailResponse = popClient->read();\n+# ```\n+#\n+# + folder - Folder to read emails. Default value is `INBOX`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3078b51aa2a83e8de5a72c946c1a011fc17cd8b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzI2NDc1OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODo0MDoyMVrOGFvpbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODo0MDoyMVrOGFvpbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3NjcxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An`email:Email` if read message is successful, () if there is no emails in the specified folder,\n          \n          \n            \n            # + return - An`email:Email` if reading the message is successful, `()` if there are no emails in the specified folder,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408676718", "createdAt": "2020-04-15T08:40:21Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents a POP Client, which interacts with a POP Server.\n public type PopClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during the `email:PopClient` initialization.\n     #\n     # + host - Host of the POP Client\n     # + username - Username of the POP Client\n     # + password - Password of the POP Client\n     # + clientConfig - Configurations for the POP Client\n-    # + return - An `Error` if failed while creating the client\n+    # + return - An `email:Error` if failed while creating the client or else ()\n     public function __init(@untainted string host, @untainted string username, @untainted string password,\n             PopConfig clientConfig = {}) returns Error? {\n         return initPopClientEndpoint(self, java:fromString(host), java:fromString(username),\n             java:fromString(password), clientConfig);\n     }\n \n-    # Used to read a message.\n-    #\n-    # + folder - Folder to read emails\n-    # + return - An`Email` in success and `Error` if failed to receive the message to the recipient\n+# Reads a message.\n+# ```ballerina\n+# email:Email|email:Error? emailResponse = popClient->read();\n+# ```\n+#\n+# + folder - Folder to read emails. Default value is `INBOX`\n+# + return - An`email:Email` if read message is successful, () if there is no emails in the specified folder,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3078b51aa2a83e8de5a72c946c1a011fc17cd8b"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzI2NzUxOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODo0MTowM1rOGFvrBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODo0MTowM1rOGFvrBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3NzEyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #               Defaults to true for the \"pop3s\" protocol and false for the \"pop3\" protocol.\n          \n          \n            \n            #               The default value is true for the \"pop3s\" protocol and false for the \"pop3\" protocol.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408677126", "createdAt": "2020-04-15T08:41:03Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "diffHunk": "@@ -57,7 +61,7 @@ function popRead(PopClient clientEndpoint, handle folder) returns Email|Error? =\n #\n # + port - Port number of the POP server\n # + enableSsl - If set to true, use SSL to connect and use the SSL port by default.\n-#   Defaults to true for the \"pop3s\" protocol and false for the \"pop3\" protocol.\n+#               Defaults to true for the \"pop3s\" protocol and false for the \"pop3\" protocol.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3078b51aa2a83e8de5a72c946c1a011fc17cd8b"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzI2ODQwOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/smtp_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODo0MToxOVrOGFvrmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODo0MToxOVrOGFvrmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3NzI3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - An `email:SendError` if failed to send the message to the recipient or else ()\n          \n          \n            \n            # + return - An `email:SendError` if failed to send the message to the recipient or else `()`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408677272", "createdAt": "2020-04-15T08:41:19Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/smtp_client_endpoint.bal", "diffHunk": "@@ -31,10 +31,13 @@ public type SmtpClient client object {\n             java:fromString(password), clientConfig);\n     }\n \n-    # Send a message.\n-    #\n-    # + email - String message\n-    # + return - An `SendError` if failed to send the message to the recipient\n+# Sends a message.\n+# ```ballerina\n+# email:Error? response = smtpClient->send(email);\n+# ```\n+#\n+# + email - An `email:Email` message, which needs to be sent to the recipient\n+# + return - An `email:SendError` if failed to send the message to the recipient or else ()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3078b51aa2a83e8de5a72c946c1a011fc17cd8b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzI2OTM5OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/smtp_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODo0MTozNlrOGFvsPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODo0MTozNlrOGFvsPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3NzQzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #               Defaults to true for the \"smtps\" protocol and false for the \"smtp\" protocol.\n          \n          \n            \n            #               The defaults value is true for the \"smtps\" protocol and false for the \"smtp\" protocol.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408677439", "createdAt": "2020-04-15T08:41:36Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/smtp_client_endpoint.bal", "diffHunk": "@@ -56,7 +59,7 @@ function send(SmtpClient clientEndpoint, Email email) returns Error? = @java:Met\n #\n # + port - Port number of the SMTP server\n # + enableSsl - If set to true, use SSL to connect and use the SSL port by default.\n-#   Defaults to true for the \"smtps\" protocol and false for the \"smtp\" protocol.\n+#               Defaults to true for the \"smtps\" protocol and false for the \"smtp\" protocol.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3078b51aa2a83e8de5a72c946c1a011fc17cd8b"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzg4MDEwOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTozMzo1OFrOGF1lvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTozMzo1OFrOGF1lvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc3NDA3OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #               The defaults value is true for the \"imaps\" protocol and false for the \"imap\" protocol.\n          \n          \n            \n            #               The default value is true for the \"imaps\" protocol and false for the \"imap\" protocol.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408774079", "createdAt": "2020-04-15T11:33:58Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "diffHunk": "@@ -57,7 +61,7 @@ function imapRead(ImapClient clientEndpoint, handle folder) returns Email|Error?\n #\n # + port - Port number of the IMAP server\n # + enableSsl - If set to true, use SSL to connect and use the SSL port by default.\n-#   Defaults to true for the \"imaps\" protocol and false for the \"imap\" protocol.\n+#               The defaults value is true for the \"imaps\" protocol and false for the \"imap\" protocol.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75dce180b42914ca637a17ff1659065cb55d1441"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzg4MjU3OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTozNDo0NlrOGF1nVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTozNDo0NlrOGF1nVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc3NDQ4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            or else an `email:Error` if failed to receive the message to the recipient\n          \n          \n            \n            #            or else an `email:Error` if the recipient failed to receive the message", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408774484", "createdAt": "2020-04-15T11:34:46Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents a POP Client, which interacts with a POP Server.\n public type PopClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during the `email:PopClient` initialization.\n     #\n     # + host - Host of the POP Client\n     # + username - Username of the POP Client\n     # + password - Password of the POP Client\n     # + clientConfig - Configurations for the POP Client\n-    # + return - An `Error` if failed while creating the client\n+    # + return - An `email:Error` if failed while creating the client or else `()`\n     public function __init(@untainted string host, @untainted string username, @untainted string password,\n             PopConfig clientConfig = {}) returns Error? {\n         return initPopClientEndpoint(self, java:fromString(host), java:fromString(username),\n             java:fromString(password), clientConfig);\n     }\n \n-    # Used to read a message.\n-    #\n-    # + folder - Folder to read emails\n-    # + return - An`Email` in success and `Error` if failed to receive the message to the recipient\n+# Reads a message.\n+# ```ballerina\n+# email:Email|email:Error? emailResponse = popClient->read();\n+# ```\n+#\n+# + folder - Folder to read emails. The default value is `INBOX`\n+# + return - An`email:Email` if reading the message is successful, `()` if there are no emails in the specified folder,\n+#            or else an `email:Error` if failed to receive the message to the recipient", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75dce180b42914ca637a17ff1659065cb55d1441"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzg4NDI3OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/smtp_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTozNToyMlrOGF1ocg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTozNToyMlrOGF1ocg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc3NDc3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #               The defaults value is true for the \"smtps\" protocol and false for the \"smtp\" protocol.\n          \n          \n            \n            #               The default value is true for the \"smtps\" protocol and false for the \"smtp\" protocol.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408774770", "createdAt": "2020-04-15T11:35:22Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/smtp_client_endpoint.bal", "diffHunk": "@@ -56,7 +59,7 @@ function send(SmtpClient clientEndpoint, Email email) returns Error? = @java:Met\n #\n # + port - Port number of the SMTP server\n # + enableSsl - If set to true, use SSL to connect and use the SSL port by default.\n-#   Defaults to true for the \"smtps\" protocol and false for the \"smtp\" protocol.\n+#               The defaults value is true for the \"smtps\" protocol and false for the \"smtp\" protocol.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75dce180b42914ca637a17ff1659065cb55d1441"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzg4NjAwOnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTozNTo1OFrOGF1pdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTozNTo1OFrOGF1pdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc3NTAzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            or else an `email:Error` if failed to receive the message to the recipient\n          \n          \n            \n            #            or else an `email:Error` if the recipient failed to receive the message", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408775031", "createdAt": "2020-04-15T11:35:58Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/imap_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents an IMAP Client, which interacts with an IMAP Server.\n public type ImapClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during the `email:ImapClient` initialization.\n     #\n     # + host - Host of the IMAP Client\n     # + username - Username of the IMAP Client\n     # + password - Password of the IMAP Client\n     # + clientConfig - Configurations for the IMAP Client\n-    # + return - An `Error` if failed while creating the client\n+    # + return - An `email:Error` if failed while creating the client or else `()`\n     public function __init(@untainted string host, @untainted string username, @untainted string password,\n             ImapConfig clientConfig = {}) returns Error? {\n         return initImapClientEndpoint(self, java:fromString(host), java:fromString(username), java:fromString(password),\n             clientConfig);\n     }\n \n-    # Reads a message.\n-    #\n-    # + folder - Folder to read emails\n-    # + return - An`Email` in success and `Error` if failed to receive the message to the recipient\n+# Reads a message.\n+# ```ballerina\n+# email:Email|email:Error emailResponse = imapClient->read();\n+# ```\n+#\n+# + folder - Folder to read emails. The default value is `INBOX`\n+# + return - An`email:Email` if reading the message is successful, `()` if there are no emails in the specified folder,\n+#            or else an `email:Error` if failed to receive the message to the recipient", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75dce180b42914ca637a17ff1659065cb55d1441"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzg4NzY2OnYy", "diffSide": "RIGHT", "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTozNjoyOFrOGF1qcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMTozNjoyOFrOGF1qcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc3NTI4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - An `email:Error` if failed while creating the client or else `()`\n          \n          \n            \n                # + return - An `email:Error` if creating the client failed or else `()`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22582#discussion_r408775282", "createdAt": "2020-04-15T11:36:28Z", "author": {"login": "praneesha"}, "path": "stdlib/email/src/main/ballerina/src/email/pop_client_endpoint.bal", "diffHunk": "@@ -19,23 +19,27 @@ import ballerina/java;\n # Represents a POP Client, which interacts with a POP Server.\n public type PopClient client object {\n \n-    # Gets invoked during object initialization.\n+    # Gets invoked during the `email:PopClient` initialization.\n     #\n     # + host - Host of the POP Client\n     # + username - Username of the POP Client\n     # + password - Password of the POP Client\n     # + clientConfig - Configurations for the POP Client\n-    # + return - An `Error` if failed while creating the client\n+    # + return - An `email:Error` if failed while creating the client or else `()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75dce180b42914ca637a17ff1659065cb55d1441"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4320, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}