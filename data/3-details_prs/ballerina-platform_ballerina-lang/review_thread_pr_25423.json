{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNjU1OTY5", "number": 25423, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzoxNDoxOVrOEfcthQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwOToyMjoxMVrOEf5x7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDExNzE3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzoxNDoxOVrOHLugnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNTo1NDowNlrOHMW5oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA1ODM5Nw==", "bodyText": "Since we r seeing isolated keyword we can directly consume it. So we can use consume() here. Other places will also be changed to consume() in future :-)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25423#discussion_r482058397", "createdAt": "2020-09-02T13:14:19Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -4694,6 +4701,9 @@ private STNode parseFunctionQualifiers(ParserRuleContext context, List<STNode> q\n                 case RESOURCE_KEYWORD:\n                     qualifier = parseResourceKeyword();\n                     break;\n+                case ISOLATED_KEYWORD:\n+                    qualifier = parseIsolatedKeyword();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f32adee59ba7990e2ddb90c1508d24fefc7780a0"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyMDE2MA==", "bodyText": "Ack, fixed just this for now with becd1b0, thanks!", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25423#discussion_r482720160", "createdAt": "2020-09-03T05:54:06Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -4694,6 +4701,9 @@ private STNode parseFunctionQualifiers(ParserRuleContext context, List<STNode> q\n                 case RESOURCE_KEYWORD:\n                     qualifier = parseResourceKeyword();\n                     break;\n+                case ISOLATED_KEYWORD:\n+                    qualifier = parseIsolatedKeyword();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA1ODM5Nw=="}, "originalCommit": {"oid": "f32adee59ba7990e2ddb90c1508d24fefc7780a0"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODg3OTgzOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/util/diagnotic/DefaultDiagnosticListener.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwOToyMjoxMVrOHMd70A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjozNTowMFrOHNBX2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgzNTQwOA==", "bodyText": "Looks like committed by mistake?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25423#discussion_r482835408", "createdAt": "2020-09-03T09:22:11Z", "author": {"login": "dulvinw"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/util/diagnotic/DefaultDiagnosticListener.java", "diffHunk": "@@ -44,6 +44,7 @@ public void received(Diagnostic diagnostic) {\n                 console.println(\"warning: \" + pos + \" \" + diag.msg);\n                 break;\n             case NOTE:\n+                // console.println(\"note: \" + pos + \" \" + diag.msg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "becd1b0c7542b4bb5202203bbd4c227c8d8c527b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxNjAyNA==", "bodyText": "This is actually to help stdlib folks to identify which functions can be marked as isolated. As discussed during the meeting, we can alternatively make this a warning, the issue with that though is that the build fails unless we special case that warning too.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25423#discussion_r483416024", "createdAt": "2020-09-04T06:35:00Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/util/diagnotic/DefaultDiagnosticListener.java", "diffHunk": "@@ -44,6 +44,7 @@ public void received(Diagnostic diagnostic) {\n                 console.println(\"warning: \" + pos + \" \" + diag.msg);\n                 break;\n             case NOTE:\n+                // console.println(\"note: \" + pos + \" \" + diag.msg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgzNTQwOA=="}, "originalCommit": {"oid": "becd1b0c7542b4bb5202203bbd4c227c8d8c527b"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 275, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}