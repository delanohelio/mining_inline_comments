{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyOTAyOTEz", "number": 23934, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNTo0Mzo0NFrOEE8E0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNTo0Mzo0NFrOEE8E0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjE0MDM0OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/auth/utils.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNTo0Mzo0NFrOGi3usQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNTowMTo0OFrOGjHVuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxNzg0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (resourceSecured is boolean) {\n          \n          \n            \n                    if (!resourceSecured) {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n                } else {\n          \n          \n            \n                    if (!serviceSecured) {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n                }\n          \n          \n            \n                return true;\n          \n          \n            \n                if (resourceSecured is boolean) {\n          \n          \n            \n                    return resourceSecured;\n          \n          \n            \n                } else {\n          \n          \n            \n                    return serviceSecured;\n          \n          \n            \n                }", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23934#discussion_r439217841", "createdAt": "2020-06-12T05:43:44Z", "author": {"login": "daneshk"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/utils.bal", "diffHunk": "@@ -57,6 +57,29 @@ public function extractAuthorizationHeaderValue(Request req) returns @tainted st\n     return req.getHeader(AUTH_HEADER);\n }\n \n+# Checks whether the calling resource is secured by evaluating the authentication hierarchy.\n+#\n+# + context - The `FilterContext` instance\n+# + return - The status of calling resource is secured or not\n+public function isResourceSecured(FilterContext context) returns boolean {\n+    ResourceAuth? resourceLevelAuthAnn = getResourceAuthConfig(context);\n+    ServiceAuth? serviceLevelAuthAnn = getServiceAuthConfig(context);\n+\n+    boolean? resourceSecured = isResourceAuthEnabled(resourceLevelAuthAnn);\n+    boolean serviceSecured = isServiceAuthEnabled(serviceLevelAuthAnn);\n+\n+    if (resourceSecured is boolean) {\n+        if (!resourceSecured) {\n+            return false;\n+        }\n+    } else {\n+        if (!serviceSecured) {\n+            return false;\n+        }\n+    }\n+    return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9bac88e1410eec60f90ec2a66693cf660b4ab62"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ3MzU5NQ==", "bodyText": "Oh, I missed this simple logic due to copying and cleaning from exact complex logic. Thanks for pointing out!\nhttps://github.com/ballerina-platform/ballerina-lang/blob/master/stdlib/http/src/main/ballerina/src/http/auth/utils.bal#L73", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23934#discussion_r439473595", "createdAt": "2020-06-12T15:01:48Z", "author": {"login": "ldclakmal"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/utils.bal", "diffHunk": "@@ -57,6 +57,29 @@ public function extractAuthorizationHeaderValue(Request req) returns @tainted st\n     return req.getHeader(AUTH_HEADER);\n }\n \n+# Checks whether the calling resource is secured by evaluating the authentication hierarchy.\n+#\n+# + context - The `FilterContext` instance\n+# + return - The status of calling resource is secured or not\n+public function isResourceSecured(FilterContext context) returns boolean {\n+    ResourceAuth? resourceLevelAuthAnn = getResourceAuthConfig(context);\n+    ServiceAuth? serviceLevelAuthAnn = getServiceAuthConfig(context);\n+\n+    boolean? resourceSecured = isResourceAuthEnabled(resourceLevelAuthAnn);\n+    boolean serviceSecured = isServiceAuthEnabled(serviceLevelAuthAnn);\n+\n+    if (resourceSecured is boolean) {\n+        if (!resourceSecured) {\n+            return false;\n+        }\n+    } else {\n+        if (!serviceSecured) {\n+            return false;\n+        }\n+    }\n+    return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxNzg0MQ=="}, "originalCommit": {"oid": "b9bac88e1410eec60f90ec2a66693cf660b4ab62"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3409, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}