{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzODA4MzQx", "number": 22649, "title": "Add array type descriptor support to new parser", "bodyText": "Purpose\nAdd array type descriptor support to new parser with recovery logic and test cases.\nFixes #22063\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-15T14:50:38Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649", "merged": true, "mergeCommit": {"oid": "684fb0a1b522b39db3534a524617fc0a98405d41"}, "closed": true, "closedAt": "2020-04-17T08:29:25Z", "author": {"login": "rdulmina"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWiuKygH2gAyNDAzODA4MzQxOjc2OTcyYmViYWI4ZmViOGU4OWIwZTZhNjRiMWI0YzA5MDQwYWU0MmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYdBl3gFqTM5NTI2MDQyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "76972bebab8feb8e89b0e6a64b1b4c09040ae42f", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/76972bebab8feb8e89b0e6a64b1b4c09040ae42f", "committedDate": "2020-04-11T09:59:37Z", "message": "Array type descriptor support to new parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c8f84088e1ea7e1466b2ced3db1b5f03c3b717a", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7c8f84088e1ea7e1466b2ced3db1b5f03c3b717a", "committedDate": "2020-04-15T11:00:24Z", "message": "Recovery logic and test cases for array type descriptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45f7ed84f0cf606cdeb98d609fbf09047e87c366", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/45f7ed84f0cf606cdeb98d609fbf09047e87c366", "committedDate": "2020-04-15T13:17:57Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into incremental-parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f8a2103b5f1bd900d857d5097fb0158cdb8416c", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3f8a2103b5f1bd900d857d5097fb0158cdb8416c", "committedDate": "2020-04-15T13:24:21Z", "message": "Changed VAR_DECL to MODULE_VAR_DECL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a3baa4fb604f99090d05da6541f073f2eb81219", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4a3baa4fb604f99090d05da6541f073f2eb81219", "committedDate": "2020-04-15T14:33:13Z", "message": "Added metadata block to json files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bef541689f68eef604d7d99f9290d36bc476c5c1", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bef541689f68eef604d7d99f9290d36bc476c5c1", "committedDate": "2020-04-15T14:35:44Z", "message": "Reformat json files to four space indent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7741f2993a33896c9526f38a3061c5c9d67a94f9", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7741f2993a33896c9526f38a3061c5c9d67a94f9", "committedDate": "2020-04-15T14:44:59Z", "message": "Removed unwanted space."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "829011162d984ea62960c2480dec9fb60e8cc421", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/829011162d984ea62960c2480dec9fb60e8cc421", "committedDate": "2020-04-15T19:33:36Z", "message": "Infinite dimension support for the array type descriptor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6705c81089f57e870904b604e890b509fbd17c8b", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6705c81089f57e870904b604e890b509fbd17c8b", "committedDate": "2020-04-15T19:38:08Z", "message": "Added missing files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MjYxMDc4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#pullrequestreview-394261078", "createdAt": "2020-04-16T02:40:18Z", "commit": {"oid": "6705c81089f57e870904b604e890b509fbd17c8b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMjo0MDoxOFrOGGSbsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMjo1MToxMVrOGGSnyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0NjY0MA==", "bodyText": "Can this handle  a nilable-array or nil scenario:  i.e: int?[]? x;", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409246640", "createdAt": "2020-04-16T02:40:18Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -1608,12 +1616,26 @@ private STNode parseTypeDescriptor() {\n         STNode type = parseTypeDescriptor(token.kind);\n         STToken nextToken = peek();\n         switch (nextToken.kind) {\n-            // If next token after a type descriptor is <code>?</code> then it is an Optional type descriptor\n+            //If next token after a type descriptor is <code>?</code> then it is an optional type descriptor\n             case QUESTION_MARK_TOKEN:\n-                return parseOptionalTypeDescriptor(type);\n+                type =  parseOptionalTypeDescriptor(type);\n+                break;\n+            //If next token after a type descriptor is <code>[</code> then it is an array type descriptor\n+            case OPEN_BRACKET_TOKEN:\n+                type =  parseArrayTypeDescriptor(type);\n+                break;\n             default:\n                 return type;\n         }\n+        //This part is to handle int?[] and int[]? type declarations\n+        nextToken = peek();\n+        if (nextToken.kind == SyntaxKind.QUESTION_MARK_TOKEN && type.kind == SyntaxKind.ARRAY_TYPE) {\n+            return parseOptionalTypeDescriptor(type);\n+        } else if (nextToken.kind == SyntaxKind.OPEN_BRACKET_TOKEN && type.kind == SyntaxKind.OPTIONAL_TYPE) {\n+            return parseArrayTypeDescriptor(type);\n+        } else {\n+            return type;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6705c81089f57e870904b604e890b509fbd17c8b"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0NzM0NQ==", "bodyText": "Should we use recusrsion?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409247345", "createdAt": "2020-04-16T02:42:53Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -1608,12 +1616,26 @@ private STNode parseTypeDescriptor() {\n         STNode type = parseTypeDescriptor(token.kind);\n         STToken nextToken = peek();\n         switch (nextToken.kind) {\n-            // If next token after a type descriptor is <code>?</code> then it is an Optional type descriptor\n+            //If next token after a type descriptor is <code>?</code> then it is an optional type descriptor\n             case QUESTION_MARK_TOKEN:\n-                return parseOptionalTypeDescriptor(type);\n+                type =  parseOptionalTypeDescriptor(type);\n+                break;\n+            //If next token after a type descriptor is <code>[</code> then it is an array type descriptor\n+            case OPEN_BRACKET_TOKEN:\n+                type =  parseArrayTypeDescriptor(type);\n+                break;\n             default:\n                 return type;\n         }\n+        //This part is to handle int?[] and int[]? type declarations\n+        nextToken = peek();\n+        if (nextToken.kind == SyntaxKind.QUESTION_MARK_TOKEN && type.kind == SyntaxKind.ARRAY_TYPE) {\n+            return parseOptionalTypeDescriptor(type);\n+        } else if (nextToken.kind == SyntaxKind.OPEN_BRACKET_TOKEN && type.kind == SyntaxKind.OPTIONAL_TYPE) {\n+            return parseArrayTypeDescriptor(type);\n+        } else {\n+            return type;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0NjY0MA=="}, "originalCommit": {"oid": "6705c81089f57e870904b604e890b509fbd17c8b"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0OTIwOQ==", "bodyText": "I think the structure of the resulting tree is a bit different to the spec.\ne.g. for something like int[][][], this model group the tree nodes as (int) ([][][]).\nBut in the spec, it is: (((int)[])[])[].\nI feel recursion would solve this.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409249209", "createdAt": "2020-04-16T02:49:15Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -5209,6 +5235,88 @@ private boolean isUnaryOperator(SyntaxKind kind) {\n         }\n     }\n \n+    /**\n+     * Parse array type descriptor.\n+     * <p>\n+     * <code>\n+     * array-type-descriptor := member-type-descriptor [ [ array-length ] ]\n+     * member-type-descriptor := type-descriptor\n+     * array-length :=\n+     *    int-literal\n+     *    | constant-reference-expr\n+     *    | inferred-array-length\n+     * inferred-array-length := *\n+     * </code>\n+     * </p>\n+     * @param typeDescriptorNode\n+     * @return Parsed Node\n+     */\n+\n+    private STNode parseArrayTypeDescriptor(STNode typeDescriptorNode) {\n+        startContext(ParserRuleContext.ARRAY_TYPE_DESCRIPTOR);\n+        STNode dimensions = parseDimensions();\n+\n+        endContext();\n+        return STNodeFactory.createArrayTypeDescriptor(typeDescriptorNode, dimensions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6705c81089f57e870904b604e890b509fbd17c8b"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI0OTczNw==", "bodyText": "keep a newline between the description and the params/returns in doc comments.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409249737", "createdAt": "2020-04-16T02:51:11Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -5209,6 +5235,88 @@ private boolean isUnaryOperator(SyntaxKind kind) {\n         }\n     }\n \n+    /**\n+     * Parse array type descriptor.\n+     * <p>\n+     * <code>\n+     * array-type-descriptor := member-type-descriptor [ [ array-length ] ]\n+     * member-type-descriptor := type-descriptor\n+     * array-length :=\n+     *    int-literal\n+     *    | constant-reference-expr\n+     *    | inferred-array-length\n+     * inferred-array-length := *\n+     * </code>\n+     * </p>\n+     * @param typeDescriptorNode", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6705c81089f57e870904b604e890b509fbd17c8b"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a90c15dca3c2c83f557a79ca3bb3d2e3b903421", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6a90c15dca3c2c83f557a79ca3bb3d2e3b903421", "committedDate": "2020-04-16T10:25:47Z", "message": "Extend the array type descriptor support with optional type.\n\nChanged the structure of the array type descriptor. ie. changed (int) ([][][]) to (((int)[])[])[]. Extend the support with optional type desc eg. int?[]?, int[]?[] are now supported."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddb695aa938e3a2065dc5b0ae25a66c4c3e9c721", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ddb695aa938e3a2065dc5b0ae25a66c4c3e9c721", "committedDate": "2020-04-16T10:44:00Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into incremental-parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb55a6ea4f84941f30f6bc371d42964a98574ab0", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fb55a6ea4f84941f30f6bc371d42964a98574ab0", "committedDate": "2020-04-16T11:01:06Z", "message": "fixed typo in a comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NjA4NzA2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#pullrequestreview-394608706", "createdAt": "2020-04-16T13:02:22Z", "commit": {"oid": "fb55a6ea4f84941f30f6bc371d42964a98574ab0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzowMjoyMlrOGGkLGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzowMjoyMlrOGGkLGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUzNzMwNw==", "bodyText": "STATEMENT_START_IDENTIFIER should be replaced with VARIABLE_REF.\nBoth indeed refers to identifiers, but the contexts are different..", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r409537307", "createdAt": "2020-04-16T13:02:22Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -198,6 +198,10 @@\n     private static final ParserRuleContext[] CONST_DECL_RHS =\n             { ParserRuleContext.STATEMENT_START_IDENTIFIER, ParserRuleContext.ASSIGN_OP };\n \n+    private static final ParserRuleContext[] ARRAY_LENGTH = { ParserRuleContext.CLOSE_BRACKET,\n+            ParserRuleContext.DECIMAL_INTEGER_LITERAL, ParserRuleContext.HEX_INTEGER_LITERAL,\n+            ParserRuleContext.ASTERISK, ParserRuleContext.STATEMENT_START_IDENTIFIER};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb55a6ea4f84941f30f6bc371d42964a98574ab0"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94b1a8d15995b5668f26a88b57b5e217db859245", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/94b1a8d15995b5668f26a88b57b5e217db859245", "committedDate": "2020-04-17T04:58:29Z", "message": "Replaced STATEMENT_START_IDENTIFIER with VARIABLE_REF."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "310255bf66cd302812f31c1997126a34de9ecc81", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/310255bf66cd302812f31c1997126a34de9ecc81", "committedDate": "2020-04-17T05:39:24Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into incremental-parser"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MTgzOTg0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#pullrequestreview-395183984", "createdAt": "2020-04-17T06:10:51Z", "commit": {"oid": "310255bf66cd302812f31c1997126a34de9ecc81"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNjoxMDo1MVrOGHBGYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNjoxMTowOVrOGHBGsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxMTIzMw==", "bodyText": "Naming pattern: ArrayTypeDescriptorNode", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r410011233", "createdAt": "2020-04-17T06:10:51Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "diffHunk": "@@ -1449,6 +1449,40 @@\n                     \"type\": \"Node\"\n                 }\n             ]\n+        },\n+        {\n+            \"name\": \"ArrayTypeDescriptor\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "310255bf66cd302812f31c1997126a34de9ecc81"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxMTMxNQ==", "bodyText": "Can we flattened this? i.e: make [, array-len and ] part of the ArrayTypeDescriptorNode", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#discussion_r410011315", "createdAt": "2020-04-17T06:11:09Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "diffHunk": "@@ -1449,6 +1449,40 @@\n                     \"type\": \"Node\"\n                 }\n             ]\n+        },\n+        {\n+            \"name\": \"ArrayTypeDescriptor\",\n+            \"base\": \"Node\",\n+            \"kind\": \"ARRAY_TYPE\",\n+            \"attributes\": [\n+                {\n+                    \"name\": \"typeDescriptorNode\",\n+                    \"type\": \"Node\"\n+                },\n+                {\n+                    \"name\": \"dimensions\",\n+                    \"type\": \"Node\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "310255bf66cd302812f31c1997126a34de9ecc81"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55443685d15397fb5b803bc5afe5191bd800f8c5", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/55443685d15397fb5b803bc5afe5191bd800f8c5", "committedDate": "2020-04-17T07:15:26Z", "message": "Flattened array dimension into the array type descriptor node.\n\nRemoved ArrayDimension.java and added open bracket, array length, close bracket subtrees into ArrayTypeDescriptorNode. Changed the test JSON files to match with the new node structure."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f58223cd80a32fbcc4248932c871c928306d0634", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f58223cd80a32fbcc4248932c871c928306d0634", "committedDate": "2020-04-17T07:25:35Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into incremental-parser"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MjYwNDI2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22649#pullrequestreview-395260426", "createdAt": "2020-04-17T08:29:15Z", "commit": {"oid": "f58223cd80a32fbcc4248932c871c928306d0634"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3550, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}