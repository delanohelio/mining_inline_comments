{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MTM1MTg4", "number": 22902, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOTowMDo0NlrOD8YzTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxODoxMjo0OFrOD-sthg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjQ3NTAxOnYy", "diffSide": "RIGHT", "path": "gradle/balNativeLibProject.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOTowMDo0NlrOGVSx2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNzo0MDo1NFrOGV57Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk4MDk1NA==", "bodyText": "Replce . with \"-\". for natives \"java\"", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22902#discussion_r424980954", "createdAt": "2020-05-14T09:00:46Z", "author": {"login": "warunalakshitha"}, "path": "gradle/balNativeLibProject.gradle", "diffHunk": "@@ -149,7 +151,8 @@ task createBStringBalo(type: CreateBaloTask) {\n     inputs.files(configurations.baloImplementation)\n     inputs.files(\"$buildDir/build/classes/java/main/META-INF/this.map.json\")\n     outputs.dir(\"$buildDir/generated-balo\")\n-    outputs.files(\"$buildDir/generated-bir-jar/\" + project.ext.orgName + \".\" + project.ext.moduleName + \"-bstring.jar\")\n+    outputs.files(\"$buildDir/generated-bir-jar/\" + project.ext.orgName + \".\" + project.ext.moduleName + \".\" + project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c9b514138b00acc1653cda533f9b3ff85f43dd3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYyMjM1OA==", "bodyText": "Fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22902#discussion_r425622358", "createdAt": "2020-05-15T07:40:54Z", "author": {"login": "warunalakshitha"}, "path": "gradle/balNativeLibProject.gradle", "diffHunk": "@@ -149,7 +151,8 @@ task createBStringBalo(type: CreateBaloTask) {\n     inputs.files(configurations.baloImplementation)\n     inputs.files(\"$buildDir/build/classes/java/main/META-INF/this.map.json\")\n     outputs.dir(\"$buildDir/generated-balo\")\n-    outputs.files(\"$buildDir/generated-bir-jar/\" + project.ext.orgName + \".\" + project.ext.moduleName + \"-bstring.jar\")\n+    outputs.files(\"$buildDir/generated-bir-jar/\" + project.ext.orgName + \".\" + project.ext.moduleName + \".\" + project", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk4MDk1NA=="}, "originalCommit": {"oid": "8c9b514138b00acc1653cda533f9b3ff85f43dd3"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjUyOTgxOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/codegen/BallerinaAnnotationProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOToxNToxNFrOGVTVfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOToxNToxNFrOGVTVfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk5MDA3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                this.version + \"\\\", \" + \"\\\"\" + this.name + \"\\\", \" + this.typeArrayToCode(this.argTypes) + \", \" +\n          \n          \n            \n                                this.version + \"\\\", \\\"\" + this.name + \"\\\", \" + this.typeArrayToCode(this.argTypes) + \", \" +", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22902#discussion_r424990076", "createdAt": "2020-05-14T09:15:14Z", "author": {"login": "manuranga"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/codegen/BallerinaAnnotationProcessor.java", "diffHunk": "@@ -282,8 +287,8 @@ protected String typeArrayToCode(List<TypeKind> types) {\n         }\n         \n         public String code() {\n-            return \"registerNativeFunction(new NativeFunctionDef(\\\"\" + this.org + \"\\\", \\\"\" + this.pkg + \"\\\", \" +\n-                    \"\\\"\" + this.name + \"\\\", \" + this.typeArrayToCode(this.argTypes) + \", \" +\n+            return \"registerNativeFunction(new NativeFunctionDef(\\\"\" + this.org + \"\\\", \\\"\" + this.pkg + \"\\\", \\\"\" +\n+                    this.version + \"\\\", \" + \"\\\"\" + this.name + \"\\\", \" + this.typeArrayToCode(this.argTypes) + \", \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c9b514138b00acc1653cda533f9b3ff85f43dd3"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjUzNDk3OnYy", "diffSide": "RIGHT", "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/proto/ServiceProtoConstants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOToxNjozN1rOGVTY6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOToxNjozN1rOGVTY6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk5MDk1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String ANN_SERVICE_CONFIG_FQN = PROTOCOL_STRUCT_PACKAGE_GRPC + \":\" + \"ServiceConfig\";\n          \n          \n            \n                public static final String ANN_SERVICE_CONFIG_FQN = PROTOCOL_STRUCT_PACKAGE_GRPC + \":ServiceConfig\";", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22902#discussion_r424990953", "createdAt": "2020-05-14T09:16:37Z", "author": {"login": "manuranga"}, "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/proto/ServiceProtoConstants.java", "diffHunk": "@@ -47,6 +49,7 @@\n     public static final String TMP_DIRECTORY_PATH = System.getProperty(\"java.io.tmpdir\");\n \n     public static final String ANN_SERVICE_CONFIG = \"ServiceConfig\";\n+    public static final String ANN_SERVICE_CONFIG_FQN = PROTOCOL_STRUCT_PACKAGE_GRPC + \":\" + \"ServiceConfig\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c9b514138b00acc1653cda533f9b3ff85f43dd3"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTc3Mzg0OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/java/org/ballerinalang/tool/util/BFileUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNDowNTowNVrOGY0FeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTo0NDoxNVrOGZRMBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY3MjM3Ng==", "bodyText": "looks like version.replace('.', '_') is a common code seen on multiple occurrences in this PR that can be moved to a method ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22902#discussion_r428672376", "createdAt": "2020-05-21T14:05:05Z", "author": {"login": "Kishanthan"}, "path": "cli/ballerina-tool/src/main/java/org/ballerinalang/tool/util/BFileUtil.java", "diffHunk": "@@ -118,11 +118,18 @@ public FileVisitResult postVisitDirectory(Path dir, IOException exc) throws IOEx\n      *\n      * @param orgName     Org name\n      * @param packageName Package name\n+     * @param version Package version\n      * @param className   Class name\n      * @return Qualified class name\n      */\n-    public static String getQualifiedClassName(String orgName, String packageName, String className) {\n+    public static String getQualifiedClassName(String orgName, String packageName, String version,\n+                                               String className) {\n+\n+\n         if (!Names.DEFAULT_PACKAGE.value.equals(packageName)) {\n+            if (!\"\".equals(version)) {\n+                className = version.replace('.', '_') + \".\" + className;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfba1b229d9dc0f684001788b58b80935fcf34ef"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE0OTE4OQ==", "bodyText": "even there are multiple occurrences, these are in different modules and packages. Then moving to seperate method will not have any difference and this is also already inside util method of each module", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22902#discussion_r429149189", "createdAt": "2020-05-22T09:44:15Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-tool/src/main/java/org/ballerinalang/tool/util/BFileUtil.java", "diffHunk": "@@ -118,11 +118,18 @@ public FileVisitResult postVisitDirectory(Path dir, IOException exc) throws IOEx\n      *\n      * @param orgName     Org name\n      * @param packageName Package name\n+     * @param version Package version\n      * @param className   Class name\n      * @return Qualified class name\n      */\n-    public static String getQualifiedClassName(String orgName, String packageName, String className) {\n+    public static String getQualifiedClassName(String orgName, String packageName, String version,\n+                                               String className) {\n+\n+\n         if (!Names.DEFAULT_PACKAGE.value.equals(packageName)) {\n+            if (!\"\".equals(version)) {\n+                className = version.replace('.', '_') + \".\" + className;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY3MjM3Ng=="}, "originalCommit": {"oid": "bfba1b229d9dc0f684001788b58b80935fcf34ef"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTc4MzA5OnYy", "diffSide": "RIGHT", "path": "langlib/lang.map/src/main/java/org/ballerinalang/langlib/map/ToArray.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNDowNzozMlrOGY0LXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNDowNzozMlrOGY0LXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY3Mzg4Ng==", "bodyText": "for lang.lib module versions, can we use constants and refer them wherever needed?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22902#discussion_r428673886", "createdAt": "2020-05-21T14:07:32Z", "author": {"login": "Kishanthan"}, "path": "langlib/lang.map/src/main/java/org/ballerinalang/langlib/map/ToArray.java", "diffHunk": "@@ -43,7 +43,7 @@\n  * @since 1.2.0\n  */\n @BallerinaFunction(\n-        orgName = \"ballerina\", packageName = \"lang.map\",\n+        orgName = \"ballerina\", packageName = \"lang.map\", version = \"1.1.0\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfba1b229d9dc0f684001788b58b80935fcf34ef"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDcwODU0OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/packaging/MultipleVersionsModuleTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxODoxMjo0OFrOGY9elw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxODoxMjo0OFrOGY9elw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyNjI2Mw==", "bodyText": "@Kishanthan Testcase for multiple versions", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22902#discussion_r428826263", "createdAt": "2020-05-21T18:12:48Z", "author": {"login": "warunalakshitha"}, "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/packaging/MultipleVersionsModuleTestCase.java", "diffHunk": "@@ -0,0 +1,174 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.test.packaging;\n+\n+import org.awaitility.Duration;\n+import org.ballerinalang.test.BaseTest;\n+import org.ballerinalang.test.context.BMainInstance;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.ballerinalang.test.context.LogLeecher;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.ballerinalang.programfile.ProgramFileConstants;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+import static org.awaitility.Awaitility.given;\n+import static org.ballerinalang.test.packaging.PackerinaTestUtils.deleteFiles;\n+import static org.wso2.ballerinalang.compiler.util.ProjectDirConstants.BLANG_COMPILED_JAR_EXT;\n+import static org.wso2.ballerinalang.compiler.util.ProjectDirConstants.BLANG_COMPILED_PKG_BINARY_EXT;\n+\n+/**\n+ * Testing usage of multiple versions of same module.\n+ *\n+ * @since 2.0.0\n+ */\n+public class MultipleVersionsModuleTestCase extends BaseTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfba1b229d9dc0f684001788b58b80935fcf34ef"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3789, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}