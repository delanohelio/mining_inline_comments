{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0OTU5MDA4", "number": 25743, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMTowMDoyNlrOEjEnZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMToyODoxMFrOEjFLfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjExMjM2OnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BErrorCreator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMTowMDoyNlrOHROklg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMTowMDoyNlrOHROklg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyNjU4Mg==", "bodyText": "We should mention creating error as part of the description. BTW, shall we remove BallerinaVM and use runtime instead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25743#discussion_r487826582", "createdAt": "2020-09-14T11:00:26Z", "author": {"login": "Kishanthan"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BErrorCreator.java", "diffHunk": "@@ -0,0 +1,175 @@\n+/*\n+*   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.ballerinalang.jvm.api;\n+\n+import org.ballerinalang.jvm.TypeChecker;\n+import org.ballerinalang.jvm.api.values.BError;\n+import org.ballerinalang.jvm.api.values.BMap;\n+import org.ballerinalang.jvm.api.values.BString;\n+import org.ballerinalang.jvm.types.BErrorType;\n+import org.ballerinalang.jvm.types.BPackage;\n+import org.ballerinalang.jvm.types.BType;\n+import org.ballerinalang.jvm.types.BTypes;\n+import org.ballerinalang.jvm.types.TypeConstants;\n+import org.ballerinalang.jvm.values.ErrorValue;\n+import org.ballerinalang.jvm.values.MapValueImpl;\n+\n+/**\n+ * Util Class for handling Error in Ballerina VM.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19db563e1e787ca1626ce83fbbf7cfe076d42fcc"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjExMzgyOnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BErrorCreator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMTowMDo1MVrOHROldw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMTowMDo1MVrOHROldw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgyNjgwNw==", "bodyText": "lets use @ since 2.0.0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25743#discussion_r487826807", "createdAt": "2020-09-14T11:00:51Z", "author": {"login": "Kishanthan"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BErrorCreator.java", "diffHunk": "@@ -0,0 +1,175 @@\n+/*\n+*   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+*  WSO2 Inc. licenses this file to you under the Apache License,\n+*  Version 2.0 (the \"License\"); you may not use this file except\n+*  in compliance with the License.\n+*  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing,\n+* software distributed under the License is distributed on an\n+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+* KIND, either express or implied.  See the License for the\n+* specific language governing permissions and limitations\n+* under the License.\n+*/\n+package org.ballerinalang.jvm.api;\n+\n+import org.ballerinalang.jvm.TypeChecker;\n+import org.ballerinalang.jvm.api.values.BError;\n+import org.ballerinalang.jvm.api.values.BMap;\n+import org.ballerinalang.jvm.api.values.BString;\n+import org.ballerinalang.jvm.types.BErrorType;\n+import org.ballerinalang.jvm.types.BPackage;\n+import org.ballerinalang.jvm.types.BType;\n+import org.ballerinalang.jvm.types.BTypes;\n+import org.ballerinalang.jvm.types.TypeConstants;\n+import org.ballerinalang.jvm.values.ErrorValue;\n+import org.ballerinalang.jvm.values.MapValueImpl;\n+\n+/**\n+ * Util Class for handling Error in Ballerina VM.\n+ *\n+ * @since 0.995.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19db563e1e787ca1626ce83fbbf7cfe076d42fcc"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjIwNDc5OnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BStringValues.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMToyODoxMFrOHRPbSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzo0MjowNVrOHRvYbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg0MDU4NA==", "bodyText": "should this be named BStringCreator ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25743#discussion_r487840584", "createdAt": "2020-09-14T11:28:10Z", "author": {"login": "Kishanthan"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BStringValues.java", "diffHunk": "@@ -41,7 +53,9 @@\n  * \n  * @since 0.95.3\n  */\n-public class StringUtils {\n+public class BStringValues {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19db563e1e787ca1626ce83fbbf7cfe076d42fcc"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk1OTUyMw==", "bodyText": "It has Bstring to java string and vice versa apis. So \"BstringCreator\" not much suited for the class. Any other suggestions?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25743#discussion_r487959523", "createdAt": "2020-09-14T14:11:50Z", "author": {"login": "warunalakshitha"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BStringValues.java", "diffHunk": "@@ -41,7 +53,9 @@\n  * \n  * @since 0.95.3\n  */\n-public class StringUtils {\n+public class BStringValues {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg0MDU4NA=="}, "originalCommit": {"oid": "19db563e1e787ca1626ce83fbbf7cfe076d42fcc"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEyNTEzNg==", "bodyText": "the shall we use BStringUtils ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25743#discussion_r488125136", "createdAt": "2020-09-14T18:06:59Z", "author": {"login": "Kishanthan"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BStringValues.java", "diffHunk": "@@ -41,7 +53,9 @@\n  * \n  * @since 0.95.3\n  */\n-public class StringUtils {\n+public class BStringValues {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg0MDU4NA=="}, "originalCommit": {"oid": "19db563e1e787ca1626ce83fbbf7cfe076d42fcc"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2NDE0Mg==", "bodyText": "+1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25743#discussion_r488364142", "createdAt": "2020-09-15T03:42:05Z", "author": {"login": "warunalakshitha"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/api/BStringValues.java", "diffHunk": "@@ -41,7 +53,9 @@\n  * \n  * @since 0.95.3\n  */\n-public class StringUtils {\n+public class BStringValues {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg0MDU4NA=="}, "originalCommit": {"oid": "19db563e1e787ca1626ce83fbbf7cfe076d42fcc"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 80, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}