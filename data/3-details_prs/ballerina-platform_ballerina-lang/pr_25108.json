{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMjA3MjM2", "number": 25108, "title": "Improve support for sorting in query expression", "bodyText": "Purpose\n\n$title according to the clarifications acquired via ballerina-platform/ballerina-spec#438.\n\nFixes #24751\nApproach\n\nThe static type of the expression in order by must always be an ordered type. If the order-key expression is a complex type a compilation error is given.\n\nSamples\n\n\ntype Person record {|\n   string firstName;\n   string lastName;\n   Address address;\n|};\n\ntype Address record {|\n   int unitNo;\n   string street;\n|};\n\nPerson[] outputList =  from var person in personList\n                  order by person.address.unitNo, person.address.street.toLowerAscii()\n                  select person;\n\nRemarks\n\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-08-03T14:20:51Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108", "merged": true, "mergeCommit": {"oid": "41f1e0f632347cfdad7068e7bcebfdf12b826e47"}, "closed": true, "closedAt": "2020-08-07T23:13:17Z", "author": {"login": "lasinicl"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7SfOugH2gAyNDYyMjA3MjM2OmMwZmYxZjUzOWI5NDU4YTRkNzNiYjUwNGYwODI1ZjdiNjcyYThlMTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmDlTWgFqTU1MTI1NjU5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c0ff1f539b9458a4d73bb504f0825f7b672a8e16", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c0ff1f539b9458a4d73bb504f0825f7b672a8e16", "committedDate": "2020-08-03T14:00:01Z", "message": "Change order by clause behavior"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d1a10f4d8bedc4c9217606fd93b6833c878133d", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0d1a10f4d8bedc4c9217606fd93b6833c878133d", "committedDate": "2020-08-03T14:01:41Z", "message": "Add more tests for order by clause"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56fd65d5e087154679e267df34c8da04f2417b9a", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/56fd65d5e087154679e267df34c8da04f2417b9a", "committedDate": "2020-08-03T14:02:38Z", "message": "Add isNaN function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dd5840caf437dcc3aba3cc4c351176913e33b9a", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7dd5840caf437dcc3aba3cc4c351176913e33b9a", "committedDate": "2020-08-03T14:03:00Z", "message": "Fix Lang-Server tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2adc0eee74b120f8a5c029e11c3bb7449666a9f4", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2adc0eee74b120f8a5c029e11c3bb7449666a9f4", "committedDate": "2020-08-03T14:06:59Z", "message": "Add newline"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f799def6fffca280a3d6bf18439e0071aaaae21", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5f799def6fffca280a3d6bf18439e0071aaaae21", "committedDate": "2020-08-03T15:32:20Z", "message": "Change isNaN function name in query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6840bafb1417fa1205d430f9f12a3c2b17e734a7", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6840bafb1417fa1205d430f9f12a3c2b17e734a7", "committedDate": "2020-08-03T16:27:12Z", "message": "Add comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "868d3879c32cfe98fe6e09a99bb6989d67d3913e", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/868d3879c32cfe98fe6e09a99bb6989d67d3913e", "committedDate": "2020-08-04T05:58:51Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into fix-24751"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "864bbd80ca8949200ebb1c4d04c58be426c216d1", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/864bbd80ca8949200ebb1c4d04c58be426c216d1", "committedDate": "2020-08-04T06:23:46Z", "message": "Fix lang-server tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/34607eb1b5476846e2381be0324f5aadfa590e77", "committedDate": "2020-08-05T03:28:09Z", "message": "Add support for order by with string,xml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMzQ4NDI0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#pullrequestreview-461348424", "createdAt": "2020-08-05T05:24:42Z", "commit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNToyNDo0MlrOG76qwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjowMjoyNFrOG77Y7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4MDM4NQ==", "bodyText": "Change the name to QUERY_SORT_STREAM_FUNCTION and the function name to sortStream, since it's not creating new objects.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465480385", "createdAt": "2020-08-05T05:24:42Z", "author": {"login": "grainier"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "diffHunk": "@@ -194,6 +194,7 @@\n     private static final Name QUERY_CREATE_SELECT_FUNCTION = new Name(\"createSelectFunction\");\n     private static final Name QUERY_CREATE_DO_FUNCTION = new Name(\"createDoFunction\");\n     private static final Name QUERY_CREATE_LIMIT_FUNCTION = new Name(\"createLimitFunction\");\n+    private static final Name QUERY_CREATE_SORT_STREAM_FUNCTION = new Name(\"sortStreamFunction\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4MTc0OQ==", "bodyText": "I think both orderByClause and limitClause should be stacks. Please test whether it's working for inner queries with orderby or limit. i.e: from var p in (from var person in personList select person limit 2) select p;", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465481749", "createdAt": "2020-08-05T05:29:34Z", "author": {"login": "grainier"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "diffHunk": "@@ -205,6 +206,7 @@\n     private static final CompilerContext.Key<QueryDesugar> QUERY_DESUGAR_KEY = new CompilerContext.Key<>();\n     private BLangExpression onConflictExpr;\n     private BLangOrderByClause orderByClause;\n+    private BLangLimitClause limitClause;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4MjMwOA==", "bodyText": "This might lead to NPE with inner queries. Refer to the above comment.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465482308", "createdAt": "2020-08-05T05:31:15Z", "author": {"login": "grainier"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "diffHunk": "@@ -247,11 +249,21 @@ BLangStatementExpression desugar(BLangQueryExpr queryExpr, SymbolEnv env) {\n         BLangVariableReference streamRef = buildStream(clauses, queryExpr.type, env, queryBlock);\n         BLangStatementExpression streamStmtExpr;\n         if (orderByClause != null) {\n-            // Type[] arr passed to order by helper\n+            // Type[] arr passed to stream ordering helper.\n             BLangArrayLiteral orderArr = (BLangArrayLiteral) TreeBuilder.createArrayLiteralExpressionNode();\n             orderArr.exprs = new ArrayList<>();\n             orderArr.type = new BArrayType(types.resolveExprType(queryExpr.type));\n-            streamRef = sortStream(queryBlock, orderByClause, streamRef, orderArr);\n+            if (limitClause != null) {\n+                // should limit after ordering the stream\n+                streamRef = getStreamFunctionVariableRef(queryBlock, QUERY_CREATE_SORT_STREAM_FUNCTION,\n+                        Lists.of(streamRef, orderArr, limitClause.expression), orderByClause.pos);\n+            } else {\n+                streamRef = getStreamFunctionVariableRef(queryBlock, QUERY_CREATE_SORT_STREAM_FUNCTION,\n+                        Lists.of(streamRef, orderArr, ASTBuilderUtil.createLiteral(orderByClause.pos, symTable.intType,\n+                                (long) 0)), orderByClause.pos);\n+            }\n+            orderByClause = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4MzUzNw==", "bodyText": "Can't we have an order-by and a limit together in a query? i.e. get first two events after ordering the stream.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465483537", "createdAt": "2020-08-05T05:35:18Z", "author": {"login": "grainier"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "diffHunk": "@@ -364,8 +378,12 @@ BLangVariableReference buildStream(List<BLangNode> clauses, BType resultType, Sy\n                     addStreamFunction(block, initPipeline, doFunc);\n                     break;\n                 case LIMIT:\n-                    BLangVariableReference limitFunc = addLimitFunction(block, (BLangLimitClause) clause);\n-                    addStreamFunction(block, initPipeline, limitFunc);\n+                    limitClause = (BLangLimitClause) clause;\n+                    // limit the frames if order by clause is not given\n+                    if (orderByClause == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4ODM5OA==", "bodyText": "You can use createActionLambda method here.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465488398", "createdAt": "2020-08-05T05:50:33Z", "author": {"login": "grainier"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "diffHunk": "@@ -575,42 +594,48 @@ BLangVariableReference addWhereFunction(BLangBlockStmt blockStmt, BLangWhereClau\n     }\n \n     /**\n-     * Desugar order by clause and return a reference to created order by function.\n+     * Desugar orderByClause to below and return a reference to created orderBy _StreamFunction.\n+     * _StreamFunction orderByFunc = createOrderByFunction(function(_Frame frame) {\n+     * _Frame frame = {\"orderKey\": frame[\"x2\"] + frame[\"y2\"], $orderDirection$: true + false\"};\n+     * });\n      *\n      * @param blockStmt parent block to write to.\n      * @param orderByClause  to be desugared.\n-     * @param streamRef reference to the stream output.\n-     * @return variableReference to created order by function.\n+     * @return variableReference to created orderBy _StreamFunction.\n      */\n-    BLangVariableReference sortStream(BLangBlockStmt blockStmt, BLangOrderByClause orderByClause,\n-                                                      BLangVariableReference streamRef, BLangArrayLiteral arr) {\n-\n+    BLangVariableReference addOrderByFunction(BLangBlockStmt blockStmt, BLangOrderByClause orderByClause) {\n         DiagnosticPos pos = orderByClause.pos;\n-\n-        // order by name descending, age ascending\n-        // sortFieldsArrayExpr keeps the ordering fields --> name, age\n-        // sortModesArrayExpr keeps the order direction --> false, true\n+        BLangLambdaFunction lambda = createLambdaFunction(pos, getNilTypeNode(), null, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4OTUwNg==", "bodyText": "Shall we refactor this method name to isBasicType?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465489506", "createdAt": "2020-08-05T05:54:03Z", "author": {"login": "grainier"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -3468,14 +3468,15 @@ public BType resolveExprType(BType type) {\n     }\n \n     /**\n-     * Check whether a type is a basic type.\n+     * Check whether a order-key expression type is a basic type.\n      *\n-     * @param type type of the field.\n+     * @param type type of the order-key expression.\n      * @return boolean whether the type is basic type or not.\n      */\n     public boolean checkBasicType(BType type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ5MDQ4MQ==", "bodyText": "Why these are top-level? Wouldn't it affect when desugaring multiple queries (also inner, nested) with order clauses?  I think it should go inside _OrderByFunction", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465490481", "createdAt": "2020-08-05T05:56:57Z", "author": {"login": "grainier"}, "path": "langlib/lang.query/src/main/ballerina/src/lang.query/types.bal", "diffHunk": "@@ -34,6 +34,9 @@ type Type any|error;\n @typeParam\n type ErrorType error?;\n \n+anydata[][] orderFieldValsArr = [];\n+boolean[] orderDirectionsArr = [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ5MjIwNg==", "bodyText": "Add some tests for inner queries", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465492206", "createdAt": "2020-08-05T06:02:24Z", "author": {"login": "grainier"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/query/OrderByClauseTest.java", "diffHunk": "@@ -126,19 +127,87 @@ public void testQueryExprWithOrderByClauseAndJoin() {\n         Assert.assertEquals(((BInteger) customer4.get(\"noOfItems\")).intValue(), 25);\n     }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "546393ac910e4a8dac77e4fbfc9b6adc87dcdfba", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/546393ac910e4a8dac77e4fbfc9b6adc87dcdfba", "committedDate": "2020-08-05T09:03:30Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0b7c41b5ba08405a5b3e19e8d96f9195569a51b", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d0b7c41b5ba08405a5b3e19e8d96f9195569a51b", "committedDate": "2020-08-05T09:47:50Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into fix-24751"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "896ae921460803ddba02785ddcd5445092283a20", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/896ae921460803ddba02785ddcd5445092283a20", "committedDate": "2020-08-05T10:08:03Z", "message": "Fix lang-server tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ab6661e6524598dc8b09ca701dd3fa156e176a4", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5ab6661e6524598dc8b09ca701dd3fa156e176a4", "committedDate": "2020-08-05T10:08:33Z", "message": "Fix lang-server tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMjY5NzUx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#pullrequestreview-463269751", "createdAt": "2020-08-07T12:25:28Z", "commit": {"oid": "5ab6661e6524598dc8b09ca701dd3fa156e176a4"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f35133743b0d8e41a48dc6ad798eba949ba65bb", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2f35133743b0d8e41a48dc6ad798eba949ba65bb", "committedDate": "2020-08-07T13:10:58Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into fix-24751\n\n\u0001 Conflicts:\n\u0001\tlanguage-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion2.json\n\u0001\tlanguage-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion3.json\n\u0001\tlanguage-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion4.json\n\u0001\tlanguage-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion5.json\n\u0001\tlanguage-server/modules/langserver-core/src/test/resources/completion/function/iterableOperation1.json\n\u0001\tlanguage-server/modules/langserver-core/src/test/resources/completion/function/iterableOperation2.json\n\u0001\tlanguage-server/modules/langserver-core/src/test/resources/completion/function/iterableOperation4.json\n\u0001\tlanguage-server/modules/langserver-core/src/test/resources/completion/function/typeGuardSuggestions4.json\n\u0001\tlanguage-server/modules/langserver-core/src/test/resources/completion/function/variableBoundItemSuggestions2.json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "465dda3cba44f5fcee608308fde0b6b5cf49f33c", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/465dda3cba44f5fcee608308fde0b6b5cf49f33c", "committedDate": "2020-08-07T14:39:44Z", "message": "Fix conflicts in LS tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjgyMTA2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#pullrequestreview-463682106", "createdAt": "2020-08-07T23:07:32Z", "commit": {"oid": "465dda3cba44f5fcee608308fde0b6b5cf49f33c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjgzMTkx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#pullrequestreview-463683191", "createdAt": "2020-08-07T23:12:09Z", "commit": {"oid": "465dda3cba44f5fcee608308fde0b6b5cf49f33c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMjU2MzI4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#pullrequestreview-551256328", "createdAt": "2020-12-14T10:56:27Z", "commit": {"oid": "465dda3cba44f5fcee608308fde0b6b5cf49f33c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo1NjoyN1rOIFK8AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo1NjoyN1rOIFK8AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5Mjk5Mg==", "bodyText": "new line", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r542292992", "createdAt": "2020-12-14T10:56:27Z", "author": {"login": "gimantha"}, "path": "language-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion2.json", "diffHunk": "@@ -714,4 +758,4 @@\n       \"insertTextFormat\": \"Snippet\"\n     }\n   ]\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "465dda3cba44f5fcee608308fde0b6b5cf49f33c"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMjU2NTk3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#pullrequestreview-551256597", "createdAt": "2020-12-14T10:56:49Z", "commit": {"oid": "465dda3cba44f5fcee608308fde0b6b5cf49f33c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo1Njo0OVrOIFK9AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo1Njo0OVrOIFK9AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5MzI0OA==", "bodyText": "new line", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r542293248", "createdAt": "2020-12-14T10:56:49Z", "author": {"login": "gimantha"}, "path": "language-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion3.json", "diffHunk": "@@ -714,4 +758,4 @@\n       \"insertTextFormat\": \"Snippet\"\n     }\n   ]\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "465dda3cba44f5fcee608308fde0b6b5cf49f33c"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4983, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}