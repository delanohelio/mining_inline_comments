{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0NTgyNDgz", "number": 27626, "title": "Introduce display annotation", "bodyText": "Purpose\n\nDescribe the problems, issues, or needs driving this feature/fix and include links to related issues.\n\nFixes #27586 and #27587\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-12-23T05:42:26Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27626", "merged": true, "mergeCommit": {"oid": "26ad54816611a3acc104b74711527d4071dd5d84"}, "closed": true, "closedAt": "2021-01-06T13:26:15Z", "author": {"login": "rdhananjaya"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdo3OT8gH2gAyNTQ0NTgyNDgzOmQwMzdjYmVjZGRmMDU5NjBjNTE1Y2YwYzhiYmUxMTVkYzViMmU5MmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtfgOcgFqTU2MjcwNDg3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d037cbecddf05960c515cf0c8bbe115dc5b2e92c", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d037cbecddf05960c515cf0c8bbe115dc5b2e92c", "committedDate": "2020-12-23T04:14:37Z", "message": "Remove icon annot and introduce display annot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2e2df8c6fde7df6eddd3f2df79388a59dc9c86c", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d2e2df8c6fde7df6eddd3f2df79388a59dc9c86c", "committedDate": "2020-12-23T06:13:12Z", "message": "Rename icon to iconPath"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70200557e2250475e172958e28ce42669ff0eee4", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/70200557e2250475e172958e28ce42669ff0eee4", "committedDate": "2020-12-23T05:43:11Z", "message": "Rename icon to iconPath"}, "afterCommit": {"oid": "d2e2df8c6fde7df6eddd3f2df79388a59dc9c86c", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d2e2df8c6fde7df6eddd3f2df79388a59dc9c86c", "committedDate": "2020-12-23T06:13:12Z", "message": "Rename icon to iconPath"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "970b2f9469d813a057ccf4093835c23f43e0f3ae", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/970b2f9469d813a057ccf4093835c23f43e0f3ae", "committedDate": "2020-12-23T12:00:25Z", "message": "Fix compiler API test failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d91d20eedead2476e9f61e12de3194cddfa79527", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d91d20eedead2476e9f61e12de3194cddfa79527", "committedDate": "2020-12-24T10:04:42Z", "message": "Fix lang-server tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79156ddfd5fae80a052df9d79728af435284493f", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/79156ddfd5fae80a052df9d79728af435284493f", "committedDate": "2020-12-24T10:36:30Z", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into add-display-annot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7827db7314cc202afe33773ea4f02ad5b04e0c2e", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7827db7314cc202afe33773ea4f02ad5b04e0c2e", "committedDate": "2020-12-24T10:44:31Z", "message": "Fix lang-server tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjY4NzE5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27626#pullrequestreview-561268719", "createdAt": "2021-01-04T19:06:10Z", "commit": {"oid": "7827db7314cc202afe33773ea4f02ad5b04e0c2e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOTowNjoxMFrOIN9aWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOToxNzoxM1rOIN9xXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUwODU3MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + label - label to be dispaled for a Ballerina construct\n          \n          \n            \n            # + label - label to be displayed for a Ballerina construct", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27626#discussion_r551508570", "createdAt": "2021-01-04T19:06:10Z", "author": {"login": "MaryamZi"}, "path": "langlib/lang.annotations/src/main/ballerina/annotations.bal", "diffHunk": "@@ -73,5 +73,16 @@ public type StrandData record {|\n # Denotes new Strand execution semantics.\n public const annotation StrandData strand on source worker;\n \n-# Denotes icon metadata related to types and functions.\n-public const annotation record {| string path; |} icon on source type, source function, source class;\n+# Describes display metadata.\n+#\n+# + label - label to be dispaled for a Ballerina construct", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7827db7314cc202afe33773ea4f02ad5b04e0c2e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUxMTEwMA==", "bodyText": "Should this just be \"label for the Ballerina construct\" instead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27626#discussion_r551511100", "createdAt": "2021-01-04T19:10:32Z", "author": {"login": "MaryamZi"}, "path": "langlib/lang.annotations/src/main/ballerina/annotations.bal", "diffHunk": "@@ -73,5 +73,16 @@ public type StrandData record {|\n # Denotes new Strand execution semantics.\n public const annotation StrandData strand on source worker;\n \n-# Denotes icon metadata related to types and functions.\n-public const annotation record {| string path; |} icon on source type, source function, source class;\n+# Describes display metadata.\n+#\n+# + label - label to be dispaled for a Ballerina construct", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUwODU3MA=="}, "originalCommit": {"oid": "7827db7314cc202afe33773ea4f02ad5b04e0c2e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUxNDQ2Mg==", "bodyText": "Shall we add a test for the openness of DisplayData too? With additional fields in the annotation?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27626#discussion_r551514462", "createdAt": "2021-01-04T19:17:13Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/annotations/display_annot.bal", "diffHunk": "@@ -14,15 +14,33 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-@icon { path: \"/fooIconPath.icon\" }\n+@display {iconPath: \"fooIconPath.icon\", label: \"Foo function\"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7827db7314cc202afe33773ea4f02ad5b04e0c2e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3322c2a146a15e5a9efa8b48436015d6061b68a4", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3322c2a146a15e5a9efa8b48436015d6061b68a4", "committedDate": "2021-01-05T01:23:59Z", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into add-display-annot"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNDczMjM1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27626#pullrequestreview-561473235", "createdAt": "2021-01-05T02:20:25Z", "commit": {"oid": "3322c2a146a15e5a9efa8b48436015d6061b68a4"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8aa2a8cb52a8bf82ed9d8e816f341c821930e112", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8aa2a8cb52a8bf82ed9d8e816f341c821930e112", "committedDate": "2021-01-05T05:30:39Z", "message": "Make `DisplayData` an inline record"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da7aaa52d09e15a6d2845974da85022638d0f21e", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/da7aaa52d09e15a6d2845974da85022638d0f21e", "committedDate": "2021-01-05T05:40:08Z", "message": "Fix lang-server-core tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ed31aa8ce34354bb9fac5358a4960ad52e8032f", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1ed31aa8ce34354bb9fac5358a4960ad52e8032f", "committedDate": "2021-01-05T05:47:38Z", "message": "Fix compiler API test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzA4MzU5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27626#pullrequestreview-562308359", "createdAt": "2021-01-06T03:48:53Z", "commit": {"oid": "1ed31aa8ce34354bb9fac5358a4960ad52e8032f"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMzo0ODo1NFrOIOw-zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMzo1MjoyNlrOIOxBwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM1MzQ4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # icon path relative to module's resouce directory\n          \n          \n            \n                # icon path relative to module's resource directory", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27626#discussion_r552353485", "createdAt": "2021-01-06T03:48:54Z", "author": {"login": "MaryamZi"}, "path": "langlib/lang.annotations/src/main/ballerina/annotations.bal", "diffHunk": "@@ -73,5 +73,12 @@ public type StrandData record {|\n # Denotes new Strand execution semantics.\n public const annotation StrandData strand on source worker;\n \n-# Denotes icon metadata related to types and functions.\n-public const annotation record {| string path; |} icon on source type, source function, source class;\n+# Denotes general-purpose metadata to customize how Ballerina symbols are displayed in a UI environment.\n+public const annotation record {\n+    # label for the Ballerina construct\n+    string label;\n+    # icon path relative to module's resouce directory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ed31aa8ce34354bb9fac5358a4960ad52e8032f"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM1NDA3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test void testIconAnnotationNegative() {\n          \n          \n            \n                @Test void testDisplayAnnotationNegative() {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27626#discussion_r552354074", "createdAt": "2021-01-06T03:51:36Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/annotations/DisplayAnnotationTest.java", "diffHunk": "@@ -29,57 +29,65 @@\n import org.wso2.ballerinalang.compiler.tree.BLangClassDefinition;\n import org.wso2.ballerinalang.compiler.tree.BLangFunction;\n import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangService;\n import org.wso2.ballerinalang.compiler.tree.expressions.BLangExpression;\n import org.wso2.ballerinalang.compiler.tree.expressions.BLangInvocation;\n import org.wso2.ballerinalang.compiler.tree.expressions.BLangTypeConversionExpr;\n \n import java.util.List;\n \n /**\n- * Class to test icon annotation.\n+ * Class to test display annotation.\n  *\n  * @since 2.0\n  */\n-public class IconAnnotationTest {\n+public class DisplayAnnotationTest {\n \n     private CompileResult result;\n     private CompileResult negative;\n \n     @BeforeClass\n     public void setup() {\n-        negative = BCompileUtil.compile(\"test-src/annotations/icon_annot_negative.bal\");\n-        result = BCompileUtil.compile(\"test-src/annotations/icon_annot.bal\");\n+        negative = BCompileUtil.compile(\"test-src/annotations/display_annot_negative.bal\");\n+        result = BCompileUtil.compile(\"test-src/annotations/display_annot.bal\");\n     }\n \n     @Test\n-    public void testIconOnFunction() {\n+    public void testDisplayAnnotOnFunction() {\n         BLangFunction fooFunction = (BLangFunction) ((List) ((BLangPackage) result.getAST()).functions).get(0);\n         BLangAnnotationAttachment annot = (BLangAnnotationAttachment) ((List) fooFunction.annAttachments).get(0);\n-        Assert.assertEquals(getActualExpressionFromAnnotationAttachmentExpr(annot.expr).toString(), \" {path: \" +\n-                \"/fooIconPath.icon}\");\n+        Assert.assertEquals(getActualExpressionFromAnnotationAttachmentExpr(annot.expr).toString(),\n+                \" {iconPath: fooIconPath.icon,label: Foo function}\");\n+    }\n+\n+    @Test\n+    public void testDisplayAnnotOnServiceDecl() {\n+        BLangService service = (BLangService) result.getAST().getServices().get(0);\n+        BLangAnnotationAttachment attachment = service.getAnnotationAttachments().get(0);\n+        Assert.assertEquals(getActualExpressionFromAnnotationAttachmentExpr(attachment.expr).toString(),\n+                \" {iconPath: service.icon,label: service,misc: Other info}\");\n     }\n \n     @Test (enabled = false)\n     public void testIconOnObjectAndMemberFunction() {\n         ClassDefinition clz = result.getAST().getClassDefinitions().get(0);\n         List<? extends AnnotationAttachmentNode> objAnnot = clz.getAnnotationAttachments();\n         Assert.assertEquals(objAnnot.size(), 1);\n-        Assert.assertEquals(objAnnot.get(0).getExpression().toString(), \" {path: /barIconPath.icon}.cloneReadOnly()\");\n+        Assert.assertEquals(objAnnot.get(0).getExpression().toString(),\n+                \" {iconPath: barIconPath.icon,label: Bar class}.cloneReadOnly()\");\n \n         List<BLangAnnotationAttachment> attachedFuncAttachments =\n                 ((BLangClassDefinition) clz).functions.get(0).annAttachments;\n         String annotAsString =\n                 getActualExpressionFromAnnotationAttachmentExpr(attachedFuncAttachments.get(0).getExpression())\n                         .toString();\n-        Assert.assertEquals(annotAsString, \" {path: /kMemberFuncIconPath.icon}\");\n+        Assert.assertEquals(annotAsString, \" {iconPath: kMemberFuncIconPath.icon,label: k method}\");\n     }\n \n     @Test void testIconAnnotationNegative() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ed31aa8ce34354bb9fac5358a4960ad52e8032f"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM1NDE2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testIconOnObjectAndMemberFunction() {\n          \n          \n            \n                public void testDisplayOnObjectAndMemberFunction() {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27626#discussion_r552354168", "createdAt": "2021-01-06T03:52:04Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/annotations/DisplayAnnotationTest.java", "diffHunk": "@@ -29,57 +29,65 @@\n import org.wso2.ballerinalang.compiler.tree.BLangClassDefinition;\n import org.wso2.ballerinalang.compiler.tree.BLangFunction;\n import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangService;\n import org.wso2.ballerinalang.compiler.tree.expressions.BLangExpression;\n import org.wso2.ballerinalang.compiler.tree.expressions.BLangInvocation;\n import org.wso2.ballerinalang.compiler.tree.expressions.BLangTypeConversionExpr;\n \n import java.util.List;\n \n /**\n- * Class to test icon annotation.\n+ * Class to test display annotation.\n  *\n  * @since 2.0\n  */\n-public class IconAnnotationTest {\n+public class DisplayAnnotationTest {\n \n     private CompileResult result;\n     private CompileResult negative;\n \n     @BeforeClass\n     public void setup() {\n-        negative = BCompileUtil.compile(\"test-src/annotations/icon_annot_negative.bal\");\n-        result = BCompileUtil.compile(\"test-src/annotations/icon_annot.bal\");\n+        negative = BCompileUtil.compile(\"test-src/annotations/display_annot_negative.bal\");\n+        result = BCompileUtil.compile(\"test-src/annotations/display_annot.bal\");\n     }\n \n     @Test\n-    public void testIconOnFunction() {\n+    public void testDisplayAnnotOnFunction() {\n         BLangFunction fooFunction = (BLangFunction) ((List) ((BLangPackage) result.getAST()).functions).get(0);\n         BLangAnnotationAttachment annot = (BLangAnnotationAttachment) ((List) fooFunction.annAttachments).get(0);\n-        Assert.assertEquals(getActualExpressionFromAnnotationAttachmentExpr(annot.expr).toString(), \" {path: \" +\n-                \"/fooIconPath.icon}\");\n+        Assert.assertEquals(getActualExpressionFromAnnotationAttachmentExpr(annot.expr).toString(),\n+                \" {iconPath: fooIconPath.icon,label: Foo function}\");\n+    }\n+\n+    @Test\n+    public void testDisplayAnnotOnServiceDecl() {\n+        BLangService service = (BLangService) result.getAST().getServices().get(0);\n+        BLangAnnotationAttachment attachment = service.getAnnotationAttachments().get(0);\n+        Assert.assertEquals(getActualExpressionFromAnnotationAttachmentExpr(attachment.expr).toString(),\n+                \" {iconPath: service.icon,label: service,misc: Other info}\");\n     }\n \n     @Test (enabled = false)\n     public void testIconOnObjectAndMemberFunction() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ed31aa8ce34354bb9fac5358a4960ad52e8032f"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM1NDI0MQ==", "bodyText": "Can this be enabled?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27626#discussion_r552354241", "createdAt": "2021-01-06T03:52:26Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/annotations/DisplayAnnotationTest.java", "diffHunk": "@@ -29,57 +29,65 @@\n import org.wso2.ballerinalang.compiler.tree.BLangClassDefinition;\n import org.wso2.ballerinalang.compiler.tree.BLangFunction;\n import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangService;\n import org.wso2.ballerinalang.compiler.tree.expressions.BLangExpression;\n import org.wso2.ballerinalang.compiler.tree.expressions.BLangInvocation;\n import org.wso2.ballerinalang.compiler.tree.expressions.BLangTypeConversionExpr;\n \n import java.util.List;\n \n /**\n- * Class to test icon annotation.\n+ * Class to test display annotation.\n  *\n  * @since 2.0\n  */\n-public class IconAnnotationTest {\n+public class DisplayAnnotationTest {\n \n     private CompileResult result;\n     private CompileResult negative;\n \n     @BeforeClass\n     public void setup() {\n-        negative = BCompileUtil.compile(\"test-src/annotations/icon_annot_negative.bal\");\n-        result = BCompileUtil.compile(\"test-src/annotations/icon_annot.bal\");\n+        negative = BCompileUtil.compile(\"test-src/annotations/display_annot_negative.bal\");\n+        result = BCompileUtil.compile(\"test-src/annotations/display_annot.bal\");\n     }\n \n     @Test\n-    public void testIconOnFunction() {\n+    public void testDisplayAnnotOnFunction() {\n         BLangFunction fooFunction = (BLangFunction) ((List) ((BLangPackage) result.getAST()).functions).get(0);\n         BLangAnnotationAttachment annot = (BLangAnnotationAttachment) ((List) fooFunction.annAttachments).get(0);\n-        Assert.assertEquals(getActualExpressionFromAnnotationAttachmentExpr(annot.expr).toString(), \" {path: \" +\n-                \"/fooIconPath.icon}\");\n+        Assert.assertEquals(getActualExpressionFromAnnotationAttachmentExpr(annot.expr).toString(),\n+                \" {iconPath: fooIconPath.icon,label: Foo function}\");\n+    }\n+\n+    @Test\n+    public void testDisplayAnnotOnServiceDecl() {\n+        BLangService service = (BLangService) result.getAST().getServices().get(0);\n+        BLangAnnotationAttachment attachment = service.getAnnotationAttachments().get(0);\n+        Assert.assertEquals(getActualExpressionFromAnnotationAttachmentExpr(attachment.expr).toString(),\n+                \" {iconPath: service.icon,label: service,misc: Other info}\");\n     }\n \n     @Test (enabled = false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ed31aa8ce34354bb9fac5358a4960ad52e8032f"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bd2b65a2e2807f25f8764481f6195213155a7cc", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2bd2b65a2e2807f25f8764481f6195213155a7cc", "committedDate": "2021-01-06T04:06:11Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Maryam Ziyad <maryamziyadm@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13b459afb67675187ccf5dfcac442d02d96b1da1", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/13b459afb67675187ccf5dfcac442d02d96b1da1", "committedDate": "2021-01-06T08:01:37Z", "message": "Make iconPath optional"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzk4MDAx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27626#pullrequestreview-562398001", "createdAt": "2021-01-06T08:19:23Z", "commit": {"oid": "13b459afb67675187ccf5dfcac442d02d96b1da1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwODoxOToyM1rOIO1o5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwODoxOToyM1rOIO1o5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQyOTc5Nw==", "bodyText": "Do we need this now?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27626#discussion_r552429797", "createdAt": "2021-01-06T08:19:23Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/annotations/display_annot_negative.bal", "diffHunk": "@@ -14,11 +14,11 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-@icon { path: \"/fooIconPath.icon\" }\n-@icon { path: \"/fooIconPath.icon\" }\n+@display {iconPath: \"fooIconPath.icon\", label: \"l\"}\n+@display {iconPath: \"fooIconPath.icon\", label: \"j\"}\n function foo(int i, string k) returns int {\n     return i;\n }\n \n-@icon { path: \"/fooIconPath.icon\" }\n+@display {iconPath: \"fooIconPath.icon\", label: \"k\"}\n int GLOBAL = 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13b459afb67675187ccf5dfcac442d02d96b1da1"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "381faf446addf8c8af072721201bbbd88f8bb69b", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/381faf446addf8c8af072721201bbbd88f8bb69b", "committedDate": "2021-01-06T12:37:29Z", "message": "Apply review suggestion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyNzA0ODc5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27626#pullrequestreview-562704879", "createdAt": "2021-01-06T13:26:05Z", "commit": {"oid": "381faf446addf8c8af072721201bbbd88f8bb69b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4673, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}