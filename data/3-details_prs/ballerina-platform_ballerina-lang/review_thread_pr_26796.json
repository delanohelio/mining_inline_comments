{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NjE2NjU4", "number": 26796, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTozMToyN1rOE2Arfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTozMToyN1rOE2Arfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDY5Njk0OnYy", "diffSide": "RIGHT", "path": "tests/ballerina-test-utils/src/main/java/org/ballerinalang/test/BCompileUtil.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTozMToyN1rOHumgyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo0MzoyM1rOHum7_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYyNzUzMQ==", "bodyText": "We can use findAny function instead finding the count since there is no usage of the count - https://www.baeldung.com/java-stream-findfirst-vs-findany", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26796#discussion_r518627531", "createdAt": "2020-11-06T09:31:27Z", "author": {"login": "hemikak"}, "path": "tests/ballerina-test-utils/src/main/java/org/ballerinalang/test/BCompileUtil.java", "diffHunk": "@@ -58,7 +59,9 @@ public static CompileResult compile(String sourceFilePath) {\n         Package currentPackage = project.currentPackage();\n         PackageCompilation packageCompilation = currentPackage.getCompilation();\n         JBallerinaBackend jBallerinaBackend = JBallerinaBackend.from(packageCompilation, JdkVersion.JAVA_11);\n-        if (jBallerinaBackend.hasDiagnostics()) {\n+        long errorCount = jBallerinaBackend.diagnostics().stream().filter(diagnostic ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c057f18ca7b5e9cec7a015d3ba7390d5ac8db37d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYzMjA1NA==", "bodyText": "@hemikak WDYT of using anyMatch(predicate) instead? IMO it'll be more convenient for the above context, if we don't need the exact count.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26796#discussion_r518632054", "createdAt": "2020-11-06T09:39:21Z", "author": {"login": "NipunaRanasinghe"}, "path": "tests/ballerina-test-utils/src/main/java/org/ballerinalang/test/BCompileUtil.java", "diffHunk": "@@ -58,7 +59,9 @@ public static CompileResult compile(String sourceFilePath) {\n         Package currentPackage = project.currentPackage();\n         PackageCompilation packageCompilation = currentPackage.getCompilation();\n         JBallerinaBackend jBallerinaBackend = JBallerinaBackend.from(packageCompilation, JdkVersion.JAVA_11);\n-        if (jBallerinaBackend.hasDiagnostics()) {\n+        long errorCount = jBallerinaBackend.diagnostics().stream().filter(diagnostic ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYyNzUzMQ=="}, "originalCommit": {"oid": "c057f18ca7b5e9cec7a015d3ba7390d5ac8db37d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYzNDQ5NQ==", "bodyText": "+1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26796#discussion_r518634495", "createdAt": "2020-11-06T09:43:23Z", "author": {"login": "hemikak"}, "path": "tests/ballerina-test-utils/src/main/java/org/ballerinalang/test/BCompileUtil.java", "diffHunk": "@@ -58,7 +59,9 @@ public static CompileResult compile(String sourceFilePath) {\n         Package currentPackage = project.currentPackage();\n         PackageCompilation packageCompilation = currentPackage.getCompilation();\n         JBallerinaBackend jBallerinaBackend = JBallerinaBackend.from(packageCompilation, JdkVersion.JAVA_11);\n-        if (jBallerinaBackend.hasDiagnostics()) {\n+        long errorCount = jBallerinaBackend.diagnostics().stream().filter(diagnostic ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYyNzUzMQ=="}, "originalCommit": {"oid": "c057f18ca7b5e9cec7a015d3ba7390d5ac8db37d"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3087, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}