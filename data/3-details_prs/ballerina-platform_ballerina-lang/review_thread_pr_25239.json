{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NzY0MjAw", "number": 25239, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMjo1NTo0OFrOEX4EVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMzowMzowMlrOEX4I9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDcxMzE2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMjo1NTo0OFrOG_6NQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMzo0NToxNFrOG_67Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2NzEzNw==", "bodyText": "can extract lengthExpr.childInBucket(0) to a variable.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25239#discussion_r469667137", "createdAt": "2020-08-13T02:55:48Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -7713,12 +7738,16 @@ private STNode parseArrayTypeDescriptorNode(STIndexedExpressionNode indexedExpr)\n         // Validate the array length expression\n         STNode lengthExpr = lengthExprs.get(0);\n         switch (lengthExpr.kind) {\n-            case DECIMAL_INTEGER_LITERAL:\n-            case HEX_INTEGER_LITERAL:\n             case ASTERISK_TOKEN:\n             case SIMPLE_NAME_REFERENCE:\n             case QUALIFIED_NAME_REFERENCE:\n                 break;\n+            case NUMERIC_LITERAL:\n+                if (lengthExpr.childInBucket(0).kind == SyntaxKind.DECIMAL_INTEGER_LITERAL_TOKEN ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00960fe55954512bd3807a5a914bd99c3c7ae377"}, "originalPosition": 213}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY3ODkzNA==", "bodyText": "Done", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25239#discussion_r469678934", "createdAt": "2020-08-13T03:45:14Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -7713,12 +7738,16 @@ private STNode parseArrayTypeDescriptorNode(STIndexedExpressionNode indexedExpr)\n         // Validate the array length expression\n         STNode lengthExpr = lengthExprs.get(0);\n         switch (lengthExpr.kind) {\n-            case DECIMAL_INTEGER_LITERAL:\n-            case HEX_INTEGER_LITERAL:\n             case ASTERISK_TOKEN:\n             case SIMPLE_NAME_REFERENCE:\n             case QUALIFIED_NAME_REFERENCE:\n                 break;\n+            case NUMERIC_LITERAL:\n+                if (lengthExpr.childInBucket(0).kind == SyntaxKind.DECIMAL_INTEGER_LITERAL_TOKEN ||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2NzEzNw=="}, "originalCommit": {"oid": "00960fe55954512bd3807a5a914bd99c3c7ae377"}, "originalPosition": 213}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDcxNjExOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMjo1NzozM1rOG_6PEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMzo0ODowN1rOG_695A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2NzYwMA==", "bodyText": "Do we need a ASTERISK_LITERAL?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25239#discussion_r469667600", "createdAt": "2020-08-13T02:57:33Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -15483,7 +15495,7 @@ private SyntaxKind getBracketedListNodeType(STNode memberNode) {\n         }\n \n         switch (memberNode.kind) {\n-            case ASTERISK_TOKEN:\n+            case ASTERISK_LITERAL:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00960fe55954512bd3807a5a914bd99c3c7ae377"}, "originalPosition": 468}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY3OTU4OA==", "bodyText": "There is a place where we treat asterisk as a basic literal in line 4894. So that is why I have used ASTERISK_LITERAL.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25239#discussion_r469679588", "createdAt": "2020-08-13T03:48:07Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -15483,7 +15495,7 @@ private SyntaxKind getBracketedListNodeType(STNode memberNode) {\n         }\n \n         switch (memberNode.kind) {\n-            case ASTERISK_TOKEN:\n+            case ASTERISK_LITERAL:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2NzYwMA=="}, "originalCommit": {"oid": "00960fe55954512bd3807a5a914bd99c3c7ae377"}, "originalPosition": 468}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDcyMDg4OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMzowMDoxNlrOG_6Ryg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMzo0ODo0NVrOG_6-jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2ODI5OA==", "bodyText": "Usually we keep a space between // and the first character in the comment :)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25239#discussion_r469668298", "createdAt": "2020-08-13T03:00:16Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java", "diffHunk": "@@ -201,23 +201,43 @@\n     PARAMETER_DOC_REFERENCE_TOKEN(907, \"parameter\"),\n     CONST_DOC_REFERENCE_TOKEN(908, \"const\"),\n \n+    //Literal tokens", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00960fe55954512bd3807a5a914bd99c3c7ae377"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY3OTc1Ng==", "bodyText": "Thanx will change.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25239#discussion_r469679756", "createdAt": "2020-08-13T03:48:45Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java", "diffHunk": "@@ -201,23 +201,43 @@\n     PARAMETER_DOC_REFERENCE_TOKEN(907, \"parameter\"),\n     CONST_DOC_REFERENCE_TOKEN(908, \"const\"),\n \n+    //Literal tokens", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2ODI5OA=="}, "originalCommit": {"oid": "00960fe55954512bd3807a5a914bd99c3c7ae377"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDcyMTg2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMzowMDo1NVrOG_6SYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNDowOTo0OFrOG_7TOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2ODQ0OQ==", "bodyText": "Should we move these under expressions?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25239#discussion_r469668449", "createdAt": "2020-08-13T03:00:55Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java", "diffHunk": "@@ -201,23 +201,43 @@\n     PARAMETER_DOC_REFERENCE_TOKEN(907, \"parameter\"),\n     CONST_DOC_REFERENCE_TOKEN(908, \"const\"),\n \n+    //Literal tokens\n     IDENTIFIER_TOKEN(1000),\n-    STRING_LITERAL(1001),\n-    DECIMAL_INTEGER_LITERAL(1002),\n-    HEX_INTEGER_LITERAL(1003),\n-    DECIMAL_FLOATING_POINT_LITERAL(1004),\n-    HEX_FLOATING_POINT_LITERAL(1005),\n+    STRING_LITERAL_TOKEN(1001),\n+    DECIMAL_INTEGER_LITERAL_TOKEN(1002),\n+    HEX_INTEGER_LITERAL_TOKEN(1003),\n+    DECIMAL_FLOATING_POINT_LITERAL_TOKEN(1004),\n+    HEX_FLOATING_POINT_LITERAL_TOKEN(1005),\n     XML_TEXT_CONTENT(1006),\n     TEMPLATE_STRING(1007),\n \n+    //Documentation\n+    DOCUMENTATION_DESCRIPTION(1100),\n+    PARAMETER_NAME(1101),\n+    BACKTICK_CONTENT(1102),\n+    DEPRECATION_LITERAL(1103),\n+    DOCUMENTATION_STRING(1104),\n+\n+    INVALID_TOKEN(1190),\n+\n+    //-----------------------------------------------non-terminal-kinds-----------------------------------------------\n+\n+    //Basic literal kinds\n+    STRING_LITERAL(1200),\n+    NUMERIC_LITERAL(1201),\n+    BOOLEAN_LITERAL(1202),\n+    NIL_LITERAL(1203),\n+    BASIC_LITERAL(1204),\n+    BYTE_ARRAY_LITERAL(1205),\n+    ASTERISK_LITERAL(1206),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00960fe55954512bd3807a5a914bd99c3c7ae377"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY4MDIzNA==", "bodyText": "By removing the basic literal kinds section?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25239#discussion_r469680234", "createdAt": "2020-08-13T03:50:30Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java", "diffHunk": "@@ -201,23 +201,43 @@\n     PARAMETER_DOC_REFERENCE_TOKEN(907, \"parameter\"),\n     CONST_DOC_REFERENCE_TOKEN(908, \"const\"),\n \n+    //Literal tokens\n     IDENTIFIER_TOKEN(1000),\n-    STRING_LITERAL(1001),\n-    DECIMAL_INTEGER_LITERAL(1002),\n-    HEX_INTEGER_LITERAL(1003),\n-    DECIMAL_FLOATING_POINT_LITERAL(1004),\n-    HEX_FLOATING_POINT_LITERAL(1005),\n+    STRING_LITERAL_TOKEN(1001),\n+    DECIMAL_INTEGER_LITERAL_TOKEN(1002),\n+    HEX_INTEGER_LITERAL_TOKEN(1003),\n+    DECIMAL_FLOATING_POINT_LITERAL_TOKEN(1004),\n+    HEX_FLOATING_POINT_LITERAL_TOKEN(1005),\n     XML_TEXT_CONTENT(1006),\n     TEMPLATE_STRING(1007),\n \n+    //Documentation\n+    DOCUMENTATION_DESCRIPTION(1100),\n+    PARAMETER_NAME(1101),\n+    BACKTICK_CONTENT(1102),\n+    DEPRECATION_LITERAL(1103),\n+    DOCUMENTATION_STRING(1104),\n+\n+    INVALID_TOKEN(1190),\n+\n+    //-----------------------------------------------non-terminal-kinds-----------------------------------------------\n+\n+    //Basic literal kinds\n+    STRING_LITERAL(1200),\n+    NUMERIC_LITERAL(1201),\n+    BOOLEAN_LITERAL(1202),\n+    NIL_LITERAL(1203),\n+    BASIC_LITERAL(1204),\n+    BYTE_ARRAY_LITERAL(1205),\n+    ASTERISK_LITERAL(1206),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2ODQ0OQ=="}, "originalCommit": {"oid": "00960fe55954512bd3807a5a914bd99c3c7ae377"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY4NTA0OQ==", "bodyText": "moved to expressions", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25239#discussion_r469685049", "createdAt": "2020-08-13T04:09:48Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java", "diffHunk": "@@ -201,23 +201,43 @@\n     PARAMETER_DOC_REFERENCE_TOKEN(907, \"parameter\"),\n     CONST_DOC_REFERENCE_TOKEN(908, \"const\"),\n \n+    //Literal tokens\n     IDENTIFIER_TOKEN(1000),\n-    STRING_LITERAL(1001),\n-    DECIMAL_INTEGER_LITERAL(1002),\n-    HEX_INTEGER_LITERAL(1003),\n-    DECIMAL_FLOATING_POINT_LITERAL(1004),\n-    HEX_FLOATING_POINT_LITERAL(1005),\n+    STRING_LITERAL_TOKEN(1001),\n+    DECIMAL_INTEGER_LITERAL_TOKEN(1002),\n+    HEX_INTEGER_LITERAL_TOKEN(1003),\n+    DECIMAL_FLOATING_POINT_LITERAL_TOKEN(1004),\n+    HEX_FLOATING_POINT_LITERAL_TOKEN(1005),\n     XML_TEXT_CONTENT(1006),\n     TEMPLATE_STRING(1007),\n \n+    //Documentation\n+    DOCUMENTATION_DESCRIPTION(1100),\n+    PARAMETER_NAME(1101),\n+    BACKTICK_CONTENT(1102),\n+    DEPRECATION_LITERAL(1103),\n+    DOCUMENTATION_STRING(1104),\n+\n+    INVALID_TOKEN(1190),\n+\n+    //-----------------------------------------------non-terminal-kinds-----------------------------------------------\n+\n+    //Basic literal kinds\n+    STRING_LITERAL(1200),\n+    NUMERIC_LITERAL(1201),\n+    BOOLEAN_LITERAL(1202),\n+    NIL_LITERAL(1203),\n+    BASIC_LITERAL(1204),\n+    BYTE_ARRAY_LITERAL(1205),\n+    ASTERISK_LITERAL(1206),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2ODQ0OQ=="}, "originalCommit": {"oid": "00960fe55954512bd3807a5a914bd99c3c7ae377"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDcyMjY1OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMzowMToyNVrOG_6S3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNDowNDoxNlrOG_7Nxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2ODU3Mw==", "bodyText": "we may no longer need BASIC_LITERAL", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25239#discussion_r469668573", "createdAt": "2020-08-13T03:01:25Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java", "diffHunk": "@@ -201,23 +201,43 @@\n     PARAMETER_DOC_REFERENCE_TOKEN(907, \"parameter\"),\n     CONST_DOC_REFERENCE_TOKEN(908, \"const\"),\n \n+    //Literal tokens\n     IDENTIFIER_TOKEN(1000),\n-    STRING_LITERAL(1001),\n-    DECIMAL_INTEGER_LITERAL(1002),\n-    HEX_INTEGER_LITERAL(1003),\n-    DECIMAL_FLOATING_POINT_LITERAL(1004),\n-    HEX_FLOATING_POINT_LITERAL(1005),\n+    STRING_LITERAL_TOKEN(1001),\n+    DECIMAL_INTEGER_LITERAL_TOKEN(1002),\n+    HEX_INTEGER_LITERAL_TOKEN(1003),\n+    DECIMAL_FLOATING_POINT_LITERAL_TOKEN(1004),\n+    HEX_FLOATING_POINT_LITERAL_TOKEN(1005),\n     XML_TEXT_CONTENT(1006),\n     TEMPLATE_STRING(1007),\n \n+    //Documentation\n+    DOCUMENTATION_DESCRIPTION(1100),\n+    PARAMETER_NAME(1101),\n+    BACKTICK_CONTENT(1102),\n+    DEPRECATION_LITERAL(1103),\n+    DOCUMENTATION_STRING(1104),\n+\n+    INVALID_TOKEN(1190),\n+\n+    //-----------------------------------------------non-terminal-kinds-----------------------------------------------\n+\n+    //Basic literal kinds\n+    STRING_LITERAL(1200),\n+    NUMERIC_LITERAL(1201),\n+    BOOLEAN_LITERAL(1202),\n+    NIL_LITERAL(1203),\n+    BASIC_LITERAL(1204),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00960fe55954512bd3807a5a914bd99c3c7ae377"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY4MzY1NQ==", "bodyText": "Removed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25239#discussion_r469683655", "createdAt": "2020-08-13T04:04:16Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java", "diffHunk": "@@ -201,23 +201,43 @@\n     PARAMETER_DOC_REFERENCE_TOKEN(907, \"parameter\"),\n     CONST_DOC_REFERENCE_TOKEN(908, \"const\"),\n \n+    //Literal tokens\n     IDENTIFIER_TOKEN(1000),\n-    STRING_LITERAL(1001),\n-    DECIMAL_INTEGER_LITERAL(1002),\n-    HEX_INTEGER_LITERAL(1003),\n-    DECIMAL_FLOATING_POINT_LITERAL(1004),\n-    HEX_FLOATING_POINT_LITERAL(1005),\n+    STRING_LITERAL_TOKEN(1001),\n+    DECIMAL_INTEGER_LITERAL_TOKEN(1002),\n+    HEX_INTEGER_LITERAL_TOKEN(1003),\n+    DECIMAL_FLOATING_POINT_LITERAL_TOKEN(1004),\n+    HEX_FLOATING_POINT_LITERAL_TOKEN(1005),\n     XML_TEXT_CONTENT(1006),\n     TEMPLATE_STRING(1007),\n \n+    //Documentation\n+    DOCUMENTATION_DESCRIPTION(1100),\n+    PARAMETER_NAME(1101),\n+    BACKTICK_CONTENT(1102),\n+    DEPRECATION_LITERAL(1103),\n+    DOCUMENTATION_STRING(1104),\n+\n+    INVALID_TOKEN(1190),\n+\n+    //-----------------------------------------------non-terminal-kinds-----------------------------------------------\n+\n+    //Basic literal kinds\n+    STRING_LITERAL(1200),\n+    NUMERIC_LITERAL(1201),\n+    BOOLEAN_LITERAL(1202),\n+    NIL_LITERAL(1203),\n+    BASIC_LITERAL(1204),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2ODU3Mw=="}, "originalCommit": {"oid": "00960fe55954512bd3807a5a914bd99c3c7ae377"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDcyNTAyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMzowMzowMlrOG_6UVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNzowOToyNFrOHBxnWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2ODk0OQ==", "bodyText": "Do we need separate kinds for null literal and () literal?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25239#discussion_r469668949", "createdAt": "2020-08-13T03:03:02Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java", "diffHunk": "@@ -201,23 +201,43 @@\n     PARAMETER_DOC_REFERENCE_TOKEN(907, \"parameter\"),\n     CONST_DOC_REFERENCE_TOKEN(908, \"const\"),\n \n+    //Literal tokens\n     IDENTIFIER_TOKEN(1000),\n-    STRING_LITERAL(1001),\n-    DECIMAL_INTEGER_LITERAL(1002),\n-    HEX_INTEGER_LITERAL(1003),\n-    DECIMAL_FLOATING_POINT_LITERAL(1004),\n-    HEX_FLOATING_POINT_LITERAL(1005),\n+    STRING_LITERAL_TOKEN(1001),\n+    DECIMAL_INTEGER_LITERAL_TOKEN(1002),\n+    HEX_INTEGER_LITERAL_TOKEN(1003),\n+    DECIMAL_FLOATING_POINT_LITERAL_TOKEN(1004),\n+    HEX_FLOATING_POINT_LITERAL_TOKEN(1005),\n     XML_TEXT_CONTENT(1006),\n     TEMPLATE_STRING(1007),\n \n+    //Documentation\n+    DOCUMENTATION_DESCRIPTION(1100),\n+    PARAMETER_NAME(1101),\n+    BACKTICK_CONTENT(1102),\n+    DEPRECATION_LITERAL(1103),\n+    DOCUMENTATION_STRING(1104),\n+\n+    INVALID_TOKEN(1190),\n+\n+    //-----------------------------------------------non-terminal-kinds-----------------------------------------------\n+\n+    //Basic literal kinds\n+    STRING_LITERAL(1200),\n+    NUMERIC_LITERAL(1201),\n+    BOOLEAN_LITERAL(1202),\n+    NIL_LITERAL(1203),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00960fe55954512bd3807a5a914bd99c3c7ae377"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY4MTU1NA==", "bodyText": "No, since null and () are both nil literal I have used a single kind.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25239#discussion_r469681554", "createdAt": "2020-08-13T03:55:34Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java", "diffHunk": "@@ -201,23 +201,43 @@\n     PARAMETER_DOC_REFERENCE_TOKEN(907, \"parameter\"),\n     CONST_DOC_REFERENCE_TOKEN(908, \"const\"),\n \n+    //Literal tokens\n     IDENTIFIER_TOKEN(1000),\n-    STRING_LITERAL(1001),\n-    DECIMAL_INTEGER_LITERAL(1002),\n-    HEX_INTEGER_LITERAL(1003),\n-    DECIMAL_FLOATING_POINT_LITERAL(1004),\n-    HEX_FLOATING_POINT_LITERAL(1005),\n+    STRING_LITERAL_TOKEN(1001),\n+    DECIMAL_INTEGER_LITERAL_TOKEN(1002),\n+    HEX_INTEGER_LITERAL_TOKEN(1003),\n+    DECIMAL_FLOATING_POINT_LITERAL_TOKEN(1004),\n+    HEX_FLOATING_POINT_LITERAL_TOKEN(1005),\n     XML_TEXT_CONTENT(1006),\n     TEMPLATE_STRING(1007),\n \n+    //Documentation\n+    DOCUMENTATION_DESCRIPTION(1100),\n+    PARAMETER_NAME(1101),\n+    BACKTICK_CONTENT(1102),\n+    DEPRECATION_LITERAL(1103),\n+    DOCUMENTATION_STRING(1104),\n+\n+    INVALID_TOKEN(1190),\n+\n+    //-----------------------------------------------non-terminal-kinds-----------------------------------------------\n+\n+    //Basic literal kinds\n+    STRING_LITERAL(1200),\n+    NUMERIC_LITERAL(1201),\n+    BOOLEAN_LITERAL(1202),\n+    NIL_LITERAL(1203),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2ODk0OQ=="}, "originalCommit": {"oid": "00960fe55954512bd3807a5a914bd99c3c7ae377"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYyMzUxNA==", "bodyText": "used seprate kinds", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25239#discussion_r471623514", "createdAt": "2020-08-17T17:09:24Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java", "diffHunk": "@@ -201,23 +201,43 @@\n     PARAMETER_DOC_REFERENCE_TOKEN(907, \"parameter\"),\n     CONST_DOC_REFERENCE_TOKEN(908, \"const\"),\n \n+    //Literal tokens\n     IDENTIFIER_TOKEN(1000),\n-    STRING_LITERAL(1001),\n-    DECIMAL_INTEGER_LITERAL(1002),\n-    HEX_INTEGER_LITERAL(1003),\n-    DECIMAL_FLOATING_POINT_LITERAL(1004),\n-    HEX_FLOATING_POINT_LITERAL(1005),\n+    STRING_LITERAL_TOKEN(1001),\n+    DECIMAL_INTEGER_LITERAL_TOKEN(1002),\n+    HEX_INTEGER_LITERAL_TOKEN(1003),\n+    DECIMAL_FLOATING_POINT_LITERAL_TOKEN(1004),\n+    HEX_FLOATING_POINT_LITERAL_TOKEN(1005),\n     XML_TEXT_CONTENT(1006),\n     TEMPLATE_STRING(1007),\n \n+    //Documentation\n+    DOCUMENTATION_DESCRIPTION(1100),\n+    PARAMETER_NAME(1101),\n+    BACKTICK_CONTENT(1102),\n+    DEPRECATION_LITERAL(1103),\n+    DOCUMENTATION_STRING(1104),\n+\n+    INVALID_TOKEN(1190),\n+\n+    //-----------------------------------------------non-terminal-kinds-----------------------------------------------\n+\n+    //Basic literal kinds\n+    STRING_LITERAL(1200),\n+    NUMERIC_LITERAL(1201),\n+    BOOLEAN_LITERAL(1202),\n+    NIL_LITERAL(1203),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2ODk0OQ=="}, "originalCommit": {"oid": "00960fe55954512bd3807a5a914bd99c3c7ae377"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 391, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}