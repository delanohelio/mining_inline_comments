{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NTc1MjY1", "number": 25589, "title": "Add sorting support for import and top level contexts", "bodyText": "Purpose\nWith this,\n\nAdd the Sorting API\nAdd initial sorting implementation for the import and module level contexts\nAdd sorting implementation for listener declaration context\nIntroduced Abstract LSCompletionItem to properly handle the insert text format without re-iterating over the item list\n\nFixes #25424\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-09-03T11:51:30Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25589", "merged": true, "mergeCommit": {"oid": "3f0ad63b97ace12ecc9946b6ca44e8b331c0363c"}, "closed": true, "closedAt": "2020-09-08T08:53:41Z", "author": {"login": "nadeeshaan"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGux0pAH2gAyNDc4NTc1MjY1Ojc0MjZlZTAyNzE0MzMwOWI3MDNmMTBkOTUxMzc0ZTEzNzk2ZGVhM2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGzpCnAFqTQ4Mzg4MDM1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7426ee027143309b703f10d951374e13796dea3d", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7426ee027143309b703f10d951374e13796dea3d", "committedDate": "2020-09-08T03:10:50Z", "message": "add sorting support for import and top level contexts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f53c2b558514cc263147b884299352debee51165", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f53c2b558514cc263147b884299352debee51165", "committedDate": "2020-09-08T06:05:27Z", "message": "add completion item sorting support for listener context"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67774d031535b2894cca307ef4b947b372395445", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/67774d031535b2894cca307ef4b947b372395445", "committedDate": "2020-09-03T11:47:56Z", "message": "add sorting support for import and top level contexts"}, "afterCommit": {"oid": "f53c2b558514cc263147b884299352debee51165", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f53c2b558514cc263147b884299352debee51165", "committedDate": "2020-09-08T06:05:27Z", "message": "add completion item sorting support for listener context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63a6ce1abc71a6c68fb9e89a57800d0ad8224165", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/63a6ce1abc71a6c68fb9e89a57800d0ad8224165", "committedDate": "2020-09-08T06:11:27Z", "message": "remove unused enum declaration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb7c7e3520940204878061fa020b1d6bf37478bd", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bb7c7e3520940204878061fa020b1d6bf37478bd", "committedDate": "2020-09-08T06:48:22Z", "message": "consider sort text for completion test assertion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzODgwMzUx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25589#pullrequestreview-483880351", "createdAt": "2020-09-08T07:51:21Z", "commit": {"oid": "bb7c7e3520940204878061fa020b1d6bf37478bd"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo1MToyMVrOHOQ_jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODo0NTowM1rOHOS__g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcyMDUyNQ==", "bodyText": "Is this unsafe cast unavoidable? we need to limit using spotbugs-exclusions", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25589#discussion_r484720525", "createdAt": "2020-09-08T07:51:21Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/spotbugs-exclude.xml", "diffHunk": "@@ -64,6 +64,12 @@\n             <Bug pattern=\"BC_UNCONFIRMED_CAST\" />\n         </OR>\n     </Match>\n+    <Match>\n+        <Class name=\"org.ballerinalang.langserver.completions.util.SortingUtil\" />\n+        <OR>\n+            <Bug pattern=\"BC_UNCONFIRMED_CAST\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb7c7e3520940204878061fa020b1d6bf37478bd"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc1MzE2Ng==", "bodyText": "Shall we move this check into a util function in SortingUtil such as SortingUtil.isKeywordCompletionItem(item)?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25589#discussion_r484753166", "createdAt": "2020-09-08T08:44:44Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ModulePartNodeContext.java", "diffHunk": "@@ -57,7 +63,35 @@ public ModulePartNodeContext() {\n         completionItems.addAll(addTopLevelItems(context));\n         completionItems.addAll(this.getTypeItems(context));\n         completionItems.addAll(this.getPackagesCompletionItems(context));\n+        this.sort(context, node, completionItems);\n \n         return completionItems;\n     }\n+\n+    @Override\n+    public void sort(LSContext context, ModulePartNode node, List<LSCompletionItem> items, Object... metaData) {\n+        for (LSCompletionItem item : items) {\n+            CompletionItem cItem = item.getCompletionItem();\n+            if (item instanceof SnippetCompletionItem\n+                    && (((SnippetCompletionItem) item).kind() == SnippetBlock.Kind.SNIPPET\n+                    || ((SnippetCompletionItem) item).kind() == SnippetBlock.Kind.STATEMENT)) {\n+                cItem.setSortText(genSortText(1));\n+                continue;\n+            }\n+            if (item instanceof SnippetCompletionItem\n+                    && ((SnippetCompletionItem) item).kind() == SnippetBlock.Kind.KEYWORD) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb7c7e3520940204878061fa020b1d6bf37478bd"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc1MzQwNg==", "bodyText": "Shall we move this check into a util function in SortingUtil such as SortingUtil.isStatementCompletionItem(item)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25589#discussion_r484753406", "createdAt": "2020-09-08T08:45:03Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ModulePartNodeContext.java", "diffHunk": "@@ -57,7 +63,35 @@ public ModulePartNodeContext() {\n         completionItems.addAll(addTopLevelItems(context));\n         completionItems.addAll(this.getTypeItems(context));\n         completionItems.addAll(this.getPackagesCompletionItems(context));\n+        this.sort(context, node, completionItems);\n \n         return completionItems;\n     }\n+\n+    @Override\n+    public void sort(LSContext context, ModulePartNode node, List<LSCompletionItem> items, Object... metaData) {\n+        for (LSCompletionItem item : items) {\n+            CompletionItem cItem = item.getCompletionItem();\n+            if (item instanceof SnippetCompletionItem\n+                    && (((SnippetCompletionItem) item).kind() == SnippetBlock.Kind.SNIPPET\n+                    || ((SnippetCompletionItem) item).kind() == SnippetBlock.Kind.STATEMENT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb7c7e3520940204878061fa020b1d6bf37478bd"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4796, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}