{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0Njg3NzA5", "number": 24170, "title": " Fix intersection type issues due to constituent type ordering", "bodyText": "Purpose\n$title.\nFixes #24167 - No type-checking error for invalid readonly intersection field where the invalid member type is defined after\nFixes #24116 Error when defining an intersection type definition with a type defined after the type definition\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-06-15T17:56:59Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24170", "merged": true, "mergeCommit": {"oid": "3076e6d09257f22d4fe8bd5798f1a20407188469"}, "closed": true, "closedAt": "2020-06-15T21:45:29Z", "author": {"login": "MaryamZi"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrd2tnAH2gAyNDM0Njg3NzA5Ojg3YmNjYjU5ZjBiMzIyYmM1ZDc4ZGEwYWUxMGY1MjA3OTkzZjIwOWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrmD2_AFqTQzMDk0MTg0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "87bccb59f0b322bc5d78da0ae10f5207993f209b", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/87bccb59f0b322bc5d78da0ae10f5207993f209b", "committedDate": "2020-06-15T10:11:50Z", "message": "Enable test disabled due to #23551"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bff2875d13ed88d3befbd257c779241db31e6887", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bff2875d13ed88d3befbd257c779241db31e6887", "committedDate": "2020-06-15T16:51:23Z", "message": "Fix intersection issues due to constituent type ordering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "361cad82d329b23093353a1386105b3b94a53d5e", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/361cad82d329b23093353a1386105b3b94a53d5e", "committedDate": "2020-06-15T16:58:50Z", "message": "Add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a51324607a0ab2cc5dd874787aa71fe9366a7c74", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a51324607a0ab2cc5dd874787aa71fe9366a7c74", "committedDate": "2020-06-15T17:49:53Z", "message": "Use forceCheck flag for members of a structure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTE3NDU5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24170#pullrequestreview-430917459", "createdAt": "2020-06-15T19:06:55Z", "commit": {"oid": "a51324607a0ab2cc5dd874787aa71fe9366a7c74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxOTowNjo1NlrOGj_ERg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxOTowNjo1NlrOGj_ERg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM4NjYzMA==", "bodyText": "Isn't the type an intersection type if the type node is an intersection type node?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24170#discussion_r440386630", "createdAt": "2020-06-15T19:06:56Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -1552,6 +1564,81 @@ private void defineMembers(List<BLangTypeDefinition> typeDefNodes, SymbolEnv pkg\n         }\n     }\n \n+    private void validateReadOnlyIntersectionTypeDefinitions(List<BLangTypeDefinition> typeDefNodes) {\n+        List<BType> loggedTypes = new ArrayList<>();\n+\n+        for (BLangTypeDefinition typeDefNode : typeDefNodes) {\n+            BLangType typeNode = typeDefNode.typeNode;\n+            NodeKind kind = typeNode.getKind();\n+            if (kind == NodeKind.INTERSECTION_TYPE_NODE) {\n+                BType currentType = typeNode.type;\n+\n+                if (currentType.tag != TypeTags.INTERSECTION) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51324607a0ab2cc5dd874787aa71fe9366a7c74"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTI0NTk5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24170#pullrequestreview-430924599", "createdAt": "2020-06-15T19:18:09Z", "commit": {"oid": "a51324607a0ab2cc5dd874787aa71fe9366a7c74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxOToxODowOVrOGj_acQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxOToxODowOVrOGj_acQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM5MjMwNQ==", "bodyText": "If the purpose of the loggedTypes list is to keep track of the already checked types, a Set would be a better option from a performance POV right? And the above can even be written as,\nif (!loggedTypes.add(effectiveType)) {\n    continue;\n}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24170#discussion_r440392305", "createdAt": "2020-06-15T19:18:09Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -1552,6 +1564,81 @@ private void defineMembers(List<BLangTypeDefinition> typeDefNodes, SymbolEnv pkg\n         }\n     }\n \n+    private void validateReadOnlyIntersectionTypeDefinitions(List<BLangTypeDefinition> typeDefNodes) {\n+        List<BType> loggedTypes = new ArrayList<>();\n+\n+        for (BLangTypeDefinition typeDefNode : typeDefNodes) {\n+            BLangType typeNode = typeDefNode.typeNode;\n+            NodeKind kind = typeNode.getKind();\n+            if (kind == NodeKind.INTERSECTION_TYPE_NODE) {\n+                BType currentType = typeNode.type;\n+\n+                if (currentType.tag != TypeTags.INTERSECTION) {\n+                    continue;\n+                }\n+\n+                BIntersectionType intersectionType = (BIntersectionType) currentType;\n+\n+                BType effectiveType = intersectionType.effectiveType;\n+                if (loggedTypes.contains(effectiveType)) {\n+                    continue;\n+                }\n+\n+                loggedTypes.add(effectiveType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51324607a0ab2cc5dd874787aa71fe9366a7c74"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTI4OTky", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24170#pullrequestreview-430928992", "createdAt": "2020-06-15T19:24:58Z", "commit": {"oid": "a51324607a0ab2cc5dd874787aa71fe9366a7c74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxOToyNDo1OFrOGj_oTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxOToyNDo1OFrOGj_oTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM5NTg1Mg==", "bodyText": "When can these types be noType?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24170#discussion_r440395852", "createdAt": "2020-06-15T19:24:58Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolResolver.java", "diffHunk": "@@ -1588,11 +1588,19 @@ private BType computeIntersectionType(BLangIntersectionTypeNode intersectionType\n \n         BLangType bLangTypeOne = constituentTypeNodes.get(0);\n         BType typeOne = resolveTypeNode(bLangTypeOne, env);\n+\n+        if (typeOne == symTable.noType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51324607a0ab2cc5dd874787aa71fe9366a7c74"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTQxODQ2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24170#pullrequestreview-430941846", "createdAt": "2020-06-15T19:45:26Z", "commit": {"oid": "a51324607a0ab2cc5dd874787aa71fe9366a7c74"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4254, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}