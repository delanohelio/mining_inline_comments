{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNzIyMzQy", "number": 20929, "title": "Add expression bodied function support", "bodyText": "Purpose\n\nThis PR adds support for expression bodied functions. The users will now be able to define functions as follows:\n\nfunction toEmployee(Person p) returns Employee => {\n    name: p.fname + \" \" + p.lname + \" \" + x.toString()\n};\n\npublic function main() {\n    Person p = {fname: \"John\", lname: \"Doe\", age: 25};\n    io:println(toEmployee(p));\n}\nFixes #20686\nFixes #20990\nApproach\n\nTo properly support expression bodies, this PR refactors the way function bodies are modeled. Previously a function body was modeled using a block statement. But with a 3rd type of function body added to the grammar with expr bodies, continuing to use the block statement wouldn't cleanly separate the logic for function bodies from generic code blocks. So instead of using the block statement, this PR introduces new abstractions for the function body. Now the block function body is represented by BLangBlockFunctionBody and the expr body is modeled by BLangExprFunctionBody. For now, no changes were done to how external bodied functions are handled. But the abstractions for it are there.\nAfter this refactoring, adding support for expr bodied functions was trivial. The expr function body is desugared to a block function body with a single return statement.\n\n{ return expr; }\nRemarks\n\nBuilds on #20910\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-02-08T14:52:26Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929", "merged": true, "mergeCommit": {"oid": "118370478c26950b602c9eb5eeef60422a0b1540"}, "closed": true, "closedAt": "2020-02-17T11:01:07Z", "author": {"login": "pubudu91"}, "timelineItems": {"totalCount": 66, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcC5zuYgBqjMwMjE5NDI1MzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFLO7hAFqTM1OTY1MjQ0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "639c18112d8cfd537f80d1eb72e96b05c8289e50", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/639c18112d8cfd537f80d1eb72e96b05c8289e50", "committedDate": "2020-02-10T08:46:15Z", "message": "Refactor ClosureDesugar"}, "afterCommit": {"oid": "f784a46a0dfd7208b82ddf0cb5100d3ed50e873f", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f784a46a0dfd7208b82ddf0cb5100d3ed50e873f", "committedDate": "2020-02-10T09:34:43Z", "message": "Refactor ClosureDesugar"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDcwOTA5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#pullrequestreview-356470909", "createdAt": "2020-02-11T08:19:03Z", "commit": {"oid": "9da5867a6c7f4fe72f2a07587d74836471f4d6e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwODoxOTowM1rOFoAKhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwODoxOTowM1rOFoAKhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ5MDA1NQ==", "bodyText": "Change to ExternalFunctionBodyNode", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#discussion_r377490055", "createdAt": "2020-02-11T08:19:03Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/ExternFunctionBodyNode.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.model.tree;\n+\n+/**\n+ * Represents the body of a function whose implementation is native.\n+ *\n+ * @since 1.2.0\n+ */\n+public interface ExternFunctionBodyNode extends FunctionBodyNode {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9da5867a6c7f4fe72f2a07587d74836471f4d6e3"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDgwMDg4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#pullrequestreview-356480088", "createdAt": "2020-02-11T08:38:14Z", "commit": {"oid": "9da5867a6c7f4fe72f2a07587d74836471f4d6e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwODozODoxNFrOFoAmgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwODozODoxNFrOFoAmgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ5NzIxOQ==", "bodyText": "Remove the todo", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#discussion_r377497219", "createdAt": "2020-02-11T08:38:14Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangParserListener.java", "diffHunk": "@@ -283,7 +283,44 @@ public void exitBlockFunctionBody(BallerinaParser.BlockFunctionBodyContext ctx)\n             return;\n         }\n \n-        this.pkgBuilder.endBlockFunctionBody(getWS(ctx));\n+        this.pkgBuilder.endBlockFunctionBody(getCurrentPos(ctx), getWS(ctx));\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public void enterExprFunctionBody(BallerinaParser.ExprFunctionBodyContext ctx) {\n+        if (isInErrorState) {\n+            return;\n+        }\n+\n+        this.pkgBuilder.startExprFunctionBody();\n+    }\n+\n+    /**\n+     * {@inheritDoc}\n+     */\n+    @Override\n+    public void exitExprFunctionBody(BallerinaParser.ExprFunctionBodyContext ctx) {\n+        if (isInErrorState) {\n+            return;\n+        }\n+\n+        // TODO: Check if we need to take pos and ws of expr or the whole body", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9da5867a6c7f4fe72f2a07587d74836471f4d6e3"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDg1MTEx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#pullrequestreview-356485111", "createdAt": "2020-02-11T08:48:10Z", "commit": {"oid": "9da5867a6c7f4fe72f2a07587d74836471f4d6e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwODo0ODoxMFrOFoA1-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwODo0ODoxMFrOFoA1-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUwMTE3Ng==", "bodyText": "move the extern function related logic to the extern func body from the invoke node.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#discussion_r377501176", "createdAt": "2020-02-11T08:48:10Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangPackageBuilder.java", "diffHunk": "@@ -1926,6 +1960,9 @@ void endExternalFunctionBody(int annotCount) {\n         // reversing the collected annotations to preserve the original order\n         Collections.reverse(tempAnnotAttachments);\n         tempAnnotAttachments.forEach(invokableNode::addExternalAnnotationAttachment);\n+\n+        FunctionBodyNode body = this.funcBodyNodeStack.pop();\n+        invokableNode.setBody(body);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9da5867a6c7f4fe72f2a07587d74836471f4d6e3"}, "originalPosition": 193}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDg3MDYw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#pullrequestreview-356487060", "createdAt": "2020-02-11T08:51:50Z", "commit": {"oid": "9da5867a6c7f4fe72f2a07587d74836471f4d6e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwODo1MTo1MFrOFoA7sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwODo1MTo1MFrOFoA7sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUwMjY0Mw==", "bodyText": "Change this along with the extern body changes", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#discussion_r377502643", "createdAt": "2020-02-11T08:51:50Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -316,14 +319,15 @@ public void visit(BLangFunction funcNode) {\n \n         // Check for native functions\n         if (Symbols.isNative(funcNode.symbol) || funcNode.interfaceFunction) {\n-            if (funcNode.body != null) {\n+            // TODO: double check this. Only applies for interfaces now IINM.\n+            if (funcNode.funcBody != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9da5867a6c7f4fe72f2a07587d74836471f4d6e3"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDkyNTI1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#pullrequestreview-356492525", "createdAt": "2020-02-11T09:01:17Z", "commit": {"oid": "9da5867a6c7f4fe72f2a07587d74836471f4d6e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOTowMToxN1rOFoBMbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOTowMToxN1rOFoBMbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUwNjkyNA==", "bodyText": "Check and see whether we can reuse the envs created in prev stages", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#discussion_r377506924", "createdAt": "2020-02-11T09:01:17Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java", "diffHunk": "@@ -390,6 +393,29 @@ public void visit(BLangFunction funcNode) {\n         analysisStateStack.pop();\n     }\n \n+    @Override\n+    public void visit(BLangBlockFunctionBody body) {\n+        SymbolEnv bodyEnv = SymbolEnv.createFuncBodyEnv(body, env);\n+        for (BLangStatement stmt : body.stmts) {\n+            if (stopAnalysis) {\n+                break;\n+            } else {\n+                analyzeNode(stmt, bodyEnv);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void visit(BLangExprFunctionBody body) {\n+        SymbolEnv bodyEnv = SymbolEnv.createFuncBodyEnv(body, env);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9da5867a6c7f4fe72f2a07587d74836471f4d6e3"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDk4MjU2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#pullrequestreview-356498256", "createdAt": "2020-02-11T09:11:35Z", "commit": {"oid": "9da5867a6c7f4fe72f2a07587d74836471f4d6e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOToxMTozNVrOFoBeBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOToxMTozNVrOFoBeBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUxMTQyOQ==", "bodyText": "Check and remove this", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#discussion_r377511429", "createdAt": "2020-02-11T09:11:35Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/BLangFunctionBody.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.ballerinalang.compiler.tree;\n+\n+import org.ballerinalang.model.tree.FunctionBodyNode;\n+import org.wso2.ballerinalang.compiler.semantics.model.Scope;\n+import org.wso2.ballerinalang.compiler.semantics.model.symbols.BVarSymbol;\n+\n+/**\n+ * Represents a function/method body.\n+ *\n+ * @since 1.2.0\n+ */\n+public abstract class BLangFunctionBody extends BLangNode implements FunctionBodyNode {\n+\n+    public BVarSymbol mapSymbol; // TODO: Do we need closure map for non-block bodied functions?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9da5867a6c7f4fe72f2a07587d74836471f4d6e3"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NTAzOTE0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#pullrequestreview-356503914", "createdAt": "2020-02-11T09:21:16Z", "commit": {"oid": "9da5867a6c7f4fe72f2a07587d74836471f4d6e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOToyMToxNlrOFoBvaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOToyMToxNlrOFoBvaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUxNTg4Mw==", "bodyText": "Consider other types of bodies as well", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#discussion_r377515883", "createdAt": "2020-02-11T09:21:16Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/HttpFiltersDesugar.java", "diffHunk": "@@ -233,7 +234,8 @@ private BLangSimpleVariable addFilterContextCreation(BLangFunction resourceNode,\n                 new BVarSymbol(0, names.fromString(filterContextVarName), resourceNode.symbol.pkgID, filterContextType,\n                                resourceNode.symbol));\n         filterContextVar.typeNode = filterContextUserDefinedType;\n-        resourceNode.body.stmts.add(0, ASTBuilderUtil.createVariableDef(resourceNode.pos, filterContextVar));\n+        ((BLangBlockFunctionBody) resourceNode.funcBody).stmts.add(0, ASTBuilderUtil", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9da5867a6c7f4fe72f2a07587d74836471f4d6e3"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a43fc0960166a126d1f46651118705f934c145eb", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a43fc0960166a126d1f46651118705f934c145eb", "committedDate": "2020-02-12T04:25:01Z", "message": "Add expression body support in the grammar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ae1368d1771b6d460acda061c5ee3d4aab91a5e", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8ae1368d1771b6d460acda061c5ee3d4aab91a5e", "committedDate": "2020-02-12T04:25:07Z", "message": "Add new model for the function body"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac3785bdc4fecc8aff8d2cca4e702caf92c79b57", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ac3785bdc4fecc8aff8d2cca4e702caf92c79b57", "committedDate": "2020-02-12T04:25:07Z", "message": "Modify the AST to use newly defined bodies for function bodies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5946131d1195683ac7805e8d4bbab06aa07a0fec", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5946131d1195683ac7805e8d4bbab06aa07a0fec", "committedDate": "2020-02-12T04:25:07Z", "message": "Add new body nodes to NodeCloner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "675d045ba3261b6ea0844d2536062b551b4210f0", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/675d045ba3261b6ea0844d2536062b551b4210f0", "committedDate": "2020-02-12T04:25:07Z", "message": "Replace use of .body withe .funcBody in the analyzers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "557390906ff9e2201c117617846c8d36cb7628d1", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/557390906ff9e2201c117617846c8d36cb7628d1", "committedDate": "2020-02-12T04:25:08Z", "message": "Introduce sequence statements and modify block-type models"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f00cb4f4c80cc0f27cfc86987fa0f97622ef17b", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4f00cb4f4c80cc0f27cfc86987fa0f97622ef17b", "committedDate": "2020-02-12T04:25:08Z", "message": "Replace the usages of block stmt func bodies in Desugar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee0236a64ccf31fafcef2ecef32ec30ed40b14ae", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ee0236a64ccf31fafcef2ecef32ec30ed40b14ae", "committedDate": "2020-02-12T04:25:08Z", "message": "Add visit logic for function bodies in Desugar and fix service desugar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a41eecf2b0ed88f8cae415f1f5986c18d3b16e75", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a41eecf2b0ed88f8cae415f1f5986c18d3b16e75", "committedDate": "2020-02-12T04:25:08Z", "message": "Add function body visit logic to BIR gen"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "345fc8e8569dc5fe0230d203b580c4b0cf777a85", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/345fc8e8569dc5fe0230d203b580c4b0cf777a85", "committedDate": "2020-02-12T04:25:08Z", "message": "Fix annotation desugar and issue func body model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66676301d219ce814a307a06fa7fb0b760563742", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/66676301d219ce814a307a06fa7fb0b760563742", "committedDate": "2020-02-12T04:25:08Z", "message": "Fix closure desugar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7a13eaa92284679c9c3859636b6654de7933cd7", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c7a13eaa92284679c9c3859636b6654de7933cd7", "committedDate": "2020-02-12T04:25:09Z", "message": "Refactor arrow function impl to use expr function body"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f80d8fececf1f3b899e07f62a134ebeca786c323", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f80d8fececf1f3b899e07f62a134ebeca786c323", "committedDate": "2020-02-12T04:25:09Z", "message": "Fix lambda func and worker related issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b748cd3ae170ee3157d7d8af0e591fd1d83a963", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2b748cd3ae170ee3157d7d8af0e591fd1d83a963", "committedDate": "2020-02-12T04:25:09Z", "message": "Fix issue in closures in transactions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a6e8388a62e98bf5d501f325c9c2fb26eb850e6", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8a6e8388a62e98bf5d501f325c9c2fb26eb850e6", "committedDate": "2020-02-12T04:25:09Z", "message": "Fix failing unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6698b84c7552b3ee2a2dd46f47dde2d18bc506e7", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6698b84c7552b3ee2a2dd46f47dde2d18bc506e7", "committedDate": "2020-02-12T04:25:09Z", "message": "Fix HTTP filter desugar and InvalidSyntaxParserTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f2c3e57b2665f45561f947296e40167c06e7d8a", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5f2c3e57b2665f45561f947296e40167c06e7d8a", "committedDate": "2020-02-12T04:25:09Z", "message": "Add expr bodied function support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfa6b6377892be9b2f4a4befbe4c4446cb7f0371", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cfa6b6377892be9b2f4a4befbe4c4446cb7f0371", "committedDate": "2020-02-12T04:25:10Z", "message": "Refactor ClosureDesugar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97d6b1dc34e7916f466b1e746d9b74f357ac2190", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/97d6b1dc34e7916f466b1e746d9b74f357ac2190", "committedDate": "2020-02-12T04:25:10Z", "message": "Regenerate the parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f72553192e2f0c802f0d799438aee5b874be4242", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f72553192e2f0c802f0d799438aee5b874be4242", "committedDate": "2020-02-12T04:25:10Z", "message": "Add support for expr bodies in explicit anon functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52e8a45e4346000a565866afa47370790f5891d8", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/52e8a45e4346000a565866afa47370790f5891d8", "committedDate": "2020-02-12T04:25:10Z", "message": "Rename BlockNode -> BlockStatementNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cea75a7b6693b0a68475590982c570026d407449", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cea75a7b6693b0a68475590982c570026d407449", "committedDate": "2020-02-12T04:25:10Z", "message": "Rename SequenceStatementNode -> BlockNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f01688c6809da887a7fa8dc3cd26ec31c2a4ea3e", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f01688c6809da887a7fa8dc3cd26ec31c2a4ea3e", "committedDate": "2020-02-12T04:25:11Z", "message": "Rename ExternFunctionBodyNode -> ExternalFunctionBodyNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0baf725b898cf54eb3fd4306326e5ce59bd24f1c", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0baf725b898cf54eb3fd4306326e5ce59bd24f1c", "committedDate": "2020-02-12T04:25:11Z", "message": "Add basic test cases for expr bodied functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d16369261c4761a97ca3b2a087f80d5d59dcab3", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4d16369261c4761a97ca3b2a087f80d5d59dcab3", "committedDate": "2020-02-12T04:25:11Z", "message": "Refactor external func body related logic"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "954339143808a6a2bb6f9a7539c947f6429c835a", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/954339143808a6a2bb6f9a7539c947f6429c835a", "committedDate": "2020-02-11T18:34:36Z", "message": "Refactor external func body related logic"}, "afterCommit": {"oid": "4d16369261c4761a97ca3b2a087f80d5d59dcab3", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4d16369261c4761a97ca3b2a087f80d5d59dcab3", "committedDate": "2020-02-12T04:25:11Z", "message": "Refactor external func body related logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89b772195733b9c9b85913fe347c7479769b8fdc", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/89b772195733b9c9b85913fe347c7479769b8fdc", "committedDate": "2020-02-12T09:07:54Z", "message": "Take different function bodies into consideration in HTTP filter desugar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d59632eb99ca6a89b835ca6f03c9c235fc33f6a", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6d59632eb99ca6a89b835ca6f03c9c235fc33f6a", "committedDate": "2020-02-13T09:09:58Z", "message": "fix completion and definition tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "deb02b58f65c1574c43739ee25101f4b4b762625", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/deb02b58f65c1574c43739ee25101f4b4b762625", "committedDate": "2020-02-13T09:34:21Z", "message": "Fix taint and semantic  analysis for expr bodies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "984f5fed6749df08a4d89995892158cb1609a095", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/984f5fed6749df08a4d89995892158cb1609a095", "committedDate": "2020-02-13T09:51:25Z", "message": "fix failing language server tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "829f9a73ba3e089d2a8f298ca524f2890184a070", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/829f9a73ba3e089d2a8f298ca524f2890184a070", "committedDate": "2020-02-13T10:53:39Z", "message": "Add test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e2ebee72d8ad44b528eea8da20c6d230bfb22aa8", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e2ebee72d8ad44b528eea8da20c6d230bfb22aa8", "committedDate": "2020-02-13T10:06:18Z", "message": "Add test cases"}, "afterCommit": {"oid": "829f9a73ba3e089d2a8f298ca524f2890184a070", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/829f9a73ba3e089d2a8f298ca524f2890184a070", "committedDate": "2020-02-13T10:53:39Z", "message": "Add test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bb91b9fbc203a9d91c39709d9033746f7649a60", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1bb91b9fbc203a9d91c39709d9033746f7649a60", "committedDate": "2020-02-14T04:54:30Z", "message": "remove redundent logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cab3960aa71ede812cf0afb35aa91311bcb0ed4a", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cab3960aa71ede812cf0afb35aa91311bcb0ed4a", "committedDate": "2020-02-14T08:46:42Z", "message": "Merge pull request #15 from nadeeshaan/add-expr-body-2-local\n\nFix Language Server Failing Test Cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54e47fb0e76153921381d5d8071cb55f340942c2", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/54e47fb0e76153921381d5d8071cb55f340942c2", "committedDate": "2020-02-14T09:01:42Z", "message": "Fix .body usages in lang server"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b2f4a948b9288ff516a17233db22a6e413cff30", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7b2f4a948b9288ff516a17233db22a6e413cff30", "committedDate": "2020-02-14T09:52:16Z", "message": "Fix func body usage in ServiceProtoUtils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04ce3bf9d61c13f468dbe50487f62f2573455c83", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/04ce3bf9d61c13f468dbe50487f62f2573455c83", "committedDate": "2020-02-14T09:56:46Z", "message": "Remove getBody() interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2eae2518555884f53efde71c6f614e7438f1bd2", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f2eae2518555884f53efde71c6f614e7438f1bd2", "committedDate": "2020-02-14T10:53:06Z", "message": "Rename funcBody -> body"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69ba0bcafa5cffcd75e4e006420bd88c03212eb0", "author": {"user": {"login": "NipunaMarcus", "name": "Nipuna Marcus"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/69ba0bcafa5cffcd75e4e006420bd88c03212eb0", "committedDate": "2020-02-14T13:22:43Z", "message": "Add expr body support for formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbeb15d4ae4e5b148c437a0ecfc3905d4a62205f", "author": {"user": {"login": "NipunaMarcus", "name": "Nipuna Marcus"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fbeb15d4ae4e5b148c437a0ecfc3905d4a62205f", "committedDate": "2020-02-14T13:27:55Z", "message": "Add test for expr func body in formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a06ba8349ff5e300e6cc4968f5d089ba222ef35", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4a06ba8349ff5e300e6cc4968f5d089ba222ef35", "committedDate": "2020-02-14T15:56:30Z", "message": "Merge pull request #16 from NipunaMarcus/add-expr-body-2-local\n\nAdd expr body support for formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "822420cef312d821ace48f3da0006a4f38bb9712", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/822420cef312d821ace48f3da0006a4f38bb9712", "committedDate": "2020-02-14T16:00:48Z", "message": "Sync with master and resolve conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "975ef274019b77a83a1721ff6fa093a3cc18d885", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/975ef274019b77a83a1721ff6fa093a3cc18d885", "committedDate": "2020-02-14T16:03:28Z", "message": "Regenerate the parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac3ec6a6de4946ae27357c989d4860dcd3a68fa0", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ac3ec6a6de4946ae27357c989d4860dcd3a68fa0", "committedDate": "2020-02-14T16:03:56Z", "message": "Merge branch 'add-expr-body-2' of github.com:pubudu91/ballerina into add-expr-body-2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "821fbf8c79786a10d6cc09e687d27b5fe7cd1d2d", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/821fbf8c79786a10d6cc09e687d27b5fe7cd1d2d", "committedDate": "2020-02-14T18:32:05Z", "message": "Regenerate the parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3354b6c4db04cdc96c73404cc11e47e5470b76b", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f3354b6c4db04cdc96c73404cc11e47e5470b76b", "committedDate": "2020-02-14T18:33:14Z", "message": "Fix broken 'do' related logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea334d75cd46e25fb34588b09b1af7830c866b88", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ea334d75cd46e25fb34588b09b1af7830c866b88", "committedDate": "2020-02-15T14:46:12Z", "message": "Fix checkstyle issues"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "29f22b242c1bd15502969923fe5cb8c39cd05b61", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/29f22b242c1bd15502969923fe5cb8c39cd05b61", "committedDate": "2020-02-15T13:47:46Z", "message": "Fix checkstyle issues"}, "afterCommit": {"oid": "ea334d75cd46e25fb34588b09b1af7830c866b88", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ea334d75cd46e25fb34588b09b1af7830c866b88", "committedDate": "2020-02-15T14:46:12Z", "message": "Fix checkstyle issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1abdd755eaa362d5022fd583488e2be9188fcd41", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1abdd755eaa362d5022fd583488e2be9188fcd41", "committedDate": "2020-02-16T09:52:27Z", "message": "fix failing test case for visible endpoint visitor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9115bf81d9979f567279795e58ba4b390d69f23d", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9115bf81d9979f567279795e58ba4b390d69f23d", "committedDate": "2020-02-16T09:57:32Z", "message": "Merge pull request #17 from nadeeshaan/add-expr-body-2-local\n\nFix failing test case for visible endpoint visitor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3465be3283e760aa492c7367b21c3dd9678aff8", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d3465be3283e760aa492c7367b21c3dd9678aff8", "committedDate": "2020-02-16T11:25:54Z", "message": "Fix issue in stream constructor expr"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f13766bd9f07eef613867068dc9cb9320493b131", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f13766bd9f07eef613867068dc9cb9320493b131", "committedDate": "2020-02-16T11:26:16Z", "message": "Merge branch 'add-expr-body-2' of github.com:pubudu91/ballerina into add-expr-body-2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "993459b1b7678d4d91bc55a8e458bbcce87ceda5", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/993459b1b7678d4d91bc55a8e458bbcce87ceda5", "committedDate": "2020-02-16T17:47:56Z", "message": "Remove extern annot attachments from BLangInvokableNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4009eca4d6fef530efe89b430cef6156c3b4c6ea", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4009eca4d6fef530efe89b430cef6156c3b4c6ea", "committedDate": "2020-02-17T05:19:50Z", "message": "Move closure map symbol to block function body"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b37d6213baa77dbd13dec98efc1c09ee1b0baf15", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b37d6213baa77dbd13dec98efc1c09ee1b0baf15", "committedDate": "2020-02-17T04:46:17Z", "message": "Move closure map symbol to block function body"}, "afterCommit": {"oid": "4009eca4d6fef530efe89b430cef6156c3b4c6ea", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4009eca4d6fef530efe89b430cef6156c3b4c6ea", "committedDate": "2020-02-17T05:19:50Z", "message": "Move closure map symbol to block function body"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NTExOTU2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#pullrequestreview-359511956", "createdAt": "2020-02-17T06:34:46Z", "commit": {"oid": "4009eca4d6fef530efe89b430cef6156c3b4c6ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNjozNDo0NlrOFqZorA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNjozNDo0NlrOFqZorA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAwNDUyNA==", "bodyText": "Can getOrCreateMapSymbol be a better name.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#discussion_r380004524", "createdAt": "2020-02-17T06:34:46Z", "author": {"login": "KRVPerera"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/ClosureDesugar.java", "diffHunk": "@@ -372,23 +404,63 @@ public void visit(BLangSimpleVariableDef varDefNode) {\n      * @return assignment statement created\n      */\n     private BLangAssignment createAssignment(BLangSimpleVariableDef varDefNode) {\n-        // Create a map for the function or block node.\n-        BLangBlockStmt blockStmt = (BLangBlockStmt) env.node;\n-        if (blockStmt.mapSymbol == null) {\n-            // create a map symbol\n-            blockStmt.mapSymbol = createMapSymbol(\"$map$block$\" + blockClosureMapCount, env);\n-        }\n+        BVarSymbol mapSymbol = createMapSymbolIfAbsent(env.node, blockClosureMapCount);\n \n         // Add the variable to the created map.\n-        BLangIndexBasedAccess accessExpr = ASTBuilderUtil.createIndexBasesAccessExpr(varDefNode.pos, varDefNode.type,\n-                blockStmt.mapSymbol, ASTBuilderUtil.createLiteral(varDefNode.pos, symTable.stringType,\n-                        varDefNode.var.name.value));\n-        accessExpr.type = ((BMapType) blockStmt.mapSymbol.type).constraint;\n+        BLangIndexBasedAccess accessExpr =\n+                ASTBuilderUtil.createIndexBasesAccessExpr(varDefNode.pos, varDefNode.type, mapSymbol,\n+                                                          ASTBuilderUtil\n+                                                                  .createLiteral(varDefNode.pos, symTable.stringType,\n+                                                                                 varDefNode.var.name.value));\n+        accessExpr.type = ((BMapType) mapSymbol.type).constraint;\n         accessExpr.lhsVar = true;\n         // Written to: 'map[\"x\"] = 8'.\n         return ASTBuilderUtil.createAssignmentStmt(varDefNode.pos, accessExpr, varDefNode.var.expr);\n     }\n \n+    private BVarSymbol createMapSymbolIfAbsent(BLangNode node, int closureMapCount) {\n+        if (node.getKind() == NodeKind.BLOCK_FUNCTION_BODY) {\n+            return createMapSymbolIfAbsent((BLangBlockFunctionBody) node, closureMapCount);\n+        } else if (node.getKind() == NodeKind.BLOCK) {\n+            return createMapSymbolIfAbsent((BLangBlockStmt) node, closureMapCount);\n+        } else if (node.getKind() == NodeKind.FUNCTION) {\n+            return createMapSymbolIfAbsent((BLangFunction) node, closureMapCount);\n+        }\n+        return null;\n+    }\n+\n+    private BVarSymbol createMapSymbolIfAbsent(BLangBlockFunctionBody body, int closureMapCount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4009eca4d6fef530efe89b430cef6156c3b4c6ea"}, "originalPosition": 189}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NTE1MDAy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#pullrequestreview-359515002", "createdAt": "2020-02-17T06:45:25Z", "commit": {"oid": "4009eca4d6fef530efe89b430cef6156c3b4c6ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNjo0NToyNVrOFqZx1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNjo0NToyNVrOFqZx1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAwNjg3MA==", "bodyText": "The name suggests that we create a map symbol always but the function may return null as well. Should this null be an assert ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#discussion_r380006870", "createdAt": "2020-02-17T06:45:25Z", "author": {"login": "KRVPerera"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/ClosureDesugar.java", "diffHunk": "@@ -372,23 +404,63 @@ public void visit(BLangSimpleVariableDef varDefNode) {\n      * @return assignment statement created\n      */\n     private BLangAssignment createAssignment(BLangSimpleVariableDef varDefNode) {\n-        // Create a map for the function or block node.\n-        BLangBlockStmt blockStmt = (BLangBlockStmt) env.node;\n-        if (blockStmt.mapSymbol == null) {\n-            // create a map symbol\n-            blockStmt.mapSymbol = createMapSymbol(\"$map$block$\" + blockClosureMapCount, env);\n-        }\n+        BVarSymbol mapSymbol = createMapSymbolIfAbsent(env.node, blockClosureMapCount);\n \n         // Add the variable to the created map.\n-        BLangIndexBasedAccess accessExpr = ASTBuilderUtil.createIndexBasesAccessExpr(varDefNode.pos, varDefNode.type,\n-                blockStmt.mapSymbol, ASTBuilderUtil.createLiteral(varDefNode.pos, symTable.stringType,\n-                        varDefNode.var.name.value));\n-        accessExpr.type = ((BMapType) blockStmt.mapSymbol.type).constraint;\n+        BLangIndexBasedAccess accessExpr =\n+                ASTBuilderUtil.createIndexBasesAccessExpr(varDefNode.pos, varDefNode.type, mapSymbol,\n+                                                          ASTBuilderUtil\n+                                                                  .createLiteral(varDefNode.pos, symTable.stringType,\n+                                                                                 varDefNode.var.name.value));\n+        accessExpr.type = ((BMapType) mapSymbol.type).constraint;\n         accessExpr.lhsVar = true;\n         // Written to: 'map[\"x\"] = 8'.\n         return ASTBuilderUtil.createAssignmentStmt(varDefNode.pos, accessExpr, varDefNode.var.expr);\n     }\n \n+    private BVarSymbol createMapSymbolIfAbsent(BLangNode node, int closureMapCount) {\n+        if (node.getKind() == NodeKind.BLOCK_FUNCTION_BODY) {\n+            return createMapSymbolIfAbsent((BLangBlockFunctionBody) node, closureMapCount);\n+        } else if (node.getKind() == NodeKind.BLOCK) {\n+            return createMapSymbolIfAbsent((BLangBlockStmt) node, closureMapCount);\n+        } else if (node.getKind() == NodeKind.FUNCTION) {\n+            return createMapSymbolIfAbsent((BLangFunction) node, closureMapCount);\n+        }\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4009eca4d6fef530efe89b430cef6156c3b4c6ea"}, "originalPosition": 186}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NjUyNDQ5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20929#pullrequestreview-359652449", "createdAt": "2020-02-17T11:00:58Z", "commit": {"oid": "4009eca4d6fef530efe89b430cef6156c3b4c6ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4200, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}