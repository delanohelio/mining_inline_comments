{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyODgzNTcx", "number": 23075, "title": "OpenAPI related fixes for generating ballerina client ", "bodyText": "Purpose\n\nFollowing fixes were introduced to properly generate a client for kubernetes.\n\nOpenAPI/Swagger Spec: https://github.com/kubernetes/kubernetes/blob/v1.18.2/api/openapi-spec/swagger.json\nApproach\n\nUpdate the code.\n\nSamples\n\nRefer - https://github.com/kubernetes/kubernetes/blob/v1.18.2/api/openapi-spec/swagger.json\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-05-04T11:05:43Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23075", "merged": true, "mergeCommit": {"oid": "39d32e086d107ec0ea8e6ab51decbe50fb59c683"}, "closed": true, "closedAt": "2020-05-05T07:59:08Z", "author": {"login": "hemikak"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcd9MSbgH2gAyNDEyODgzNTcxOjNhYjgyZGQwNTIwMzg2ZGU1MGE1NzU0NjNlYzFiZDI3YjM2M2QwZmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcePSlSgFqTQwNTU2MzI1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3ab82dd0520386de50a575463ec1bd27b363d0ff", "author": {"user": {"login": "hemikak", "name": "Hemika Kodikara"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3ab82dd0520386de50a575463ec1bd27b363d0ff", "committedDate": "2020-05-04T10:47:31Z", "message": "improvements for openapi client generation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fa2eaa9c2442176695a203b2567a842ed7c6e27", "author": {"user": {"login": "hemikak", "name": "Hemika Kodikara"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1fa2eaa9c2442176695a203b2567a842ed7c6e27", "committedDate": "2020-05-04T11:01:48Z", "message": "fix merge conflict"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0OTQ1MjU1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23075#pullrequestreview-404945255", "createdAt": "2020-05-04T12:36:17Z", "commit": {"oid": "1fa2eaa9c2442176695a203b2567a842ed7c6e27"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTYwOTU5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23075#pullrequestreview-405560959", "createdAt": "2020-05-05T07:48:54Z", "commit": {"oid": "1fa2eaa9c2442176695a203b2567a842ed7c6e27"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzo0ODo1NFrOGQeE0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzo0ODo1NFrOGQeE0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkyMzE1NQ==", "bodyText": "just a suggestion ... we can sum this up to a one-line I think. Someway like below...\nparameter.getIn() == null ? false : parameter.getIn().equals(\"path\")", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23075#discussion_r419923155", "createdAt": "2020-05-05T07:48:54Z", "author": {"login": "NipunaMarcus"}, "path": "misc/openapi-ballerina/modules/openapi-to-ballerina-generator/src/main/java/org/ballerinalang/openapi/model/BallerinaOpenApi.java", "diffHunk": "@@ -125,8 +125,51 @@ private void setPaths(OpenAPI openAPI) throws BallerinaOpenApiException {\n                     }\n                 });\n             }\n-            paths.add(new AbstractMap.SimpleEntry<>(path.getKey(), balPath));\n+            \n+            String resourcePath;\n+            // Use ballerina string templating if there are path params.\n+            if (hasPathParams(path.getValue())) {\n+                resourcePath = \"string `\" + path.getKey().replace(\"{\", \"${\") + \"`\";\n+            } else {\n+                resourcePath = \"\\\"\" + path.getKey() + \"\\\"\";\n+            }\n+            \n+            paths.add(new AbstractMap.SimpleEntry<>(resourcePath, balPath));\n+        }\n+    }\n+    \n+    /**\n+     * Checks if there are any path parameters in the operations.\n+     *\n+     * @param path The path item in the OpenAPI spec.\n+     * @return True if there are path parameters, else false.\n+     */\n+    private boolean hasPathParams(PathItem path) {\n+        if (null != path.getParameters() && path.getParameters().size() > 0) {\n+            return path.getParameters().stream().anyMatch(parameter -> {\n+                if (null == parameter.getIn()) {\n+                    return false;\n+                }\n+                return parameter.getIn().equals(\"path\");\n+            });\n+        }\n+    \n+        if (path.readOperations().size() > 0) {\n+            return path.readOperations().stream().anyMatch(operation -> {\n+                if (null != operation.getParameters() && operation.getParameters().size() > 0) {\n+                    return operation.getParameters().stream().anyMatch(parameter -> {\n+                        if (null == parameter.getIn()) {\n+                            return false;\n+                        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fa2eaa9c2442176695a203b2567a842ed7c6e27"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTYzMjU0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23075#pullrequestreview-405563254", "createdAt": "2020-05-05T07:52:41Z", "commit": {"oid": "1fa2eaa9c2442176695a203b2567a842ed7c6e27"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3368, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}