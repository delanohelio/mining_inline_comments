{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNjAzNzQ5", "number": 23473, "title": "Restrict annotation value to true, map<anydata|readonly> , map<anydata|readonly>[]", "bodyText": "Purpose\nFixes #15533\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-05-25T07:56:42Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473", "merged": true, "mergeCommit": {"oid": "457db3b670f3dd4e2f94d4e998ec2e494c77576d"}, "closed": true, "closedAt": "2020-06-17T05:28:44Z", "author": {"login": "KRVPerera"}, "timelineItems": {"totalCount": 55, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclAzSbABqjMzNzI1NjIzOTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsC_5QgFqTQzMjA2ODI2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c73f00036361fdcc898601179fdc6bd6d1a89fd4", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c73f00036361fdcc898601179fdc6bd6d1a89fd4", "committedDate": "2020-05-26T08:38:47Z", "message": "Fix : Code refactoring"}, "afterCommit": {"oid": "b68491475f24a56319c800b1c18f36d76b3bb3b0", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b68491475f24a56319c800b1c18f36d76b3bb3b0", "committedDate": "2020-05-26T08:46:22Z", "message": "Fix : Code refactoring"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c397241e33bf6dae87e25add4e29b28fc3d85a3", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6c397241e33bf6dae87e25add4e29b28fc3d85a3", "committedDate": "2020-05-26T09:31:26Z", "message": "Fix: comment Desugar for now"}, "afterCommit": {"oid": "2b34010bf0b733ad8bb4722d29a86d127b3338f8", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2b34010bf0b733ad8bb4722d29a86d127b3338f8", "committedDate": "2020-05-28T08:13:23Z", "message": "Fix Code Test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b34010bf0b733ad8bb4722d29a86d127b3338f8", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2b34010bf0b733ad8bb4722d29a86d127b3338f8", "committedDate": "2020-05-28T08:13:23Z", "message": "Fix Code Test"}, "afterCommit": {"oid": "1f473c82dc2e7174a1518ba7e4cf7ee8ea16eb67", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1f473c82dc2e7174a1518ba7e4cf7ee8ea16eb67", "committedDate": "2020-05-29T07:51:49Z", "message": "Fix test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f473c82dc2e7174a1518ba7e4cf7ee8ea16eb67", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1f473c82dc2e7174a1518ba7e4cf7ee8ea16eb67", "committedDate": "2020-05-29T07:51:49Z", "message": "Fix test cases"}, "afterCommit": {"oid": "5b8052b17660788751890de9c2a3acdd617a9825", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5b8052b17660788751890de9c2a3acdd617a9825", "committedDate": "2020-05-31T13:16:46Z", "message": "add new test for annotation value"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b8052b17660788751890de9c2a3acdd617a9825", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5b8052b17660788751890de9c2a3acdd617a9825", "committedDate": "2020-05-31T13:16:46Z", "message": "add new test for annotation value"}, "afterCommit": {"oid": "59a927a8e0b4e2a73c32013939f62ceab789a135", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/59a927a8e0b4e2a73c32013939f62ceab789a135", "committedDate": "2020-05-31T13:18:22Z", "message": "add new test for annotation value"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "59a927a8e0b4e2a73c32013939f62ceab789a135", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/59a927a8e0b4e2a73c32013939f62ceab789a135", "committedDate": "2020-05-31T13:18:22Z", "message": "add new test for annotation value"}, "afterCommit": {"oid": "5ed037f4fbb667607dcd2b544331a24953f9fb62", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5ed037f4fbb667607dcd2b544331a24953f9fb62", "committedDate": "2020-06-02T07:14:21Z", "message": "Fix existing test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ed037f4fbb667607dcd2b544331a24953f9fb62", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5ed037f4fbb667607dcd2b544331a24953f9fb62", "committedDate": "2020-06-02T07:14:21Z", "message": "Fix existing test cases"}, "afterCommit": {"oid": "8d8614e211b3ad91d86c7b930f06cd20bd2d570e", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8d8614e211b3ad91d86c7b930f06cd20bd2d570e", "committedDate": "2020-06-03T08:34:48Z", "message": "Fix existing test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d8614e211b3ad91d86c7b930f06cd20bd2d570e", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8d8614e211b3ad91d86c7b930f06cd20bd2d570e", "committedDate": "2020-06-03T08:34:48Z", "message": "Fix existing test cases"}, "afterCommit": {"oid": "9c5e8f833bd5be337cc65afd763ad52e3b0e3f3a", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9c5e8f833bd5be337cc65afd763ad52e3b0e3f3a", "committedDate": "2020-06-03T08:52:35Z", "message": "Fix existing test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c63bb6c53f99a43f99e3d0bc2102b1d12d8d0631", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c63bb6c53f99a43f99e3d0bc2102b1d12d8d0631", "committedDate": "2020-06-04T13:51:49Z", "message": "Fix bir generation of new annotation value changes"}, "afterCommit": {"oid": "5a22d1c582b9400e364113f82573f05734273230", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5a22d1c582b9400e364113f82573f05734273230", "committedDate": "2020-06-08T17:15:00Z", "message": "Fix bir generation of new annotation value changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93123dd02f22c88673bba95be1f89fd90f26459f", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/93123dd02f22c88673bba95be1f89fd90f26459f", "committedDate": "2020-06-09T08:29:56Z", "message": "Final annotation changes\n\n[ci skip]"}, "afterCommit": {"oid": "1a1ab9438bafa887182e724e0f3ed98e572b281c", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1a1ab9438bafa887182e724e0f3ed98e572b281c", "committedDate": "2020-06-10T19:19:46Z", "message": "Final annotation changes\n\n[ci skip]"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6cba4c0efe49e182868e6f3ddbc116d00cd6715d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6cba4c0efe49e182868e6f3ddbc116d00cd6715d", "committedDate": "2020-06-11T09:31:30Z", "message": "Final annotation readonly test cases\n\n[ci skip]"}, "afterCommit": {"oid": "940baac759383a56d570b6fdd33a8833624687a8", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/940baac759383a56d570b6fdd33a8833624687a8", "committedDate": "2020-06-11T09:46:55Z", "message": "Fix http tests : annotation value restriction"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "24cb6338e2a15e7997170f833c83e23cb66aefcf", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/24cb6338e2a15e7997170f833c83e23cb66aefcf", "committedDate": "2020-06-11T14:40:52Z", "message": "Fix grpc changes"}, "afterCommit": {"oid": "0491081d704d1728e35358cb03119e837beed98d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0491081d704d1728e35358cb03119e837beed98d", "committedDate": "2020-06-11T14:42:12Z", "message": "Fix http tests : annotation value restriction"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0491081d704d1728e35358cb03119e837beed98d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0491081d704d1728e35358cb03119e837beed98d", "committedDate": "2020-06-11T14:42:12Z", "message": "Fix http tests : annotation value restriction"}, "afterCommit": {"oid": "c3904f5d578e65294f881b7f35320830cafcd74f", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c3904f5d578e65294f881b7f35320830cafcd74f", "committedDate": "2020-06-12T08:57:46Z", "message": "Fix http tests : annotation value restriction"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NTc5ODY2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#pullrequestreview-429579866", "createdAt": "2020-06-12T09:03:19Z", "commit": {"oid": "399aa1df81e6123697253922092c62d730ef4956"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOTowMzoxOVrOGi8stQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOTowMzoxOVrOGi8stQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5OTI1Mw==", "bodyText": "@daneshk please help review if this change is okay.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r439299253", "createdAt": "2020-06-12T09:03:19Z", "author": {"login": "KRVPerera"}, "path": "stdlib/grpc/src/main/ballerina/src/grpc/annotation.bal", "diffHunk": "@@ -59,7 +59,7 @@ public annotation GrpcResourceConfig ResourceConfig on resource function;\n # + descMap - Service dependent descriptor map, which should be set at the compile time\n public type ServiceDescriptorData record {|\n     string descriptor = \"\";\n-    map<any> descMap = {};\n+    map<anydata> descMap = {};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "399aa1df81e6123697253922092c62d730ef4956"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c3904f5d578e65294f881b7f35320830cafcd74f", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c3904f5d578e65294f881b7f35320830cafcd74f", "committedDate": "2020-06-12T08:57:46Z", "message": "Fix http tests : annotation value restriction"}, "afterCommit": {"oid": "cc4d5f61e72ab4cfaa4d501bd93f68e15eadd191", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cc4d5f61e72ab4cfaa4d501bd93f68e15eadd191", "committedDate": "2020-06-12T11:52:37Z", "message": "Fix http tests : annotation value restriction"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc4d5f61e72ab4cfaa4d501bd93f68e15eadd191", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cc4d5f61e72ab4cfaa4d501bd93f68e15eadd191", "committedDate": "2020-06-12T11:52:37Z", "message": "Fix http tests : annotation value restriction"}, "afterCommit": {"oid": "8d150744fd52caf925bbbee5ad3fd631b408025e", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8d150744fd52caf925bbbee5ad3fd631b408025e", "committedDate": "2020-06-13T04:13:08Z", "message": "Fix http tests : annotation value restriction"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d150744fd52caf925bbbee5ad3fd631b408025e", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8d150744fd52caf925bbbee5ad3fd631b408025e", "committedDate": "2020-06-13T04:13:08Z", "message": "Fix http tests : annotation value restriction"}, "afterCommit": {"oid": "3172e254c474d923d79c621ccee570f60084d544", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3172e254c474d923d79c621ccee570f60084d544", "committedDate": "2020-06-14T09:47:08Z", "message": "Fix http tests : annotation value restriction"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22b0b953065e25f5f681fcb4b31a9c9fc1f2a885", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/22b0b953065e25f5f681fcb4b31a9c9fc1f2a885", "committedDate": "2020-06-14T15:45:22Z", "message": "Test case fixes for AST changes"}, "afterCommit": {"oid": "f0b55bc22d96a317adfd2718f4677a083e1aa862", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f0b55bc22d96a317adfd2718f4677a083e1aa862", "committedDate": "2020-06-14T16:04:06Z", "message": "Fix duplication of functions for immutable types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0b55bc22d96a317adfd2718f4677a083e1aa862", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f0b55bc22d96a317adfd2718f4677a083e1aa862", "committedDate": "2020-06-14T16:04:06Z", "message": "Fix duplication of functions for immutable types"}, "afterCommit": {"oid": "750b4a6f66f048c1fb6310a406b8404976b471f5", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/750b4a6f66f048c1fb6310a406b8404976b471f5", "committedDate": "2020-06-14T17:36:04Z", "message": "Fix duplication of functions for immutable types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "750b4a6f66f048c1fb6310a406b8404976b471f5", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/750b4a6f66f048c1fb6310a406b8404976b471f5", "committedDate": "2020-06-14T17:36:04Z", "message": "Fix duplication of functions for immutable types"}, "afterCommit": {"oid": "426ca093091bb78b978b892c5b6ce8d02353ec59", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/426ca093091bb78b978b892c5b6ce8d02353ec59", "committedDate": "2020-06-15T02:56:20Z", "message": "Fix: websub auth annotation fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMzExMzYz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#pullrequestreview-430311363", "createdAt": "2020-06-15T04:13:01Z", "commit": {"oid": "82a6c99f873cd33594041c39f7325da39f1fd950"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNDoxMzowMVrOGjisHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNDoxMzowMVrOGjisHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkyMTY5Mw==", "bodyText": "@aashikam Would you please check changes on rabbitmq_commons.bal", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r439921693", "createdAt": "2020-06-15T04:13:01Z", "author": {"login": "KRVPerera"}, "path": "stdlib/messaging/rabbitmq/src/main/ballerina/src/rabbitmq/rabbitmq_commons.bal", "diffHunk": "@@ -68,7 +68,7 @@ public type QueueConfiguration record {|\n     boolean durable = false;\n     boolean exclusive = false;\n     boolean autoDelete = true;\n-    map<any>? arguments = ();\n+    map<anydata>? arguments = ();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82a6c99f873cd33594041c39f7325da39f1fd950"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMzE2OTgx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#pullrequestreview-430316981", "createdAt": "2020-06-15T04:37:13Z", "commit": {"oid": "82a6c99f873cd33594041c39f7325da39f1fd950"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMzI0OTY4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#pullrequestreview-430324968", "createdAt": "2020-06-15T05:08:57Z", "commit": {"oid": "b2cb66cc6c86bb605433dc2ecb0f2aeb76b8e272"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNTowODo1N1rOGjjXFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNTowODo1N1rOGjjXFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzMjY5NA==", "bodyText": "Tracking issue: #24131", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r439932694", "createdAt": "2020-06-15T05:08:57Z", "author": {"login": "KRVPerera"}, "path": "language-server/modules/langserver-core/src/test/java/org/ballerinalang/langserver/completion/annotations/AnnotationAttachmentsCompletionTest.java", "diffHunk": "@@ -47,12 +47,12 @@ public void loadAnnotationCache() {\n //                {\"annotationAccessExpression4.json\", \"annotation\"},\n                 {\"annotationAccessExpression5.json\", \"annotation\"},\n                 {\"annotationAccessExpression6.json\", \"annotation\"},\n-                {\"annotationBodyCompletion1.json\", \"annotation\"},\n-                {\"annotationBodyCompletion2.json\", \"annotation\"},\n+//                {\"annotationBodyCompletion1.json\", \"annotation\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cb66cc6c86bb605433dc2ecb0f2aeb76b8e272"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMzI5ODYw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#pullrequestreview-430329860", "createdAt": "2020-06-15T05:26:02Z", "commit": {"oid": "b2cb66cc6c86bb605433dc2ecb0f2aeb76b8e272"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNToyNjowMlrOGjjmVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNTo1NzozMVrOGjkFlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzNjU5Nw==", "bodyText": "Shouldn't we pass (BLangInvocation) expr itself to isCompileTimeAnnotationValue and add a case there to check the return type?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r439936597", "createdAt": "2020-06-15T05:26:02Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/BIRGen.java", "diffHunk": "@@ -608,11 +608,12 @@ public void visit(BLangAnnotationAttachment astAnnotAttach) {\n     }\n \n     private boolean isCompileTimeAnnotationValue(BLangExpression expr) {\n-        // TODO Compile time literal constants\n         switch (expr.getKind()) {\n             case LITERAL:\n             case NUMERIC_LITERAL:\n                 return true;\n+            case INVOCATION:\n+                return isCompileTimeAnnotationValue(((BLangInvocation) expr).expr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cb66cc6c86bb605433dc2ecb0f2aeb76b8e272"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzNzE0Ng==", "bodyText": "Isn't this method only called for constants? What kind of invocations do we get here for? I assume the return type has to be a constant?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r439937146", "createdAt": "2020-06-15T05:28:24Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/BIRGen.java", "diffHunk": "@@ -668,6 +669,8 @@ private BIRAnnotationValue createAnnotationValue(BLangExpression expr) {\n                 return createAnnotationValue(((BLangTypeConversionExpr) expr).expr);\n             case STATEMENT_EXPRESSION:\n                 return createAnnotationRecordValue((BLangStatementExpression) expr);\n+            case INVOCATION:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cb66cc6c86bb605433dc2ecb0f2aeb76b8e272"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzODE4MA==", "bodyText": "Instead, should we do\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (elementType.tag == TypeTags.MAP || elementType.tag == TypeTags.RECORD) {\n          \n          \n            \n                                return types.isAssignable(elementType, symTable.anydataOrReadOnlyMapType);\n          \n          \n            \n                            }\n          \n          \n            \n                            return false;\n          \n          \n            \n                            return isValidAnnotationType(elementType);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r439938180", "createdAt": "2020-06-15T05:32:59Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -1329,17 +1329,15 @@ private boolean isValidAnnotationType(BType type) {\n         }\n \n         switch (type.tag) {\n-            case TypeTags.RECORD:\n-//                BRecordType recordType = (BRecordType) type;\n-//                return recordType.fields.stream().allMatch(field -> types.isAnydata(field.type)) &&\n-//                        (recordType.sealed || types.isAnydata(recordType.restFieldType));\n             case TypeTags.MAP:\n-//                return types.isAnydata(((BMapType) type).constraint);\n-                return true;\n+            case TypeTags.RECORD:\n+                return types.isAssignable(type, symTable.anydataOrReadOnlyMapType);\n             case TypeTags.ARRAY:\n                 BType elementType = ((BArrayType) type).eType;\n-                return (elementType.tag == TypeTags.MAP || elementType.tag == TypeTags.RECORD) &&\n-                        isValidAnnotationType(elementType);\n+                if (elementType.tag == TypeTags.MAP || elementType.tag == TypeTags.RECORD) {\n+                    return types.isAssignable(elementType, symTable.anydataOrReadOnlyMapType);\n+                }\n+                return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cb66cc6c86bb605433dc2ecb0f2aeb76b8e272"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzODQzNQ==", "bodyText": "Here also, I'm not sure if working with ((BLangInvocation) expr).expr is the correct approach.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r439938435", "createdAt": "2020-06-15T05:33:59Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/BIRGen.java", "diffHunk": "@@ -668,6 +669,8 @@ private BIRAnnotationValue createAnnotationValue(BLangExpression expr) {\n                 return createAnnotationValue(((BLangTypeConversionExpr) expr).expr);\n             case STATEMENT_EXPRESSION:\n                 return createAnnotationRecordValue((BLangStatementExpression) expr);\n+            case INVOCATION:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkzNzE0Ng=="}, "originalCommit": {"oid": "b2cb66cc6c86bb605433dc2ecb0f2aeb76b8e272"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk0Mjc5Mw==", "bodyText": "Thinking out loud, as to what approach we should follow by default.\nI think we should make InboundBasicAuthProvider a readonly object instead. Reasons being the type definition will mandate only valid possibly immutable types are allowed for fields, and developers won't introduce non-readonly fields by mistake.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r439942793", "createdAt": "2020-06-15T05:50:50Z", "author": {"login": "MaryamZi"}, "path": "stdlib/auth/src/main/ballerina/src/auth/inbound_basic_auth_provider.bal", "diffHunk": "@@ -36,12 +36,12 @@ public type InboundBasicAuthProvider object {\n \n     *InboundAuthProvider;\n \n-    public BasicAuthConfig basicAuthConfig;\n+    public readonly BasicAuthConfig basicAuthConfig;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cb66cc6c86bb605433dc2ecb0f2aeb76b8e272"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk0NDEzOQ==", "bodyText": "We can assert these also in Ballerina itself, we can maybe change these later.\nSee \n  \n    \n      ballerina-lang/tests/jballerina-unit-test/src/test/resources/test-src/expressions/mappingconstructor/spread_op_field.bal\n    \n    \n         Line 149\n      in\n      02b2ec6\n    \n    \n    \n    \n\n        \n          \n           var fn = function() {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r439944139", "createdAt": "2020-06-15T05:55:53Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/annotations/AnnotationRuntimeTest.java", "diffHunk": "@@ -174,4 +179,25 @@ public void testAnnotAvailabilty() {\n         Assert.assertEquals(mapValue.get(StringUtils.fromString(\"q\")).toString(), \"hello\");\n         Assert.assertEquals(mapValue.get(StringUtils.fromString(\"r\")).toString(), \"world\");\n     }\n+\n+    @Test(expectedExceptions = BLangRuntimeException.class,\n+          expectedExceptionsMessageRegExp = \"^error: \\\\{.*\\\\}InvalidUpdate message=Invalid update \" +\n+                  \"of record field: modification not allowed on readonly value.*\")\n+    public void testRecordTypeAnnotationReadonlyValueEdit() {\n+        BRunUtil.invoke(resultAccessNegative, \"testRecordTypeAnnotationReadonlyValueEdit\");\n+    }\n+\n+    @Test(expectedExceptions = BLangRuntimeException.class,\n+          expectedExceptionsMessageRegExp = \"^error: \\\\{.*\\\\}InvalidUpdate message=Invalid update \" +\n+                  \"of record field: modification not allowed on readonly value.*\")\n+    public void testAnnotationOnObjectTypeReadonlyValueEdit() {\n+        BRunUtil.invoke(resultAccessNegative, \"testAnnotationOnObjectTypeReadonlyValueEdit\");\n+    }\n+\n+    @Test(expectedExceptions = BLangRuntimeException.class,\n+          expectedExceptionsMessageRegExp = \"^error: \\\\{.*\\\\}InvalidUpdate message=Invalid update \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cb66cc6c86bb605433dc2ecb0f2aeb76b8e272"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk0NDU5OA==", "bodyText": "Shall we stick to either T & readonly or readonly & T uniformly?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r439944598", "createdAt": "2020-06-15T05:57:31Z", "author": {"login": "MaryamZi"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/basic_auth_handler.bal", "diffHunk": "@@ -29,7 +29,7 @@ public type BasicAuthHandler object {\n     # Initializes the `BasicAuthHandler` object.\n     #\n     # + authProvider - The `auth:InboundAuthProvider` instance or the `auth:OutboundAuthProvider` instance\n-    public function init(auth:InboundAuthProvider|auth:OutboundAuthProvider authProvider) {\n+    public function init(readonly & (auth:InboundAuthProvider|auth:OutboundAuthProvider) authProvider) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cb66cc6c86bb605433dc2ecb0f2aeb76b8e272"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "53ad0edfd9ecd1b05f6a10ba732308aab511d275", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/53ad0edfd9ecd1b05f6a10ba732308aab511d275", "committedDate": "2020-06-15T06:07:02Z", "message": "Fix BearerAuthHandler readonly annotation"}, "afterCommit": {"oid": "854162b2417e26675b25fa0478f38b5271e6ddce", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/854162b2417e26675b25fa0478f38b5271e6ddce", "committedDate": "2020-06-15T06:54:46Z", "message": "Fix integration test fails"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "854162b2417e26675b25fa0478f38b5271e6ddce", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/854162b2417e26675b25fa0478f38b5271e6ddce", "committedDate": "2020-06-15T06:54:46Z", "message": "Fix integration test fails"}, "afterCommit": {"oid": "705b004050b20538eb2da17913f1a9bc86d866c2", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/705b004050b20538eb2da17913f1a9bc86d866c2", "committedDate": "2020-06-15T06:41:08Z", "message": "Fix Code review suggestions\n\nUniformity for `readonly & T` and `T & readonly`. Chose `readonly & T`.\nRefactor java code logic. Instead of making fields readonly for\nimplementations of abstract objects, whole object is made readonly."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad9cda2ece2c5d0cd096c1e041a088e8225800aa", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ad9cda2ece2c5d0cd096c1e041a088e8225800aa", "committedDate": "2020-06-15T10:11:50Z", "message": "Remove object readonly check for annotation values"}, "afterCommit": {"oid": "79af477e24f54a78260cce8d197d9941b3d99499", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/79af477e24f54a78260cce8d197d9941b3d99499", "committedDate": "2020-06-15T10:56:36Z", "message": "Remove object readonly check for annotation values"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79af477e24f54a78260cce8d197d9941b3d99499", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/79af477e24f54a78260cce8d197d9941b3d99499", "committedDate": "2020-06-15T10:56:36Z", "message": "Remove object readonly check for annotation values"}, "afterCommit": {"oid": "0a3bd2063e923ee6ca4119a43155179e22340025", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0a3bd2063e923ee6ca4119a43155179e22340025", "committedDate": "2020-06-15T11:31:15Z", "message": "Remove object readonly check for annotation values"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a3bd2063e923ee6ca4119a43155179e22340025", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0a3bd2063e923ee6ca4119a43155179e22340025", "committedDate": "2020-06-15T11:31:15Z", "message": "Remove object readonly check for annotation values"}, "afterCommit": {"oid": "c5a06c202122cd9c40d2df9bf896cc6bfb166df0", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c5a06c202122cd9c40d2df9bf896cc6bfb166df0", "committedDate": "2020-06-15T15:50:49Z", "message": "Remove object readonly check for annotation values"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9300fa83c877ed51011073b4d4a06bcc71dd593", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c9300fa83c877ed51011073b4d4a06bcc71dd593", "committedDate": "2020-06-15T16:52:52Z", "message": "Test case fixes"}, "afterCommit": {"oid": "af10c7462af8001a90a9dfdc0abf90fd1d8c651b", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/af10c7462af8001a90a9dfdc0abf90fd1d8c651b", "committedDate": "2020-06-15T18:44:56Z", "message": "Test case fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwOTYwMDk2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#pullrequestreview-430960096", "createdAt": "2020-06-15T20:14:18Z", "commit": {"oid": "09ea9c1667a463ec95ef6588a4462827e61c6743"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDoxNDoxOFrOGkBKMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDoxNDoxOFrOGkBKMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMDkxNA==", "bodyText": "We don't need to add readonly for anydata fields right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r440420914", "createdAt": "2020-06-15T20:14:18Z", "author": {"login": "MaryamZi"}, "path": "stdlib/http/src/main/ballerina/src/http/annotation.bal", "diffHunk": "@@ -137,9 +137,9 @@ public type WebSocketUpgradeConfig record {|\n # be successfully authorized. An array consisting of arrays is used to indicate that at least one scope from the sub-arrays \n # should be successfully authorized.\n public type ServiceAuth record {|\n-    boolean enabled = true;\n-    InboundAuthHandlers authHandlers?;\n-    Scopes scopes?;\n+    readonly boolean enabled = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09ea9c1667a463ec95ef6588a4462827e61c6743"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f7b9738d0ab62dbd15ec2c079412cdb04f5699e6", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f7b9738d0ab62dbd15ec2c079412cdb04f5699e6", "committedDate": "2020-06-16T02:56:32Z", "message": "Remove readonly for ServiceAuth and ResourceAuth"}, "afterCommit": {"oid": "c8b5d57010c43161a0d32f4cac0ab4fd0485b374", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c8b5d57010c43161a0d32f4cac0ab4fd0485b374", "committedDate": "2020-06-16T03:29:41Z", "message": "Fix newly added testcases for correct AST"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c8b5d57010c43161a0d32f4cac0ab4fd0485b374", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c8b5d57010c43161a0d32f4cac0ab4fd0485b374", "committedDate": "2020-06-16T03:29:41Z", "message": "Fix newly added testcases for correct AST"}, "afterCommit": {"oid": "184e8887b8b035991aa84750ec3a9e123bac78be", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/184e8887b8b035991aa84750ec3a9e123bac78be", "committedDate": "2020-06-16T03:50:52Z", "message": "Fix newly added testcases for correct AST"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMTQxNzM5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#pullrequestreview-431141739", "createdAt": "2020-06-16T03:53:54Z", "commit": {"oid": "184e8887b8b035991aa84750ec3a9e123bac78be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMzo1Mzo1NFrOGkKVkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMzo1Mzo1NFrOGkKVkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU3MTI4MA==", "bodyText": "Updated new test cases. Need a helper function later to get the exact expression value.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r440571280", "createdAt": "2020-06-16T03:53:54Z", "author": {"login": "KRVPerera"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/annotations/IconAnnotationTest.java", "diffHunk": "@@ -51,19 +55,22 @@ public void setup() {\n     public void testIconOnFunction() {\n         BLangFunction fooFunction = (BLangFunction) ((List) ((BLangPackage) result.getAST()).functions).get(0);\n         BLangAnnotationAttachment annot = (BLangAnnotationAttachment) ((List) fooFunction.annAttachments).get(0);\n-        Assert.assertEquals(annot.expr.toString(), \" {path: /fooIconPath.icon}\");\n+        Assert.assertEquals(getActualExpressionFromAnnotationAttachmentExpr(annot.expr).toString(), \" {path: \" +\n+                \"/fooIconPath.icon}\");\n     }\n \n     @Test\n     public void testIconOnObjectAndMemberFunction() {\n         TypeDefinition objType = result.getAST().getTypeDefinitions().get(0);\n         List<? extends AnnotationAttachmentNode> objAnnot = objType.getAnnotationAttachments();\n         Assert.assertEquals(objAnnot.size(), 1);\n-        Assert.assertEquals(objAnnot.get(0).getExpression().toString(), \" {path: /barIconPath.icon}\");\n+        Assert.assertEquals(objAnnot.get(0).getExpression().toString(), \" {path: /barIconPath.icon}.cloneReadOnly()\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "184e8887b8b035991aa84750ec3a9e123bac78be"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMTY2NDAz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#pullrequestreview-431166403", "createdAt": "2020-06-16T05:18:56Z", "commit": {"oid": "184e8887b8b035991aa84750ec3a9e123bac78be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNToxODo1NlrOGkLlUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNToxODo1NlrOGkLlUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU5MTY5OA==", "bodyText": "Shall we create an issue to track fixing std lib deviations and add back the object validation to annotations?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r440591698", "createdAt": "2020-06-16T05:18:56Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -1360,22 +1363,81 @@ private boolean isValidAnnotationType(BType type) {\n         }\n \n         switch (type.tag) {\n+            case TypeTags.MAP:\n+                BType constraintType = ((BMapType) type).constraint;\n+                return isAnyDataOrReadOnlyTypeSkippingObjectType(constraintType);\n             case TypeTags.RECORD:\n-//                BRecordType recordType = (BRecordType) type;\n-//                return recordType.fields.stream().allMatch(field -> types.isAnydata(field.type)) &&\n-//                        (recordType.sealed || types.isAnydata(recordType.restFieldType));\n+                BRecordType recordType = (BRecordType) type;\n+                for (BField field : recordType.fields.values()) {\n+                    if (!isAnyDataOrReadOnlyTypeSkippingObjectType(field.type)) {\n+                        return false;\n+                    }\n+                }\n+\n+                BType recordRestType = recordType.restFieldType;\n+                if (recordRestType == null || recordRestType == symTable.noType) {\n+                    return true;\n+                }\n+\n+                return isAnyDataOrReadOnlyTypeSkippingObjectType(recordRestType);\n+            case TypeTags.ARRAY:\n+                return isValidAnnotationType(((BArrayType) type).eType);\n+        }\n+\n+        return types.isAssignable(type, symTable.trueType);\n+    }\n+\n+    private boolean isAnyDataOrReadOnlyTypeSkippingObjectType(BType type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "184e8887b8b035991aa84750ec3a9e123bac78be"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMTcwNTY1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#pullrequestreview-431170565", "createdAt": "2020-06-16T05:30:58Z", "commit": {"oid": "184e8887b8b035991aa84750ec3a9e123bac78be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNTozMDo1OFrOGkLyeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNTozMDo1OFrOGkLyeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU5NTA2NQ==", "bodyText": "We need to keep the part of the original check where we first check if the member type is a map or a record (https://github.com/ballerina-platform/ballerina-lang/blob/master/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java#L1372) or we will be allowing an array of true also.\nWe should ideally have a negative test for the same.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r440595065", "createdAt": "2020-06-16T05:30:58Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -1360,22 +1363,81 @@ private boolean isValidAnnotationType(BType type) {\n         }\n \n         switch (type.tag) {\n+            case TypeTags.MAP:\n+                BType constraintType = ((BMapType) type).constraint;\n+                return isAnyDataOrReadOnlyTypeSkippingObjectType(constraintType);\n             case TypeTags.RECORD:\n-//                BRecordType recordType = (BRecordType) type;\n-//                return recordType.fields.stream().allMatch(field -> types.isAnydata(field.type)) &&\n-//                        (recordType.sealed || types.isAnydata(recordType.restFieldType));\n+                BRecordType recordType = (BRecordType) type;\n+                for (BField field : recordType.fields.values()) {\n+                    if (!isAnyDataOrReadOnlyTypeSkippingObjectType(field.type)) {\n+                        return false;\n+                    }\n+                }\n+\n+                BType recordRestType = recordType.restFieldType;\n+                if (recordRestType == null || recordRestType == symTable.noType) {\n+                    return true;\n+                }\n+\n+                return isAnyDataOrReadOnlyTypeSkippingObjectType(recordRestType);\n+            case TypeTags.ARRAY:\n+                return isValidAnnotationType(((BArrayType) type).eType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "184e8887b8b035991aa84750ec3a9e123bac78be"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d31fb64b78458d94895d4c1fdbb91c53688f09d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0d31fb64b78458d94895d4c1fdbb91c53688f09d", "committedDate": "2020-06-16T07:35:09Z", "message": "Fix a bug accepting `true[]` for annotation value"}, "afterCommit": {"oid": "16a41d82c30fd64105903b056ed10c1d62434c29", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/16a41d82c30fd64105903b056ed10c1d62434c29", "committedDate": "2020-06-16T11:37:45Z", "message": "Support `cloneReadOnly` for immutable types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "16a41d82c30fd64105903b056ed10c1d62434c29", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/16a41d82c30fd64105903b056ed10c1d62434c29", "committedDate": "2020-06-16T11:37:45Z", "message": "Support `cloneReadOnly` for immutable types"}, "afterCommit": {"oid": "e0d6967295f62ef5a1b80d8a1c797943151e382a", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e0d6967295f62ef5a1b80d8a1c797943151e382a", "committedDate": "2020-06-16T15:11:02Z", "message": "Support `cloneReadOnly` for immutable types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8b77ebf8a7e32ddf4ef9ba97739e7b3085d231b", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d8b77ebf8a7e32ddf4ef9ba97739e7b3085d231b", "committedDate": "2020-06-16T17:03:09Z", "message": "Fix http annotation.bal as service is readonly"}, "afterCommit": {"oid": "0dc82d1147bdb7efb4b38756b63956ed56aeef67", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0dc82d1147bdb7efb4b38756b63956ed56aeef67", "committedDate": "2020-06-16T18:31:53Z", "message": "Remove object readonly check for annotation values"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0dc82d1147bdb7efb4b38756b63956ed56aeef67", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0dc82d1147bdb7efb4b38756b63956ed56aeef67", "committedDate": "2020-06-16T18:31:53Z", "message": "Remove object readonly check for annotation values"}, "afterCommit": {"oid": "10fa6d107bec695d3e004c0966ebd0ba350adf0e", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/10fa6d107bec695d3e004c0966ebd0ba350adf0e", "committedDate": "2020-06-16T20:28:41Z", "message": "Remove object readonly check for annotation values"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3941fa475593af90c13ffdfa4de4c4b155abe4d", "author": {"user": {"login": "sameerajayasoma", "name": "Sameera Jayasoma"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d3941fa475593af90c13ffdfa4de4c4b155abe4d", "committedDate": "2020-06-16T20:34:05Z", "message": "Update DefinitionTest.java\n\nCommented out test cases that fail on windows. We need to investigate this separately"}, "afterCommit": {"oid": "41858aeb1766c597a149e7af2ca6bf855e19fd7a", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/41858aeb1766c597a149e7af2ca6bf855e19fd7a", "committedDate": "2020-06-16T22:30:14Z", "message": "Remove object readonly check for annotation values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57d457d1bd5efa90e71fd82587d94b1de085e37d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/57d457d1bd5efa90e71fd82587d94b1de085e37d", "committedDate": "2020-06-17T04:06:58Z", "message": "Restrict annotation value type\n\nAnnotation value is restricted to true, map<anydata|readonly> or\nmap<anydata|readonly>[] value. Changes will also make sure that\nannotation value is a read only clone of the given value. Therefore user\n cannot change annotation value via annotation access."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b43010f157e27d52278fac3d54f68efe7456923b", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b43010f157e27d52278fac3d54f68efe7456923b", "committedDate": "2020-06-17T04:06:58Z", "message": "Fix grpc tests for annotation value restriction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3a2b4d382fd5b2134f7194f03a74a8176fda357", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c3a2b4d382fd5b2134f7194f03a74a8176fda357", "committedDate": "2020-06-17T04:06:58Z", "message": "Fix rabbitmq tests : annotation value restriction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc0845bfbaedf1ed558042a5f2e1a9137e39138d", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dc0845bfbaedf1ed558042a5f2e1a9137e39138d", "committedDate": "2020-06-17T04:06:58Z", "message": "Disable language completion tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a77cbf6b8cc09cfb33ffa53ecff3f26755a8883a", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a77cbf6b8cc09cfb33ffa53ecff3f26755a8883a", "committedDate": "2020-06-17T04:06:59Z", "message": "Fix Code review suggestions\n\nUniformity for `readonly & T` and `T & readonly`. Chose `readonly & T`.\nRefactor java code logic. Instead of making fields readonly for\nimplementations of abstract objects, whole object is made readonly."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bc0ad817db762a9e64ae2f52dfd1c14d85c978f", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9bc0ad817db762a9e64ae2f52dfd1c14d85c978f", "committedDate": "2020-06-17T04:06:59Z", "message": "Fix newly added testcases for correct AST"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dac5286854caca942469043f652ee6fbc47540bf", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dac5286854caca942469043f652ee6fbc47540bf", "committedDate": "2020-06-17T04:06:59Z", "message": "Restrict annotation only for cloneReadOnly wrap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e8b157b525f161da46846e49a3dc873b6257600", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3e8b157b525f161da46846e49a3dc873b6257600", "committedDate": "2020-06-17T04:06:59Z", "message": "Fix a bug accepting `true[]` for annotation value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93e74cabe1d4eedcbd7c76612793e285fa1e1b89", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/93e74cabe1d4eedcbd7c76612793e285fa1e1b89", "committedDate": "2020-06-17T04:06:59Z", "message": "Support `cloneReadOnly` for immutable types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5342dcdc002525b51852ed31769b91ecfe2aa658", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5342dcdc002525b51852ed31769b91ecfe2aa658", "committedDate": "2020-06-17T04:06:59Z", "message": "Remove object readonly check for annotation values"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3751e7528bdc752c5d28e45c4a964df07d1423e7", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3751e7528bdc752c5d28e45c4a964df07d1423e7", "committedDate": "2020-06-17T04:05:25Z", "message": "Merge branch 'master' into krv_annotation_value_restriction"}, "afterCommit": {"oid": "5342dcdc002525b51852ed31769b91ecfe2aa658", "author": {"user": {"login": "KRVPerera", "name": "Rukshan Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5342dcdc002525b51852ed31769b91ecfe2aa658", "committedDate": "2020-06-17T04:06:59Z", "message": "Remove object readonly check for annotation values"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDY2Mjkx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#pullrequestreview-432066291", "createdAt": "2020-06-17T05:22:35Z", "commit": {"oid": "5342dcdc002525b51852ed31769b91ecfe2aa658"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNToyMjozNVrOGk2BXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNToyNjoyMlrOGk2FfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI4NzAwNQ==", "bodyText": "Please create an issue to track verifying these changes with @irshadnilam's changes.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r441287005", "createdAt": "2020-06-17T05:22:35Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/TypedescValueImpl.java", "diffHunk": "@@ -107,6 +107,11 @@ public Object copy(Map<Object, Object> refs) {\n         return this;\n     }\n \n+    @Override\n+    public void freezeDirect() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5342dcdc002525b51852ed31769b91ecfe2aa658"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI4Nzc0NQ==", "bodyText": "Please create an issue for this too?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r441287745", "createdAt": "2020-06-17T05:25:11Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/annotations/AnnotationRuntimeTest.java", "diffHunk": "@@ -174,4 +179,25 @@ public void testAnnotAvailabilty() {\n         Assert.assertEquals(mapValue.get(StringUtils.fromString(\"q\")).toString(), \"hello\");\n         Assert.assertEquals(mapValue.get(StringUtils.fromString(\"r\")).toString(), \"world\");\n     }\n+\n+    @Test(expectedExceptions = BLangRuntimeException.class,\n+          expectedExceptionsMessageRegExp = \"^error: \\\\{.*\\\\}InvalidUpdate message=Invalid update \" +\n+                  \"of record field: modification not allowed on readonly value.*\")\n+    public void testRecordTypeAnnotationReadonlyValueEdit() {\n+        BRunUtil.invoke(resultAccessNegative, \"testRecordTypeAnnotationReadonlyValueEdit\");\n+    }\n+\n+    @Test(expectedExceptions = BLangRuntimeException.class,\n+          expectedExceptionsMessageRegExp = \"^error: \\\\{.*\\\\}InvalidUpdate message=Invalid update \" +\n+                  \"of record field: modification not allowed on readonly value.*\")\n+    public void testAnnotationOnObjectTypeReadonlyValueEdit() {\n+        BRunUtil.invoke(resultAccessNegative, \"testAnnotationOnObjectTypeReadonlyValueEdit\");\n+    }\n+\n+    @Test(expectedExceptions = BLangRuntimeException.class,\n+          expectedExceptionsMessageRegExp = \"^error: \\\\{.*\\\\}InvalidUpdate message=Invalid update \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk0NDEzOQ=="}, "originalCommit": {"oid": "b2cb66cc6c86bb605433dc2ecb0f2aeb76b8e272"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI4ODA2MQ==", "bodyText": "Can go on one line.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#discussion_r441288061", "createdAt": "2020-06-17T05:26:22Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/annotations/AnnotationRuntimeTest.java", "diffHunk": "@@ -66,6 +68,9 @@ public void setup() {\n \n         resultFour = BCompileUtil.compile(\"test-src/annotations/annot_availability.bal\");\n         Assert.assertEquals(resultFour.getErrorCount(), 0);\n+\n+        resultAccessNegative = BCompileUtil.compile(\"test-src/annotations/annotation_access_negative\" +\n+                                                                          \".bal\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5342dcdc002525b51852ed31769b91ecfe2aa658"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDY3NzA3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#pullrequestreview-432067707", "createdAt": "2020-06-17T05:26:45Z", "commit": {"oid": "5342dcdc002525b51852ed31769b91ecfe2aa658"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDY4MjYy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23473#pullrequestreview-432068262", "createdAt": "2020-06-17T05:28:21Z", "commit": {"oid": "5342dcdc002525b51852ed31769b91ecfe2aa658"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4539, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}