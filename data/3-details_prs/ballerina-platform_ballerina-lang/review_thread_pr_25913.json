{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MDc3NDk3", "number": 25913, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNToyMzo0MFrOEk0h1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNTozMzoxNlrOEk0o_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDQ0ODIxOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-tool/src/main/java/org/ballerinalang/tool/util/CompileResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNToyMzo0MFrOHT-gRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNToyMzo0MFrOHT-gRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcwOTA2MA==", "bodyText": "Do we need to use the fully qualified class name?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490709060", "createdAt": "2020-09-18T05:23:40Z", "author": {"login": "SupunS"}, "path": "cli/ballerina-tool/src/main/java/org/ballerinalang/tool/util/CompileResult.java", "diffHunk": "@@ -16,42 +16,58 @@\n  */\n package org.ballerinalang.tool.util;\n \n+import io.ballerina.tools.diagnostics.Diagnostic;\n import org.ballerinalang.model.tree.PackageNode;\n-import org.ballerinalang.util.diagnostic.Diagnostic;\n-import org.ballerinalang.util.diagnostic.DiagnosticListener;\n+import org.wso2.ballerinalang.compiler.PackageCache;\n+import org.wso2.ballerinalang.compiler.diagnostic.DiagnosticComparator;\n+import org.wso2.ballerinalang.compiler.semantics.model.symbols.BPackageSymbol;\n+import org.wso2.ballerinalang.compiler.tree.BLangImportPackage;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.util.CompilerContext;\n \n-import java.util.ArrayList;\n import java.util.Collections;\n-import java.util.Comparator;\n import java.util.List;\n \n /**\n  * Represents the result of a ballerina file compilation.\n- * \n+ *\n  * @since 0.94\n  */\n public class CompileResult {\n \n     private PackageNode pkgNode;\n-    private CompileResultDiagnosticListener diagnosticListener;\n-\n-    public CompileResult(CompileResultDiagnosticListener diagnosticListener) {\n-        this.diagnosticListener = diagnosticListener;\n+    private CompilerContext context;\n+    private Diagnostic[] diagnostics = null;\n+    private int errorCount = 0;\n+    private int warnCount = 0;\n+\n+    public CompileResult(CompilerContext context, BLangPackage packageNode) {\n+        this.pkgNode = packageNode;\n+        this.context = context;\n     }\n \n-    public Diagnostic[] getDiagnostics() {\n-        List<Diagnostic> diagnostics = this.diagnosticListener.getDiagnostics();\n-        diagnostics.sort(Comparator.comparing((Diagnostic d) -> d.getSource().getCompilationUnitName()).\n-                thenComparingInt(d -> d.getPosition().getStartLine()));\n-        return diagnostics.toArray(new Diagnostic[diagnostics.size()]);\n+    public io.ballerina.tools.diagnostics.Diagnostic[] getDiagnostics() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa1c150473bc2afc1dc7fae9694a9cd836cdd2b4"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDQ1MjQ3OnYy", "diffSide": "RIGHT", "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNToyNTo1NVrOHT-imw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNToyNTo1NVrOHT-imw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcwOTY1OQ==", "bodyText": "Can remove these", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490709659", "createdAt": "2020-09-18T05:25:55Z", "author": {"login": "SupunS"}, "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "diffHunk": "@@ -111,8 +113,8 @@ private static void genBalo(String targetDir, String sourceRootDir, boolean repo\n         Files.createDirectories(Paths.get(targetDir));\n \n         CompilerContext context = new CompilerContext();\n-        CompileResult.CompileResultDiagnosticListener diagListner = new CompileResult.CompileResultDiagnosticListener();\n-        context.put(DiagnosticListener.class, diagListner);\n+//        CompileResult.CompileResultDiagnosticListener diagListner = new CompileResult.CompileResultDiagnosticListener();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa1c150473bc2afc1dc7fae9694a9cd836cdd2b4"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDQ1NDk4OnYy", "diffSide": "RIGHT", "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNToyNzoxMFrOHT-j-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNTo1Mzo1OFrOHT_CLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxMDAxMQ==", "bodyText": "We shouldn't print the diags here. Since we are already printing them at the Compiler class, this will result in duplicate errors", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490710011", "createdAt": "2020-09-18T05:27:10Z", "author": {"login": "SupunS"}, "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "diffHunk": "@@ -159,23 +168,23 @@ private static void genApiDoc(String sourceRootDir, Set<String> docModuleFilter,\n         BallerinaDocGenerator.writeAPIDocsForModules(moduleDocMap, apiDocPath, false);\n     }\n \n-    private static void printErrors(boolean reportWarnings, CompileResult.CompileResultDiagnosticListener diagListner,\n+    private static void printErrors(boolean reportWarnings,\n                                     List<Diagnostic> diagnostics, boolean logIsolationWarnings) {\n         int deprecatedWarnCount = 0;\n-        if (reportWarnings && diagListner.getWarnCount() > 0) {\n-            for (Diagnostic diagnostic : diagListner.getDiagnostics()) {\n-                DiagnosticCode code = diagnostic.getCode();\n+        if (reportWarnings && warnCount > 0) {\n+            for (Diagnostic diagnostic : diagnostics) {\n+                DiagnosticCode code = ((BLangDiagnostic) diagnostic).getCode();\n                 if (code == USAGE_OF_DEPRECATED_CONSTRUCT || (!logIsolationWarnings && isIsolatedWarningLog(code))) {\n                     deprecatedWarnCount++;\n                 }\n             }\n         }\n-        if (diagListner.getErrorCount() > 0 ||\n-                (reportWarnings && (diagListner.getWarnCount() - deprecatedWarnCount) > 0)) {\n+        if (errorCount > 0 ||\n+                (reportWarnings && (warnCount - deprecatedWarnCount) > 0)) {\n             StringJoiner sj = new StringJoiner(\"\\n  \");\n             diagnostics.forEach(e -> sj.add(e.toString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa1c150473bc2afc1dc7fae9694a9cd836cdd2b4"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNDY5NQ==", "bodyText": "So, are we removing L185 ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490714695", "createdAt": "2020-09-18T05:43:08Z", "author": {"login": "dulajdilshan"}, "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "diffHunk": "@@ -159,23 +168,23 @@ private static void genApiDoc(String sourceRootDir, Set<String> docModuleFilter,\n         BallerinaDocGenerator.writeAPIDocsForModules(moduleDocMap, apiDocPath, false);\n     }\n \n-    private static void printErrors(boolean reportWarnings, CompileResult.CompileResultDiagnosticListener diagListner,\n+    private static void printErrors(boolean reportWarnings,\n                                     List<Diagnostic> diagnostics, boolean logIsolationWarnings) {\n         int deprecatedWarnCount = 0;\n-        if (reportWarnings && diagListner.getWarnCount() > 0) {\n-            for (Diagnostic diagnostic : diagListner.getDiagnostics()) {\n-                DiagnosticCode code = diagnostic.getCode();\n+        if (reportWarnings && warnCount > 0) {\n+            for (Diagnostic diagnostic : diagnostics) {\n+                DiagnosticCode code = ((BLangDiagnostic) diagnostic).getCode();\n                 if (code == USAGE_OF_DEPRECATED_CONSTRUCT || (!logIsolationWarnings && isIsolatedWarningLog(code))) {\n                     deprecatedWarnCount++;\n                 }\n             }\n         }\n-        if (diagListner.getErrorCount() > 0 ||\n-                (reportWarnings && (diagListner.getWarnCount() - deprecatedWarnCount) > 0)) {\n+        if (errorCount > 0 ||\n+                (reportWarnings && (warnCount - deprecatedWarnCount) > 0)) {\n             StringJoiner sj = new StringJoiner(\"\\n  \");\n             diagnostics.forEach(e -> sj.add(e.toString()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxMDAxMQ=="}, "originalCommit": {"oid": "fa1c150473bc2afc1dc7fae9694a9cd836cdd2b4"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNjgwNA==", "bodyText": "yes, we can remove that.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490716804", "createdAt": "2020-09-18T05:50:46Z", "author": {"login": "SupunS"}, "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "diffHunk": "@@ -159,23 +168,23 @@ private static void genApiDoc(String sourceRootDir, Set<String> docModuleFilter,\n         BallerinaDocGenerator.writeAPIDocsForModules(moduleDocMap, apiDocPath, false);\n     }\n \n-    private static void printErrors(boolean reportWarnings, CompileResult.CompileResultDiagnosticListener diagListner,\n+    private static void printErrors(boolean reportWarnings,\n                                     List<Diagnostic> diagnostics, boolean logIsolationWarnings) {\n         int deprecatedWarnCount = 0;\n-        if (reportWarnings && diagListner.getWarnCount() > 0) {\n-            for (Diagnostic diagnostic : diagListner.getDiagnostics()) {\n-                DiagnosticCode code = diagnostic.getCode();\n+        if (reportWarnings && warnCount > 0) {\n+            for (Diagnostic diagnostic : diagnostics) {\n+                DiagnosticCode code = ((BLangDiagnostic) diagnostic).getCode();\n                 if (code == USAGE_OF_DEPRECATED_CONSTRUCT || (!logIsolationWarnings && isIsolatedWarningLog(code))) {\n                     deprecatedWarnCount++;\n                 }\n             }\n         }\n-        if (diagListner.getErrorCount() > 0 ||\n-                (reportWarnings && (diagListner.getWarnCount() - deprecatedWarnCount) > 0)) {\n+        if (errorCount > 0 ||\n+                (reportWarnings && (warnCount - deprecatedWarnCount) > 0)) {\n             StringJoiner sj = new StringJoiner(\"\\n  \");\n             diagnostics.forEach(e -> sj.add(e.toString()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxMDAxMQ=="}, "originalCommit": {"oid": "fa1c150473bc2afc1dc7fae9694a9cd836cdd2b4"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNzc0Mg==", "bodyText": "okay", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490717742", "createdAt": "2020-09-18T05:53:58Z", "author": {"login": "dulajdilshan"}, "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "diffHunk": "@@ -159,23 +168,23 @@ private static void genApiDoc(String sourceRootDir, Set<String> docModuleFilter,\n         BallerinaDocGenerator.writeAPIDocsForModules(moduleDocMap, apiDocPath, false);\n     }\n \n-    private static void printErrors(boolean reportWarnings, CompileResult.CompileResultDiagnosticListener diagListner,\n+    private static void printErrors(boolean reportWarnings,\n                                     List<Diagnostic> diagnostics, boolean logIsolationWarnings) {\n         int deprecatedWarnCount = 0;\n-        if (reportWarnings && diagListner.getWarnCount() > 0) {\n-            for (Diagnostic diagnostic : diagListner.getDiagnostics()) {\n-                DiagnosticCode code = diagnostic.getCode();\n+        if (reportWarnings && warnCount > 0) {\n+            for (Diagnostic diagnostic : diagnostics) {\n+                DiagnosticCode code = ((BLangDiagnostic) diagnostic).getCode();\n                 if (code == USAGE_OF_DEPRECATED_CONSTRUCT || (!logIsolationWarnings && isIsolatedWarningLog(code))) {\n                     deprecatedWarnCount++;\n                 }\n             }\n         }\n-        if (diagListner.getErrorCount() > 0 ||\n-                (reportWarnings && (diagListner.getWarnCount() - deprecatedWarnCount) > 0)) {\n+        if (errorCount > 0 ||\n+                (reportWarnings && (warnCount - deprecatedWarnCount) > 0)) {\n             StringJoiner sj = new StringJoiner(\"\\n  \");\n             diagnostics.forEach(e -> sj.add(e.toString()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxMDAxMQ=="}, "originalCommit": {"oid": "fa1c150473bc2afc1dc7fae9694a9cd836cdd2b4"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDQ2MTc2OnYy", "diffSide": "RIGHT", "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNTozMDozNVrOHT-n3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNTozMDozNVrOHT-n3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxMTAwNg==", "bodyText": "This can result in a class-cast exception.\neg: syntax errors are not BLangDiagnostics. For anything other than BLangDiagnostic, we can simply skip", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490711006", "createdAt": "2020-09-18T05:30:35Z", "author": {"login": "SupunS"}, "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "diffHunk": "@@ -159,23 +168,23 @@ private static void genApiDoc(String sourceRootDir, Set<String> docModuleFilter,\n         BallerinaDocGenerator.writeAPIDocsForModules(moduleDocMap, apiDocPath, false);\n     }\n \n-    private static void printErrors(boolean reportWarnings, CompileResult.CompileResultDiagnosticListener diagListner,\n+    private static void printErrors(boolean reportWarnings,\n                                     List<Diagnostic> diagnostics, boolean logIsolationWarnings) {\n         int deprecatedWarnCount = 0;\n-        if (reportWarnings && diagListner.getWarnCount() > 0) {\n-            for (Diagnostic diagnostic : diagListner.getDiagnostics()) {\n-                DiagnosticCode code = diagnostic.getCode();\n+        if (reportWarnings && warnCount > 0) {\n+            for (Diagnostic diagnostic : diagnostics) {\n+                DiagnosticCode code = ((BLangDiagnostic) diagnostic).getCode();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5d9eaa57e3a5eb91f2cf6fb27c0681c680cbc8b"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MDQ2NjUzOnYy", "diffSide": "RIGHT", "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNTozMzoxNlrOHT-qsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNTozMzoxNlrOHT-qsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxMTczMQ==", "bodyText": "code can be null. That would result in a NPE inside the isIsolatedWarningLog() method", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25913#discussion_r490711731", "createdAt": "2020-09-18T05:33:16Z", "author": {"login": "SupunS"}, "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "diffHunk": "@@ -159,23 +168,23 @@ private static void genApiDoc(String sourceRootDir, Set<String> docModuleFilter,\n         BallerinaDocGenerator.writeAPIDocsForModules(moduleDocMap, apiDocPath, false);\n     }\n \n-    private static void printErrors(boolean reportWarnings, CompileResult.CompileResultDiagnosticListener diagListner,\n+    private static void printErrors(boolean reportWarnings,\n                                     List<Diagnostic> diagnostics, boolean logIsolationWarnings) {\n         int deprecatedWarnCount = 0;\n-        if (reportWarnings && diagListner.getWarnCount() > 0) {\n-            for (Diagnostic diagnostic : diagListner.getDiagnostics()) {\n-                DiagnosticCode code = diagnostic.getCode();\n+        if (reportWarnings && warnCount > 0) {\n+            for (Diagnostic diagnostic : diagnostics) {\n+                DiagnosticCode code = ((BLangDiagnostic) diagnostic).getCode();\n                 if (code == USAGE_OF_DEPRECATED_CONSTRUCT || (!logIsolationWarnings && isIsolatedWarningLog(code))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5d9eaa57e3a5eb91f2cf6fb27c0681c680cbc8b"}, "originalPosition": 83}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4972, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}