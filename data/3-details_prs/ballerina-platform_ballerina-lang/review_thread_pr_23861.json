{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMDMwMzc4", "number": 23861, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDowNzoyMVrOEEIhEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzozMjo0MlrOEELJ7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzY5Mjk3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/RetryTransactionNode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDowNzoyMVrOGhkIaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDowNzoyMVrOGhkIaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg0ODE2OQ==", "bodyText": "Let's fix the license year.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23861#discussion_r437848169", "createdAt": "2020-06-10T04:07:21Z", "author": {"login": "mohanvive"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/RetryTransactionNode.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94426daa0f58ebf06bfb6288bd7cfe4e12d158c5"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzY5NDMzOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/expressions/CommitExpressionNode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDowODoxMVrOGhkJNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDowODoxMVrOGhkJNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg0ODM3NA==", "bodyText": "Need to fix the since annotation.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23861#discussion_r437848374", "createdAt": "2020-06-10T04:08:11Z", "author": {"login": "mohanvive"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/expressions/CommitExpressionNode.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.model.tree.expressions;\n+\n+import org.ballerinalang.model.tree.ActionNode;\n+\n+/**\n+ * This represents the commit expression node.\n+ *\n+ * @since 0.985", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94426daa0f58ebf06bfb6288bd7cfe4e12d158c5"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzcxNzg1OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/ClosureExpressionVisitor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDoyMzozMlrOGhkXVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNTo0NTowOVrOGhlpaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1MTk4OQ==", "bodyText": "I think, we could remove this class. I have initially, moved it separately because I thought we could reuse below functionality for both transaction and query desugar purposes.  But, we no longer need this for transactions. Isn't it ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23861#discussion_r437851989", "createdAt": "2020-06-10T04:23:32Z", "author": {"login": "mohanvive"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/ClosureExpressionVisitor.java", "diffHunk": "@@ -0,0 +1,783 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94426daa0f58ebf06bfb6288bd7cfe4e12d158c5"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg3MzAwMQ==", "bodyText": "But there is a usage in transaction desugar. i will check whether we need it or not", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23861#discussion_r437873001", "createdAt": "2020-06-10T05:45:09Z", "author": {"login": "gimantha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/ClosureExpressionVisitor.java", "diffHunk": "@@ -0,0 +1,783 @@\n+/*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1MTk4OQ=="}, "originalCommit": {"oid": "94426daa0f58ebf06bfb6288bd7cfe4e12d158c5"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzcyNDIyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDoyNzo0M1rOGhkbOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNTo0MjowNlrOGhlmJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1Mjk4NQ==", "bodyText": "Shall we move transaction related code to TransactionDesugar ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23861#discussion_r437852985", "createdAt": "2020-06-10T04:27:43Z", "author": {"login": "mohanvive"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -2548,15 +2356,166 @@ private boolean isIgnoredErrorRefRestVar(BLangErrorVarRef parentErrorVarRef) {\n     }\n \n     @Override\n-    public void visit(BLangAbort abortNode) {\n-        BLangReturn returnStmt = ASTBuilderUtil.createReturnStmt(abortNode.pos, symTable.intType, -1L);\n-        result = rewrite(returnStmt, env);\n+    public void visit(BLangRetry retryNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94426daa0f58ebf06bfb6288bd7cfe4e12d158c5"}, "originalPosition": 365}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg3MjE2NQ==", "bodyText": "is this really transaction related?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23861#discussion_r437872165", "createdAt": "2020-06-10T05:42:06Z", "author": {"login": "gimantha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -2548,15 +2356,166 @@ private boolean isIgnoredErrorRefRestVar(BLangErrorVarRef parentErrorVarRef) {\n     }\n \n     @Override\n-    public void visit(BLangAbort abortNode) {\n-        BLangReturn returnStmt = ASTBuilderUtil.createReturnStmt(abortNode.pos, symTable.intType, -1L);\n-        result = rewrite(returnStmt, env);\n+    public void visit(BLangRetry retryNode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1Mjk4NQ=="}, "originalCommit": {"oid": "94426daa0f58ebf06bfb6288bd7cfe4e12d158c5"}, "originalPosition": 365}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzcyNzE3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDoyOTo1M1rOGhkdMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDoyOTo1M1rOGhkdMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1MzQ4OA==", "bodyText": "Let's remove the commented code.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23861#discussion_r437853488", "createdAt": "2020-06-10T04:29:53Z", "author": {"login": "mohanvive"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -2506,10 +2614,11 @@ public void visit(BLangCheckedExpr checkedExpr) {\n             dlog.error(checkedExpr.pos, DiagnosticCode.CHECKED_EXPR_NO_MATCHING_ERROR_RETURN_IN_ENCL_INVOKABLE);\n         }\n \n-        if (checkReturnValidityInTransaction()) {\n-            this.dlog.error(checkedExpr.pos, DiagnosticCode.CHECK_EXPRESSION_INVALID_USAGE_WITHIN_TRANSACTION_BLOCK);\n-            return;\n-        }\n+        //TODO Transaction - not required", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94426daa0f58ebf06bfb6288bd7cfe4e12d158c5"}, "originalPosition": 376}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzcyODg3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DataflowAnalyzer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDozMDo0NVrOGhkeHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDozMDo1NVrOGhkeRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1MzcyNQ==", "bodyText": "I think, we need to check all these TODOs and fix them.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23861#discussion_r437853725", "createdAt": "2020-06-10T04:30:45Z", "author": {"login": "mohanvive"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DataflowAnalyzer.java", "diffHunk": "@@ -580,16 +583,28 @@ public void visit(BLangLock lockNode) {\n     @Override\n     public void visit(BLangTransaction transactionNode) {\n         analyzeNode(transactionNode.transactionBody, env);\n-        analyzeNode(transactionNode.onRetryBody, env);\n-        analyzeNode(transactionNode.committedBody, env);\n-        analyzeNode(transactionNode.abortedBody, env);\n \n         // marks the injected import as used\n         Name transactionPkgName = names.fromString(Names.DOT.value + Names.TRANSACTION_PACKAGE.value);\n         Name compUnitName = names.fromString(transactionNode.pos.getSource().getCompilationUnitName());\n         this.symResolver.resolvePrefixSymbol(env, transactionPkgName, compUnitName);\n     }\n \n+    @Override\n+    public void visit(BLangTransactionalExpr transactionalExpr) {\n+        //TODO Transactions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94426daa0f58ebf06bfb6288bd7cfe4e12d158c5"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1Mzc2NQ==", "bodyText": "Let's do this later.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23861#discussion_r437853765", "createdAt": "2020-06-10T04:30:55Z", "author": {"login": "mohanvive"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DataflowAnalyzer.java", "diffHunk": "@@ -580,16 +583,28 @@ public void visit(BLangLock lockNode) {\n     @Override\n     public void visit(BLangTransaction transactionNode) {\n         analyzeNode(transactionNode.transactionBody, env);\n-        analyzeNode(transactionNode.onRetryBody, env);\n-        analyzeNode(transactionNode.committedBody, env);\n-        analyzeNode(transactionNode.abortedBody, env);\n \n         // marks the injected import as used\n         Name transactionPkgName = names.fromString(Names.DOT.value + Names.TRANSACTION_PACKAGE.value);\n         Name compUnitName = names.fromString(transactionNode.pos.getSource().getCompilationUnitName());\n         this.symResolver.resolvePrefixSymbol(env, transactionPkgName, compUnitName);\n     }\n \n+    @Override\n+    public void visit(BLangTransactionalExpr transactionalExpr) {\n+        //TODO Transactions", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1MzcyNQ=="}, "originalCommit": {"oid": "94426daa0f58ebf06bfb6288bd7cfe4e12d158c5"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODEyNTI0OnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/transactions/TransactionResourceManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzozMjo0MlrOGhoS_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzozMjo0MlrOGhoS_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkxNjQxMw==", "bodyText": "Call them in reverse order", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23861#discussion_r437916413", "createdAt": "2020-06-10T07:32:42Z", "author": {"login": "gimantha"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/transactions/TransactionResourceManager.java", "diffHunk": "@@ -311,10 +311,31 @@ private String generateCombinedTransactionId(String transactionId, String transa\n     }\n \n     private void invokeCommittedFunction(Strand strand, String transactionId, String transactionBlockId) {\n-        FPValue fp = committedFuncRegistry.get(transactionBlockId);\n-        Object[] args = {strand, StringUtils.fromString(transactionId + \":\" + transactionBlockId), true};\n-        if (fp != null) {\n-            strand.scheduler.schedule(args, fp.getFunction(), strand, null);\n+        List<FPValue> fpValueList = committedFuncRegistry.get(transactionBlockId);\n+        Object[] args = { strand, strand.transactionLocalContext.getInfoRecord(), true };\n+        if (fpValueList != null) {\n+            for (int i = fpValueList.size(); i > 0; i--) {\n+                FPValue fp = fpValueList.get(i - 1);\n+                //TODO: Replace fp.getFunction().apply\n+//                BRuntime.getCurrentRuntime().invokeFunctionPointerAsyncIteratively(fp, 1, () -> args,\n+//                        results -> {}, () -> null);\n+                fp.getFunction().apply(args);\n+            }\n+        }\n+    }\n+\n+    private void invokeAbortedFunction(Strand strand, String transactionId, String transactionBlockId, Object error) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "119108981783350e095d7845981929a14f4c353c"}, "originalPosition": 103}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3392, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}