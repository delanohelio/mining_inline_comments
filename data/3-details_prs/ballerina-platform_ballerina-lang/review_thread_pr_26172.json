{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NDI2MjY0", "number": 26172, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODo1MjowMVrOEqcMrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODowMzoyNlrOEtKT0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTM3NjQ2OnYy", "diffSide": "RIGHT", "path": "langlib/lang.xml/src/main/java/org/ballerinalang/langlib/xml/CreateText.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODo1MjowMVrOHcpkWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODo1MjowMVrOHcpkWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgwMzIyNw==", "bodyText": "Incorrect year?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26172#discussion_r499803227", "createdAt": "2020-10-05T18:52:01Z", "author": {"login": "anupama-pathirage"}, "path": "langlib/lang.xml/src/main/java/org/ballerinalang/langlib/xml/CreateText.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ *   Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03aad200251243eb212111d63d371ca204a4fbf2"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTI1ODY0OnYy", "diffSide": "RIGHT", "path": "langlib/lang.xml/src/main/java/org/ballerinalang/langlib/xml/CreateText.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMzo1MjoyMlrOHdhpzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMzo1MjoyMlrOHdhpzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDcyMjEyNw==", "bodyText": "Shall we remove this? I don't think we'll need this again, even if we do, we can add it then.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26172#discussion_r500722127", "createdAt": "2020-10-07T03:52:22Z", "author": {"login": "MaryamZi"}, "path": "langlib/lang.xml/src/main/java/org/ballerinalang/langlib/xml/CreateText.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.langlib.xml;\n+\n+import org.ballerinalang.jvm.XMLFactory;\n+import org.ballerinalang.jvm.api.values.BString;\n+import org.ballerinalang.jvm.values.XMLValue;\n+\n+/**\n+ * Create XML text value from string.\n+ *\n+ * @since Swan Lake\n+ */\n+//@BallerinaFunction(\n+//        orgName = \"ballerina\", packageName = \"lang.xml\", version = XML_VERSION,\n+//        functionName = \"createText\",\n+//        args = {@Argument(name = \"string\", type = TypeKind.STRING)},\n+//        returnType = {@ReturnType(type = TypeKind.XML)},\n+//        isPublic = true\n+//)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcf1ac2f8b34cc93468e499013db9feab34d2a49"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTI2MDA3OnYy", "diffSide": "RIGHT", "path": "langlib/langlib-test/src/test/java/org/ballerinalang/langlib/test/LangLibXMLTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMzo1MzoyNVrOHdhqtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDozODoxM1rOHfuy6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDcyMjM1OQ==", "bodyText": "Shall we just invoke the function here and write the assertion in Ballerina itself?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26172#discussion_r500722359", "createdAt": "2020-10-07T03:53:25Z", "author": {"login": "MaryamZi"}, "path": "langlib/langlib-test/src/test/java/org/ballerinalang/langlib/test/LangLibXMLTest.java", "diffHunk": "@@ -187,6 +187,12 @@ public void testCreateComment() {\n         assertEquals((returns[0]).stringValue(), \"<!--This text should be wraped in xml comment-->\");\n     }\n \n+    @Test\n+    public void testCreateText() {\n+        BValue[] returns = BRunUtil.invoke(compileResult, \"testCreateText\");\n+        assertEquals((returns[0]).stringValue(), \"This is xml text\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcf1ac2f8b34cc93468e499013db9feab34d2a49"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAzMjk0Mw==", "bodyText": "All the assertions in this class is done in the class itself, so that is why I did the assertion of testCreateText() here. Is it okay to only change this.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26172#discussion_r503032943", "createdAt": "2020-10-12T04:30:15Z", "author": {"login": "suleka96"}, "path": "langlib/langlib-test/src/test/java/org/ballerinalang/langlib/test/LangLibXMLTest.java", "diffHunk": "@@ -187,6 +187,12 @@ public void testCreateComment() {\n         assertEquals((returns[0]).stringValue(), \"<!--This text should be wraped in xml comment-->\");\n     }\n \n+    @Test\n+    public void testCreateText() {\n+        BValue[] returns = BRunUtil.invoke(compileResult, \"testCreateText\");\n+        assertEquals((returns[0]).stringValue(), \"This is xml text\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDcyMjM1OQ=="}, "originalCommit": {"oid": "fcf1ac2f8b34cc93468e499013db9feab34d2a49"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAzNDYwMg==", "bodyText": "Yes, that's OK. We can make sure that whatever new code we add does this, and when we're eventually migrating all the assertions to Ballerina, we only have to fix the old ones.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26172#discussion_r503034602", "createdAt": "2020-10-12T04:38:13Z", "author": {"login": "MaryamZi"}, "path": "langlib/langlib-test/src/test/java/org/ballerinalang/langlib/test/LangLibXMLTest.java", "diffHunk": "@@ -187,6 +187,12 @@ public void testCreateComment() {\n         assertEquals((returns[0]).stringValue(), \"<!--This text should be wraped in xml comment-->\");\n     }\n \n+    @Test\n+    public void testCreateText() {\n+        BValue[] returns = BRunUtil.invoke(compileResult, \"testCreateText\");\n+        assertEquals((returns[0]).stringValue(), \"This is xml text\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDcyMjM1OQ=="}, "originalCommit": {"oid": "fcf1ac2f8b34cc93468e499013db9feab34d2a49"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTI2NDk1OnYy", "diffSide": "RIGHT", "path": "langlib/langlib-test/src/test/resources/test-src/xmllib_test.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMzo1NjowN1rOHdhtXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwMzo1NjowN1rOHdhtXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDcyMzAzNw==", "bodyText": "Shall we add a few more tests?\ne.g.,\n\ntests for empty strings\ntests with new lines, no spaces, single character, etc.\ntests with xml:Text as the contextually expected type as opposed to xml here (e.g., assign it to an xml:Text variable and use it)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26172#discussion_r500723037", "createdAt": "2020-10-07T03:56:07Z", "author": {"login": "MaryamZi"}, "path": "langlib/langlib-test/src/test/resources/test-src/xmllib_test.bal", "diffHunk": "@@ -154,6 +154,10 @@ function testCreateComment() returns xml {\n     return 'xml:createComment(\"This text should be wraped in xml comment\");\n }\n \n+function testCreateText() returns xml {\n+    return 'xml:createText(\"This is xml text\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcf1ac2f8b34cc93468e499013db9feab34d2a49"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzkwMTE4OnYy", "diffSide": "RIGHT", "path": "langlib/lang.xml/src/main/ballerina/src/lang.xml/xml.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODowMjo1NlrOHgzFkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODowMjo1NlrOHgzFkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE1MzQ4OQ==", "bodyText": "Can this be more descriptive?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26172#discussion_r504153489", "createdAt": "2020-10-13T18:02:56Z", "author": {"login": "anupama-pathirage"}, "path": "langlib/lang.xml/src/main/ballerina/src/lang.xml/xml.bal", "diffHunk": "@@ -205,6 +205,16 @@ public isolated function createComment(string content) returns Comment = @java:M\n     name: \"createComment\"\n } external;\n \n+# Constructs an xml sequence representing zero of more parsed characters.\n+#\n+# + chars - the characters", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bb5137353f42162d0560544886898bddf7cd40c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzkwMjg4OnYy", "diffSide": "RIGHT", "path": "langlib/lang.xml/src/main/ballerina/src/lang.xml/xml.bal", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODowMzoyNlrOHgzGmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjowMDo1NVrOHiET4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE1Mzc1Mg==", "bodyText": "The above doc comment doesn't adhere to the best practices we follow. Refer to the last point in https://github.com/ballerina-platform/ballerina-distribution/blob/master/doc-guidelines.md", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26172#discussion_r504153752", "createdAt": "2020-10-13T18:03:26Z", "author": {"login": "anupama-pathirage"}, "path": "langlib/lang.xml/src/main/ballerina/src/lang.xml/xml.bal", "diffHunk": "@@ -205,6 +205,16 @@ public isolated function createComment(string content) returns Comment = @java:M\n     name: \"createComment\"\n } external;\n \n+# Constructs an xml sequence representing zero of more parsed characters.\n+#\n+# + chars - the characters\n+# + return - an xml sequence that is either empty or consists of one text item\n+# The constructed sequence will be empty when the length of `chars` is zero.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bb5137353f42162d0560544886898bddf7cd40c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM5ODI4OQ==", "bodyText": "I have made the changes according to the best practices, however this is the original content I took from the spec.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26172#discussion_r504398289", "createdAt": "2020-10-14T04:45:02Z", "author": {"login": "suleka96"}, "path": "langlib/lang.xml/src/main/ballerina/src/lang.xml/xml.bal", "diffHunk": "@@ -205,6 +205,16 @@ public isolated function createComment(string content) returns Comment = @java:M\n     name: \"createComment\"\n } external;\n \n+# Constructs an xml sequence representing zero of more parsed characters.\n+#\n+# + chars - the characters\n+# + return - an xml sequence that is either empty or consists of one text item\n+# The constructed sequence will be empty when the length of `chars` is zero.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE1Mzc1Mg=="}, "originalCommit": {"oid": "1bb5137353f42162d0560544886898bddf7cd40c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQyMDA5Mg==", "bodyText": "@anupama-pathirage, we usually copy the content directly from the spec https://github.com/ballerina-platform/ballerina-spec/tree/master/lang/lib for langlib methods. I guess whatever documentation changes should start from the spec itself?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26172#discussion_r504420092", "createdAt": "2020-10-14T05:58:34Z", "author": {"login": "MaryamZi"}, "path": "langlib/lang.xml/src/main/ballerina/src/lang.xml/xml.bal", "diffHunk": "@@ -205,6 +205,16 @@ public isolated function createComment(string content) returns Comment = @java:M\n     name: \"createComment\"\n } external;\n \n+# Constructs an xml sequence representing zero of more parsed characters.\n+#\n+# + chars - the characters\n+# + return - an xml sequence that is either empty or consists of one text item\n+# The constructed sequence will be empty when the length of `chars` is zero.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE1Mzc1Mg=="}, "originalCommit": {"oid": "1bb5137353f42162d0560544886898bddf7cd40c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE0OTk0NA==", "bodyText": "Shall we revert these changes for the time-being? There are several similar usages in the langlib, I guess we can revisit them all together?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26172#discussion_r505149944", "createdAt": "2020-10-15T03:57:50Z", "author": {"login": "MaryamZi"}, "path": "langlib/lang.xml/src/main/ballerina/src/lang.xml/xml.bal", "diffHunk": "@@ -205,6 +205,16 @@ public isolated function createComment(string content) returns Comment = @java:M\n     name: \"createComment\"\n } external;\n \n+# Constructs an xml sequence representing zero of more parsed characters.\n+#\n+# + chars - the characters\n+# + return - an xml sequence that is either empty or consists of one text item\n+# The constructed sequence will be empty when the length of `chars` is zero.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE1Mzc1Mg=="}, "originalCommit": {"oid": "1bb5137353f42162d0560544886898bddf7cd40c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4NDI1Ng==", "bodyText": "@MaryamZi Thanks for the update. Yes. Lets stick to the spec for now and later we can consider revisting them.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26172#discussion_r505484256", "createdAt": "2020-10-15T12:00:55Z", "author": {"login": "anupama-pathirage"}, "path": "langlib/lang.xml/src/main/ballerina/src/lang.xml/xml.bal", "diffHunk": "@@ -205,6 +205,16 @@ public isolated function createComment(string content) returns Comment = @java:M\n     name: \"createComment\"\n } external;\n \n+# Constructs an xml sequence representing zero of more parsed characters.\n+#\n+# + chars - the characters\n+# + return - an xml sequence that is either empty or consists of one text item\n+# The constructed sequence will be empty when the length of `chars` is zero.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE1Mzc1Mg=="}, "originalCommit": {"oid": "1bb5137353f42162d0560544886898bddf7cd40c"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4865, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}