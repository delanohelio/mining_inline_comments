{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4ODM1NjEw", "number": 24734, "title": "Allow redirection for non-safe methods", "bodyText": "Purpose\n\nExisting implementation serves auto redirection only for GET and HEAD methods as there was a requirement of getting user consent before performing redirection for non-safe HTTP methods in rfc2616.\u00a0But\u00a0that requirement has been dropped in rfc7231\u00a0and if the user enables redirect config in the client configuration, then it also implies the consent as the redirection is disabled in HTTP client by default.\n\n\nAlso,\u00a0rfc7231 and\u00a0rfc7538 specify that\u00a0307 and 308 should not allow changing the request method from POST to GET. That means a POST request should be repeated using another POST request during the redirection.\n\n\nHence the PR is to improve the HTTP client redirect logic to allow non-safe HTTP method (POST, PUT, ...) redirection for the 307(Temporary Redirect) and 308(Permanent Redirect) response status codes.\n\n\nAdd new config field  boolean allowAuthHeaders = false; is introduced and By default Authorization, Proxy-Authenticate, Proxy-Authorization, and WWW-Authenticate headers are removed from the redirect requests. Send them if it set to true during the redirection\n\nFixes #24681\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-07-14T11:59:25Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24734", "merged": true, "mergeCommit": {"oid": "7f1ed8de733b32483e635ce1fc47a22529e40dd7"}, "closed": true, "closedAt": "2020-07-16T05:55:44Z", "author": {"login": "chamil321"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc061fkAH2gAyNDQ4ODM1NjEwOjk4ZWMxZGNjMTA3MzAzZmU3NWI3YzhiMjA5MDNjYzdkN2Q1YzZmYjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1XdyKgFqTQ0OTQ5NzQyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "98ec1dcc107303fe75b7c8b20903cc7d7d5c6fb4", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/98ec1dcc107303fe75b7c8b20903cc7d7d5c6fb4", "committedDate": "2020-07-14T19:03:04Z", "message": "Allow redirection for non-safe methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d5551918fe86582cb7f298080da6d49dcd73269", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3d5551918fe86582cb7f298080da6d49dcd73269", "committedDate": "2020-07-14T11:54:06Z", "message": "Allow redirection for non-safe methods"}, "afterCommit": {"oid": "98ec1dcc107303fe75b7c8b20903cc7d7d5c6fb4", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/98ec1dcc107303fe75b7c8b20903cc7d7d5c6fb4", "committedDate": "2020-07-14T19:03:04Z", "message": "Allow redirection for non-safe methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e68430d4115abab847906d329593754a4dea7ede", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e68430d4115abab847906d329593754a4dea7ede", "committedDate": "2020-07-15T12:19:43Z", "message": "Add allowAuthHeaders config"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5fad839355bbeea3238d265990161f3cf8cde7b7", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5fad839355bbeea3238d265990161f3cf8cde7b7", "committedDate": "2020-07-15T11:35:17Z", "message": "Add allowAuthHeaders config"}, "afterCommit": {"oid": "e68430d4115abab847906d329593754a4dea7ede", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e68430d4115abab847906d329593754a4dea7ede", "committedDate": "2020-07-15T12:19:43Z", "message": "Add allowAuthHeaders config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4OTkwOTUx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24734#pullrequestreview-448990951", "createdAt": "2020-07-15T14:08:26Z", "commit": {"oid": "e68430d4115abab847906d329593754a4dea7ede"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNDowODoyNlrOGx_5XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNDowODoyNlrOGx_5XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA4MDI4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return \"unsupported redirect status code\" + statusCode.toString();\n          \n          \n            \n                    });\n          \n          \n            \n                    return \"unsupported redirect status code\" + statusCode.toString();\n          \n          \n            \n                });", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24734#discussion_r455080284", "createdAt": "2020-07-15T14:08:26Z", "author": {"login": "ldclakmal"}, "path": "stdlib/http/src/main/ballerina/src/http/redirect/redirect_client.bal", "diffHunk": "@@ -365,36 +378,40 @@ function createNewEndpointConfig(ClientConfiguration config) returns ClientConfi\n     return newEpConfig;\n }\n \n-//Get the HTTP method that should be used for redirection based on the status code.\n+// Get the HTTP method that should be used for redirection based on the status code.\n+// As per rfc7231 and rfc7538,\n+// +-------------------------------------------+-----------+-----------+\n+// |                                           | Permanent | Temporary |\n+// +-------------------------------------------+-----------+-----------+\n+// | Allows changing the request method from   | 301       | 302       |\n+// | POST to GET                               |           |           |\n+// | Does not allow changing the request       | 308       | 307       |\n+// | method from POST to GET                   |           |           |\n+// +-------------------------------------------+-----------+-----------+\n function getRedirectMethod(HttpOperation httpVerb, Response response) returns HttpOperation|() {\n     int statusCode = response.statusCode;\n-    if ((statusCode == STATUS_MULTIPLE_CHOICES || statusCode == STATUS_USE_PROXY || statusCode == STATUS_TEMPORARY_REDIRECT\n-            || statusCode == STATUS_PERMANENT_REDIRECT) && (httpVerb == HTTP_GET || httpVerb == HTTP_HEAD)) {\n-        return httpVerb;\n-    } else if ((statusCode == STATUS_MOVED_PERMANENTLY || statusCode == STATUS_FOUND) &&\n-        (httpVerb == HTTP_GET || httpVerb == HTTP_HEAD)) {\n+    if (statusCode == STATUS_MOVED_PERMANENTLY || statusCode == STATUS_FOUND || statusCode == STATUS_SEE_OTHER) {\n         return HTTP_GET;\n-    } else if (statusCode == STATUS_SEE_OTHER) {\n-        return HTTP_GET;\n-    } else {\n-        return ();\n     }\n+    if (statusCode == STATUS_TEMPORARY_REDIRECT || statusCode == STATUS_PERMANENT_REDIRECT ||\n+               statusCode == STATUS_MULTIPLE_CHOICES || statusCode == STATUS_USE_PROXY) {\n+        return httpVerb;\n+    }\n+    log:printDebug(function() returns string {\n+            return \"unsupported redirect status code\" + statusCode.toString();\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e68430d4115abab847906d329593754a4dea7ede"}, "originalPosition": 146}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4OTkxNzA4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24734#pullrequestreview-448991708", "createdAt": "2020-07-15T14:09:11Z", "commit": {"oid": "e68430d4115abab847906d329593754a4dea7ede"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNDowOToxMVrOGx_7dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNDowOToxMVrOGx_7dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA4MDgyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    req.setHeader(\"proxy-authorization\", \"Basic YWxhZGRpbjpvcGVuc2VzYW1l\");\n          \n          \n            \n                    req.setHeader(\"Proxy-Authorization\", \"Basic YWxhZGRpbjpvcGVuc2VzYW1l\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24734#discussion_r455080821", "createdAt": "2020-07-15T14:09:11Z", "author": {"login": "ldclakmal"}, "path": "tests/jballerina-integration-test/src/test/resources/http/src/httpservices/11_http_redirects.bal", "diffHunk": "@@ -252,6 +253,78 @@ service testRedirect on serviceEndpoint3 {\n             io:println(\"Connector error!\");\n         }\n     }\n+\n+    @http:ResourceConfig {\n+        methods: [\"GET\"],\n+        path: \"/doPost\"\n+    }\n+    resource function PostClearText(http:Caller caller, http:Request request) {\n+        http:Client endPoint4 = new(\"http://localhost:9103\", endPoint4Config );\n+        http:Request req = new;\n+        req.setHeader(\"proxy-authorization\", \"Basic YWxhZGRpbjpvcGVuc2VzYW1l\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e68430d4115abab847906d329593754a4dea7ede"}, "originalPosition": 124}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4OTkxODg2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24734#pullrequestreview-448991886", "createdAt": "2020-07-15T14:09:21Z", "commit": {"oid": "e68430d4115abab847906d329593754a4dea7ede"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNDowOToyMVrOGx_8CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNDowOToyMVrOGx_8CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA4MDk2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    req.setHeader(\"proxy-authorization\", \"Basic YWxhZGRpbjpvcGVuc2VzYW1l\");\n          \n          \n            \n                    req.setHeader(\"Proxy-Authorization\", \"Basic YWxhZGRpbjpvcGVuc2VzYW1l\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24734#discussion_r455080968", "createdAt": "2020-07-15T14:09:21Z", "author": {"login": "ldclakmal"}, "path": "tests/jballerina-integration-test/src/test/resources/http/src/httpservices/11_http_redirects.bal", "diffHunk": "@@ -252,6 +253,78 @@ service testRedirect on serviceEndpoint3 {\n             io:println(\"Connector error!\");\n         }\n     }\n+\n+    @http:ResourceConfig {\n+        methods: [\"GET\"],\n+        path: \"/doPost\"\n+    }\n+    resource function PostClearText(http:Caller caller, http:Request request) {\n+        http:Client endPoint4 = new(\"http://localhost:9103\", endPoint4Config );\n+        http:Request req = new;\n+        req.setHeader(\"proxy-authorization\", \"Basic YWxhZGRpbjpvcGVuc2VzYW1l\");\n+        req.setTextPayload(\"Payload redirected\");\n+        var response = endPoint4->post(\"/redirect1/handlePost\", req);\n+        if (response is http:Response) {\n+            var value = response.getTextPayload();\n+            if (value is string) {\n+                value = value + \":\" + response.resolvedRequestedURI;\n+                checkpanic caller->respond(<@untainted> value);\n+            } else {\n+                io:println(\"Payload error!\");\n+            }\n+        } else {\n+            io:println(\"Connector error!\");\n+        }\n+    }\n+\n+    @http:ResourceConfig {\n+        methods: [\"GET\"],\n+        path: \"/doSecurePut\"\n+    }\n+    resource function testSecurePut(http:Caller caller, http:Request request) {\n+        http:Request req = new;\n+        req.setHeader(\"proxy-authorization\", \"Basic YWxhZGRpbjpvcGVuc2VzYW1l\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e68430d4115abab847906d329593754a4dea7ede"}, "originalPosition": 146}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4OTkzNjI3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24734#pullrequestreview-448993627", "createdAt": "2020-07-15T14:11:12Z", "commit": {"oid": "e68430d4115abab847906d329593754a4dea7ede"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNDoxMToxMlrOGyABQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNDoxMToxMlrOGyABQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA4MjMwNw==", "bodyText": "Shall we add these headers as constants?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24734#discussion_r455082307", "createdAt": "2020-07-15T14:11:12Z", "author": {"login": "ldclakmal"}, "path": "stdlib/http/src/main/ballerina/src/http/redirect/redirect_client.bal", "diffHunk": "@@ -365,36 +378,40 @@ function createNewEndpointConfig(ClientConfiguration config) returns ClientConfi\n     return newEpConfig;\n }\n \n-//Get the HTTP method that should be used for redirection based on the status code.\n+// Get the HTTP method that should be used for redirection based on the status code.\n+// As per rfc7231 and rfc7538,\n+// +-------------------------------------------+-----------+-----------+\n+// |                                           | Permanent | Temporary |\n+// +-------------------------------------------+-----------+-----------+\n+// | Allows changing the request method from   | 301       | 302       |\n+// | POST to GET                               |           |           |\n+// | Does not allow changing the request       | 308       | 307       |\n+// | method from POST to GET                   |           |           |\n+// +-------------------------------------------+-----------+-----------+\n function getRedirectMethod(HttpOperation httpVerb, Response response) returns HttpOperation|() {\n     int statusCode = response.statusCode;\n-    if ((statusCode == STATUS_MULTIPLE_CHOICES || statusCode == STATUS_USE_PROXY || statusCode == STATUS_TEMPORARY_REDIRECT\n-            || statusCode == STATUS_PERMANENT_REDIRECT) && (httpVerb == HTTP_GET || httpVerb == HTTP_HEAD)) {\n-        return httpVerb;\n-    } else if ((statusCode == STATUS_MOVED_PERMANENTLY || statusCode == STATUS_FOUND) &&\n-        (httpVerb == HTTP_GET || httpVerb == HTTP_HEAD)) {\n+    if (statusCode == STATUS_MOVED_PERMANENTLY || statusCode == STATUS_FOUND || statusCode == STATUS_SEE_OTHER) {\n         return HTTP_GET;\n-    } else if (statusCode == STATUS_SEE_OTHER) {\n-        return HTTP_GET;\n-    } else {\n-        return ();\n     }\n+    if (statusCode == STATUS_TEMPORARY_REDIRECT || statusCode == STATUS_PERMANENT_REDIRECT ||\n+               statusCode == STATUS_MULTIPLE_CHOICES || statusCode == STATUS_USE_PROXY) {\n+        return httpVerb;\n+    }\n+    log:printDebug(function() returns string {\n+            return \"unsupported redirect status code\" + statusCode.toString();\n+        });\n+    return ();\n }\n \n-function createRedirectRequest(int statusCode, Request request) returns Request {\n-    Request redirectRequest = new;\n-    string[] headerNames = <@untainted string[]> request.getHeaderNames();\n-    foreach var headerName in headerNames {\n-        string[] headerValues = request.getHeaders(headerName);\n-        foreach var headerValue in headerValues {\n-            redirectRequest.addHeader(headerName, headerValue);\n-        }\n-    }\n-    if (statusCode == STATUS_SEE_OTHER) {\n-        redirectRequest.removeHeader(TRANSFER_ENCODING);\n-        redirectRequest.removeHeader(CONTENT_LENGTH);\n+function createRedirectRequest(Request request, boolean allowAuthorizationHeader) returns Request {\n+    if (allowAuthorizationHeader) {\n+        return request;\n     }\n-    return redirectRequest;\n+    request.removeHeader(AUTHORIZATION);\n+    request.removeHeader(\"Proxy-Authenticate\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e68430d4115abab847906d329593754a4dea7ede"}, "originalPosition": 168}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MDEwNjMw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24734#pullrequestreview-449010630", "createdAt": "2020-07-15T14:28:19Z", "commit": {"oid": "e68430d4115abab847906d329593754a4dea7ede"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNDoyODoxOVrOGyAzrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNDoyODoxOVrOGyAzrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA5NTIxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            function createRedirectRequest(Request request, boolean allowAuthorizationHeader) returns Request {\n          \n          \n            \n                if (allowAuthorizationHeader) {\n          \n          \n            \n            function createRedirectRequest(Request request, boolean allowAuthHeaders) returns Request {\n          \n          \n            \n                if (allowAuthHeaders) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24734#discussion_r455095214", "createdAt": "2020-07-15T14:28:19Z", "author": {"login": "ldclakmal"}, "path": "stdlib/http/src/main/ballerina/src/http/redirect/redirect_client.bal", "diffHunk": "@@ -365,36 +378,40 @@ function createNewEndpointConfig(ClientConfiguration config) returns ClientConfi\n     return newEpConfig;\n }\n \n-//Get the HTTP method that should be used for redirection based on the status code.\n+// Get the HTTP method that should be used for redirection based on the status code.\n+// As per rfc7231 and rfc7538,\n+// +-------------------------------------------+-----------+-----------+\n+// |                                           | Permanent | Temporary |\n+// +-------------------------------------------+-----------+-----------+\n+// | Allows changing the request method from   | 301       | 302       |\n+// | POST to GET                               |           |           |\n+// | Does not allow changing the request       | 308       | 307       |\n+// | method from POST to GET                   |           |           |\n+// +-------------------------------------------+-----------+-----------+\n function getRedirectMethod(HttpOperation httpVerb, Response response) returns HttpOperation|() {\n     int statusCode = response.statusCode;\n-    if ((statusCode == STATUS_MULTIPLE_CHOICES || statusCode == STATUS_USE_PROXY || statusCode == STATUS_TEMPORARY_REDIRECT\n-            || statusCode == STATUS_PERMANENT_REDIRECT) && (httpVerb == HTTP_GET || httpVerb == HTTP_HEAD)) {\n-        return httpVerb;\n-    } else if ((statusCode == STATUS_MOVED_PERMANENTLY || statusCode == STATUS_FOUND) &&\n-        (httpVerb == HTTP_GET || httpVerb == HTTP_HEAD)) {\n+    if (statusCode == STATUS_MOVED_PERMANENTLY || statusCode == STATUS_FOUND || statusCode == STATUS_SEE_OTHER) {\n         return HTTP_GET;\n-    } else if (statusCode == STATUS_SEE_OTHER) {\n-        return HTTP_GET;\n-    } else {\n-        return ();\n     }\n+    if (statusCode == STATUS_TEMPORARY_REDIRECT || statusCode == STATUS_PERMANENT_REDIRECT ||\n+               statusCode == STATUS_MULTIPLE_CHOICES || statusCode == STATUS_USE_PROXY) {\n+        return httpVerb;\n+    }\n+    log:printDebug(function() returns string {\n+            return \"unsupported redirect status code\" + statusCode.toString();\n+        });\n+    return ();\n }\n \n-function createRedirectRequest(int statusCode, Request request) returns Request {\n-    Request redirectRequest = new;\n-    string[] headerNames = <@untainted string[]> request.getHeaderNames();\n-    foreach var headerName in headerNames {\n-        string[] headerValues = request.getHeaders(headerName);\n-        foreach var headerValue in headerValues {\n-            redirectRequest.addHeader(headerName, headerValue);\n-        }\n-    }\n-    if (statusCode == STATUS_SEE_OTHER) {\n-        redirectRequest.removeHeader(TRANSFER_ENCODING);\n-        redirectRequest.removeHeader(CONTENT_LENGTH);\n+function createRedirectRequest(Request request, boolean allowAuthorizationHeader) returns Request {\n+    if (allowAuthorizationHeader) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e68430d4115abab847906d329593754a4dea7ede"}, "originalPosition": 163}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c849d7261d18402c9d8db74a737a1d90f7e5254", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8c849d7261d18402c9d8db74a737a1d90f7e5254", "committedDate": "2020-07-15T16:12:46Z", "message": "Address review requests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MTIzOTg2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24734#pullrequestreview-449123986", "createdAt": "2020-07-15T16:35:44Z", "commit": {"oid": "8c849d7261d18402c9d8db74a737a1d90f7e5254"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c3c6e68bee4090a8b09716710656763f4fbf9562", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c3c6e68bee4090a8b09716710656763f4fbf9562", "committedDate": "2020-07-15T15:57:21Z", "message": "Address review requests"}, "afterCommit": {"oid": "8c849d7261d18402c9d8db74a737a1d90f7e5254", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8c849d7261d18402c9d8db74a737a1d90f7e5254", "committedDate": "2020-07-15T16:12:46Z", "message": "Address review requests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cafea6b274ab1f12b078536f67c775d2894d1773", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cafea6b274ab1f12b078536f67c775d2894d1773", "committedDate": "2020-07-16T03:48:55Z", "message": "fix failing ls tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32ad39f582cc844cd51f41fb46e1516bcc9b581f", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/32ad39f582cc844cd51f41fb46e1516bcc9b581f", "committedDate": "2020-07-16T04:22:17Z", "message": "Merge pull request #13 from nadeeshaan/fix-redirect\n\nFix failing ls tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NDk3NDI3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24734#pullrequestreview-449497427", "createdAt": "2020-07-16T04:24:26Z", "commit": {"oid": "32ad39f582cc844cd51f41fb46e1516bcc9b581f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3741, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}