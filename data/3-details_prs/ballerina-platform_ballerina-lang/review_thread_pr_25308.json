{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MzE4MjU3", "number": 25308, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNToyNDoyMVrOEb6DGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNToyNDoyMVrOEb6DGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3Njk4MDczOnYy", "diffSide": "RIGHT", "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/natives/mock/FunctionMock.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNToyNDoyMVrOHGIBrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNToyNDoyMVrOHGIBrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE4NTAwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if ((returnVal instanceof StringValue)) {\n          \n          \n            \n                            if (returnVal instanceof StringValue) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25308#discussion_r476185006", "createdAt": "2020-08-25T05:24:21Z", "author": {"login": "azinneera"}, "path": "misc/testerina/modules/testerina-core/src/main/java/org/ballerinalang/testerina/natives/mock/FunctionMock.java", "diffHunk": "@@ -51,9 +52,12 @@ public static Object mockHandler(ObjectValue mockFuncObj, Object... args) {\n         for (String caseId : caseIds) {\n             if (MockRegistry.getInstance().hasCase(caseId)) {\n                 returnVal = MockRegistry.getInstance().getReturnValue(caseId);\n-                if ((returnVal instanceof StringValue)\n-                        && returnVal.toString().contains(MockConstants.FUNCTION_CALL_PLACEHOLDER)) {\n-                    return callFunction(originalFunction, originalFunctionPackage, returnVal.toString(), args);\n+                if ((returnVal instanceof StringValue)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa1100ca4b2867e57ea0eff8cb26e85c5df47dd5"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 240, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}