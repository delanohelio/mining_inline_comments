{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczODAyNDA5", "number": 20996, "title": "Include resources to module jar", "bodyText": "Purpose\nFixes #20893\nApproach\nresource directory will be copied to resources/orgname/module/version/\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-02-11T18:02:28Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20996", "merged": true, "mergeCommit": {"oid": "87b4a2aba26af293f2fb36ad62742525143bbc7e"}, "closed": true, "closedAt": "2020-02-13T02:08:12Z", "author": {"login": "warunalakshitha"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDVj6KgH2gAyMzczODAyNDA5OjAwZTg5NDM0ZTZmMjdiNDc4OGVmZTRkZTJiYWVlMDg1NmIyNDFlZTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDxNl7gFqTM1NzkxMzU3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "00e89434e6f27b4788efe4de2baee0856b241ee6", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/00e89434e6f27b4788efe4de2baee0856b241ee6", "committedDate": "2020-02-11T17:55:05Z", "message": "Add copy resources task"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd7da8598af82041205af82a0ef9055311c30c4f", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dd7da8598af82041205af82a0ef9055311c30c4f", "committedDate": "2020-02-11T17:55:46Z", "message": "Add testings inclusion of resources in module jar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14f5a884a3e6036d9ff9b676384c06e5bbdbfc88", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/14f5a884a3e6036d9ff9b676384c06e5bbdbfc88", "committedDate": "2020-02-11T18:07:02Z", "message": "Add minor code improvement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8793c7b2854dde6d7f257323a40e56fa7f36f642", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8793c7b2854dde6d7f257323a40e56fa7f36f642", "committedDate": "2020-02-11T18:14:36Z", "message": "Fix formatting issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MTczMjU2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20996#pullrequestreview-357173256", "createdAt": "2020-02-12T03:49:21Z", "commit": {"oid": "8793c7b2854dde6d7f257323a40e56fa7f36f642"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMzo0OToyMVrOFog_hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMzo0OToyMVrOFog_hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAyNzkxMQ==", "bodyText": "What about transitive dependencies ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20996#discussion_r378027911", "createdAt": "2020-02-12T03:49:21Z", "author": {"login": "hevayo"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/CopyResourcesTask.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.util.ProjectDirConstants;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.nio.file.FileSystem;\n+import java.nio.file.FileSystems;\n+import java.nio.file.FileVisitResult;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.SimpleFileVisitor;\n+import java.nio.file.StandardCopyOption;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import static org.ballerinalang.tool.LauncherUtils.createLauncherException;\n+\n+/**\n+ * Copy resources to module jar.\n+ *\n+ * @since 1.1.2\n+ */\n+public class CopyResourcesTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRoot = buildContext.get(BuildContextField.SOURCE_ROOT);\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        for (BLangPackage module : moduleBirMap) {\n+            copyResourcesToJar(buildContext, sourceRoot, module);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8793c7b2854dde6d7f257323a40e56fa7f36f642"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MTczNDQ2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20996#pullrequestreview-357173446", "createdAt": "2020-02-12T03:50:12Z", "commit": {"oid": "8793c7b2854dde6d7f257323a40e56fa7f36f642"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMzo1MDoxM1rOFohAJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMzo1MDoxM1rOFohAJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAyODA2OA==", "bodyText": "Can we use Apache commons for this as well ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20996#discussion_r378028068", "createdAt": "2020-02-12T03:50:13Z", "author": {"login": "hevayo"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/CopyResourcesTask.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.packerina.task;\n+\n+import org.ballerinalang.packerina.buildcontext.BuildContext;\n+import org.ballerinalang.packerina.buildcontext.BuildContextField;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+import org.wso2.ballerinalang.compiler.util.ProjectDirConstants;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.nio.file.FileSystem;\n+import java.nio.file.FileSystems;\n+import java.nio.file.FileVisitResult;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.SimpleFileVisitor;\n+import java.nio.file.StandardCopyOption;\n+import java.nio.file.attribute.BasicFileAttributes;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import static org.ballerinalang.tool.LauncherUtils.createLauncherException;\n+\n+/**\n+ * Copy resources to module jar.\n+ *\n+ * @since 1.1.2\n+ */\n+public class CopyResourcesTask implements Task {\n+\n+    @Override\n+    public void execute(BuildContext buildContext) {\n+        Path sourceRoot = buildContext.get(BuildContextField.SOURCE_ROOT);\n+        List<BLangPackage> moduleBirMap = buildContext.getModules();\n+        for (BLangPackage module : moduleBirMap) {\n+            copyResourcesToJar(buildContext, sourceRoot, module);\n+        }\n+    }\n+\n+    private void copyResourcesToJar(BuildContext buildContext, Path sourceRootPath, BLangPackage module) {\n+        // Get resources directory\n+        Path resourceDir = sourceRootPath.resolve(ProjectDirConstants.SOURCE_DIR_NAME)\n+                .resolve(module.packageID.name.value)\n+                .resolve(ProjectDirConstants.RESOURCE_DIR_NAME);\n+        if (!resourceDir.toFile().exists()) {\n+            return;\n+        }\n+        // Get the module jar\n+        Path moduleJarPath = buildContext.getJarPathFromTargetCache(module.packageID);\n+        URI moduleJarUri = URI.create(\"jar:\" + moduleJarPath.toUri().toString());\n+        try (FileSystem toFs = FileSystems.newFileSystem(moduleJarUri, Collections.emptyMap())) {\n+            Path to = toFs.getRootDirectories().iterator().next().resolve(\"resources\")\n+                    .resolve(module.packageID.orgName.value)\n+                    .resolve(module.packageID.name.value)\n+                    .resolve(module.packageID.version.value);\n+            Files.walkFileTree(resourceDir, new Copy(resourceDir, to));\n+        } catch (IOException e) {\n+            throw createLauncherException(\"error while adding resources to module jar :\" + e.getMessage());\n+        }\n+    }\n+\n+    static class Copy extends SimpleFileVisitor<Path> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8793c7b2854dde6d7f257323a40e56fa7f36f642"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ebbb1839f3eb691fe3384635c91b05ef79bf478", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6ebbb1839f3eb691fe3384635c91b05ef79bf478", "committedDate": "2020-02-12T11:53:09Z", "message": "Address review suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14bab1dabdafe69dd42fb214935d11955b7e6188", "author": {"user": {"login": "warunalakshitha", "name": "Waruna Lakshitha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/14bab1dabdafe69dd42fb214935d11955b7e6188", "committedDate": "2020-02-12T11:53:30Z", "message": "Remove version from resources entry path"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3OTEzNTc3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20996#pullrequestreview-357913577", "createdAt": "2020-02-13T02:08:03Z", "commit": {"oid": "14bab1dabdafe69dd42fb214935d11955b7e6188"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4247, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}