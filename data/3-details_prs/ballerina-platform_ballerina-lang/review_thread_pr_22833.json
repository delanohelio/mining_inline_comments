{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MTMzNTY0", "number": 22833, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMjoyMzoyN1rOD0ujGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNTowMzo1NFrOD1F7OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NjE1MTk1OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMjoyMzoyN1rOGJzfZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDoxMToyNlrOGK6I1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjkzMzk5MA==", "bodyText": "We usually try to do the testing on ballerina itself. And panic if not the intended result of the test.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r412933990", "createdAt": "2020-04-22T12:23:27Z", "author": {"login": "dulvinw"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,21 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+    @Test()\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+        Assert.assertEquals(returns.length, 1);\n+        Assert.assertNotNull(returns[0]);\n+        Assert.assertTrue(returns[0] instanceof BInteger);\n+        Assert.assertEquals(((BInteger) returns[0]).intValue(), 5);\n+    }\n+    @Test()\n+    public void testFiniteTypesWithPositiveFloats() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n+        Assert.assertEquals(returns.length, 1);\n+        Assert.assertNotNull(returns[0]);\n+        Assert.assertTrue(returns[0] instanceof BFloat);\n+        Assert.assertEquals(((BFloat) returns[0]).floatValue(), 1.5);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80be3d975f2f043f4d165078494327eee8a2cc80"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEwMDUyOQ==", "bodyText": "+1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413100529", "createdAt": "2020-04-22T15:49:01Z", "author": {"login": "dulajdilshan"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,21 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+    @Test()\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+        Assert.assertEquals(returns.length, 1);\n+        Assert.assertNotNull(returns[0]);\n+        Assert.assertTrue(returns[0] instanceof BInteger);\n+        Assert.assertEquals(((BInteger) returns[0]).intValue(), 5);\n+    }\n+    @Test()\n+    public void testFiniteTypesWithPositiveFloats() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n+        Assert.assertEquals(returns.length, 1);\n+        Assert.assertNotNull(returns[0]);\n+        Assert.assertTrue(returns[0] instanceof BFloat);\n+        Assert.assertEquals(((BFloat) returns[0]).floatValue(), 1.5);\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjkzMzk5MA=="}, "originalCommit": {"oid": "80be3d975f2f043f4d165078494327eee8a2cc80"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5MTQ3Ng==", "bodyText": "Done", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r414091476", "createdAt": "2020-04-23T20:11:26Z", "author": {"login": "chiranSachintha"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,21 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+    @Test()\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+        Assert.assertEquals(returns.length, 1);\n+        Assert.assertNotNull(returns[0]);\n+        Assert.assertTrue(returns[0] instanceof BInteger);\n+        Assert.assertEquals(((BInteger) returns[0]).intValue(), 5);\n+    }\n+    @Test()\n+    public void testFiniteTypesWithPositiveFloats() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n+        Assert.assertEquals(returns.length, 1);\n+        Assert.assertNotNull(returns[0]);\n+        Assert.assertTrue(returns[0] instanceof BFloat);\n+        Assert.assertEquals(((BFloat) returns[0]).floatValue(), 1.5);\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjkzMzk5MA=="}, "originalCommit": {"oid": "80be3d975f2f043f4d165078494327eee8a2cc80"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTk2MDI1OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/resources/grammar/BallerinaParser.g4", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1NDo0N1rOGKWhlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1NDo0N1rOGKWhlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwNzk4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                :   (ADD|SUB)? integerLiteral\n          \n          \n            \n                :   (ADD | SUB)? integerLiteral", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413507988", "createdAt": "2020-04-23T04:54:47Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/resources/grammar/BallerinaParser.g4", "diffHunk": "@@ -941,8 +941,8 @@ formalParameterList\n     ;\n \n simpleLiteral\n-    :   SUB? integerLiteral\n-    |   SUB? floatingPointLiteral\n+    :   (ADD|SUB)? integerLiteral", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTk2MDYxOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/resources/grammar/BallerinaParser.g4", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1NDo1OVrOGKWhzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1NDo1OVrOGKWhzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODA0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                |   (ADD|SUB)? floatingPointLiteral\n          \n          \n            \n                |   (ADD | SUB)? floatingPointLiteral", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508045", "createdAt": "2020-04-23T04:54:59Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/resources/grammar/BallerinaParser.g4", "diffHunk": "@@ -941,8 +941,8 @@ formalParameterList\n     ;\n \n simpleLiteral\n-    :   SUB? integerLiteral\n-    |   SUB? floatingPointLiteral\n+    :   (ADD|SUB)? integerLiteral\n+    |   (ADD|SUB)? floatingPointLiteral", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTk2MTkyOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1NTozNFrOGKWihA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1NTozNFrOGKWihA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODIyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508228", "createdAt": "2020-04-23T04:55:34Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTk2MjcxOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1NTo1OFrOGKWi8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1NTo1OFrOGKWi8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODMzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508339", "createdAt": "2020-04-23T04:55:58Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+    }\n+\n+    @Test(description = \"Test finite type where float literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveFloats() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTk2NDczOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1Njo0MlrOGKWkBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1Njo0MlrOGKWkBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODYxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508614", "createdAt": "2020-04-23T04:56:42Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTk2NTM0OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1Njo1N1rOGKWkXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1Njo1N1rOGKWkXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODcwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508702", "createdAt": "2020-04-23T04:56:57Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+    }\n+\n+    @Test(description = \"Test finite type where float literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveFloats() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTk3MTY2OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1OTo0MFrOGKWn5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTo0Mzo1NVrOGK5HsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTYwNA==", "bodyText": "Shall we use different names for these types, for the new tests we are introducing? At least upper-case single letters?\nThe lower-case names kinda make them look like variable names.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413509604", "createdAt": "2020-04-23T04:59:40Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "diffHunk": "@@ -461,6 +461,31 @@ function testFiniteTypesWithDiscriminatedMembers() returns [any, any, any, any,\n     return [a, b, c, d, e];\n }\n \n+type d +3|+5;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA3NDgwMA==", "bodyText": "Fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r414074800", "createdAt": "2020-04-23T19:43:55Z", "author": {"login": "chiranSachintha"}, "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "diffHunk": "@@ -461,6 +461,31 @@ function testFiniteTypesWithDiscriminatedMembers() returns [any, any, any, any,\n     return [a, b, c, d, e];\n }\n \n+type d +3|+5;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTYwNA=="}, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTk3MjA0OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1OTo1N1rOGKWoKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1OTo1N1rOGKWoKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTY3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (n != 5){\n          \n          \n            \n                if (n != 5) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413509673", "createdAt": "2020-04-23T04:59:57Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "diffHunk": "@@ -461,6 +461,31 @@ function testFiniteTypesWithDiscriminatedMembers() returns [any, any, any, any,\n     return [a, b, c, d, e];\n }\n \n+type d +3|+5;\n+\n+function testFiniteTypesWithPositiveIntegers() {\n+    d n = +3;\n+    d comparator = +3;\n+    if (n == comparator) {\n+       n = +5;\n+    }\n+    if (n != 5){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTk4MTQ2OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNTowMzo0MFrOGKWtIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTo0MzoyOVrOGK5Gvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxMDk0Nw==", "bodyText": "Best practices for errors\n\nas the error reason use meaningful simple strings with no spaces\nas the message field give additional details about what caused the error\n\nSee \n  \n    \n      ballerina-lang/tests/jballerina-bstring-unit-test/src/test/resources/test-src/expressions/listconstructor/list_constructor_infer_type.bal\n    \n    \n         Line 64\n      in\n      7fa2ee5\n    \n    \n    \n    \n\n        \n          \n           panic error(ASSERTION_ERROR_REASON, \n        \n    \n  \n\n for an example.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413510947", "createdAt": "2020-04-23T05:03:40Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "diffHunk": "@@ -461,6 +461,31 @@ function testFiniteTypesWithDiscriminatedMembers() returns [any, any, any, any,\n     return [a, b, c, d, e];\n }\n \n+type d +3|+5;\n+\n+function testFiniteTypesWithPositiveIntegers() {\n+    d n = +3;\n+    d comparator = +3;\n+    if (n == comparator) {\n+       n = +5;\n+    }\n+    if (n != 5){\n+        panic error(\"Type mismatch\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA3NDU1OQ==", "bodyText": "Fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r414074559", "createdAt": "2020-04-23T19:43:29Z", "author": {"login": "chiranSachintha"}, "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "diffHunk": "@@ -461,6 +461,31 @@ function testFiniteTypesWithDiscriminatedMembers() returns [any, any, any, any,\n     return [a, b, c, d, e];\n }\n \n+type d +3|+5;\n+\n+function testFiniteTypesWithPositiveIntegers() {\n+    d n = +3;\n+    d comparator = +3;\n+    if (n == comparator) {\n+       n = +5;\n+    }\n+    if (n != 5){\n+        panic error(\"Type mismatch\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxMDk0Nw=="}, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTk4MjAwOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNTowMzo1NFrOGKWtZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNTowMzo1NFrOGKWtZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxMTAxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (n != 1.5){\n          \n          \n            \n                if (n != 1.5) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413511015", "createdAt": "2020-04-23T05:03:54Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "diffHunk": "@@ -461,6 +461,31 @@ function testFiniteTypesWithDiscriminatedMembers() returns [any, any, any, any,\n     return [a, b, c, d, e];\n }\n \n+type d +3|+5;\n+\n+function testFiniteTypesWithPositiveIntegers() {\n+    d n = +3;\n+    d comparator = +3;\n+    if (n == comparator) {\n+       n = +5;\n+    }\n+    if (n != 5){\n+        panic error(\"Type mismatch\");\n+    }\n+}\n+\n+type f +1.2|+1.5;\n+\n+function testFiniteTypesWithPositiveFloats() {\n+    f n = +1.2;\n+    f comparator = +1.2;\n+    if (n == comparator) {\n+       n = +1.5;\n+    }\n+    if (n != 1.5){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3757, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}