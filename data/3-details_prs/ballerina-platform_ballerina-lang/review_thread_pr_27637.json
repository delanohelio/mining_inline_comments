{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NTEzMDA0", "number": 27637, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwODoyNDoxOVrOFMCWyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwODoyNDoxOVrOFMCWyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MTY1ODMzOnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/scheduling/AsyncUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwODoyNDoxOVrOIPjDRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwODoyNDoxOVrOIPjDRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzE3MzgzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final FutureValue future = scheduler.createFuture(parent, null, null,\n          \n          \n            \n                     final FutureValue future = scheduler.createFuture(parent, null, null, ((BFunctionType) func.getType()).retType,\n          \n          \n            \n                                                                      name, metadata);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27637#discussion_r553173831", "createdAt": "2021-01-07T08:24:19Z", "author": {"login": "warunalakshitha"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/scheduling/AsyncUtils.java", "diffHunk": "@@ -157,6 +159,55 @@ public void notifyFailure(BError error) {\n         invokeFunctionPointerAsync(func, strand, strandName, metadata, argsSupplier.get(), callback, scheduler);\n     }\n \n+    public static FutureValue invokeAndForgetFunctionPointerAsync(BFunctionPointer<?, ?> func, Strand parent,\n+                                                                  String name, StrandMetadata metadata, Object[] args,\n+                                                                  AsyncFunctionCallback callback,\n+                                                                  Scheduler scheduler) {\n+\n+        final FutureValue future = scheduler.createFuture(parent, null, null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9303d747e557acc225669d68cc0e6d8d90588918"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2811, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}