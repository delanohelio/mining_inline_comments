{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNjcxMTEx", "number": 26035, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDozMzoxOVrOEmgYEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDozMzoxOVrOEmgYEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODExNzkzOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDozMzoxOVrOHWkcvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTozMDoxM1rOHWngmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQyNzkwMg==", "bodyText": "\u26cf\ufe0f Extract this out of for loop? Symbols.isFlagOn(structureType.flags, Flags.READONLY)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26035#discussion_r493427902", "createdAt": "2020-09-23T10:33:19Z", "author": {"login": "KRVPerera"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -2228,24 +2228,32 @@ private void validateFieldsAndSetReadOnlyType(List<BLangNode> typeDefNodes, Symb\n                 continue;\n             }\n \n-            boolean allReadOnlyOrFinalFields = true;\n+            boolean allImmutableFields = true;\n \n             Collection<BField> fields = structureType.fields.values();\n \n             if (fields.isEmpty()) {\n                 continue;\n             }\n \n-            int flagToCheck = nodeKind == NodeKind.RECORD_TYPE ? Flags.READONLY : Flags.FINAL;\n-\n-            for (BField field : fields) {\n-                if (!Symbols.isFlagOn(field.symbol.flags, flagToCheck)) {\n-                    allReadOnlyOrFinalFields = false;\n-                    break;\n+            if (nodeKind == NodeKind.RECORD_TYPE) {\n+                for (BField field : fields) {\n+                    if (!Symbols.isFlagOn(field.symbol.flags, Flags.READONLY)) {\n+                        allImmutableFields = false;\n+                        break;\n+                    }\n+                }\n+            } else {\n+                for (BField field : fields) {\n+                    if (!Symbols.isFlagOn(field.symbol.flags, Flags.FINAL) ||\n+                            !Symbols.isFlagOn(structureType.flags, Flags.READONLY)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "203fa31e83c532d71abd40a793effd2e7837b3f6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ3ODA0MA==", "bodyText": "We don't actually need this check here now since object type descriptor fields cannot be marked as final. Removed in e2badab.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26035#discussion_r493478040", "createdAt": "2020-09-23T11:30:13Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -2228,24 +2228,32 @@ private void validateFieldsAndSetReadOnlyType(List<BLangNode> typeDefNodes, Symb\n                 continue;\n             }\n \n-            boolean allReadOnlyOrFinalFields = true;\n+            boolean allImmutableFields = true;\n \n             Collection<BField> fields = structureType.fields.values();\n \n             if (fields.isEmpty()) {\n                 continue;\n             }\n \n-            int flagToCheck = nodeKind == NodeKind.RECORD_TYPE ? Flags.READONLY : Flags.FINAL;\n-\n-            for (BField field : fields) {\n-                if (!Symbols.isFlagOn(field.symbol.flags, flagToCheck)) {\n-                    allReadOnlyOrFinalFields = false;\n-                    break;\n+            if (nodeKind == NodeKind.RECORD_TYPE) {\n+                for (BField field : fields) {\n+                    if (!Symbols.isFlagOn(field.symbol.flags, Flags.READONLY)) {\n+                        allImmutableFields = false;\n+                        break;\n+                    }\n+                }\n+            } else {\n+                for (BField field : fields) {\n+                    if (!Symbols.isFlagOn(field.symbol.flags, Flags.FINAL) ||\n+                            !Symbols.isFlagOn(structureType.flags, Flags.READONLY)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQyNzkwMg=="}, "originalCommit": {"oid": "203fa31e83c532d71abd40a793effd2e7837b3f6"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 22, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}