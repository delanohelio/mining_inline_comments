{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2OTI2MjA3", "number": 22396, "reviewThreads": {"totalCount": 42, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxODowNVrODtgW4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjozMTo0MVrODtgpuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQyNjU4OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_request.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxODowNVrOF-952Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxODowNVrOF-952Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MDI2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + extraPathInfo - The part of the url which matched to '*', if the request is dispatched to a wildcard resource\n          \n          \n            \n            # + extraPathInfo - The part of the URL, which matched to '*' if the request is dispatched to a wildcard resource", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401570265", "createdAt": "2020-04-01T12:18:05Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_request.bal", "diffHunk": "@@ -26,7 +26,7 @@ import ballerina/time;\n # + method - The HTTP request method\n # + httpVersion - The HTTP version supported by the client\n # + userAgent - The user-agent. This value is used when setting the `user-agent` header\n-# + extraPathInfo - Additional information associated with the URL provided by the client\n+# + extraPathInfo - The part of the url which matched to '*', if the request is dispatched to a wildcard resource", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQyODc5OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxODo0NVrOF-97Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxODo0NVrOF-97Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MDYxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n          \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING`, the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401570618", "createdAt": "2020-04-01T12:18:45Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -87,8 +87,9 @@ public type Response object {\n     # these values is returned.\n     #\n     # + headerName - The header name\n-    # + position - Represents the position of the header as an optional parameter\n-    # + return - The first header value for the specified header name. An exception is thrown if no header is found. Use\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQyOTM4OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxODo1NlrOF-97qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxODo1NlrOF-97qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MDcyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              Entity-body of the `Response` must be accessed initially.\n          \n          \n            \n                #              entity-body of the `Response` must be accessed initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401570728", "createdAt": "2020-04-01T12:18:56Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -87,8 +87,9 @@ public type Response object {\n     # these values is returned.\n     #\n     # + headerName - The header name\n-    # + position - Represents the position of the header as an optional parameter\n-    # + return - The first header value for the specified header name. An exception is thrown if no header is found. Use\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Response` must be accessed initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQzMDUyOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxOToxM1rOF-98Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxOToxM1rOF-98Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MDkwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n          \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING`, the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401570902", "createdAt": "2020-04-01T12:19:13Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -100,7 +101,8 @@ public type Response object {\n     #\n     # + headerName - The header name\n     # + headerValue - The header value\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQzMTE2OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxOToyNFrOF-98vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxOToyNFrOF-98vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTAwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              Entity-body of the `Response` must be accessed initially.\n          \n          \n            \n                #              entity-body of the `Response` must be accessed initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401571007", "createdAt": "2020-04-01T12:19:24Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -100,7 +101,8 @@ public type Response object {\n     #\n     # + headerName - The header name\n     # + headerValue - The header value\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Response` must be accessed initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQzMTk1OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxOTozOFrOF-99Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxOTozOFrOF-99Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTEzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n          \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING`, the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401571135", "createdAt": "2020-04-01T12:19:38Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -109,8 +111,9 @@ public type Response object {\n     # Gets all the header values to which the specified header key maps to.\n     #\n     # + headerName - The header name\n-    # + position - Represents the position of the header as an optional parameter\n-    # + return - The header values the specified header key maps to. An exception is thrown if no header is found. Use\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQzMjQ1OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxOTo0NVrOF-99kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoxOTo0NVrOF-99kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTIxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              Entity-body of the `Response` must be accessed initially.\n          \n          \n            \n                #              entity-body of the `Response` must be accessed initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401571218", "createdAt": "2020-04-01T12:19:45Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -109,8 +111,9 @@ public type Response object {\n     # Gets all the header values to which the specified header key maps to.\n     #\n     # + headerName - The header name\n-    # + position - Represents the position of the header as an optional parameter\n-    # + return - The header values the specified header key maps to. An exception is thrown if no header is found. Use\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Response` must be accessed initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQzMzEzOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDowMVrOF-9-CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDowMVrOF-9-CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTMzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n          \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING`, the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401571336", "createdAt": "2020-04-01T12:20:01Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -123,7 +126,8 @@ public type Response object {\n     #\n     # + headerName - The header name\n     # + headerValue - The header value\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQzMzYwOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDowOVrOF-9-UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDowOVrOF-9-UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTQwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              Entity-body of the `Response` must be accessed initially.\n          \n          \n            \n                #              entity-body of the `Response` must be accessed initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401571408", "createdAt": "2020-04-01T12:20:09Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -123,7 +126,8 @@ public type Response object {\n     #\n     # + headerName - The header name\n     # + headerValue - The header value\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Response` must be accessed initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQzNDI2OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDoyMVrOF-9-tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDoyMVrOF-9-tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTUwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n          \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING`, the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401571508", "createdAt": "2020-04-01T12:20:21Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -137,23 +141,26 @@ public type Response object {\n     # Removes the specified header from the response.\n     #\n     # + key - The header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQzNDkxOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDoyOVrOF-9_EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDoyOVrOF-9_EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTYwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              Entity-body of the `Response` must be accessed initially.\n          \n          \n            \n                #              entity-body of the `Response` must be accessed initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401571600", "createdAt": "2020-04-01T12:20:29Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -137,23 +141,26 @@ public type Response object {\n     # Removes the specified header from the response.\n     #\n     # + key - The header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Response` must be accessed initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQzNTUwOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDo0MlrOF-9_hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDo0MlrOF-9_hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTcxNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n          \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING`, the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401571716", "createdAt": "2020-04-01T12:20:42Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -137,23 +141,26 @@ public type Response object {\n     # Removes the specified header from the response.\n     #\n     # + key - The header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Response` must be accessed initially.\n     public function removeHeader(string key, public mime:HeaderPosition position = mime:LEADING) {\n         mime:Entity entity = self.getEntityWithoutBody();\n         entity.removeHeader(key, position);\n     }\n \n     # Removes all the headers from the response.\n     #\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQzNjE2OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDo1MVrOF-9_7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDo1MVrOF-9_7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTgyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              Entity-body of the `Response` must be accessed initially.\n          \n          \n            \n                #              entity-body of the `Response` must be accessed initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401571823", "createdAt": "2020-04-01T12:20:51Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -137,23 +141,26 @@ public type Response object {\n     # Removes the specified header from the response.\n     #\n     # + key - The header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Response` must be accessed initially.\n     public function removeHeader(string key, public mime:HeaderPosition position = mime:LEADING) {\n         mime:Entity entity = self.getEntityWithoutBody();\n         entity.removeHeader(key, position);\n     }\n \n     # Removes all the headers from the response.\n     #\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Response` must be accessed initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQzNjc4OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMTowNFrOF--AVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMTowNFrOF--AVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTkyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n          \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING`, the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401571926", "createdAt": "2020-04-01T12:21:04Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -137,23 +141,26 @@ public type Response object {\n     # Removes the specified header from the response.\n     #\n     # + key - The header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Response` must be accessed initially.\n     public function removeHeader(string key, public mime:HeaderPosition position = mime:LEADING) {\n         mime:Entity entity = self.getEntityWithoutBody();\n         entity.removeHeader(key, position);\n     }\n \n     # Removes all the headers from the response.\n     #\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Response` must be accessed initially.\n     public function removeAllHeaders(public mime:HeaderPosition position = mime:LEADING) {\n         mime:Entity entity = self.getEntityWithoutBody();\n         entity.removeAllHeaders(position);\n     }\n \n     # Gets all the names of the headers of the response.\n     #\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQzNzM5OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMToxM1rOF--AqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMToxM1rOF--AqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MjAwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              Entity-body of the `Response` must be accessed initially.\n          \n          \n            \n                #              entity-body of the `Response` must be accessed initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401572008", "createdAt": "2020-04-01T12:21:13Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -137,23 +141,26 @@ public type Response object {\n     # Removes the specified header from the response.\n     #\n     # + key - The header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Response` must be accessed initially.\n     public function removeHeader(string key, public mime:HeaderPosition position = mime:LEADING) {\n         mime:Entity entity = self.getEntityWithoutBody();\n         entity.removeHeader(key, position);\n     }\n \n     # Removes all the headers from the response.\n     #\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Response` must be accessed initially.\n     public function removeAllHeaders(public mime:HeaderPosition position = mime:LEADING) {\n         mime:Entity entity = self.getEntityWithoutBody();\n         entity.removeAllHeaders(position);\n     }\n \n     # Gets all the names of the headers of the response.\n     #\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Response` must be accessed initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQzODU0OnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMToyOVrOF--BZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMToyOVrOF--BZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MjE5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n          \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING`, the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401572197", "createdAt": "2020-04-01T12:21:29Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -380,10 +380,11 @@ public type Entity object {\n     # Gets the header value associated with the given header name.\n     #\n     # + headerName - Represents header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQzOTI2OnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMTo0MFrOF--B3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMTo0MFrOF--B3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MjMxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              Entity-body of the `Entity` must be accessed initially.\n          \n          \n            \n                #              body of the `Entity` must be accessed initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401572317", "createdAt": "2020-04-01T12:21:40Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -380,10 +380,11 @@ public type Entity object {\n     # Gets the header value associated with the given header name.\n     #\n     # + headerName - Represents header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ0MTc5OnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMjoxOFrOF--DVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMjoxOFrOF--DVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MjY5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n          \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING`, the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401572693", "createdAt": "2020-04-01T12:22:18Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -392,9 +393,10 @@ public type Entity object {\n     # Gets all the header values associated with the given header name.\n     #\n     # + headerName - The header name\n-    # + position - Represents the position of the header as an optional parameter\n-    # + return - All the header values associated with the given header name as a `string[]`. An exception is thrown\n-    #            if no header is found. Use `Entity.hasHeader()` beforehand to check the existence of header.\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ0MjQ3OnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMjozMFrOF--Dtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMjozMFrOF--Dtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3Mjc5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              Entity-body of the `Entity` must be accessed initially.\n          \n          \n            \n                #             body of the `Entity` must be accessed initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401572790", "createdAt": "2020-04-01T12:22:30Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -392,9 +393,10 @@ public type Entity object {\n     # Gets all the header values associated with the given header name.\n     #\n     # + headerName - The header name\n-    # + position - Represents the position of the header as an optional parameter\n-    # + return - All the header values associated with the given header name as a `string[]`. An exception is thrown\n-    #            if no header is found. Use `Entity.hasHeader()` beforehand to check the existence of header.\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ0MzYwOnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMjo1MFrOF--EaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMjo1MFrOF--EaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3Mjk2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #            found. Use `Entity.hasHeader()` beforehand to check the existence of header.\n          \n          \n            \n                #            found. Use the `Entity.hasHeader()` beforehand to check the existence of a header.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401572969", "createdAt": "2020-04-01T12:22:50Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -392,9 +393,10 @@ public type Entity object {\n     # Gets all the header values associated with the given header name.\n     #\n     # + headerName - The header name\n-    # + position - Represents the position of the header as an optional parameter\n-    # + return - All the header values associated with the given header name as a `string[]`. An exception is thrown\n-    #            if no header is found. Use `Entity.hasHeader()` beforehand to check the existence of header.\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.\n+    # + return - All the header values associated with the given header name as a `string[]`. Panic if no header is\n+    #            found. Use `Entity.hasHeader()` beforehand to check the existence of header.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ0NTQzOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_request.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMzoyMlrOF--Fig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMzoyMlrOF--Fig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MzI1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #            `Request.hasHeader()` beforehand to check the existence of header.\n          \n          \n            \n                #            the `Request.hasHeader()` beforehand to check the existence of a header.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401573258", "createdAt": "2020-04-01T12:23:22Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_request.bal", "diffHunk": "@@ -125,7 +125,7 @@ public type Request object {\n     # these values is returned.\n     #\n     # + headerName - The header name\n-    # + return - The first header value for the specified header name. An exception is thrown if no header is found. Use\n+    # + return - The first header value for the specified header name. Panic if the header is not found. Use\n     #            `Request.hasHeader()` beforehand to check the existence of header.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ0OTE0OnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyNDoyMlrOF--Htg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyNDoyMlrOF--Htg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MzgxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #            beforehand to check the existence of header.\n          \n          \n            \n                #            beforehand to check the existence of a header.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401573814", "createdAt": "2020-04-01T12:24:22Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -380,10 +380,11 @@ public type Entity object {\n     # Gets the header value associated with the given header name.\n     #\n     # + headerName - Represents header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.\n     # + return - Header value associated with the given header name as a `string`. If multiple header values are\n-    #            present, then the first value is returned. An exception is thrown if no header is found. Use\n-    #            `Entity.hasHeader()` beforehand to check the existence of header.\n+    #            present, then the first value is returned. Panic if no header is found. Use `Entity.hasHeader()`\n+    #            beforehand to check the existence of header.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ1MDcwOnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyNDo0N1rOF--Iow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyNDo0N1rOF--Iow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NDA1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n          \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING`, the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401574051", "createdAt": "2020-04-01T12:24:47Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -409,7 +411,8 @@ public type Entity object {\n \n     # Gets all header names.\n     #\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ1MTI2OnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyNDo1NlrOF--I-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyNDo1NlrOF--I-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NDEzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              Entity-body of the `Entity` must be accessed initially.\n          \n          \n            \n                #              body of the `Entity` must be accessed initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401574138", "createdAt": "2020-04-01T12:24:56Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -409,7 +411,8 @@ public type Entity object {\n \n     # Gets all header names.\n     #\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ1MTg2OnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyNTowOFrOF--JXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyNTowOFrOF--JXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NDIzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n          \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING`, the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401574236", "createdAt": "2020-04-01T12:25:08Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -426,7 +429,8 @@ public type Entity object {\n     #\n     # + headerName - The header name\n     # + headerValue - Represents the header value to be added\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ1MjU0OnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyNToxOFrOF--JyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyNToxOFrOF--JyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NDM0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              Entity-body of the `Entity` must be accessed initially.\n          \n          \n            \n                #              body of the `Entity` must be accessed initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401574344", "createdAt": "2020-04-01T12:25:18Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -426,7 +429,8 @@ public type Entity object {\n     #\n     # + headerName - The header name\n     # + headerValue - Represents the header value to be added\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ1MzI0OnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyNToyOVrOF--KLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyNToyOVrOF--KLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NDQ0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n          \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING`, the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401574445", "createdAt": "2020-04-01T12:25:29Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -436,30 +440,34 @@ public type Entity object {\n     #\n     # + headerName - The header name\n     # + headerValue - Represents the header value\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ1MzkzOnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyNTo0MVrOF--Kmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyNTo0MVrOF--Kmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NDU1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              Entity-body of the `Entity` must be accessed initially.\n          \n          \n            \n                #              body of the `Entity` must be accessed initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401574555", "createdAt": "2020-04-01T12:25:41Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -436,30 +440,34 @@ public type Entity object {\n     #\n     # + headerName - The header name\n     # + headerValue - Represents the header value\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ2MzU2OnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyODoyNFrOF--Qow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyODoyNFrOF--Qow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NjA5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n          \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING`, the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401576099", "createdAt": "2020-04-01T12:28:24Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -436,30 +440,34 @@ public type Entity object {\n     #\n     # + headerName - The header name\n     # + headerValue - Represents the header value\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.\n     public function setHeader(@untainted string headerName, string headerValue, public HeaderPosition position = LEADING) {\n         return externSetHeader(self, java:fromString(headerName), java:fromString(headerValue), position);\n     }\n \n     # Removes the given header from the entity.\n     #\n     # + headerName - Represents the header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ2NDI4OnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyODozNVrOF--RBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyODozNVrOF--RBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NjE5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              Entity-body of the `Entity` must be accessed initially.\n          \n          \n            \n                #              body of the `Entity` must be accessed initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401576197", "createdAt": "2020-04-01T12:28:35Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -436,30 +440,34 @@ public type Entity object {\n     #\n     # + headerName - The header name\n     # + headerValue - Represents the header value\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.\n     public function setHeader(@untainted string headerName, string headerValue, public HeaderPosition position = LEADING) {\n         return externSetHeader(self, java:fromString(headerName), java:fromString(headerValue), position);\n     }\n \n     # Removes the given header from the entity.\n     #\n     # + headerName - Represents the header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ2NDcxOnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyODo0MlrOF--RSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyODo0MlrOF--RSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NjI2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n          \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING`, the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401576266", "createdAt": "2020-04-01T12:28:42Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -436,30 +440,34 @@ public type Entity object {\n     #\n     # + headerName - The header name\n     # + headerValue - Represents the header value\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.\n     public function setHeader(@untainted string headerName, string headerValue, public HeaderPosition position = LEADING) {\n         return externSetHeader(self, java:fromString(headerName), java:fromString(headerValue), position);\n     }\n \n     # Removes the given header from the entity.\n     #\n     # + headerName - Represents the header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.\n     public function removeHeader(@untainted string headerName, public HeaderPosition position = LEADING) {\n         return externRemoveHeader(self, java:fromString(headerName), position);\n     }\n \n     # Removes all headers associated with the entity.\n     #\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ2NTM1OnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyODo1MlrOF--RsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyODo1MlrOF--RsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NjM2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              Entity-body of the `Entity` must be accessed initially.\n          \n          \n            \n                #              body of the `Entity` must be accessed initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401576369", "createdAt": "2020-04-01T12:28:52Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -436,30 +440,34 @@ public type Entity object {\n     #\n     # + headerName - The header name\n     # + headerValue - Represents the header value\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.\n     public function setHeader(@untainted string headerName, string headerValue, public HeaderPosition position = LEADING) {\n         return externSetHeader(self, java:fromString(headerName), java:fromString(headerValue), position);\n     }\n \n     # Removes the given header from the entity.\n     #\n     # + headerName - Represents the header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.\n     public function removeHeader(@untainted string headerName, public HeaderPosition position = LEADING) {\n         return externRemoveHeader(self, java:fromString(headerName), position);\n     }\n \n     # Removes all headers associated with the entity.\n     #\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ2NTk4OnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyOTowMVrOF--SDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyOTowMVrOF--SDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NjQ2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n          \n          \n            \n                # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING`, the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401576460", "createdAt": "2020-04-01T12:29:01Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -436,30 +440,34 @@ public type Entity object {\n     #\n     # + headerName - The header name\n     # + headerValue - Represents the header value\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.\n     public function setHeader(@untainted string headerName, string headerValue, public HeaderPosition position = LEADING) {\n         return externSetHeader(self, java:fromString(headerName), java:fromString(headerValue), position);\n     }\n \n     # Removes the given header from the entity.\n     #\n     # + headerName - Represents the header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.\n     public function removeHeader(@untainted string headerName, public HeaderPosition position = LEADING) {\n         return externRemoveHeader(self, java:fromString(headerName), position);\n     }\n \n     # Removes all headers associated with the entity.\n     #\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.\n     public function removeAllHeaders(public HeaderPosition position = LEADING) {\n         return externRemoveAllHeaders(self, position);\n     }\n \n     # Checks whether the requested header key exists in the header map.\n     #\n     # + headerName - The header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ2NjU4OnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyOToxMFrOF--SZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyOToxMFrOF--SZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NjU0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              Entity-body of the `Entity` must be accessed initially.\n          \n          \n            \n                #              body of the `Entity` must be accessed initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401576549", "createdAt": "2020-04-01T12:29:10Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -436,30 +440,34 @@ public type Entity object {\n     #\n     # + headerName - The header name\n     # + headerValue - Represents the header value\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.\n     public function setHeader(@untainted string headerName, string headerValue, public HeaderPosition position = LEADING) {\n         return externSetHeader(self, java:fromString(headerName), java:fromString(headerValue), position);\n     }\n \n     # Removes the given header from the entity.\n     #\n     # + headerName - Represents the header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.\n     public function removeHeader(@untainted string headerName, public HeaderPosition position = LEADING) {\n         return externRemoveHeader(self, java:fromString(headerName), position);\n     }\n \n     # Removes all headers associated with the entity.\n     #\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.\n     public function removeAllHeaders(public HeaderPosition position = LEADING) {\n         return externRemoveAllHeaders(self, position);\n     }\n \n     # Checks whether the requested header key exists in the header map.\n     #\n     # + headerName - The header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ2NzIwOnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyOToyMVrOF--S3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyOToyMVrOF--S3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NjY2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - The first header value for the specified header name. Panic if no header is found. Ideally\n          \n          \n            \n                # + return - The first header value for the specified header name. Panic if no header is found. Ideally,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401576669", "createdAt": "2020-04-01T12:29:21Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "diffHunk": "@@ -280,17 +280,17 @@ public type Notification object {\n     # these values is returned.\n     #\n     # + headerName - The header name\n-    # + return - The first header value for the specified header name. An exception is thrown if no header is found.\n-    #            Ideally `Notification.hasHeader()` needs to be used to check the existence of header initially.\n+    # + return - The first header value for the specified header name. Panic if no header is found. Ideally", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ2Nzg1OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyOTozM1rOF--TRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyOTozM1rOF--TRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3Njc3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #            `Notification.hasHeader()` needs to be used to check the existence of header initially.\n          \n          \n            \n                #           the `Notification.hasHeader()` needs to be used to check the existence of a header initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401576773", "createdAt": "2020-04-01T12:29:33Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "diffHunk": "@@ -280,17 +280,17 @@ public type Notification object {\n     # these values is returned.\n     #\n     # + headerName - The header name\n-    # + return - The first header value for the specified header name. An exception is thrown if no header is found.\n-    #            Ideally `Notification.hasHeader()` needs to be used to check the existence of header initially.\n+    # + return - The first header value for the specified header name. Panic if no header is found. Ideally\n+    #            `Notification.hasHeader()` needs to be used to check the existence of header initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ2ODM1OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyOTo0M1rOF--TlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyOTo0M1rOF--TlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3Njg1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - The header values the specified header key maps to. Panic if no header is found. Ideally\n          \n          \n            \n                # + return - The header values the specified header key maps to. Panic if no header is found. Ideally,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401576853", "createdAt": "2020-04-01T12:29:43Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "diffHunk": "@@ -280,17 +280,17 @@ public type Notification object {\n     # these values is returned.\n     #\n     # + headerName - The header name\n-    # + return - The first header value for the specified header name. An exception is thrown if no header is found.\n-    #            Ideally `Notification.hasHeader()` needs to be used to check the existence of header initially.\n+    # + return - The first header value for the specified header name. Panic if no header is found. Ideally\n+    #            `Notification.hasHeader()` needs to be used to check the existence of header initially.\n     public function getHeader(string headerName) returns @tainted string {\n         return self.request.getHeader(headerName);\n     }\n \n     # Retrieves all the header values to which the specified header key maps to.\n     #\n     # + headerName - The header name\n-    # + return - The header values the specified header key maps to. An exception is thrown if no header is found.\n-    #            Ideally `Notification.hasHeader()` needs to be used to check the existence of header initially.\n+    # + return - The header values the specified header key maps to. Panic if no header is found. Ideally", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ2ODg0OnYy", "diffSide": "RIGHT", "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyOTo1M1rOF--T7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyOTo1M1rOF--T7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3Njk0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #            `Notification.hasHeader()` needs to be used to check the existence of header initially.\n          \n          \n            \n                #            the `Notification.hasHeader()` needs to be used to check the existence of a header initially.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401576940", "createdAt": "2020-04-01T12:29:53Z", "author": {"login": "praneesha"}, "path": "stdlib/websub/src/main/ballerina/src/websub/commons.bal", "diffHunk": "@@ -280,17 +280,17 @@ public type Notification object {\n     # these values is returned.\n     #\n     # + headerName - The header name\n-    # + return - The first header value for the specified header name. An exception is thrown if no header is found.\n-    #            Ideally `Notification.hasHeader()` needs to be used to check the existence of header initially.\n+    # + return - The first header value for the specified header name. Panic if no header is found. Ideally\n+    #            `Notification.hasHeader()` needs to be used to check the existence of header initially.\n     public function getHeader(string headerName) returns @tainted string {\n         return self.request.getHeader(headerName);\n     }\n \n     # Retrieves all the header values to which the specified header key maps to.\n     #\n     # + headerName - The header name\n-    # + return - The header values the specified header key maps to. An exception is thrown if no header is found.\n-    #            Ideally `Notification.hasHeader()` needs to be used to check the existence of header initially.\n+    # + return - The header values the specified header key maps to. Panic if no header is found. Ideally\n+    #            `Notification.hasHeader()` needs to be used to check the existence of header initially.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ2OTk0OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_request.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjozMDoxNlrOF--Uog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjozMDoxNlrOF--Uog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NzEyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #            `Request.hasHeader()` beforehand to check the existence of header.\n          \n          \n            \n                #            the `Request.hasHeader()` beforehand to check the existence of a header.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401577122", "createdAt": "2020-04-01T12:30:16Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_request.bal", "diffHunk": "@@ -135,7 +135,7 @@ public type Request object {\n     # Gets all the header values to which the specified header key maps to.\n     #\n     # + headerName - The header name\n-    # + return - The header values the specified header key maps to. An exception is thrown if no header is found. Use\n+    # + return - The header values the specified header key maps to. Panic if the header is not found. Use\n     #            `Request.hasHeader()` beforehand to check the existence of header.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ3MjQ4OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjozMTowMVrOF--WRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjozMTowMVrOF--WRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NzU0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #            `Response.hasHeader()` beforehand to check the existence of header.\n          \n          \n            \n                #            the `Response.hasHeader()` beforehand to check the existence of a header.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401577541", "createdAt": "2020-04-01T12:31:01Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -87,8 +87,9 @@ public type Response object {\n     # these values is returned.\n     #\n     # + headerName - The header name\n-    # + position - Represents the position of the header as an optional parameter\n-    # + return - The first header value for the specified header name. An exception is thrown if no header is found. Use\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Response` must be accessed initially.\n+    # + return - The first header value for the specified header name. Panic if the header is not found. Use\n     #            `Response.hasHeader()` beforehand to check the existence of header.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ3MzcxOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjozMToyM1rOF--XHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjozMToyM1rOF--XHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3Nzc1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #            `Response.hasHeader()` beforehand to check the existence of header.\n          \n          \n            \n                #            the `Response.hasHeader()` beforehand to check the existence of a header.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401577757", "createdAt": "2020-04-01T12:31:23Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_response.bal", "diffHunk": "@@ -109,8 +111,9 @@ public type Response object {\n     # Gets all the header values to which the specified header key maps to.\n     #\n     # + headerName - The header name\n-    # + position - Represents the position of the header as an optional parameter\n-    # + return - The header values the specified header key maps to. An exception is thrown if no header is found. Use\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Response` must be accessed initially.\n+    # + return - The header values the specified header key maps to. Panic if the header is not found. Use\n     #            `Response.hasHeader()` beforehand to check the existence of header.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ3NDgwOnYy", "diffSide": "RIGHT", "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjozMTo0MVrOF--Xuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjozMTo0MVrOF--Xuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3NzkxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #            present, then the first value is returned. Panic if no header is found. Use `Entity.hasHeader()`\n          \n          \n            \n                #            present, then the first value is returned. Panic if no header is found. Use the `Entity.hasHeader()`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22396#discussion_r401577915", "createdAt": "2020-04-01T12:31:41Z", "author": {"login": "praneesha"}, "path": "stdlib/mime/src/main/ballerina/src/mime/natives.bal", "diffHunk": "@@ -380,10 +380,11 @@ public type Entity object {\n     # Gets the header value associated with the given header name.\n     #\n     # + headerName - Represents header name\n-    # + position - Represents the position of the header as an optional parameter\n+    # + position - Represents the position of the header as an optional parameter. If the position is `mime:TRAILING` the\n+    #              Entity-body of the `Entity` must be accessed initially.\n     # + return - Header value associated with the given header name as a `string`. If multiple header values are\n-    #            present, then the first value is returned. An exception is thrown if no header is found. Use\n-    #            `Entity.hasHeader()` beforehand to check the existence of header.\n+    #            present, then the first value is returned. Panic if no header is found. Use `Entity.hasHeader()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd249e685015ec548858ee3d4415204cf43a850"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4503, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}