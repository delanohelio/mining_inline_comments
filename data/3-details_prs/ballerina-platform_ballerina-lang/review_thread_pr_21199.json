{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MjM2MDA4", "number": 21199, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMTo0ODo1M1rODiihew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMjowNjowOVrODiiseA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NTQzODAzOnYy", "diffSide": "RIGHT", "path": "stdlib/grpc/src/main/resources/templates/skeleton/message.mustache", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMTo0ODo1M1rOFt2F9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwODo1MDowNVrOFt9NnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYxNjUwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {{> message}}{{/each}}{{/if}}\n          \n          \n            \n            {{> message}}{{/each}}{{/if}}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21199#discussion_r383616503", "createdAt": "2020-02-25T01:48:53Z", "author": {"login": "daneshk"}, "path": "stdlib/grpc/src/main/resources/templates/skeleton/message.mustache", "diffHunk": "@@ -1,10 +1,29 @@\n public type {{messageName}} record {|\n     {{#fieldList}}{{fieldType}}{{#isNull defaultValue}}?{{/isNull}}{{fieldLabel}} {{{fieldName}}}{{#isNull defaultValue}} = (){{/isNull}}{{#isNotNull defaultValue}} = {{#equals fieldType \"string\"}}{{#if fieldLabel}}{{defaultValue}}{{else}}\"{{defaultValue}}\"{{/if}}{{/equals}}{{#not_equal fieldType \"string\"}}{{defaultValue}}{{/not_equal}}{{/isNotNull}};\n-    {{/fieldList}}{{#each oneofFieldMap as |value key|}}{{camelcase @key}} {{@key}};\n-    {{/each}}\n+    {{/fieldList ~}}\n+    {{#each oneofFieldMap as |value key|}}{{#each @value}}{{{fieldType}}}{{#isNull defaultValue}}{{/isNull}} {{{fieldName}}}?;\n+    {{/each ~}}\n+{{/each}}\n |};\n-{{#each oneofFieldMap}}\n-{{> oneoffield}}{{/each}}\n-{{#enumList}}\n+{{#if oneofFieldMap}}\n+function isValid{{camelcase messageName}}({{messageName}} r) returns boolean {\n+{{#each oneofFieldMap as |value key|}}    int {{@key}}Count = 0;\n+    {{#each @value}}if !(r?.{{{fieldName}}} is ()) {\n+        {{@key}}Count += 1;\n+    }\n+    {{/each}}\n+{{/each}}    if ({{#each oneofFieldMap as |value key|}}{{#unless @first}}|| {{/unless}}{{@key}}Count > 1 {{/each}}) {\n+        return false;\n+    }\n+    return true;\n+}\n+{{#each oneofFieldMap}}{{#each this}}\n+function set{{messageName}}_{{{camelcase fieldName}}}({{messageName}} r, {{{fieldType}}} {{{fieldName}}}) {\n+    r.{{{fieldName}}} = {{{fieldName}}};\n+    {{#each ../this}}{{#not_equal fieldName ../fieldName}}r.remove(\"{{fieldName}}\");\n+    {{/not_equal}}{{/each}}\n+}{{/each}}\n+{{/each}}\n+{{/if}}{{#enumList}}\n {{> enum}}{{/enumList}}{{#if this.nestedMessageList}}{{#each this.nestedMessageList}}\n {{> message}}{{/each}}{{/if}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1173ae7ff6266148258279a0f0d021eac0b7b9"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzczMzE0OQ==", "bodyText": "fixed in 188fb2a", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21199#discussion_r383733149", "createdAt": "2020-02-25T08:50:05Z", "author": {"login": "BuddhiWathsala"}, "path": "stdlib/grpc/src/main/resources/templates/skeleton/message.mustache", "diffHunk": "@@ -1,10 +1,29 @@\n public type {{messageName}} record {|\n     {{#fieldList}}{{fieldType}}{{#isNull defaultValue}}?{{/isNull}}{{fieldLabel}} {{{fieldName}}}{{#isNull defaultValue}} = (){{/isNull}}{{#isNotNull defaultValue}} = {{#equals fieldType \"string\"}}{{#if fieldLabel}}{{defaultValue}}{{else}}\"{{defaultValue}}\"{{/if}}{{/equals}}{{#not_equal fieldType \"string\"}}{{defaultValue}}{{/not_equal}}{{/isNotNull}};\n-    {{/fieldList}}{{#each oneofFieldMap as |value key|}}{{camelcase @key}} {{@key}};\n-    {{/each}}\n+    {{/fieldList ~}}\n+    {{#each oneofFieldMap as |value key|}}{{#each @value}}{{{fieldType}}}{{#isNull defaultValue}}{{/isNull}} {{{fieldName}}}?;\n+    {{/each ~}}\n+{{/each}}\n |};\n-{{#each oneofFieldMap}}\n-{{> oneoffield}}{{/each}}\n-{{#enumList}}\n+{{#if oneofFieldMap}}\n+function isValid{{camelcase messageName}}({{messageName}} r) returns boolean {\n+{{#each oneofFieldMap as |value key|}}    int {{@key}}Count = 0;\n+    {{#each @value}}if !(r?.{{{fieldName}}} is ()) {\n+        {{@key}}Count += 1;\n+    }\n+    {{/each}}\n+{{/each}}    if ({{#each oneofFieldMap as |value key|}}{{#unless @first}}|| {{/unless}}{{@key}}Count > 1 {{/each}}) {\n+        return false;\n+    }\n+    return true;\n+}\n+{{#each oneofFieldMap}}{{#each this}}\n+function set{{messageName}}_{{{camelcase fieldName}}}({{messageName}} r, {{{fieldType}}} {{{fieldName}}}) {\n+    r.{{{fieldName}}} = {{{fieldName}}};\n+    {{#each ../this}}{{#not_equal fieldName ../fieldName}}r.remove(\"{{fieldName}}\");\n+    {{/not_equal}}{{/each}}\n+}{{/each}}\n+{{/each}}\n+{{/if}}{{#enumList}}\n {{> enum}}{{/enumList}}{{#if this.nestedMessageList}}{{#each this.nestedMessageList}}\n {{> message}}{{/each}}{{/if}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYxNjUwMw=="}, "originalCommit": {"oid": "ca1173ae7ff6266148258279a0f0d021eac0b7b9"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NTQ2NjE2OnYy", "diffSide": "RIGHT", "path": "stdlib/grpc/src/main/resources/templates/skeleton/message.mustache", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMjowNjowOVrOFt2XAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwODo1MDoxNlrOFt9OAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYyMDg2Ng==", "bodyText": "Shall we move this logic to oneoffield.mustache file? refer that file here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21199#discussion_r383620866", "createdAt": "2020-02-25T02:06:09Z", "author": {"login": "daneshk"}, "path": "stdlib/grpc/src/main/resources/templates/skeleton/message.mustache", "diffHunk": "@@ -1,10 +1,29 @@\n public type {{messageName}} record {|\n     {{#fieldList}}{{fieldType}}{{#isNull defaultValue}}?{{/isNull}}{{fieldLabel}} {{{fieldName}}}{{#isNull defaultValue}} = (){{/isNull}}{{#isNotNull defaultValue}} = {{#equals fieldType \"string\"}}{{#if fieldLabel}}{{defaultValue}}{{else}}\"{{defaultValue}}\"{{/if}}{{/equals}}{{#not_equal fieldType \"string\"}}{{defaultValue}}{{/not_equal}}{{/isNotNull}};\n-    {{/fieldList}}{{#each oneofFieldMap as |value key|}}{{camelcase @key}} {{@key}};\n-    {{/each}}\n+    {{/fieldList ~}}\n+    {{#each oneofFieldMap as |value key|}}{{#each @value}}{{{fieldType}}}{{#isNull defaultValue}}{{/isNull}} {{{fieldName}}}?;\n+    {{/each ~}}\n+{{/each}}\n |};\n-{{#each oneofFieldMap}}\n-{{> oneoffield}}{{/each}}\n-{{#enumList}}\n+{{#if oneofFieldMap}}\n+function isValid{{camelcase messageName}}({{messageName}} r) returns boolean {\n+{{#each oneofFieldMap as |value key|}}    int {{@key}}Count = 0;\n+    {{#each @value}}if !(r?.{{{fieldName}}} is ()) {\n+        {{@key}}Count += 1;\n+    }\n+    {{/each}}\n+{{/each}}    if ({{#each oneofFieldMap as |value key|}}{{#unless @first}}|| {{/unless}}{{@key}}Count > 1 {{/each}}) {\n+        return false;\n+    }\n+    return true;\n+}\n+{{#each oneofFieldMap}}{{#each this}}\n+function set{{messageName}}_{{{camelcase fieldName}}}({{messageName}} r, {{{fieldType}}} {{{fieldName}}}) {\n+    r.{{{fieldName}}} = {{{fieldName}}};\n+    {{#each ../this}}{{#not_equal fieldName ../fieldName}}r.remove(\"{{fieldName}}\");\n+    {{/not_equal}}{{/each}}\n+}{{/each}}\n+{{/each}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca1173ae7ff6266148258279a0f0d021eac0b7b9"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzczMzI0OA==", "bodyText": "fixed in 188fb2a", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21199#discussion_r383733248", "createdAt": "2020-02-25T08:50:16Z", "author": {"login": "BuddhiWathsala"}, "path": "stdlib/grpc/src/main/resources/templates/skeleton/message.mustache", "diffHunk": "@@ -1,10 +1,29 @@\n public type {{messageName}} record {|\n     {{#fieldList}}{{fieldType}}{{#isNull defaultValue}}?{{/isNull}}{{fieldLabel}} {{{fieldName}}}{{#isNull defaultValue}} = (){{/isNull}}{{#isNotNull defaultValue}} = {{#equals fieldType \"string\"}}{{#if fieldLabel}}{{defaultValue}}{{else}}\"{{defaultValue}}\"{{/if}}{{/equals}}{{#not_equal fieldType \"string\"}}{{defaultValue}}{{/not_equal}}{{/isNotNull}};\n-    {{/fieldList}}{{#each oneofFieldMap as |value key|}}{{camelcase @key}} {{@key}};\n-    {{/each}}\n+    {{/fieldList ~}}\n+    {{#each oneofFieldMap as |value key|}}{{#each @value}}{{{fieldType}}}{{#isNull defaultValue}}{{/isNull}} {{{fieldName}}}?;\n+    {{/each ~}}\n+{{/each}}\n |};\n-{{#each oneofFieldMap}}\n-{{> oneoffield}}{{/each}}\n-{{#enumList}}\n+{{#if oneofFieldMap}}\n+function isValid{{camelcase messageName}}({{messageName}} r) returns boolean {\n+{{#each oneofFieldMap as |value key|}}    int {{@key}}Count = 0;\n+    {{#each @value}}if !(r?.{{{fieldName}}} is ()) {\n+        {{@key}}Count += 1;\n+    }\n+    {{/each}}\n+{{/each}}    if ({{#each oneofFieldMap as |value key|}}{{#unless @first}}|| {{/unless}}{{@key}}Count > 1 {{/each}}) {\n+        return false;\n+    }\n+    return true;\n+}\n+{{#each oneofFieldMap}}{{#each this}}\n+function set{{messageName}}_{{{camelcase fieldName}}}({{messageName}} r, {{{fieldType}}} {{{fieldName}}}) {\n+    r.{{{fieldName}}} = {{{fieldName}}};\n+    {{#each ../this}}{{#not_equal fieldName ../fieldName}}r.remove(\"{{fieldName}}\");\n+    {{/not_equal}}{{/each}}\n+}{{/each}}\n+{{/each}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYyMDg2Ng=="}, "originalCommit": {"oid": "ca1173ae7ff6266148258279a0f0d021eac0b7b9"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1123, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}