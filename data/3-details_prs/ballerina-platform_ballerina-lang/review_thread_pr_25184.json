{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MjYwNjQw", "number": 25184, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNjo1MTo0NlrOEXE86g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNjo1MTo0NlrOEXE86g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjMzODM0OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolEnv.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNjo1MTo0NlrOG-qoOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMTozMToxOFrOG-zrwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM2MzMyMw==", "bodyText": "Should we try and extract this logic out to a separate method, since it seems to be used across multiple methods?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25184#discussion_r468363323", "createdAt": "2020-08-11T06:51:46Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolEnv.java", "diffHunk": "@@ -181,8 +181,14 @@ public static SymbolEnv createResourceActionSymbolEnv(BLangInvokableNode node, S\n     }\n \n     public static SymbolEnv createArrowFunctionSymbolEnv(BLangArrowFunction node, SymbolEnv env) {\n-        SymbolEnv symbolEnv = new SymbolEnv(node, new Scope(env.scope.owner));\n-        symbolEnv.enclEnv = env;\n+        Scope scope = new Scope(env.scope.owner);\n+        env.scope.entries.entrySet().stream()\n+                // skip the type narrowed symbols when taking the snapshot for closures.\n+                .filter(entry -> (entry.getValue().symbol.tag & SymTag.VARIABLE) != SymTag.VARIABLE ||\n+                        ((BVarSymbol) entry.getValue().symbol).originalSymbol == null)\n+                .forEach(entry -> scope.entries.put(entry.getKey(), entry.getValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "179a968ac6a61817b90bda742d1e3d8bf944e168"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUxMTY4MA==", "bodyText": "Yes, we should do it. Let me check.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25184#discussion_r468511680", "createdAt": "2020-08-11T11:31:18Z", "author": {"login": "Kishanthan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolEnv.java", "diffHunk": "@@ -181,8 +181,14 @@ public static SymbolEnv createResourceActionSymbolEnv(BLangInvokableNode node, S\n     }\n \n     public static SymbolEnv createArrowFunctionSymbolEnv(BLangArrowFunction node, SymbolEnv env) {\n-        SymbolEnv symbolEnv = new SymbolEnv(node, new Scope(env.scope.owner));\n-        symbolEnv.enclEnv = env;\n+        Scope scope = new Scope(env.scope.owner);\n+        env.scope.entries.entrySet().stream()\n+                // skip the type narrowed symbols when taking the snapshot for closures.\n+                .filter(entry -> (entry.getValue().symbol.tag & SymTag.VARIABLE) != SymTag.VARIABLE ||\n+                        ((BVarSymbol) entry.getValue().symbol).originalSymbol == null)\n+                .forEach(entry -> scope.entries.put(entry.getKey(), entry.getValue()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM2MzMyMw=="}, "originalCommit": {"oid": "179a968ac6a61817b90bda742d1e3d8bf944e168"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 355, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}