{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NjQ2ODcx", "number": 27488, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowNzowMFrOFFFwpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoxNTowOVrOFFF_xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODgxNTc0OnYy", "diffSide": "LEFT", "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/LSContextOperation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowNzowMFrOIFaxHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowNzowMFrOIFaxHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1MjM0OQ==", "bodyText": "Shall we use the PROJ_MODULES(\"ballerinaProject/modules\")? Because even in the new project structure, modules are the components we need to show in the project view.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27488#discussion_r542552349", "createdAt": "2020-12-14T17:07:00Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/LSContextOperation.java", "diffHunk": "@@ -41,7 +41,7 @@\n     TXT_FOLDING_RANGE(\"text/foldingRange\"),\n     WS_SYMBOL(\"workspace/symbol\"),\n     WS_EXEC_CMD(\"workspace/executeCommand\"),\n-    PROJ_MODULES(\"ballerinaProject/modules\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eea8d7fdd2769b26acba18cb2841c443dcc83c1c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODgyMDAwOnYy", "diffSide": "RIGHT", "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/extensions/ballerina/project/BallerinaProjectService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowNzo1MlrOIFazvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzowNzo1MlrOIFazvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1MzAyMQ==", "bodyText": "Let's keep using ModulesRequest", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27488#discussion_r542553021", "createdAt": "2020-12-14T17:07:52Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/extensions/ballerina/project/BallerinaProjectService.java", "diffHunk": "@@ -28,5 +28,5 @@\n @JsonSegment(\"ballerinaProject\")\n public interface BallerinaProjectService {\n     @JsonRequest\n-    CompletableFuture<ModulesResponse> modules(ModulesRequest request);\n+    CompletableFuture<PackagesResponse> packages(PackagesRequest request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eea8d7fdd2769b26acba18cb2841c443dcc83c1c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODg1NDQ3OnYy", "diffSide": "RIGHT", "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/extensions/ballerina/project/ModuleVisitor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoxNTowOVrOIFbJZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzowODo0NFrOIF8CRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1ODU2Nw==", "bodyText": "Instead of using the visitor to capture the symbols, what's the possibility of using https://github.com/ballerina-platform/ballerina-lang/blob/master/compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/SemanticModel.java#L60 API?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27488#discussion_r542558567", "createdAt": "2020-12-14T17:15:09Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/extensions/ballerina/project/ModuleVisitor.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.ballerinalang.langserver.extensions.ballerina.project;\n+\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonObject;\n+import io.ballerina.compiler.syntax.tree.FunctionDefinitionNode;\n+import io.ballerina.compiler.syntax.tree.Node;\n+import io.ballerina.compiler.syntax.tree.NodeVisitor;\n+import io.ballerina.compiler.syntax.tree.ServiceDeclarationNode;\n+import io.ballerina.compiler.syntax.tree.SyntaxKind;\n+import io.ballerina.compiler.syntax.tree.TypeDescriptorNode;\n+import io.ballerina.tools.text.LinePosition;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Visitor class for module visitor.\n+ */\n+public class ModuleVisitor extends NodeVisitor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eea8d7fdd2769b26acba18cb2841c443dcc83c1c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5NzQxNA==", "bodyText": "Reported current limitations in #27493", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27488#discussion_r543097414", "createdAt": "2020-12-15T07:08:44Z", "author": {"login": "prabushi"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/extensions/ballerina/project/ModuleVisitor.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.ballerinalang.langserver.extensions.ballerina.project;\n+\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonObject;\n+import io.ballerina.compiler.syntax.tree.FunctionDefinitionNode;\n+import io.ballerina.compiler.syntax.tree.Node;\n+import io.ballerina.compiler.syntax.tree.NodeVisitor;\n+import io.ballerina.compiler.syntax.tree.ServiceDeclarationNode;\n+import io.ballerina.compiler.syntax.tree.SyntaxKind;\n+import io.ballerina.compiler.syntax.tree.TypeDescriptorNode;\n+import io.ballerina.tools.text.LinePosition;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Visitor class for module visitor.\n+ */\n+public class ModuleVisitor extends NodeVisitor {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU1ODU2Nw=="}, "originalCommit": {"oid": "eea8d7fdd2769b26acba18cb2841c443dcc83c1c"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2743, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}