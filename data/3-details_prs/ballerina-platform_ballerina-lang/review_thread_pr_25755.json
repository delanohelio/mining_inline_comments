{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2MTQwMjYx", "number": 25755, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxMzo0NDo1MVrOEi4COw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDoxODo0N1rOEjKTCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MDA1MTE1OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/javainterop/RefTypeNegativeTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxMzo0NDo1MVrOHQ8jkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxMzo0NDo1MVrOHQ8jkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzMTQwOA==", "bodyText": "This might give check styles issues. Shall we fix all the check-styles/find-bugs issues?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25755#discussion_r487531408", "createdAt": "2020-09-13T13:44:51Z", "author": {"login": "SupunS"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/javainterop/RefTypeNegativeTests.java", "diffHunk": "@@ -24,7 +24,7 @@\n import org.ballerinalang.test.util.BAssertUtil;\n import org.ballerinalang.test.util.BCompileUtil;\n import org.ballerinalang.test.util.CompileResult;\n-import org.ballerinalang.util.diagnostic.Diagnostic;\n+import io.ballerina.tools.diagnostics.Diagnostic;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a10f988b54760e8b071091a891b965e01cce7243"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MDA1MzMzOnYy", "diffSide": "RIGHT", "path": "tests/ballerina-test-utils/src/main/java/org/ballerinalang/test/util/CompileResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxMzo0NzowOFrOHQ8ktQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNzo1MzowMVrOHQ-KlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzMTcwMQ==", "bodyText": "Shall we use an ordered list in the bLangPackage to store diagnostics? Then we don't have to sort it everytime..", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25755#discussion_r487531701", "createdAt": "2020-09-13T13:47:08Z", "author": {"login": "SupunS"}, "path": "tests/ballerina-test-utils/src/main/java/org/ballerinalang/test/util/CompileResult.java", "diffHunk": "@@ -34,27 +32,25 @@\n public class CompileResult {\n \n     private PackageNode pkgNode;\n-    private CompileResultDiagnosticListener diagnosticListener;\n \n     URLClassLoader classLoader;\n \n-    public CompileResult(CompileResultDiagnosticListener diagnosticListener) {\n-        this.diagnosticListener = diagnosticListener;\n+    public CompileResult() {\n     }\n \n     public Diagnostic[] getDiagnostics() {\n-        List<Diagnostic> diagnostics = this.diagnosticListener.getDiagnostics();\n-        diagnostics.sort(Comparator.comparing((Diagnostic d) -> d.getSource().getCompilationUnitName()).\n-                thenComparingInt(d -> d.getPosition().getStartLine()));\n+        List<Diagnostic> diagnostics = ((BLangPackage) this.pkgNode).getDiagnostics();\n+        diagnostics.sort(Comparator.comparing((Diagnostic d) -> d.location().lineRange().filePath()).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a10f988b54760e8b071091a891b965e01cce7243"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU1Nzc4MQ==", "bodyText": "+1 for using an ordered list. Sorting every time can be a burden when we are doing a migration between versions where there are considerable amount of diagnostics.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25755#discussion_r487557781", "createdAt": "2020-09-13T17:53:01Z", "author": {"login": "nadeeshaan"}, "path": "tests/ballerina-test-utils/src/main/java/org/ballerinalang/test/util/CompileResult.java", "diffHunk": "@@ -34,27 +32,25 @@\n public class CompileResult {\n \n     private PackageNode pkgNode;\n-    private CompileResultDiagnosticListener diagnosticListener;\n \n     URLClassLoader classLoader;\n \n-    public CompileResult(CompileResultDiagnosticListener diagnosticListener) {\n-        this.diagnosticListener = diagnosticListener;\n+    public CompileResult() {\n     }\n \n     public Diagnostic[] getDiagnostics() {\n-        List<Diagnostic> diagnostics = this.diagnosticListener.getDiagnostics();\n-        diagnostics.sort(Comparator.comparing((Diagnostic d) -> d.getSource().getCompilationUnitName()).\n-                thenComparingInt(d -> d.getPosition().getStartLine()));\n+        List<Diagnostic> diagnostics = ((BLangPackage) this.pkgNode).getDiagnostics();\n+        diagnostics.sort(Comparator.comparing((Diagnostic d) -> d.location().lineRange().filePath()).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzMTcwMQ=="}, "originalCommit": {"oid": "a10f988b54760e8b071091a891b965e01cce7243"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MzAzNTgwOnYy", "diffSide": "RIGHT", "path": "tests/ballerina-test-utils/src/main/java/org/ballerinalang/test/util/BCompileUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDoxNzo0N1rOHRXFQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDoxNzo0N1rOHRXFQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk2NjAxNw==", "bodyText": "no need of the listener parameter", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25755#discussion_r487966017", "createdAt": "2020-09-14T14:17:47Z", "author": {"login": "SupunS"}, "path": "tests/ballerina-test-utils/src/main/java/org/ballerinalang/test/util/BCompileUtil.java", "diffHunk": "@@ -499,18 +496,16 @@ public static CompileResult compile(String sourceRoot, String packageName, Compi\n     private static CompileResult compile(CompilerContext context, String packageName,\n                                          CompilerPhase compilerPhase, boolean withTests) {\n \n-        CompileResult.CompileResultDiagnosticListener listener = new CompileResult.CompileResultDiagnosticListener();\n-        context.put(DiagnosticListener.class, listener);\n-        return compile(context, listener, packageName, compilerPhase, withTests);\n+        return compile(context, null, packageName, compilerPhase, withTests);\n     }\n \n     private static CompileResult compile(CompilerContext context,\n-                                         CompileResult.CompileResultDiagnosticListener listener,\n+                                         String listener,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf32b5e1b993fad5445e95b4caa100585694d5d5"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MzA0MzI5OnYy", "diffSide": "RIGHT", "path": "misc/ballerinalang-data-mapper/src/test/java/org/ballerinalang/datamapper/util/TestUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDoxODo0N1rOHRXJXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDoxODo0N1rOHRXJXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk2NzA3MQ==", "bodyText": "lets remove this", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25755#discussion_r487967071", "createdAt": "2020-09-14T14:18:47Z", "author": {"login": "SupunS"}, "path": "misc/ballerinalang-data-mapper/src/test/java/org/ballerinalang/datamapper/util/TestUtil.java", "diffHunk": "@@ -61,6 +60,8 @@\n import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.ExecutionException;\n \n+//import io.ballerina.tools.diagnostics.Diagnostic;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf32b5e1b993fad5445e95b4caa100585694d5d5"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 91, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}