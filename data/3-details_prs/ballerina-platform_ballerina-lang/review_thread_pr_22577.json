{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxODUzNDg2", "number": 22577, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozODozNFrODwtlQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzoxNjozM1rODx8aiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDA1MDU4OnYy", "diffSide": "RIGHT", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozODozNFrOGD3Oaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozODozNFrOGD3Oaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMzcyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This module provides utility functions to manipulate built-in `xml` data type. \n          \n          \n            \n            This module provides utility functions to manipulate the built-in `xml` data type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r406703723", "createdAt": "2020-04-10T10:38:34Z", "author": {"login": "praneesha"}, "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/Module.md", "diffHunk": "@@ -2,50 +2,3 @@\n \n This module provides utility functions to manipulate built-in `xml` data type. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acc889a593724360357db7047c55116c1275e2ab"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDA1MTEwOnYy", "diffSide": "RIGHT", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozODo0NFrOGD3OtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozODo0NFrOGD3OtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMzc5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It provides APIs to convert a `json` to an `xml`, or convert a `table` to an `xml`.\n          \n          \n            \n            It provides APIs to convert a `json` to an `xml` or convert a `table` to an `xml`.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r406703796", "createdAt": "2020-04-10T10:38:44Z", "author": {"login": "praneesha"}, "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/Module.md", "diffHunk": "@@ -2,50 +2,3 @@\n \n This module provides utility functions to manipulate built-in `xml` data type. \n It provides APIs to convert a `json` to an `xml`, or convert a `table` to an `xml`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acc889a593724360357db7047c55116c1275e2ab"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjk2MjYwOnYy", "diffSide": "RIGHT", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzoxNToxNlrOGFstuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzoxNToxNlrOGFstuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyODY2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + jsonValue - The json source\n          \n          \n            \n            # + jsonValue - The JSON source", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408628664", "createdAt": "2020-04-15T07:15:16Z", "author": {"login": "praneesha"}, "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "diffHunk": "@@ -16,39 +16,57 @@\n \n import ballerina/java;\n \n-# Record to provide configurations for the JSON to XML conversion.\n+# Represents a record type to provide configurations for the JSON to XML\n+# conversion.\n #\n-# + attributePrefix - attribute prefix to use in XML\n-# + arrayEntryTag - XML tag to add an element from a JSON array\n+# + attributePrefix - The attribute prefix to use in the XML representation\n+# + arrayEntryTag - The XML tag to add an element from a JSON array\n public type JsonOptions record {\n     string attributePrefix = \"@\";\n     string arrayEntryTag = \"root\";\n };\n \n # Converts a JSON object to an XML representation.\n+# ```ballerina\n+# json data = {\n+#     name: \"John\",\n+#     age: 30\n+# };\n+# xml|error xmlValue = xmlutils:fromJSON(data);\n+# ```\n #\n-# + j - The json source\n+# + jsonValue - The json source", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b84c10094bc551bacb27f5ea2d5703040824d6f"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjk2MzAwOnYy", "diffSide": "RIGHT", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzoxNToyNlrOGFst_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzoxNToyNlrOGFst_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyODczMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + options - JsonOptions struct for JSON to XML conversion properties\n          \n          \n            \n            # + options - The `xmlutils:JsonOptions` record for JSON to XML conversion properties", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408628732", "createdAt": "2020-04-15T07:15:26Z", "author": {"login": "praneesha"}, "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "diffHunk": "@@ -16,39 +16,57 @@\n \n import ballerina/java;\n \n-# Record to provide configurations for the JSON to XML conversion.\n+# Represents a record type to provide configurations for the JSON to XML\n+# conversion.\n #\n-# + attributePrefix - attribute prefix to use in XML\n-# + arrayEntryTag - XML tag to add an element from a JSON array\n+# + attributePrefix - The attribute prefix to use in the XML representation\n+# + arrayEntryTag - The XML tag to add an element from a JSON array\n public type JsonOptions record {\n     string attributePrefix = \"@\";\n     string arrayEntryTag = \"root\";\n };\n \n # Converts a JSON object to an XML representation.\n+# ```ballerina\n+# json data = {\n+#     name: \"John\",\n+#     age: 30\n+# };\n+# xml|error xmlValue = xmlutils:fromJSON(data);\n+# ```\n #\n-# + j - The json source\n+# + jsonValue - The json source\n # + options - JsonOptions struct for JSON to XML conversion properties", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b84c10094bc551bacb27f5ea2d5703040824d6f"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjk2NDA4OnYy", "diffSide": "RIGHT", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzoxNTo0OVrOGFsung==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzoxNTo0OVrOGFsung==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyODg5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - XML representation of the given JSON if successfully converted\n          \n          \n            \n            # + return - XML representation of the given JSON if the JSON is", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408628894", "createdAt": "2020-04-15T07:15:49Z", "author": {"login": "praneesha"}, "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "diffHunk": "@@ -16,39 +16,57 @@\n \n import ballerina/java;\n \n-# Record to provide configurations for the JSON to XML conversion.\n+# Represents a record type to provide configurations for the JSON to XML\n+# conversion.\n #\n-# + attributePrefix - attribute prefix to use in XML\n-# + arrayEntryTag - XML tag to add an element from a JSON array\n+# + attributePrefix - The attribute prefix to use in the XML representation\n+# + arrayEntryTag - The XML tag to add an element from a JSON array\n public type JsonOptions record {\n     string attributePrefix = \"@\";\n     string arrayEntryTag = \"root\";\n };\n \n # Converts a JSON object to an XML representation.\n+# ```ballerina\n+# json data = {\n+#     name: \"John\",\n+#     age: 30\n+# };\n+# xml|error xmlValue = xmlutils:fromJSON(data);\n+# ```\n #\n-# + j - The json source\n+# + jsonValue - The json source\n # + options - JsonOptions struct for JSON to XML conversion properties\n-# + return - XML representation of the given JSON\n-public function fromJSON(json? j, JsonOptions options = {}) returns xml|error {\n-    return externFromJson(j, options);\n+# + return - XML representation of the given JSON if successfully converted", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b84c10094bc551bacb27f5ea2d5703040824d6f"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjk2NDk1OnYy", "diffSide": "RIGHT", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzoxNjowNVrOGFsvIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzoxNjowNVrOGFsvIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyOTAyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            the JSON or else an `error`\n          \n          \n            \n            #            successfully converted or else an `error`\n          \n      \n    \n    \n  \n\nNeed to specify the error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408629027", "createdAt": "2020-04-15T07:16:05Z", "author": {"login": "praneesha"}, "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "diffHunk": "@@ -16,39 +16,57 @@\n \n import ballerina/java;\n \n-# Record to provide configurations for the JSON to XML conversion.\n+# Represents a record type to provide configurations for the JSON to XML\n+# conversion.\n #\n-# + attributePrefix - attribute prefix to use in XML\n-# + arrayEntryTag - XML tag to add an element from a JSON array\n+# + attributePrefix - The attribute prefix to use in the XML representation\n+# + arrayEntryTag - The XML tag to add an element from a JSON array\n public type JsonOptions record {\n     string attributePrefix = \"@\";\n     string arrayEntryTag = \"root\";\n };\n \n # Converts a JSON object to an XML representation.\n+# ```ballerina\n+# json data = {\n+#     name: \"John\",\n+#     age: 30\n+# };\n+# xml|error xmlValue = xmlutils:fromJSON(data);\n+# ```\n #\n-# + j - The json source\n+# + jsonValue - The json source\n # + options - JsonOptions struct for JSON to XML conversion properties\n-# + return - XML representation of the given JSON\n-public function fromJSON(json? j, JsonOptions options = {}) returns xml|error {\n-    return externFromJson(j, options);\n+# + return - XML representation of the given JSON if successfully converted\n+#            the JSON or else an `error`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b84c10094bc551bacb27f5ea2d5703040824d6f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjk2NTg2OnYy", "diffSide": "RIGHT", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzoxNjoyMlrOGFsvqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzoyOToyNlrOGFtKdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyOTE2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // This is a temporary fix until resolve the #19917\n          \n          \n            \n            // This is a temporary fix until #19917 is resolved.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408629162", "createdAt": "2020-04-15T07:16:22Z", "author": {"login": "praneesha"}, "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "diffHunk": "@@ -16,39 +16,57 @@\n \n import ballerina/java;\n \n-# Record to provide configurations for the JSON to XML conversion.\n+# Represents a record type to provide configurations for the JSON to XML\n+# conversion.\n #\n-# + attributePrefix - attribute prefix to use in XML\n-# + arrayEntryTag - XML tag to add an element from a JSON array\n+# + attributePrefix - The attribute prefix to use in the XML representation\n+# + arrayEntryTag - The XML tag to add an element from a JSON array\n public type JsonOptions record {\n     string attributePrefix = \"@\";\n     string arrayEntryTag = \"root\";\n };\n \n # Converts a JSON object to an XML representation.\n+# ```ballerina\n+# json data = {\n+#     name: \"John\",\n+#     age: 30\n+# };\n+# xml|error xmlValue = xmlutils:fromJSON(data);\n+# ```\n #\n-# + j - The json source\n+# + jsonValue - The json source\n # + options - JsonOptions struct for JSON to XML conversion properties\n-# + return - XML representation of the given JSON\n-public function fromJSON(json? j, JsonOptions options = {}) returns xml|error {\n-    return externFromJson(j, options);\n+# + return - XML representation of the given JSON if successfully converted\n+#            the JSON or else an `error`\n+public function fromJSON(json? jsonValue, JsonOptions options = {}) returns xml|error {\n+    return externFromJson(jsonValue, options);\n }\n \n // This is a temporary fix until resolve the #19917", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b84c10094bc551bacb27f5ea2d5703040824d6f"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYzNTAyMA==", "bodyText": "This is a developer comment, not an API doc comment. Don't need to change them. ;)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408635020", "createdAt": "2020-04-15T07:27:34Z", "author": {"login": "ThisaruGuruge"}, "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "diffHunk": "@@ -16,39 +16,57 @@\n \n import ballerina/java;\n \n-# Record to provide configurations for the JSON to XML conversion.\n+# Represents a record type to provide configurations for the JSON to XML\n+# conversion.\n #\n-# + attributePrefix - attribute prefix to use in XML\n-# + arrayEntryTag - XML tag to add an element from a JSON array\n+# + attributePrefix - The attribute prefix to use in the XML representation\n+# + arrayEntryTag - The XML tag to add an element from a JSON array\n public type JsonOptions record {\n     string attributePrefix = \"@\";\n     string arrayEntryTag = \"root\";\n };\n \n # Converts a JSON object to an XML representation.\n+# ```ballerina\n+# json data = {\n+#     name: \"John\",\n+#     age: 30\n+# };\n+# xml|error xmlValue = xmlutils:fromJSON(data);\n+# ```\n #\n-# + j - The json source\n+# + jsonValue - The json source\n # + options - JsonOptions struct for JSON to XML conversion properties\n-# + return - XML representation of the given JSON\n-public function fromJSON(json? j, JsonOptions options = {}) returns xml|error {\n-    return externFromJson(j, options);\n+# + return - XML representation of the given JSON if successfully converted\n+#            the JSON or else an `error`\n+public function fromJSON(json? jsonValue, JsonOptions options = {}) returns xml|error {\n+    return externFromJson(jsonValue, options);\n }\n \n // This is a temporary fix until resolve the #19917", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyOTE2Mg=="}, "originalCommit": {"oid": "3b84c10094bc551bacb27f5ea2d5703040824d6f"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYzNjAyMQ==", "bodyText": "Ack.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408636021", "createdAt": "2020-04-15T07:29:26Z", "author": {"login": "praneesha"}, "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "diffHunk": "@@ -16,39 +16,57 @@\n \n import ballerina/java;\n \n-# Record to provide configurations for the JSON to XML conversion.\n+# Represents a record type to provide configurations for the JSON to XML\n+# conversion.\n #\n-# + attributePrefix - attribute prefix to use in XML\n-# + arrayEntryTag - XML tag to add an element from a JSON array\n+# + attributePrefix - The attribute prefix to use in the XML representation\n+# + arrayEntryTag - The XML tag to add an element from a JSON array\n public type JsonOptions record {\n     string attributePrefix = \"@\";\n     string arrayEntryTag = \"root\";\n };\n \n # Converts a JSON object to an XML representation.\n+# ```ballerina\n+# json data = {\n+#     name: \"John\",\n+#     age: 30\n+# };\n+# xml|error xmlValue = xmlutils:fromJSON(data);\n+# ```\n #\n-# + j - The json source\n+# + jsonValue - The json source\n # + options - JsonOptions struct for JSON to XML conversion properties\n-# + return - XML representation of the given JSON\n-public function fromJSON(json? j, JsonOptions options = {}) returns xml|error {\n-    return externFromJson(j, options);\n+# + return - XML representation of the given JSON if successfully converted\n+#            the JSON or else an `error`\n+public function fromJSON(json? jsonValue, JsonOptions options = {}) returns xml|error {\n+    return externFromJson(jsonValue, options);\n }\n \n // This is a temporary fix until resolve the #19917", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyOTE2Mg=="}, "originalCommit": {"oid": "3b84c10094bc551bacb27f5ea2d5703040824d6f"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjk2NjQ4OnYy", "diffSide": "RIGHT", "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzoxNjozM1rOGFswDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzoxNjozM1rOGFswDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyOTI2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Converts a table to its xml representation.\n          \n          \n            \n            # Converts a table to its XML representation.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22577#discussion_r408629262", "createdAt": "2020-04-15T07:16:33Z", "author": {"login": "praneesha"}, "path": "stdlib/xmlutils/src/main/ballerina/src/xmlutils/xmlutils.bal", "diffHunk": "@@ -16,39 +16,57 @@\n \n import ballerina/java;\n \n-# Record to provide configurations for the JSON to XML conversion.\n+# Represents a record type to provide configurations for the JSON to XML\n+# conversion.\n #\n-# + attributePrefix - attribute prefix to use in XML\n-# + arrayEntryTag - XML tag to add an element from a JSON array\n+# + attributePrefix - The attribute prefix to use in the XML representation\n+# + arrayEntryTag - The XML tag to add an element from a JSON array\n public type JsonOptions record {\n     string attributePrefix = \"@\";\n     string arrayEntryTag = \"root\";\n };\n \n # Converts a JSON object to an XML representation.\n+# ```ballerina\n+# json data = {\n+#     name: \"John\",\n+#     age: 30\n+# };\n+# xml|error xmlValue = xmlutils:fromJSON(data);\n+# ```\n #\n-# + j - The json source\n+# + jsonValue - The json source\n # + options - JsonOptions struct for JSON to XML conversion properties\n-# + return - XML representation of the given JSON\n-public function fromJSON(json? j, JsonOptions options = {}) returns xml|error {\n-    return externFromJson(j, options);\n+# + return - XML representation of the given JSON if successfully converted\n+#            the JSON or else an `error`\n+public function fromJSON(json? jsonValue, JsonOptions options = {}) returns xml|error {\n+    return externFromJson(jsonValue, options);\n }\n \n // This is a temporary fix until resolve the #19917\n-function externFromJson(json? j, JsonOptions options = {}) returns xml|error = @java:Method {\n+function externFromJson(json? jsonValue, JsonOptions options = {}) returns xml|error = @java:Method {\n     name: \"fromJSON\",\n     class: \"org.ballerinalang.stdlib.xmlutils.ConvertUtils\"\n } external;\n \n # Converts a table to its xml representation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b84c10094bc551bacb27f5ea2d5703040824d6f"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4275, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}