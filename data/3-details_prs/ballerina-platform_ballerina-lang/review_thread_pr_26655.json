{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMzg1OTU4", "number": 26655, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNDozNjo0OFrOE0p96g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNDozNjo0OFrOE0p96g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjQ5MDAyOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/javainterop/basic/static_method_tests.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNDozNjo0OFrOHsgCFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNDozNjo0OFrOHsgCFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQyNDIxNA==", "bodyText": "Do we need this comment here when there's no crash expected?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26655#discussion_r516424214", "createdAt": "2020-11-03T04:36:48Z", "author": {"login": "HindujaB"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/javainterop/basic/static_method_tests.bal", "diffHunk": "@@ -73,12 +91,55 @@ function testUsingParamValues() returns int {\n function testDecimalParamAndReturn(decimal a1) returns decimal {\n     return decimalParamAndReturn(a1);\n }\n-\n function testStaticResolve() {\n+    // When instance and static methods have the same name resolve static method based on the parameter type\n     int val = hashCode(2);\n     test:assertEquals(val, 2);\n }\n \n+public function testBalEnvSlowAsyncVoidSig() {\n+    int added = addTwoNumbersSlowAsyncVoidSig(1, 2);\n+    test:assertEquals(3, added);\n+}\n+\n+public function testUnionReturn() returns string {\n+    ResourceDefinition resourceDef = {path:\"path\", method:\"method\"};\n+    ResourceDefinition[] resources = [resourceDef];\n+    ApiDefinition apiDef = {resources:resources};\n+    return value:toString(getMapOrError(\"swagger\", apiDef));\n+}\n+\n+public function testBalEnvFastAsyncVoidSig() {\n+    int added = addTwoNumbersFastAsyncVoidSig(1, 2);\n+    test:assertEquals(3, added);\n+}\n+\n+public function testBalEnvSlowAsync() {\n+    int added = addTwoNumbersSlowAsync(1, 2);\n+    test:assertEquals(3, added);\n+}\n+\n+public function testBalEnvFastAsync() {\n+    int added = addTwoNumbersFastAsync(1, 2);\n+    test:assertEquals(3, added);\n+}\n+\n+public function testReturnNullString() {\n+    string concat = \"some\" + (returnNullString(true) ?: \"\");\n+    test:assertEquals(\"some\", concat);\n+}\n+\n+public function testReturnNotNullString() {\n+    string concat = \"some\" + (returnNullString(false) ?: \"\");\n+    test:assertEquals(\"someNotNull\", concat);\n+}\n+\n+public function testStringCast() {\n+    any result = getValue();\n+    string s = <string> result; // This line crashes with ClassCastException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5989c8f9fdb91ec736b4157e3c0abf504b0fa3b4"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4677, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}