{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNTc5ODkw", "number": 23896, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo1MjowNVrOEEjMFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNjo0MzozMlrOEEj3Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjA2Mjk1OnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BallerinaErrors.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo1MjowNVrOGiPYyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDo1OTozNFrOGiYbPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1Njg3Mw==", "bodyText": "Did you check this with lang team? Why do we need the typeId?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23896#discussion_r438556873", "createdAt": "2020-06-11T05:52:05Z", "author": {"login": "chamil321"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BallerinaErrors.java", "diffHunk": "@@ -121,7 +121,7 @@ public static ErrorValue createDistinctError(String typeIdName, BPackage typeIdP\n         return error;\n     }\n \n-    private static void setTypeId(String typeIdName, BPackage typeIdPkg, ErrorValue error) {\n+    public static void setTypeId(String typeIdName, BPackage typeIdPkg, ErrorValue error) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a79186ca882841d5cb09ff6fb690afee2cd73867"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODcwNDk1OQ==", "bodyText": "No, I didn't check with them.\nWebSocketException class extends Errorvalue. It returns ErrorValue without setting typeId. Therefore, I had to set the typeId in the module.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23896#discussion_r438704959", "createdAt": "2020-06-11T10:59:34Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/BallerinaErrors.java", "diffHunk": "@@ -121,7 +121,7 @@ public static ErrorValue createDistinctError(String typeIdName, BPackage typeIdP\n         return error;\n     }\n \n-    private static void setTypeId(String typeIdName, BPackage typeIdPkg, ErrorValue error) {\n+    public static void setTypeId(String typeIdName, BPackage typeIdPkg, ErrorValue error) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1Njg3Mw=="}, "originalCommit": {"oid": "a79186ca882841d5cb09ff6fb690afee2cd73867"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjE3MjgyOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/websocket/WebSocketUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNjo0MzozMlrOGiQdSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjo0MTozMlrOGibVgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU3NDQxMQ==", "bodyText": "Unless we trap this error in Ballerina and convert to a error value, I don't think we need to do this here.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23896#discussion_r438574411", "createdAt": "2020-06-11T06:43:32Z", "author": {"login": "rdhananjaya"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/websocket/WebSocketUtil.java", "diffHunk": "@@ -575,6 +576,28 @@ public static void countDownForHandshake(ObjectValue webSocketClient) {\n         }\n     }\n \n+    public static WebSocketException getWebSocketException(String msg, Throwable error, String errorCode,\n+                                                           ErrorValue cause) {\n+        WebSocketException exception;\n+        String message = errorCode.substring(2) + \": \" + msg;\n+        if (!msg.isEmpty()) {\n+            exception = new WebSocketException(message);\n+        } else if (error != null) {\n+            exception = new WebSocketException(error);\n+        } else {\n+            exception = new WebSocketException(message, cause);\n+        }\n+        BallerinaErrors.setTypeId(errorCode, WebSocketConstants.PROTOCOL_HTTP_PKG_ID, exception);\n+        return exception;\n+    }\n+\n+    public static void setNotifyFailure(String msg, NonBlockingCallback callback) {\n+        WebSocketException exception = new WebSocketException(msg);\n+        BallerinaErrors.setTypeId(WebSocketConstants.ErrorCode.WsInvalidHandshakeError.toString(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a79186ca882841d5cb09ff6fb690afee2cd73867"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc1MjY0MQ==", "bodyText": "Had a discussion with @kalaiyarasiganeshalingam and it turned out this exception is mapped to Ballerina distinct error defined here https://github.com/ballerina-platform/ballerina-lang/pull/23896/files#diff-0dc26ba9e7a9ac8f581ee802d2a2338dR21\nHence this change is needed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23896#discussion_r438752641", "createdAt": "2020-06-11T12:41:32Z", "author": {"login": "rdhananjaya"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/websocket/WebSocketUtil.java", "diffHunk": "@@ -575,6 +576,28 @@ public static void countDownForHandshake(ObjectValue webSocketClient) {\n         }\n     }\n \n+    public static WebSocketException getWebSocketException(String msg, Throwable error, String errorCode,\n+                                                           ErrorValue cause) {\n+        WebSocketException exception;\n+        String message = errorCode.substring(2) + \": \" + msg;\n+        if (!msg.isEmpty()) {\n+            exception = new WebSocketException(message);\n+        } else if (error != null) {\n+            exception = new WebSocketException(error);\n+        } else {\n+            exception = new WebSocketException(message, cause);\n+        }\n+        BallerinaErrors.setTypeId(errorCode, WebSocketConstants.PROTOCOL_HTTP_PKG_ID, exception);\n+        return exception;\n+    }\n+\n+    public static void setNotifyFailure(String msg, NonBlockingCallback callback) {\n+        WebSocketException exception = new WebSocketException(msg);\n+        BallerinaErrors.setTypeId(WebSocketConstants.ErrorCode.WsInvalidHandshakeError.toString(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU3NDQxMQ=="}, "originalCommit": {"oid": "a79186ca882841d5cb09ff6fb690afee2cd73867"}, "originalPosition": 132}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3399, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}