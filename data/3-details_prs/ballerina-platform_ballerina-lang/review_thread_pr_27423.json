{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NDIzMjQy", "number": 27423, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyNjoyNFrOFFax9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyODo1OVrOFFa0zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjI1OTc0OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaTypeDefinitionSymbol.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyNjoyNFrOIF66rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyNjoyNFrOIF66rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3OTA4NA==", "bodyText": "Maybe we can use Collections.emptyList() here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27423#discussion_r543079084", "createdAt": "2020-12-15T06:26:24Z", "author": {"login": "nadeeshaan"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/impl/symbols/BallerinaTypeDefinitionSymbol.java", "diffHunk": "@@ -79,6 +80,11 @@ public boolean readonly() {\n         return this.readonly;\n     }\n \n+    @Override\n+    public List<AnnotationSymbol> annotations() {\n+        return Collections.unmodifiableList(new ArrayList<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51dd3bfe4efe5adcf66115a22b72346fd411183f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjI2NDY1OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/symbols/BAnnotationSymbol.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyODowMlrOIF69Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyODowMlrOIF69Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3OTc1MQ==", "bodyText": "Shall we do an early return here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27423#discussion_r543079751", "createdAt": "2020-12-15T06:28:02Z", "author": {"login": "nadeeshaan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/symbols/BAnnotationSymbol.java", "diffHunk": "@@ -41,12 +43,26 @@\n     public BTypeSymbol attachedType;\n     public Set<AttachPoint> points;\n     public int maskedPoints;\n+    private List<BAnnotationSymbol> annots;\n \n     public BAnnotationSymbol(Name name, long flags, Set<AttachPoint> points, PackageID pkgID,\n                              BType type, BSymbol owner, Location pos, SymbolOrigin origin) {\n         super(ANNOTATION, flags, name, pkgID, type, owner, pos, origin);\n         this.points = points;\n         this.maskedPoints = getMaskedPoints(points);\n+        this.annots = new ArrayList<>();\n+    }\n+\n+    @Override\n+    public void addAnnotation(AnnotationSymbol symbol) {\n+        if (symbol != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51dd3bfe4efe5adcf66115a22b72346fd411183f"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjI2NTU0OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/symbols/BClassSymbol.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyODoyM1rOIF69yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyODoyM1rOIF69yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3OTg4Mg==", "bodyText": "Shall we do an early return here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27423#discussion_r543079882", "createdAt": "2020-12-15T06:28:23Z", "author": {"login": "nadeeshaan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/symbols/BClassSymbol.java", "diffHunk": "@@ -19,32 +19,49 @@\n \n import io.ballerina.tools.diagnostics.Location;\n import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.model.symbols.Annotatable;\n+import org.ballerinalang.model.symbols.AnnotationSymbol;\n import org.ballerinalang.model.symbols.SymbolOrigin;\n import org.wso2.ballerinalang.compiler.semantics.model.types.BType;\n import org.wso2.ballerinalang.compiler.util.Name;\n import org.wso2.ballerinalang.compiler.util.Names;\n \n import java.util.ArrayList;\n+import java.util.List;\n \n /**\n  * {@code BClassSymbol} represents a class symbol in a scope.\n  *\n  * @since 2.0\n  */\n-public class BClassSymbol extends BObjectTypeSymbol {\n+public class BClassSymbol extends BObjectTypeSymbol implements Annotatable {\n \n     public boolean isServiceDecl;\n+    private List<BAnnotationSymbol> annots;\n \n     public BClassSymbol(int symTag, long flags, Name name, PackageID pkgID, BType type,\n                         BSymbol owner, Location pos, SymbolOrigin origin) {\n         super(symTag, flags, name, pkgID, type, owner, pos, origin);\n         this.referencedFunctions = new ArrayList<>();\n+        this.annots = new ArrayList<>();\n+    }\n+\n+    @Override\n+    public void addAnnotation(AnnotationSymbol symbol) {\n+        if (symbol != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51dd3bfe4efe5adcf66115a22b72346fd411183f"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjI2NjcwOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/symbols/BEnumSymbol.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyODo1MVrOIF6-dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyODo1MVrOIF6-dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4MDA1Mw==", "bodyText": "Shall we do an early return here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27423#discussion_r543080053", "createdAt": "2020-12-15T06:28:51Z", "author": {"login": "nadeeshaan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/symbols/BEnumSymbol.java", "diffHunk": "@@ -20,26 +20,49 @@\n \n import io.ballerina.tools.diagnostics.Location;\n import org.ballerinalang.model.elements.PackageID;\n+import org.ballerinalang.model.symbols.Annotatable;\n+import org.ballerinalang.model.symbols.AnnotationSymbol;\n import org.ballerinalang.model.symbols.SymbolKind;\n import org.ballerinalang.model.symbols.SymbolOrigin;\n import org.wso2.ballerinalang.compiler.semantics.model.types.BType;\n import org.wso2.ballerinalang.compiler.util.Name;\n \n+import java.util.ArrayList;\n import java.util.List;\n \n /**\n  * Represents an enum.\n  *\n  * @since 2.0.0\n  */\n-public class BEnumSymbol extends BTypeSymbol {\n+public class BEnumSymbol extends BTypeSymbol implements Annotatable {\n \n     public List<BConstantSymbol> members;\n+    private List<BAnnotationSymbol> annots;\n \n     public BEnumSymbol(List<BConstantSymbol> members, long flags, Name name, PackageID pkgID, BType type,\n                        BSymbol owner, Location pos, SymbolOrigin origin) {\n         super(SymTag.ENUM, flags, name, pkgID, type, owner, pos, origin);\n         this.members = members;\n         this.kind = SymbolKind.ENUM;\n+        this.annots = new ArrayList<>();\n+    }\n+\n+    @Override\n+    public void addAnnotation(AnnotationSymbol symbol) {\n+        if (symbol != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51dd3bfe4efe5adcf66115a22b72346fd411183f"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjI2NzAxOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/symbols/BVarSymbol.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyODo1OVrOIF6-nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyODo1OVrOIF6-nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4MDA5NQ==", "bodyText": "Shall we do an early return here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27423#discussion_r543080095", "createdAt": "2020-12-15T06:28:59Z", "author": {"login": "nadeeshaan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/symbols/BVarSymbol.java", "diffHunk": "@@ -44,6 +50,19 @@\n     public BVarSymbol(long flags, Name name, PackageID pkgID, BType type, BSymbol owner, Location pos,\n                       SymbolOrigin origin) {\n         super(VARIABLE, flags, name, pkgID, type, owner, pos, origin);\n+        this.annots = new ArrayList<>();\n+    }\n+\n+    @Override\n+    public void addAnnotation(AnnotationSymbol symbol) {\n+        if (symbol != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51dd3bfe4efe5adcf66115a22b72346fd411183f"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2905, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}