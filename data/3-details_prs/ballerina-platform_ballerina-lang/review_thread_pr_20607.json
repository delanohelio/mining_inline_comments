{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNTQ2MDY2", "number": 20607, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODozNjoxNlrODaFpMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODozNjoxNlrODaFpMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NjgyMDMyOnYy", "diffSide": "RIGHT", "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/inbound_oauth2_provider.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODozNjoxNlrOFg2KUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwOTo1NDozNlrOFg4XDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4NjEyOA==", "bodyText": "Let's break this line to accommodate 120 line break.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20607#discussion_r369986128", "createdAt": "2020-01-23T08:36:16Z", "author": {"login": "wggihan"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/inbound_oauth2_provider.bal", "diffHunk": "@@ -43,9 +50,16 @@ public type InboundOAuth2Provider object {\n         if (credential == \"\") {\n             return false;\n         }\n-        boolean authenticated = false;\n-        string username = \"\";\n-        string scopes = \"\";\n+\n+        var oauth2Cache = self.oauth2Cache;\n+        if (oauth2Cache is cache:Cache && oauth2Cache.hasKey(credential)) {\n+            var oauth2CacheEntry = authenticateFromCache(oauth2Cache, credential);\n+            if (oauth2CacheEntry is InboundOAuth2CacheEntry) {\n+                auth:setAuthenticationContext(\"oauth2\", credential);\n+                auth:setPrincipal(oauth2CacheEntry.username, oauth2CacheEntry.username, getScopes(oauth2CacheEntry.scopes));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a88b83788b0bd06d42852f074ca5580643e6335c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAyMjE1Nw==", "bodyText": "Fixed with ac2e339", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20607#discussion_r370022157", "createdAt": "2020-01-23T09:54:36Z", "author": {"login": "ldclakmal"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/inbound_oauth2_provider.bal", "diffHunk": "@@ -43,9 +50,16 @@ public type InboundOAuth2Provider object {\n         if (credential == \"\") {\n             return false;\n         }\n-        boolean authenticated = false;\n-        string username = \"\";\n-        string scopes = \"\";\n+\n+        var oauth2Cache = self.oauth2Cache;\n+        if (oauth2Cache is cache:Cache && oauth2Cache.hasKey(credential)) {\n+            var oauth2CacheEntry = authenticateFromCache(oauth2Cache, credential);\n+            if (oauth2CacheEntry is InboundOAuth2CacheEntry) {\n+                auth:setAuthenticationContext(\"oauth2\", credential);\n+                auth:setPrincipal(oauth2CacheEntry.username, oauth2CacheEntry.username, getScopes(oauth2CacheEntry.scopes));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4NjEyOA=="}, "originalCommit": {"oid": "a88b83788b0bd06d42852f074ca5580643e6335c"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 497, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}