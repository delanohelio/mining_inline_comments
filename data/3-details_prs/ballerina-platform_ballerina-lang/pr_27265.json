{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwMDEwMzc2", "number": 27265, "title": "Restructure debugger test utils", "bodyText": "Purpose\nThis PR will restructure the debugger utilization classes. We have moved the debugger utils classes from tests to main. By doing this we would be able to pack the util classes inside the jar and these utils classes can be used in ballerina-distribution.", "createdAt": "2020-12-01T06:06:13Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265", "merged": true, "mergeCommit": {"oid": "7028fae3f9816babd983db24616a16a72e0f68d5"}, "closed": true, "closedAt": "2020-12-07T10:30:12Z", "author": {"login": "praveennadarajah"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgyZbDAH2gAyNTMwMDEwMzc2OmUzOTcyMDhlMmQ3N2U2YTAyYTRlOTRmMzQ0ZmVlZjI4NTg4MDliYWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdjxRTdAFqTU0NTkyMDUyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e397208e2d77e6a02a4e94f344feef2858809baa", "author": {"user": {"login": "praveennadarajah", "name": "Praveen Nadarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e397208e2d77e6a02a4e94f344feef2858809baa", "committedDate": "2020-11-28T02:05:50Z", "message": "Move utils from test to main"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b62d96add7a5985bb9f5a30b161926867e897a04", "author": {"user": {"login": "praveennadarajah", "name": "Praveen Nadarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b62d96add7a5985bb9f5a30b161926867e897a04", "committedDate": "2020-12-02T03:46:37Z", "message": "Move DebugAdapterBaseTestCase utils to TestUtils\n\nMove resumeProgram() and waitForDebugHit() to TestUtils\n\nMove remaining utils\n\nMove BaseTestCase utils to DebugAdapterBaseTestCase\n\nMove all utils completely from test to main\n\nFix code warning issues\n\nFix initial SpotBugs issues\n\nAdd spotbugs-exclude.xml\n\nFix spotbug issue\n\nRename util package\n\nFix minor issues"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b6ede247a8bdc5a2976ffb70fc9b3106b438c6e", "author": {"user": {"login": "praveennadarajah", "name": "Praveen Nadarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2b6ede247a8bdc5a2976ffb70fc9b3106b438c6e", "committedDate": "2020-12-02T03:40:35Z", "message": "Fix minor issues"}, "afterCommit": {"oid": "b62d96add7a5985bb9f5a30b161926867e897a04", "author": {"user": {"login": "praveennadarajah", "name": "Praveen Nadarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b62d96add7a5985bb9f5a30b161926867e897a04", "committedDate": "2020-12-02T03:46:37Z", "message": "Move DebugAdapterBaseTestCase utils to TestUtils\n\nMove resumeProgram() and waitForDebugHit() to TestUtils\n\nMove remaining utils\n\nMove BaseTestCase utils to DebugAdapterBaseTestCase\n\nMove all utils completely from test to main\n\nFix code warning issues\n\nFix initial SpotBugs issues\n\nAdd spotbugs-exclude.xml\n\nFix spotbug issue\n\nRename util package\n\nFix minor issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNjM5NzQ1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#pullrequestreview-543639745", "createdAt": "2020-12-03T06:44:49Z", "commit": {"oid": "b62d96add7a5985bb9f5a30b161926867e897a04"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNjo0NDo0OVrOH9-OHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzoxNTo0OVrOH-AwPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc0NDYwNg==", "bodyText": "Are all of these false positives?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r534744606", "createdAt": "2020-12-03T06:44:49Z", "author": {"login": "NipunaRanasinghe"}, "path": "tests/jballerina-debugger-integration-test/spotbugs-exclude.xml", "diffHunk": "@@ -0,0 +1,32 @@\n+<!--\n+  ~  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+  ~\n+  ~  WSO2 Inc. licenses this file to you under the Apache License,\n+  ~  Version 2.0 (the \"License\"); you may not use this file except\n+  ~  in compliance with the License.\n+  ~  You may obtain a copy of the License at\n+  ~\n+  ~    http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~  Unless required by applicable law or agreed to in writing,\n+  ~  software distributed under the License is distributed on an\n+  ~  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~  KIND, either express or implied.  See the License for the\n+  ~  specific language governing permissions and limitations\n+  ~  under the License.\n+  -->\n+\n+<FindBugsFilter>\n+    <Match>\n+        <Package name=\"org.ballerinalang.debugger.test.utils\"/>\n+    </Match>\n+    <Match>\n+        <Bug pattern=\"DM_DEFAULT_ENCODING\" />\n+    </Match>\n+    <Match>\n+        <Bug pattern=\"DLS_DEAD_LOCAL_STORE\" />\n+    </Match>\n+    <Match>\n+        <Bug pattern=\"OS_OPEN_STREAM\" />\n+    </Match>\n+</FindBugsFilter>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b62d96add7a5985bb9f5a30b161926867e897a04"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc0NTQ2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    DebugHitListener.connector = connector;\n          \n          \n            \n                    this.connector = connector;", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r534745463", "createdAt": "2020-12-03T06:45:49Z", "author": {"login": "NipunaRanasinghe"}, "path": "tests/jballerina-debugger-integration-test/src/main/java/org/ballerinalang/debugger/test/utils/DebugHitListener.java", "diffHunk": "@@ -45,7 +45,7 @@\n     private boolean debugHitFound;\n \n     public DebugHitListener(TestDAPClientConnector connector) {\n-        this.connector = connector;\n+        DebugHitListener.connector = connector;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b62d96add7a5985bb9f5a30b161926867e897a04"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc1NTEzNA==", "bodyText": "With this implementation using static variables, the framework will not support parallel test execution. Better if we can refactor to have instance variables instead.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r534755134", "createdAt": "2020-12-03T06:53:58Z", "author": {"login": "NipunaRanasinghe"}, "path": "tests/jballerina-debugger-integration-test/src/main/java/org/ballerinalang/debugger/test/utils/TestUtils.java", "diffHunk": "@@ -0,0 +1,563 @@\n+/*\n+ * Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.debugger.test.utils;\n+\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.ballerinalang.debugger.test.utils.client.TestDAPClientConnector;\n+import org.ballerinalang.test.context.BMainInstance;\n+import org.ballerinalang.test.context.BalServer;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.ballerinalang.test.context.LogLeecher;\n+import org.eclipse.lsp4j.debug.ConfigurationDoneArguments;\n+import org.eclipse.lsp4j.debug.ContinueArguments;\n+import org.eclipse.lsp4j.debug.EvaluateArguments;\n+import org.eclipse.lsp4j.debug.EvaluateResponse;\n+import org.eclipse.lsp4j.debug.NextArguments;\n+import org.eclipse.lsp4j.debug.ScopesArguments;\n+import org.eclipse.lsp4j.debug.ScopesResponse;\n+import org.eclipse.lsp4j.debug.SetBreakpointsArguments;\n+import org.eclipse.lsp4j.debug.Source;\n+import org.eclipse.lsp4j.debug.SourceBreakpoint;\n+import org.eclipse.lsp4j.debug.StackFrame;\n+import org.eclipse.lsp4j.debug.StackTraceArguments;\n+import org.eclipse.lsp4j.debug.StackTraceResponse;\n+import org.eclipse.lsp4j.debug.StepInArguments;\n+import org.eclipse.lsp4j.debug.StepOutArguments;\n+import org.eclipse.lsp4j.debug.StoppedEventArguments;\n+import org.eclipse.lsp4j.debug.Variable;\n+import org.eclipse.lsp4j.debug.VariablesArguments;\n+import org.eclipse.lsp4j.debug.VariablesResponse;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testng.Assert;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Timer;\n+import java.util.stream.Collectors;\n+\n+import static org.ballerinalang.debugger.test.utils.DebugUtils.findFreePort;\n+\n+/**\n+ * Test util class for all debugger integration test cases.\n+ */\n+public class TestUtils {\n+\n+    public static BalServer balServer;\n+    public static TestDAPClientConnector debugClientConnector;\n+    public static List<BallerinaTestDebugPoint> testBreakpoints = new ArrayList<>();\n+    public static boolean isConnected = false;\n+    public static int port;\n+    private static final Logger LOGGER = LoggerFactory.getLogger(TestUtils.class);\n+    protected static final int MAX_RETRY_COUNT = 3;\n+    private static BMainInstance balClient = null;\n+    private static Process debuggeeProcess;\n+\n+    public static Path testProjectBaseDir;\n+    public static Path testSingleFileBaseDir;\n+    public static String testProjectPath;\n+    public static String testEntryFilePath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b62d96add7a5985bb9f5a30b161926867e897a04"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc1ODU1NQ==", "bodyText": "Shall we consider renaming this class as DebugTestRunner or DebugTestFramework? WDYT?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r534758555", "createdAt": "2020-12-03T06:56:18Z", "author": {"login": "NipunaRanasinghe"}, "path": "tests/jballerina-debugger-integration-test/src/main/java/org/ballerinalang/debugger/test/utils/TestUtils.java", "diffHunk": "@@ -0,0 +1,563 @@\n+/*\n+ * Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.debugger.test.utils;\n+\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.ballerinalang.debugger.test.utils.client.TestDAPClientConnector;\n+import org.ballerinalang.test.context.BMainInstance;\n+import org.ballerinalang.test.context.BalServer;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.ballerinalang.test.context.LogLeecher;\n+import org.eclipse.lsp4j.debug.ConfigurationDoneArguments;\n+import org.eclipse.lsp4j.debug.ContinueArguments;\n+import org.eclipse.lsp4j.debug.EvaluateArguments;\n+import org.eclipse.lsp4j.debug.EvaluateResponse;\n+import org.eclipse.lsp4j.debug.NextArguments;\n+import org.eclipse.lsp4j.debug.ScopesArguments;\n+import org.eclipse.lsp4j.debug.ScopesResponse;\n+import org.eclipse.lsp4j.debug.SetBreakpointsArguments;\n+import org.eclipse.lsp4j.debug.Source;\n+import org.eclipse.lsp4j.debug.SourceBreakpoint;\n+import org.eclipse.lsp4j.debug.StackFrame;\n+import org.eclipse.lsp4j.debug.StackTraceArguments;\n+import org.eclipse.lsp4j.debug.StackTraceResponse;\n+import org.eclipse.lsp4j.debug.StepInArguments;\n+import org.eclipse.lsp4j.debug.StepOutArguments;\n+import org.eclipse.lsp4j.debug.StoppedEventArguments;\n+import org.eclipse.lsp4j.debug.Variable;\n+import org.eclipse.lsp4j.debug.VariablesArguments;\n+import org.eclipse.lsp4j.debug.VariablesResponse;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testng.Assert;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Timer;\n+import java.util.stream.Collectors;\n+\n+import static org.ballerinalang.debugger.test.utils.DebugUtils.findFreePort;\n+\n+/**\n+ * Test util class for all debugger integration test cases.\n+ */\n+public class TestUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b62d96add7a5985bb9f5a30b161926867e897a04"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc2NDY4OA==", "bodyText": "Shall we check equality of address and port as well?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r534764688", "createdAt": "2020-12-03T07:00:13Z", "author": {"login": "NipunaRanasinghe"}, "path": "tests/jballerina-debugger-integration-test/src/main/java/org/ballerinalang/debugger/test/utils/client/connection/TestSocketStreamConnectionProvider.java", "diffHunk": "@@ -128,6 +128,11 @@ public void stop() {\n         }\n     }\n \n+    @Override\n+    public boolean equals(Object obj) {\n+        return super.equals(obj);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b62d96add7a5985bb9f5a30b161926867e897a04"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc2Njk4MA==", "bodyText": "Shall we import the static method instead of using qualified method calls everywhere? Check other places as well", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r534766980", "createdAt": "2020-12-03T07:01:42Z", "author": {"login": "NipunaRanasinghe"}, "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/adapter/CallStackDebugTest.java", "diffHunk": "@@ -32,59 +33,63 @@\n import java.io.File;\n import java.nio.file.Paths;\n \n+import static org.ballerinalang.debugger.test.utils.TestUtils.DebugResumeKind;\n+import static org.ballerinalang.debugger.test.utils.TestUtils.testEntryFilePath;\n+import static org.ballerinalang.debugger.test.utils.TestUtils.testProjectBaseDir;\n+import static org.ballerinalang.debugger.test.utils.TestUtils.testProjectPath;\n+\n /**\n  * Test class for debug hit call stack representation.\n  */\n public class CallStackDebugTest extends DebugAdapterBaseTestCase {\n \n     @BeforeClass\n     public void setup() throws BallerinaTestException {\n-        testProjectName = \"callstack-tests\";\n-        testModuleFileName = \"main.bal\";\n+        String testProjectName = \"callstack-tests\";\n+        String testModuleFileName = \"main.bal\";\n         testProjectPath = testProjectBaseDir.toString() + File.separator + testProjectName;\n         testEntryFilePath = Paths.get(testProjectPath, testModuleFileName).toString();\n \n-        addBreakPoint(new BallerinaTestDebugPoint(testEntryFilePath, 35));\n-        addBreakPoint(new BallerinaTestDebugPoint(testEntryFilePath, 44));\n-        addBreakPoint(new BallerinaTestDebugPoint(testEntryFilePath, 40));\n-        initDebugSession(DebugUtils.DebuggeeExecutionKind.RUN);\n+        TestUtils.addBreakPoint(new BallerinaTestDebugPoint(testEntryFilePath, 35));\n+        TestUtils.addBreakPoint(new BallerinaTestDebugPoint(testEntryFilePath, 44));\n+        TestUtils.addBreakPoint(new BallerinaTestDebugPoint(testEntryFilePath, 40));\n+        TestUtils.initDebugSession(DebugUtils.DebuggeeExecutionKind.RUN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b62d96add7a5985bb9f5a30b161926867e897a04"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc4NjExMA==", "bodyText": "Why have we extended remote debugging tests from DebuggerAdapterBaseTestCase? remote debugging tests are not using the debug adapter.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#discussion_r534786110", "createdAt": "2020-12-03T07:15:49Z", "author": {"login": "NipunaRanasinghe"}, "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/remote/BallerinaTestRemoteDebugTest.java", "diffHunk": "@@ -27,19 +27,21 @@\n import java.io.File;\n \n import static org.ballerinalang.debugger.test.utils.DebugUtils.findFreePort;\n+import static org.ballerinalang.debugger.test.utils.TestUtils.balServer;\n+import static org.ballerinalang.debugger.test.utils.TestUtils.testProjectBaseDir;\n \n /**\n  * Test class to test positive scenarios of remote debugging ballerina test command.\n  */\n-public class BallerinaTestRemoteDebugTest extends BaseTestCase {\n+public class BallerinaTestRemoteDebugTest extends DebugAdapterBaseTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b62d96add7a5985bb9f5a30b161926867e897a04"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b1e1437635ec49c4f142a48cd73b2bc98b6c93e", "author": {"user": {"login": "praveennadarajah", "name": "Praveen Nadarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9b1e1437635ec49c4f142a48cd73b2bc98b6c93e", "committedDate": "2020-12-06T12:51:12Z", "message": "Rename TestUtils to DebugTestRunner\n\nFix spotbug issues\n\nRestructure debug test with instance variable\n\nFix all spotbug issues\n\nRename DebugAdapterBaseTestCase to BaseTestCase\n\nFix build failure issue"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b11c89a73e1af771429e61c9e11f4eb7c292459", "author": {"user": {"login": "praveennadarajah", "name": "Praveen Nadarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1b11c89a73e1af771429e61c9e11f4eb7c292459", "committedDate": "2020-12-06T12:24:27Z", "message": "Fix build failure issue"}, "afterCommit": {"oid": "9b1e1437635ec49c4f142a48cd73b2bc98b6c93e", "author": {"user": {"login": "praveennadarajah", "name": "Praveen Nadarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9b1e1437635ec49c4f142a48cd73b2bc98b6c93e", "committedDate": "2020-12-06T12:51:12Z", "message": "Rename TestUtils to DebugTestRunner\n\nFix spotbug issues\n\nRestructure debug test with instance variable\n\nFix all spotbug issues\n\nRename DebugAdapterBaseTestCase to BaseTestCase\n\nFix build failure issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1OTIwNTI4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27265#pullrequestreview-545920528", "createdAt": "2020-12-07T08:28:50Z", "commit": {"oid": "9b1e1437635ec49c4f142a48cd73b2bc98b6c93e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4683, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}