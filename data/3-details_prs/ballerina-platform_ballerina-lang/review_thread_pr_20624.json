{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNDc4NTcy", "number": 20624, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODozNToyNlrODYbJwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNTowODoyNVrODYt0qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2OTM3MjgyOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODozNToyNlrOFeRhAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODozNToyNlrOFeRhAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI4ODU3OQ==", "bodyText": "Please add a new line at the end of the file", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20624#discussion_r367288579", "createdAt": "2020-01-16T08:35:26Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java", "diffHunk": "@@ -171,4 +179,4 @@ private String generateNewKey(String metric, String[] tags) {\n         key = key + \"}\";\n         return key;\n     }\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4284a59030c2bbc804391c0b11c26ba0bdae0a7"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2OTQzNTA2OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODo1ODoyMlrOFeSG0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODo1ODoyMlrOFeSG0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI5ODI1Ng==", "bodyText": "Why we can't use setCountDownLatch()  instead of this?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20624#discussion_r367298256", "createdAt": "2020-01-16T08:58:22Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java", "diffHunk": "@@ -82,24 +84,30 @@ private void setup() throws Exception {\n      */\n     @Test\n     public void testMetrics() throws Exception {\n-        WebSocketTestClient client = new WebSocketTestClient(\"ws://localhost:9090/basic/ws\");\n-        client.handshake();\n-        client.sendText(MESSAGE);\n-        client.sendText(MESSAGE);\n-        client.sendText(MESSAGE);\n-        client.sendText(MESSAGE);\n-        client.sendText(MESSAGE);\n-        client.sendPing(SENDING_BYTE_BUFFER);\n-        client.sendPong(SENDING_BYTE_BUFFER);\n-        client.sendBinary(SENDING_BYTE_BUFFER);\n-        client.sendText(CLOSE_MESSAGE);\n+        // Test Service\n+        final WebSocketTestClient[] client = new WebSocketTestClient[1];\n+        await().atMost(20, TimeUnit.SECONDS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4284a59030c2bbc804391c0b11c26ba0bdae0a7"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MjQzMTc5OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNTowODoyNVrOFeu-kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNTowODoyNVrOFeu-kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc3MTI4MA==", "bodyText": "No need to create the countDownLatch to handshake because we already set it in the implementation. Please refer the test.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20624#discussion_r367771280", "createdAt": "2020-01-17T05:08:25Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/metrics/WebSocketMetricsTestCase.java", "diffHunk": "@@ -82,7 +86,9 @@ private void setup() throws Exception {\n      */\n     @Test\n     public void testMetrics() throws Exception {\n-        WebSocketTestClient client = new WebSocketTestClient(\"ws://localhost:9090/basic/ws\");\n+        WebSocketTestClient client = new WebSocketTestClient(SERVER_URL);\n+        CountDownLatch countDownLatch = new CountDownLatch(1);\n+        countDownLatch.await(10, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a422f9fc9852361e7373ec38abb3aa093cfa8100"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 500, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}