{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MTMzNTY0", "number": 22833, "title": "Update grammar of simple-const-expr according to 2020R1 specification", "bodyText": "Purpose\n\nUpdate grammar of simple-const-expr as,\nsimple-const-expr :=\nnil-literal\n| boolean-literal\n| [Sign] int-literal\n| [Sign] floating-point-literal\n| string-literal\n| constant-reference-expr\n\nFixes #13410\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-22T08:32:06Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833", "merged": true, "mergeCommit": {"oid": "bc7da1ad83ae4d1fba7e0d5f5d4b88bf322b423a"}, "closed": true, "closedAt": "2020-04-24T11:36:56Z", "author": {"login": "chiranSachintha"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaDty9gH2gAyNDA3MTMzNTY0OmIzMTYxYjZjZTAwYWQ4YmRlYzc5ZWNlYjBlZWMyYmIwMDllZjMwMTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcav52FAFqTM5OTg2ODQ3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b3161b6ce00ad8bdec79eceb0eec2bb009ef3017", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b3161b6ce00ad8bdec79eceb0eec2bb009ef3017", "committedDate": "2020-04-22T08:07:51Z", "message": "Update grammar of simple-const-expr"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80be3d975f2f043f4d165078494327eee8a2cc80", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/80be3d975f2f043f4d165078494327eee8a2cc80", "committedDate": "2020-04-22T08:07:51Z", "message": "Add unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MTM0MTQz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#pullrequestreview-398134143", "createdAt": "2020-04-22T12:23:27Z", "commit": {"oid": "80be3d975f2f043f4d165078494327eee8a2cc80"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMjoyMzoyN1rOGJzfZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMjoyMzoyN1rOGJzfZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjkzMzk5MA==", "bodyText": "We usually try to do the testing on ballerina itself. And panic if not the intended result of the test.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r412933990", "createdAt": "2020-04-22T12:23:27Z", "author": {"login": "dulvinw"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,21 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+    @Test()\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+        Assert.assertEquals(returns.length, 1);\n+        Assert.assertNotNull(returns[0]);\n+        Assert.assertTrue(returns[0] instanceof BInteger);\n+        Assert.assertEquals(((BInteger) returns[0]).intValue(), 5);\n+    }\n+    @Test()\n+    public void testFiniteTypesWithPositiveFloats() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n+        Assert.assertEquals(returns.length, 1);\n+        Assert.assertNotNull(returns[0]);\n+        Assert.assertTrue(returns[0] instanceof BFloat);\n+        Assert.assertEquals(((BFloat) returns[0]).floatValue(), 1.5);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80be3d975f2f043f4d165078494327eee8a2cc80"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MTM0NTk0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#pullrequestreview-398134594", "createdAt": "2020-04-22T12:23:59Z", "commit": {"oid": "80be3d975f2f043f4d165078494327eee8a2cc80"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "committedDate": "2020-04-22T20:07:55Z", "message": "Fix review suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5593f73de15b99439361da5ab847e3131065b912", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5593f73de15b99439361da5ab847e3131065b912", "committedDate": "2020-04-22T19:21:06Z", "message": "Fix review suggestions"}, "afterCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/94364f238a14b5a574ec0dac4c51d0fdfdd309fe", "committedDate": "2020-04-22T20:07:55Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NzU4Mjgz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#pullrequestreview-398758283", "createdAt": "2020-04-23T04:54:47Z", "commit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1NDo0N1rOGKWhlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNTowMzo1NFrOGKWtZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwNzk4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                :   (ADD|SUB)? integerLiteral\n          \n          \n            \n                :   (ADD | SUB)? integerLiteral", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413507988", "createdAt": "2020-04-23T04:54:47Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/resources/grammar/BallerinaParser.g4", "diffHunk": "@@ -941,8 +941,8 @@ formalParameterList\n     ;\n \n simpleLiteral\n-    :   SUB? integerLiteral\n-    |   SUB? floatingPointLiteral\n+    :   (ADD|SUB)? integerLiteral", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODA0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                |   (ADD|SUB)? floatingPointLiteral\n          \n          \n            \n                |   (ADD | SUB)? floatingPointLiteral", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508045", "createdAt": "2020-04-23T04:54:59Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/resources/grammar/BallerinaParser.g4", "diffHunk": "@@ -941,8 +941,8 @@ formalParameterList\n     ;\n \n simpleLiteral\n-    :   SUB? integerLiteral\n-    |   SUB? floatingPointLiteral\n+    :   (ADD|SUB)? integerLiteral\n+    |   (ADD|SUB)? floatingPointLiteral", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODIyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508228", "createdAt": "2020-04-23T04:55:34Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODMzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508339", "createdAt": "2020-04-23T04:55:58Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-bstring-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+    }\n+\n+    @Test(description = \"Test finite type where float literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveFloats() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODYxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508614", "createdAt": "2020-04-23T04:56:42Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwODcwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");\n          \n          \n            \n                    BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413508702", "createdAt": "2020-04-23T04:56:57Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/finite/FiniteTypeTest.java", "diffHunk": "@@ -367,4 +367,14 @@ public void testEscapedTypeName() {\n         BValue[] returns = BRunUtil.invoke(result, \"testEscapedTypeName\");\n         Assert.assertEquals(returns[0].stringValue(), \"-\");\n     }\n+\n+    @Test(description = \"Test finite type where integer literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveIntegers() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveIntegers\");\n+    }\n+\n+    @Test(description = \"Test finite type where float literals with positive sign as members\")\n+    public void testFiniteTypesWithPositiveFloats() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testFiniteTypesWithPositiveFloats\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTYwNA==", "bodyText": "Shall we use different names for these types, for the new tests we are introducing? At least upper-case single letters?\nThe lower-case names kinda make them look like variable names.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413509604", "createdAt": "2020-04-23T04:59:40Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "diffHunk": "@@ -461,6 +461,31 @@ function testFiniteTypesWithDiscriminatedMembers() returns [any, any, any, any,\n     return [a, b, c, d, e];\n }\n \n+type d +3|+5;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTY3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (n != 5){\n          \n          \n            \n                if (n != 5) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413509673", "createdAt": "2020-04-23T04:59:57Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "diffHunk": "@@ -461,6 +461,31 @@ function testFiniteTypesWithDiscriminatedMembers() returns [any, any, any, any,\n     return [a, b, c, d, e];\n }\n \n+type d +3|+5;\n+\n+function testFiniteTypesWithPositiveIntegers() {\n+    d n = +3;\n+    d comparator = +3;\n+    if (n == comparator) {\n+       n = +5;\n+    }\n+    if (n != 5){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxMDk0Nw==", "bodyText": "Best practices for errors\n\nas the error reason use meaningful simple strings with no spaces\nas the message field give additional details about what caused the error\n\nSee \n  \n    \n      ballerina-lang/tests/jballerina-bstring-unit-test/src/test/resources/test-src/expressions/listconstructor/list_constructor_infer_type.bal\n    \n    \n         Line 64\n      in\n      7fa2ee5\n    \n    \n    \n    \n\n        \n          \n           panic error(ASSERTION_ERROR_REASON, \n        \n    \n  \n\n for an example.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413510947", "createdAt": "2020-04-23T05:03:40Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "diffHunk": "@@ -461,6 +461,31 @@ function testFiniteTypesWithDiscriminatedMembers() returns [any, any, any, any,\n     return [a, b, c, d, e];\n }\n \n+type d +3|+5;\n+\n+function testFiniteTypesWithPositiveIntegers() {\n+    d n = +3;\n+    d comparator = +3;\n+    if (n == comparator) {\n+       n = +5;\n+    }\n+    if (n != 5){\n+        panic error(\"Type mismatch\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxMTAxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (n != 1.5){\n          \n          \n            \n                if (n != 1.5) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#discussion_r413511015", "createdAt": "2020-04-23T05:03:54Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/finite/finite-type.bal", "diffHunk": "@@ -461,6 +461,31 @@ function testFiniteTypesWithDiscriminatedMembers() returns [any, any, any, any,\n     return [a, b, c, d, e];\n }\n \n+type d +3|+5;\n+\n+function testFiniteTypesWithPositiveIntegers() {\n+    d n = +3;\n+    d comparator = +3;\n+    if (n == comparator) {\n+       n = +5;\n+    }\n+    if (n != 5){\n+        panic error(\"Type mismatch\");\n+    }\n+}\n+\n+type f +1.2|+1.5;\n+\n+function testFiniteTypesWithPositiveFloats() {\n+    f n = +1.2;\n+    f comparator = +1.2;\n+    if (n == comparator) {\n+       n = +1.5;\n+    }\n+    if (n != 1.5){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94364f238a14b5a574ec0dac4c51d0fdfdd309fe"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "578c324fe775986125b42455243dcb706a306715", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/578c324fe775986125b42455243dcb706a306715", "committedDate": "2020-04-23T19:53:49Z", "message": "Fix review suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3962f30018fd277f52ccaf009f65f1558fdd3bcf", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3962f30018fd277f52ccaf009f65f1558fdd3bcf", "committedDate": "2020-04-23T19:40:06Z", "message": "Fix review suggestions"}, "afterCommit": {"oid": "578c324fe775986125b42455243dcb706a306715", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/578c324fe775986125b42455243dcb706a306715", "committedDate": "2020-04-23T19:53:49Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5ODY4NDc3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22833#pullrequestreview-399868477", "createdAt": "2020-04-24T11:36:50Z", "commit": {"oid": "578c324fe775986125b42455243dcb706a306715"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3425, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}