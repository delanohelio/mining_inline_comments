{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMjYyMjI2", "number": 27505, "title": "[Formatter] Fix Review Changes of Test Case Addition for Range formatting", "bodyText": "Purpose\n\nOptimize the test case addition for range formatting as per review suggestions made at #26764\n\nFixes #27383\nApproach\n\n\n\nSamples\n\n\n\nRemarks\n\nTODO: Recursively format an entire file with consecutive ranges.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-12-15T13:42:11Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505", "merged": true, "mergeCommit": {"oid": "af3a2d5b435e85addb31d62d1f68a4af2199db5a"}, "closed": true, "closedAt": "2020-12-21T11:34:59Z", "author": {"login": "sanjana"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgfuhagH2gAyNTQwMjYyMjI2OjcxOTY3YzFhYWE2YjEzMDliZDBkZDI3YTE1ZTNiODhmMzAzMWQ4NzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdoUUGsAFqTU1NjMxNTY5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "71967c1aaa6b1309bd0dd27a15e3b88f3031d875", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/71967c1aaa6b1309bd0dd27a15e3b88f3031d875", "committedDate": "2020-11-27T04:20:41Z", "message": "Fix review suggestions in range formatting test case addition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bddf8b7a909ad83b19aabe60d69d9af255b0f8b8", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bddf8b7a909ad83b19aabe60d69d9af255b0f8b8", "committedDate": "2020-12-01T07:41:29Z", "message": "Merge branch 'master' into range-formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3697b859674451ba4d69ab17332e19d6a9cd043", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b3697b859674451ba4d69ab17332e19d6a9cd043", "committedDate": "2020-12-15T12:48:40Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into range-formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffce4e5d1bec0a8dd37145ee82ac8133228c129d", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ffce4e5d1bec0a8dd37145ee82ac8133228c129d", "committedDate": "2020-12-15T13:30:39Z", "message": "Optimize RangeFormatterTest.java to re-use pre-calculated source paths"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMzIyODAz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#pullrequestreview-553322803", "createdAt": "2020-12-16T03:04:42Z", "commit": {"oid": "ffce4e5d1bec0a8dd37145ee82ac8133228c129d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMzowNDo0MlrOIGrFJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMzozMjoyN1rOIGsXaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg2ODE5OQ==", "bodyText": "Do we need this method?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r543868199", "createdAt": "2020-12-16T03:04:42Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-tools-api/src/main/java/io/ballerina/tools/text/TextDocument.java", "diffHunk": "@@ -50,6 +50,10 @@ public int textPositionFrom(LinePosition linePosition) {\n         return lines().textPositionFrom(linePosition);\n     }\n \n+    public LineMap getLines() {\n+        return this.lines();\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffce4e5d1bec0a8dd37145ee82ac8133228c129d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg4MTg4Ng==", "bodyText": "I feel this structure can be improved. What we need is a 'list' of filenames and their ranges. The best data structure to represent a list is a json array, not a json object. That will make it easier to iterate as well.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r543881886", "createdAt": "2020-12-16T03:23:09Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/misc/ranges/range-test-config.json", "diffHunk": "@@ -0,0 +1,232 @@\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffce4e5d1bec0a8dd37145ee82ac8133228c129d"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg4NjcyMQ==", "bodyText": "As a practice, we don't really need to use this for function calls. It's fine to use it for instance variables, to distinguish them with local variables. But since functions doesn't have such a concept, using this for function calls can be an overkill.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r543886721", "createdAt": "2020-12-16T03:29:13Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/java/org/ballerinalang/formatter/core/RangeFormatterTest.java", "diffHunk": "@@ -113,26 +105,34 @@ public void testParserResources(String sourcePath) throws IOException, Formatter\n      */\n     public abstract String getTestResourceDir();\n \n+    public abstract String getConfigJsonFileName();\n+\n     protected Object[][] getConfigsList() {\n         if (this.testSubset().length != 0) {\n             return this.testSubset();\n         }\n         List<String> skippedTests = this.skipList();\n         try {\n-            return Files.walk(this.resourceDirectory.resolve(this.getTestResourceDir()).resolve(ASSERT_DIR))\n-                    .filter(path -> {\n-                        File file = path.toFile();\n-                        return file.isFile() && file.getName().endsWith(\".bal\")\n-                                && !skippedTests.contains(file.getName());\n-                    })\n-                    .map(path -> new Object[]{path.toFile().getName(), this.getTestResourceDir()})\n-                    .toArray(size -> new Object[size][2]);\n-        } catch (IOException e) {\n+            File jsonConfigFile = Paths.get(resourceDirectory.toString(), this.getTestResourceDir(),\n+                    this.getConfigJsonFileName()).toFile();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffce4e5d1bec0a8dd37145ee82ac8133228c129d"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg4NzM5Mg==", "bodyText": "What is the difference between the source and the sourcePath?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r543887392", "createdAt": "2020-12-16T03:30:10Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/java/org/ballerinalang/formatter/core/RangeFormatterTest.java", "diffHunk": "@@ -38,46 +44,32 @@\n /**\n  * The abstract class that is extended by all range formatting test classes.\n  *\n- * @since 1.2.10\n+ * @since 2.0.0\n  */\n-public abstract class RangeFormatter {\n+public abstract class RangeFormatterTest {\n     private final Path resourceDirectory = Paths.get(\"src\").resolve(\"test\").resolve(\"resources\").toAbsolutePath();\n-    private Path buildDirectory = Paths.get(\"build\").toAbsolutePath().normalize();\n     private static final String ASSERT_DIR = \"assert\";\n     private static final String SOURCE_DIR = \"source\";\n \n+    private static final Gson gson = new Gson();\n+\n     @Test(dataProvider = \"test-file-provider\")\n-    public void test(String source, int[][] positions)\n+    public void test(String sourcePath, String source, JsonArray positions)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffce4e5d1bec0a8dd37145ee82ac8133228c129d"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg4OTI1OQ==", "bodyText": "Converting JSON to  LineRange is not part of the test case. Can we do this calculation at the data-provider's side?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r543889259", "createdAt": "2020-12-16T03:32:27Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/java/org/ballerinalang/formatter/core/RangeFormatterTest.java", "diffHunk": "@@ -38,46 +44,32 @@\n /**\n  * The abstract class that is extended by all range formatting test classes.\n  *\n- * @since 1.2.10\n+ * @since 2.0.0\n  */\n-public abstract class RangeFormatter {\n+public abstract class RangeFormatterTest {\n     private final Path resourceDirectory = Paths.get(\"src\").resolve(\"test\").resolve(\"resources\").toAbsolutePath();\n-    private Path buildDirectory = Paths.get(\"build\").toAbsolutePath().normalize();\n     private static final String ASSERT_DIR = \"assert\";\n     private static final String SOURCE_DIR = \"source\";\n \n+    private static final Gson gson = new Gson();\n+\n     @Test(dataProvider = \"test-file-provider\")\n-    public void test(String source, int[][] positions)\n+    public void test(String sourcePath, String source, JsonArray positions)\n             throws IOException, FormatterException {\n-        Path assertFilePath = Paths.get(resourceDirectory.toString(), this.getTestResourceDir(), ASSERT_DIR, source);\n-        Path sourceFilePath = Paths.get(resourceDirectory.toString(), this.getTestResourceDir(), SOURCE_DIR, source);\n-\n-        String content = getSourceText(sourceFilePath);\n+        Path assertFilePath = Paths.get(resourceDirectory.toString(), sourcePath, ASSERT_DIR, source);\n+        Path sourceFilePath = Paths.get(resourceDirectory.toString(), sourcePath, SOURCE_DIR, source);\n+        String content = getFileContent(sourceFilePath);\n         TextDocument textDocument = TextDocuments.from(content);\n         SyntaxTree syntaxTree = SyntaxTree.from(textDocument, sourceFilePath.toString());\n-        for (int[] position : positions) {\n-            LinePosition startPos = LinePosition.from(position[0], position[1]);\n-            LinePosition endPos = LinePosition.from(position[2], position[3]);\n-            LineRange lineRange = LineRange.from(null, startPos, endPos);\n+        for (JsonElement position : positions) {\n+            JsonObject start = position.getAsJsonObject().get(\"startPos\").getAsJsonObject();\n+            LinePosition startPos = LinePosition.from(start.get(\"lineNo\").getAsInt(), start.get(\"colNo\").getAsInt());\n+            JsonObject end = position.getAsJsonObject().get(\"endPos\").getAsJsonObject();\n+            LinePosition endPos = LinePosition.from(end.get(\"lineNo\").getAsInt(), end.get(\"colNo\").getAsInt());\n+            LineRange lineRange = LineRange.from(sourceFilePath.toString(), startPos, endPos);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffce4e5d1bec0a8dd37145ee82ac8133228c129d"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8aea073d64262fa7ccab078180b0197bc9323cdc", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8aea073d64262fa7ccab078180b0197bc9323cdc", "committedDate": "2020-12-16T03:42:21Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into range-formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d96f8531fabdc1f8199ad160f6bc93c51b211525", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d96f8531fabdc1f8199ad160f6bc93c51b211525", "committedDate": "2020-12-16T04:21:28Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into range-formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "003d383591c2903e0607ba2416a8dd9e6530d7d3", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/003d383591c2903e0607ba2416a8dd9e6530d7d3", "committedDate": "2020-12-16T10:16:03Z", "message": "Modify range-test-config.json and remove unused getLines() method in TextDocument.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7cbd5d90c3e7fb024dccea770680544b8235906", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d7cbd5d90c3e7fb024dccea770680544b8235906", "committedDate": "2020-12-16T13:55:19Z", "message": "Re-structure RangeFormatterTest and optimize data-provider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94ced91ffdf1dace2ab3c7686945f5cf43714edc", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/94ced91ffdf1dace2ab3c7686945f5cf43714edc", "committedDate": "2020-12-18T08:05:52Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into range-formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c7b3e7a8fe5ad0fcfe34f76c0716cbcac953c59", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6c7b3e7a8fe5ad0fcfe34f76c0716cbcac953c59", "committedDate": "2020-12-21T03:42:53Z", "message": "Reformat RangeFormatterTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7d999df8c2e8b4930d95076050885dcc727380c", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b7d999df8c2e8b4930d95076050885dcc727380c", "committedDate": "2020-12-21T03:43:19Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into range-formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e0d46f84cdff2dcf9c29cacaa6cdf4b160d95e8f", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e0d46f84cdff2dcf9c29cacaa6cdf4b160d95e8f", "committedDate": "2020-12-17T11:14:10Z", "message": "Fix function typedesc whitespace issue"}, "afterCommit": {"oid": "b7d999df8c2e8b4930d95076050885dcc727380c", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b7d999df8c2e8b4930d95076050885dcc727380c", "committedDate": "2020-12-21T03:43:19Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into range-formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjA5NDc1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#pullrequestreview-556209475", "createdAt": "2020-12-21T08:36:10Z", "commit": {"oid": "b7d999df8c2e8b4930d95076050885dcc727380c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODozNjoxMFrOIJQPVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODozNjoxMFrOIJQPVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3NDE2Ng==", "bodyText": "Is there a reason for using this overloaded SyntaxTree.from method?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#discussion_r546574166", "createdAt": "2020-12-21T08:36:10Z", "author": {"login": "IrushiL"}, "path": "misc/formatter/modules/formatter-core/src/test/java/org/ballerinalang/formatter/core/RangeFormatterTest.java", "diffHunk": "@@ -38,46 +44,25 @@\n /**\n  * The abstract class that is extended by all range formatting test classes.\n  *\n- * @since 1.2.10\n+ * @since 2.0.0\n  */\n-public abstract class RangeFormatter {\n+public abstract class RangeFormatterTest {\n     private final Path resourceDirectory = Paths.get(\"src\").resolve(\"test\").resolve(\"resources\").toAbsolutePath();\n-    private Path buildDirectory = Paths.get(\"build\").toAbsolutePath().normalize();\n     private static final String ASSERT_DIR = \"assert\";\n     private static final String SOURCE_DIR = \"source\";\n \n-    @Test(dataProvider = \"test-file-provider\")\n-    public void test(String source, int[][] positions)\n-            throws IOException, FormatterException {\n-        Path assertFilePath = Paths.get(resourceDirectory.toString(), this.getTestResourceDir(), ASSERT_DIR, source);\n-        Path sourceFilePath = Paths.get(resourceDirectory.toString(), this.getTestResourceDir(), SOURCE_DIR, source);\n+    private static final Gson gson = new Gson();\n \n-        String content = getSourceText(sourceFilePath);\n+    @Test(dataProvider = \"test-file-provider\")\n+    public void test(Path sourceFilePath, Path assertFilePath, ArrayList<LineRange> lineRanges) throws IOException,\n+            FormatterException {\n+        String content = getFileContent(sourceFilePath);\n         TextDocument textDocument = TextDocuments.from(content);\n         SyntaxTree syntaxTree = SyntaxTree.from(textDocument, sourceFilePath.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7d999df8c2e8b4930d95076050885dcc727380c"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "934962c741995a683cb17d88cabc2b346b7182ff", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/934962c741995a683cb17d88cabc2b346b7182ff", "committedDate": "2020-12-21T09:37:58Z", "message": "Fix overloaded SyntaxTree.from() method in RangeFormatterTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27d47617ebaea0d82fd2ed9587414f2b0c923d84", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/27d47617ebaea0d82fd2ed9587414f2b0c923d84", "committedDate": "2020-12-21T09:38:50Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into range-formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjUxMjU4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#pullrequestreview-556251258", "createdAt": "2020-12-21T09:44:48Z", "commit": {"oid": "27d47617ebaea0d82fd2ed9587414f2b0c923d84"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MzE1Njkz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27505#pullrequestreview-556315693", "createdAt": "2020-12-21T11:34:16Z", "commit": {"oid": "27d47617ebaea0d82fd2ed9587414f2b0c923d84"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4610, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}