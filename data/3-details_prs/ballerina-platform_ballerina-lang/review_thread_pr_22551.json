{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNDIwNjE3", "number": 22551, "reviewThreads": {"totalCount": 108, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NzozMFrODyHHng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNTowMDoyNVrODyHNjQ==", "hasNextPage": false, "hasPreviousPage": true}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcyMDMwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NzozMFrOGF90tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NzozMFrOGF90tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwODk4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Forcefully stops the `nats:StreamingListener`.\n          \n          \n            \n                # Stops the `nats:StreamingListener` forcefully.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408908981", "createdAt": "2020-04-15T14:57:30Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "diffHunk": "@@ -44,22 +44,40 @@ public type StreamingListener object {\n         streamingListenerInit(self);\n     }\n \n+    # Binds a service to the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or else a `nats:Error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         streamingAttach(self, s, self.connection);\n     }\n \n+    # Stops consuming messages and detaches the service from the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + return - () or else a `nats:Error` upon failure to detach the service\n     public function __detach(service s) returns error? {\n         streamingDetach(self, s);\n     }\n \n+    # Starts the `nats:StreamingListener`.\n+    #\n+    # + return - () or else a `nats:Error` upon failure to start the listener\n     public function __start() returns error? {\n          streamingSubscribe(self, self.connection, java:fromString(self.clusterId), self.clientId, self.streamingConfig);\n     }\n \n+    # Gracefully stops the `nats:StreamingListener`.\n+    #\n+    # + return - () or else a `nats:Error` upon failure to stop the listener\n     public function __gracefulStop() returns error? {\n         return ();\n     }\n \n+    # Forcefully stops the `nats:StreamingListener`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcyMDk2OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NzozOVrOGF91Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NzozOVrOGF91Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwOTA5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or else a `nats:Error` upon failure to stop the listener\n          \n          \n            \n                # + return - `()` or else a `nats:Error` upon failure to stop the listener", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408909090", "createdAt": "2020-04-15T14:57:39Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "diffHunk": "@@ -44,22 +44,40 @@ public type StreamingListener object {\n         streamingListenerInit(self);\n     }\n \n+    # Binds a service to the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or else a `nats:Error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         streamingAttach(self, s, self.connection);\n     }\n \n+    # Stops consuming messages and detaches the service from the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + return - () or else a `nats:Error` upon failure to detach the service\n     public function __detach(service s) returns error? {\n         streamingDetach(self, s);\n     }\n \n+    # Starts the `nats:StreamingListener`.\n+    #\n+    # + return - () or else a `nats:Error` upon failure to start the listener\n     public function __start() returns error? {\n          streamingSubscribe(self, self.connection, java:fromString(self.clusterId), self.clientId, self.streamingConfig);\n     }\n \n+    # Gracefully stops the `nats:StreamingListener`.\n+    #\n+    # + return - () or else a `nats:Error` upon failure to stop the listener\n     public function __gracefulStop() returns error? {\n         return ();\n     }\n \n+    # Forcefully stops the `nats:StreamingListener`.\n+    #\n+    # + return - () or else a `nats:Error` upon failure to stop the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcyNTk1OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/message.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1ODozN1rOGF94Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1ODozN1rOGF94Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwOTg4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               # + return - The subject that the message was sent to\n          \n          \n            \n               # + return - The subject, to which the message was sent", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408909882", "createdAt": "2020-04-15T14:58:37Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/message.bal", "diffHunk": "@@ -26,23 +26,23 @@ public type StreamingMessage client object {\n        self.content = content;\n    }\n \n-   # Get the message content.\n+   # Gets the message content.\n    #\n-   # + return - The data from the message as a 'byte[]'.\n+   # + return - The data from the message as a 'byte[]'\n    public function getData() returns byte[] {\n        return self.content;\n    }\n \n-   # Get the subject.\n+   # Gets the subject that the message was sent to.\n    #\n-   # + return - The subject that this message was sent to.\n+   # + return - The subject that the message was sent to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcyNzE5OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/message.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1ODo1MFrOGF95AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1ODo1MFrOGF95AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkxMDA4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               # + return - () or else a `nats:Error` upon failure to acknowledge the server\n          \n          \n            \n               # + return - `()` or else a `nats:Error` upon failure to acknowledge the server", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408910080", "createdAt": "2020-04-15T14:58:50Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/message.bal", "diffHunk": "@@ -26,23 +26,23 @@ public type StreamingMessage client object {\n        self.content = content;\n    }\n \n-   # Get the message content.\n+   # Gets the message content.\n    #\n-   # + return - The data from the message as a 'byte[]'.\n+   # + return - The data from the message as a 'byte[]'\n    public function getData() returns byte[] {\n        return self.content;\n    }\n \n-   # Get the subject.\n+   # Gets the subject that the message was sent to.\n    #\n-   # + return - The subject that this message was sent to.\n+   # + return - The subject that the message was sent to\n    public function getSubject() returns string {\n        return self.subject;\n    }\n \n-   # Acknowledge the NATS Streaming server upon the receipt of the message.\n+   # Acknowledges the NATS streaming server upon the receipt of the message.\n    #\n-   # + return - Returns () if the acknowledgment completes successfully or an error.\n+   # + return - () or else a `nats:Error` upon failure to acknowledge the server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODczMDE3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1OToyM1rOGF96xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1OToyM1rOGF96xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkxMDUzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - `string` value representing the NUID (NATS Unique Identifier) of the published message, if the\n          \n          \n            \n                # + return - The `string` value representing the NUID (NATS Unique Identifier) of the published message if the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408910533", "createdAt": "2020-04-15T14:59:23Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "diffHunk": "@@ -16,33 +16,34 @@\n \n import ballerina/java;\n \n-# NATS `StreamingProducer` would act as a client allowing to publish messages to the\n-# NATS streaming server. `StreamingProducer` needs the NATS `Connection` to be initialized.\n+# The streaming producer provides the capability to publish messages to the NATS streaming server.\n+# The `nats:StreamingProducer` needs the `nats:Connection` to be initialized.\n public type StreamingProducer client object {\n     private Connection? conn;\n \n-    # Creates a new NATS `StreamingProducer`.\n+    # Creates a new `nats:StreamingProducer` instance.\n     #\n-    # + connection - An established NATS connection.\n-    # + clientId - A unique identifier representing the client.\n-    # + clusterId - The ID of the cluster configured in the NATS server.\n-    # + streamingConfig - The configuration related to the NATS streaming connectivity.\n+    # + connection - An established NATS connection\n+    # + clientId - A unique identifier of the client\n+    # + clusterId - The unique identifier of the cluster configured in the NATS server\n+    # + streamingConfig - The configuration related to the NATS streaming connectivity\n     public function __init(Connection connection, public string? clientId = (), public string clusterId = \"test-cluster\",\n     public StreamingConfig? streamingConfig = ()) {\n         self.conn = connection;\n         streamingProducerInit(self, connection, java:fromString(clusterId), clientId, streamingConfig);\n     }\n \n     # Publishes data to a given subject.\n+    # ```ballerina string|error result = producer->publish(subject, <@untainted>message);```\n     #\n-    # + subject - The subject to send the message to.\n-    # + data - Data to publish.\n+    # + subject - The subject to send the message \n+    # + data - Data to publish\n     # + return - `string` value representing the NUID (NATS Unique Identifier) of the published message, if the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODczMTkyOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1OTozOVrOGF97wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1OTozOVrOGF97wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkxMDc4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #            message gets successfully published and acknowledged by the NATS server or else\n          \n          \n            \n                #            message gets successfully published and acknowledged by the NATS server,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408910785", "createdAt": "2020-04-15T14:59:39Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "diffHunk": "@@ -16,33 +16,34 @@\n \n import ballerina/java;\n \n-# NATS `StreamingProducer` would act as a client allowing to publish messages to the\n-# NATS streaming server. `StreamingProducer` needs the NATS `Connection` to be initialized.\n+# The streaming producer provides the capability to publish messages to the NATS streaming server.\n+# The `nats:StreamingProducer` needs the `nats:Connection` to be initialized.\n public type StreamingProducer client object {\n     private Connection? conn;\n \n-    # Creates a new NATS `StreamingProducer`.\n+    # Creates a new `nats:StreamingProducer` instance.\n     #\n-    # + connection - An established NATS connection.\n-    # + clientId - A unique identifier representing the client.\n-    # + clusterId - The ID of the cluster configured in the NATS server.\n-    # + streamingConfig - The configuration related to the NATS streaming connectivity.\n+    # + connection - An established NATS connection\n+    # + clientId - A unique identifier of the client\n+    # + clusterId - The unique identifier of the cluster configured in the NATS server\n+    # + streamingConfig - The configuration related to the NATS streaming connectivity\n     public function __init(Connection connection, public string? clientId = (), public string clusterId = \"test-cluster\",\n     public StreamingConfig? streamingConfig = ()) {\n         self.conn = connection;\n         streamingProducerInit(self, connection, java:fromString(clusterId), clientId, streamingConfig);\n     }\n \n     # Publishes data to a given subject.\n+    # ```ballerina string|error result = producer->publish(subject, <@untainted>message);```\n     #\n-    # + subject - The subject to send the message to.\n-    # + data - Data to publish.\n+    # + subject - The subject to send the message \n+    # + data - Data to publish\n     # + return - `string` value representing the NUID (NATS Unique Identifier) of the published message, if the\n-    #           message gets successfully published and acknowledged by the NATS server OR\n-    #           `nats/Error` with NUID and `message` fields in case an error occurs in publishing, the timeout\n-    #           elapses while waiting for the acknowledgement OR\n-    #           `nats/Error` only with the `message` field in case an error occurs even before publishing\n-    #           is completed\n+    #            message gets successfully published and acknowledged by the NATS server or else", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODczNDU5OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNTowMDoxNVrOGF99hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNTowMDoxNVrOGF99hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkxMTIzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #            elapses while waiting for the acknowledgement or else\n          \n          \n            \n                #            elapses while waiting for the acknowledgement, or else", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408911239", "createdAt": "2020-04-15T15:00:15Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "diffHunk": "@@ -16,33 +16,34 @@\n \n import ballerina/java;\n \n-# NATS `StreamingProducer` would act as a client allowing to publish messages to the\n-# NATS streaming server. `StreamingProducer` needs the NATS `Connection` to be initialized.\n+# The streaming producer provides the capability to publish messages to the NATS streaming server.\n+# The `nats:StreamingProducer` needs the `nats:Connection` to be initialized.\n public type StreamingProducer client object {\n     private Connection? conn;\n \n-    # Creates a new NATS `StreamingProducer`.\n+    # Creates a new `nats:StreamingProducer` instance.\n     #\n-    # + connection - An established NATS connection.\n-    # + clientId - A unique identifier representing the client.\n-    # + clusterId - The ID of the cluster configured in the NATS server.\n-    # + streamingConfig - The configuration related to the NATS streaming connectivity.\n+    # + connection - An established NATS connection\n+    # + clientId - A unique identifier of the client\n+    # + clusterId - The unique identifier of the cluster configured in the NATS server\n+    # + streamingConfig - The configuration related to the NATS streaming connectivity\n     public function __init(Connection connection, public string? clientId = (), public string clusterId = \"test-cluster\",\n     public StreamingConfig? streamingConfig = ()) {\n         self.conn = connection;\n         streamingProducerInit(self, connection, java:fromString(clusterId), clientId, streamingConfig);\n     }\n \n     # Publishes data to a given subject.\n+    # ```ballerina string|error result = producer->publish(subject, <@untainted>message);```\n     #\n-    # + subject - The subject to send the message to.\n-    # + data - Data to publish.\n+    # + subject - The subject to send the message \n+    # + data - Data to publish\n     # + return - `string` value representing the NUID (NATS Unique Identifier) of the published message, if the\n-    #           message gets successfully published and acknowledged by the NATS server OR\n-    #           `nats/Error` with NUID and `message` fields in case an error occurs in publishing, the timeout\n-    #           elapses while waiting for the acknowledgement OR\n-    #           `nats/Error` only with the `message` field in case an error occurs even before publishing\n-    #           is completed\n+    #            message gets successfully published and acknowledged by the NATS server or else\n+    #            a `nats:Error` with NUID and `message` fields in case an error occurs in publishing, the timeout\n+    #            elapses while waiting for the acknowledgement or else", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODczNTQ5OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNTowMDoyNVrOGF9-Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNTowMDoyNVrOGF9-Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkxMTQwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or else a `nats:Error` if unable to complete the close operation.\n          \n          \n            \n                # + return - `()` or else a `nats:Error` if unable to complete the close operation.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408911407", "createdAt": "2020-04-15T15:00:25Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "diffHunk": "@@ -70,7 +71,7 @@ public type StreamingProducer client object {\n \n     # Close the producer.\n     #\n-    # + return - Returns () or the error if unable to complete the close operation.\n+    # + return - () or else a `nats:Error` if unable to complete the close operation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDgyOTIwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzoyOTowMFrOGDYtrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzoyOTowMFrOGDYtrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwMzgyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            >**Note:** The default thread pool size used in Ballerina is number of processors available * 2. You can configure the thread pool size by using the `BALLERINA_MAX_POOL_SIZE` environment variable.\n          \n          \n            \n            >**Note:** The default thread pool size used in Ballerina is the number of processors available * 2. You can configure the thread pool size by using the `BALLERINA_MAX_POOL_SIZE` environment variable.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406203822", "createdAt": "2020-04-09T13:29:00Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/Module.md", "diffHunk": "@@ -173,4 +148,14 @@ nats:ConnectionConfig config = {\n // Initializes a connection.\n nats:Connection connection = new(\"tls://localhost:4222\", config = config);\n ```\n->**Note:** The default thread pool size used in Ballerina is number of processors available * 2. You can configure the thread pool size by using the `BALLERINA_MAX_POOL_SIZE` environment variable.\n\\ No newline at end of file\n+>**Note:** The default thread pool size used in Ballerina is number of processors available * 2. You can configure the thread pool size by using the `BALLERINA_MAX_POOL_SIZE` environment variable.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDgzMDQ4OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzoyOToxOFrOGDYufg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzoyOToxOFrOGDYufg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNDAzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For information on the operations, which you can perform with this module, see the below Functions. \n          \n          \n            \n            For information on the operations, which you can perform with this module, see the below **Functions**.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406204030", "createdAt": "2020-04-09T13:29:18Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/Module.md", "diffHunk": "@@ -173,4 +148,14 @@ nats:ConnectionConfig config = {\n // Initializes a connection.\n nats:Connection connection = new(\"tls://localhost:4222\", config = config);\n ```\n->**Note:** The default thread pool size used in Ballerina is number of processors available * 2. You can configure the thread pool size by using the `BALLERINA_MAX_POOL_SIZE` environment variable.\n\\ No newline at end of file\n+>**Note:** The default thread pool size used in Ballerina is number of processors available * 2. You can configure the thread pool size by using the `BALLERINA_MAX_POOL_SIZE` environment variable.\n+\n+For information on the operations, which you can perform with this module, see the below Functions. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDgzMTI0OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzoyOToyOFrOGDYu-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzoyOToyOFrOGDYu-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNDE1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For examples on the usage of the connector, see following,\n          \n          \n            \n            For examples on the usage of the connector, see the following.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406204152", "createdAt": "2020-04-09T13:29:28Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/Module.md", "diffHunk": "@@ -173,4 +148,14 @@ nats:ConnectionConfig config = {\n // Initializes a connection.\n nats:Connection connection = new(\"tls://localhost:4222\", config = config);\n ```\n->**Note:** The default thread pool size used in Ballerina is number of processors available * 2. You can configure the thread pool size by using the `BALLERINA_MAX_POOL_SIZE` environment variable.\n\\ No newline at end of file\n+>**Note:** The default thread pool size used in Ballerina is number of processors available * 2. You can configure the thread pool size by using the `BALLERINA_MAX_POOL_SIZE` environment variable.\n+\n+For information on the operations, which you can perform with this module, see the below Functions. \n+\n+For examples on the usage of the connector, see following,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 140}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDgzMjAxOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzoyOTo0MFrOGDYvZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzoyOTo0MFrOGDYvZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNDI2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The configurations for NATS basic subscription.\n          \n          \n            \n            # The configurations for the NATS basic subscription.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406204263", "createdAt": "2020-04-09T13:29:40Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "diffHunk": "@@ -14,30 +14,30 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# NATS basic subscription parameters.\n+# The configurations for NATS basic subscription.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDgzMzQyOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzoyOTo1NVrOGDYwMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzoyOTo1NVrOGDYwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNDQ2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The configurations to set limits on the maximum number of messages, or maximum size of messages this consumer will\n          \n          \n            \n            # The configurations to set limits on the maximum number of messages or maximum size of messages this consumer will", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406204466", "createdAt": "2020-04-09T13:29:55Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "diffHunk": "@@ -14,30 +14,30 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# NATS basic subscription parameters.\n+# The configurations for NATS basic subscription.\n #\n-# + subject - Name of the subject.\n-# + queueName - Name of the queue group.\n+# + subject - Name of the subject\n+# + queueName - Name of the queue group\n # + pendingLimits - Parameters to set limits on the maximum number of pending messages,\n-#                               or maximum size of pending messages.\n+#                   or maximum size of pending messages\n public type SubscriptionConfigData record {|\n     string subject;\n     string queueName?;\n     PendingLimits pendingLimits?;\n |};\n \n-# Parameters to set limits on the maximum number of messages, or maximum size of messages this consumer will\n+# The configurations to set limits on the maximum number of messages, or maximum size of messages this consumer will", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDgzNDQ0OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMDoxMlrOGDYw5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMDoxMlrOGDYw5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNDY0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + maxMessages - Maximum number of pending messages retrieved and held by the consumer service,\n          \n          \n            \n            # + maxMessages - Maximum number of pending messages retrieved and held by the consumer service.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406204646", "createdAt": "2020-04-09T13:30:12Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "diffHunk": "@@ -14,30 +14,30 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# NATS basic subscription parameters.\n+# The configurations for NATS basic subscription.\n #\n-# + subject - Name of the subject.\n-# + queueName - Name of the queue group.\n+# + subject - Name of the subject\n+# + queueName - Name of the queue group\n # + pendingLimits - Parameters to set limits on the maximum number of pending messages,\n-#                               or maximum size of pending messages.\n+#                   or maximum size of pending messages\n public type SubscriptionConfigData record {|\n     string subject;\n     string queueName?;\n     PendingLimits pendingLimits?;\n |};\n \n-# Parameters to set limits on the maximum number of messages, or maximum size of messages this consumer will\n+# The configurations to set limits on the maximum number of messages, or maximum size of messages this consumer will\n # hold before it starts to drop new messages waiting for the resource functions to drain the queue.\n # Setting a value to anything less than or equal to 0 will disable this check.\n #\n # + maxMessages - Maximum number of pending messages retrieved and held by the consumer service,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDgzNTU1OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMDoyNlrOGDYxhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMDoyNlrOGDYxhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNDgwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #                 defaults to 65536\n          \n          \n            \n            #                 The default value is 65536", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406204805", "createdAt": "2020-04-09T13:30:26Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "diffHunk": "@@ -14,30 +14,30 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# NATS basic subscription parameters.\n+# The configurations for NATS basic subscription.\n #\n-# + subject - Name of the subject.\n-# + queueName - Name of the queue group.\n+# + subject - Name of the subject\n+# + queueName - Name of the queue group\n # + pendingLimits - Parameters to set limits on the maximum number of pending messages,\n-#                               or maximum size of pending messages.\n+#                   or maximum size of pending messages\n public type SubscriptionConfigData record {|\n     string subject;\n     string queueName?;\n     PendingLimits pendingLimits?;\n |};\n \n-# Parameters to set limits on the maximum number of messages, or maximum size of messages this consumer will\n+# The configurations to set limits on the maximum number of messages, or maximum size of messages this consumer will\n # hold before it starts to drop new messages waiting for the resource functions to drain the queue.\n # Setting a value to anything less than or equal to 0 will disable this check.\n #\n # + maxMessages - Maximum number of pending messages retrieved and held by the consumer service,\n-#                   defaults to 65536.\n+#                 defaults to 65536", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDgzNjc3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMDo0MVrOGDYyQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMDo0MVrOGDYyQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNDk5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #              defaults to 67108864\n          \n          \n            \n            #              defaults to 67108864\n          \n      \n    \n    \n  \n\nSame as above.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406204992", "createdAt": "2020-04-09T13:30:41Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "diffHunk": "@@ -14,30 +14,30 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# NATS basic subscription parameters.\n+# The configurations for NATS basic subscription.\n #\n-# + subject - Name of the subject.\n-# + queueName - Name of the queue group.\n+# + subject - Name of the subject\n+# + queueName - Name of the queue group\n # + pendingLimits - Parameters to set limits on the maximum number of pending messages,\n-#                               or maximum size of pending messages.\n+#                   or maximum size of pending messages\n public type SubscriptionConfigData record {|\n     string subject;\n     string queueName?;\n     PendingLimits pendingLimits?;\n |};\n \n-# Parameters to set limits on the maximum number of messages, or maximum size of messages this consumer will\n+# The configurations to set limits on the maximum number of messages, or maximum size of messages this consumer will\n # hold before it starts to drop new messages waiting for the resource functions to drain the queue.\n # Setting a value to anything less than or equal to 0 will disable this check.\n #\n # + maxMessages - Maximum number of pending messages retrieved and held by the consumer service,\n-#                   defaults to 65536.\n+#                 defaults to 65536\n # + maxBytes - Total size of pending messages in bytes retrieved and held by the consumer service,\n-#               defaults to 67108864.\n+#              defaults to 67108864", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDgzNzMyOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMDo0OVrOGDYyoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMDo0OVrOGDYyoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNTA4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The annotation which is used to configure the basic subscription.\n          \n          \n            \n            # The annotation, which is used to configure the basic subscription.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406205088", "createdAt": "2020-04-09T13:30:49Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "diffHunk": "@@ -14,30 +14,30 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# NATS basic subscription parameters.\n+# The configurations for NATS basic subscription.\n #\n-# + subject - Name of the subject.\n-# + queueName - Name of the queue group.\n+# + subject - Name of the subject\n+# + queueName - Name of the queue group\n # + pendingLimits - Parameters to set limits on the maximum number of pending messages,\n-#                               or maximum size of pending messages.\n+#                   or maximum size of pending messages\n public type SubscriptionConfigData record {|\n     string subject;\n     string queueName?;\n     PendingLimits pendingLimits?;\n |};\n \n-# Parameters to set limits on the maximum number of messages, or maximum size of messages this consumer will\n+# The configurations to set limits on the maximum number of messages, or maximum size of messages this consumer will\n # hold before it starts to drop new messages waiting for the resource functions to drain the queue.\n # Setting a value to anything less than or equal to 0 will disable this check.\n #\n # + maxMessages - Maximum number of pending messages retrieved and held by the consumer service,\n-#                   defaults to 65536.\n+#                 defaults to 65536\n # + maxBytes - Total size of pending messages in bytes retrieved and held by the consumer service,\n-#               defaults to 67108864.\n+#              defaults to 67108864\n public type PendingLimits record {|\n     int maxMessages;\n     int maxBytes;\n |};\n \n-# Basic Subscription config annotation.\n+# The annotation which is used to configure the basic subscription.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDgzODI1OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/message.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMTowNFrOGDYzPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMTowNFrOGDYzPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNTI0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents the message a NATS Server sends to subscribed services.\n          \n          \n            \n            # Represents the message, which a NATS Server sends to its subscribed services.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406205245", "createdAt": "2020-04-09T13:31:04Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/message.bal", "diffHunk": "@@ -14,7 +14,7 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# Represents a message, which will be pushed from the NATS server to the consumer.\n+# Represents the message a NATS Server sends to subscribed services.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDgzODk0OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/message.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMToxM1rOGDYzqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMToxM1rOGDYzqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNTM1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Gets the replyTo subject of the message.\n          \n          \n            \n                # Gets the `replyTo` subject of the message.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406205355", "createdAt": "2020-04-09T13:31:13Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/message.bal", "diffHunk": "@@ -26,21 +26,21 @@ public type Message object {\n         self.replyTo = replyTo;\n     }\n \n-    # Get the message content.\n+    # Gets the message content.\n     #\n-    # + return - The data returned from the message as a 'byte[]'.\n+    # + return - The data returned from the message as a 'byte[]'\n     public function getData() returns byte[] {\n         return self.content;\n     }\n \n-    # Get the replyTo subject of the message.\n+    # Gets the replyTo subject of the message.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg0MDI3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/message.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMTozMFrOGDY0fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMTozMFrOGDY0fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNTU2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - The subject the client is expected to send a reply message on\n          \n          \n            \n                # + return - The subject to which the client is expected to send a reply message", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406205566", "createdAt": "2020-04-09T13:31:30Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/message.bal", "diffHunk": "@@ -26,21 +26,21 @@ public type Message object {\n         self.replyTo = replyTo;\n     }\n \n-    # Get the message content.\n+    # Gets the message content.\n     #\n-    # + return - The data returned from the message as a 'byte[]'.\n+    # + return - The data returned from the message as a 'byte[]'\n     public function getData() returns byte[] {\n         return self.content;\n     }\n \n-    # Get the replyTo subject of the message.\n+    # Gets the replyTo subject of the message.\n     #\n-    # + return - The subject the client is expected to send a reply message on.\n+    # + return - The subject the client is expected to send a reply message on", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg0MTM1OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/message.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMTo0MlrOGDY1KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMTo0MlrOGDY1KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNTczNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Gets the subject that the message was sent to.\n          \n          \n            \n                # Gets the subject to which the message was sent to.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406205737", "createdAt": "2020-04-09T13:31:42Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/message.bal", "diffHunk": "@@ -26,21 +26,21 @@ public type Message object {\n         self.replyTo = replyTo;\n     }\n \n-    # Get the message content.\n+    # Gets the message content.\n     #\n-    # + return - The data returned from the message as a 'byte[]'.\n+    # + return - The data returned from the message as a 'byte[]'\n     public function getData() returns byte[] {\n         return self.content;\n     }\n \n-    # Get the replyTo subject of the message.\n+    # Gets the replyTo subject of the message.\n     #\n-    # + return - The subject the client is expected to send a reply message on.\n+    # + return - The subject the client is expected to send a reply message on\n     public function getReplyTo() returns string? {\n         return self.replyTo;\n     }\n \n-    # Get the subject of the message.\n+    # Gets the subject that the message was sent to.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg0MzY2OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMjoxMFrOGDY2jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMjoxMFrOGDY2jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNjA5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return -  () or error if there is a problem when publishing the message\n          \n          \n            \n                # + return -  () or error if there is a problem when publishing the message\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406206093", "createdAt": "2020-04-09T13:32:10Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "diffHunk": "@@ -17,26 +17,27 @@\n import ballerina/log;\n import ballerina/java;\n \n-# NATS `Producer` would act as a basic client allowing to publish messages to the NATS server.\n-# Producer needs the NATS `Connection` to be initialized.\n+# The producer provides the capability to publish messages to the NATS server.\n+# The `nats:Producer` needs the `nats:Connection` to be initialized.\n public type Producer client object {\n \n     private Connection? conn = ();\n \n-    # Creates a new NATS `Producer`.\n+    # Creates a new `nats:Producer`.\n     #\n-    # + connection - An already-established connection.\n+    # + connection - An established NATS connection\n     public function __init(Connection connection) {\n         self.conn = connection;\n         producerInit(connection);\n     }\n \n-    # Produces a message to a NATS basic server for the given subject.\n+    # Publishes data to a given subject.\n+    # ```ballerina nats:Error? result = producer->publish(subject, <@untainted>message);```\n     #\n-    # + subject - The subject to send the message to.\n-    # + data - Data to publish.\n-    # + replyTo - The subject or the callback service the receiver should send the response to.\n-    # + return -  A specific error if there is a problem when publishing the message. Returns () otherwise.\n+    # + subject - The subject to send the message to\n+    # + data - Data to publish\n+    # + replyTo - The subject or the callback service the receiver should send the response to\n+    # + return -  () or error if there is a problem when publishing the message", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg0NDc4OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMjoyN1rOGDY3Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMjoyN1rOGDY3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNjI2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return -  The response message or an error\n          \n          \n            \n                # + return -  The response message or an error\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406206262", "createdAt": "2020-04-09T13:32:27Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "diffHunk": "@@ -47,12 +48,13 @@ public type Producer client object {\n         }\n     }\n \n-    # Produces a message and would wait for a response.\n+    # Publishes data to a given subject and waits for a response.\n+    # ```ballerina nats:Message|nats:Error reqReply = producer->request(subject, <@untainted>message, 5000);```\n     #\n-    # + subject - Would represent the topic/queue name.\n-    # + data - The message body to publish.\n-    # + duration - The time to wait for a response measured in milliseconds.\n-    # + return -  The response message or an error.\n+    # + subject - The subject to send the message to\n+    # + data - Data to publish\n+    # + duration - The time(in milliseconds) to wait for the response\n+    # + return -  The response message or an error", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg0NTI3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMjozM1rOGDY3eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMjozM1rOGDY3eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNjMyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or the error if unable to complete the close operation\n          \n          \n            \n                # + return - () or the error if unable to complete the close operation\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406206328", "createdAt": "2020-04-09T13:32:33Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "diffHunk": "@@ -62,9 +64,9 @@ public type Producer client object {\n         }\n     }\n \n-    # Close a given connection.\n+    # Closes a given connection.\n     #\n-    # + return - Retruns () or the error if unable to complete the close operation.\n+    # + return - () or the error if unable to complete the close operation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg0NTg5OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMjo0M1rOGDY35g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMjo0M1rOGDY35g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNjQzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents the NATS server connection, to which a subscription service should be bound to in order to\n          \n          \n            \n            # Represents the NATS server connection to which a subscription service should be bound in order to", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406206438", "createdAt": "2020-04-09T13:32:43Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "diffHunk": "@@ -17,54 +17,55 @@\n import ballerina/lang.'object as lang;\n import ballerina/java;\n \n-# Represents a connection which will be used for subscription.\n+# Represents the NATS server connection, to which a subscription service should be bound to in order to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg0NzQ3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMzowM1rOGDY43g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMzowM1rOGDY43g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNjY4Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or the error upon failure to register the listener\n          \n          \n            \n                # + return - () or the error upon failure to register the listener\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406206686", "createdAt": "2020-04-09T13:33:03Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "diffHunk": "@@ -17,54 +17,55 @@\n import ballerina/lang.'object as lang;\n import ballerina/java;\n \n-# Represents a connection which will be used for subscription.\n+# Represents the NATS server connection, to which a subscription service should be bound to in order to\n+# receive messages of the corresponding subscription.\n public type Listener object {\n \n     *lang:Listener;\n     private Connection conn;\n \n-    # Creates a new consumer. A new connection will be created if a reference to a connection is not provided.\n+    # Creates a new NATS Listener.\n     #\n-    # + connection - An already-established connection or configuration to create a new connection.\n+    # + connection - An established NATS connection.\n     public function __init(Connection connection) {\n         self.conn = connection;\n         consumerInit(self, connection);\n     }\n \n-    # Binds the NATS consumer to a service.\n+    # Binds a service to the `nats:Listener`.\n     #\n-    # + s - Type descriptor of the service.\n-    # + name - Name of the service.\n-    # + return - Returns nil or the error upon failure to register the listener.\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or the error upon failure to register the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg0ODEzOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMzoxMlrOGDY5VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMzoxMlrOGDY5VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNjgwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or error upon failure to start the listener\n          \n          \n            \n                # + return - () or error upon failure to start the listener\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406206804", "createdAt": "2020-04-09T13:33:12Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "diffHunk": "@@ -17,54 +17,55 @@\n import ballerina/lang.'object as lang;\n import ballerina/java;\n \n-# Represents a connection which will be used for subscription.\n+# Represents the NATS server connection, to which a subscription service should be bound to in order to\n+# receive messages of the corresponding subscription.\n public type Listener object {\n \n     *lang:Listener;\n     private Connection conn;\n \n-    # Creates a new consumer. A new connection will be created if a reference to a connection is not provided.\n+    # Creates a new NATS Listener.\n     #\n-    # + connection - An already-established connection or configuration to create a new connection.\n+    # + connection - An established NATS connection.\n     public function __init(Connection connection) {\n         self.conn = connection;\n         consumerInit(self, connection);\n     }\n \n-    # Binds the NATS consumer to a service.\n+    # Binds a service to the `nats:Listener`.\n     #\n-    # + s - Type descriptor of the service.\n-    # + name - Name of the service.\n-    # + return - Returns nil or the error upon failure to register the listener.\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or the error upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         return basicRegister(self, s, name);\n     }\n \n-    # Stops consuming messages and detaches the service from the `Listener` endpoint.\n+    # Stops consuming messages and detaches the service from the `nats:Listener`.\n     #\n     # + s - Type descriptor of the service\n-    # + return - Nil or error upon failure to detach the service\n+    # + return - () or error upon failure to detach the service\n     public function __detach(service s) returns error? {\n         return basicDetach(self, s);\n     }\n \n-    # Starts the listener in the lifecycle.\n+    # Starts the `nats:Listener`.\n     #\n-    # + return - Error or ().\n+    # + return - () or error upon failure to start the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg0ODcyOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMzoyMFrOGDY5tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMzoyMFrOGDY5tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNjkwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or error upon failure to stop the listener\n          \n          \n            \n                # + return - () or error upon failure to stop the listener\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406206902", "createdAt": "2020-04-09T13:33:20Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "diffHunk": "@@ -17,54 +17,55 @@\n import ballerina/lang.'object as lang;\n import ballerina/java;\n \n-# Represents a connection which will be used for subscription.\n+# Represents the NATS server connection, to which a subscription service should be bound to in order to\n+# receive messages of the corresponding subscription.\n public type Listener object {\n \n     *lang:Listener;\n     private Connection conn;\n \n-    # Creates a new consumer. A new connection will be created if a reference to a connection is not provided.\n+    # Creates a new NATS Listener.\n     #\n-    # + connection - An already-established connection or configuration to create a new connection.\n+    # + connection - An established NATS connection.\n     public function __init(Connection connection) {\n         self.conn = connection;\n         consumerInit(self, connection);\n     }\n \n-    # Binds the NATS consumer to a service.\n+    # Binds a service to the `nats:Listener`.\n     #\n-    # + s - Type descriptor of the service.\n-    # + name - Name of the service.\n-    # + return - Returns nil or the error upon failure to register the listener.\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or the error upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         return basicRegister(self, s, name);\n     }\n \n-    # Stops consuming messages and detaches the service from the `Listener` endpoint.\n+    # Stops consuming messages and detaches the service from the `nats:Listener`.\n     #\n     # + s - Type descriptor of the service\n-    # + return - Nil or error upon failure to detach the service\n+    # + return - () or error upon failure to detach the service\n     public function __detach(service s) returns error? {\n         return basicDetach(self, s);\n     }\n \n-    # Starts the listener in the lifecycle.\n+    # Starts the `nats:Listener`.\n     #\n-    # + return - Error or ().\n+    # + return - () or error upon failure to start the listener\n     public function __start() returns error? {\n         return basicStart(self);\n     }\n \n-    # Gracefully stops the listener in the lifecycle.\n+    # Gracefully stops the `nats:Listener`.\n     #\n-    # + return - Error or ().\n+    # + return - () or error upon failure to stop the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg0OTI2OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMzoyN1rOGDY6Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMzoyN1rOGDY6Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNjk3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or error upon failure to stop the listener\n          \n          \n            \n                # + return - () or error upon failure to stop the listener\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406206978", "createdAt": "2020-04-09T13:33:27Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "diffHunk": "@@ -17,54 +17,55 @@\n import ballerina/lang.'object as lang;\n import ballerina/java;\n \n-# Represents a connection which will be used for subscription.\n+# Represents the NATS server connection, to which a subscription service should be bound to in order to\n+# receive messages of the corresponding subscription.\n public type Listener object {\n \n     *lang:Listener;\n     private Connection conn;\n \n-    # Creates a new consumer. A new connection will be created if a reference to a connection is not provided.\n+    # Creates a new NATS Listener.\n     #\n-    # + connection - An already-established connection or configuration to create a new connection.\n+    # + connection - An established NATS connection.\n     public function __init(Connection connection) {\n         self.conn = connection;\n         consumerInit(self, connection);\n     }\n \n-    # Binds the NATS consumer to a service.\n+    # Binds a service to the `nats:Listener`.\n     #\n-    # + s - Type descriptor of the service.\n-    # + name - Name of the service.\n-    # + return - Returns nil or the error upon failure to register the listener.\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or the error upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         return basicRegister(self, s, name);\n     }\n \n-    # Stops consuming messages and detaches the service from the `Listener` endpoint.\n+    # Stops consuming messages and detaches the service from the `nats:Listener`.\n     #\n     # + s - Type descriptor of the service\n-    # + return - Nil or error upon failure to detach the service\n+    # + return - () or error upon failure to detach the service\n     public function __detach(service s) returns error? {\n         return basicDetach(self, s);\n     }\n \n-    # Starts the listener in the lifecycle.\n+    # Starts the `nats:Listener`.\n     #\n-    # + return - Error or ().\n+    # + return - () or error upon failure to start the listener\n     public function __start() returns error? {\n         return basicStart(self);\n     }\n \n-    # Gracefully stops the listener in the lifecycle.\n+    # Gracefully stops the `nats:Listener`.\n     #\n-    # + return - Error or ().\n+    # + return - () or error upon failure to stop the listener\n     public function __gracefulStop() returns error? {\n         return basicGracefulStop(self);\n     }\n \n-    # Forcefully stops the listener in the lifecycle.\n+    # Forcefully stops the `nats:Listener`.\n     #\n-    # + return - Error or ().\n+    # + return - () or error upon failure to stop the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg1MDI0OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMzozOVrOGDY6nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMzozOVrOGDY6nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNzEzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Configuration related to create a NATS streaming subscription.\n          \n          \n            \n            # Configurations related to creating a NATS streaming subscription.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406207132", "createdAt": "2020-04-09T13:33:39Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configuration related to create a NATS streaming subscription.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg1MTQ5OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMzo1NFrOGDY7Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozMzo1NFrOGDY7Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNzMxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + connectionName - Name of the connection(This is optional)\n          \n          \n            \n            # + connectionName - Name of the connection (this is optional)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406207311", "createdAt": "2020-04-09T13:33:54Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configuration related to create a NATS streaming subscription.\n #\n-# + connectionName - Name of the connection. This is optional.\n-# + maxReconnect - Maximum number of reconnect attempts. Use 0 to turn off auto reconnect.\n-# Use -1 to turn on infinite reconnects. The reconnect state is entered when the connection is connected and when\n-# that connection is lost. During the initial connection attempt, the client will cycle over\n-# its server list one time regardless of the maxReconnects value that is set.\n-# + reconnectWaitInSeconds - The time to wait between reconnect attempts to reconnect to the same server.\n-# This is measured in seconds.\n-# + connectionTimeoutInSeconds - The timeout for connection attempts measured in seconds.\n-# + pingIntervalInMinutes - The interval between the attempts of pinging the server. This is measured in minutes.\n-# + maxPingsOut - The maximum number of pings the client can have in flight. The default value will be a small number.\n-# + username - The username for basic authentication.\n-# + password - The password for basic authentication.\n-# + token - The token for token-based authentication.\n-# + inboxPrefix - The connection's inbox prefix. All inboxes will start with this string.\n+# + connectionName - Name of the connection(This is optional)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg1NDEzOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNDozMlrOGDY89Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNDozMlrOGDY89Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNzczMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #                  and when that connection is lost. During the initial connection attempt, the client will cycle\n          \n          \n            \n            #                  and when that connection is lost. During the initial connection attempt, the client will cycle\n          \n      \n    \n    \n  \n\nWhen both connected and lost? The idea isn't clear.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406207733", "createdAt": "2020-04-09T13:34:32Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configuration related to create a NATS streaming subscription.\n #\n-# + connectionName - Name of the connection. This is optional.\n-# + maxReconnect - Maximum number of reconnect attempts. Use 0 to turn off auto reconnect.\n-# Use -1 to turn on infinite reconnects. The reconnect state is entered when the connection is connected and when\n-# that connection is lost. During the initial connection attempt, the client will cycle over\n-# its server list one time regardless of the maxReconnects value that is set.\n-# + reconnectWaitInSeconds - The time to wait between reconnect attempts to reconnect to the same server.\n-# This is measured in seconds.\n-# + connectionTimeoutInSeconds - The timeout for connection attempts measured in seconds.\n-# + pingIntervalInMinutes - The interval between the attempts of pinging the server. This is measured in minutes.\n-# + maxPingsOut - The maximum number of pings the client can have in flight. The default value will be a small number.\n-# + username - The username for basic authentication.\n-# + password - The password for basic authentication.\n-# + token - The token for token-based authentication.\n-# + inboxPrefix - The connection's inbox prefix. All inboxes will start with this string.\n+# + connectionName - Name of the connection(This is optional)\n+# + maxReconnect - Maximum number of reconnect attempts. The reconnect state is entered when the connection is connected\n+#                  and when that connection is lost. During the initial connection attempt, the client will cycle", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg1NDc0OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNDo0MlrOGDY9YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNDo0MlrOGDY9YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNzg0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #                  over its server list one time regardless of the maxReconnects value that is set.\n          \n          \n            \n            #                  over its server list one time regardless of the `maxReconnects` value that is set.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406207841", "createdAt": "2020-04-09T13:34:42Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configuration related to create a NATS streaming subscription.\n #\n-# + connectionName - Name of the connection. This is optional.\n-# + maxReconnect - Maximum number of reconnect attempts. Use 0 to turn off auto reconnect.\n-# Use -1 to turn on infinite reconnects. The reconnect state is entered when the connection is connected and when\n-# that connection is lost. During the initial connection attempt, the client will cycle over\n-# its server list one time regardless of the maxReconnects value that is set.\n-# + reconnectWaitInSeconds - The time to wait between reconnect attempts to reconnect to the same server.\n-# This is measured in seconds.\n-# + connectionTimeoutInSeconds - The timeout for connection attempts measured in seconds.\n-# + pingIntervalInMinutes - The interval between the attempts of pinging the server. This is measured in minutes.\n-# + maxPingsOut - The maximum number of pings the client can have in flight. The default value will be a small number.\n-# + username - The username for basic authentication.\n-# + password - The password for basic authentication.\n-# + token - The token for token-based authentication.\n-# + inboxPrefix - The connection's inbox prefix. All inboxes will start with this string.\n+# + connectionName - Name of the connection(This is optional)\n+# + maxReconnect - Maximum number of reconnect attempts. The reconnect state is entered when the connection is connected\n+#                  and when that connection is lost. During the initial connection attempt, the client will cycle\n+#                  over its server list one time regardless of the maxReconnects value that is set.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg1NTMwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNDo1MFrOGDY9vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNDo1MFrOGDY9vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwNzkzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #                  Use 0 to turn off auto reconnect\n          \n          \n            \n            #                  Use 0 to turn off auto reconnect.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406207933", "createdAt": "2020-04-09T13:34:50Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configuration related to create a NATS streaming subscription.\n #\n-# + connectionName - Name of the connection. This is optional.\n-# + maxReconnect - Maximum number of reconnect attempts. Use 0 to turn off auto reconnect.\n-# Use -1 to turn on infinite reconnects. The reconnect state is entered when the connection is connected and when\n-# that connection is lost. During the initial connection attempt, the client will cycle over\n-# its server list one time regardless of the maxReconnects value that is set.\n-# + reconnectWaitInSeconds - The time to wait between reconnect attempts to reconnect to the same server.\n-# This is measured in seconds.\n-# + connectionTimeoutInSeconds - The timeout for connection attempts measured in seconds.\n-# + pingIntervalInMinutes - The interval between the attempts of pinging the server. This is measured in minutes.\n-# + maxPingsOut - The maximum number of pings the client can have in flight. The default value will be a small number.\n-# + username - The username for basic authentication.\n-# + password - The password for basic authentication.\n-# + token - The token for token-based authentication.\n-# + inboxPrefix - The connection's inbox prefix. All inboxes will start with this string.\n+# + connectionName - Name of the connection(This is optional)\n+# + maxReconnect - Maximum number of reconnect attempts. The reconnect state is entered when the connection is connected\n+#                  and when that connection is lost. During the initial connection attempt, the client will cycle\n+#                  over its server list one time regardless of the maxReconnects value that is set.\n+#                  Use 0 to turn off auto reconnect", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg1NTg2OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNDo1OVrOGDY-IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNDo1OVrOGDY-IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwODAzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #                  Use -1 to turn on infinite reconnects\n          \n          \n            \n            #                  Use -1 to turn on infinite reconnects", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406208033", "createdAt": "2020-04-09T13:34:59Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configuration related to create a NATS streaming subscription.\n #\n-# + connectionName - Name of the connection. This is optional.\n-# + maxReconnect - Maximum number of reconnect attempts. Use 0 to turn off auto reconnect.\n-# Use -1 to turn on infinite reconnects. The reconnect state is entered when the connection is connected and when\n-# that connection is lost. During the initial connection attempt, the client will cycle over\n-# its server list one time regardless of the maxReconnects value that is set.\n-# + reconnectWaitInSeconds - The time to wait between reconnect attempts to reconnect to the same server.\n-# This is measured in seconds.\n-# + connectionTimeoutInSeconds - The timeout for connection attempts measured in seconds.\n-# + pingIntervalInMinutes - The interval between the attempts of pinging the server. This is measured in minutes.\n-# + maxPingsOut - The maximum number of pings the client can have in flight. The default value will be a small number.\n-# + username - The username for basic authentication.\n-# + password - The password for basic authentication.\n-# + token - The token for token-based authentication.\n-# + inboxPrefix - The connection's inbox prefix. All inboxes will start with this string.\n+# + connectionName - Name of the connection(This is optional)\n+# + maxReconnect - Maximum number of reconnect attempts. The reconnect state is entered when the connection is connected\n+#                  and when that connection is lost. During the initial connection attempt, the client will cycle\n+#                  over its server list one time regardless of the maxReconnects value that is set.\n+#                  Use 0 to turn off auto reconnect\n+#                  Use -1 to turn on infinite reconnects", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg1NzQ4OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNToyMVrOGDY_Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNToyMVrOGDY_Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwODI4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + maxPingsOut - The maximum number of pings the client can have in flight. The default value sets to two\n          \n          \n            \n            # + maxPingsOut - The maximum number of pings the client can have in flight. The default value is two", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406208287", "createdAt": "2020-04-09T13:35:21Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configuration related to create a NATS streaming subscription.\n #\n-# + connectionName - Name of the connection. This is optional.\n-# + maxReconnect - Maximum number of reconnect attempts. Use 0 to turn off auto reconnect.\n-# Use -1 to turn on infinite reconnects. The reconnect state is entered when the connection is connected and when\n-# that connection is lost. During the initial connection attempt, the client will cycle over\n-# its server list one time regardless of the maxReconnects value that is set.\n-# + reconnectWaitInSeconds - The time to wait between reconnect attempts to reconnect to the same server.\n-# This is measured in seconds.\n-# + connectionTimeoutInSeconds - The timeout for connection attempts measured in seconds.\n-# + pingIntervalInMinutes - The interval between the attempts of pinging the server. This is measured in minutes.\n-# + maxPingsOut - The maximum number of pings the client can have in flight. The default value will be a small number.\n-# + username - The username for basic authentication.\n-# + password - The password for basic authentication.\n-# + token - The token for token-based authentication.\n-# + inboxPrefix - The connection's inbox prefix. All inboxes will start with this string.\n+# + connectionName - Name of the connection(This is optional)\n+# + maxReconnect - Maximum number of reconnect attempts. The reconnect state is entered when the connection is connected\n+#                  and when that connection is lost. During the initial connection attempt, the client will cycle\n+#                  over its server list one time regardless of the maxReconnects value that is set.\n+#                  Use 0 to turn off auto reconnect\n+#                  Use -1 to turn on infinite reconnects\n+# + reconnectWaitInSeconds - The time(in seconds) to wait between reconnect attempts to reconnect to the same server\n+# + connectionTimeoutInSeconds - The timeout(in seconds) for connection attempts\n+# + pingIntervalInMinutes - The interval(in minutes) between the attempts of pinging the server\n+# + maxPingsOut - The maximum number of pings the client can have in flight. The default value sets to two", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg1ODgyOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNTozOVrOGDY_6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNTozOVrOGDY_6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwODQ4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + inboxPrefix - The connection's inbox prefix which all inboxes will be start with\n          \n          \n            \n            # + inboxPrefix - The connection's inbox prefix, which all inboxes will start with", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406208489", "createdAt": "2020-04-09T13:35:39Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configuration related to create a NATS streaming subscription.\n #\n-# + connectionName - Name of the connection. This is optional.\n-# + maxReconnect - Maximum number of reconnect attempts. Use 0 to turn off auto reconnect.\n-# Use -1 to turn on infinite reconnects. The reconnect state is entered when the connection is connected and when\n-# that connection is lost. During the initial connection attempt, the client will cycle over\n-# its server list one time regardless of the maxReconnects value that is set.\n-# + reconnectWaitInSeconds - The time to wait between reconnect attempts to reconnect to the same server.\n-# This is measured in seconds.\n-# + connectionTimeoutInSeconds - The timeout for connection attempts measured in seconds.\n-# + pingIntervalInMinutes - The interval between the attempts of pinging the server. This is measured in minutes.\n-# + maxPingsOut - The maximum number of pings the client can have in flight. The default value will be a small number.\n-# + username - The username for basic authentication.\n-# + password - The password for basic authentication.\n-# + token - The token for token-based authentication.\n-# + inboxPrefix - The connection's inbox prefix. All inboxes will start with this string.\n+# + connectionName - Name of the connection(This is optional)\n+# + maxReconnect - Maximum number of reconnect attempts. The reconnect state is entered when the connection is connected\n+#                  and when that connection is lost. During the initial connection attempt, the client will cycle\n+#                  over its server list one time regardless of the maxReconnects value that is set.\n+#                  Use 0 to turn off auto reconnect\n+#                  Use -1 to turn on infinite reconnects\n+# + reconnectWaitInSeconds - The time(in seconds) to wait between reconnect attempts to reconnect to the same server\n+# + connectionTimeoutInSeconds - The timeout(in seconds) for connection attempts\n+# + pingIntervalInMinutes - The interval(in minutes) between the attempts of pinging the server\n+# + maxPingsOut - The maximum number of pings the client can have in flight. The default value sets to two\n+# + username - The username for basic authentication\n+# + password - The password for basic authentication\n+# + token - The token for token-based authentication\n+# + inboxPrefix - The connection's inbox prefix which all inboxes will be start with", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg2NDQwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNjo1N1rOGDZDaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNjo1N1rOGDZDaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwOTM4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + enableErrorListener - Enables Connection Error listener\n          \n          \n            \n            # + enableErrorListener - Enables the connection to the error listener", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406209387", "createdAt": "2020-04-09T13:36:57Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configuration related to create a NATS streaming subscription.\n #\n-# + connectionName - Name of the connection. This is optional.\n-# + maxReconnect - Maximum number of reconnect attempts. Use 0 to turn off auto reconnect.\n-# Use -1 to turn on infinite reconnects. The reconnect state is entered when the connection is connected and when\n-# that connection is lost. During the initial connection attempt, the client will cycle over\n-# its server list one time regardless of the maxReconnects value that is set.\n-# + reconnectWaitInSeconds - The time to wait between reconnect attempts to reconnect to the same server.\n-# This is measured in seconds.\n-# + connectionTimeoutInSeconds - The timeout for connection attempts measured in seconds.\n-# + pingIntervalInMinutes - The interval between the attempts of pinging the server. This is measured in minutes.\n-# + maxPingsOut - The maximum number of pings the client can have in flight. The default value will be a small number.\n-# + username - The username for basic authentication.\n-# + password - The password for basic authentication.\n-# + token - The token for token-based authentication.\n-# + inboxPrefix - The connection's inbox prefix. All inboxes will start with this string.\n+# + connectionName - Name of the connection(This is optional)\n+# + maxReconnect - Maximum number of reconnect attempts. The reconnect state is entered when the connection is connected\n+#                  and when that connection is lost. During the initial connection attempt, the client will cycle\n+#                  over its server list one time regardless of the maxReconnects value that is set.\n+#                  Use 0 to turn off auto reconnect\n+#                  Use -1 to turn on infinite reconnects\n+# + reconnectWaitInSeconds - The time(in seconds) to wait between reconnect attempts to reconnect to the same server\n+# + connectionTimeoutInSeconds - The timeout(in seconds) for connection attempts\n+# + pingIntervalInMinutes - The interval(in minutes) between the attempts of pinging the server\n+# + maxPingsOut - The maximum number of pings the client can have in flight. The default value sets to two\n+# + username - The username for basic authentication\n+# + password - The password for basic authentication\n+# + token - The token for token-based authentication\n+# + inboxPrefix - The connection's inbox prefix which all inboxes will be start with\n # + noEcho - Turns off echo. This prevents the server from echoing messages back to the connection if it\n-# has subscriptions on the subject being published to.\n-# + enableErrorListener - Enables Connection Error listener.\n-# + secureSocket - Configurations related to SSL/TLS.\n+#            has subscriptions on the subject being published to\n+# + enableErrorListener - Enables Connection Error listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg2NTE2OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNzoxMFrOGDZD_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNzoxMFrOGDZD_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwOTUzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Configuration related to facilitate secure communication with a remote HTTP endpoint.\n          \n          \n            \n            # Configuration related to facilitating a secure communication with a remote HTTP endpoint.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406209535", "createdAt": "2020-04-09T13:37:10Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -52,11 +52,11 @@ public type ConnectionConfig record {|\n   SecureSocket? secureSocket = ();\n |};\n \n-# Provides configurations for facilitating secure communication with a remote HTTP endpoint.\n+# Configuration related to facilitate secure communication with a remote HTTP endpoint.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg3MDY4OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozODoyOFrOGDZHjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozODoyOFrOGDZHjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMDQ0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + trustStore - Configuration associated with the TrustStore\n          \n          \n            \n            # + trustStore - Configurations associated with the TrustStore", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406210447", "createdAt": "2020-04-09T13:38:28Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -52,11 +52,11 @@ public type ConnectionConfig record {|\n   SecureSocket? secureSocket = ();\n |};\n \n-# Provides configurations for facilitating secure communication with a remote HTTP endpoint.\n+# Configuration related to facilitate secure communication with a remote HTTP endpoint.\n #\n-# + trustStore - Configurations associated with the TrustStore.\n-# + keyStore - Configurations associated with the KeyStore.\n-# + protocol - The standard name of the requested protocol.\n+# + trustStore - Configuration associated with the TrustStore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg3MTI0OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozODozN1rOGDZH7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozODozN1rOGDZH7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMDU0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + keyStore - Configuration associated with the KeyStore\n          \n          \n            \n            # + keyStore - Configurations associated with the KeyStore", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406210541", "createdAt": "2020-04-09T13:38:37Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -52,11 +52,11 @@ public type ConnectionConfig record {|\n   SecureSocket? secureSocket = ();\n |};\n \n-# Provides configurations for facilitating secure communication with a remote HTTP endpoint.\n+# Configuration related to facilitate secure communication with a remote HTTP endpoint.\n #\n-# + trustStore - Configurations associated with the TrustStore.\n-# + keyStore - Configurations associated with the KeyStore.\n-# + protocol - The standard name of the requested protocol.\n+# + trustStore - Configuration associated with the TrustStore\n+# + keyStore - Configuration associated with the KeyStore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg3MjA3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/connection.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozODo0OVrOGDZIdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozODo0OVrOGDZIdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMDY3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + config - Configuration associated with the NATS client to establish a connection with the server\n          \n          \n            \n                # + config - Configurations associated with the NATS client to establish a connection with the server", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406210678", "createdAt": "2020-04-09T13:38:49Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/connection.bal", "diffHunk": "@@ -24,8 +24,8 @@ public type Connection object {\n \n     # Initializes a connection with the NATS server.\n     #\n-    # + url - NATS Broker URL. For a clustered use case, pass the URLs as a string array.\n-    # + config - Information necessary for the NATS client to establish a connection with the server.\n+    # + url - NATS Broker URL. For a clustered use case, pass the URLs as a string array\n+    # + config - Configuration associated with the NATS client to establish a connection with the server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg3Mjk4OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/connection.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozODo1OVrOGDZI9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozODo1OVrOGDZI9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMDgwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + forceful - The graceful shutdown flag. If `true`, the connection closes immediately\n          \n          \n            \n                # + forceful - The graceful shutdown flag. If `true`, the connection closes immediately.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406210804", "createdAt": "2020-04-09T13:38:59Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/connection.bal", "diffHunk": "@@ -34,9 +34,9 @@ public type Connection object {\n \n     # Closes a given connection.\n     #\n-    # + forceful - The graceful shutdown flag. If `true`, the connection closes immediately.\n-    # By default, this is set to false.\n-    # + return - Returns () or the error if unable to complete the close operation.\n+    # + forceful - The graceful shutdown flag. If `true`, the connection closes immediately", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg3NDU1OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/connection.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozOToyMFrOGDZJ-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozOToyMFrOGDZJ-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMTA2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #              By default, It sets to false\n          \n          \n            \n                #              The default value is `false`.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406211065", "createdAt": "2020-04-09T13:39:20Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/connection.bal", "diffHunk": "@@ -34,9 +34,9 @@ public type Connection object {\n \n     # Closes a given connection.\n     #\n-    # + forceful - The graceful shutdown flag. If `true`, the connection closes immediately.\n-    # By default, this is set to false.\n-    # + return - Returns () or the error if unable to complete the close operation.\n+    # + forceful - The graceful shutdown flag. If `true`, the connection closes immediately\n+    #              By default, It sets to false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg3NTA2OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/connection.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozOToyN1rOGDZKSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozOToyN1rOGDZKSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMTE0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or the error if unable to complete the close operation.\n          \n          \n            \n                # + return - () or the error if unable to complete the close operation.\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406211145", "createdAt": "2020-04-09T13:39:27Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/connection.bal", "diffHunk": "@@ -34,9 +34,9 @@ public type Connection object {\n \n     # Closes a given connection.\n     #\n-    # + forceful - The graceful shutdown flag. If `true`, the connection closes immediately.\n-    # By default, this is set to false.\n-    # + return - Returns () or the error if unable to complete the close operation.\n+    # + forceful - The graceful shutdown flag. If `true`, the connection closes immediately\n+    #              By default, It sets to false\n+    # + return - () or the error if unable to complete the close operation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg3NjAyOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozOTo0MlrOGDZK-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozOTo0MlrOGDZK-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMTMyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The configurations for NATS streaming subscription.\n          \n          \n            \n            # The configurations for the NATS streaming subscription.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406211320", "createdAt": "2020-04-09T13:39:42Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -14,16 +14,17 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# The parameters used to create a NATS streaming subscription.\n+# The configurations for NATS streaming subscription.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg3NzQ3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MDowMFrOGDZL3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MDowMFrOGDZL3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMTU1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + ackWaitInSeconds - The time(in seconds) the cluster will wait for an ACK for a given message\n          \n          \n            \n            # + ackWaitInSeconds - The time (in seconds) the cluster will wait for an ACK for a given message", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406211551", "createdAt": "2020-04-09T13:40:00Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -14,16 +14,17 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# The parameters used to create a NATS streaming subscription.\n+# The configurations for NATS streaming subscription.\n #\n-# + subject - Name of the subject to which it is subscribed to.\n-# + queueName - The name of the queue group to which the subscription belongs to.\n-# + durableName - If set, this will survive client restarts.\n-# + maxInFlight - The number of messages the cluster will have in-flight without an ACK.\n-# + ackWaitInSeconds - The time the cluster will wait for an ACK for a given message (in Seconds).\n-# + subscriptionTimeoutInSeconds - The time (in Seconds) the subscription will wait if a network failure occurs during the creation of it.\n-# + manualAck - Enables manual acknowledgments.\n-# + startPosition - The position to start receiving messages.\n+# + subject - Name of the subject to which it is subscribed to\n+# + queueName - The name of the queue group to which the subscription belongs to\n+# + durableName - If set, this will survive client restarts\n+# + maxInFlight - The number of messages the cluster will have in-flight without an ACK\n+# + ackWaitInSeconds - The time(in seconds) the cluster will wait for an ACK for a given message", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg3ODAxOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MDowOFrOGDZMLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MDowOFrOGDZMLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMTYyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + subscriptionTimeoutInSeconds - The time(in seconds) the subscription will wait if a network failure occurs during\n          \n          \n            \n            # + subscriptionTimeoutInSeconds - The time (in seconds) the subscription will wait if a network failure occurs during", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406211628", "createdAt": "2020-04-09T13:40:08Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -14,16 +14,17 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# The parameters used to create a NATS streaming subscription.\n+# The configurations for NATS streaming subscription.\n #\n-# + subject - Name of the subject to which it is subscribed to.\n-# + queueName - The name of the queue group to which the subscription belongs to.\n-# + durableName - If set, this will survive client restarts.\n-# + maxInFlight - The number of messages the cluster will have in-flight without an ACK.\n-# + ackWaitInSeconds - The time the cluster will wait for an ACK for a given message (in Seconds).\n-# + subscriptionTimeoutInSeconds - The time (in Seconds) the subscription will wait if a network failure occurs during the creation of it.\n-# + manualAck - Enables manual acknowledgments.\n-# + startPosition - The position to start receiving messages.\n+# + subject - Name of the subject to which it is subscribed to\n+# + queueName - The name of the queue group to which the subscription belongs to\n+# + durableName - If set, this will survive client restarts\n+# + maxInFlight - The number of messages the cluster will have in-flight without an ACK\n+# + ackWaitInSeconds - The time(in seconds) the cluster will wait for an ACK for a given message\n+# + subscriptionTimeoutInSeconds - The time(in seconds) the subscription will wait if a network failure occurs during", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg3ODg5OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MDoyMlrOGDZMtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MDoyMlrOGDZMtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMTc2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The annotation which is used to configure the streaming subscription.\n          \n          \n            \n            # The annotation, which is used to configure the streaming subscription.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406211766", "createdAt": "2020-04-09T13:40:22Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -35,22 +36,22 @@ public type StreamingSubscriptionConfigData record {|\n    StartPosition startPosition = NEW_ONLY;\n |};\n \n-# Streaming subscription configuration annotation.\n+# The annotation which is used to configure the streaming subscription.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg3OTQ3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MDozMFrOGDZNDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MDozMFrOGDZNDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMTg1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Specifies that message delivery should start with the last(most recent) message stored for this subject.\n          \n          \n            \n            # Specifies that message delivery should start with the last (most recent) message stored for this subject.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406211852", "createdAt": "2020-04-09T13:40:30Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -35,22 +36,22 @@ public type StreamingSubscriptionConfigData record {|\n    StartPosition startPosition = NEW_ONLY;\n |};\n \n-# Streaming subscription configuration annotation.\n+# The annotation which is used to configure the streaming subscription.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n # Specifies that message delivery should start with the messages, which are published after the subscription is created.\n public const NEW_ONLY = \"NEW_ONLY\";\n \n-# Specifies that message delivery should start with the last (most recent) message stored for this subject.\n+# Specifies that message delivery should start with the last(most recent) message stored for this subject.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg4MDM5OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MDo0M1rOGDZNpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MDo0M1rOGDZNpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMjAwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + ackTimeoutInSeconds - Timeout(in seconds) to wait for an acknowledgement for the corresponding subscription\n          \n          \n            \n            # + ackTimeoutInSeconds - Timeout (in seconds) to wait for an acknowledgement for the corresponding subscription", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406212004", "createdAt": "2020-04-09T13:40:43Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/config.bal", "diffHunk": "@@ -16,10 +16,10 @@\n \n # Configuration related to establishing a streaming connection.\n #\n-# + ackTimeoutInSeconds - Timeout in seconds to wait for an acknowledgement for the corresponding subscription.\n-# + connectionTimeoutInSeconds - Timeout in seconds to wait for a connection.\n-# + maxPubAcksInFlight - The maximum number of publish ACKs that may be in flight at any point in time.\n-# + discoverPrefix - Subject prefix used for server discovery.\n+# + ackTimeoutInSeconds - Timeout(in seconds) to wait for an acknowledgement for the corresponding subscription", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg4MDkwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MDo1MFrOGDZN8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MDo1MFrOGDZN8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMjA4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + connectionTimeoutInSeconds - Timeout(in seconds) to wait for a connection\n          \n          \n            \n            # + connectionTimeoutInSeconds - Timeout (in seconds) to wait for a connection", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406212080", "createdAt": "2020-04-09T13:40:50Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/config.bal", "diffHunk": "@@ -16,10 +16,10 @@\n \n # Configuration related to establishing a streaming connection.\n #\n-# + ackTimeoutInSeconds - Timeout in seconds to wait for an acknowledgement for the corresponding subscription.\n-# + connectionTimeoutInSeconds - Timeout in seconds to wait for a connection.\n-# + maxPubAcksInFlight - The maximum number of publish ACKs that may be in flight at any point in time.\n-# + discoverPrefix - Subject prefix used for server discovery.\n+# + ackTimeoutInSeconds - Timeout(in seconds) to wait for an acknowledgement for the corresponding subscription\n+# + connectionTimeoutInSeconds - Timeout(in seconds) to wait for a connection", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg4MzM5OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MToyNVrOGDZPiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MToyNVrOGDZPiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMjQ5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + maxPubAcksInFlight - The maximum number of publish ACKs that may be in flight at any point in time\n          \n          \n            \n            # + maxPubAcksInFlight - The maximum number of publish ACKs that may be in flight at any point of time", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406212491", "createdAt": "2020-04-09T13:41:25Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/config.bal", "diffHunk": "@@ -16,10 +16,10 @@\n \n # Configuration related to establishing a streaming connection.\n #\n-# + ackTimeoutInSeconds - Timeout in seconds to wait for an acknowledgement for the corresponding subscription.\n-# + connectionTimeoutInSeconds - Timeout in seconds to wait for a connection.\n-# + maxPubAcksInFlight - The maximum number of publish ACKs that may be in flight at any point in time.\n-# + discoverPrefix - Subject prefix used for server discovery.\n+# + ackTimeoutInSeconds - Timeout(in seconds) to wait for an acknowledgement for the corresponding subscription\n+# + connectionTimeoutInSeconds - Timeout(in seconds) to wait for a connection\n+# + maxPubAcksInFlight - The maximum number of publish ACKs that may be in flight at any point in time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg4NDgzOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MTo0NVrOGDZQeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MTo0NVrOGDZQeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMjczMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents the NATS streaming server connection, to which a subscription service should be bound to in order to\n          \n          \n            \n            # Represents the NATS streaming server connection to which a subscription service should be bound in order to", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406212730", "createdAt": "2020-04-09T13:41:45Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "diffHunk": "@@ -17,8 +17,8 @@\n import ballerina/lang.'object as lang;\n import ballerina/java;\n \n-# Represents the NATS Streaming Server connection, to which a subscription service should be bound to in order to receive messages\n-# of the corresponding subscription.\n+# Represents the NATS streaming server connection, to which a subscription service should be bound to in order to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg4NjQ1OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MjoxMFrOGDZRjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MjoxMFrOGDZRjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMzAwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or the error upon failure to register the listener\n          \n          \n            \n                # + return - () or the error upon failure to register the listener\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406213005", "createdAt": "2020-04-09T13:42:10Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "diffHunk": "@@ -44,22 +44,40 @@ public type StreamingListener object {\n         streamingListenerInit(self);\n     }\n \n+    # Binds a service to the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or the error upon failure to register the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg4NzIxOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MjoxOVrOGDZSBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MjoxOVrOGDZSBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMzEyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or error upon failure to detach the service\n          \n          \n            \n                # + return - () or error upon failure to detach the service\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406213126", "createdAt": "2020-04-09T13:42:19Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "diffHunk": "@@ -44,22 +44,40 @@ public type StreamingListener object {\n         streamingListenerInit(self);\n     }\n \n+    # Binds a service to the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or the error upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         streamingAttach(self, s, self.connection);\n     }\n \n+    # Stops consuming messages and detaches the service from the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + return - () or error upon failure to detach the service", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg4NzcwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MjoyNlrOGDZSUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MjoyNlrOGDZSUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMzIwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or error upon failure to start the listener\n          \n          \n            \n                # + return - () or error upon failure to start the listener\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406213202", "createdAt": "2020-04-09T13:42:26Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "diffHunk": "@@ -44,22 +44,40 @@ public type StreamingListener object {\n         streamingListenerInit(self);\n     }\n \n+    # Binds a service to the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or the error upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         streamingAttach(self, s, self.connection);\n     }\n \n+    # Stops consuming messages and detaches the service from the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + return - () or error upon failure to detach the service\n     public function __detach(service s) returns error? {\n         streamingDetach(self, s);\n     }\n \n+    # Starts the `nats:StreamingListener`.\n+    #\n+    # + return - () or error upon failure to start the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg4ODIwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MjozMlrOGDZSoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MjozMlrOGDZSoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMzI4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or error upon failure to stop the listener\n          \n          \n            \n                # + return - () or error upon failure to stop the listener\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406213280", "createdAt": "2020-04-09T13:42:32Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "diffHunk": "@@ -44,22 +44,40 @@ public type StreamingListener object {\n         streamingListenerInit(self);\n     }\n \n+    # Binds a service to the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or the error upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         streamingAttach(self, s, self.connection);\n     }\n \n+    # Stops consuming messages and detaches the service from the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + return - () or error upon failure to detach the service\n     public function __detach(service s) returns error? {\n         streamingDetach(self, s);\n     }\n \n+    # Starts the `nats:StreamingListener`.\n+    #\n+    # + return - () or error upon failure to start the listener\n     public function __start() returns error? {\n          streamingSubscribe(self, self.connection, java:fromString(self.clusterId), self.clientId, self.streamingConfig);\n     }\n \n+    # Gracefully stops the `nats:StreamingListener`.\n+    #\n+    # + return - () or error upon failure to stop the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg4OTExOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0Mjo0M1rOGDZTIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0Mjo0M1rOGDZTIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMzQxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or error upon failure to stop the listener\n          \n          \n            \n                # + return - () or error upon failure to stop the listener\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406213410", "createdAt": "2020-04-09T13:42:43Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "diffHunk": "@@ -44,22 +44,40 @@ public type StreamingListener object {\n         streamingListenerInit(self);\n     }\n \n+    # Binds a service to the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or the error upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         streamingAttach(self, s, self.connection);\n     }\n \n+    # Stops consuming messages and detaches the service from the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + return - () or error upon failure to detach the service\n     public function __detach(service s) returns error? {\n         streamingDetach(self, s);\n     }\n \n+    # Starts the `nats:StreamingListener`.\n+    #\n+    # + return - () or error upon failure to start the listener\n     public function __start() returns error? {\n          streamingSubscribe(self, self.connection, java:fromString(self.clusterId), self.clientId, self.streamingConfig);\n     }\n \n+    # Gracefully stops the `nats:StreamingListener`.\n+    #\n+    # + return - () or error upon failure to stop the listener\n     public function __gracefulStop() returns error? {\n         return ();\n     }\n \n+    # Forcefully stops the `nats:StreamingListener`.\n+    #\n+    # + return - () or error upon failure to stop the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg4OTk5OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/message.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0Mjo1MlrOGDZTmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0Mjo1MlrOGDZTmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMzUzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents the message a NATS Streaming Server sends to subscribed services.\n          \n          \n            \n            # Represents the message a NATS Streaming Server sends to its subscribed services.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406213530", "createdAt": "2020-04-09T13:42:52Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/message.bal", "diffHunk": "@@ -16,7 +16,7 @@\n \n import ballerina/java;\n \n-# Represents the message a NATS Streaming Server sends to a subscription service.\n+# Represents the message a NATS Streaming Server sends to subscribed services.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg5MTY3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/message.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0MzoyM1rOGDZUsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwODoyOTo1M1rOGD0lpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMzgxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               # Gets the subject that the message was sent to.\n          \n          \n            \n               # Gets the subject that the message was sent to.\n          \n      \n    \n    \n  \n\nIsn't it the subject of the message?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406213811", "createdAt": "2020-04-09T13:43:23Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/message.bal", "diffHunk": "@@ -26,23 +26,23 @@ public type StreamingMessage client object {\n        self.content = content;\n    }\n \n-   # Get the message content.\n+   # Gets the message content.\n    #\n-   # + return - The data from the message as a 'byte[]'.\n+   # + return - The data from the message as a 'byte[]'\n    public function getData() returns byte[] {\n        return self.content;\n    }\n \n-   # Get the subject.\n+   # Gets the subject that the message was sent to.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY2MDUxNg==", "bodyText": "No", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406660516", "createdAt": "2020-04-10T08:29:53Z", "author": {"login": "daneshk"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/message.bal", "diffHunk": "@@ -26,23 +26,23 @@ public type StreamingMessage client object {\n        self.content = content;\n    }\n \n-   # Get the message content.\n+   # Gets the message content.\n    #\n-   # + return - The data from the message as a 'byte[]'.\n+   # + return - The data from the message as a 'byte[]'\n    public function getData() returns byte[] {\n        return self.content;\n    }\n \n-   # Get the subject.\n+   # Gets the subject that the message was sent to.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxMzgxMQ=="}, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg5MzY1OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/message.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0Mzo0OFrOGDZV4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwODozMDowN1rOGD0l9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxNDExNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               # + return - The subject that the message was sent to\n          \n          \n            \n               # + return - The subject that the message was sent to\n          \n      \n    \n    \n  \n\nIsn't it the subject of the message?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406214115", "createdAt": "2020-04-09T13:43:48Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/message.bal", "diffHunk": "@@ -26,23 +26,23 @@ public type StreamingMessage client object {\n        self.content = content;\n    }\n \n-   # Get the message content.\n+   # Gets the message content.\n    #\n-   # + return - The data from the message as a 'byte[]'.\n+   # + return - The data from the message as a 'byte[]'\n    public function getData() returns byte[] {\n        return self.content;\n    }\n \n-   # Get the subject.\n+   # Gets the subject that the message was sent to.\n    #\n-   # + return - The subject that this message was sent to.\n+   # + return - The subject that the message was sent to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY2MDU5OQ==", "bodyText": "No", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406660599", "createdAt": "2020-04-10T08:30:07Z", "author": {"login": "daneshk"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/message.bal", "diffHunk": "@@ -26,23 +26,23 @@ public type StreamingMessage client object {\n        self.content = content;\n    }\n \n-   # Get the message content.\n+   # Gets the message content.\n    #\n-   # + return - The data from the message as a 'byte[]'.\n+   # + return - The data from the message as a 'byte[]'\n    public function getData() returns byte[] {\n        return self.content;\n    }\n \n-   # Get the subject.\n+   # Gets the subject that the message was sent to.\n    #\n-   # + return - The subject that this message was sent to.\n+   # + return - The subject that the message was sent to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxNDExNQ=="}, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg5NDQ0OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/message.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0Mzo1OFrOGDZWUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0Mzo1OFrOGDZWUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxNDIyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               # + return - () or error upon failure to acknowledge the server\n          \n          \n            \n               # + return - () or error upon failure to acknowledge the server\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406214226", "createdAt": "2020-04-09T13:43:58Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/message.bal", "diffHunk": "@@ -26,23 +26,23 @@ public type StreamingMessage client object {\n        self.content = content;\n    }\n \n-   # Get the message content.\n+   # Gets the message content.\n    #\n-   # + return - The data from the message as a 'byte[]'.\n+   # + return - The data from the message as a 'byte[]'\n    public function getData() returns byte[] {\n        return self.content;\n    }\n \n-   # Get the subject.\n+   # Gets the subject that the message was sent to.\n    #\n-   # + return - The subject that this message was sent to.\n+   # + return - The subject that the message was sent to\n    public function getSubject() returns string {\n        return self.subject;\n    }\n \n-   # Acknowledge the NATS Streaming server upon the receipt of the message.\n+   # Acknowledges the NATS streaming server upon the receipt of the message.\n    #\n-   # + return - Returns () if the acknowledgment completes successfully or an error.\n+   # + return - () or error upon failure to acknowledge the server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg5NjQzOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0NDoyNlrOGDZXkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0NDoyNlrOGDZXkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxNDU0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + subject - The subject to send the message to\n          \n          \n            \n                # + subject - The subject to send the message", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406214544", "createdAt": "2020-04-09T13:44:26Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "diffHunk": "@@ -16,32 +16,33 @@\n \n import ballerina/java;\n \n-# NATS `StreamingProducer` would act as a client allowing to publish messages to the\n-# NATS streaming server. `StreamingProducer` needs the NATS `Connection` to be initialized.\n+# The streaming producer provides the capability to publish messages to the NATS streaming server.\n+# The `nats:StreamingProducer` needs the `nats:Connection` to be initialized.\n public type StreamingProducer client object {\n     private Connection? conn;\n \n-    # Creates a new NATS `StreamingProducer`.\n+    # Creates a new `nats:StreamingProducer` instance.\n     #\n-    # + connection - An established NATS connection.\n-    # + clientId - A unique identifier representing the client.\n-    # + clusterId - The ID of the cluster configured in the NATS server.\n-    # + streamingConfig - The configuration related to the NATS streaming connectivity.\n+    # + connection - An established NATS connection\n+    # + clientId - A unique identifier of the client\n+    # + clusterId - The unique identifier of the cluster configured in the NATS server\n+    # + streamingConfig - The configuration related to the NATS streaming connectivity\n     public function __init(Connection connection, public string? clientId = (), public string clusterId = \"test-cluster\",\n     public StreamingConfig? streamingConfig = ()) {\n         self.conn = connection;\n         streamingProducerInit(self, connection, java:fromString(clusterId), clientId, streamingConfig);\n     }\n \n     # Publishes data to a given subject.\n+    # ```ballerina string|error result = producer->publish(subject, <@untainted>message);```\n     #\n-    # + subject - The subject to send the message to.\n-    # + data - Data to publish.\n+    # + subject - The subject to send the message to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg5NzUwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0NDo0MFrOGDZYOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0NDo0MFrOGDZYOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxNDcxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #           message gets successfully published and acknowledged by the NATS server or\n          \n          \n            \n                #           message gets successfully published and acknowledged by the NATS server or\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406214713", "createdAt": "2020-04-09T13:44:40Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "diffHunk": "@@ -16,32 +16,33 @@\n \n import ballerina/java;\n \n-# NATS `StreamingProducer` would act as a client allowing to publish messages to the\n-# NATS streaming server. `StreamingProducer` needs the NATS `Connection` to be initialized.\n+# The streaming producer provides the capability to publish messages to the NATS streaming server.\n+# The `nats:StreamingProducer` needs the `nats:Connection` to be initialized.\n public type StreamingProducer client object {\n     private Connection? conn;\n \n-    # Creates a new NATS `StreamingProducer`.\n+    # Creates a new `nats:StreamingProducer` instance.\n     #\n-    # + connection - An established NATS connection.\n-    # + clientId - A unique identifier representing the client.\n-    # + clusterId - The ID of the cluster configured in the NATS server.\n-    # + streamingConfig - The configuration related to the NATS streaming connectivity.\n+    # + connection - An established NATS connection\n+    # + clientId - A unique identifier of the client\n+    # + clusterId - The unique identifier of the cluster configured in the NATS server\n+    # + streamingConfig - The configuration related to the NATS streaming connectivity\n     public function __init(Connection connection, public string? clientId = (), public string clusterId = \"test-cluster\",\n     public StreamingConfig? streamingConfig = ()) {\n         self.conn = connection;\n         streamingProducerInit(self, connection, java:fromString(clusterId), clientId, streamingConfig);\n     }\n \n     # Publishes data to a given subject.\n+    # ```ballerina string|error result = producer->publish(subject, <@untainted>message);```\n     #\n-    # + subject - The subject to send the message to.\n-    # + data - Data to publish.\n+    # + subject - The subject to send the message to\n+    # + data - Data to publish\n     # + return - `string` value representing the NUID (NATS Unique Identifier) of the published message, if the\n-    #           message gets successfully published and acknowledged by the NATS server OR\n-    #           `nats/Error` with NUID and `message` fields in case an error occurs in publishing, the timeout\n-    #           elapses while waiting for the acknowledgement OR\n-    #           `nats/Error` only with the `message` field in case an error occurs even before publishing\n+    #           message gets successfully published and acknowledged by the NATS server or", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg5ODMwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0NDo1MlrOGDZYyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0NDo1MlrOGDZYyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxNDg1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                #           `nats:Error` only with the `message` field in case an error occurs even before publishing\n          \n          \n            \n                #           `nats:Error` only with the `message` field in case an error occurs even before publishing\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406214856", "createdAt": "2020-04-09T13:44:52Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "diffHunk": "@@ -16,32 +16,33 @@\n \n import ballerina/java;\n \n-# NATS `StreamingProducer` would act as a client allowing to publish messages to the\n-# NATS streaming server. `StreamingProducer` needs the NATS `Connection` to be initialized.\n+# The streaming producer provides the capability to publish messages to the NATS streaming server.\n+# The `nats:StreamingProducer` needs the `nats:Connection` to be initialized.\n public type StreamingProducer client object {\n     private Connection? conn;\n \n-    # Creates a new NATS `StreamingProducer`.\n+    # Creates a new `nats:StreamingProducer` instance.\n     #\n-    # + connection - An established NATS connection.\n-    # + clientId - A unique identifier representing the client.\n-    # + clusterId - The ID of the cluster configured in the NATS server.\n-    # + streamingConfig - The configuration related to the NATS streaming connectivity.\n+    # + connection - An established NATS connection\n+    # + clientId - A unique identifier of the client\n+    # + clusterId - The unique identifier of the cluster configured in the NATS server\n+    # + streamingConfig - The configuration related to the NATS streaming connectivity\n     public function __init(Connection connection, public string? clientId = (), public string clusterId = \"test-cluster\",\n     public StreamingConfig? streamingConfig = ()) {\n         self.conn = connection;\n         streamingProducerInit(self, connection, java:fromString(clusterId), clientId, streamingConfig);\n     }\n \n     # Publishes data to a given subject.\n+    # ```ballerina string|error result = producer->publish(subject, <@untainted>message);```\n     #\n-    # + subject - The subject to send the message to.\n-    # + data - Data to publish.\n+    # + subject - The subject to send the message to\n+    # + data - Data to publish\n     # + return - `string` value representing the NUID (NATS Unique Identifier) of the published message, if the\n-    #           message gets successfully published and acknowledged by the NATS server OR\n-    #           `nats/Error` with NUID and `message` fields in case an error occurs in publishing, the timeout\n-    #           elapses while waiting for the acknowledgement OR\n-    #           `nats/Error` only with the `message` field in case an error occurs even before publishing\n+    #           message gets successfully published and acknowledged by the NATS server or\n+    #           `nats:Error` with NUID and `message` fields in case an error occurs in publishing, the timeout\n+    #           elapses while waiting for the acknowledgement or\n+    #           `nats:Error` only with the `message` field in case an error occurs even before publishing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDg5ODc4OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0NDo1OVrOGDZZHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo0NDo1OVrOGDZZHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxNDk0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or the error if unable to complete the close operation.\n          \n          \n            \n                # + return - () or the error if unable to complete the close operation.\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406214942", "createdAt": "2020-04-09T13:44:59Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/producer.bal", "diffHunk": "@@ -70,7 +71,7 @@ public type StreamingProducer client object {\n \n     # Close the producer.\n     #\n-    # + return - Returns () or the error if unable to complete the close operation.\n+    # + return - () or the error if unable to complete the close operation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b85d794ddf5449f36219af8414eb3d97ba610e4c"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzc5OTY4OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/Module.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwODo0NTo1MVrOGD07dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMjowMzoyOFrOGD4tRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY2NjEwMA==", "bodyText": "The urls would have to be updated as @praneesha mentioned.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406666100", "createdAt": "2020-04-10T08:45:51Z", "author": {"login": "aashikam"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/Module.md", "diffHunk": "@@ -173,4 +148,14 @@ nats:ConnectionConfig config = {\n // Initializes a connection.\n nats:Connection connection = new(\"tls://localhost:4222\", config = config);\n ```\n->**Note:** The default thread pool size used in Ballerina is number of processors available * 2. You can configure the thread pool size by using the `BALLERINA_MAX_POOL_SIZE` environment variable.\n\\ No newline at end of file\n+>**Note:** The default thread pool size used in Ballerina is the number of processors available * 2. You can configure the thread pool size by using the `BALLERINA_MAX_POOL_SIZE` environment variable.\n+\n+For information on the operations, which you can perform with this module, see the below **Functions**. \n+\n+For examples on the usage of the connector, see the following.\n+* [Basic Publisher and Subscriber Example](https://ballerina.io/v1-2/learn/by-example/nats-basic-client.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9040bdf8f1f5cf64bc88b870a1f37532d18d1a6"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcyODAwNA==", "bodyText": "Fixed in 6b572e1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r406728004", "createdAt": "2020-04-10T12:03:28Z", "author": {"login": "daneshk"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/Module.md", "diffHunk": "@@ -173,4 +148,14 @@ nats:ConnectionConfig config = {\n // Initializes a connection.\n nats:Connection connection = new(\"tls://localhost:4222\", config = config);\n ```\n->**Note:** The default thread pool size used in Ballerina is number of processors available * 2. You can configure the thread pool size by using the `BALLERINA_MAX_POOL_SIZE` environment variable.\n\\ No newline at end of file\n+>**Note:** The default thread pool size used in Ballerina is the number of processors available * 2. You can configure the thread pool size by using the `BALLERINA_MAX_POOL_SIZE` environment variable.\n+\n+For information on the operations, which you can perform with this module, see the below **Functions**. \n+\n+For examples on the usage of the connector, see the following.\n+* [Basic Publisher and Subscriber Example](https://ballerina.io/v1-2/learn/by-example/nats-basic-client.html).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY2NjEwMA=="}, "originalCommit": {"oid": "f9040bdf8f1f5cf64bc88b870a1f37532d18d1a6"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY1ODcyOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0NTowMFrOGF9NRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0NTowMFrOGF9NRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg5ODg4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            following functionality.\n          \n          \n            \n            below functionalities.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408898887", "createdAt": "2020-04-15T14:45:00Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/Module.md", "diffHunk": "@@ -1,15 +1,13 @@\n-## Module overview\n-\n This module provides the capability to connect with NATS and NATS Streaming servers and performs the \n following functionality.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY2NjczOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0Njo0OVrOGF9Syg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0Njo0OVrOGF9Syg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwMDI5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            is also handled differently in NATS basic and streaming servers.\n          \n          \n            \n            is also handled differently in the NATS basic and streaming servers.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408900298", "createdAt": "2020-04-15T14:46:49Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/Module.md", "diffHunk": "@@ -66,43 +64,32 @@ service replyToService =\n service {\n \n     resource function onMessage(nats:Message msg, string data) {\n-        // Prints the incoming message in the console.\n-        log:printInfo(\"Received reply message : \" + data);\n     }\n \n     resource function onError(nats:Message msg, nats:Error err) {\n-        log:printError(\"Error occurred in data binding\", err);\n     }\n };\n ```\n \n-#### Publishing messages to a NATS streaming server\n+##### Publishing messages to a NATS streaming server\n \n Once connected to a streaming server, publishing messages is accomplished using the following method.\n ```ballerina\n nats:StreamingProducer producer = new(connection);\n string|error result = producer->publish(subject, \"hello world\");\n-if (result is error) {\n-   io:println(\"Error occurred while publishing the message.\");\n-} else {\n-   io:println(\"GUID \"+result+\" received for the produced message.\");\n-}\n ```\n \n > Publish api supports the `byte[], boolean, string, int, float, decimal, xml, json, record {}` message types.\n \n \n-### Listening to incoming messages\n+#### Listening to incoming messages\n \n The Ballerina NATS module provides the following mechanisms to listen to messages. Similar to message publishing, listening to messages\n is also handled differently in NATS basic and streaming servers.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY3MTcxOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0Nzo0MFrOGF9V3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0Nzo0MFrOGF9V3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwMTA4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + pendingLimits - Parameters to set limits on the maximum number of pending messages,\n          \n          \n            \n            # + pendingLimits - Parameters to set limits on the maximum number of pending messages", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408901085", "createdAt": "2020-04-15T14:47:40Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "diffHunk": "@@ -14,30 +14,30 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# NATS basic subscription parameters.\n+# The configurations for the NATS basic subscription.\n #\n-# + subject - Name of the subject.\n-# + queueName - Name of the queue group.\n+# + subject - Name of the subject\n+# + queueName - Name of the queue group\n # + pendingLimits - Parameters to set limits on the maximum number of pending messages,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY3NDE0OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0ODowOVrOGF9XgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0ODowOVrOGF9XgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwMTUwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Setting a value to anything less than or equal to 0 will disable this check.\n          \n          \n            \n            # Setting a value less than or equal to 0 will disable this check.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408901504", "createdAt": "2020-04-15T14:48:09Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/annotation.bal", "diffHunk": "@@ -14,30 +14,30 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# NATS basic subscription parameters.\n+# The configurations for the NATS basic subscription.\n #\n-# + subject - Name of the subject.\n-# + queueName - Name of the queue group.\n+# + subject - Name of the subject\n+# + queueName - Name of the queue group\n # + pendingLimits - Parameters to set limits on the maximum number of pending messages,\n-#                               or maximum size of pending messages.\n+#                   or maximum size of pending messages\n public type SubscriptionConfigData record {|\n     string subject;\n     string queueName?;\n     PendingLimits pendingLimits?;\n |};\n \n-# Parameters to set limits on the maximum number of messages, or maximum size of messages this consumer will\n+# The configurations to set limits on the maximum number of messages or maximum size of messages this consumer will\n # hold before it starts to drop new messages waiting for the resource functions to drain the queue.\n # Setting a value to anything less than or equal to 0 will disable this check.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY3NzUyOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0ODo0NlrOGF9ZhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0ODo0NlrOGF9ZhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwMjAyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + subject - The subject to send the message to\n          \n          \n            \n            # + subject - The subject to send the message", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408902021", "createdAt": "2020-04-15T14:48:46Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "diffHunk": "@@ -17,26 +17,29 @@\n import ballerina/log;\n import ballerina/java;\n \n-# NATS `Producer` would act as a basic client allowing to publish messages to the NATS server.\n-# Producer needs the NATS `Connection` to be initialized.\n+# The producer provides the capability to publish messages to the NATS server.\n+# The `nats:Producer` needs the `nats:Connection` to be initialized.\n public type Producer client object {\n \n     private Connection? conn = ();\n \n-    # Creates a new NATS `Producer`.\n+    # Creates a new `nats:Producer`.\n     #\n-    # + connection - An already-established connection.\n+    # + connection - An established NATS connection\n     public function __init(Connection connection) {\n         self.conn = connection;\n         producerInit(connection);\n     }\n \n-    # Produces a message to a NATS basic server for the given subject.\n-    #\n-    # + subject - The subject to send the message to.\n-    # + data - Data to publish.\n-    # + replyTo - The subject or the callback service the receiver should send the response to.\n-    # + return -  A specific error if there is a problem when publishing the message. Returns () otherwise.\n+# Publishes data to a given subject.\n+# ```ballerina\n+# nats:Error? result = producer->publish(subject, <@untainted>message);\n+# ```\n+#\n+# + subject - The subject to send the message to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY3OTIwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0OTowNFrOGF9ajA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0OTowNFrOGF9ajA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwMjI4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + replyTo - The subject or the callback service the receiver should send the response to\n          \n          \n            \n            # + replyTo - The subject or the callback service to which the receiver should send the response", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408902284", "createdAt": "2020-04-15T14:49:04Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "diffHunk": "@@ -17,26 +17,29 @@\n import ballerina/log;\n import ballerina/java;\n \n-# NATS `Producer` would act as a basic client allowing to publish messages to the NATS server.\n-# Producer needs the NATS `Connection` to be initialized.\n+# The producer provides the capability to publish messages to the NATS server.\n+# The `nats:Producer` needs the `nats:Connection` to be initialized.\n public type Producer client object {\n \n     private Connection? conn = ();\n \n-    # Creates a new NATS `Producer`.\n+    # Creates a new `nats:Producer`.\n     #\n-    # + connection - An already-established connection.\n+    # + connection - An established NATS connection\n     public function __init(Connection connection) {\n         self.conn = connection;\n         producerInit(connection);\n     }\n \n-    # Produces a message to a NATS basic server for the given subject.\n-    #\n-    # + subject - The subject to send the message to.\n-    # + data - Data to publish.\n-    # + replyTo - The subject or the callback service the receiver should send the response to.\n-    # + return -  A specific error if there is a problem when publishing the message. Returns () otherwise.\n+# Publishes data to a given subject.\n+# ```ballerina\n+# nats:Error? result = producer->publish(subject, <@untainted>message);\n+# ```\n+#\n+# + subject - The subject to send the message to\n+# + data - Data to publish\n+# + replyTo - The subject or the callback service the receiver should send the response to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY4MDA4OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0OToxNVrOGF9bGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0OToxNVrOGF9bGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwMjQyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return -  () or else a `nats:Error` if there is a problem when publishing the message\n          \n          \n            \n            # + return -  `()` or else a `nats:Error` if there is a problem when publishing the message", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408902426", "createdAt": "2020-04-15T14:49:15Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "diffHunk": "@@ -17,26 +17,29 @@\n import ballerina/log;\n import ballerina/java;\n \n-# NATS `Producer` would act as a basic client allowing to publish messages to the NATS server.\n-# Producer needs the NATS `Connection` to be initialized.\n+# The producer provides the capability to publish messages to the NATS server.\n+# The `nats:Producer` needs the `nats:Connection` to be initialized.\n public type Producer client object {\n \n     private Connection? conn = ();\n \n-    # Creates a new NATS `Producer`.\n+    # Creates a new `nats:Producer`.\n     #\n-    # + connection - An already-established connection.\n+    # + connection - An established NATS connection\n     public function __init(Connection connection) {\n         self.conn = connection;\n         producerInit(connection);\n     }\n \n-    # Produces a message to a NATS basic server for the given subject.\n-    #\n-    # + subject - The subject to send the message to.\n-    # + data - Data to publish.\n-    # + replyTo - The subject or the callback service the receiver should send the response to.\n-    # + return -  A specific error if there is a problem when publishing the message. Returns () otherwise.\n+# Publishes data to a given subject.\n+# ```ballerina\n+# nats:Error? result = producer->publish(subject, <@untainted>message);\n+# ```\n+#\n+# + subject - The subject to send the message to\n+# + data - Data to publish\n+# + replyTo - The subject or the callback service the receiver should send the response to\n+# + return -  () or else a `nats:Error` if there is a problem when publishing the message", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY4MTYxOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0OTozOFrOGF9cMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0OTozOFrOGF9cMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwMjcwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + subject - The subject to send the message to\n          \n          \n            \n            # + subject - The subject to send the message", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408902707", "createdAt": "2020-04-15T14:49:38Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "diffHunk": "@@ -47,12 +50,15 @@ public type Producer client object {\n         }\n     }\n \n-    # Produces a message and would wait for a response.\n-    #\n-    # + subject - Would represent the topic/queue name.\n-    # + data - The message body to publish.\n-    # + duration - The time to wait for a response measured in milliseconds.\n-    # + return -  The response message or an error.\n+# Publishes data to a given subject and waits for a response.\n+# ```ballerina\n+# nats:Message|nats:Error reqReply = producer->request(subject, <@untainted>message, 5000);\n+# ```\n+#\n+# + subject - The subject to send the message to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY4MjM2OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0OTo0N1rOGF9cqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo0OTo0N1rOGF9cqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwMjgyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + duration - The time(in milliseconds) to wait for the response\n          \n          \n            \n            # + duration - The time (in milliseconds) to wait for the response", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408902826", "createdAt": "2020-04-15T14:49:47Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "diffHunk": "@@ -47,12 +50,15 @@ public type Producer client object {\n         }\n     }\n \n-    # Produces a message and would wait for a response.\n-    #\n-    # + subject - Would represent the topic/queue name.\n-    # + data - The message body to publish.\n-    # + duration - The time to wait for a response measured in milliseconds.\n-    # + return -  The response message or an error.\n+# Publishes data to a given subject and waits for a response.\n+# ```ballerina\n+# nats:Message|nats:Error reqReply = producer->request(subject, <@untainted>message, 5000);\n+# ```\n+#\n+# + subject - The subject to send the message to\n+# + data - Data to publish\n+# + duration - The time(in milliseconds) to wait for the response", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY4MzM3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MDowMFrOGF9dWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MDowMFrOGF9dWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwMzAwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return -  The response `nats:Message` or else a `nats:Error` if an error is encountered\n          \n          \n            \n            # + return -  The `nats:Message` response or else a `nats:Error` if an error is encountered", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408903001", "createdAt": "2020-04-15T14:50:00Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "diffHunk": "@@ -47,12 +50,15 @@ public type Producer client object {\n         }\n     }\n \n-    # Produces a message and would wait for a response.\n-    #\n-    # + subject - Would represent the topic/queue name.\n-    # + data - The message body to publish.\n-    # + duration - The time to wait for a response measured in milliseconds.\n-    # + return -  The response message or an error.\n+# Publishes data to a given subject and waits for a response.\n+# ```ballerina\n+# nats:Message|nats:Error reqReply = producer->request(subject, <@untainted>message, 5000);\n+# ```\n+#\n+# + subject - The subject to send the message to\n+# + data - Data to publish\n+# + duration - The time(in milliseconds) to wait for the response\n+# + return -  The response `nats:Message` or else a `nats:Error` if an error is encountered", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY4NDI4OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MDoxMVrOGF9eBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MDoxMVrOGF9eBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwMzE3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or else a `nats:Error` if unable to complete the close operation\n          \n          \n            \n                # + return - `()` or else a `nats:Error` if unable to complete the close the operation", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408903172", "createdAt": "2020-04-15T14:50:11Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/producer.bal", "diffHunk": "@@ -62,9 +68,9 @@ public type Producer client object {\n         }\n     }\n \n-    # Close a given connection.\n+    # Closes a given connection.\n     #\n-    # + return - Retruns () or the error if unable to complete the close operation.\n+    # + return - () or else a `nats:Error` if unable to complete the close operation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY4NjQyOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MDo0MVrOGF9fbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MDo0MVrOGF9fbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwMzUzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or else a `nats:Error` upon failure to register the listener\n          \n          \n            \n                # + return - `()` or else a `nats:Error` upon failure to register the listener", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408903534", "createdAt": "2020-04-15T14:50:41Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "diffHunk": "@@ -17,54 +17,55 @@\n import ballerina/lang.'object as lang;\n import ballerina/java;\n \n-# Represents a connection which will be used for subscription.\n+# Represents the NATS server connection to which a subscription service should be bound in order to\n+# receive messages of the corresponding subscription.\n public type Listener object {\n \n     *lang:Listener;\n     private Connection conn;\n \n-    # Creates a new consumer. A new connection will be created if a reference to a connection is not provided.\n+    # Creates a new NATS Listener.\n     #\n-    # + connection - An already-established connection or configuration to create a new connection.\n+    # + connection - An established NATS connection.\n     public function __init(Connection connection) {\n         self.conn = connection;\n         consumerInit(self, connection);\n     }\n \n-    # Binds the NATS consumer to a service.\n+    # Binds a service to the `nats:Listener`.\n     #\n-    # + s - Type descriptor of the service.\n-    # + name - Name of the service.\n-    # + return - Returns nil or the error upon failure to register the listener.\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or else a `nats:Error` upon failure to register the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY4NjY4OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MDo0NVrOGF9fnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MDo0NVrOGF9fnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwMzU4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or else a `nats:Error` upon failure to detach the service\n          \n          \n            \n                # + return - `()` or else a `nats:Error` upon failure to detach the service", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408903583", "createdAt": "2020-04-15T14:50:45Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "diffHunk": "@@ -17,54 +17,55 @@\n import ballerina/lang.'object as lang;\n import ballerina/java;\n \n-# Represents a connection which will be used for subscription.\n+# Represents the NATS server connection to which a subscription service should be bound in order to\n+# receive messages of the corresponding subscription.\n public type Listener object {\n \n     *lang:Listener;\n     private Connection conn;\n \n-    # Creates a new consumer. A new connection will be created if a reference to a connection is not provided.\n+    # Creates a new NATS Listener.\n     #\n-    # + connection - An already-established connection or configuration to create a new connection.\n+    # + connection - An established NATS connection.\n     public function __init(Connection connection) {\n         self.conn = connection;\n         consumerInit(self, connection);\n     }\n \n-    # Binds the NATS consumer to a service.\n+    # Binds a service to the `nats:Listener`.\n     #\n-    # + s - Type descriptor of the service.\n-    # + name - Name of the service.\n-    # + return - Returns nil or the error upon failure to register the listener.\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or else a `nats:Error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         return basicRegister(self, s, name);\n     }\n \n-    # Stops consuming messages and detaches the service from the `Listener` endpoint.\n+    # Stops consuming messages and detaches the service from the `nats:Listener`.\n     #\n     # + s - Type descriptor of the service\n-    # + return - Nil or error upon failure to detach the service\n+    # + return - () or else a `nats:Error` upon failure to detach the service", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY4NzU4OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MDo1NVrOGF9gOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MDo1NVrOGF9gOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwMzczNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or else a `nats:Error` upon failure to start the listener\n          \n          \n            \n                # + return - `()` or else a `nats:Error` upon failure to start the listener", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408903736", "createdAt": "2020-04-15T14:50:55Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "diffHunk": "@@ -17,54 +17,55 @@\n import ballerina/lang.'object as lang;\n import ballerina/java;\n \n-# Represents a connection which will be used for subscription.\n+# Represents the NATS server connection to which a subscription service should be bound in order to\n+# receive messages of the corresponding subscription.\n public type Listener object {\n \n     *lang:Listener;\n     private Connection conn;\n \n-    # Creates a new consumer. A new connection will be created if a reference to a connection is not provided.\n+    # Creates a new NATS Listener.\n     #\n-    # + connection - An already-established connection or configuration to create a new connection.\n+    # + connection - An established NATS connection.\n     public function __init(Connection connection) {\n         self.conn = connection;\n         consumerInit(self, connection);\n     }\n \n-    # Binds the NATS consumer to a service.\n+    # Binds a service to the `nats:Listener`.\n     #\n-    # + s - Type descriptor of the service.\n-    # + name - Name of the service.\n-    # + return - Returns nil or the error upon failure to register the listener.\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or else a `nats:Error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         return basicRegister(self, s, name);\n     }\n \n-    # Stops consuming messages and detaches the service from the `Listener` endpoint.\n+    # Stops consuming messages and detaches the service from the `nats:Listener`.\n     #\n     # + s - Type descriptor of the service\n-    # + return - Nil or error upon failure to detach the service\n+    # + return - () or else a `nats:Error` upon failure to detach the service\n     public function __detach(service s) returns error? {\n         return basicDetach(self, s);\n     }\n \n-    # Starts the listener in the lifecycle.\n+    # Starts the `nats:Listener`.\n     #\n-    # + return - Error or ().\n+    # + return - () or else a `nats:Error` upon failure to start the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY4ODcxOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MTowNVrOGF9g3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MTowNVrOGF9g3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwMzkwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Gracefully stops the `nats:Listener`.\n          \n          \n            \n                # Stops the `nats:Listener` gracefully.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408903903", "createdAt": "2020-04-15T14:51:05Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "diffHunk": "@@ -17,54 +17,55 @@\n import ballerina/lang.'object as lang;\n import ballerina/java;\n \n-# Represents a connection which will be used for subscription.\n+# Represents the NATS server connection to which a subscription service should be bound in order to\n+# receive messages of the corresponding subscription.\n public type Listener object {\n \n     *lang:Listener;\n     private Connection conn;\n \n-    # Creates a new consumer. A new connection will be created if a reference to a connection is not provided.\n+    # Creates a new NATS Listener.\n     #\n-    # + connection - An already-established connection or configuration to create a new connection.\n+    # + connection - An established NATS connection.\n     public function __init(Connection connection) {\n         self.conn = connection;\n         consumerInit(self, connection);\n     }\n \n-    # Binds the NATS consumer to a service.\n+    # Binds a service to the `nats:Listener`.\n     #\n-    # + s - Type descriptor of the service.\n-    # + name - Name of the service.\n-    # + return - Returns nil or the error upon failure to register the listener.\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or else a `nats:Error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         return basicRegister(self, s, name);\n     }\n \n-    # Stops consuming messages and detaches the service from the `Listener` endpoint.\n+    # Stops consuming messages and detaches the service from the `nats:Listener`.\n     #\n     # + s - Type descriptor of the service\n-    # + return - Nil or error upon failure to detach the service\n+    # + return - () or else a `nats:Error` upon failure to detach the service\n     public function __detach(service s) returns error? {\n         return basicDetach(self, s);\n     }\n \n-    # Starts the listener in the lifecycle.\n+    # Starts the `nats:Listener`.\n     #\n-    # + return - Error or ().\n+    # + return - () or else a `nats:Error` upon failure to start the listener\n     public function __start() returns error? {\n         return basicStart(self);\n     }\n \n-    # Gracefully stops the listener in the lifecycle.\n+    # Gracefully stops the `nats:Listener`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY4OTQwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MToxM1rOGF9hTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MToxM1rOGF9hTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNDAxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or else a `nats:Error` upon failure to stop the listener\n          \n          \n            \n                # + return - `()` or else a `nats:Error` upon failure to stop the listener", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408904012", "createdAt": "2020-04-15T14:51:13Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "diffHunk": "@@ -17,54 +17,55 @@\n import ballerina/lang.'object as lang;\n import ballerina/java;\n \n-# Represents a connection which will be used for subscription.\n+# Represents the NATS server connection to which a subscription service should be bound in order to\n+# receive messages of the corresponding subscription.\n public type Listener object {\n \n     *lang:Listener;\n     private Connection conn;\n \n-    # Creates a new consumer. A new connection will be created if a reference to a connection is not provided.\n+    # Creates a new NATS Listener.\n     #\n-    # + connection - An already-established connection or configuration to create a new connection.\n+    # + connection - An established NATS connection.\n     public function __init(Connection connection) {\n         self.conn = connection;\n         consumerInit(self, connection);\n     }\n \n-    # Binds the NATS consumer to a service.\n+    # Binds a service to the `nats:Listener`.\n     #\n-    # + s - Type descriptor of the service.\n-    # + name - Name of the service.\n-    # + return - Returns nil or the error upon failure to register the listener.\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or else a `nats:Error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         return basicRegister(self, s, name);\n     }\n \n-    # Stops consuming messages and detaches the service from the `Listener` endpoint.\n+    # Stops consuming messages and detaches the service from the `nats:Listener`.\n     #\n     # + s - Type descriptor of the service\n-    # + return - Nil or error upon failure to detach the service\n+    # + return - () or else a `nats:Error` upon failure to detach the service\n     public function __detach(service s) returns error? {\n         return basicDetach(self, s);\n     }\n \n-    # Starts the listener in the lifecycle.\n+    # Starts the `nats:Listener`.\n     #\n-    # + return - Error or ().\n+    # + return - () or else a `nats:Error` upon failure to start the listener\n     public function __start() returns error? {\n         return basicStart(self);\n     }\n \n-    # Gracefully stops the listener in the lifecycle.\n+    # Gracefully stops the `nats:Listener`.\n     #\n-    # + return - Error or ().\n+    # + return - () or else a `nats:Error` upon failure to stop the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY5MDQwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MToyNFrOGF9h4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MToyNFrOGF9h4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNDE2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Forcefully stops the `nats:Listener`.\n          \n          \n            \n                # Stops the `nats:Listener` forcefully.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408904160", "createdAt": "2020-04-15T14:51:24Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "diffHunk": "@@ -17,54 +17,55 @@\n import ballerina/lang.'object as lang;\n import ballerina/java;\n \n-# Represents a connection which will be used for subscription.\n+# Represents the NATS server connection to which a subscription service should be bound in order to\n+# receive messages of the corresponding subscription.\n public type Listener object {\n \n     *lang:Listener;\n     private Connection conn;\n \n-    # Creates a new consumer. A new connection will be created if a reference to a connection is not provided.\n+    # Creates a new NATS Listener.\n     #\n-    # + connection - An already-established connection or configuration to create a new connection.\n+    # + connection - An established NATS connection.\n     public function __init(Connection connection) {\n         self.conn = connection;\n         consumerInit(self, connection);\n     }\n \n-    # Binds the NATS consumer to a service.\n+    # Binds a service to the `nats:Listener`.\n     #\n-    # + s - Type descriptor of the service.\n-    # + name - Name of the service.\n-    # + return - Returns nil or the error upon failure to register the listener.\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or else a `nats:Error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         return basicRegister(self, s, name);\n     }\n \n-    # Stops consuming messages and detaches the service from the `Listener` endpoint.\n+    # Stops consuming messages and detaches the service from the `nats:Listener`.\n     #\n     # + s - Type descriptor of the service\n-    # + return - Nil or error upon failure to detach the service\n+    # + return - () or else a `nats:Error` upon failure to detach the service\n     public function __detach(service s) returns error? {\n         return basicDetach(self, s);\n     }\n \n-    # Starts the listener in the lifecycle.\n+    # Starts the `nats:Listener`.\n     #\n-    # + return - Error or ().\n+    # + return - () or else a `nats:Error` upon failure to start the listener\n     public function __start() returns error? {\n         return basicStart(self);\n     }\n \n-    # Gracefully stops the listener in the lifecycle.\n+    # Gracefully stops the `nats:Listener`.\n     #\n-    # + return - Error or ().\n+    # + return - () or else a `nats:Error` upon failure to stop the listener\n     public function __gracefulStop() returns error? {\n         return basicGracefulStop(self);\n     }\n \n-    # Forcefully stops the listener in the lifecycle.\n+    # Forcefully stops the `nats:Listener`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY5MDk5OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MTozMlrOGF9iPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MTozMlrOGF9iPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNDI1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or else a `nats:Error` upon failure to stop the listener\n          \n          \n            \n                # + return - `()` or else a `nats:Error` upon failure to stop the listener", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408904255", "createdAt": "2020-04-15T14:51:32Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/basic/subscriber.bal", "diffHunk": "@@ -17,54 +17,55 @@\n import ballerina/lang.'object as lang;\n import ballerina/java;\n \n-# Represents a connection which will be used for subscription.\n+# Represents the NATS server connection to which a subscription service should be bound in order to\n+# receive messages of the corresponding subscription.\n public type Listener object {\n \n     *lang:Listener;\n     private Connection conn;\n \n-    # Creates a new consumer. A new connection will be created if a reference to a connection is not provided.\n+    # Creates a new NATS Listener.\n     #\n-    # + connection - An already-established connection or configuration to create a new connection.\n+    # + connection - An established NATS connection.\n     public function __init(Connection connection) {\n         self.conn = connection;\n         consumerInit(self, connection);\n     }\n \n-    # Binds the NATS consumer to a service.\n+    # Binds a service to the `nats:Listener`.\n     #\n-    # + s - Type descriptor of the service.\n-    # + name - Name of the service.\n-    # + return - Returns nil or the error upon failure to register the listener.\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or else a `nats:Error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         return basicRegister(self, s, name);\n     }\n \n-    # Stops consuming messages and detaches the service from the `Listener` endpoint.\n+    # Stops consuming messages and detaches the service from the `nats:Listener`.\n     #\n     # + s - Type descriptor of the service\n-    # + return - Nil or error upon failure to detach the service\n+    # + return - () or else a `nats:Error` upon failure to detach the service\n     public function __detach(service s) returns error? {\n         return basicDetach(self, s);\n     }\n \n-    # Starts the listener in the lifecycle.\n+    # Starts the `nats:Listener`.\n     #\n-    # + return - Error or ().\n+    # + return - () or else a `nats:Error` upon failure to start the listener\n     public function __start() returns error? {\n         return basicStart(self);\n     }\n \n-    # Gracefully stops the listener in the lifecycle.\n+    # Gracefully stops the `nats:Listener`.\n     #\n-    # + return - Error or ().\n+    # + return - () or else a `nats:Error` upon failure to stop the listener\n     public function __gracefulStop() returns error? {\n         return basicGracefulStop(self);\n     }\n \n-    # Forcefully stops the listener in the lifecycle.\n+    # Forcefully stops the `nats:Listener`.\n     #\n-    # + return - Error or ().\n+    # + return - () or else a `nats:Error` upon failure to stop the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY5MjQ0OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MTo0OFrOGF9jIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MTo0OFrOGF9jIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNDQ4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + maxReconnect - Maximum number of reconnect attempts. The reconnect state is triggered when already established\n          \n          \n            \n            # + maxReconnect - Maximum number of reconnect attempts. The reconnect state is triggered when an already established", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408904482", "createdAt": "2020-04-15T14:51:48Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configurations related to creating a NATS streaming subscription.\n #\n-# + connectionName - Name of the connection. This is optional.\n-# + maxReconnect - Maximum number of reconnect attempts. Use 0 to turn off auto reconnect.\n-# Use -1 to turn on infinite reconnects. The reconnect state is entered when the connection is connected and when\n-# that connection is lost. During the initial connection attempt, the client will cycle over\n-# its server list one time regardless of the maxReconnects value that is set.\n-# + reconnectWaitInSeconds - The time to wait between reconnect attempts to reconnect to the same server.\n-# This is measured in seconds.\n-# + connectionTimeoutInSeconds - The timeout for connection attempts measured in seconds.\n-# + pingIntervalInMinutes - The interval between the attempts of pinging the server. This is measured in minutes.\n-# + maxPingsOut - The maximum number of pings the client can have in flight. The default value will be a small number.\n-# + username - The username for basic authentication.\n-# + password - The password for basic authentication.\n-# + token - The token for token-based authentication.\n-# + inboxPrefix - The connection's inbox prefix. All inboxes will start with this string.\n+# + connectionName - Name of the connection (this is optional)\n+# + maxReconnect - Maximum number of reconnect attempts. The reconnect state is triggered when already established", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY5MzQ4OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MjowMlrOGF9j1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MjowMlrOGF9j1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNDY2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #                  connection is losted. During the initial connection attempt, the client will cycle\n          \n          \n            \n            #                  connection is lost. During the initial connection attempt, the client will cycle", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408904663", "createdAt": "2020-04-15T14:52:02Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configurations related to creating a NATS streaming subscription.\n #\n-# + connectionName - Name of the connection. This is optional.\n-# + maxReconnect - Maximum number of reconnect attempts. Use 0 to turn off auto reconnect.\n-# Use -1 to turn on infinite reconnects. The reconnect state is entered when the connection is connected and when\n-# that connection is lost. During the initial connection attempt, the client will cycle over\n-# its server list one time regardless of the maxReconnects value that is set.\n-# + reconnectWaitInSeconds - The time to wait between reconnect attempts to reconnect to the same server.\n-# This is measured in seconds.\n-# + connectionTimeoutInSeconds - The timeout for connection attempts measured in seconds.\n-# + pingIntervalInMinutes - The interval between the attempts of pinging the server. This is measured in minutes.\n-# + maxPingsOut - The maximum number of pings the client can have in flight. The default value will be a small number.\n-# + username - The username for basic authentication.\n-# + password - The password for basic authentication.\n-# + token - The token for token-based authentication.\n-# + inboxPrefix - The connection's inbox prefix. All inboxes will start with this string.\n+# + connectionName - Name of the connection (this is optional)\n+# + maxReconnect - Maximum number of reconnect attempts. The reconnect state is triggered when already established\n+#                  connection is losted. During the initial connection attempt, the client will cycle", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY5NDU4OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MjoxN1rOGF9kkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MjoxN1rOGF9kkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNDg0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #                  Use 0 to turn off auto reconnect.\n          \n          \n            \n            #                  Use 0 to turn off auto reconnecting.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408904849", "createdAt": "2020-04-15T14:52:17Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configurations related to creating a NATS streaming subscription.\n #\n-# + connectionName - Name of the connection. This is optional.\n-# + maxReconnect - Maximum number of reconnect attempts. Use 0 to turn off auto reconnect.\n-# Use -1 to turn on infinite reconnects. The reconnect state is entered when the connection is connected and when\n-# that connection is lost. During the initial connection attempt, the client will cycle over\n-# its server list one time regardless of the maxReconnects value that is set.\n-# + reconnectWaitInSeconds - The time to wait between reconnect attempts to reconnect to the same server.\n-# This is measured in seconds.\n-# + connectionTimeoutInSeconds - The timeout for connection attempts measured in seconds.\n-# + pingIntervalInMinutes - The interval between the attempts of pinging the server. This is measured in minutes.\n-# + maxPingsOut - The maximum number of pings the client can have in flight. The default value will be a small number.\n-# + username - The username for basic authentication.\n-# + password - The password for basic authentication.\n-# + token - The token for token-based authentication.\n-# + inboxPrefix - The connection's inbox prefix. All inboxes will start with this string.\n+# + connectionName - Name of the connection (this is optional)\n+# + maxReconnect - Maximum number of reconnect attempts. The reconnect state is triggered when already established\n+#                  connection is losted. During the initial connection attempt, the client will cycle\n+#                  over its server list one time regardless of the `maxReconnects` value that is set.\n+#                  Use 0 to turn off auto reconnect.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY5NTgyOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MjozM1rOGF9lWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MjozM1rOGF9lWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNTA1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + reconnectWaitInSeconds - The time(in seconds) to wait between reconnect attempts to reconnect to the same server\n          \n          \n            \n            # + reconnectWaitInSeconds - The time(in seconds) to wait between the reconnect attempts to reconnect to the same server", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408905051", "createdAt": "2020-04-15T14:52:33Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configurations related to creating a NATS streaming subscription.\n #\n-# + connectionName - Name of the connection. This is optional.\n-# + maxReconnect - Maximum number of reconnect attempts. Use 0 to turn off auto reconnect.\n-# Use -1 to turn on infinite reconnects. The reconnect state is entered when the connection is connected and when\n-# that connection is lost. During the initial connection attempt, the client will cycle over\n-# its server list one time regardless of the maxReconnects value that is set.\n-# + reconnectWaitInSeconds - The time to wait between reconnect attempts to reconnect to the same server.\n-# This is measured in seconds.\n-# + connectionTimeoutInSeconds - The timeout for connection attempts measured in seconds.\n-# + pingIntervalInMinutes - The interval between the attempts of pinging the server. This is measured in minutes.\n-# + maxPingsOut - The maximum number of pings the client can have in flight. The default value will be a small number.\n-# + username - The username for basic authentication.\n-# + password - The password for basic authentication.\n-# + token - The token for token-based authentication.\n-# + inboxPrefix - The connection's inbox prefix. All inboxes will start with this string.\n+# + connectionName - Name of the connection (this is optional)\n+# + maxReconnect - Maximum number of reconnect attempts. The reconnect state is triggered when already established\n+#                  connection is losted. During the initial connection attempt, the client will cycle\n+#                  over its server list one time regardless of the `maxReconnects` value that is set.\n+#                  Use 0 to turn off auto reconnect.\n+#                  Use -1 to turn on infinite reconnects.\n+# + reconnectWaitInSeconds - The time(in seconds) to wait between reconnect attempts to reconnect to the same server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY5NjU5OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1Mjo0NVrOGF9l3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1Mjo0NVrOGF9l3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNTE4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + connectionTimeoutInSeconds - The timeout(in seconds) for connection attempts\n          \n          \n            \n            # + connectionTimeoutInSeconds - The timeout (in seconds) for the connection attempts", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408905180", "createdAt": "2020-04-15T14:52:45Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configurations related to creating a NATS streaming subscription.\n #\n-# + connectionName - Name of the connection. This is optional.\n-# + maxReconnect - Maximum number of reconnect attempts. Use 0 to turn off auto reconnect.\n-# Use -1 to turn on infinite reconnects. The reconnect state is entered when the connection is connected and when\n-# that connection is lost. During the initial connection attempt, the client will cycle over\n-# its server list one time regardless of the maxReconnects value that is set.\n-# + reconnectWaitInSeconds - The time to wait between reconnect attempts to reconnect to the same server.\n-# This is measured in seconds.\n-# + connectionTimeoutInSeconds - The timeout for connection attempts measured in seconds.\n-# + pingIntervalInMinutes - The interval between the attempts of pinging the server. This is measured in minutes.\n-# + maxPingsOut - The maximum number of pings the client can have in flight. The default value will be a small number.\n-# + username - The username for basic authentication.\n-# + password - The password for basic authentication.\n-# + token - The token for token-based authentication.\n-# + inboxPrefix - The connection's inbox prefix. All inboxes will start with this string.\n+# + connectionName - Name of the connection (this is optional)\n+# + maxReconnect - Maximum number of reconnect attempts. The reconnect state is triggered when already established\n+#                  connection is losted. During the initial connection attempt, the client will cycle\n+#                  over its server list one time regardless of the `maxReconnects` value that is set.\n+#                  Use 0 to turn off auto reconnect.\n+#                  Use -1 to turn on infinite reconnects.\n+# + reconnectWaitInSeconds - The time(in seconds) to wait between reconnect attempts to reconnect to the same server\n+# + connectionTimeoutInSeconds - The timeout(in seconds) for connection attempts", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODY5NzY3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1Mjo1M1rOGF9mdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1Mjo1M1rOGF9mdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNTMzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + pingIntervalInMinutes - The interval(in minutes) between the attempts of pinging the server\n          \n          \n            \n            # + pingIntervalInMinutes - The interval (in minutes) between the attempts of pinging the server", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408905334", "createdAt": "2020-04-15T14:52:53Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configurations related to creating a NATS streaming subscription.\n #\n-# + connectionName - Name of the connection. This is optional.\n-# + maxReconnect - Maximum number of reconnect attempts. Use 0 to turn off auto reconnect.\n-# Use -1 to turn on infinite reconnects. The reconnect state is entered when the connection is connected and when\n-# that connection is lost. During the initial connection attempt, the client will cycle over\n-# its server list one time regardless of the maxReconnects value that is set.\n-# + reconnectWaitInSeconds - The time to wait between reconnect attempts to reconnect to the same server.\n-# This is measured in seconds.\n-# + connectionTimeoutInSeconds - The timeout for connection attempts measured in seconds.\n-# + pingIntervalInMinutes - The interval between the attempts of pinging the server. This is measured in minutes.\n-# + maxPingsOut - The maximum number of pings the client can have in flight. The default value will be a small number.\n-# + username - The username for basic authentication.\n-# + password - The password for basic authentication.\n-# + token - The token for token-based authentication.\n-# + inboxPrefix - The connection's inbox prefix. All inboxes will start with this string.\n+# + connectionName - Name of the connection (this is optional)\n+# + maxReconnect - Maximum number of reconnect attempts. The reconnect state is triggered when already established\n+#                  connection is losted. During the initial connection attempt, the client will cycle\n+#                  over its server list one time regardless of the `maxReconnects` value that is set.\n+#                  Use 0 to turn off auto reconnect.\n+#                  Use -1 to turn on infinite reconnects.\n+# + reconnectWaitInSeconds - The time(in seconds) to wait between reconnect attempts to reconnect to the same server\n+# + connectionTimeoutInSeconds - The timeout(in seconds) for connection attempts\n+# + pingIntervalInMinutes - The interval(in minutes) between the attempts of pinging the server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcwMDEzOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MzoyMVrOGF9n7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1MzoyMVrOGF9n7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNTcwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + noEcho - Turns off echo. This prevents the server from echoing messages back to the connection if it\n          \n          \n            \n            # + noEcho - Turns off echoing. This prevents the server from echoing messages back to the connection if it", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408905709", "createdAt": "2020-04-15T14:53:21Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -16,26 +16,26 @@\n \n import ballerina/crypto;\n \n-# The parameters used to create a NATS streaming subscription.\n+# Configurations related to creating a NATS streaming subscription.\n #\n-# + connectionName - Name of the connection. This is optional.\n-# + maxReconnect - Maximum number of reconnect attempts. Use 0 to turn off auto reconnect.\n-# Use -1 to turn on infinite reconnects. The reconnect state is entered when the connection is connected and when\n-# that connection is lost. During the initial connection attempt, the client will cycle over\n-# its server list one time regardless of the maxReconnects value that is set.\n-# + reconnectWaitInSeconds - The time to wait between reconnect attempts to reconnect to the same server.\n-# This is measured in seconds.\n-# + connectionTimeoutInSeconds - The timeout for connection attempts measured in seconds.\n-# + pingIntervalInMinutes - The interval between the attempts of pinging the server. This is measured in minutes.\n-# + maxPingsOut - The maximum number of pings the client can have in flight. The default value will be a small number.\n-# + username - The username for basic authentication.\n-# + password - The password for basic authentication.\n-# + token - The token for token-based authentication.\n-# + inboxPrefix - The connection's inbox prefix. All inboxes will start with this string.\n+# + connectionName - Name of the connection (this is optional)\n+# + maxReconnect - Maximum number of reconnect attempts. The reconnect state is triggered when already established\n+#                  connection is losted. During the initial connection attempt, the client will cycle\n+#                  over its server list one time regardless of the `maxReconnects` value that is set.\n+#                  Use 0 to turn off auto reconnect.\n+#                  Use -1 to turn on infinite reconnects.\n+# + reconnectWaitInSeconds - The time(in seconds) to wait between reconnect attempts to reconnect to the same server\n+# + connectionTimeoutInSeconds - The timeout(in seconds) for connection attempts\n+# + pingIntervalInMinutes - The interval(in minutes) between the attempts of pinging the server\n+# + maxPingsOut - The maximum number of pings the client can have in flight. The default value is two\n+# + username - The username for basic authentication\n+# + password - The password for basic authentication\n+# + token - The token for token-based authentication\n+# + inboxPrefix - The connection's inbox prefix, which all inboxes will start with\n # + noEcho - Turns off echo. This prevents the server from echoing messages back to the connection if it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcwMTgyOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1Mzo0MFrOGF9o-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1Mzo0MFrOGF9o-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNTk3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Configuration related to facilitating a secure communication with a remote HTTP endpoint.\n          \n          \n            \n            # Configurations related to facilitating a secure communication with a remote HTTP endpoint.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408905978", "createdAt": "2020-04-15T14:53:40Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/config.bal", "diffHunk": "@@ -52,11 +52,11 @@ public type ConnectionConfig record {|\n   SecureSocket? secureSocket = ();\n |};\n \n-# Provides configurations for facilitating secure communication with a remote HTTP endpoint.\n+# Configuration related to facilitating a secure communication with a remote HTTP endpoint.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcwMzI1OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/connection.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1Mzo1N1rOGF9p3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1Mzo1N1rOGF9p3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNjIwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + url - NATS Broker URL. For a clustered use case, pass the URLs as a string array\n          \n          \n            \n                # + url - The NATS Broker URL. For a clustered use case, pass the URLs as a string array", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408906205", "createdAt": "2020-04-15T14:53:57Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/connection.bal", "diffHunk": "@@ -24,8 +24,8 @@ public type Connection object {\n \n     # Initializes a connection with the NATS server.\n     #\n-    # + url - NATS Broker URL. For a clustered use case, pass the URLs as a string array.\n-    # + config - Information necessary for the NATS client to establish a connection with the server.\n+    # + url - NATS Broker URL. For a clustered use case, pass the URLs as a string array", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcwNDczOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/connection.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDoxNFrOGF9q0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDoxNFrOGF9q0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNjQ1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or else a `nats:Error` if unable to complete the close operation.\n          \n          \n            \n                # + return - `()` or else a `nats:Error` if unable to complete the close operation.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408906450", "createdAt": "2020-04-15T14:54:14Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/connection/connection.bal", "diffHunk": "@@ -35,8 +35,8 @@ public type Connection object {\n     # Closes a given connection.\n     #\n     # + forceful - The graceful shutdown flag. If `true`, the connection closes immediately.\n-    # By default, this is set to false.\n-    # + return - Returns () or the error if unable to complete the close operation.\n+    #              The default value is `false`.\n+    # + return - () or else a `nats:Error` if unable to complete the close operation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcwNTkzOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/error.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDozMVrOGF9rng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDozMVrOGF9rng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNjY1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Prepared `nats:Error` instance\n          \n          \n            \n            # + return - The prepared `nats:Error` instance", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408906654", "createdAt": "2020-04-15T14:54:31Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/error.bal", "diffHunk": "@@ -31,9 +31,9 @@ public type Error error<NATS_ERROR, Detail>;\n \n # Prepare the `error` as a `Error`.\n #\n-# + message - The error message.\n-# + err - The `error` instance.\n-# + return - Prepared `Error` instance.\n+# + message - The error message\n+# + err - The `error` instance\n+# + return - Prepared `nats:Error` instance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcwNjc0OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDo0MVrOGF9sHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDo0MVrOGF9sHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNjc4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + subject - Name of the subject to which it is subscribed to\n          \n          \n            \n            # + subject - Name of the subject to which it is subscribed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408906781", "createdAt": "2020-04-15T14:54:41Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -14,16 +14,17 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# The parameters used to create a NATS streaming subscription.\n+# The configurations for the NATS streaming subscription.\n #\n-# + subject - Name of the subject to which it is subscribed to.\n-# + queueName - The name of the queue group to which the subscription belongs to.\n-# + durableName - If set, this will survive client restarts.\n-# + maxInFlight - The number of messages the cluster will have in-flight without an ACK.\n-# + ackWaitInSeconds - The time the cluster will wait for an ACK for a given message (in Seconds).\n-# + subscriptionTimeoutInSeconds - The time (in Seconds) the subscription will wait if a network failure occurs during the creation of it.\n-# + manualAck - Enables manual acknowledgments.\n-# + startPosition - The position to start receiving messages.\n+# + subject - Name of the subject to which it is subscribed to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcwNzMyOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDo0OFrOGF9sdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDo0OFrOGF9sdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNjg3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + queueName - The name of the queue group to which the subscription belongs to\n          \n          \n            \n            # + queueName - The name of the queue group to which the subscription belongs", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408906871", "createdAt": "2020-04-15T14:54:48Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -14,16 +14,17 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# The parameters used to create a NATS streaming subscription.\n+# The configurations for the NATS streaming subscription.\n #\n-# + subject - Name of the subject to which it is subscribed to.\n-# + queueName - The name of the queue group to which the subscription belongs to.\n-# + durableName - If set, this will survive client restarts.\n-# + maxInFlight - The number of messages the cluster will have in-flight without an ACK.\n-# + ackWaitInSeconds - The time the cluster will wait for an ACK for a given message (in Seconds).\n-# + subscriptionTimeoutInSeconds - The time (in Seconds) the subscription will wait if a network failure occurs during the creation of it.\n-# + manualAck - Enables manual acknowledgments.\n-# + startPosition - The position to start receiving messages.\n+# + subject - Name of the subject to which it is subscribed to\n+# + queueName - The name of the queue group to which the subscription belongs to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcwNzg5OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDo1NlrOGF9s2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NDo1NlrOGF9s2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNjk2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + durableName - If set, this will survive client restarts\n          \n          \n            \n            # + durableName - If set, this will survive the client restarts", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408906968", "createdAt": "2020-04-15T14:54:56Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -14,16 +14,17 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# The parameters used to create a NATS streaming subscription.\n+# The configurations for the NATS streaming subscription.\n #\n-# + subject - Name of the subject to which it is subscribed to.\n-# + queueName - The name of the queue group to which the subscription belongs to.\n-# + durableName - If set, this will survive client restarts.\n-# + maxInFlight - The number of messages the cluster will have in-flight without an ACK.\n-# + ackWaitInSeconds - The time the cluster will wait for an ACK for a given message (in Seconds).\n-# + subscriptionTimeoutInSeconds - The time (in Seconds) the subscription will wait if a network failure occurs during the creation of it.\n-# + manualAck - Enables manual acknowledgments.\n-# + startPosition - The position to start receiving messages.\n+# + subject - Name of the subject to which it is subscribed to\n+# + queueName - The name of the queue group to which the subscription belongs to\n+# + durableName - If set, this will survive client restarts", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcxMDg3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/config.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NTozM1rOGF9utQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NTozM1rOGF9utQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNzQ0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Configuration related to establishing a streaming connection.\n          \n          \n            \n            # Configurations related to establishing a streaming connection.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408907445", "createdAt": "2020-04-15T14:55:33Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/config.bal", "diffHunk": "@@ -16,10 +16,10 @@\n \n # Configuration related to establishing a streaming connection.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcxMjkwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NjowMVrOGF9wGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NjowMVrOGF9wGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNzgwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + clusterId - The unique identifier of the cluster configured in the NATS server. Default value is `test-cluster`\n          \n          \n            \n                # + clusterId - The unique identifier of the cluster configured in the NATS server. The default value is `test-cluster`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408907803", "createdAt": "2020-04-15T14:56:01Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "diffHunk": "@@ -28,13 +28,13 @@ public type StreamingListener object {\n     private string? clientId;\n     private StreamingConfig? streamingConfig;\n \n-    # Creates a new StreamingListener.\n+    # Creates a new Streaming Listener.\n     #\n-    # + connection - An established NATS connection.\n-    # + clusterId - The ID of the cluster configured in the NATS server. Default value is `test-cluster`.\n-    # + clientId - A unique identifier representing the client. The `clientId` should be unique across subscriptions. Therefore,\n-    #              multilpe subscription services cannot be bound to a single listener.\n-    # + streamingConfig - The configuration related to the NATS streaming connectivity.\n+    # + connection - An established NATS connection\n+    # + clusterId - The unique identifier of the cluster configured in the NATS server. Default value is `test-cluster`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcxMzk0OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NjoxM1rOGF9wwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NjoxM1rOGF9wwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwNzk2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + clientId - The unique identifier of the client. The `clientId` should be unique across subscriptions.\n          \n          \n            \n                # + clientId - The unique identifier of the client. The `clientId` should be unique across all the subscriptions.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408907969", "createdAt": "2020-04-15T14:56:13Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "diffHunk": "@@ -28,13 +28,13 @@ public type StreamingListener object {\n     private string? clientId;\n     private StreamingConfig? streamingConfig;\n \n-    # Creates a new StreamingListener.\n+    # Creates a new Streaming Listener.\n     #\n-    # + connection - An established NATS connection.\n-    # + clusterId - The ID of the cluster configured in the NATS server. Default value is `test-cluster`.\n-    # + clientId - A unique identifier representing the client. The `clientId` should be unique across subscriptions. Therefore,\n-    #              multilpe subscription services cannot be bound to a single listener.\n-    # + streamingConfig - The configuration related to the NATS streaming connectivity.\n+    # + connection - An established NATS connection\n+    # + clusterId - The unique identifier of the cluster configured in the NATS server. Default value is `test-cluster`\n+    # + clientId - The unique identifier of the client. The `clientId` should be unique across subscriptions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcxNTYyOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NjozNFrOGF9x0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NjozNFrOGF9x0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwODI0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or else a `nats:Error` upon failure to register the listener\n          \n          \n            \n                # + return - `()` or else a `nats:Error` upon failure to register the listener", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408908241", "createdAt": "2020-04-15T14:56:34Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "diffHunk": "@@ -44,22 +44,40 @@ public type StreamingListener object {\n         streamingListenerInit(self);\n     }\n \n+    # Binds a service to the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or else a `nats:Error` upon failure to register the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcxNjQwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1Njo0M1rOGF9yTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1Njo0M1rOGF9yTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwODM2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or else a `nats:Error` upon failure to detach the service\n          \n          \n            \n                # + return - `()` or else a `nats:Error` upon failure to detach the service", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408908367", "createdAt": "2020-04-15T14:56:43Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "diffHunk": "@@ -44,22 +44,40 @@ public type StreamingListener object {\n         streamingListenerInit(self);\n     }\n \n+    # Binds a service to the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or else a `nats:Error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         streamingAttach(self, s, self.connection);\n     }\n \n+    # Stops consuming messages and detaches the service from the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + return - () or else a `nats:Error` upon failure to detach the service", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcxNzIzOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1Njo1M1rOGF9yzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1Njo1M1rOGF9yzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwODQ5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or else a `nats:Error` upon failure to start the listener\n          \n          \n            \n                # + return - `()` or else a `nats:Error` upon failure to start the listener", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408908493", "createdAt": "2020-04-15T14:56:53Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "diffHunk": "@@ -44,22 +44,40 @@ public type StreamingListener object {\n         streamingListenerInit(self);\n     }\n \n+    # Binds a service to the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or else a `nats:Error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         streamingAttach(self, s, self.connection);\n     }\n \n+    # Stops consuming messages and detaches the service from the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + return - () or else a `nats:Error` upon failure to detach the service\n     public function __detach(service s) returns error? {\n         streamingDetach(self, s);\n     }\n \n+    # Starts the `nats:StreamingListener`.\n+    #\n+    # + return - () or else a `nats:Error` upon failure to start the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcxODYyOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NzoxMVrOGF9ztg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NzoxMVrOGF9ztg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwODcyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Gracefully stops the `nats:StreamingListener`.\n          \n          \n            \n                # Stops the `nats:StreamingListener` gracefully.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408908726", "createdAt": "2020-04-15T14:57:11Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "diffHunk": "@@ -44,22 +44,40 @@ public type StreamingListener object {\n         streamingListenerInit(self);\n     }\n \n+    # Binds a service to the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or else a `nats:Error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         streamingAttach(self, s, self.connection);\n     }\n \n+    # Stops consuming messages and detaches the service from the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + return - () or else a `nats:Error` upon failure to detach the service\n     public function __detach(service s) returns error? {\n         streamingDetach(self, s);\n     }\n \n+    # Starts the `nats:StreamingListener`.\n+    #\n+    # + return - () or else a `nats:Error` upon failure to start the listener\n     public function __start() returns error? {\n          streamingSubscribe(self, self.connection, java:fromString(self.clusterId), self.clientId, self.streamingConfig);\n     }\n \n+    # Gracefully stops the `nats:StreamingListener`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODcxOTM2OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NzoxOVrOGF90Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDo1NzoxOVrOGF90Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkwODgzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - () or else a `nats:Error` upon failure to stop the listener\n          \n          \n            \n                # + return - `()` or else a `nats:Error` upon failure to stop the listener", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22551#discussion_r408908838", "createdAt": "2020-04-15T14:57:19Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/listener.bal", "diffHunk": "@@ -44,22 +44,40 @@ public type StreamingListener object {\n         streamingListenerInit(self);\n     }\n \n+    # Binds a service to the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + name - Name of the service\n+    # + return - () or else a `nats:Error` upon failure to register the listener\n     public function __attach(service s, string? name = ()) returns error? {\n         streamingAttach(self, s, self.connection);\n     }\n \n+    # Stops consuming messages and detaches the service from the `nats:StreamingListener`.\n+    #\n+    # + s - Type descriptor of the service\n+    # + return - () or else a `nats:Error` upon failure to detach the service\n     public function __detach(service s) returns error? {\n         streamingDetach(self, s);\n     }\n \n+    # Starts the `nats:StreamingListener`.\n+    #\n+    # + return - () or else a `nats:Error` upon failure to start the listener\n     public function __start() returns error? {\n          streamingSubscribe(self, self.connection, java:fromString(self.clusterId), self.clientId, self.streamingConfig);\n     }\n \n+    # Gracefully stops the `nats:StreamingListener`.\n+    #\n+    # + return - () or else a `nats:Error` upon failure to stop the listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b572e1d2d1697f8c5ff4d00e14801f9bec39cff"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4125, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}