{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMDY4NzQ2", "number": 26992, "title": "Set detail map as immutable", "bodyText": "Purpose\n\n$title.\n\nFixes #26545\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-11-18T10:08:54Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26992", "merged": true, "mergeCommit": {"oid": "7bb2a8a2e3f7be0a99a7368db15d02fad521ed31"}, "closed": true, "closedAt": "2020-11-23T17:18:39Z", "author": {"login": "chiranSachintha"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddq4TagH2gAyNTIzMDY4NzQ2OmRiYTJhN2ZlNWQyMGUwYzM5MTIwYTc2OGFkYTY2MTU2ZTY5NDVjNGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfYOr5gFqTUzNjY3MzgyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dba2a7fe5d20e0c39120a768ada66156e6945c4d", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dba2a7fe5d20e0c39120a768ada66156e6945c4d", "committedDate": "2020-11-18T09:38:33Z", "message": "Set detail map as immutable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d042e7043f64f09138932557b2b7be435000542f", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d042e7043f64f09138932557b2b7be435000542f", "committedDate": "2020-11-18T10:07:54Z", "message": "Set initial values for detail map while creating"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MzIxMjQ0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26992#pullrequestreview-535321244", "createdAt": "2020-11-20T10:49:00Z", "commit": {"oid": "d042e7043f64f09138932557b2b7be435000542f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDo0OTowMFrOH3KtIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDo1Njo1NlrOH3K9dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYwOTEyMQ==", "bodyText": "Can't we use TYPE_ERROR_DETAIL here? This also has to be immutable, right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26992#discussion_r527609121", "createdAt": "2020-11-20T10:49:00Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/api/PredefinedTypes.java", "diffHunk": "@@ -164,9 +164,10 @@\n     public static final ServiceType TYPE_ANY_SERVICE = new BServiceType(TypeConstants.SERVICE, EMPTY_MODULE, 0);\n     public static final HandleType TYPE_HANDLE = new BHandleType(TypeConstants.HANDLE_TNAME, EMPTY_MODULE);\n     public static final UnionType ANYDATA_OR_READONLY = new BUnionType(Arrays.asList(TYPE_ANYDATA, TYPE_READONLY));\n-    public static final MapType TYPE_ERROR_DETAIL = new BMapType(TypeConstants.MAP_TNAME, ANYDATA_OR_READONLY,\n-                                                                 EMPTY_MODULE);\n-    public static final ErrorType TYPE_ERROR = new BErrorType(TypeConstants.ERROR, EMPTY_MODULE, TYPE_ERROR_DETAIL);\n+    public static final Type TYPE_ERROR_DETAIL = ReadOnlyUtils.setImmutableTypeAndGetEffectiveType(\n+                                            new BMapType(TypeConstants.MAP_TNAME, ANYDATA_OR_READONLY, EMPTY_MODULE));\n+    public static final ErrorType TYPE_ERROR = new BErrorType(TypeConstants.ERROR, EMPTY_MODULE,\n+                                            new BMapType(TypeConstants.MAP_TNAME, ANYDATA_OR_READONLY, EMPTY_MODULE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d042e7043f64f09138932557b2b7be435000542f"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYxMzMwMw==", "bodyText": "IMO we shouldn't do this. We should create and pass the initialValues array only if the values are present.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26992#discussion_r527613303", "createdAt": "2020-11-20T10:56:56Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/values/MapValueImpl.java", "diffHunk": "@@ -271,6 +271,9 @@ public V put(K key, V value) {\n \n     protected void populateInitialValues(BMapInitialValueEntry[] initialValues) {\n         for (BMapInitialValueEntry initialValue : initialValues) {\n+            if (initialValue == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d042e7043f64f09138932557b2b7be435000542f"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d458ede7b0e4837d82fef679575f7355cde846e3", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d458ede7b0e4837d82fef679575f7355cde846e3", "committedDate": "2020-11-20T12:12:03Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into issue-26545"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b775c465099c335291dc77e369614394c1a875e0", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b775c465099c335291dc77e369614394c1a875e0", "committedDate": "2020-11-23T10:35:19Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NTQwNjUw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26992#pullrequestreview-536540650", "createdAt": "2020-11-23T14:46:59Z", "commit": {"oid": "b775c465099c335291dc77e369614394c1a875e0"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNDo0Njo1OVrOH4QohA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNDo1Mzo0MlrOH4Q8BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc1NDgyMA==", "bodyText": "Shall we define a private final variable for new BMapType(TypeConstants.MAP_TNAME, ANYDATA_OR_READONLY, EMPTY_MODULE) and use that in these two types?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26992#discussion_r528754820", "createdAt": "2020-11-23T14:46:59Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/api/PredefinedTypes.java", "diffHunk": "@@ -164,9 +164,10 @@\n     public static final ServiceType TYPE_ANY_SERVICE = new BServiceType(TypeConstants.SERVICE, EMPTY_MODULE, 0);\n     public static final HandleType TYPE_HANDLE = new BHandleType(TypeConstants.HANDLE_TNAME, EMPTY_MODULE);\n     public static final UnionType ANYDATA_OR_READONLY = new BUnionType(Arrays.asList(TYPE_ANYDATA, TYPE_READONLY));\n-    public static final MapType TYPE_ERROR_DETAIL = new BMapType(TypeConstants.MAP_TNAME, ANYDATA_OR_READONLY,\n-                                                                 EMPTY_MODULE);\n-    public static final ErrorType TYPE_ERROR = new BErrorType(TypeConstants.ERROR, EMPTY_MODULE, TYPE_ERROR_DETAIL);\n+    public static final Type TYPE_ERROR_DETAIL = ReadOnlyUtils.setImmutableTypeAndGetEffectiveType(\n+                                            new BMapType(TypeConstants.MAP_TNAME, ANYDATA_OR_READONLY, EMPTY_MODULE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b775c465099c335291dc77e369614394c1a875e0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc1NzI0Ng==", "bodyText": "Shall we extract e.getMessage() and e.getCause() out to variables?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26992#discussion_r528757246", "createdAt": "2020-11-23T14:50:16Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/ErrorUtils.java", "diffHunk": "@@ -50,14 +51,28 @@\n      * @return ballerina error\n      */\n     public static ErrorValue createInteropError(Throwable e) {\n-        BMap<BString, Object> detailMap = new MapValueImpl<>(PredefinedTypes.TYPE_ERROR_DETAIL);\n-        if (e.getMessage() != null) {\n-            detailMap.put(ERROR_MESSAGE_FIELD, StringUtils.fromString(e.getMessage()));\n-        }\n-        if (e.getCause() != null) {\n-            detailMap.put(ERROR_CAUSE_FIELD, createError(StringUtils.fromString(e.getCause().getClass().getName()),\n-                                                         StringUtils.fromString(e.getCause().getMessage())));\n+        MappingInitialValueEntry[] initialValues;\n+        if (e.getMessage() != null && e.getCause() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b775c465099c335291dc77e369614394c1a875e0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc1OTgxMg==", "bodyText": "Wouldn't this lead to the same issue where the entry becomes null?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26992#discussion_r528759812", "createdAt": "2020-11-23T14:53:42Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/api/creators/ErrorCreator.java", "diffHunk": "@@ -105,11 +101,11 @@ public static BError createError(Type type, BString message, BError cause, BMap<\n      * @return new error\n      */\n     public static BError createError(Type type, BString message, BString details) {\n-        MapValueImpl<BString, Object> detailMap =\n-                new MapValueImpl<>(setImmutableTypeAndGetEffectiveType(PredefinedTypes.TYPE_ERROR_DETAIL));\n+        MappingInitialValueEntry[] initialValues = new MappingInitialValueEntry[1];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b775c465099c335291dc77e369614394c1a875e0"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "596d02e5f328bc44bd7b8db15f9afeaf8ea3a587", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/596d02e5f328bc44bd7b8db15f9afeaf8ea3a587", "committedDate": "2020-11-23T15:36:36Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c076fc9c878311dea65f8fce771dfcda3ef74a70", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c076fc9c878311dea65f8fce771dfcda3ef74a70", "committedDate": "2020-11-23T16:45:13Z", "message": "Fix review suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df68f82e066feb1c5af117d33bf49b453143e53d", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/df68f82e066feb1c5af117d33bf49b453143e53d", "committedDate": "2020-11-23T16:42:00Z", "message": "Fix review suggestions"}, "afterCommit": {"oid": "c076fc9c878311dea65f8fce771dfcda3ef74a70", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c076fc9c878311dea65f8fce771dfcda3ef74a70", "committedDate": "2020-11-23T16:45:13Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NjczODI2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26992#pullrequestreview-536673826", "createdAt": "2020-11-23T17:02:39Z", "commit": {"oid": "c076fc9c878311dea65f8fce771dfcda3ef74a70"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4908, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}