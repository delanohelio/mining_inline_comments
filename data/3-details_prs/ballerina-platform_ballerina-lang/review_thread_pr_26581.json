{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5Njk0NDA1", "number": 26581, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwMjozMDoyNlrOEyKJzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwMjozODo0NVrOEyKP7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDMwNjA1OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwMjozMDoyNlrOHopLQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOToxMDo0OFrOHox7xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3OTcxMg==", "bodyText": "Any idea why do we need this change?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512379712", "createdAt": "2020-10-27T02:30:26Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "diffHunk": "@@ -2877,7 +2878,7 @@\n                 },\n                 {\n                     \"name\": \"intermediateClauses\",\n-                    \"type\": \"IntermediateClauseNode\",\n+                    \"type\": \"ClauseNode\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUxODM0MQ==", "bodyText": "https://ballerina.io/swan-lake/learn/by-example/query-expression.html\nIn this code, specifically in the QueryPipelineNode, order by student.firstName descending part is a OrderByClauseNode which is extended from ClauseNode directly. So, it cannot exists inside the NodeList<IntermediateClauseNode.\nHere is a small code segment with this problem.\npublic function main() {\n    Report[] reportList = from var student in studentList\n       where student.gpa >= 2.0\n       order by student.firstName descending\n       limit 2\n       select {};\n}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512518341", "createdAt": "2020-10-27T09:03:10Z", "author": {"login": "kdsuneraavinash"}, "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "diffHunk": "@@ -2877,7 +2878,7 @@\n                 },\n                 {\n                     \"name\": \"intermediateClauses\",\n-                    \"type\": \"IntermediateClauseNode\",\n+                    \"type\": \"ClauseNode\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3OTcxMg=="}, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyMzIwNQ==", "bodyText": "I see.\nIssue seems to be in the OrderByClauseNode. We should make the base type of OrderByClauseNode to IntermediateClauseNode.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512523205", "createdAt": "2020-10-27T09:10:48Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "diffHunk": "@@ -2877,7 +2878,7 @@\n                 },\n                 {\n                     \"name\": \"intermediateClauses\",\n-                    \"type\": \"IntermediateClauseNode\",\n+                    \"type\": \"ClauseNode\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3OTcxMg=="}, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDMwNjUzOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwMjozMDo0MlrOHopLig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOTo0OToyMFrOHozdKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3OTc4Ng==", "bodyText": "and this one too?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512379786", "createdAt": "2020-10-27T02:30:42Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "diffHunk": "@@ -2173,7 +2174,7 @@\n                 },\n                 {\n                     \"name\": \"content\",\n-                    \"type\": \"TemplateMemberNode\",\n+                    \"type\": \"Node\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM4ODM0MA==", "bodyText": "Just saw the issue reported. +1 for this change.\nShall we also remove the TemplateMemberNode from the syntax tree, since there are no more usages of it?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512388340", "createdAt": "2020-10-27T03:01:38Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "diffHunk": "@@ -2173,7 +2174,7 @@\n                 },\n                 {\n                     \"name\": \"content\",\n-                    \"type\": \"TemplateMemberNode\",\n+                    \"type\": \"Node\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3OTc4Ng=="}, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyNDkxOA==", "bodyText": "Should I remove that in this PR as well?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512524918", "createdAt": "2020-10-27T09:13:32Z", "author": {"login": "kdsuneraavinash"}, "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "diffHunk": "@@ -2173,7 +2174,7 @@\n                 },\n                 {\n                     \"name\": \"content\",\n-                    \"type\": \"TemplateMemberNode\",\n+                    \"type\": \"Node\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3OTc4Ng=="}, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyODcwNA==", "bodyText": "+1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512528704", "createdAt": "2020-10-27T09:19:20Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "diffHunk": "@@ -2173,7 +2174,7 @@\n                 },\n                 {\n                     \"name\": \"content\",\n-                    \"type\": \"TemplateMemberNode\",\n+                    \"type\": \"Node\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3OTc4Ng=="}, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU0ODEzOQ==", "bodyText": "XMLItemNode extends from TemplateMemberNode. So should I change XMLItemNode to extend from the superclass of TemplateMemberNode instead? (which is Node)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512548139", "createdAt": "2020-10-27T09:49:20Z", "author": {"login": "kdsuneraavinash"}, "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "diffHunk": "@@ -2173,7 +2174,7 @@\n                 },\n                 {\n                     \"name\": \"content\",\n-                    \"type\": \"TemplateMemberNode\",\n+                    \"type\": \"Node\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3OTc4Ng=="}, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDMwNzEzOnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwMjozMTowM1rOHopL4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOToxMjowNlrOHox-6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3OTg3Mg==", "bodyText": "Shall we remove this extra newline?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512379872", "createdAt": "2020-10-27T02:31:03Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -17,6 +17,7 @@\n  */\n package org.ballerinalang.formatter.core;\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyNDAxMQ==", "bodyText": "OK", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512524011", "createdAt": "2020-10-27T09:12:06Z", "author": {"login": "kdsuneraavinash"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -17,6 +17,7 @@\n  */\n package org.ballerinalang.formatter.core;\n \n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM3OTg3Mg=="}, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDMwOTk2OnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwMjozMjo0M1rOHopNpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOToxODo1MlrOHoyQBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM4MDMyNw==", "bodyText": "Formatting properties of the annotations should be changed depending on the existence of the type.\nCan you create an issue to track this?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512380327", "createdAt": "2020-10-27T02:32:43Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -1391,7 +1391,7 @@ public TypeCastExpressionNode transform(TypeCastExpressionNode typeCastExpressio\n     @Override\n     public TypeCastParamNode transform(TypeCastParamNode typeCastParamNode) {\n         NodeList<AnnotationNode> annotations = formatNodeList(typeCastParamNode.annotations(), 0, 1, 1, 0);\n-        Node type = formatNode(typeCastParamNode.type(), env.trailingWS, env.trailingNL);\n+        Node type = formatNode(typeCastParamNode.type().orElse(null), env.trailingWS, env.trailingNL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyMjQ1NQ==", "bodyText": "Actually previously it was possible for the typeCastParamNode.type() to be null. However, it was handled inside the formatNode method accordingly.\nprivate <T extends Node> T formatNode(T node, int trailingWS, int trailingNL) {\n        if (node == null || node.isMissing()) {\n            return node;\n        }\n       // ...\n}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512522455", "createdAt": "2020-10-27T09:09:36Z", "author": {"login": "kdsuneraavinash"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -1391,7 +1391,7 @@ public TypeCastExpressionNode transform(TypeCastExpressionNode typeCastExpressio\n     @Override\n     public TypeCastParamNode transform(TypeCastParamNode typeCastParamNode) {\n         NodeList<AnnotationNode> annotations = formatNodeList(typeCastParamNode.annotations(), 0, 1, 1, 0);\n-        Node type = formatNode(typeCastParamNode.type(), env.trailingWS, env.trailingNL);\n+        Node type = formatNode(typeCastParamNode.type().orElse(null), env.trailingWS, env.trailingNL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM4MDMyNw=="}, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyODM5MQ==", "bodyText": "Trailing whitespaces/newlines etc. of a given node depends on the node to be followed. So here, if the typeCastParamNode.type() is not present, then the formatting of the preceding node (annotations) must be adjusted accordingly.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512528391", "createdAt": "2020-10-27T09:18:52Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -1391,7 +1391,7 @@ public TypeCastExpressionNode transform(TypeCastExpressionNode typeCastExpressio\n     @Override\n     public TypeCastParamNode transform(TypeCastParamNode typeCastParamNode) {\n         NodeList<AnnotationNode> annotations = formatNodeList(typeCastParamNode.annotations(), 0, 1, 1, 0);\n-        Node type = formatNode(typeCastParamNode.type(), env.trailingWS, env.trailingNL);\n+        Node type = formatNode(typeCastParamNode.type().orElse(null), env.trailingWS, env.trailingNL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM4MDMyNw=="}, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDMyMTcyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/syntax/tree/AbstractNodeFactory.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwMjozODo0NVrOHopUaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMDo1Nzo1OFrOHo2QCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM4MjA1Nw==", "bodyText": "Do we need to change the parameter type from the generic type T to Node?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512382057", "createdAt": "2020-10-27T02:38:45Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/syntax/tree/AbstractNodeFactory.java", "diffHunk": "@@ -189,17 +189,17 @@ public static Minutiae createEndOfLineMinutiae(String text) {\n                         .collect(Collectors.toList())).createUnlinkedFacade());\n     }\n \n-    public static <T extends Node> NodeList<T> createSeparatedNodeList(T... nodes) {\n+    public static <T extends Node> SeparatedNodeList<T> createSeparatedNodeList(Node... nodes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyMzUzOA==", "bodyText": "Yes, I think so.\nThe SeparatedNodeList contains separator nodes as well.\nThese are not of the Type T.\nSee issue #26440", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512523538", "createdAt": "2020-10-27T09:11:22Z", "author": {"login": "kdsuneraavinash"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/syntax/tree/AbstractNodeFactory.java", "diffHunk": "@@ -189,17 +189,17 @@ public static Minutiae createEndOfLineMinutiae(String text) {\n                         .collect(Collectors.toList())).createUnlinkedFacade());\n     }\n \n-    public static <T extends Node> NodeList<T> createSeparatedNodeList(T... nodes) {\n+    public static <T extends Node> SeparatedNodeList<T> createSeparatedNodeList(Node... nodes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM4MjA1Nw=="}, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyODU0Ng==", "bodyText": "I have added a comment in 26440", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512528546", "createdAt": "2020-10-27T09:19:07Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/syntax/tree/AbstractNodeFactory.java", "diffHunk": "@@ -189,17 +189,17 @@ public static Minutiae createEndOfLineMinutiae(String text) {\n                         .collect(Collectors.toList())).createUnlinkedFacade());\n     }\n \n-    public static <T extends Node> NodeList<T> createSeparatedNodeList(T... nodes) {\n+    public static <T extends Node> SeparatedNodeList<T> createSeparatedNodeList(Node... nodes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM4MjA1Nw=="}, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU3NDUwMw==", "bodyText": "What if SeparatedNodeList was changed to accept the Node type, but does a runtime check to see if every even index is of Type T?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512574503", "createdAt": "2020-10-27T10:29:22Z", "author": {"login": "kdsuneraavinash"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/syntax/tree/AbstractNodeFactory.java", "diffHunk": "@@ -189,17 +189,17 @@ public static Minutiae createEndOfLineMinutiae(String text) {\n                         .collect(Collectors.toList())).createUnlinkedFacade());\n     }\n \n-    public static <T extends Node> NodeList<T> createSeparatedNodeList(T... nodes) {\n+    public static <T extends Node> SeparatedNodeList<T> createSeparatedNodeList(Node... nodes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM4MjA1Nw=="}, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU5MzkzMA==", "bodyText": "oh okay, I think I misunderstood the problem.\n+1 for the change", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26581#discussion_r512593930", "createdAt": "2020-10-27T10:57:58Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/syntax/tree/AbstractNodeFactory.java", "diffHunk": "@@ -189,17 +189,17 @@ public static Minutiae createEndOfLineMinutiae(String text) {\n                         .collect(Collectors.toList())).createUnlinkedFacade());\n     }\n \n-    public static <T extends Node> NodeList<T> createSeparatedNodeList(T... nodes) {\n+    public static <T extends Node> SeparatedNodeList<T> createSeparatedNodeList(Node... nodes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM4MjA1Nw=="}, "originalCommit": {"oid": "ec29a782d9bbc740bb53e68ddb58e31ddc43c9f3"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4636, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}