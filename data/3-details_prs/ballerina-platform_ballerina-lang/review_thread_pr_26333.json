{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMjE4Njcy", "number": 26333, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMjowMzoyOFrOEtAUWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMjowMzoyOFrOEtAUWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NjI2NTg2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/symbols/BSymbol.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMjowMzoyOFrOHgjQ0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNToxNToxOFrOHhCg8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5NDIyNg==", "bodyText": "Can we do this check at the symbol enter phase? Then we can use the BLangMissingNodesHelper", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26333#discussion_r503894226", "createdAt": "2020-10-13T12:03:28Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/symbols/BSymbol.java", "diffHunk": "@@ -66,7 +68,12 @@ public BSymbol(int tag, int flags, Name name, PackageID pkgID, BType type, BSymb\n         this.type = type;\n         this.owner = owner;\n         this.pos = pos;\n-        this.origin = origin;\n+\n+        if (name.value.startsWith(\"$missingNode$\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8354f1318b06074a2ba4feec1dc93321c6a8d515"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkyNjE4NA==", "bodyText": "Can do. The concern is whether symbol enter is the only place where a SOURCE symbol can be created.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26333#discussion_r503926184", "createdAt": "2020-10-13T12:54:33Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/symbols/BSymbol.java", "diffHunk": "@@ -66,7 +68,12 @@ public BSymbol(int tag, int flags, Name name, PackageID pkgID, BType type, BSymb\n         this.type = type;\n         this.owner = owner;\n         this.pos = pos;\n-        this.origin = origin;\n+\n+        if (name.value.startsWith(\"$missingNode$\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5NDIyNg=="}, "originalCommit": {"oid": "8354f1318b06074a2ba4feec1dc93321c6a8d515"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3NjcyOQ==", "bodyText": "I think it would be better to do it within this constructor if we can't ensure Pubudu's concern and this is always the common place", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26333#discussion_r504376729", "createdAt": "2020-10-14T03:20:44Z", "author": {"login": "nadeeshaan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/symbols/BSymbol.java", "diffHunk": "@@ -66,7 +68,12 @@ public BSymbol(int tag, int flags, Name name, PackageID pkgID, BType type, BSymb\n         this.type = type;\n         this.owner = owner;\n         this.pos = pos;\n-        this.origin = origin;\n+\n+        if (name.value.startsWith(\"$missingNode$\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5NDIyNg=="}, "originalCommit": {"oid": "8354f1318b06074a2ba4feec1dc93321c6a8d515"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM5MDQwMA==", "bodyText": "IMO creator of the symbol should give the proper origin.\nAlso, having to hardcode \"$missingNode$\" smells a problem", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26333#discussion_r504390400", "createdAt": "2020-10-14T04:14:13Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/symbols/BSymbol.java", "diffHunk": "@@ -66,7 +68,12 @@ public BSymbol(int tag, int flags, Name name, PackageID pkgID, BType type, BSymb\n         this.type = type;\n         this.owner = owner;\n         this.pos = pos;\n-        this.origin = origin;\n+\n+        if (name.value.startsWith(\"$missingNode$\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5NDIyNg=="}, "originalCommit": {"oid": "8354f1318b06074a2ba4feec1dc93321c6a8d515"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwNjI1Ng==", "bodyText": "Will move it to symbol enter and see. If any issues arise, can address them case by case I guess", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26333#discussion_r504406256", "createdAt": "2020-10-14T05:15:18Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/symbols/BSymbol.java", "diffHunk": "@@ -66,7 +68,12 @@ public BSymbol(int tag, int flags, Name name, PackageID pkgID, BType type, BSymb\n         this.type = type;\n         this.owner = owner;\n         this.pos = pos;\n-        this.origin = origin;\n+\n+        if (name.value.startsWith(\"$missingNode$\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5NDIyNg=="}, "originalCommit": {"oid": "8354f1318b06074a2ba4feec1dc93321c6a8d515"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4721, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}