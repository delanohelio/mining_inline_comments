{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxODc3MTIx", "number": 25661, "title": "On Fail error handler implementation", "bodyText": "Purpose\n\nSingle place to handle errors in a function\nnew fail expression support\nnew do statement support\n\nFixes #25282\nApproach\n\nOn fail catches failures (from fail statement or failure of a check expression) not panics.\n\nSamples\ndo {\n   check foo();\n   check bar();\n}\non fail var e {\n   // this will be executed if the block-stmt following do fails\n   // which will happen if and only if one of the two\n   // check actions fails\n   // type of e will be union of the error types that can be\n   // returned by foo and bar\n   io:println(\"whoops\");\n   return e;\n}\n\nRemarks\n\nn/a\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-09-08T08:31:12Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661", "merged": true, "mergeCommit": {"oid": "ab1bb186a4ba81756554933d3db00862ee2d4635"}, "closed": true, "closedAt": "2020-09-14T11:31:52Z", "author": {"login": "pcnfernando"}, "timelineItems": {"totalCount": 121, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHf_1OgFqTQ4NTg2Njk3NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdIxfVOAFqTQ4NzY2MDc5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1ODY2OTc1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-485866975", "createdAt": "2020-09-10T12:16:04Z", "commit": {"oid": "533a2a7aac031aad8c2ce7f9d678d4db32752665"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMjoxNjowNFrOHPwrww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMjozMDo0MlrOHPxN7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI4ODMyMw==", "bodyText": "Don't we need to start context for on fail clause?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r486288323", "createdAt": "2020-09-10T12:16:04Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -10703,6 +10742,24 @@ private STNode parseRetryBody() {\n         }\n     }\n \n+    /**\n+     * Parse on fail clause.\n+     * <code>on-fail-clause := on fail typed-binding-pattern block-stmt</code>\n+     *\n+     * @return While statement\n+     */\n+    private STNode parseOnFailClause() {\n+        STNode onKeyword = parseOnKeyword();\n+        STNode failKeyword = parseFailKeyword();\n+        STNode typeDescriptorNode = parseTypeDescriptor(ParserRuleContext.TYPE_DESC_IN_TYPE_BINDING_PATTERN,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "533a2a7aac031aad8c2ce7f9d678d4db32752665"}, "originalPosition": 387}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI5NzA3MQ==", "bodyText": "I thing we need to add error handler logic for on fail clause as well.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r486297071", "createdAt": "2020-09-10T12:30:42Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -10703,6 +10742,24 @@ private STNode parseRetryBody() {\n         }\n     }\n \n+    /**\n+     * Parse on fail clause.\n+     * <code>on-fail-clause := on fail typed-binding-pattern block-stmt</code>\n+     *\n+     * @return While statement\n+     */\n+    private STNode parseOnFailClause() {\n+        STNode onKeyword = parseOnKeyword();\n+        STNode failKeyword = parseFailKeyword();\n+        STNode typeDescriptorNode = parseTypeDescriptor(ParserRuleContext.TYPE_DESC_IN_TYPE_BINDING_PATTERN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI4ODMyMw=="}, "originalCommit": {"oid": "533a2a7aac031aad8c2ce7f9d678d4db32752665"}, "originalPosition": 387}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "846a11cf29402a3f37654e1ad53c9a18aadfc62f", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/846a11cf29402a3f37654e1ad53c9a18aadfc62f", "committedDate": "2020-09-10T13:19:26Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into on-fail-impl\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParser.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f5b476f741fa14484e54f56788cb784e4fe655b", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6f5b476f741fa14484e54f56788cb784e4fe655b", "committedDate": "2020-09-10T13:25:37Z", "message": "Sync with upstream master parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc7e180a77b4ca21d83f0661c4345c5068e9b243", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cc7e180a77b4ca21d83f0661c4345c5068e9b243", "committedDate": "2020-09-11T05:00:21Z", "message": "Fix do-stmt and on-fail-clause error recovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71823f21add524231235ffda5446010799d6ab4b", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/71823f21add524231235ffda5446010799d6ab4b", "committedDate": "2020-09-11T05:01:42Z", "message": "Add on-fail-clause recovery test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33b19db52bfa6b5393922b095cb670c33d083a14", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/33b19db52bfa6b5393922b095cb670c33d083a14", "committedDate": "2020-09-11T05:33:23Z", "message": "Merge branch 'on-fail-impl' of https://github.com/ballerina-platform/ballerina-lang into fix-on-fail\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb89548d3ba8143c16d7f564336db996e24fca35", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fb89548d3ba8143c16d7f564336db996e24fca35", "committedDate": "2020-09-11T05:51:01Z", "message": "Fix merging issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd174533e2a2ce7b4af527fbcb9d71e60e816bb3", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cd174533e2a2ce7b4af527fbcb9d71e60e816bb3", "committedDate": "2020-09-11T07:09:34Z", "message": "Allow type-binding-pattern in on-fail-clause"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34e55ee3ba972533179d4ff43070cf64a88c28d4", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/34e55ee3ba972533179d4ff43070cf64a88c28d4", "committedDate": "2020-09-11T07:21:16Z", "message": "Merge pull request #25732 from lochana-chathura/fix-on-fail\n\nImplement on-fail-clause recovery in error handler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bc8663c3adaf4d1025d6d120c3c7e47019b9fa5", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3bc8663c3adaf4d1025d6d120c3c7e47019b9fa5", "committedDate": "2020-09-11T08:40:36Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into on-fail-impl\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STNodeFactory.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STNodeTransformer.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STNodeVisitor.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STTreeModifier.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/NodeFactory.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/NodeTransformer.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/NodeVisitor.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/TreeModifier.java\n\u0001\tcompiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json\n\u0001\ttests/jballerina-unit-test/src/test/resources/testng-jballerina.xml\n\u0001\ttests/jballerina-unit-test/src/test/resources/testng-new-parser.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f8839a512df20cafdd91215b5d0caa6bd611e92", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3f8839a512df20cafdd91215b5d0caa6bd611e92", "committedDate": "2020-09-11T08:52:35Z", "message": "Add on fail tests to test profile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c3fa5cca45a611541f58069dca2dfa6e6e98863", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9c3fa5cca45a611541f58069dca2dfa6e6e98863", "committedDate": "2020-09-11T11:44:00Z", "message": "Remove fail expr from LS node visitor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb58b024ecbf39663216756be197a61255bccd48", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bb58b024ecbf39663216756be197a61255bccd48", "committedDate": "2020-09-11T11:45:11Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into on-fail-impl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fbfae1a85dfe92345a3a96f68d047e3be53eba5", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0fbfae1a85dfe92345a3a96f68d047e3be53eba5", "committedDate": "2020-09-11T15:33:35Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into on-fail-impl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec2b77fa2ce76128f8ef79e0d1de5cd4da710d91", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ec2b77fa2ce76128f8ef79e0d1de5cd4da710d91", "committedDate": "2020-09-14T03:35:30Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into on-fail-impl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d65382498a2c77874eadd56e48ee283ac39a1277", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d65382498a2c77874eadd56e48ee283ac39a1277", "committedDate": "2020-09-14T04:42:40Z", "message": "Update test to sync object -> class migration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3127144f25e82bc70b3249760948e830f1822c3", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d3127144f25e82bc70b3249760948e830f1822c3", "committedDate": "2020-09-14T05:17:03Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into on-fail-impl\n\n\u0001 Conflicts:\n\u0001\tmisc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27c976d0a6feaa9ac9249633ee5067e58cfa505e", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/27c976d0a6feaa9ac9249633ee5067e58cfa505e", "committedDate": "2020-09-14T05:27:03Z", "message": "Add fail statement format transformer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NDI3NTkw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-487427590", "createdAt": "2020-09-14T05:38:19Z", "commit": {"oid": "27c976d0a6feaa9ac9249633ee5067e58cfa505e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fdf6cfe9d7f7d4a74ab5ca9b39ad0aea189406e", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7fdf6cfe9d7f7d4a74ab5ca9b39ad0aea189406e", "committedDate": "2020-09-14T10:51:25Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into on-fail-impl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NjYwNzk4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-487660798", "createdAt": "2020-09-14T11:28:12Z", "commit": {"oid": "7fdf6cfe9d7f7d4a74ab5ca9b39ad0aea189406e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3944b56e0a7d2e02ef1f9c606202e864aeb4cb2", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b3944b56e0a7d2e02ef1f9c606202e864aeb4cb2", "committedDate": "2020-07-20T06:01:32Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into on-fail-clause"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bac29e96888b4fb964b8b8efc8a6a9fe019f451d", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bac29e96888b4fb964b8b8efc8a6a9fe019f451d", "committedDate": "2020-07-23T05:17:07Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into on-fail-clause"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6daa374d7ca37281a0e01c1efe5a89f4839c6f4b", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6daa374d7ca37281a0e01c1efe5a89f4839c6f4b", "committedDate": "2020-07-23T11:54:43Z", "message": "Add on-fail clause compiler changes and do clause statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4031b0f6c8fe45ac7190d9fcf73b9adadf4df2a", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c4031b0f6c8fe45ac7190d9fcf73b9adadf4df2a", "committedDate": "2020-07-27T06:14:45Z", "message": "Fix type checking issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a0bf6266f2a802f9a0fcd6f9ad942242ca63340", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8a0bf6266f2a802f9a0fcd6f9ad942242ca63340", "committedDate": "2020-07-28T13:40:41Z", "message": "Add on-fail clause to transaction statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a4990cb4a9002252df481d14a97732c95f223d0", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2a4990cb4a9002252df481d14a97732c95f223d0", "committedDate": "2020-07-29T02:30:10Z", "message": "Add on-fail clause to while statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49f86f6a22d540c68547a8528cb017046e2fedea", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/49f86f6a22d540c68547a8528cb017046e2fedea", "committedDate": "2020-07-29T02:44:08Z", "message": "Add on-fail clause to lock statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f119e70f17fb5cce5e2c73fb947fb53a7526ba28", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f119e70f17fb5cce5e2c73fb947fb53a7526ba28", "committedDate": "2020-07-29T03:05:40Z", "message": "Add on-fail clause to retry statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1400974b6893a6c25141bb63baf8528d03e43a0c", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1400974b6893a6c25141bb63baf8528d03e43a0c", "committedDate": "2020-07-29T05:10:16Z", "message": "Add on-fail clause to match statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91019f86a0ae41d60dc2e442d89f2d86ceeaa69d", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/91019f86a0ae41d60dc2e442d89f2d86ceeaa69d", "committedDate": "2020-08-04T07:50:36Z", "message": "Add on-fail clause to new parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18bae577869325888eb82d1f13085cdcbf479cca", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/18bae577869325888eb82d1f13085cdcbf479cca", "committedDate": "2020-08-04T09:06:53Z", "message": "Add do statement to new parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d16c621329fbe691668d8aa0eefe3686309966f", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1d16c621329fbe691668d8aa0eefe3686309966f", "committedDate": "2020-08-10T08:01:07Z", "message": "Add onfail clause support for retry, trx, lock and match statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f1fa13d25c9cc2bea21441463969e67cd95ca14", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7f1fa13d25c9cc2bea21441463969e67cd95ca14", "committedDate": "2020-08-10T14:43:27Z", "message": "Add parser testcases for on fail clause related statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c9e4c255d2f118e8a0ba1c4b2df9f972eeb0ac1", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2c9e4c255d2f118e8a0ba1c4b2df9f972eeb0ac1", "committedDate": "2020-08-14T07:57:34Z", "message": "Initial commit wirh onfail support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4e347f542ad3db21c1ea93e2fcdad954e7ca668", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f4e347f542ad3db21c1ea93e2fcdad954e7ca668", "committedDate": "2020-08-14T07:57:34Z", "message": "Add initial check support with on-fail clause"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94207a65e33b591c4d30dd0677087a9c3fa5717c", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/94207a65e33b591c4d30dd0677087a9c3fa5717c", "committedDate": "2020-08-14T07:57:34Z", "message": "Improve BIR gen to handle jumps from new basic blocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77eb9f272260b172c6cced86401d79c74ea63413", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/77eb9f272260b172c6cced86401d79c74ea63413", "committedDate": "2020-08-14T07:57:34Z", "message": "Handle returns within onfail clause"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c467cf59cd1398e1d5110b1addb59b218b8fdd5", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4c467cf59cd1398e1d5110b1addb59b218b8fdd5", "committedDate": "2020-08-14T07:57:34Z", "message": "Add initial do statement tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "478987e6e11b2916e306c1ea00162a930a5a67ac", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/478987e6e11b2916e306c1ea00162a930a5a67ac", "committedDate": "2020-08-14T07:57:34Z", "message": "Add closure to variable references used inside on-fail clause"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c318e42f27c16201bcf91c70e2aead47951348ee", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c318e42f27c16201bcf91c70e2aead47951348ee", "committedDate": "2020-08-14T07:57:34Z", "message": "Add on fail handling test with do statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0abd23873ea5456b44dcc872707d3dd79b7b394", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f0abd23873ea5456b44dcc872707d3dd79b7b394", "committedDate": "2020-08-14T09:27:28Z", "message": "Temporarily disable closured reference test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "384c5ae2eef32491230c1eef4791eafaefce96c9", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/384c5ae2eef32491230c1eef4791eafaefce96c9", "committedDate": "2020-08-18T04:24:19Z", "message": "Change fail expression into statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3962ff483c1cabe50bf4c263cd47d68a1876136", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c3962ff483c1cabe50bf4c263cd47d68a1876136", "committedDate": "2020-08-18T08:38:24Z", "message": "Add new parser changes which convert fail expr as statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c3ed6e12e61da1281d84fd1b37e3f0bce66fad2", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6c3ed6e12e61da1281d84fd1b37e3f0bce66fad2", "committedDate": "2020-08-19T04:44:53Z", "message": "Support using error thrown within breakable block at on-fail clause"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad4f53ccb23bd6f2b3c8cd1a25be754e286c0eb5", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ad4f53ccb23bd6f2b3c8cd1a25be754e286c0eb5", "committedDate": "2020-08-19T05:02:49Z", "message": "Merge branch 'on-fail-impl' of https://github.com/ballerina-platform/ballerina-lang into on-fail-clause\n\n# Conflicts:\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf1a2c76dac4d353831d1480ff1e17aae7c06da3", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bf1a2c76dac4d353831d1480ff1e17aae7c06da3", "committedDate": "2020-08-19T06:41:54Z", "message": "Fix TypeChecker checkstyle failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab9b05cd0818a315545d2c7f8dd634cbf1074205", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ab9b05cd0818a315545d2c7f8dd634cbf1074205", "committedDate": "2020-08-19T06:55:04Z", "message": "Fix checkstyle issues found"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f18f29908cd0431f0a543a472066ca271d7850c", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7f18f29908cd0431f0a543a472066ca271d7850c", "committedDate": "2020-08-19T07:13:18Z", "message": "Merge pull request #25321 from mohanvive/on-fail-clause\n\nChange fail expression into statement and related changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4c4a74e4528f5013752cfd2b4354343eec4d9d7", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a4c4a74e4528f5013752cfd2b4354343eec4d9d7", "committedDate": "2020-08-19T08:00:15Z", "message": "Handle nested on-fail clauses"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56f958b84945a3905dbfff624f78abb4e0513dc6", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/56f958b84945a3905dbfff624f78abb4e0513dc6", "committedDate": "2020-08-19T14:30:38Z", "message": "Fix test failures due to basic block skips"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81786d579b1c92b490e067368af51f3ae24a1aeb", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/81786d579b1c92b490e067368af51f3ae24a1aeb", "committedDate": "2020-08-19T14:48:38Z", "message": "Merge branch 'on-fail-impl' of https://github.com/ballerina-platform/ballerina-lang into on-fail-clause\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/BIRGen.java\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd7d6c54a7d4d44f71497fe61e1ce6fbb7f4f08f", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bd7d6c54a7d4d44f71497fe61e1ce6fbb7f4f08f", "committedDate": "2020-08-19T17:50:41Z", "message": "Skip return type validation for handled failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b646730b6f012a9b9362fb941dcf8a5cb658a1ca", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b646730b6f012a9b9362fb941dcf8a5cb658a1ca", "committedDate": "2020-08-25T06:57:51Z", "message": "Add on-fail var type validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3307ebb62dfd1da5a2a26c9caf8ed6fc54da8473", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3307ebb62dfd1da5a2a26c9caf8ed6fc54da8473", "committedDate": "2020-08-25T17:02:49Z", "message": "Support using closures within on-fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0feb1811cef69b5ba7692d0c4e7405d28c42da46", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0feb1811cef69b5ba7692d0c4e7405d28c42da46", "committedDate": "2020-08-25T17:37:10Z", "message": "Add basic on-fail tests with do stmt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5a17ad6028a942cbd71a5f09b533503639884ef", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d5a17ad6028a942cbd71a5f09b533503639884ef", "committedDate": "2020-08-25T17:38:46Z", "message": "Remove unnecessary test util method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bcb993751a79b9ade5d8303456e7d48cdc17a10", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9bcb993751a79b9ade5d8303456e7d48cdc17a10", "committedDate": "2020-08-25T18:13:19Z", "message": "Add test handling check failure with on-fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b4af1491714f709e9a48fa4e45d894ac7ff1fd6", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2b4af1491714f709e9a48fa4e45d894ac7ff1fd6", "committedDate": "2020-08-25T19:07:06Z", "message": "Support catching multiple fails within single on-fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd7a2d0c27c53af31a0b566a149b005906cdf6ed", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cd7a2d0c27c53af31a0b566a149b005906cdf6ed", "committedDate": "2020-08-25T19:07:59Z", "message": "Add test catching multiple fails within single on-fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea8bf09f6e83ed4be7ad54e3f3a0e9d6e8c4c25e", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ea8bf09f6e83ed4be7ad54e3f3a0e9d6e8c4c25e", "committedDate": "2020-08-27T04:28:15Z", "message": "Support jumping from statements desugared to lambdas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3dcd16730e3e0f2169c59d80011ea0326b2817e1", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3dcd16730e3e0f2169c59d80011ea0326b2817e1", "committedDate": "2020-09-02T18:38:15Z", "message": "Support on fail for match statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2af2e7af720cb0e4179bde6a866168acf0111819", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2af2e7af720cb0e4179bde6a866168acf0111819", "committedDate": "2020-09-02T18:40:05Z", "message": "Add on fail tests for transaction statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ec01e3c1925fd2eb4fd6485e005792deab8eb60", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1ec01e3c1925fd2eb4fd6485e005792deab8eb60", "committedDate": "2020-09-02T18:40:25Z", "message": "Add on fail tests for match statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "261e9e6b2bba940e4e9c4a57d9932a9981243687", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/261e9e6b2bba940e4e9c4a57d9932a9981243687", "committedDate": "2020-09-03T03:21:27Z", "message": "Support on fail for lock statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68970d31528559e71d2a7a3c51a8b0c3651e4bef", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/68970d31528559e71d2a7a3c51a8b0c3651e4bef", "committedDate": "2020-09-03T03:34:37Z", "message": "Add on fail tests for lock statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d916685865a207e20c7f1e7c57a66fc3c70801f8", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d916685865a207e20c7f1e7c57a66fc3c70801f8", "committedDate": "2020-09-03T10:13:27Z", "message": "Improve on-fail at while desugar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "049418a2305c6e5524b5ea0202b9982ad68c47fd", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/049418a2305c6e5524b5ea0202b9982ad68c47fd", "committedDate": "2020-09-03T10:14:27Z", "message": "Add tests for while statements with on fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a27c7f28817d19762dfc0e0169b742ef325c84d2", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a27c7f28817d19762dfc0e0169b742ef325c84d2", "committedDate": "2020-09-03T11:42:11Z", "message": "Add tests for retry statements with on fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8180a5e11d94a99d35ff9be70aea0101fa8a8ee6", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8180a5e11d94a99d35ff9be70aea0101fa8a8ee6", "committedDate": "2020-09-03T17:14:38Z", "message": "Add tests for foreach statements with on fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48bb4253acb0457bdb754c83f7fdb8126f98ee15", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/48bb4253acb0457bdb754c83f7fdb8126f98ee15", "committedDate": "2020-09-04T03:30:04Z", "message": "Improve on fail compile time checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff47f7519395e7a72c2887c607b7b3be8eb15963", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ff47f7519395e7a72c2887c607b7b3be8eb15963", "committedDate": "2020-09-04T03:30:44Z", "message": "Add on fail negative tests for do statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34cd0c43254825064167facf23369ca8b1ead0f2", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/34cd0c43254825064167facf23369ca8b1ead0f2", "committedDate": "2020-09-04T03:32:05Z", "message": "Add on fail tests to testng profile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c70df851abce3a9c04f27268143fc30115deec10", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c70df851abce3a9c04f27268143fc30115deec10", "committedDate": "2020-09-04T08:09:42Z", "message": "Improve on-fail code analysis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbabc7604c1dd079153e99b06cdea9ff3e749a7d", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cbabc7604c1dd079153e99b06cdea9ff3e749a7d", "committedDate": "2020-09-04T08:18:19Z", "message": "Remove commented code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2476f2f1149e4378869668648105d517a2bca603", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2476f2f1149e4378869668648105d517a2bca603", "committedDate": "2020-09-04T09:16:42Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into on-fail-clause\n\n# Conflicts:\n#\tcompiler/ballerina-lang/src/main/java/org/ballerinalang/model/TreeBuilder.java\n#\tcompiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/NodeKind.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/ConstantPropagation.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangPackageBuilder.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/NodeCloner.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaLexer.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/antlr4/BallerinaParser.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DataflowAnalyzer.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/BLangNodeVisitor.java\n#\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\n#\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java\n#\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STNodeFactory.java\n#\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STNodeTransformer.java\n#\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STNodeVisitor.java\n#\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STTreeModifier.java\n#\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/NodeFactory.java\n#\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/NodeTransformer.java\n#\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/NodeVisitor.java\n#\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java\n#\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/TreeModifier.java\n#\tcompiler/ballerina-parser/src/test/resources/test1.bal\n#\tcompiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9cfca743d826e6ea83d745bfe56d0ea621831ab", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b9cfca743d826e6ea83d745bfe56d0ea621831ab", "committedDate": "2020-09-04T09:45:32Z", "message": "Fix checkstyle issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5fb3f7a8de0f12deffc9f1646cb00f996b827d3", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c5fb3f7a8de0f12deffc9f1646cb00f996b827d3", "committedDate": "2020-09-04T10:00:19Z", "message": "Fix formatter-core due to invalid expression"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f95d7dc57b751e7fc10fc6561e34fb249f4045f8", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f95d7dc57b751e7fc10fc6561e34fb249f4045f8", "committedDate": "2020-09-04T11:09:16Z", "message": "Fix on-fail clause related parser tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbb827f34deca672e250937bdaaeb7ab3ef7a956", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cbb827f34deca672e250937bdaaeb7ab3ef7a956", "committedDate": "2020-09-04T11:12:13Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into on-fail-clause\n\n# Conflicts:\n#\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e7a562d8bd41b4495adae175defde3dd3bddb4f", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8e7a562d8bd41b4495adae175defde3dd3bddb4f", "committedDate": "2020-09-04T11:50:37Z", "message": "Fix checkstyle issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93d96ee298788f0a516ecd52512b0f35d18cb9fc", "author": {"user": {"login": "mohanvive", "name": "Mohanadarshan V"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/93d96ee298788f0a516ecd52512b0f35d18cb9fc", "committedDate": "2020-09-04T12:48:53Z", "message": "Fix testcases due to fail conversion as statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b21b039b9e4a84be609be95db7a4f6c368e4bd0", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6b21b039b9e4a84be609be95db7a4f6c368e4bd0", "committedDate": "2020-09-04T18:15:56Z", "message": "Sync with upstream master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bde4935ae83c3eda760ed731824e9b2339e20710", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bde4935ae83c3eda760ed731824e9b2339e20710", "committedDate": "2020-09-05T18:23:44Z", "message": "Fix checkstyle failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d78570cb9f1566e7f9d4d2797acbcb0f895ea92b", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d78570cb9f1566e7f9d4d2797acbcb0f895ea92b", "committedDate": "2020-09-07T04:59:22Z", "message": "Remove unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc4effbaa1f70e34f26f2ca1107192b68b660439", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cc4effbaa1f70e34f26f2ca1107192b68b660439", "committedDate": "2020-09-07T08:23:32Z", "message": "Create a check panic rollback statement in trx desugar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d499181af65acb3d100f7f2cb11ecb4eef4dde32", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d499181af65acb3d100f7f2cb11ecb4eef4dde32", "committedDate": "2020-09-07T08:29:09Z", "message": "Fix transaction on-fail test failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8c0d91dba2e6bfcd6b639118db4466d80398c13", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f8c0d91dba2e6bfcd6b639118db4466d80398c13", "committedDate": "2020-09-07T08:48:28Z", "message": "Merge pull request #25618 from mohanvive/on-fail-clause\n\nSync master with on-fail-impl branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f342ef35b181056509d98a4bd1c96d837a0d3056", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f342ef35b181056509d98a4bd1c96d837a0d3056", "committedDate": "2020-09-07T10:39:11Z", "message": "Fix setting fail statement as last always"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3dd253976865f7b6ed38d30ca67e654e76a7d253", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3dd253976865f7b6ed38d30ca67e654e76a7d253", "committedDate": "2020-09-07T16:21:55Z", "message": "Remove unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aae668c4bc89176908a205afd0f7ea31fcd65024", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aae668c4bc89176908a205afd0f7ea31fcd65024", "committedDate": "2020-09-07T16:26:48Z", "message": "Merge branch 'on-fail-impl' of https://github.com/ballerina-platform/ballerina-lang into on-fail-work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94787591460b4e2cfdbeb36f57ef87e562fe9542", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/94787591460b4e2cfdbeb36f57ef87e562fe9542", "committedDate": "2020-09-07T17:17:08Z", "message": "Add newly added test to new parser test profile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04773f2e754b7e89e40c1ea0b3ff096d829eb7c1", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/04773f2e754b7e89e40c1ea0b3ff096d829eb7c1", "committedDate": "2020-09-08T01:51:15Z", "message": "Fix test failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff26fa40d4d33fcc79d7433cf38f4f507594a53e", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ff26fa40d4d33fcc79d7433cf38f4f507594a53e", "committedDate": "2020-09-08T04:28:30Z", "message": "Reset last statement in on-fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d714c10c24a1e83f958e025f6de727790fe7a288", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d714c10c24a1e83f958e025f6de727790fe7a288", "committedDate": "2020-09-08T04:53:03Z", "message": "Remove unintended file changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd26e53257482055f4db25c783c5fc167b1192f8", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fd26e53257482055f4db25c783c5fc167b1192f8", "committedDate": "2020-09-08T04:58:11Z", "message": "Revert \"Remove unintended file changes\"\n\nThis reverts commit d714c10c"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e284b6618ca411d4684f4ec01680648da04fa32", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4e284b6618ca411d4684f4ec01680648da04fa32", "committedDate": "2020-09-08T05:52:18Z", "message": "Merge pull request #25654 from pcnfernando/on-fail-work\n\nSync to on-fail-impl branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89b53796b2fba87f405b5899cf36a2b7d713f000", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/89b53796b2fba87f405b5899cf36a2b7d713f000", "committedDate": "2020-09-08T05:53:52Z", "message": "Support var definition in on-fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba53f82c085846db10da7200a6afc1ca9165bfeb", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ba53f82c085846db10da7200a6afc1ca9165bfeb", "committedDate": "2020-09-08T08:17:12Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into on-fail-impl\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/708f74f9506b94a67300286190f353bbcd9f5912", "committedDate": "2020-09-08T10:02:03Z", "message": "Remove commented out lines"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0ODg3MzAx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-484887301", "createdAt": "2020-09-09T10:51:21Z", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0ODg3ODky", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-484887892", "createdAt": "2020-09-09T10:52:19Z", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDo1MjoyMFrOHPBvhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDo1MjoyMFrOHPBvhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUxOTIzOA==", "bodyText": "Shall we have a proper description here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485519238", "createdAt": "2020-09-09T10:52:20Z", "author": {"login": "gimantha"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/statements/DoNode.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.model.tree.statements;\n+\n+import org.ballerinalang.model.clauses.OnFailClauseNode;\n+\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0ODk0OTE0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-484894914", "createdAt": "2020-09-09T11:02:23Z", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTowMjoyM1rOHPCEtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTowMjoyM1rOHPCEtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUyNDY2Mg==", "bodyText": "Lets give a brief description to this class", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485524662", "createdAt": "2020-09-09T11:02:23Z", "author": {"login": "gimantha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/statements/BLangDo.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.tree.statements;\n+\n+import org.ballerinalang.model.clauses.OnFailClauseNode;\n+import org.ballerinalang.model.tree.NodeKind;\n+import org.ballerinalang.model.tree.statements.BlockStatementNode;\n+import org.ballerinalang.model.tree.statements.DoNode;\n+import org.wso2.ballerinalang.compiler.tree.BLangNodeVisitor;\n+import org.wso2.ballerinalang.compiler.tree.clauses.BLangOnFailClause;\n+\n+/**\n+ * @since Swan Lake\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0ODk2NDE2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-484896416", "createdAt": "2020-09-09T11:04:50Z", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTowNDo1MFrOHPCJrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTowNDo1MFrOHPCJrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUyNTkzNA==", "bodyText": "@SInCE Swan Lake", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485525934", "createdAt": "2020-09-09T11:04:50Z", "author": {"login": "gimantha"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STDoStatementNode.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package io.ballerinalang.compiler.internal.parser.tree;\n+\n+import io.ballerinalang.compiler.syntax.tree.DoStatementNode;\n+import io.ballerinalang.compiler.syntax.tree.Node;\n+import io.ballerinalang.compiler.syntax.tree.NonTerminalNode;\n+import io.ballerinalang.compiler.syntax.tree.SyntaxKind;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+/**\n+ * This is a generated internal syntax tree node.\n+ *\n+ * @since 2.0.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0ODk2NjM4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-484896638", "createdAt": "2020-09-09T11:05:09Z", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTowNTowOVrOHPCKpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTowNTowOVrOHPCKpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUyNjE4Mw==", "bodyText": "version should be Swan Lake", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485526183", "createdAt": "2020-09-09T11:05:09Z", "author": {"login": "gimantha"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STFailStatementNode.java", "diffHunk": "@@ -30,62 +30,66 @@\n  *\n  * @since 2.0.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0ODk2OTU3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-484896957", "createdAt": "2020-09-09T11:05:41Z", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTowNTo0MVrOHPCLlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTowNTo0MVrOHPCLlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUyNjQyMQ==", "bodyText": "@SInCE Swan Lake", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485526421", "createdAt": "2020-09-09T11:05:41Z", "author": {"login": "gimantha"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STOnFailClauseNode.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package io.ballerinalang.compiler.internal.parser.tree;\n+\n+import io.ballerinalang.compiler.syntax.tree.Node;\n+import io.ballerinalang.compiler.syntax.tree.NonTerminalNode;\n+import io.ballerinalang.compiler.syntax.tree.OnFailClauseNode;\n+import io.ballerinalang.compiler.syntax.tree.SyntaxKind;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+/**\n+ * This is a generated internal syntax tree node.\n+ *\n+ * @since 2.0.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0ODk3MjE5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-484897219", "createdAt": "2020-09-09T11:06:05Z", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTowNjowNVrOHPCMSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTowNjowNVrOHPCMSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUyNjYwMw==", "bodyText": "@SInCE Swan Lake", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485526603", "createdAt": "2020-09-09T11:06:05Z", "author": {"login": "gimantha"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/DoStatementNode.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package io.ballerinalang.compiler.syntax.tree;\n+\n+import io.ballerinalang.compiler.internal.parser.tree.STNode;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ * This is a generated syntax tree node.\n+ *\n+ * @since 2.0.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0OTAyNDUz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-484902453", "createdAt": "2020-09-09T11:14:06Z", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToxNDowN1rOHPCbtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToxNDowN1rOHPCbtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUzMDU1MQ==", "bodyText": "version", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485530551", "createdAt": "2020-09-09T11:14:07Z", "author": {"login": "gimantha"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/DoStatementNode.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package io.ballerinalang.compiler.syntax.tree;\n+\n+import io.ballerinalang.compiler.internal.parser.tree.STNode;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ * This is a generated syntax tree node.\n+ *\n+ * @since 2.0.0\n+ */\n+public class DoStatementNode extends StatementNode {\n+\n+    public DoStatementNode(STNode internalNode, int position, NonTerminalNode parent) {\n+        super(internalNode, position, parent);\n+    }\n+\n+    public Token doKeyword() {\n+        return childInBucket(0);\n+    }\n+\n+    public BlockStatementNode blockStatement() {\n+        return childInBucket(1);\n+    }\n+\n+    public Optional<OnFailClauseNode> onFailClause() {\n+        return optionalChildInBucket(2);\n+    }\n+\n+    @Override\n+    public void accept(NodeVisitor visitor) {\n+        visitor.visit(this);\n+    }\n+\n+    @Override\n+    public <T> T apply(NodeTransformer<T> visitor) {\n+        return visitor.transform(this);\n+    }\n+\n+    @Override\n+    protected String[] childNames() {\n+        return new String[]{\n+                \"doKeyword\",\n+                \"blockStatement\",\n+                \"onFailClause\"};\n+    }\n+\n+    public DoStatementNode modify(\n+            Token doKeyword,\n+            BlockStatementNode blockStatement,\n+            OnFailClauseNode onFailClause) {\n+        if (checkForReferenceEquality(\n+                doKeyword,\n+                blockStatement,\n+                onFailClause)) {\n+            return this;\n+        }\n+\n+        return NodeFactory.createDoStatementNode(\n+                doKeyword,\n+                blockStatement,\n+                onFailClause);\n+    }\n+\n+    public DoStatementNodeModifier modify() {\n+        return new DoStatementNodeModifier(this);\n+    }\n+\n+    /**\n+     * This is a generated tree node modifier utility.\n+     *\n+     * @since 2.0.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 90}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0OTAyODA0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-484902804", "createdAt": "2020-09-09T11:14:36Z", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToxNDozN1rOHPCcxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMToxNDozN1rOHPCcxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUzMDgyMQ==", "bodyText": "version", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485530821", "createdAt": "2020-09-09T11:14:37Z", "author": {"login": "gimantha"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/OnFailClauseNode.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package io.ballerinalang.compiler.syntax.tree;\n+\n+import io.ballerinalang.compiler.internal.parser.tree.STNode;\n+\n+import java.util.Objects;\n+\n+/**\n+ * This is a generated syntax tree node.\n+ *\n+ * @since 2.0.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0OTE5OTUy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-484919952", "createdAt": "2020-09-09T11:40:20Z", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTo0MDoyMFrOHPDPzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMTo0MTozN1rOHPDSaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU0Mzg4Ng==", "bodyText": "We need to for error recovery here, if the next token is not the on keyword nor any statement-starting token.\neg: missing on keyword, but the rest is present from the fail keyword.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485543886", "createdAt": "2020-09-09T11:40:20Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -7362,7 +7378,13 @@ private STNode parseLockStatement() {\n         STNode lockKeyword = parseLockKeyword();\n         STNode blockStatement = parseBlockNode();\n         endContext();\n-        return STNodeFactory.createLockStatementNode(lockKeyword, blockStatement);\n+        STNode onFailClause;\n+        if (peek().kind == SyntaxKind.ON_KEYWORD) {\n+            onFailClause = parseOnFailClause();\n+        } else {\n+            onFailClause = STNodeFactory.createEmptyNode();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 277}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU0NDU1Mw==", "bodyText": "According to the grammar, fail keyword is not optional.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485544553", "createdAt": "2020-09-09T11:41:37Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -10690,6 +10730,25 @@ private STNode parseRetryBody() {\n         }\n     }\n \n+    private STNode parseOnFailClause() {\n+        STNode onKeyword = parseOnKeyword();\n+        STNode failKeyword;\n+        STToken nextToken = peek();\n+        if (nextToken.kind == SyntaxKind.FAIL_KEYWORD) {\n+            failKeyword = parseFailKeyword();\n+        } else {\n+            // No other cases for now\n+            failKeyword = STNodeFactory.createEmptyNode();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 357}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0OTU5NTcz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-484959573", "createdAt": "2020-09-09T12:33:50Z", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMjozMzo1MVrOHPFGoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMjozOToyMlrOHPFT2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU3NDMwNA==", "bodyText": "Shall we add the grammar rule as a doc comment?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485574304", "createdAt": "2020-09-09T12:33:51Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -10690,6 +10730,25 @@ private STNode parseRetryBody() {\n         }\n     }\n \n+    private STNode parseOnFailClause() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 348}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU3NDg1Mw==", "bodyText": "grammar rule seems to be incorrect", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485574853", "createdAt": "2020-09-09T12:34:51Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -5056,75 +5085,66 @@ private STNode parseCheckingKeyword() {\n     }\n \n     /**\n-     * Parse fail expression. This method is used to parse both fail expression\n-     * as well as fail action.\n-     *\n-     * <p>\n-     * <code>\n-     * fail-expr := fail-keyword expression\n-     * fail-action := fail-keyword action\n-     * </code>\n+     * Parse continue statement.\n+     * <code>continue-stmt := continue ; </code>\n      *\n-     * @param allowActions Allow actions\n-     * @param isRhsExpr    Is rhs expression\n-     * @return Fail expression node\n+     * @return continue statement\n      */\n-    private STNode parseFailExpression(boolean isRhsExpr, boolean allowActions, boolean isInConditionalExpr) {\n-        STNode failKeyword = parseFailKeyword();\n-        STNode expr =\n-                parseExpression(OperatorPrecedence.EXPRESSION_ACTION, isRhsExpr, allowActions, isInConditionalExpr);\n-        if (isAction(expr)) {\n-            return STNodeFactory.createFailExpressionNode(SyntaxKind.FAIL_ACTION, failKeyword, expr);\n-        } else {\n-            return STNodeFactory.createFailExpressionNode(SyntaxKind.FAIL_EXPRESSION, failKeyword, expr);\n-        }\n+    private STNode parseContinueStatement() {\n+        startContext(ParserRuleContext.CONTINUE_STATEMENT);\n+        STNode continueKeyword = parseContinueKeyword();\n+        STNode semicolon = parseSemicolon();\n+        endContext();\n+        return STNodeFactory.createContinueStatementNode(continueKeyword, semicolon);\n     }\n \n     /**\n-     * Parse fail keyword.\n-     * <p>\n-     * <code>\n-     * fail-keyword := fail\n-     * </code>\n+     * Parse continue-keyword.\n      *\n-     * @return Parsed node\n+     * @return continue-keyword node\n      */\n-    private STNode parseFailKeyword() {\n+    private STNode parseContinueKeyword() {\n         STToken token = peek();\n-        if (token.kind == SyntaxKind.FAIL_KEYWORD) {\n+        if (token.kind == SyntaxKind.CONTINUE_KEYWORD) {\n             return consume();\n         } else {\n-            recover(token, ParserRuleContext.FAIL_KEYWORD);\n-            return parseFailKeyword();\n+            recover(token, ParserRuleContext.CONTINUE_KEYWORD);\n+            return parseContinueKeyword();\n         }\n     }\n \n     /**\n-     * Parse continue statement.\n-     * <code>continue-stmt := continue ; </code>\n+     * Parse fail statement.\n+     * <code>fail-stmt := return [ action-or-expr ] ;</code>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 196}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU3NTYyMw==", "bodyText": "Need to update the doc comment with the new grammar.\nApplicable for all places.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485575623", "createdAt": "2020-09-09T12:36:02Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -4963,7 +4986,13 @@ private STNode parseWhileStatement() {\n         STNode condition = parseExpression();\n         STNode whileBody = parseBlockNode();\n         endContext();\n-        return STNodeFactory.createWhileStatementNode(whileKeyword, condition, whileBody);\n+        STNode onFailClause;\n+        if (peek().kind == SyntaxKind.ON_KEYWORD) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU3NzY4OA==", "bodyText": "Shall we add some negative tests as well?\neg: missing certain parts of the on-fail-clause, having additional tokens in between the tokens in on-fail-clause, etc.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485577688", "createdAt": "2020-09-09T12:39:22Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/syntax/statements/WhileStatementTest.java", "diffHunk": "@@ -36,6 +36,11 @@ public void testWhileWithBody() {\n         testFile(\"while-stmt/while_stmt_source_02.bal\", \"while-stmt/while_stmt_assert_02.json\");\n     }\n \n+    @Test\n+    public void testWhileWithOnFailClause() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0OTkwNTg1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-484990585", "createdAt": "2020-09-09T13:10:16Z", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzoxMDoxNlrOHPGj5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzoxMDoxNlrOHPGj5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU5ODE4Mg==", "bodyText": "is on_keyword statement start token?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485598182", "createdAt": "2020-09-09T13:10:16Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -2859,10 +2862,11 @@ protected STNode parseStatement() {\n             case RETRY_KEYWORD:\n             case ROLLBACK_KEYWORD:\n             case MATCH_KEYWORD:\n+            case ON_KEYWORD:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0OTkyMDc2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-484992076", "createdAt": "2020-09-09T13:11:49Z", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzoxMTo1MFrOHPGn_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzoxMTo1MFrOHPGn_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU5OTIyOQ==", "bodyText": "Shouldn't this be ?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Solution sol = recover(token, ParserRuleContext.FAIL_KEYWORD);\n          \n          \n            \n                        return sol.recoveredNode;\n          \n          \n            \n                        recover(token, ParserRuleContext.FAIL_KEYWORD);\n          \n          \n            \n                        return parseFailKeyword();", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485599229", "createdAt": "2020-09-09T13:11:50Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -5056,75 +5085,66 @@ private STNode parseCheckingKeyword() {\n     }\n \n     /**\n-     * Parse fail expression. This method is used to parse both fail expression\n-     * as well as fail action.\n-     *\n-     * <p>\n-     * <code>\n-     * fail-expr := fail-keyword expression\n-     * fail-action := fail-keyword action\n-     * </code>\n+     * Parse continue statement.\n+     * <code>continue-stmt := continue ; </code>\n      *\n-     * @param allowActions Allow actions\n-     * @param isRhsExpr    Is rhs expression\n-     * @return Fail expression node\n+     * @return continue statement\n      */\n-    private STNode parseFailExpression(boolean isRhsExpr, boolean allowActions, boolean isInConditionalExpr) {\n-        STNode failKeyword = parseFailKeyword();\n-        STNode expr =\n-                parseExpression(OperatorPrecedence.EXPRESSION_ACTION, isRhsExpr, allowActions, isInConditionalExpr);\n-        if (isAction(expr)) {\n-            return STNodeFactory.createFailExpressionNode(SyntaxKind.FAIL_ACTION, failKeyword, expr);\n-        } else {\n-            return STNodeFactory.createFailExpressionNode(SyntaxKind.FAIL_EXPRESSION, failKeyword, expr);\n-        }\n+    private STNode parseContinueStatement() {\n+        startContext(ParserRuleContext.CONTINUE_STATEMENT);\n+        STNode continueKeyword = parseContinueKeyword();\n+        STNode semicolon = parseSemicolon();\n+        endContext();\n+        return STNodeFactory.createContinueStatementNode(continueKeyword, semicolon);\n     }\n \n     /**\n-     * Parse fail keyword.\n-     * <p>\n-     * <code>\n-     * fail-keyword := fail\n-     * </code>\n+     * Parse continue-keyword.\n      *\n-     * @return Parsed node\n+     * @return continue-keyword node\n      */\n-    private STNode parseFailKeyword() {\n+    private STNode parseContinueKeyword() {\n         STToken token = peek();\n-        if (token.kind == SyntaxKind.FAIL_KEYWORD) {\n+        if (token.kind == SyntaxKind.CONTINUE_KEYWORD) {\n             return consume();\n         } else {\n-            recover(token, ParserRuleContext.FAIL_KEYWORD);\n-            return parseFailKeyword();\n+            recover(token, ParserRuleContext.CONTINUE_KEYWORD);\n+            return parseContinueKeyword();\n         }\n     }\n \n     /**\n-     * Parse continue statement.\n-     * <code>continue-stmt := continue ; </code>\n+     * Parse fail statement.\n+     * <code>fail-stmt := return [ action-or-expr ] ;</code>\n      *\n-     * @return continue statement\n+     * @return Fail statement\n      */\n-    private STNode parseContinueStatement() {\n-        startContext(ParserRuleContext.CONTINUE_STATEMENT);\n-        STNode continueKeyword = parseContinueKeyword();\n+    private STNode parseFailStatement() {\n+        startContext(ParserRuleContext.FAIL_STATEMENT);\n+        STNode failKeyword = parseFailKeyword();\n+        STNode expr = parseExpression();\n         STNode semicolon = parseSemicolon();\n         endContext();\n-        return STNodeFactory.createContinueStatementNode(continueKeyword, semicolon);\n+        return STNodeFactory.createFailStatementNode(failKeyword, expr, semicolon);\n     }\n \n     /**\n-     * Parse continue-keyword.\n+     * Parse fail keyword.\n+     * <p>\n+     * <code>\n+     * fail-keyword := fail\n+     * </code>\n      *\n-     * @return continue-keyword node\n+     * @return Parsed node\n      */\n-    private STNode parseContinueKeyword() {\n+    private STNode parseFailKeyword() {\n+\n         STToken token = peek();\n-        if (token.kind == SyntaxKind.CONTINUE_KEYWORD) {\n+        if (token.kind == SyntaxKind.FAIL_KEYWORD) {\n             return consume();\n         } else {\n-            recover(token, ParserRuleContext.CONTINUE_KEYWORD);\n-            return parseContinueKeyword();\n+            Solution sol = recover(token, ParserRuleContext.FAIL_KEYWORD);\n+            return sol.recoveredNode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 236}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0OTk3NDc0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-484997474", "createdAt": "2020-09-09T13:17:41Z", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzoxNzo0MVrOHPG3aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzoxNzo0MVrOHPG3aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYwMzE3Ng==", "bodyText": "shouldn't we use parseTypedBindingPattern() instead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485603176", "createdAt": "2020-09-09T13:17:41Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -10690,6 +10730,25 @@ private STNode parseRetryBody() {\n         }\n     }\n \n+    private STNode parseOnFailClause() {\n+        STNode onKeyword = parseOnKeyword();\n+        STNode failKeyword;\n+        STToken nextToken = peek();\n+        if (nextToken.kind == SyntaxKind.FAIL_KEYWORD) {\n+            failKeyword = parseFailKeyword();\n+        } else {\n+            // No other cases for now\n+            failKeyword = STNodeFactory.createEmptyNode();\n+        }\n+        STNode typeDescriptorNode = parseTypeDescriptor(ParserRuleContext.TYPE_DESC_IN_TYPE_BINDING_PATTERN,\n+                true, false);\n+        STNode identifierNode = parseIdentifier(ParserRuleContext.VARIABLE_REF);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 360}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0OTk5NTAz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-484999503", "createdAt": "2020-09-09T13:19:55Z", "commit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzoxOTo1NVrOHPG9Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzoxOTo1NVrOHPG9Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYwNDY5OA==", "bodyText": "shouldn't we use typedBindingPatternNode here?\n               {\n                    \"name\": \"typedBindingPattern\",\n                    \"type\": \"TypedBindingPatternNode\"\n                },", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r485604698", "createdAt": "2020-09-09T13:19:55Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "diffHunk": "@@ -4058,6 +4093,53 @@\n                     \"isOptional\": true\n                 }\n             ]\n+        },\n+        {\n+            \"name\": \"OnFailClauseNode\",\n+            \"base\": \"ClauseNode\",\n+            \"kind\": \"ON_FAIL_CLAUSE\",\n+            \"attributes\": [\n+                {\n+                    \"name\": \"onKeyword\",\n+                    \"type\": \"Token\"\n+                },\n+                {\n+                    \"name\": \"failKeyword\",\n+                    \"type\": \"Token\"\n+                },\n+                {\n+                    \"name\": \"typeDescriptor\",\n+                    \"type\": \"TypeDescriptorNode\"\n+                },\n+                {\n+                    \"name\": \"failErrorName\",\n+                    \"type\": \"IdentifierToken\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708f74f9506b94a67300286190f353bbcd9f5912"}, "originalPosition": 143}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cd62b5aa3dd887f5272949bd3cbb00faad8030c", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3cd62b5aa3dd887f5272949bd3cbb00faad8030c", "committedDate": "2020-09-09T17:24:30Z", "message": "Add comments to do node class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3189bc6c6a9ee435ca57fa863f10d8e4f357ab6b", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3189bc6c6a9ee435ca57fa863f10d8e4f357ab6b", "committedDate": "2020-09-09T17:38:16Z", "message": "Improve comments with the grammar its parsing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NTQ5NzY1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#pullrequestreview-485549765", "createdAt": "2020-09-10T04:04:09Z", "commit": {"oid": "3189bc6c6a9ee435ca57fa863f10d8e4f357ab6b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNDowNDowOVrOHPiHPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNDowNDowOVrOHPiHPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA0OTU5OA==", "bodyText": "Don't we need to start a context for DO_BLOCK also?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25661#discussion_r486049598", "createdAt": "2020-09-10T04:04:09Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -3001,6 +3006,7 @@ private void startContextIfRequired(ParserRuleContext currentCtx) {\n             case CONTINUE_STATEMENT:\n             case BREAK_STATEMENT:\n             case RETURN_STMT:\n+            case FAIL_STATEMENT:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3189bc6c6a9ee435ca57fa863f10d8e4f357ab6b"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bd955d4077d1e15df8b820ccf0882b1acc7a9da", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2bd955d4077d1e15df8b820ccf0882b1acc7a9da", "committedDate": "2020-09-10T07:39:57Z", "message": "Add do block case for startContextIfRequired()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f92cd5d1f737e807025342bf32e18be5da01349", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2f92cd5d1f737e807025342bf32e18be5da01349", "committedDate": "2020-09-10T07:51:34Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into on-fail-impl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "533a2a7aac031aad8c2ce7f9d678d4db32752665", "author": {"user": {"login": "pcnfernando", "name": "Chiran Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/533a2a7aac031aad8c2ce7f9d678d4db32752665", "committedDate": "2020-09-10T10:13:18Z", "message": "Sync with upstream master"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4837, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}