{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MDI3NzU5", "number": 22219, "title": "Add missing docs in RabbitMQ and NATS modules", "bodyText": "Purpose\n\n$title\n\nFixes #21652\nFixes #21676\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-03-26T08:34:31Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219", "merged": true, "mergeCommit": {"oid": "8f8e1f9423fb0a5a04c49bbbea9e792a7a989d23"}, "closed": true, "closedAt": "2020-03-27T04:25:40Z", "author": {"login": "aashikam"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRX1_ZgH2gAyMzk0MDI3NzU5OmYzM2Y1N2Y2OTYwMjU1MWUzYzcyMDQ4YjljOWJkZjY2NDE5MTUwYjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRof_CAFqTM4MjU2NTI4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4", "author": {"user": {"login": "aashikam", "name": "Arshika Mohottige"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f33f57f69602551e3c72048b9c9bdf66419150b4", "committedDate": "2020-03-26T08:29:35Z", "message": "Add missing docs in RabbitMQ and NATS modules"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxODIwMjI5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#pullrequestreview-381820229", "createdAt": "2020-03-26T09:15:26Z", "commit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "state": "COMMENTED", "comments": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOToxNToyNlrOF79jFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOToxODoxOFrOF79qTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxODcxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Default URL for NATS conections\n          \n          \n            \n            # Default URL for NATS connections.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398418711", "createdAt": "2020-03-26T09:15:26Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/commons.bal", "diffHunk": "@@ -14,8 +14,10 @@\n // specific language governing permissions and limitations\n // under the License.\n \n+# Default URL for NATS conections", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxODk0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Data types supported in publishing and consuming messages\n          \n          \n            \n            # Data types supported when publishing and consuming messages.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398418940", "createdAt": "2020-03-26T09:15:49Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/commons.bal", "diffHunk": "@@ -14,8 +14,10 @@\n // specific language governing permissions and limitations\n // under the License.\n \n+# Default URL for NATS conections\n public const string DEFAULT_URL = \"nats://localhost:4222\";\n \n+# Data types supported in publishing and consuming messages", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxOTA1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents the reason for the NATS module related errors\n          \n          \n            \n            # Represents the reason for the NATS module related errors.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398419058", "createdAt": "2020-03-26T09:16:00Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/error.bal", "diffHunk": "@@ -23,8 +23,10 @@ public type Detail record {\n     error cause?;\n };\n \n+# Represents the reason for the NATS module related errors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxOTE1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents NATS module related errors\n          \n          \n            \n            # Represents NATS module related errors.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398419152", "createdAt": "2020-03-26T09:16:09Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/error.bal", "diffHunk": "@@ -23,8 +23,10 @@ public type Detail record {\n     error cause?;\n };\n \n+# Represents the reason for the NATS module related errors\n public const NATS_ERROR = \"{ballerina/nats}Error\";\n \n+# Represents NATS module related errors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxOTI5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Specifies that message delivery should start with the messages, which are published after the subscription is created\n          \n          \n            \n            # Specifies that message delivery should start with the messages, which are published after the subscription is created.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398419298", "createdAt": "2020-03-26T09:16:25Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxOTQyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Specifies that message delivery should start with the last (most recent) message stored for this subject\n          \n          \n            \n            # Specifies that message delivery should start with the last (most recent) message stored for this subject.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398419428", "createdAt": "2020-03-26T09:16:37Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created\n public const NEW_ONLY = \"NEW_ONLY\";\n+\n+# Specifies that message delivery should start with the last (most recent) message stored for this subject", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxOTUxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Specifies that message delivery should begin at the oldest available message for this subject\n          \n          \n            \n            # Specifies that message delivery should begin at the oldest available message for this subject.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398419519", "createdAt": "2020-03-26T09:16:45Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created\n public const NEW_ONLY = \"NEW_ONLY\";\n+\n+# Specifies that message delivery should start with the last (most recent) message stored for this subject\n public const LAST_RECEIVED = \"LAST_RECEIVED\";\n+\n+# Specifies that message delivery should begin at the oldest available message for this subject", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxOTcwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The constant string value for the type `TimeDeltaStart`\n          \n          \n            \n            # The constant string value for the `TimeDeltaStart` type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398419701", "createdAt": "2020-03-26T09:17:04Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created\n public const NEW_ONLY = \"NEW_ONLY\";\n+\n+# Specifies that message delivery should start with the last (most recent) message stored for this subject\n public const LAST_RECEIVED = \"LAST_RECEIVED\";\n+\n+# Specifies that message delivery should begin at the oldest available message for this subject\n public const FIRST = \"FIRST\";\n+\n+# The constant string value for the type `TimeDeltaStart`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxOTkwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The constant string value for the type `SequenceNumber`\n          \n          \n            \n            # The constant string value for the `SequenceNumber` type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398419902", "createdAt": "2020-03-26T09:17:21Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created\n public const NEW_ONLY = \"NEW_ONLY\";\n+\n+# Specifies that message delivery should start with the last (most recent) message stored for this subject\n public const LAST_RECEIVED = \"LAST_RECEIVED\";\n+\n+# Specifies that message delivery should begin at the oldest available message for this subject\n public const FIRST = \"FIRST\";\n+\n+# The constant string value for the type `TimeDeltaStart`\n public const TIME_DELTA_START = \"TIME_DELTA_START\";\n+\n+# The constant string value for the type `SequenceNumber`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQyMDAwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Specifies that message delivery should start with a given historical time delta (from now)\n          \n          \n            \n            # Specifies that message delivery should start with a given historical time delta (from now).", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398420007", "createdAt": "2020-03-26T09:17:28Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created\n public const NEW_ONLY = \"NEW_ONLY\";\n+\n+# Specifies that message delivery should start with the last (most recent) message stored for this subject\n public const LAST_RECEIVED = \"LAST_RECEIVED\";\n+\n+# Specifies that message delivery should begin at the oldest available message for this subject\n public const FIRST = \"FIRST\";\n+\n+# The constant string value for the type `TimeDeltaStart`\n public const TIME_DELTA_START = \"TIME_DELTA_START\";\n+\n+# The constant string value for the type `SequenceNumber`\n public const SEQUENCE_NUMBER = \"SEQUENCE_NUMBER\";\n \n+# Specifies that message delivery should start with a given historical time delta (from now)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQyMDA3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Specifies that message delivery should start at the given sequence number\n          \n          \n            \n            # Specifies that message delivery should start at the given sequence number.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398420075", "createdAt": "2020-03-26T09:17:36Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created\n public const NEW_ONLY = \"NEW_ONLY\";\n+\n+# Specifies that message delivery should start with the last (most recent) message stored for this subject\n public const LAST_RECEIVED = \"LAST_RECEIVED\";\n+\n+# Specifies that message delivery should begin at the oldest available message for this subject\n public const FIRST = \"FIRST\";\n+\n+# The constant string value for the type `TimeDeltaStart`\n public const TIME_DELTA_START = \"TIME_DELTA_START\";\n+\n+# The constant string value for the type `SequenceNumber`\n public const SEQUENCE_NUMBER = \"SEQUENCE_NUMBER\";\n \n+# Specifies that message delivery should start with a given historical time delta (from now)\n public type TimeDeltaStart [TIME_DELTA_START, int];\n \n+# Specifies that message delivery should start at the given sequence number", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQyMDE2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The position to start receiving messages\n          \n          \n            \n            # The position to start receiving messages.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398420166", "createdAt": "2020-03-26T09:17:44Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/nats/src/main/ballerina/src/nats/streaming/annotation.bal", "diffHunk": "@@ -38,22 +38,26 @@ public type StreamingSubscriptionConfigData record {|\n # Streaming subscription configuration annotation.\n public annotation StreamingSubscriptionConfigData StreamingSubscriptionConfig on service;\n \n+# Specifies that message delivery should start with the messages, which are published after the subscription is created\n public const NEW_ONLY = \"NEW_ONLY\";\n+\n+# Specifies that message delivery should start with the last (most recent) message stored for this subject\n public const LAST_RECEIVED = \"LAST_RECEIVED\";\n+\n+# Specifies that message delivery should begin at the oldest available message for this subject\n public const FIRST = \"FIRST\";\n+\n+# The constant string value for the type `TimeDeltaStart`\n public const TIME_DELTA_START = \"TIME_DELTA_START\";\n+\n+# The constant string value for the type `SequenceNumber`\n public const SEQUENCE_NUMBER = \"SEQUENCE_NUMBER\";\n \n+# Specifies that message delivery should start with a given historical time delta (from now)\n public type TimeDeltaStart [TIME_DELTA_START, int];\n \n+# Specifies that message delivery should start at the given sequence number\n public type SequenceNumber [SEQUENCE_NUMBER, int];\n \n-# The position to start receiving messages.\n-# NEW_ONLY - Specifies that message delivery should start with the messages, which are published after the subscription\n-# is created.\n-# LAST_RECEIVED - Specifies that message delivery should start with the last (most recent) message stored for\n-# this subject.\n-# TimeDeltaStart - Specifies that message delivery should start with a given historical time delta (from now).\n-# SequenceNumber - Specifies that message delivery should start at the given sequence number.\n-# FIRST - Specifies that message delivery should begin at the oldest available message for this subject.\n+# The position to start receiving messages", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQyMDMyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - Nil or error upon failure to close ChannelListener\n          \n          \n            \n                # + return - Nil or error upon failure to close the `ChannelListener`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398420329", "createdAt": "2020-03-26T09:18:01Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/rabbitmq/src/main/ballerina/src/rabbitmq/listener.bal", "diffHunk": "@@ -67,6 +67,9 @@ public type Listener object {\n         return detach(self, s);\n     }\n \n+    # Stops consuming messages through all consumer services by terminating the connection and all its channels.\n+    #\n+    # + return - Nil or error upon failure to close ChannelListener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQyMDQyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents the reason for the RabbitMQ module related errors\n          \n          \n            \n            # Represents the reason for the RabbitMQ module related errors.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398420425", "createdAt": "2020-03-26T09:18:07Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/rabbitmq/src/main/ballerina/src/rabbitmq/rabbitmq_errors.bal", "diffHunk": "@@ -23,5 +23,8 @@ public type Detail record {\n     error cause?;\n };\n \n+# Represents the reason for the RabbitMQ module related errors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQyMDU1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents RabbitMQ module related errors\n          \n          \n            \n            # Represents the RabbitMQ module related errors.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#discussion_r398420556", "createdAt": "2020-03-26T09:18:18Z", "author": {"login": "praneesha"}, "path": "stdlib/messaging/rabbitmq/src/main/ballerina/src/rabbitmq/rabbitmq_errors.bal", "diffHunk": "@@ -23,5 +23,8 @@ public type Detail record {\n     error cause?;\n };\n \n+# Represents the reason for the RabbitMQ module related errors\n public const RABBITMQ_ERROR = \"{ballerina/rabbitmq}Error\";\n+\n+# Represents RabbitMQ module related errors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33f57f69602551e3c72048b9c9bdf66419150b4"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71c8f8481159efbe709345aebd4c7d426c94800c", "author": {"user": {"login": "aashikam", "name": "Arshika Mohottige"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/71c8f8481159efbe709345aebd4c7d426c94800c", "committedDate": "2020-03-26T11:35:14Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTY1Mjg2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22219#pullrequestreview-382565286", "createdAt": "2020-03-27T03:53:56Z", "commit": {"oid": "71c8f8481159efbe709345aebd4c7d426c94800c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4204, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}