{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNjg2NzU0", "number": 23843, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDowMTozNFrOED5UWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDowMTozNFrOED5UWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTIwMjgzOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDowMTozNFrOGhLm9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTozMzo1NlrOGhQb4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ0NjM4OA==", "bodyText": "lets get rid of the type cast and replace with a check on kind", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23843#discussion_r437446388", "createdAt": "2020-06-09T14:01:34Z", "author": {"login": "manuranga"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -1240,6 +1242,25 @@ public BLangNode transform(AnnotationDeclarationNode annotationDeclarationNode)\n         return annotationDecl;\n     }\n \n+    @Override\n+    public BLangNode transform(AnnotAccessExpressionNode annotAccessExpressionNode) {\n+        BLangAnnotAccessExpr annotAccessExpr = (BLangAnnotAccessExpr) TreeBuilder.createAnnotAccessExpressionNode();\n+\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4146d067d4d2d621c402007006d21826026b7f74"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUyNTQ3NA==", "bodyText": "Done", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23843#discussion_r437525474", "createdAt": "2020-06-09T15:33:56Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -1240,6 +1242,25 @@ public BLangNode transform(AnnotationDeclarationNode annotationDeclarationNode)\n         return annotationDecl;\n     }\n \n+    @Override\n+    public BLangNode transform(AnnotAccessExpressionNode annotAccessExpressionNode) {\n+        BLangAnnotAccessExpr annotAccessExpr = (BLangAnnotAccessExpr) TreeBuilder.createAnnotAccessExpressionNode();\n+\n+        try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ0NjM4OA=="}, "originalCommit": {"oid": "4146d067d4d2d621c402007006d21826026b7f74"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3497, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}