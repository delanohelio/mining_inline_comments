{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MjY5Mjg5", "number": 24934, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMjoxNToyMFrOESAi1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMjoxNToyMFrOESAi1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzE4NzQxOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMjoxNToyMFrOG3BqHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNTozMjo0MFrOG3UKdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MjAyOQ==", "bodyText": "Why do we need this check?\nCan the same error be logged in two places? If so, Would removing the error from the other place solve the problem?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24934#discussion_r460352029", "createdAt": "2020-07-25T02:15:20Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -4101,9 +4098,34 @@ private STNode parseExpression(OperatorPrecedence precedenceLevel, boolean isRhs\n     private STNode parseExpression(SyntaxKind kind, OperatorPrecedence precedenceLevel, boolean isRhsExpr,\n                                    boolean allowActions, boolean isInMatchGuard, boolean isInConditionalExpr) {\n         STNode expr = parseTerminalExpression(kind, isRhsExpr, allowActions, isInConditionalExpr);\n-        return parseExpressionRhs(precedenceLevel, expr, isRhsExpr, allowActions, isInMatchGuard, isInConditionalExpr);\n+        STNode actionOrExpression =\n+                parseExpressionRhs(precedenceLevel, expr, isRhsExpr, allowActions, isInMatchGuard, isInConditionalExpr);\n+        //braced actions are just paranthesis enclosing actions, no need to add a diagnostic there when we have added\n+        //diagnostics to its children\n+        if (!allowActions && isAction(actionOrExpression) && actionOrExpression.kind != SyntaxKind.BRACED_ACTION) {\n+            actionOrExpression = attachErrorExpectedActionFoundDiagnostic(actionOrExpression);\n+        }\n+        return actionOrExpression;\n     }\n \n+    private boolean containsDiagnostics(STNode node, DiagnosticErrorCode diagnosticErrorCode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7619b05ccd95734b10b70be103410f62ec49c1d8"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1NTIyMA==", "bodyText": "I ll try to get it working like that", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24934#discussion_r460655220", "createdAt": "2020-07-27T05:32:40Z", "author": {"login": "m36dot"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -4101,9 +4098,34 @@ private STNode parseExpression(OperatorPrecedence precedenceLevel, boolean isRhs\n     private STNode parseExpression(SyntaxKind kind, OperatorPrecedence precedenceLevel, boolean isRhsExpr,\n                                    boolean allowActions, boolean isInMatchGuard, boolean isInConditionalExpr) {\n         STNode expr = parseTerminalExpression(kind, isRhsExpr, allowActions, isInConditionalExpr);\n-        return parseExpressionRhs(precedenceLevel, expr, isRhsExpr, allowActions, isInMatchGuard, isInConditionalExpr);\n+        STNode actionOrExpression =\n+                parseExpressionRhs(precedenceLevel, expr, isRhsExpr, allowActions, isInMatchGuard, isInConditionalExpr);\n+        //braced actions are just paranthesis enclosing actions, no need to add a diagnostic there when we have added\n+        //diagnostics to its children\n+        if (!allowActions && isAction(actionOrExpression) && actionOrExpression.kind != SyntaxKind.BRACED_ACTION) {\n+            actionOrExpression = attachErrorExpectedActionFoundDiagnostic(actionOrExpression);\n+        }\n+        return actionOrExpression;\n     }\n \n+    private boolean containsDiagnostics(STNode node, DiagnosticErrorCode diagnosticErrorCode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM1MjAyOQ=="}, "originalCommit": {"oid": "7619b05ccd95734b10b70be103410f62ec49c1d8"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 443, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}