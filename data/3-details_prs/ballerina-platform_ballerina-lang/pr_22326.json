{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MDQ0MjAy", "number": 22326, "title": "Add return statement support", "bodyText": "Purpose\n\nAdding return statement support to incremental parser\n\nFixes #22215\nApproach\n\nN/A\n\nSamples\n\nN/A\n\nRemarks\n\nN/A\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-03-31T03:33:30Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22326", "merged": true, "mergeCommit": {"oid": "e9a4a1b86c3d718ef35acda3c444a39c82177161"}, "closed": true, "closedAt": "2020-04-01T17:12:33Z", "author": {"login": "lochana-chathura"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSsz7uAH2gAyMzk2MDQ0MjAyOjAzMGFjMmIwNGE0Y2U3NWIzY2U3ZWFmOTE5NGQxMDJhYzViNjdlNDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTa6pbAFqTM4NTc4NjU5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "030ac2b04a4ce75b3ce7eaf9194d102ac5b67e44", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/030ac2b04a4ce75b3ce7eaf9194d102ac5b67e44", "committedDate": "2020-03-30T11:29:16Z", "message": "Add return statement support to incremental parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc3fc4227ef684bab75dc41390e3a225f48e8d43", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fc3fc4227ef684bab75dc41390e3a225f48e8d43", "committedDate": "2020-03-30T18:51:45Z", "message": "Add public note for the return statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6af6d100954c3aa749438e5913a82b10e7e2bd6b", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6af6d100954c3aa749438e5913a82b10e7e2bd6b", "committedDate": "2020-03-30T19:03:10Z", "message": "Refactor Code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b062e13fea8d9ad67ea5f88b2d3995bc28f7ba3", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2b062e13fea8d9ad67ea5f88b2d3995bc28f7ba3", "committedDate": "2020-04-01T05:46:19Z", "message": "Add error recovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54e5f75abfa236aab9be8579fd520fa6665685f6", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/54e5f75abfa236aab9be8579fd520fa6665685f6", "committedDate": "2020-04-01T05:46:50Z", "message": "Add test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33b5eec29d237eb58f007e750d8087ce650a0aab", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/33b5eec29d237eb58f007e750d8087ce650a0aab", "committedDate": "2020-04-01T06:14:05Z", "message": "Fix issue in error recovery"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzExMTI4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22326#pullrequestreview-385311128", "createdAt": "2020-04-01T07:00:28Z", "commit": {"oid": "33b5eec29d237eb58f007e750d8087ce650a0aab"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzowMDoyOVrOF-zO1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzowODowNlrOF-zbKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM5NTQxNA==", "bodyText": "Importing everything from a package is discouraged. We should import only the required classes.\nShall we revert this change?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22326#discussion_r401395414", "createdAt": "2020-04-01T07:00:29Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -19,12 +19,7 @@\n \n import io.ballerinalang.compiler.internal.parser.BallerinaParserErrorHandler.Action;\n import io.ballerinalang.compiler.internal.parser.BallerinaParserErrorHandler.Solution;\n-import io.ballerinalang.compiler.internal.parser.tree.STCheckExpression;\n-import io.ballerinalang.compiler.internal.parser.tree.STMissingToken;\n-import io.ballerinalang.compiler.internal.parser.tree.STNode;\n-import io.ballerinalang.compiler.internal.parser.tree.STNodeFactory;\n-import io.ballerinalang.compiler.internal.parser.tree.STToken;\n-import io.ballerinalang.compiler.internal.parser.tree.SyntaxKind;\n+import io.ballerinalang.compiler.internal.parser.tree.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33b5eec29d237eb58f007e750d8087ce650a0aab"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM5NjIzOA==", "bodyText": "Shouldn't this be parseReturnKeyword()?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22326#discussion_r401396238", "createdAt": "2020-04-01T07:02:30Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -160,6 +155,8 @@ public STNode resumeParsing(ParserRuleContext context, STNode... parsedNodes) {\n                 return parseWhileKeyword();\n             case BOOLEAN_LITERAL:\n                 return parseBooleanLiteral();\n+            case RETURN_KEYWORD:\n+                return parseReturnStatement();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33b5eec29d237eb58f007e750d8087ce650a0aab"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM5NzQ3Mw==", "bodyText": "Since semicolon = parseSemicolon(); is common to both cases, we can take it out from the switch-case", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22326#discussion_r401397473", "createdAt": "2020-04-01T07:05:26Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -2954,4 +2953,72 @@ private STNode parseCheckingKeyword() {\n             return sol.recoveredNode;\n         }\n     }\n+\n+    /**\n+     * Parse return statement.\n+     * <code>return-stmt := return [ action-or-expr ] ;</code>\n+     *\n+     * @return Return statement\n+     */\n+    private STNode parseReturnStatement() {\n+        startContext(ParserRuleContext.RETURN_STMT);\n+        STNode returnKeyword = parseReturnKeyword();\n+        STNode returnRhs = parseReturnStatementRhs(returnKeyword);\n+        endContext();\n+        return returnRhs;\n+    }\n+\n+    /**\n+     * Parse return-keyword.\n+     *\n+     * @return Return-keyword node\n+     */\n+    private STNode parseReturnKeyword() {\n+        STToken token = peek();\n+        if (token.kind == SyntaxKind.RETURN_KEYWORD) {\n+            return consume();\n+        } else {\n+            Solution sol = recover(token, ParserRuleContext.RETURN_KEYWORD);\n+            return sol.recoveredNode;\n+        }\n+    }\n+\n+    /**\n+     * <p>\n+     * Parse the right hand side of a return statement.\n+     * </p>\n+     * <code>\n+     * return-stmt-rhs := ; |  action-or-expr ;\n+     * </code>\n+     *\n+     * @return Parsed node\n+     */\n+    private STNode parseReturnStatementRhs(STNode returnKeyword) {\n+        STToken token = peek();\n+        return parseReturnStatementRhs(token.kind, returnKeyword);\n+    }\n+\n+    /**\n+     * Parse the right hand side of a return statement, given the\n+     * next token kind.\n+     *\n+     * @param tokenKind Next token kind\n+     * @return Parsed node\n+     */\n+    private STNode parseReturnStatementRhs(SyntaxKind tokenKind,STNode returnKeyword) {\n+        STNode expr;\n+        STNode semicolon;\n+\n+        switch (tokenKind) {\n+            case SEMICOLON_TOKEN:\n+                expr = STNodeFactory.createEmptyNode();\n+                semicolon = parseSemicolon();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33b5eec29d237eb58f007e750d8087ce650a0aab"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM5NzgwNA==", "bodyText": "Indentation are not consistent", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22326#discussion_r401397804", "createdAt": "2020-04-01T07:06:15Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STNodeFactory.java", "diffHunk": "@@ -111,6 +111,13 @@ public static STNode createVariableDeclaration(SyntaxKind kind,\n         return new STVariableDeclaration(kind, typeName, variableName, equalsToken, initializer, semicolonToken);\n     }\n \n+    public static STNode createReturnStatement(SyntaxKind kind,\n+                                                   STNode returnKeyword,\n+                                                   STNode actionOrExpr,\n+                                                   STNode semicolonToken) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33b5eec29d237eb58f007e750d8087ce650a0aab"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM5ODU2OA==", "bodyText": "Since actionOrExpr is a Node and not a Token, we cannot use createToken(1) method.\nHave a look at the expression() method in the AssignmentStatement", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22326#discussion_r401398568", "createdAt": "2020-04-01T07:08:06Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/ReturnStatement.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package io.ballerinalang.compiler.syntax.tree;\n+\n+import io.ballerinalang.compiler.internal.parser.tree.STNode;\n+\n+public class ReturnStatement extends Statement{\n+    private Token returnToken;\n+    private Node actionOrExpr;\n+    private Token semicolonToken;\n+\n+    public ReturnStatement(STNode node, int position, NonTerminalNode parent) {\n+        super(node, position, parent);\n+    }\n+\n+    public Token returnToken() {\n+        if (returnToken != null) {\n+            return returnToken;\n+        }\n+\n+        returnToken = createToken(0);\n+        return returnToken;\n+    }\n+\n+    public Node actionOrExpr() {\n+        if (actionOrExpr != null) {\n+            return actionOrExpr;\n+        }\n+\n+        actionOrExpr = createToken(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33b5eec29d237eb58f007e750d8087ce650a0aab"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81bcf0815055bda33e3f90bf3a34081288bf5171", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/81bcf0815055bda33e3f90bf3a34081288bf5171", "committedDate": "2020-04-01T07:32:14Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into incremental-parser\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/ParserRuleContext.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/SyntaxKind.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxNodeTransformer.java\n\u0001\tcompiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/ParserTestUtils.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e63639868061de94cb72a8bd04e1166aa642c182", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e63639868061de94cb72a8bd04e1166aa642c182", "committedDate": "2020-04-01T08:28:14Z", "message": "Fix issue in ReturnStatement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edce9ddeb2bd66d82d13df157c97922412c15968", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/edce9ddeb2bd66d82d13df157c97922412c15968", "committedDate": "2020-04-01T08:29:30Z", "message": "Refactor STNodeFactory and BallerinaParser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2407f092ebca711fe0af747ba37ee306b63960e0", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2407f092ebca711fe0af747ba37ee306b63960e0", "committedDate": "2020-04-01T12:07:08Z", "message": "Fix issue in checkstyle"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "515c58c59a065b205e3f89106a5b13f37686adb3", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/515c58c59a065b205e3f89106a5b13f37686adb3", "committedDate": "2020-04-01T11:29:41Z", "message": "Fix issue in checkstyle"}, "afterCommit": {"oid": "2407f092ebca711fe0af747ba37ee306b63960e0", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2407f092ebca711fe0af747ba37ee306b63960e0", "committedDate": "2020-04-01T12:07:08Z", "message": "Fix issue in checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c845d07d58a1566386dcb3b288ce4354fcd1b539", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c845d07d58a1566386dcb3b288ce4354fcd1b539", "committedDate": "2020-04-01T12:36:05Z", "message": "Fix NUMERIC_LITERAL_TOKEN s in test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44709a932a846b3994036494dc1f347cce1d150f", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/44709a932a846b3994036494dc1f347cce1d150f", "committedDate": "2020-04-01T12:29:28Z", "message": "Fix NUMERIC_LITERAL_TOKEN s test cases"}, "afterCommit": {"oid": "c845d07d58a1566386dcb3b288ce4354fcd1b539", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c845d07d58a1566386dcb3b288ce4354fcd1b539", "committedDate": "2020-04-01T12:36:05Z", "message": "Fix NUMERIC_LITERAL_TOKEN s in test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1Nzg2NTk1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22326#pullrequestreview-385786595", "createdAt": "2020-04-01T17:12:14Z", "commit": {"oid": "c845d07d58a1566386dcb3b288ce4354fcd1b539"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4107, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}