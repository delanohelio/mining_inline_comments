{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4NTYwODEw", "number": 22463, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNTowMTowOFrODu9-Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNTowMTowOFrODu9-Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTc2NDg2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/interop/JMethodResolver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNTowMTowOFrOGBH3Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzoxNzowMVrOGBKlnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgzMDU5MQ==", "bodyText": "here we can reduce the number of iterations by half by changing i=1..N x k=1..N to i=1..N x k=i..N", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22463#discussion_r403830591", "createdAt": "2020-04-06T05:01:08Z", "author": {"login": "manuranga"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/interop/JMethodResolver.java", "diffHunk": "@@ -144,6 +150,23 @@ private JMethod resolve(JMethodRequest jMethodRequest, List<JMethod> jMethods) {\n         return jMethod;\n     }\n \n+    private Optional<JMethod> findCovariantReturnTypeMethod(List<JMethod> jMethods) {\n+\n+        for (JMethod ithMethod : jMethods) {\n+            for (JMethod kthMethod : jMethods) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24089c1f7105621b691a884f0bf8931cd2dbedb0"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg3NTIyOQ==", "bodyText": "Yep, updated the logic.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22463#discussion_r403875229", "createdAt": "2020-04-06T07:17:01Z", "author": {"login": "Kishanthan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/interop/JMethodResolver.java", "diffHunk": "@@ -144,6 +150,23 @@ private JMethod resolve(JMethodRequest jMethodRequest, List<JMethod> jMethods) {\n         return jMethod;\n     }\n \n+    private Optional<JMethod> findCovariantReturnTypeMethod(List<JMethod> jMethods) {\n+\n+        for (JMethod ithMethod : jMethods) {\n+            for (JMethod kthMethod : jMethods) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgzMDU5MQ=="}, "originalCommit": {"oid": "24089c1f7105621b691a884f0bf8931cd2dbedb0"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4530, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}