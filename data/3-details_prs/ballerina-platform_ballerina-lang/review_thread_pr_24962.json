{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MjYyODU1", "number": 24962, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjoyNjoxNFrOESq2Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNjo0ODozNFrOETi3tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDExODM4OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ResolveMavenDependenciesTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjoyNjoxNFrOG3-WSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjoyNjoxNFrOG3-WSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM0NjM3Ng==", "bodyText": "If this step is done only if the id and url are not null, then the initialization of username and password variables can be done within the if condition.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461346376", "createdAt": "2020-07-28T06:26:14Z", "author": {"login": "azinneera"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ResolveMavenDependenciesTask.java", "diffHunk": "@@ -51,6 +52,22 @@ public void execute(BuildContext buildContext) {\n                 + \"platform-libs\";\n         MavenResolver resolver = new MavenResolver(targetRepo);\n \n+        if (manifest.getPlatform().getRepositories() != null && manifest.getPlatform().getRepositories().size() > 0) {\n+            for (Repository repository : manifest.getPlatform().getRepositories()) {\n+                String id = repository.getId();\n+                String url = repository.getUrl();\n+                String username = repository.getUser();\n+                String password = repository.getToken();\n+                if (id != null && url != null) {\n+                    if (username != null && password != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4dce86a596a1830db9e6fe1c94bd4b1ac103235"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDE3NTYwOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ResolveMavenDependenciesTask.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjo0NzowNVrOG3-4Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNToxNjo0NFrOG49bew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1NTAzNA==", "bodyText": "Let's append the exception value (e) also to the error here.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461355034", "createdAt": "2020-07-28T06:47:05Z", "author": {"login": "azinneera"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ResolveMavenDependenciesTask.java", "diffHunk": "@@ -60,16 +77,15 @@ public void execute(BuildContext buildContext) {\n         if (mavenDependencies.size() > 0) {\n             buildContext.out().println(\"Resolving Maven dependencies\\n\\tDownloading dependencies into \" + targetRepo);\n             for (Library library : mavenDependencies) {\n-                if (library.getPath() == null) {\n-                    try {\n-                        Dependency dependency = resolver.resolve(library.getGroupId(), library.getArtifactId(),\n-                                library.getVersion(), false);\n-                        library.setPath(Utils.getJarPath(targetRepo, dependency));\n-                    } catch (MavenResolverException e) {\n-                        buildContext.err().print(\"cannot resolve \" + library.getArtifactId());\n-                    }\n+                try {\n+                    Dependency dependency = resolver.resolve(library.getGroupId(), library.getArtifactId(),\n+                            library.getVersion(), false);\n+                    library.setPath(Utils.getJarPath(targetRepo, dependency));\n+                } catch (MavenResolverException e) {\n+                    buildContext.err().print(\"cannot resolve \" + library.getArtifactId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1113d229a209910a7f2869f61a92e7e8bd33ac2"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1NjczNg==", "bodyText": "Also shouldn't we be throwing a LauncherException if there is an exception? Are we continuing even if the dependency resolution fails?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461356736", "createdAt": "2020-07-28T06:50:51Z", "author": {"login": "azinneera"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ResolveMavenDependenciesTask.java", "diffHunk": "@@ -60,16 +77,15 @@ public void execute(BuildContext buildContext) {\n         if (mavenDependencies.size() > 0) {\n             buildContext.out().println(\"Resolving Maven dependencies\\n\\tDownloading dependencies into \" + targetRepo);\n             for (Library library : mavenDependencies) {\n-                if (library.getPath() == null) {\n-                    try {\n-                        Dependency dependency = resolver.resolve(library.getGroupId(), library.getArtifactId(),\n-                                library.getVersion(), false);\n-                        library.setPath(Utils.getJarPath(targetRepo, dependency));\n-                    } catch (MavenResolverException e) {\n-                        buildContext.err().print(\"cannot resolve \" + library.getArtifactId());\n-                    }\n+                try {\n+                    Dependency dependency = resolver.resolve(library.getGroupId(), library.getArtifactId(),\n+                            library.getVersion(), false);\n+                    library.setPath(Utils.getJarPath(targetRepo, dependency));\n+                } catch (MavenResolverException e) {\n+                    buildContext.err().print(\"cannot resolve \" + library.getArtifactId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1NTAzNA=="}, "originalCommit": {"oid": "f1113d229a209910a7f2869f61a92e7e8bd33ac2"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3OTg5OQ==", "bodyText": "We should terminate the build if dependency resolution fails. Fixed in 65d2559", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r462379899", "createdAt": "2020-07-29T15:16:44Z", "author": {"login": "suganyasuven"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/ResolveMavenDependenciesTask.java", "diffHunk": "@@ -60,16 +77,15 @@ public void execute(BuildContext buildContext) {\n         if (mavenDependencies.size() > 0) {\n             buildContext.out().println(\"Resolving Maven dependencies\\n\\tDownloading dependencies into \" + targetRepo);\n             for (Library library : mavenDependencies) {\n-                if (library.getPath() == null) {\n-                    try {\n-                        Dependency dependency = resolver.resolve(library.getGroupId(), library.getArtifactId(),\n-                                library.getVersion(), false);\n-                        library.setPath(Utils.getJarPath(targetRepo, dependency));\n-                    } catch (MavenResolverException e) {\n-                        buildContext.err().print(\"cannot resolve \" + library.getArtifactId());\n-                    }\n+                try {\n+                    Dependency dependency = resolver.resolve(library.getGroupId(), library.getArtifactId(),\n+                            library.getVersion(), false);\n+                    library.setPath(Utils.getJarPath(targetRepo, dependency));\n+                } catch (MavenResolverException e) {\n+                    buildContext.err().print(\"cannot resolve \" + library.getArtifactId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1NTAzNA=="}, "originalCommit": {"oid": "f1113d229a209910a7f2869f61a92e7e8bd33ac2"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDE5MjIyOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/test/java/org/ballerinalang/packerina/cmd/BuildCommandTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjo1MzowMVrOG3_CbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwOTo1MDoxMVrOG6Cxlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1NzY3Ng==", "bodyText": "Let's use Paths.get since File.sperator is the pre-1.7 JDKs way", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461357676", "createdAt": "2020-07-28T06:53:01Z", "author": {"login": "azinneera"}, "path": "cli/ballerina-packerina/src/test/java/org/ballerinalang/packerina/cmd/BuildCommandTest.java", "diffHunk": "@@ -804,9 +804,33 @@ public void testBuildWithSkipTests() throws IOException {\n                 \"\\nGenerating executables\\n\" +\n                 \"\\ttarget/bin/module1.jar\\n\");\n     }\n-    \n-    // Check compile command inside a module directory\n \n+    @Test(description = \"Test the project with Maven dependencies\")\n+    public void testBuildWithMavenDependencies() throws IOException {\n+        // valid source root path\n+        Path validBalFilePath = this.testResources.resolve(\"project-with-maven-dependencies\");\n+        BuildCommand buildCommand = new BuildCommand(validBalFilePath, printStream, printStream, false, true);\n+        new CommandLine(buildCommand).parse(\"-a\");\n+        buildCommand.execute();\n+        Path target = validBalFilePath.resolve(ProjectDirConstants.TARGET_DIR_NAME);\n+        Path platformLibsDir = target.resolve(\"platform-libs\");\n+        Assert.assertTrue(Files.exists(target), \"Check if target directory is created\");\n+        Assert.assertTrue(Files.exists(platformLibsDir), \"Check if platform-libs is created\");\n+\n+        //Assert maven dependencies are downloaded\n+        Assert.assertTrue(Files.exists(Paths.get(getJarPath(platformLibsDir.toString(), \"org.apache.maven\",\n+                \"maven-artifact\", \"3.6.3\"))));\n+        Assert.assertTrue(Files.exists(Paths.get(getJarPath(platformLibsDir.toString(), \"org.ballerinalang\",\n+                \"wso2-cassandra\", \"0.8.3\"))));\n+\n+    }\n+\n+    public static String getJarPath(String targetPath, String groupId, String artifactId, String version) {\n+        return targetPath + File.separator + groupId.replace('.', File.separatorChar) + File.separator +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1113d229a209910a7f2869f61a92e7e8bd33ac2"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUxNjA1NQ==", "bodyText": "Fixed in 65d2559", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r463516055", "createdAt": "2020-07-31T09:50:11Z", "author": {"login": "suganyasuven"}, "path": "cli/ballerina-packerina/src/test/java/org/ballerinalang/packerina/cmd/BuildCommandTest.java", "diffHunk": "@@ -804,9 +804,33 @@ public void testBuildWithSkipTests() throws IOException {\n                 \"\\nGenerating executables\\n\" +\n                 \"\\ttarget/bin/module1.jar\\n\");\n     }\n-    \n-    // Check compile command inside a module directory\n \n+    @Test(description = \"Test the project with Maven dependencies\")\n+    public void testBuildWithMavenDependencies() throws IOException {\n+        // valid source root path\n+        Path validBalFilePath = this.testResources.resolve(\"project-with-maven-dependencies\");\n+        BuildCommand buildCommand = new BuildCommand(validBalFilePath, printStream, printStream, false, true);\n+        new CommandLine(buildCommand).parse(\"-a\");\n+        buildCommand.execute();\n+        Path target = validBalFilePath.resolve(ProjectDirConstants.TARGET_DIR_NAME);\n+        Path platformLibsDir = target.resolve(\"platform-libs\");\n+        Assert.assertTrue(Files.exists(target), \"Check if target directory is created\");\n+        Assert.assertTrue(Files.exists(platformLibsDir), \"Check if platform-libs is created\");\n+\n+        //Assert maven dependencies are downloaded\n+        Assert.assertTrue(Files.exists(Paths.get(getJarPath(platformLibsDir.toString(), \"org.apache.maven\",\n+                \"maven-artifact\", \"3.6.3\"))));\n+        Assert.assertTrue(Files.exists(Paths.get(getJarPath(platformLibsDir.toString(), \"org.ballerinalang\",\n+                \"wso2-cassandra\", \"0.8.3\"))));\n+\n+    }\n+\n+    public static String getJarPath(String targetPath, String groupId, String artifactId, String version) {\n+        return targetPath + File.separator + groupId.replace('.', File.separatorChar) + File.separator +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1NzY3Ng=="}, "originalCommit": {"oid": "f1113d229a209910a7f2869f61a92e7e8bd33ac2"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDE5ODM1OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/test/java/org/ballerinalang/packerina/cmd/BuildCommandTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjo1NToxNFrOG3_GGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwOTo0OTo1OVrOG6CxJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1ODYxOQ==", "bodyText": "Shall we add a test case to check the expected behavior when only the group [[platform.repositories]] is given without any entries?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461358619", "createdAt": "2020-07-28T06:55:14Z", "author": {"login": "azinneera"}, "path": "cli/ballerina-packerina/src/test/java/org/ballerinalang/packerina/cmd/BuildCommandTest.java", "diffHunk": "@@ -804,9 +804,33 @@ public void testBuildWithSkipTests() throws IOException {\n                 \"\\nGenerating executables\\n\" +\n                 \"\\ttarget/bin/module1.jar\\n\");\n     }\n-    \n-    // Check compile command inside a module directory\n \n+    @Test(description = \"Test the project with Maven dependencies\")\n+    public void testBuildWithMavenDependencies() throws IOException {\n+        // valid source root path\n+        Path validBalFilePath = this.testResources.resolve(\"project-with-maven-dependencies\");\n+        BuildCommand buildCommand = new BuildCommand(validBalFilePath, printStream, printStream, false, true);\n+        new CommandLine(buildCommand).parse(\"-a\");\n+        buildCommand.execute();\n+        Path target = validBalFilePath.resolve(ProjectDirConstants.TARGET_DIR_NAME);\n+        Path platformLibsDir = target.resolve(\"platform-libs\");\n+        Assert.assertTrue(Files.exists(target), \"Check if target directory is created\");\n+        Assert.assertTrue(Files.exists(platformLibsDir), \"Check if platform-libs is created\");\n+\n+        //Assert maven dependencies are downloaded\n+        Assert.assertTrue(Files.exists(Paths.get(getJarPath(platformLibsDir.toString(), \"org.apache.maven\",\n+                \"maven-artifact\", \"3.6.3\"))));\n+        Assert.assertTrue(Files.exists(Paths.get(getJarPath(platformLibsDir.toString(), \"org.ballerinalang\",\n+                \"wso2-cassandra\", \"0.8.3\"))));\n+\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1113d229a209910a7f2869f61a92e7e8bd33ac2"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUxNTk0MQ==", "bodyText": "Added test for this scenario in 65d2559", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r463515941", "createdAt": "2020-07-31T09:49:59Z", "author": {"login": "suganyasuven"}, "path": "cli/ballerina-packerina/src/test/java/org/ballerinalang/packerina/cmd/BuildCommandTest.java", "diffHunk": "@@ -804,9 +804,33 @@ public void testBuildWithSkipTests() throws IOException {\n                 \"\\nGenerating executables\\n\" +\n                 \"\\ttarget/bin/module1.jar\\n\");\n     }\n-    \n-    // Check compile command inside a module directory\n \n+    @Test(description = \"Test the project with Maven dependencies\")\n+    public void testBuildWithMavenDependencies() throws IOException {\n+        // valid source root path\n+        Path validBalFilePath = this.testResources.resolve(\"project-with-maven-dependencies\");\n+        BuildCommand buildCommand = new BuildCommand(validBalFilePath, printStream, printStream, false, true);\n+        new CommandLine(buildCommand).parse(\"-a\");\n+        buildCommand.execute();\n+        Path target = validBalFilePath.resolve(ProjectDirConstants.TARGET_DIR_NAME);\n+        Path platformLibsDir = target.resolve(\"platform-libs\");\n+        Assert.assertTrue(Files.exists(target), \"Check if target directory is created\");\n+        Assert.assertTrue(Files.exists(platformLibsDir), \"Check if platform-libs is created\");\n+\n+        //Assert maven dependencies are downloaded\n+        Assert.assertTrue(Files.exists(Paths.get(getJarPath(platformLibsDir.toString(), \"org.apache.maven\",\n+                \"maven-artifact\", \"3.6.3\"))));\n+        Assert.assertTrue(Files.exists(Paths.get(getJarPath(platformLibsDir.toString(), \"org.ballerinalang\",\n+                \"wso2-cassandra\", \"0.8.3\"))));\n+\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1ODYxOQ=="}, "originalCommit": {"oid": "f1113d229a209910a7f2869f61a92e7e8bd33ac2"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDIwMjk1OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/spotbugs-exclude.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjo1Njo0N1rOG3_I0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwODoxODozOVrOG4ByHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1OTMxMg==", "bodyText": "Why do we need these exclusions?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461359312", "createdAt": "2020-07-28T06:56:47Z", "author": {"login": "azinneera"}, "path": "compiler/ballerina-lang/spotbugs-exclude.xml", "diffHunk": "@@ -75,6 +75,15 @@\n     </Match>\n     <Match>\n         <Class name = \"org.ballerinalang.toml.model.Library\"/>\n+        <Bug pattern=\"UWF_UNWRITTEN_FIELD\"/>\n+    </Match>\n+    <Match>\n+        <Class name = \"org.ballerinalang.toml.model.Repository\"/>\n+        <Bug pattern=\"UWF_UNWRITTEN_FIELD\"/>\n+    </Match>\n+    <Match>\n+        <Class name = \"org.ballerinalang.toml.model.Platform\"/>\n+        <Bug pattern=\"UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1113d229a209910a7f2869f61a92e7e8bd33ac2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQwMjY1NQ==", "bodyText": "Getter methods are only used for some properties. Hence spot bugs reported this bug.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461402655", "createdAt": "2020-07-28T08:18:39Z", "author": {"login": "suganyasuven"}, "path": "compiler/ballerina-lang/spotbugs-exclude.xml", "diffHunk": "@@ -75,6 +75,15 @@\n     </Match>\n     <Match>\n         <Class name = \"org.ballerinalang.toml.model.Library\"/>\n+        <Bug pattern=\"UWF_UNWRITTEN_FIELD\"/>\n+    </Match>\n+    <Match>\n+        <Class name = \"org.ballerinalang.toml.model.Repository\"/>\n+        <Bug pattern=\"UWF_UNWRITTEN_FIELD\"/>\n+    </Match>\n+    <Match>\n+        <Class name = \"org.ballerinalang.toml.model.Platform\"/>\n+        <Bug pattern=\"UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM1OTMxMg=="}, "originalCommit": {"oid": "f1113d229a209910a7f2869f61a92e7e8bd33ac2"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDIwODAxOnYy", "diffSide": "RIGHT", "path": "misc/maven-resolver/src/test/java/org/ballerinalang/maven/MavenResolverTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNjo1ODo0MlrOG3_MBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwODoyMDoxN1rOG4B19Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2MDEzMg==", "bodyText": "Why have we disabled this test?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461360132", "createdAt": "2020-07-28T06:58:42Z", "author": {"login": "azinneera"}, "path": "misc/maven-resolver/src/test/java/org/ballerinalang/maven/MavenResolverTest.java", "diffHunk": "@@ -52,4 +52,33 @@ public void testTransitiveDependency() {\n             Assert.fail(e.getMessage());\n         }\n     }\n+\n+    @Test\n+    public void testAddRemoteRepository() {\n+        try {\n+            resolver.addRepository(\"wso2-releases\", \"http://maven.wso2.org/nexus/content/repositories/releases/\");\n+            Dependency dependency = resolver.resolve(\"org.ballerinalang\", \"wso2-cassandra\",\n+                    \"0.8.3\", true);\n+            String jarPath = Utils.getJarPath(targetRepo, dependency.getDepedencies().get(0));\n+            Assert.assertTrue(new File(jarPath).exists());\n+        } catch (MavenResolverException e) {\n+            Assert.fail(e.getMessage());\n+        }\n+    }\n+\n+    @Test(enabled = false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1113d229a209910a7f2869f61a92e7e8bd33ac2"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQwMzYzNw==", "bodyText": "Credentials are not added. Thus, it is temporarily disabled.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r461403637", "createdAt": "2020-07-28T08:20:17Z", "author": {"login": "suganyasuven"}, "path": "misc/maven-resolver/src/test/java/org/ballerinalang/maven/MavenResolverTest.java", "diffHunk": "@@ -52,4 +52,33 @@ public void testTransitiveDependency() {\n             Assert.fail(e.getMessage());\n         }\n     }\n+\n+    @Test\n+    public void testAddRemoteRepository() {\n+        try {\n+            resolver.addRepository(\"wso2-releases\", \"http://maven.wso2.org/nexus/content/repositories/releases/\");\n+            Dependency dependency = resolver.resolve(\"org.ballerinalang\", \"wso2-cassandra\",\n+                    \"0.8.3\", true);\n+            String jarPath = Utils.getJarPath(targetRepo, dependency.getDepedencies().get(0));\n+            Assert.assertTrue(new File(jarPath).exists());\n+        } catch (MavenResolverException e) {\n+            Assert.fail(e.getMessage());\n+        }\n+    }\n+\n+    @Test(enabled = false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM2MDEzMg=="}, "originalCommit": {"oid": "f1113d229a209910a7f2869f61a92e7e8bd33ac2"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTI5NzE4OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/test/resources/test-resources/maven-dependency-project/project-without-custom-maven-dependencies/Ballerina.toml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNjo0ODozNVrOG5Vg3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNjo1MzowMVrOG5Vuxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc3NDQ5NA==", "bodyText": "For this scenario, Can't we generate warning message including the missing fields and continue the process? Then the user can continue works or if he or she misses it without knowing can fill it.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r462774494", "createdAt": "2020-07-30T06:48:35Z", "author": {"login": "lnash94"}, "path": "cli/ballerina-packerina/src/test/resources/test-resources/maven-dependency-project/project-without-custom-maven-dependencies/Ballerina.toml", "diffHunk": "@@ -0,0 +1,15 @@\n+[project]\n+org-name= \"suganya\"\n+version= \"0.1.0\"\n+\n+[dependencies]\n+\n+[platform]\n+target = \"java8\"\n+\n+    [[platform.repositories]]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "414bbee03b692d201e17966ce6118d004198e767"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc3ODA1NQ==", "bodyText": "@lnash94, Thanks for pointing out. We need to throw an exception if the repository defined with the empty body.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24962#discussion_r462778055", "createdAt": "2020-07-30T06:53:01Z", "author": {"login": "suganyasuven"}, "path": "cli/ballerina-packerina/src/test/resources/test-resources/maven-dependency-project/project-without-custom-maven-dependencies/Ballerina.toml", "diffHunk": "@@ -0,0 +1,15 @@\n+[project]\n+org-name= \"suganya\"\n+version= \"0.1.0\"\n+\n+[dependencies]\n+\n+[platform]\n+target = \"java8\"\n+\n+    [[platform.repositories]]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc3NDQ5NA=="}, "originalCommit": {"oid": "414bbee03b692d201e17966ce6118d004198e767"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 461, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}