{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMDgzOTU0", "number": 20581, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxODoxNzo0MlrODXnIRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwOTowMjozM1rODYwJeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MDg0OTM0OnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-config/src/main/java/org/ballerinalang/config/ConfigRegistry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxODoxNzo0MlrOFdAAfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwODo0Njo1OFrOFdPwpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk1MzE1MQ==", "bodyText": "Shall we refrain from placing \"array\" within quotes? The other types were quoted because those are actual types + keywords.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20581#discussion_r365953151", "createdAt": "2020-01-13T18:17:42Z", "author": {"login": "pubudu91"}, "path": "bvm/ballerina-config/src/main/java/org/ballerinalang/config/ConfigRegistry.java", "diffHunk": "@@ -330,6 +331,34 @@ public double getAsFloat(String sectionHeader, String field) {\n         return getAsMap(getConfigKey(sectionHeader, field));\n     }\n \n+    /**\n+     * Retrieves the config value specified by the key as a List.\n+     *\n+     * @param key The key of the config entry\n+     * @return The associated config value\n+     */\n+    public List getAsArray(String key) {\n+        if (key == null) {\n+            return null;\n+        }\n+        Object value = configEntries.get(key);\n+        if (value instanceof List) {\n+            return (List) value;\n+        }\n+        throw new IllegalArgumentException(\"config key '\" + key + \"' does not map to a valid 'array'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101ce540437e05b7a65ec93f90b87e9a49fe9261"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIxMTIzOA==", "bodyText": "Changed code to return an empty List instead of throwing the exception.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20581#discussion_r366211238", "createdAt": "2020-01-14T08:46:58Z", "author": {"login": "aashikam"}, "path": "bvm/ballerina-config/src/main/java/org/ballerinalang/config/ConfigRegistry.java", "diffHunk": "@@ -330,6 +331,34 @@ public double getAsFloat(String sectionHeader, String field) {\n         return getAsMap(getConfigKey(sectionHeader, field));\n     }\n \n+    /**\n+     * Retrieves the config value specified by the key as a List.\n+     *\n+     * @param key The key of the config entry\n+     * @return The associated config value\n+     */\n+    public List getAsArray(String key) {\n+        if (key == null) {\n+            return null;\n+        }\n+        Object value = configEntries.get(key);\n+        if (value instanceof List) {\n+            return (List) value;\n+        }\n+        throw new IllegalArgumentException(\"config key '\" + key + \"' does not map to a valid 'array'\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk1MzE1MQ=="}, "originalCommit": {"oid": "101ce540437e05b7a65ec93f90b87e9a49fe9261"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MDg1MzQ5OnYy", "diffSide": "RIGHT", "path": "stdlib/config-api/src/main/ballerina/src/config/config.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxODoxOToxMlrOFdADDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNToxMjozNVrOFdMWAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk1MzgwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    error err = error(\"Invalid value. Expected a 'any[]'.\");\n          \n          \n            \n                    error err = error(\"Invalid value. Expected an 'any[]'.\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20581#discussion_r365953806", "createdAt": "2020-01-13T18:19:12Z", "author": {"login": "pubudu91"}, "path": "stdlib/config-api/src/main/ballerina/src/config/config.bal", "diffHunk": "@@ -149,6 +149,21 @@ public function getAsMap(@untainted string key) returns map<any> {\n     }\n }\n \n+// TODO: If there is no mapping?\n+# Retrieves the specified configuration value as an array. If there is no mapping, an empty array will be returned.\n+#\n+# + key - The configuration to be retrieved\n+# + return - Configuration value mapped by the key\n+public function getAsArray(@untainted string key) returns any[] {\n+    var value = get(key, ARRAY);\n+    if (value is any[]) {\n+        return value;\n+    } else {\n+        error err = error(\"Invalid value. Expected a 'any[]'.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101ce540437e05b7a65ec93f90b87e9a49fe9261"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE1NTI2Ng==", "bodyText": "Fixed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20581#discussion_r366155266", "createdAt": "2020-01-14T05:12:35Z", "author": {"login": "aashikam"}, "path": "stdlib/config-api/src/main/ballerina/src/config/config.bal", "diffHunk": "@@ -149,6 +149,21 @@ public function getAsMap(@untainted string key) returns map<any> {\n     }\n }\n \n+// TODO: If there is no mapping?\n+# Retrieves the specified configuration value as an array. If there is no mapping, an empty array will be returned.\n+#\n+# + key - The configuration to be retrieved\n+# + return - Configuration value mapped by the key\n+public function getAsArray(@untainted string key) returns any[] {\n+    var value = get(key, ARRAY);\n+    if (value is any[]) {\n+        return value;\n+    } else {\n+        error err = error(\"Invalid value. Expected a 'any[]'.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk1MzgwNg=="}, "originalCommit": {"oid": "101ce540437e05b7a65ec93f90b87e9a49fe9261"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjY5OTk3OnYy", "diffSide": "RIGHT", "path": "stdlib/config-api/src/main/ballerina/src/config/config.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOTo1MTo1N1rOFdRnWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwNjo1NjozNVrOFePmTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI0MTYyNg==", "bodyText": "Is there any way to improve this message like 'Expect 1111 got 2222' format?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20581#discussion_r366241626", "createdAt": "2020-01-14T09:51:57Z", "author": {"login": "wggihan"}, "path": "stdlib/config-api/src/main/ballerina/src/config/config.bal", "diffHunk": "@@ -149,6 +149,20 @@ public function getAsMap(@untainted string key) returns map<any> {\n     }\n }\n \n+# Retrieves the specified configuration value as an array. If there is no mapping, an empty array will be returned.\n+#\n+# + key - The configuration to be retrieved\n+# + return - Configuration value mapped by the key\n+public function getAsArray(@untainted string key) returns any[] {\n+    var value = get(key, ARRAY);\n+    if (value is any[]) {\n+        return value;\n+    } else {\n+        error err = error(\"Invalid value. Expected an 'any[]'.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bba74d637f94a098cec22277d543637c6d7c47e4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI1NzE2NA==", "bodyText": "Removed this code block. As there is no chance of this happening.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20581#discussion_r367257164", "createdAt": "2020-01-16T06:56:35Z", "author": {"login": "aashikam"}, "path": "stdlib/config-api/src/main/ballerina/src/config/config.bal", "diffHunk": "@@ -149,6 +149,20 @@ public function getAsMap(@untainted string key) returns map<any> {\n     }\n }\n \n+# Retrieves the specified configuration value as an array. If there is no mapping, an empty array will be returned.\n+#\n+# + key - The configuration to be retrieved\n+# + return - Configuration value mapped by the key\n+public function getAsArray(@untainted string key) returns any[] {\n+    var value = get(key, ARRAY);\n+    if (value is any[]) {\n+        return value;\n+    } else {\n+        error err = error(\"Invalid value. Expected an 'any[]'.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI0MTYyNg=="}, "originalCommit": {"oid": "bba74d637f94a098cec22277d543637c6d7c47e4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MjgxMjcyOnYy", "diffSide": "RIGHT", "path": "stdlib/config-api/src/main/ballerina/src/config/config.bal", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwOTowMjozM1rOFeyiLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwOToyOTowOVrOFezMVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgyOTU0OA==", "bodyText": "On second thoughts, shall we make this anydata[] instead of any[]? I just tested this and with an any[], you can't really do anything useful easily; you have to cast each of the array element to its required type. With anydata[], you can do the following:\nimport ballerina/config;\nimport ballerina/io;\n\npublic function main() {\n\tint[]|error ports = int[].constructFrom(config:getAsArray(\"ports\"));\n\tif (ports is int[]) {\n\t\tio:println(ports); \n\t}\n}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20581#discussion_r367829548", "createdAt": "2020-01-17T09:02:33Z", "author": {"login": "pubudu91"}, "path": "stdlib/config-api/src/main/ballerina/src/config/config.bal", "diffHunk": "@@ -149,6 +149,14 @@ public function getAsMap(@untainted string key) returns map<any> {\n     }\n }\n \n+# Retrieves the specified configuration value as an array. If there is no mapping, an empty array will be returned.\n+#\n+# + key - The configuration to be retrieved\n+# + return - Configuration value mapped by the key\n+public function getAsArray(@untainted string key) returns any[] {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fee5535d3654f0577169c2a81c258935503c0fa3"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgyOTc2Mg==", "bodyText": "Other than that, this is working as expected.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20581#discussion_r367829762", "createdAt": "2020-01-17T09:03:07Z", "author": {"login": "pubudu91"}, "path": "stdlib/config-api/src/main/ballerina/src/config/config.bal", "diffHunk": "@@ -149,6 +149,14 @@ public function getAsMap(@untainted string key) returns map<any> {\n     }\n }\n \n+# Retrieves the specified configuration value as an array. If there is no mapping, an empty array will be returned.\n+#\n+# + key - The configuration to be retrieved\n+# + return - Configuration value mapped by the key\n+public function getAsArray(@untainted string key) returns any[] {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgyOTU0OA=="}, "originalCommit": {"oid": "fee5535d3654f0577169c2a81c258935503c0fa3"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg0MDM0MQ==", "bodyText": "Agreed. Fixed this in 91dce9a", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20581#discussion_r367840341", "createdAt": "2020-01-17T09:29:09Z", "author": {"login": "aashikam"}, "path": "stdlib/config-api/src/main/ballerina/src/config/config.bal", "diffHunk": "@@ -149,6 +149,14 @@ public function getAsMap(@untainted string key) returns map<any> {\n     }\n }\n \n+# Retrieves the specified configuration value as an array. If there is no mapping, an empty array will be returned.\n+#\n+# + key - The configuration to be retrieved\n+# + return - Configuration value mapped by the key\n+public function getAsArray(@untainted string key) returns any[] {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgyOTU0OA=="}, "originalCommit": {"oid": "fee5535d3654f0577169c2a81c258935503c0fa3"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 638, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}