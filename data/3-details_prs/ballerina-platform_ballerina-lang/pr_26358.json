{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNTg1Mjk3", "number": 26358, "title": "[Formatter] Implement the missing node transform methods in NewFormattingTreeModifier and fix some failing formatter related tests", "bodyText": "Purpose\n\n\nImplementation of transform(ClassDefinitionNode classDefinitionNode) and transform(NamedWorkerDeclarator namedWorkerDeclarator) methods\nFix some failing formatter related test cases\n\n\nFixes #26052\nApproach\n\n\nSamples\n\n\nRemarks\n\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-10-14T19:16:26Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358", "merged": true, "mergeCommit": {"oid": "d57b7b8eacc3fef3738ecb8ed5de14fcceb65dc0"}, "closed": true, "closedAt": "2020-10-15T11:40:33Z", "author": {"login": "sanjana"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdShrMTgH2gAyNTAzNTg1Mjk3OmFlNDI5ZWUwNjFhMGQ3OGIzYThlNjAyYTBlOWViZWI0YWVkZWE0ZDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSwPmIgFqTUwOTI4NjUxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ae429ee061a0d78b3a8e602a0e9ebeb4aedea4d1", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ae429ee061a0d78b3a8e602a0e9ebeb4aedea4d1", "committedDate": "2020-10-14T18:41:55Z", "message": "Implement ClassDefinitionDeclarationNode transformation in formatter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cb2a3abbc1c30fd28c81fdfbb52e78a0c5dddd6", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5cb2a3abbc1c30fd28c81fdfbb52e78a0c5dddd6", "committedDate": "2020-10-14T18:42:28Z", "message": "Merge remote-tracking branch 'upstream/formatter-change' into formatter-change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "958a52af3000462489c674f7cb758ba6c64cc1e5", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/958a52af3000462489c674f7cb758ba6c64cc1e5", "committedDate": "2020-10-14T19:59:50Z", "message": "Implement the formatter transformation method of NamedWorkerDeclarator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c7099baf642e19dd1b3404ce867ef1264384b1e7", "committedDate": "2020-10-14T21:51:44Z", "message": "Fix some failing formatter tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4OTAxNTM1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#pullrequestreview-508901535", "createdAt": "2020-10-15T02:53:10Z", "commit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMjo1MzoxMVrOHhu7pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMzozMzo0MlrOHhvjGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzk5MA==", "bodyText": "We don't need to do that check, that information would be ideally passed by the parent.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505133990", "createdAt": "2020-10-15T02:53:11Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -323,8 +323,13 @@ public FunctionDefinitionNode transform(FunctionDefinitionNode functionDefinitio\n         Token functionKeyword = formatToken(functionDefinitionNode.functionKeyword(), 1, 0);\n         IdentifierToken functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n         FunctionSignatureNode functionSignatureNode = formatNode(functionDefinitionNode.functionSignature(), 1, 0);\n-        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(),\n-                this.trailingWS, this.trailingNL);\n+        FunctionBodyNode functionBodyNode;\n+        if (functionDefinitionNode.parent().kind() == SyntaxKind.CLASS_DEFINITION) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNDMxOA==", "bodyText": "IMO we should keep only one newline in both of these cases", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505134318", "createdAt": "2020-10-15T02:54:31Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3413,8 +3424,39 @@ public OrderKeyNode transform(OrderKeyNode orderKeyNode) {\n \n     @Override\n     public ClassDefinitionNode transform(ClassDefinitionNode classDefinitionNode) {\n+        if (classDefinitionNode.metadata().isPresent()) {\n+            MetadataNode metadata = formatNode(classDefinitionNode.metadata().get(), 1, 0);\n+            classDefinitionNode = classDefinitionNode.modify().withMetadata(metadata).apply();\n+        }\n+\n+        if (classDefinitionNode.visibilityQualifier().isPresent()) {\n+            Token visibilityQualifier = formatToken(classDefinitionNode.visibilityQualifier().get(), 1, 0);\n+            classDefinitionNode = classDefinitionNode.modify().withVisibilityQualifier(visibilityQualifier).apply();\n+        }\n \n-        return super.transform(classDefinitionNode);\n+        NodeList<Token> classTypeQualifiers = formatNodeList(classDefinitionNode.classTypeQualifiers(), 1, 0, 1, 0);\n+        Token classKeyword = formatToken(classDefinitionNode.classKeyword(), 1, 0);\n+        Token className = formatToken(classDefinitionNode.className(), 1, 0);\n+        Token openBrace;\n+        if (classDefinitionNode.members().isEmpty()) {\n+            openBrace = formatToken(classDefinitionNode.openBrace(), 0, 2);\n+        } else {\n+            openBrace = formatToken(classDefinitionNode.openBrace(), 0, 1);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNDg3MA==", "bodyText": "Similarly, we should keep only one newline here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505134870", "createdAt": "2020-10-15T02:56:36Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -386,7 +391,13 @@ public RequiredParameterNode transform(RequiredParameterNode requiredParameterNo\n \n     @Override\n     public FunctionBodyBlockNode transform(FunctionBodyBlockNode functionBodyBlockNode) {\n-        Token openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n+        Token openBrace;\n+        if (functionBodyBlockNode.statements().isEmpty() && functionBodyBlockNode.namedWorkerDeclarator().isEmpty()) {\n+            openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 2);\n+        } else {\n+            openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNDkzNg==", "bodyText": "Same here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505134936", "createdAt": "2020-10-15T02:56:47Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -502,7 +513,13 @@ public ElseBlockNode transform(ElseBlockNode elseBlockNode) {\n \n     @Override\n     public BlockStatementNode transform(BlockStatementNode blockStatementNode) {\n-        Token openBrace = formatToken(blockStatementNode.openBraceToken(), 0, 1);\n+        Token openBrace;\n+        if (blockStatementNode.statements().isEmpty()) {\n+            openBrace = formatToken(blockStatementNode.openBraceToken(), 0, 2);\n+        } else {\n+            openBrace = formatToken(blockStatementNode.openBraceToken(), 0, 1);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNTM5Mw==", "bodyText": "Worker init statements should have a newline to follow, rather than a whitespace.\nAlso we should honour user added newline.\nRefer to how we have done for child-statements in the block-statement.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505135393", "createdAt": "2020-10-15T02:58:28Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3451,6 +3493,18 @@ public NamedWorkerDeclarationNode transform(NamedWorkerDeclarationNode namedWork\n                 .apply();\n     }\n \n+    @Override\n+    public NamedWorkerDeclarator transform(NamedWorkerDeclarator namedWorkerDeclarator) {\n+        NodeList<StatementNode> workerInitStatements = formatNodeList(namedWorkerDeclarator.workerInitStatements(), 1\n+                , 0, 1, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNjE4NA==", "bodyText": "This should be same as the statements within the block-statement.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505136184", "createdAt": "2020-10-15T03:01:31Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3451,6 +3493,18 @@ public NamedWorkerDeclarationNode transform(NamedWorkerDeclarationNode namedWork\n                 .apply();\n     }\n \n+    @Override\n+    public NamedWorkerDeclarator transform(NamedWorkerDeclarator namedWorkerDeclarator) {\n+        NodeList<StatementNode> workerInitStatements = formatNodeList(namedWorkerDeclarator.workerInitStatements(), 1\n+                , 0, 1, 0);\n+        NodeList<NamedWorkerDeclarationNode> namedWorkerDeclarations =\n+                formatNodeList(namedWorkerDeclarator.namedWorkerDeclarations(), 0, 2, 0, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE0NDA5MQ==", "bodyText": "I think we should expand module-level record type defs always.\nI have fixed this with 5167380", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505144091", "createdAt": "2020-10-15T03:33:42Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/actions/type-cast/assert/type_cast_action_1.bal", "diffHunk": "@@ -1,15 +1,9 @@\n-type Person record {\n-    string name;\n-};\n+type Person record { string name; };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c71d1291a03e3166b1926bb059ecce1346ab5891", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c71d1291a03e3166b1926bb059ecce1346ab5891", "committedDate": "2020-10-15T08:53:59Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8acd85bfcd79daa8cfc0c8206f4456d4dfcf26e7", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8acd85bfcd79daa8cfc0c8206f4456d4dfcf26e7", "committedDate": "2020-10-15T09:04:09Z", "message": "Review and enable class definition declaration related tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbde4a50eee5c7bd5d787f9c4b6bb2a1aa6e0853", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cbde4a50eee5c7bd5d787f9c4b6bb2a1aa6e0853", "committedDate": "2020-10-15T09:04:53Z", "message": "Merge remote-tracking branch 'upstream/formatter-change' into formatter-change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce930b83f1bb09184100293c44077269ca2c0310", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ce930b83f1bb09184100293c44077269ca2c0310", "committedDate": "2020-10-15T09:21:55Z", "message": "Reformat module-level record related test files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e75d92ffba4062f0d4a257a9dd76a4b694ec1456", "committedDate": "2020-10-15T09:28:50Z", "message": "Restructure worker declarators in new formatting tree modifier"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MjExNjcy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#pullrequestreview-509211672", "createdAt": "2020-10-15T09:56:49Z", "commit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1Njo1MFrOHiAIDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1Njo1MFrOHiAIDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNTY5NQ==", "bodyText": "Shall we remove this comment?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505415695", "createdAt": "2020-10-15T09:56:50Z", "author": {"login": "IrushiL"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -387,6 +387,7 @@ public RequiredParameterNode transform(RequiredParameterNode requiredParameterNo\n     @Override\n     public FunctionBodyBlockNode transform(FunctionBodyBlockNode functionBodyBlockNode) {\n         Token openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n+//        this.preserveNewlines = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MjAzNDY2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#pullrequestreview-509203466", "createdAt": "2020-10-15T09:46:31Z", "commit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0NjozMVrOHh_rHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1NTowMlrOHiADAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwODI4NA==", "bodyText": "Each member also should preserve newlines. So we need to pass the flag", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505408284", "createdAt": "2020-10-15T09:46:31Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3413,8 +3409,35 @@ public OrderKeyNode transform(OrderKeyNode orderKeyNode) {\n \n     @Override\n     public ClassDefinitionNode transform(ClassDefinitionNode classDefinitionNode) {\n+        if (classDefinitionNode.metadata().isPresent()) {\n+            MetadataNode metadata = formatNode(classDefinitionNode.metadata().get(), 1, 0);\n+            classDefinitionNode = classDefinitionNode.modify().withMetadata(metadata).apply();\n+        }\n+\n+        if (classDefinitionNode.visibilityQualifier().isPresent()) {\n+            Token visibilityQualifier = formatToken(classDefinitionNode.visibilityQualifier().get(), 1, 0);\n+            classDefinitionNode = classDefinitionNode.modify().withVisibilityQualifier(visibilityQualifier).apply();\n+        }\n+\n+        NodeList<Token> classTypeQualifiers = formatNodeList(classDefinitionNode.classTypeQualifiers(), 1, 0, 1, 0);\n+        Token classKeyword = formatToken(classDefinitionNode.classKeyword(), 1, 0);\n+        Token className = formatToken(classDefinitionNode.className(), 1, 0);\n+        Token openBrace = formatToken(classDefinitionNode.openBrace(), 0, 1);\n+        this.preserveNewlines = true;\n+\n+        indent();\n+        NodeList<Node> members = formatNodeList(classDefinitionNode.members(), 0, 1, 0, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwODUwMw==", "bodyText": "Lets remove this commented out line", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505408503", "createdAt": "2020-10-15T09:46:47Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -387,6 +387,7 @@ public RequiredParameterNode transform(RequiredParameterNode requiredParameterNo\n     @Override\n     public FunctionBodyBlockNode transform(FunctionBodyBlockNode functionBodyBlockNode) {\n         Token openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n+//        this.preserveNewlines = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwOTEwNQ==", "bodyText": "This line might be longer than 120", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505409105", "createdAt": "2020-10-15T09:47:31Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -323,8 +323,8 @@ public FunctionDefinitionNode transform(FunctionDefinitionNode functionDefinitio\n         Token functionKeyword = formatToken(functionDefinitionNode.functionKeyword(), 1, 0);\n         IdentifierToken functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n         FunctionSignatureNode functionSignatureNode = formatNode(functionDefinitionNode.functionSignature(), 1, 0);\n-        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(),\n-                this.trailingWS, this.trailingNL);\n+        //TODO: Fix formatting issue when the function is within a class definition declaration.\n+        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(), this.trailingWS, this.trailingNL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMTA5Mg==", "bodyText": "This assert is not correct. Let's keep the original for now.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505411092", "createdAt": "2020-10-15T09:50:19Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/actions/query/assert/query_action_1.bal", "diffHunk": "@@ -4,15 +4,13 @@ type Student record {\n };\n \n public function main() {\n-    Student[] studentList = [\n-        {\n-            firstName : \"Michelle\", \n-            gpa : 3.5\n-        }\n-    ];\n-    var result = from var student in studentList do {\n-        var name = {\n-            firstName : student.firstName\n+    Student[] studentList = [{\n+        firstName: \"Michelle\",\n+        gpa: 3.5\n+    }];\n+    var result = from var student in studentList\n+        do {\n+\n+            var name = { firstName: student.firstName };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMjE2NA==", "bodyText": "This also looks wrong. Lets keep the original", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505412164", "createdAt": "2020-10-15T09:51:59Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/assert/class_definition_declaration_13.bal", "diffHunk": "@@ -1,5 +1,6 @@\n readonly distinct class Foo {\n     string name;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMjM0Mg==", "bodyText": "Same here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505412342", "createdAt": "2020-10-15T09:52:11Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/assert/class_definition_declaration_16.bal", "diffHunk": "@@ -2,7 +2,7 @@ class Student {\n     public function foo() {\n         string x = \"abc\";\n     }\n-\n     int a;\n     int b;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMjkzOA==", "bodyText": "Same here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505412938", "createdAt": "2020-10-15T09:52:56Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/assert/class_definition_declaration_17.bal", "diffHunk": "@@ -1,14 +1,8 @@\n class Foo {\n     public function init() {\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMzcwMw==", "bodyText": "Same", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505413703", "createdAt": "2020-10-15T09:54:02Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/assert/class_definition_declaration_3.bal", "diffHunk": "@@ -2,10 +2,8 @@ class Foo {\n     public remote function foo() {\n         int x = 0;\n     }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNDA3MA==", "bodyText": "same for this entire file", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505414070", "createdAt": "2020-10-15T09:54:33Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/source/class_definition_declaration_15.bal", "diffHunk": "@@ -1,32 +1,32 @@\n       client\n    readonly\n          distinct\n-\n-     class  Foo\n+            class  Foo", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNDQwMQ==", "bodyText": "same here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505414401", "createdAt": "2020-10-15T09:55:02Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/source/class_definition_declaration_2.bal", "diffHunk": "@@ -2,6 +2,8 @@ class\n     Person\n \n        {\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MjEyODQx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#pullrequestreview-509212841", "createdAt": "2020-10-15T09:58:16Z", "commit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1ODoxNlrOHiALoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1ODoxNlrOHiALoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNjYwOQ==", "bodyText": "This line seems to be exceeding the line limit.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505416609", "createdAt": "2020-10-15T09:58:16Z", "author": {"login": "IrushiL"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -323,8 +323,8 @@ public FunctionDefinitionNode transform(FunctionDefinitionNode functionDefinitio\n         Token functionKeyword = formatToken(functionDefinitionNode.functionKeyword(), 1, 0);\n         IdentifierToken functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n         FunctionSignatureNode functionSignatureNode = formatNode(functionDefinitionNode.functionSignature(), 1, 0);\n-        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(),\n-                this.trailingWS, this.trailingNL);\n+        //TODO: Fix formatting issue when the function is within a class definition declaration.\n+        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(), this.trailingWS, this.trailingNL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9782d2379982c1ebbd59ebdac3a26fbc0c0595db", "author": {"user": {"login": "sanjana", "name": "Sivanandan Anjana"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9782d2379982c1ebbd59ebdac3a26fbc0c0595db", "committedDate": "2020-10-15T11:03:34Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5Mjg2NTEw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#pullrequestreview-509286510", "createdAt": "2020-10-15T11:40:21Z", "commit": {"oid": "9782d2379982c1ebbd59ebdac3a26fbc0c0595db"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4362, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}