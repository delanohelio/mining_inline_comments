{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NzY3OTEz", "number": 20698, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNDozMzo1NlrODaDTyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwODozMzowMlrODbfTsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NjQzNzg3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/kafka/src/main/ballerina/src/kafka/consumer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNDozMzo1NlrOFgymFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNDozMzo1NlrOFgymFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkyNzcwMA==", "bodyText": "Indentation is different from one to another. Shall we unify it to proper standard?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20698#discussion_r369927700", "createdAt": "2020-01-23T04:33:56Z", "author": {"login": "wggihan"}, "path": "stdlib/messaging/kafka/src/main/ballerina/src/kafka/consumer.bal", "diffHunk": "@@ -263,7 +262,7 @@ public type Consumer client object {\n     # + duration - Timeout duration for the get beginning offsets execution.\n     # + return - Starting offsets for the given partitions if executes successfully, returns `kafka:ConsumerError` if the operation fails.\n     public remote function getBeginningOffsets(TopicPartition[] partitions, public int duration = -1)\n-                               returns PartitionOffset[]|ConsumerError {\n+                                                returns PartitionOffset[]|ConsumerError {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b13d813bf1c4892aa47f2ec5d182c5891541707b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NjQzODcwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/kafka/src/main/ballerina/src/kafka/producer.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNDozNTowNlrOFgymnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNDozNTowNlrOFgymnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkyNzgzNw==", "bodyText": "Need another space in front of this?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20698#discussion_r369927837", "createdAt": "2020-01-23T04:35:06Z", "author": {"login": "wggihan"}, "path": "stdlib/messaging/kafka/src/main/ballerina/src/kafka/producer.bal", "diffHunk": "@@ -448,7 +445,7 @@ function producerSendStringFloat(Producer producer, handle value, handle topic,\n } external;\n \n function producerSendStringByteArray(Producer producer, handle value, handle topic, byte[] key, int? partition = (),\n-                                int? timestamp = ()) returns ProducerError? =\n+                                    int? timestamp = ()) returns ProducerError? =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b13d813bf1c4892aa47f2ec5d182c5891541707b"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NjQ3OTU0OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/nativeimpl/consumer/BrokerConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNToxMDo0MlrOFgy-pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNToxMDo0MlrOFgy-pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkzMzk5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n             * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20698#discussion_r369933991", "createdAt": "2020-01-23T05:10:42Z", "author": {"login": "wggihan"}, "path": "stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/nativeimpl/consumer/BrokerConnection.java", "diffHunk": "@@ -0,0 +1,175 @@\n+/*\n+ * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b13d813bf1c4892aa47f2ec5d182c5891541707b"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NjUxNjQ3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/nativeimpl/consumer/ConsumerInformationHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNTozNjo0MVrOFgzUTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNTozNjo0MVrOFgzUTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkzOTUzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n             * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20698#discussion_r369939532", "createdAt": "2020-01-23T05:36:41Z", "author": {"login": "wggihan"}, "path": "stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/nativeimpl/consumer/ConsumerInformationHandler.java", "diffHunk": "@@ -0,0 +1,252 @@\n+/*\n+ * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b13d813bf1c4892aa47f2ec5d182c5891541707b"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NjUyMjU3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/nativeimpl/consumer/GetOffsets.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNTo0MjoxOFrOFgzX_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNTo0MjoxOFrOFgzX_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk0MDQ3OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n             * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20698#discussion_r369940479", "createdAt": "2020-01-23T05:42:18Z", "author": {"login": "wggihan"}, "path": "stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/nativeimpl/consumer/GetOffsets.java", "diffHunk": "@@ -0,0 +1,235 @@\n+/*\n+ * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b13d813bf1c4892aa47f2ec5d182c5891541707b"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NjUzNDU3OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/nativeimpl/producer/ProducerActions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNTo1MjowN1rOFgzfBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwNTo1MjowN1rOFgzfBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk0MjI3OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n             * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20698#discussion_r369942279", "createdAt": "2020-01-23T05:52:07Z", "author": {"login": "wggihan"}, "path": "stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/nativeimpl/producer/ProducerActions.java", "diffHunk": "@@ -0,0 +1,224 @@\n+/*\n+ * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b13d813bf1c4892aa47f2ec5d182c5891541707b"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDM3NDk5OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/observability/KafkaMetricsUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwOToyOTowMVrOFhX8QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwOToyOTowMVrOFhX8QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUzOTU4NA==", "bodyText": "Shall we move this as a class variable?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20698#discussion_r370539584", "createdAt": "2020-01-24T09:29:01Z", "author": {"login": "wggihan"}, "path": "stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/observability/KafkaMetricsUtil.java", "diffHunk": "@@ -117,14 +119,27 @@ public static void reportPublish(ObjectValue producerObject, String topic, Objec\n             return;\n         }\n         int size = 0;\n-        try (ByteArrayOutputStream bos = new ByteArrayOutputStream()) {\n-            ObjectOutputStream oos = new ObjectOutputStream(bos);\n-            oos.writeObject(value);\n-            oos.flush();\n-            byte[] data = bos.toByteArray();\n-            size = data.length;\n-        } catch (IOException e) {\n-\n+        if (value instanceof String) {\n+            try {\n+                byte[] bytes = ((String) value).getBytes(\"UTF-8\");\n+                size = bytes.length;\n+            } catch (UnsupportedEncodingException e) {\n+                LoggerFactory.getLogger(KafkaMetricsUtil.class).error(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88937d47630fbd4be129c878643a9a9c6061284f"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTUxMDkwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/observability/KafkaMetricsUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwODozMzowMlrOFjAJIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwODozMzowMlrOFjAJIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI0NjgxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        size = 8;\n          \n          \n            \n                        size = Double.BYTES;", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20698#discussion_r372246818", "createdAt": "2020-01-29T08:33:02Z", "author": {"login": "wggihan"}, "path": "stdlib/messaging/kafka/src/main/java/org/ballerinalang/messaging/kafka/observability/KafkaMetricsUtil.java", "diffHunk": "@@ -108,23 +110,32 @@ public static void reportConsumerClose(ObjectValue consumerObject) {\n     /**\n      * Reports a message being published by a Kafka producer.\n      *\n-     * @param producerObject  producer object.\n-     * @param topic Subject the message is published to.\n-     * @param value  Message object.\n+     * @param producerObject producer object.\n+     * @param topic          Subject the message is published to.\n+     * @param value          Message object.\n      */\n     public static void reportPublish(ObjectValue producerObject, String topic, Object value) {\n         if (!ObserveUtils.isMetricsEnabled()) {\n             return;\n         }\n         int size = 0;\n-        try (ByteArrayOutputStream bos = new ByteArrayOutputStream()) {\n-            ObjectOutputStream oos = new ObjectOutputStream(bos);\n-            oos.writeObject(value);\n-            oos.flush();\n-            byte[] data = bos.toByteArray();\n-            size = data.length;\n-        } catch (IOException e) {\n-\n+        if (value instanceof String) {\n+            byte[] bytes = ((String) value).getBytes(StandardCharsets.UTF_8);\n+            size = bytes.length;\n+        } else if (value instanceof Long || value instanceof Double) {\n+            size = 8;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b62097a23b7315b2c49bc33c06bec1a2efffb844"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 541, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}