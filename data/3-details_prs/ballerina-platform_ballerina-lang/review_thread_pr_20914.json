{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMjkzNjMw", "number": 20914, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTowMTowOFrODd9AXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxODoxOTo0OFrODeG7vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzM0ODE1OnYy", "diffSide": "RIGHT", "path": "stdlib/crypto/src/main/java/org/ballerinalang/stdlib/crypto/nativeimpl/Decode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTowMTowOFrOFm2R2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwOTowMTowOFrOFm2R2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI3OTUxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return CryptoUtils.createError(\"Key cannot be recovered by using given keyAlias [\" + keyAlias +\n          \n          \n            \n                                \"] and keyPassword [\" + keyPassword + \"]\");\n          \n          \n            \n                        return CryptoUtils.createError(\"Key cannot be recovered by using given key alias: [\" + keyAlias + \"] +\n          \n          \n            \n                                     \" and key password: [\" + keyPassword + \"]\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20914#discussion_r376279514", "createdAt": "2020-02-07T09:01:08Z", "author": {"login": "ldclakmal"}, "path": "stdlib/crypto/src/main/java/org/ballerinalang/stdlib/crypto/nativeimpl/Decode.java", "diffHunk": "@@ -85,6 +78,13 @@ public static Object decodePrivateKey(Object keyStoreValue, String keyAlias, Str\n             throw CryptoUtils.createError(\"PKCS12 key store not found at: \" + keyStoreFile.getAbsoluteFile());\n         } catch (KeyStoreException | CertificateException | IOException e) {\n             throw CryptoUtils.createError(\"Unable to open keystore: \" + e.getMessage());\n+        } catch (NoSuchAlgorithmException e) {\n+            return CryptoUtils.createError(\"Algorithm for key recovery is not found: \" + e.getMessage());\n+        } catch (NullPointerException e) {\n+            return CryptoUtils.createError(\"Key cannot be recovered by using given keyAlias [\" + keyAlias +\n+                    \"] and keyPassword [\" + keyPassword + \"]\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2d9221c3a05ac967cd510b901651476352ce493"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODk3NDcwOnYy", "diffSide": "RIGHT", "path": "stdlib/crypto/src/main/java/org/ballerinalang/stdlib/crypto/nativeimpl/Decode.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxODoxOTo0OFrOFnF5YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNDoyODo0OVrOFnZ-SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzNTM5Mw==", "bodyText": "If we consider security best practices, is it ok to have the keyPassword in error message and logs? @ldclakmal", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20914#discussion_r376535393", "createdAt": "2020-02-07T18:19:48Z", "author": {"login": "anupama-pathirage"}, "path": "stdlib/crypto/src/main/java/org/ballerinalang/stdlib/crypto/nativeimpl/Decode.java", "diffHunk": "@@ -85,6 +78,13 @@ public static Object decodePrivateKey(Object keyStoreValue, String keyAlias, Str\n             throw CryptoUtils.createError(\"PKCS12 key store not found at: \" + keyStoreFile.getAbsoluteFile());\n         } catch (KeyStoreException | CertificateException | IOException e) {\n             throw CryptoUtils.createError(\"Unable to open keystore: \" + e.getMessage());\n+        } catch (NoSuchAlgorithmException e) {\n+            return CryptoUtils.createError(\"Algorithm for key recovery is not found: \" + e.getMessage());\n+        } catch (NullPointerException e) {\n+            return CryptoUtils.createError(\"Key cannot be recovered by using given key alias: [\" + keyAlias +\n+                         \"] and key password: [\" + keyPassword + \"]\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d87a7e9679d3d475a1524ab2c13bdfae4b301117"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU3ODcxNA==", "bodyText": "Fixed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20914#discussion_r376578714", "createdAt": "2020-02-07T19:55:44Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/crypto/src/main/java/org/ballerinalang/stdlib/crypto/nativeimpl/Decode.java", "diffHunk": "@@ -85,6 +78,13 @@ public static Object decodePrivateKey(Object keyStoreValue, String keyAlias, Str\n             throw CryptoUtils.createError(\"PKCS12 key store not found at: \" + keyStoreFile.getAbsoluteFile());\n         } catch (KeyStoreException | CertificateException | IOException e) {\n             throw CryptoUtils.createError(\"Unable to open keystore: \" + e.getMessage());\n+        } catch (NoSuchAlgorithmException e) {\n+            return CryptoUtils.createError(\"Algorithm for key recovery is not found: \" + e.getMessage());\n+        } catch (NullPointerException e) {\n+            return CryptoUtils.createError(\"Key cannot be recovered by using given key alias: [\" + keyAlias +\n+                         \"] and key password: [\" + keyPassword + \"]\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzNTM5Mw=="}, "originalCommit": {"oid": "d87a7e9679d3d475a1524ab2c13bdfae4b301117"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg2NDMyOQ==", "bodyText": "If we consider security best practices, is it ok to have the keyPassword in error message and logs? @ldclakmal\n\nYes we cannot. Sorry, I missed it.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20914#discussion_r376864329", "createdAt": "2020-02-10T04:28:49Z", "author": {"login": "ldclakmal"}, "path": "stdlib/crypto/src/main/java/org/ballerinalang/stdlib/crypto/nativeimpl/Decode.java", "diffHunk": "@@ -85,6 +78,13 @@ public static Object decodePrivateKey(Object keyStoreValue, String keyAlias, Str\n             throw CryptoUtils.createError(\"PKCS12 key store not found at: \" + keyStoreFile.getAbsoluteFile());\n         } catch (KeyStoreException | CertificateException | IOException e) {\n             throw CryptoUtils.createError(\"Unable to open keystore: \" + e.getMessage());\n+        } catch (NoSuchAlgorithmException e) {\n+            return CryptoUtils.createError(\"Algorithm for key recovery is not found: \" + e.getMessage());\n+        } catch (NullPointerException e) {\n+            return CryptoUtils.createError(\"Key cannot be recovered by using given key alias: [\" + keyAlias +\n+                         \"] and key password: [\" + keyPassword + \"]\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUzNTM5Mw=="}, "originalCommit": {"oid": "d87a7e9679d3d475a1524ab2c13bdfae4b301117"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1170, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}