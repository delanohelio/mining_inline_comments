{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NDQwNTAw", "number": 21839, "title": "Fix un-prefixed xml import bad-sad error", "bodyText": "Purpose\nFixes the Bad sad when doing import ballerina/lang.'xml;\nFixes #21833\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-03-16T18:58:50Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21839", "merged": true, "mergeCommit": {"oid": "139c17b487abba3448af74e196af58663715981e"}, "closed": true, "closedAt": "2020-03-17T05:00:20Z", "author": {"login": "rdhananjaya"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOSuolgH2gAyMzg5NDQwNTAwOjBjYzJhNTljY2U4NmUxYjIzMGRiM2FlMmY5NzY3ZmJlOGE4ZjBiNWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOaz5FAFqTM3NTczMDQwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0cc2a59cce86e1b230db3ae2f9767fbe8a8f0b5d", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0cc2a59cce86e1b230db3ae2f9767fbe8a8f0b5d", "committedDate": "2020-03-16T18:50:15Z", "message": "Fix un-prefixed xml import bad-sad error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NTI1ODcy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21839#pullrequestreview-375525872", "createdAt": "2020-03-16T19:34:04Z", "commit": {"oid": "0cc2a59cce86e1b230db3ae2f9767fbe8a8f0b5d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOTozNDowNFrOF3DBcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOTozNDowNFrOF3DBcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI2NTUyMw==", "bodyText": "Can invert this condition right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21839#discussion_r393265523", "createdAt": "2020-03-16T19:34:04Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -2592,8 +2592,51 @@ public void visit(BLangXMLQName bLangXMLQName) {\n             bLangXMLQName.type = symTable.semanticError;\n             return;\n         }\n-        bLangXMLQName.namespaceURI = ((BXMLNSSymbol) xmlnsSymbol).namespaceURI;\n-        bLangXMLQName.nsSymbol = (BXMLNSSymbol) xmlnsSymbol;\n+\n+        if (xmlnsSymbol.getKind() == SymbolKind.PACKAGE) {\n+            xmlnsSymbol = getXmlNsSymbolFromPkgSymbol(bLangXMLQName.localname.value, bLangXMLQName.prefix.value,\n+                    xmlnsSymbol, bLangXMLQName.pos);\n+        }\n+        if (xmlnsSymbol != null && xmlnsSymbol.getKind() == SymbolKind.XMLNS) {\n+            bLangXMLQName.namespaceURI = ((BXMLNSSymbol) xmlnsSymbol).namespaceURI;\n+            bLangXMLQName.nsSymbol = (BXMLNSSymbol) xmlnsSymbol;\n+        } else {\n+            resultType = symTable.semanticError;\n+            return;\n+        }\n+    }\n+\n+    private BSymbol getXmlNsSymbolFromPkgSymbol(String localname, String prefix, BSymbol xmlnsSymbol, DiagnosticPos pos) {\n+        BPackageSymbol pkgSymbol = (BPackageSymbol) xmlnsSymbol;\n+        BSymbol constSymbol = symResolver.lookupMemberSymbol(pos, pkgSymbol.scope, env,\n+                names.fromString(localname), SymTag.CONSTANT);\n+        if (constSymbol != symTable.notFoundSymbol) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cc2a59cce86e1b230db3ae2f9767fbe8a8f0b5d"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NTI2NTE5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21839#pullrequestreview-375526519", "createdAt": "2020-03-16T19:35:11Z", "commit": {"oid": "0cc2a59cce86e1b230db3ae2f9767fbe8a8f0b5d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOTozNToxMVrOF3DDcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOTozNToxMVrOF3DDcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI2NjAzMg==", "bodyText": "Any particular reason why these public constants are in lower case?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21839#discussion_r393266032", "createdAt": "2020-03-16T19:35:11Z", "author": {"login": "pubudu91"}, "path": "langlib/lang.xml/src/main/ballerina/src/lang.xml/xml.bal", "diffHunk": "@@ -14,8 +14,17 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-const string XML_NAMESPACE_URI = \"http://www.w3.org/XML/1998/namespace\";\n-const string XMLNS_NAMESPACE_URI = \"http://www.w3.org/2000/xmlns/\";\n+# The namespace URI bound to the `xml` prefix.\n+public const string XML_NAMESPACE_URI = \"http://www.w3.org/XML/1998/namespace\";\n+# The namespace URI bound to the `xmlns` prefix.\n+public const string XMLNS_NAMESPACE_URI = \"http://www.w3.org/2000/xmlns/\";\n+\n+# The expanded name of the `xml:space` attribute.\n+public const string space = \"{http://www.w3.org/XML/1998/namespace}space\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cc2a59cce86e1b230db3ae2f9767fbe8a8f0b5d"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NTI4Nzk3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21839#pullrequestreview-375528797", "createdAt": "2020-03-16T19:39:01Z", "commit": {"oid": "0cc2a59cce86e1b230db3ae2f9767fbe8a8f0b5d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOTozOTowMVrOF3DKig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOTozOTowMVrOF3DKig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI2Nzg1MA==", "bodyText": "I'm assuming the above logic is for constants of the form \"{http://www.w3.org/XML/1998/namespace}space\"? If so, is it a possibility to have multiple braces within such a string? In that case, would the result produced by this logic still be correct?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21839#discussion_r393267850", "createdAt": "2020-03-16T19:39:01Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -2592,8 +2592,51 @@ public void visit(BLangXMLQName bLangXMLQName) {\n             bLangXMLQName.type = symTable.semanticError;\n             return;\n         }\n-        bLangXMLQName.namespaceURI = ((BXMLNSSymbol) xmlnsSymbol).namespaceURI;\n-        bLangXMLQName.nsSymbol = (BXMLNSSymbol) xmlnsSymbol;\n+\n+        if (xmlnsSymbol.getKind() == SymbolKind.PACKAGE) {\n+            xmlnsSymbol = getXmlNsSymbolFromPkgSymbol(bLangXMLQName.localname.value, bLangXMLQName.prefix.value,\n+                    xmlnsSymbol, bLangXMLQName.pos);\n+        }\n+        if (xmlnsSymbol != null && xmlnsSymbol.getKind() == SymbolKind.XMLNS) {\n+            bLangXMLQName.namespaceURI = ((BXMLNSSymbol) xmlnsSymbol).namespaceURI;\n+            bLangXMLQName.nsSymbol = (BXMLNSSymbol) xmlnsSymbol;\n+        } else {\n+            resultType = symTable.semanticError;\n+            return;\n+        }\n+    }\n+\n+    private BSymbol getXmlNsSymbolFromPkgSymbol(String localname, String prefix, BSymbol xmlnsSymbol, DiagnosticPos pos) {\n+        BPackageSymbol pkgSymbol = (BPackageSymbol) xmlnsSymbol;\n+        BSymbol constSymbol = symResolver.lookupMemberSymbol(pos, pkgSymbol.scope, env,\n+                names.fromString(localname), SymTag.CONSTANT);\n+        if (constSymbol != symTable.notFoundSymbol) {\n+            BConstantSymbol constantSymbol = (BConstantSymbol) constSymbol;\n+            if (constantSymbol.literalType.tag != TypeTags.STRING) {\n+                dlog.error(pos, DiagnosticCode.INCOMPATIBLE_TYPES,\n+                        symTable.stringType, constantSymbol.literalType);\n+                resultType = symTable.semanticError;\n+                return null;\n+            } else {\n+                String constVal = (String) constantSymbol.value.value;\n+                int s = constVal.indexOf('{');\n+                int e = constVal.lastIndexOf('}');\n+                if (e > s) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cc2a59cce86e1b230db3ae2f9767fbe8a8f0b5d"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NTg5MTEx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21839#pullrequestreview-375589111", "createdAt": "2020-03-16T21:17:45Z", "commit": {"oid": "0cc2a59cce86e1b230db3ae2f9767fbe8a8f0b5d"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMToxNzo0NlrOF3GFWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMToyODowMlrOF3GWxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMxNTY3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            dlog.error(pos, DiagnosticCode.INCOMPATIBLE_TYPES,\n          \n          \n            \n                                    symTable.stringType, constantSymbol.literalType);\n          \n          \n            \n                            dlog.error(pos, DiagnosticCode.INCOMPATIBLE_TYPES, symTable.stringType, constantSymbol.literalType);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21839#discussion_r393315672", "createdAt": "2020-03-16T21:17:46Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -2592,8 +2592,51 @@ public void visit(BLangXMLQName bLangXMLQName) {\n             bLangXMLQName.type = symTable.semanticError;\n             return;\n         }\n-        bLangXMLQName.namespaceURI = ((BXMLNSSymbol) xmlnsSymbol).namespaceURI;\n-        bLangXMLQName.nsSymbol = (BXMLNSSymbol) xmlnsSymbol;\n+\n+        if (xmlnsSymbol.getKind() == SymbolKind.PACKAGE) {\n+            xmlnsSymbol = getXmlNsSymbolFromPkgSymbol(bLangXMLQName.localname.value, bLangXMLQName.prefix.value,\n+                    xmlnsSymbol, bLangXMLQName.pos);\n+        }\n+        if (xmlnsSymbol != null && xmlnsSymbol.getKind() == SymbolKind.XMLNS) {\n+            bLangXMLQName.namespaceURI = ((BXMLNSSymbol) xmlnsSymbol).namespaceURI;\n+            bLangXMLQName.nsSymbol = (BXMLNSSymbol) xmlnsSymbol;\n+        } else {\n+            resultType = symTable.semanticError;\n+            return;\n+        }\n+    }\n+\n+    private BSymbol getXmlNsSymbolFromPkgSymbol(String localname, String prefix, BSymbol xmlnsSymbol, DiagnosticPos pos) {\n+        BPackageSymbol pkgSymbol = (BPackageSymbol) xmlnsSymbol;\n+        BSymbol constSymbol = symResolver.lookupMemberSymbol(pos, pkgSymbol.scope, env,\n+                names.fromString(localname), SymTag.CONSTANT);\n+        if (constSymbol != symTable.notFoundSymbol) {\n+            BConstantSymbol constantSymbol = (BConstantSymbol) constSymbol;\n+            if (constantSymbol.literalType.tag != TypeTags.STRING) {\n+                dlog.error(pos, DiagnosticCode.INCOMPATIBLE_TYPES,\n+                        symTable.stringType, constantSymbol.literalType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cc2a59cce86e1b230db3ae2f9767fbe8a8f0b5d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMxNzA4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (xmlnsSymbol != null && xmlnsSymbol.getKind() == SymbolKind.XMLNS) {\n          \n          \n            \n                        bLangXMLQName.namespaceURI = ((BXMLNSSymbol) xmlnsSymbol).namespaceURI;\n          \n          \n            \n                        bLangXMLQName.nsSymbol = (BXMLNSSymbol) xmlnsSymbol;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        resultType = symTable.semanticError;\n          \n          \n            \n                        return;\n          \n          \n            \n                    }\n          \n          \n            \n                    if (xmlnsSymbol == null || xmlnsSymbol.getKind() != SymbolKind.XMLNS) {\n          \n          \n            \n                        resultType = symTable.semanticError;\n          \n          \n            \n                        return;\n          \n          \n            \n                    }\n          \n          \n            \n                    BXMLNSSymbol symbol = (BXMLNSSymbol) xmlnsSymbol;\n          \n          \n            \n                    bLangXMLQName.namespaceURI = symbol.namespaceURI;\n          \n          \n            \n                    bLangXMLQName.nsSymbol = symbol;", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21839#discussion_r393317086", "createdAt": "2020-03-16T21:21:00Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -2592,8 +2592,51 @@ public void visit(BLangXMLQName bLangXMLQName) {\n             bLangXMLQName.type = symTable.semanticError;\n             return;\n         }\n-        bLangXMLQName.namespaceURI = ((BXMLNSSymbol) xmlnsSymbol).namespaceURI;\n-        bLangXMLQName.nsSymbol = (BXMLNSSymbol) xmlnsSymbol;\n+\n+        if (xmlnsSymbol.getKind() == SymbolKind.PACKAGE) {\n+            xmlnsSymbol = getXmlNsSymbolFromPkgSymbol(bLangXMLQName.localname.value, bLangXMLQName.prefix.value,\n+                    xmlnsSymbol, bLangXMLQName.pos);\n+        }\n+        if (xmlnsSymbol != null && xmlnsSymbol.getKind() == SymbolKind.XMLNS) {\n+            bLangXMLQName.namespaceURI = ((BXMLNSSymbol) xmlnsSymbol).namespaceURI;\n+            bLangXMLQName.nsSymbol = (BXMLNSSymbol) xmlnsSymbol;\n+        } else {\n+            resultType = symTable.semanticError;\n+            return;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cc2a59cce86e1b230db3ae2f9767fbe8a8f0b5d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMxOTgzNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                xmlnsSymbol = new BXMLNSSymbol(names.fromString(constVal.substring(e)), nsURI,\n          \n          \n            \n                                        constantSymbol.pkgID, constantSymbol.owner);\n          \n          \n            \n                                pkgSymbol.isUsed = true;\n          \n          \n            \n                                return xmlnsSymbol;\n          \n          \n            \n                                pkgSymbol.isUsed = true;\n          \n          \n            \n                                return new BXMLNSSymbol(names.fromString(constVal.substring(e)), nsURI,\n          \n          \n            \n                                                        constantSymbol.pkgID, constantSymbol.owner);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21839#discussion_r393319837", "createdAt": "2020-03-16T21:27:25Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -2592,8 +2592,51 @@ public void visit(BLangXMLQName bLangXMLQName) {\n             bLangXMLQName.type = symTable.semanticError;\n             return;\n         }\n-        bLangXMLQName.namespaceURI = ((BXMLNSSymbol) xmlnsSymbol).namespaceURI;\n-        bLangXMLQName.nsSymbol = (BXMLNSSymbol) xmlnsSymbol;\n+\n+        if (xmlnsSymbol.getKind() == SymbolKind.PACKAGE) {\n+            xmlnsSymbol = getXmlNsSymbolFromPkgSymbol(bLangXMLQName.localname.value, bLangXMLQName.prefix.value,\n+                    xmlnsSymbol, bLangXMLQName.pos);\n+        }\n+        if (xmlnsSymbol != null && xmlnsSymbol.getKind() == SymbolKind.XMLNS) {\n+            bLangXMLQName.namespaceURI = ((BXMLNSSymbol) xmlnsSymbol).namespaceURI;\n+            bLangXMLQName.nsSymbol = (BXMLNSSymbol) xmlnsSymbol;\n+        } else {\n+            resultType = symTable.semanticError;\n+            return;\n+        }\n+    }\n+\n+    private BSymbol getXmlNsSymbolFromPkgSymbol(String localname, String prefix, BSymbol xmlnsSymbol, DiagnosticPos pos) {\n+        BPackageSymbol pkgSymbol = (BPackageSymbol) xmlnsSymbol;\n+        BSymbol constSymbol = symResolver.lookupMemberSymbol(pos, pkgSymbol.scope, env,\n+                names.fromString(localname), SymTag.CONSTANT);\n+        if (constSymbol != symTable.notFoundSymbol) {\n+            BConstantSymbol constantSymbol = (BConstantSymbol) constSymbol;\n+            if (constantSymbol.literalType.tag != TypeTags.STRING) {\n+                dlog.error(pos, DiagnosticCode.INCOMPATIBLE_TYPES,\n+                        symTable.stringType, constantSymbol.literalType);\n+                resultType = symTable.semanticError;\n+                return null;\n+            } else {\n+                String constVal = (String) constantSymbol.value.value;\n+                int s = constVal.indexOf('{');\n+                int e = constVal.lastIndexOf('}');\n+                if (e > s) {\n+                    String nsURI = constVal.substring(s + 1, e);\n+                    xmlnsSymbol = new BXMLNSSymbol(names.fromString(constVal.substring(e)), nsURI,\n+                            constantSymbol.pkgID, constantSymbol.owner);\n+                    pkgSymbol.isUsed = true;\n+                    return xmlnsSymbol;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cc2a59cce86e1b230db3ae2f9767fbe8a8f0b5d"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMyMDEzMw==", "bodyText": "Do we need to set resultType here? Ideally should be done where called right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21839#discussion_r393320133", "createdAt": "2020-03-16T21:28:02Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -2592,8 +2592,51 @@ public void visit(BLangXMLQName bLangXMLQName) {\n             bLangXMLQName.type = symTable.semanticError;\n             return;\n         }\n-        bLangXMLQName.namespaceURI = ((BXMLNSSymbol) xmlnsSymbol).namespaceURI;\n-        bLangXMLQName.nsSymbol = (BXMLNSSymbol) xmlnsSymbol;\n+\n+        if (xmlnsSymbol.getKind() == SymbolKind.PACKAGE) {\n+            xmlnsSymbol = getXmlNsSymbolFromPkgSymbol(bLangXMLQName.localname.value, bLangXMLQName.prefix.value,\n+                    xmlnsSymbol, bLangXMLQName.pos);\n+        }\n+        if (xmlnsSymbol != null && xmlnsSymbol.getKind() == SymbolKind.XMLNS) {\n+            bLangXMLQName.namespaceURI = ((BXMLNSSymbol) xmlnsSymbol).namespaceURI;\n+            bLangXMLQName.nsSymbol = (BXMLNSSymbol) xmlnsSymbol;\n+        } else {\n+            resultType = symTable.semanticError;\n+            return;\n+        }\n+    }\n+\n+    private BSymbol getXmlNsSymbolFromPkgSymbol(String localname, String prefix, BSymbol xmlnsSymbol, DiagnosticPos pos) {\n+        BPackageSymbol pkgSymbol = (BPackageSymbol) xmlnsSymbol;\n+        BSymbol constSymbol = symResolver.lookupMemberSymbol(pos, pkgSymbol.scope, env,\n+                names.fromString(localname), SymTag.CONSTANT);\n+        if (constSymbol != symTable.notFoundSymbol) {\n+            BConstantSymbol constantSymbol = (BConstantSymbol) constSymbol;\n+            if (constantSymbol.literalType.tag != TypeTags.STRING) {\n+                dlog.error(pos, DiagnosticCode.INCOMPATIBLE_TYPES,\n+                        symTable.stringType, constantSymbol.literalType);\n+                resultType = symTable.semanticError;\n+                return null;\n+            } else {\n+                String constVal = (String) constantSymbol.value.value;\n+                int s = constVal.indexOf('{');\n+                int e = constVal.lastIndexOf('}');\n+                if (e > s) {\n+                    String nsURI = constVal.substring(s + 1, e);\n+                    xmlnsSymbol = new BXMLNSSymbol(names.fromString(constVal.substring(e)), nsURI,\n+                            constantSymbol.pkgID, constantSymbol.owner);\n+                    pkgSymbol.isUsed = true;\n+                    return xmlnsSymbol;\n+                }\n+                dlog.error(pos, DiagnosticCode.INVALID_ATTRIBUTE_REFERENCE, prefix + \":\" + localname);\n+                resultType = symTable.semanticError;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cc2a59cce86e1b230db3ae2f9767fbe8a8f0b5d"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "369e84584d00e195703fb214747060d5b41ae461", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/369e84584d00e195703fb214747060d5b41ae461", "committedDate": "2020-03-16T22:19:02Z", "message": " Apply review suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "554f13caa691cc15d5e172b16f9ec1aa916dd372", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/554f13caa691cc15d5e172b16f9ec1aa916dd372", "committedDate": "2020-03-17T02:23:21Z", "message": "Merge branch 'stage' of github.com:ballerina-platform/ballerina-lang into xml-fix-unable-to-import-xml-module-unprefixed\n\n\u0001 Conflicts:\n\u0001\ttests/jballerina-unit-test/src/test/resources/test-src/types/xml/xml-attribute-access-lax-behavior.bal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87010786ada5e5c56606860e10bd37964acace06", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/87010786ada5e5c56606860e10bd37964acace06", "committedDate": "2020-03-17T02:39:32Z", "message": "Fix test failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NzMwNDA0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21839#pullrequestreview-375730404", "createdAt": "2020-03-17T04:15:14Z", "commit": {"oid": "87010786ada5e5c56606860e10bd37964acace06"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3817, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}