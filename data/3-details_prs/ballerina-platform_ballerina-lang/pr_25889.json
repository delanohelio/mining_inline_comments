{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4NjY5NzU5", "number": 25889, "title": "Enable formatting for new syntax changes and fix formatting issues", "bodyText": "Purpose\n\n\nEnables formatting support for the following.\n\nObject Constructor Expressions (abstract objects and anon objects)\nDo Statement\nOn Fail Clause:\n\nDo Statements\nMatch Statements\nForeach Statements\nWhile Statements\nLock Statements\n\n\nIsolated Functions\n\n\n\nFix some formatting issues.\n\n\nHandle comments in the source code.\n\n\nFixes #25865\nFixes #25788\nFixes #25786\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-09-17T13:28:57Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25889", "merged": true, "mergeCommit": {"oid": "d1f1ef2279a3040612b5fd85463d7f2950a63d32"}, "closed": true, "closedAt": "2020-09-17T14:42:06Z", "author": {"login": "IrushiL"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJwz0mAH2gAyNDg4NjY5NzU5OmFkOGJhNmU0YjJmYjJiZjdiNTZkMTFmZDllMTNkZGRhNzM2Y2U0NGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJyDgNAFqTQ5MDY3NDE0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ad8ba6e4b2fb2bf7b56d11fd9e13ddda736ce44d", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ad8ba6e4b2fb2bf7b56d11fd9e13ddda736ce44d", "committedDate": "2020-09-17T13:14:36Z", "message": "Fix the issue with comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "790b379f16ab34a7c04e0b2ac26a9a36b36841ed", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/790b379f16ab34a7c04e0b2ac26a9a36b36841ed", "committedDate": "2020-09-17T13:14:36Z", "message": "Add object constructor node"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b05b56e8ea7a3aace2992b98e494fe4ddc33675", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8b05b56e8ea7a3aace2992b98e494fe4ddc33675", "committedDate": "2020-09-17T13:14:36Z", "message": "Support isolated functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78fbd5396aeb201260fcc275952b57299f24d5c8", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/78fbd5396aeb201260fcc275952b57299f24d5c8", "committedDate": "2020-09-17T13:14:36Z", "message": "Add do and on fail nodes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2b455c81b1bbe5c91e6857d389253ba47323a8f", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b2b455c81b1bbe5c91e6857d389253ba47323a8f", "committedDate": "2020-09-17T13:14:36Z", "message": "Enable the match statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "066982974f8d8f2e6c493939d5c4e20e32deec1a", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/066982974f8d8f2e6c493939d5c4e20e32deec1a", "committedDate": "2020-09-17T13:14:37Z", "message": "Enable on fail for match statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b94f403861f6a142eabdc4a5819850674c505cf2", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b94f403861f6a142eabdc4a5819850674c505cf2", "committedDate": "2020-09-17T13:14:37Z", "message": "Enable on fail for foreach statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e05be59d6546f7ef3a9259602108b0d6cc074c28", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e05be59d6546f7ef3a9259602108b0d6cc074c28", "committedDate": "2020-09-17T13:14:37Z", "message": "Enable foreach statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a661618631ab248624fbd3004f7cc548662ad723", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a661618631ab248624fbd3004f7cc548662ad723", "committedDate": "2020-09-17T13:14:37Z", "message": "Enable on fail for while statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5d57ec322cb154bcc9ad019ecaea91af5fa60ba", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b5d57ec322cb154bcc9ad019ecaea91af5fa60ba", "committedDate": "2020-09-17T13:14:37Z", "message": "Enable lock statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b7191d711caa198d6d410c4e4280c19f55c6760", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2b7191d711caa198d6d410c4e4280c19f55c6760", "committedDate": "2020-09-17T13:14:37Z", "message": "Enable on fail for lock statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdce13f26e83ff1b287228902f068e95bd5a2616", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bdce13f26e83ff1b287228902f068e95bd5a2616", "committedDate": "2020-09-17T13:14:37Z", "message": "Fix the anonymous object variable declaration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNTk5NTMw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25889#pullrequestreview-490599530", "createdAt": "2020-09-17T13:33:43Z", "commit": {"oid": "bdce13f26e83ff1b287228902f068e95bd5a2616"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fd73cfaca6227cef1547b7a170c3dc8a4dd163f", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9fd73cfaca6227cef1547b7a170c3dc8a4dd163f", "committedDate": "2020-09-17T13:36:40Z", "message": "Remove previous object related test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNjAxOTg1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25889#pullrequestreview-490601985", "createdAt": "2020-09-17T13:36:19Z", "commit": {"oid": "bdce13f26e83ff1b287228902f068e95bd5a2616"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzozNjoxOVrOHTiljA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzozNzoxOVrOHTioXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MTY2MA==", "bodyText": "Can invert the conditions and do an early exit.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25889#discussion_r490251660", "createdAt": "2020-09-17T13:36:19Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormatterUtils.java", "diffHunk": "@@ -244,15 +290,90 @@ static Token formatToken(Token token, int leadingSpaces, int trailingSpaces, int\n         if (token == null) {\n             return token;\n         }\n-        MinutiaeList newLeadingMinutiaeList = modifyMinutiaeList(leadingSpaces, leadingNewLines);\n-        MinutiaeList newTrailingMinutiaeList = modifyMinutiaeList(trailingSpaces, trailingNewLines);\n+        MinutiaeList newLeadingMinutiaeList = preserveComments(token.leadingMinutiae(), trailingNewLines)\n+                .add(createWhitespaceMinutiae(getWhiteSpaces(leadingSpaces, leadingNewLines)));\n+        MinutiaeList newTrailingMinutiaeList = preserveComments(token.trailingMinutiae(), trailingNewLines)\n+                .add(createWhitespaceMinutiae(getWhiteSpaces(trailingSpaces, trailingNewLines)));\n \n         return token.modify(newLeadingMinutiaeList, newTrailingMinutiaeList);\n     }\n \n-    private static MinutiaeList modifyMinutiaeList(int spaces, int newLines) {\n-        Minutiae minutiae = createWhitespaceMinutiae(getWhiteSpaces(spaces, newLines));\n-        return createMinutiaeList(minutiae);\n+    private static MinutiaeList preserveComments(MinutiaeList minutiaeList, int trailingNewLines) {\n+        MinutiaeList minutiaes = AbstractNodeFactory.createEmptyMinutiaeList();\n+        if (minutiaeList.size() > 0) {\n+            int count = commentCount(minutiaeList);\n+            if (count > 0) {\n+                int processedCount = 0;\n+                for (int i = 0; i < minutiaeList.size(); i++) {\n+                    Minutiae minutiae = minutiaeList.get(i);\n+                    minutiaes = minutiaes.add(minutiae);\n+                    if (minutiae.kind() == SyntaxKind.COMMENT_MINUTIAE) {\n+                        processedCount++;\n+                        if (processedCount == count) {\n+                            if (trailingNewLines == 0) {\n+                                minutiaes = minutiaes.add(AbstractNodeFactory\n+                                        .createEndOfLineMinutiae(System.getProperty(LINE_SEPARATOR)));\n+                            }\n+                            break;\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+        return minutiaes;\n+    }\n+\n+    private static int commentCount(MinutiaeList minutiaeList) {\n+        int count = 0;\n+        for (int i = 0; i < minutiaeList.size(); i++) {\n+            if (minutiaeList.get(i).kind() == SyntaxKind.COMMENT_MINUTIAE) {\n+                count++;\n+            }\n+        }\n+        return count;\n+    }\n+\n+    private static int leadingNewLines(NonTerminalNode parent, Token node) {\n+        int count = 0;\n+        if (parent != null) {\n+            int childLocation = getChildLocation(parent, node);\n+            if (parent.children().size() > childLocation + 1) {\n+                Token nextToken = getFirstToken(parent.children().get(childLocation + 1));\n+                if (nextToken != null && nextToken.containsLeadingMinutiae()) {\n+                    MinutiaeList minutiaes = nextToken.leadingMinutiae();\n+                    if (commentCount(minutiaes) > 0) {\n+                        for (Minutiae minutiae : minutiaes) {\n+                            if (minutiae.kind() == SyntaxKind.END_OF_LINE_MINUTIAE) {\n+                                count++;\n+                            } else {\n+                                break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdce13f26e83ff1b287228902f068e95bd5a2616"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MTg1OA==", "bodyText": "Same as above", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25889#discussion_r490251858", "createdAt": "2020-09-17T13:36:35Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormatterUtils.java", "diffHunk": "@@ -410,6 +535,18 @@ private static Indentation getBlockParent(Node node) {\n         return new Indentation(null, false);\n     }\n \n+    static boolean addNewTrailingLine(NonTerminalNode parent, NonTerminalNode node) {\n+        if (parent != null) {\n+            int childLocation = getChildLocation(parent, node);\n+            if (parent.children().size() > childLocation + 1) {\n+                Token nextToken = getFirstToken(parent.children().get(childLocation + 1));\n+                if (nextToken != null && nextToken.containsLeadingMinutiae()) {\n+                    return (nextToken.leadingMinutiae().get(0).kind() != SyntaxKind.END_OF_LINE_MINUTIAE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdce13f26e83ff1b287228902f068e95bd5a2616"}, "originalPosition": 247}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MjI2Mw==", "bodyText": "Additional parenthesis around the syntax kind", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25889#discussion_r490252263", "createdAt": "2020-09-17T13:37:08Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormatterUtils.java", "diffHunk": "@@ -134,6 +167,14 @@ static DiagnosticPos getPosition(Node node) {\n                 return parent;\n             }\n         }\n+        if (parentKind == (SyntaxKind.OBJECT_CONSTRUCTOR) && grandParent != null &&\n+                grandParent.kind() == (SyntaxKind.LOCAL_VAR_DECL)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdce13f26e83ff1b287228902f068e95bd5a2616"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MjM4MA==", "bodyText": "same as above", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25889#discussion_r490252380", "createdAt": "2020-09-17T13:37:19Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormatterUtils.java", "diffHunk": "@@ -134,6 +167,14 @@ static DiagnosticPos getPosition(Node node) {\n                 return parent;\n             }\n         }\n+        if (parentKind == (SyntaxKind.OBJECT_CONSTRUCTOR) && grandParent != null &&\n+                grandParent.kind() == (SyntaxKind.LOCAL_VAR_DECL)) {\n+            return grandParent;\n+        }\n+        if (parentKind == (SyntaxKind.TYPE_CAST_PARAM) && grandParent != null &&\n+                grandParent.kind() == (SyntaxKind.TYPE_CAST_EXPRESSION)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdce13f26e83ff1b287228902f068e95bd5a2616"}, "originalPosition": 103}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNjA5NzA4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25889#pullrequestreview-490609708", "createdAt": "2020-09-17T13:44:26Z", "commit": {"oid": "bdce13f26e83ff1b287228902f068e95bd5a2616"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzo0NDoyNlrOHTi8Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzo0NDoyNlrOHTi8Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1NzQ2Ng==", "bodyText": "Shall we invert the condition with a continue?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25889#discussion_r490257466", "createdAt": "2020-09-17T13:44:26Z", "author": {"login": "nadeeshaan"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormatterUtils.java", "diffHunk": "@@ -244,15 +290,90 @@ static Token formatToken(Token token, int leadingSpaces, int trailingSpaces, int\n         if (token == null) {\n             return token;\n         }\n-        MinutiaeList newLeadingMinutiaeList = modifyMinutiaeList(leadingSpaces, leadingNewLines);\n-        MinutiaeList newTrailingMinutiaeList = modifyMinutiaeList(trailingSpaces, trailingNewLines);\n+        MinutiaeList newLeadingMinutiaeList = preserveComments(token.leadingMinutiae(), trailingNewLines)\n+                .add(createWhitespaceMinutiae(getWhiteSpaces(leadingSpaces, leadingNewLines)));\n+        MinutiaeList newTrailingMinutiaeList = preserveComments(token.trailingMinutiae(), trailingNewLines)\n+                .add(createWhitespaceMinutiae(getWhiteSpaces(trailingSpaces, trailingNewLines)));\n \n         return token.modify(newLeadingMinutiaeList, newTrailingMinutiaeList);\n     }\n \n-    private static MinutiaeList modifyMinutiaeList(int spaces, int newLines) {\n-        Minutiae minutiae = createWhitespaceMinutiae(getWhiteSpaces(spaces, newLines));\n-        return createMinutiaeList(minutiae);\n+    private static MinutiaeList preserveComments(MinutiaeList minutiaeList, int trailingNewLines) {\n+        MinutiaeList minutiaes = AbstractNodeFactory.createEmptyMinutiaeList();\n+        if (minutiaeList.size() > 0) {\n+            int count = commentCount(minutiaeList);\n+            if (count > 0) {\n+                int processedCount = 0;\n+                for (int i = 0; i < minutiaeList.size(); i++) {\n+                    Minutiae minutiae = minutiaeList.get(i);\n+                    minutiaes = minutiaes.add(minutiae);\n+                    if (minutiae.kind() == SyntaxKind.COMMENT_MINUTIAE) {\n+                        processedCount++;\n+                        if (processedCount == count) {\n+                            if (trailingNewLines == 0) {\n+                                minutiaes = minutiaes.add(AbstractNodeFactory\n+                                        .createEndOfLineMinutiae(System.getProperty(LINE_SEPARATOR)));\n+                            }\n+                            break;\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+        return minutiaes;\n+    }\n+\n+    private static int commentCount(MinutiaeList minutiaeList) {\n+        int count = 0;\n+        for (int i = 0; i < minutiaeList.size(); i++) {\n+            if (minutiaeList.get(i).kind() == SyntaxKind.COMMENT_MINUTIAE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdce13f26e83ff1b287228902f068e95bd5a2616"}, "originalPosition": 170}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56f1a7011a0678f5093e55d210fce21ef9a7630e", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/56f1a7011a0678f5093e55d210fce21ef9a7630e", "committedDate": "2020-09-17T14:06:03Z", "message": "Fix review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNjc0MTQ3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25889#pullrequestreview-490674147", "createdAt": "2020-09-17T14:41:39Z", "commit": {"oid": "56f1a7011a0678f5093e55d210fce21ef9a7630e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4604, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}