{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NzM5MzQx", "number": 25837, "title": "Fix unreachable code issue in match-stmt", "bodyText": "Purpose\n$subject. Changed the DataFlowAnalyser in order to fix the issue.\nFixes #25813\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-09-16T05:33:24Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25837", "merged": true, "mergeCommit": {"oid": "63fadbbfa602d680cd35d75ae3ff21737a6d39a7"}, "closed": true, "closedAt": "2020-09-16T14:18:48Z", "author": {"login": "KavinduZoysa"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJVfDsgH2gAyNDg3NzM5MzQxOmE5MzAyMDUwYTg1OTY2Y2FmODU2N2E0NWVkN2ZmNTNiNTIwMTA2ODk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJdH_sAFqTQ4OTY2NTY0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a9302050a85966caf8567a45ed7ff53b52010689", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a9302050a85966caf8567a45ed7ff53b52010689", "committedDate": "2020-09-16T05:24:29Z", "message": "Change the dataflow"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a8307cbb2cb866c7eee2f408151ca145ca2964c", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6a8307cbb2cb866c7eee2f408151ca145ca2964c", "committedDate": "2020-09-16T05:32:12Z", "message": "Add tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NjY1NjQ2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25837#pullrequestreview-489665646", "createdAt": "2020-09-16T14:09:18Z", "commit": {"oid": "6a8307cbb2cb866c7eee2f408151ca145ca2964c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNDowOToxOVrOHSytsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNDowOToxOVrOHSytsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ2NzMxNQ==", "bodyText": "I think this should be named is last clause", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25837#discussion_r489467315", "createdAt": "2020-09-16T14:09:19Z", "author": {"login": "rdhananjaya"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/DataflowAnalyzer.java", "diffHunk": "@@ -569,9 +571,53 @@ public void visit(BLangIf ifNode) {\n \n     @Override\n     public void visit(BLangMatchStatement matchStatement) {\n+\n+        analyzeNode(matchStatement.expr, env);\n         if (matchStatement.onFailClause != null) {\n             analyzeNode(matchStatement.onFailClause, env);\n         }\n+\n+        Map<BSymbol, InitStatus> uninitVars = new HashMap<>();\n+        BranchResult lastPatternResult = null;\n+        for (int i = 0; i < matchStatement.getMatchClauses().size(); i++) {\n+            BLangMatchClause matchClause = matchStatement.getMatchClauses().get(i);\n+            if (isLastPatternContainsIn(matchClause)) {\n+                lastPatternResult = analyzeBranch(matchClause, env);\n+            } else {\n+                BranchResult result = analyzeBranch(matchClause, env);\n+                // If the flow was terminated within the block, then that branch should not be considered for\n+                // analyzing the data-flow for the downstream code.\n+                if (result.flowTerminated) {\n+                    continue;\n+                }\n+                uninitVars = mergeUninitializedVars(uninitVars, result.uninitializedVars);\n+            }\n+        }\n+\n+        if (lastPatternResult != null) {\n+            // only if last pattern is present, uninitializedVars should be updated\n+            uninitVars = mergeUninitializedVars(uninitVars, lastPatternResult.uninitializedVars);\n+            this.uninitializedVars = uninitVars;\n+            return;\n+        }\n+        uninitVars = mergeUninitializedVars(new HashMap<>(), this.uninitializedVars);\n+        this.uninitializedVars = uninitVars;\n+    }\n+\n+    @Override\n+    public void visit(BLangMatchClause matchClause) {\n+\n+        analyzeNode(matchClause.blockStmt, env);\n+    }\n+\n+    private boolean isLastPatternContainsIn(BLangMatchClause matchClause) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a8307cbb2cb866c7eee2f408151ca145ca2964c"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4755, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}