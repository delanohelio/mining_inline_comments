{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0Mjc4Mzcz", "number": 24862, "title": "Fix `is type` check for `readonly` fields", "bodyText": "Purpose\n$title. Fixes #24495 - Runtime is checks should change for readonly fields\nThis PR also\nFixes #24858 - Stack overflow error with checkIsType for objects with fields of the same type\nFixes #24752 - Object sub-typing checks produce incorrect results\nFixes #24739 - Issue in object sub-typing checks with finite-typed fields\nFixes #25199 - org.ballerinalang.jvm.types.BType's equals() method only looks at the module name and not the org-name/version\nApproach\nWhen the is check is used with records or objects, we pass the value also, to do the is like check for readonly fields since such fields cannot change.\nSamples\nimport ballerina/io;\n\nconst HUNDRED = 100;\n\ntype Foo record {\n    HUNDRED i;\n};\n\ntype Bar record {\n    readonly string|int i;\n};\n\npublic function main() {\n    Bar b1 = {i: 123};\n    io:println(<any> b1 is Foo); // prints `false`\n\n    Bar b2 = {i: 100};\n    io:println(<any> b2 is Foo); // prints `true` now, since the `i` field of `b2` is and will continue to be `100`\n}\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-07-21T08:46:33Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862", "merged": true, "mergeCommit": {"oid": "5680497339e727bec126927a7441e29218068a29"}, "closed": true, "closedAt": "2020-09-14T07:10:14Z", "author": {"login": "MaryamZi"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczk7yDAH2gAyNDU0Mjc4MzczOmUxZDc3YTg4ZjU1YzJjOTExMmNlOTY1YzE5ZmEwYjg3OGY2Y2ZlODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdIty6XAFqTQ4NzQ3MDQzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e1d77a88f55c2c9112ce965c19fa0b878f6cfe85", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e1d77a88f55c2c9112ce965c19fa0b878f6cfe85", "committedDate": "2020-07-10T14:58:06Z", "message": "Consider field readonly-ness in is type check - phase I"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d311dd1f58e78441b983f182daa4301168699ea1", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d311dd1f58e78441b983f182daa4301168699ea1", "committedDate": "2020-07-13T18:06:56Z", "message": "Add basic tests for records"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "826232641212ce95a07b4cc7d037efc77ec62cfb", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/826232641212ce95a07b4cc7d037efc77ec62cfb", "committedDate": "2020-07-20T05:47:11Z", "message": "Fix subtyping for objects with module-level visibility fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d66b2e23b7c3ecfcdfb8f3b2c163b14ca93b6c67", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d66b2e23b7c3ecfcdfb8f3b2c163b14ca93b6c67", "committedDate": "2020-07-20T11:56:59Z", "message": "Add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a40303998face0e7b8d435e3758db20b4938cf9", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5a40303998face0e7b8d435e3758db20b4938cf9", "committedDate": "2020-07-21T04:56:57Z", "message": "Refactor code and use unresolved types for object field is type check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "519b7f40ff23002908c73fdeac34992a89bf6914", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/519b7f40ff23002908c73fdeac34992a89bf6914", "committedDate": "2020-07-21T06:00:02Z", "message": "Merge branch 'master' of https://github.com/ballerina-lang/ballerina into fix-is-type-for-readonly-fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f075a5fa7aceab78f9e146501651751d7062518b", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f075a5fa7aceab78f9e146501651751d7062518b", "committedDate": "2020-07-21T07:22:35Z", "message": "Add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89d22eb7f7e942abf06ad82febb4cb33835d0cdd", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/89d22eb7f7e942abf06ad82febb4cb33835d0cdd", "committedDate": "2020-07-21T08:39:28Z", "message": "Remove unused variable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0ODEyNTIw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#pullrequestreview-454812520", "createdAt": "2020-07-24T11:25:51Z", "commit": {"oid": "89d22eb7f7e942abf06ad82febb4cb33835d0cdd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMToyNTo1MVrOG2r7SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMToyNTo1MVrOG2r7SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk5NTk3Ng==", "bodyText": "I think HashSet is a better choice if we are searching in the unresolvedTypes.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#discussion_r459995976", "createdAt": "2020-07-24T11:25:51Z", "author": {"login": "KRVPerera"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/TypeChecker.java", "diffHunk": "@@ -975,6 +1070,137 @@ private static boolean checkIsRecordType(BType sourceType, BRecordType targetTyp\n         return true;\n     }\n \n+    private static boolean checkRecordBelongsToAnydataType(MapValue sourceVal, BRecordType recordType,\n+                                                           List<TypePair> unresolvedTypes) {\n+        BType targetType = BTypes.typeAnydata;\n+        TypePair pair = new TypePair(recordType, targetType);\n+        if (unresolvedTypes.contains(pair)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89d22eb7f7e942abf06ad82febb4cb33835d0cdd"}, "originalPosition": 133}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6cb14f2973c5216909bf7c103ce6aea71befc12", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d6cb14f2973c5216909bf7c103ce6aea71befc12", "committedDate": "2020-07-27T05:10:04Z", "message": "Merge branch 'master' of https://github.com/ballerina-lang/ballerina into fix-is-type-for-readonly-fields"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMjMxMzMx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#pullrequestreview-462231331", "createdAt": "2020-08-06T06:51:39Z", "commit": {"oid": "d6cb14f2973c5216909bf7c103ce6aea71befc12"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNjo1MTo0MFrOG8li6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNjo1MTo0MFrOG8li6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4Mjg4OQ==", "bodyText": "What's the reason to call checkIslikeType() for readonly fields and checkIsType() for non-readonly fields?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#discussion_r466182889", "createdAt": "2020-08-06T06:51:40Z", "author": {"login": "pubudu91"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/TypeChecker.java", "diffHunk": "@@ -741,6 +796,46 @@ private static boolean checkIsMapType(BType sourceType, BMapType targetType, Lis\n         }\n     }\n \n+    private static boolean checkIsMapType(Object sourceVal, BType sourceType, BMapType targetType,\n+                                          List<TypePair> unresolvedTypes) {\n+        BType targetConstrainedType = targetType.getConstrainedType();\n+        switch (sourceType.getTag()) {\n+            case TypeTags.MAP_TAG:\n+                return checkConstraints(((BMapType) sourceType).getConstrainedType(), targetConstrainedType,\n+                                        unresolvedTypes);\n+            case TypeTags.RECORD_TYPE_TAG:\n+                MapValue sourceMapValue = (MapValue) sourceVal;\n+                BRecordType recType = (BRecordType) sourceType;\n+\n+                for (BField field : recType.getFields().values()) {\n+                    if (!Flags.isFlagOn(field.flags, Flags.READONLY)) {\n+                        if (!checkIsType(field.type, targetConstrainedType, unresolvedTypes)) {\n+                            return false;\n+                        }\n+                        continue;\n+                    }\n+\n+                    BString name = StringUtils.fromString(field.name);\n+\n+                    if (Flags.isFlagOn(field.flags, Flags.OPTIONAL) && !sourceMapValue.containsKey(name)) {\n+                        continue;\n+                    }\n+\n+                    if (!checkIsLikeType(sourceMapValue.get(name), targetConstrainedType)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6cb14f2973c5216909bf7c103ce6aea71befc12"}, "originalPosition": 107}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNDMzNDQ4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#pullrequestreview-462433448", "createdAt": "2020-08-06T11:30:34Z", "commit": {"oid": "d6cb14f2973c5216909bf7c103ce6aea71befc12"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMTozMDozNFrOG8vlOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMTozMDozNFrOG8vlOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM0NzMyMw==", "bodyText": "We should consider the org name too right? Not sure whether the version should be considered though", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#discussion_r466347323", "createdAt": "2020-08-06T11:30:34Z", "author": {"login": "pubudu91"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/TypeChecker.java", "diffHunk": "@@ -1132,26 +1363,70 @@ private static boolean checkObjectEquivalency(BType sourceType, BObjectType targ\n             return false;\n         }\n \n+\n+        String targetTypeModule = Optional.ofNullable(targetType.getPackage()).map(BPackage::getName).orElse(\"\");\n+        String sourceTypeModule = Optional.ofNullable(sourceObjectType.getPackage()).map(BPackage::getName).orElse(\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6cb14f2973c5216909bf7c103ce6aea71befc12"}, "originalPosition": 281}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34a4a21c5995a5e98cf15e0ac19c0b8ff758c20f", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/34a4a21c5995a5e98cf15e0ac19c0b8ff758c20f", "committedDate": "2020-08-10T03:12:19Z", "message": "Merge branch 'master' of https://github.com/ballerina-lang/ballerina into fix-is-type-for-readonly-fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d23769ed66098c9697e620d5714559780588b0d", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8d23769ed66098c9697e620d5714559780588b0d", "committedDate": "2020-08-11T06:34:16Z", "message": "Consider org-name/version for type equality and object subtyping"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0OTA3ODE1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#pullrequestreview-464907815", "createdAt": "2020-08-11T09:40:30Z", "commit": {"oid": "8d23769ed66098c9697e620d5714559780588b0d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwOTo0MDozMFrOG-wPjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwOTo0MDozMFrOG-wPjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1NTMxMA==", "bodyText": "targetTypeTag ? as you have already acquired it", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#discussion_r468455310", "createdAt": "2020-08-11T09:40:30Z", "author": {"login": "Kishanthan"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/TypeChecker.java", "diffHunk": "@@ -641,6 +642,60 @@ public static boolean checkIsType(BType sourceType, BType targetType, List<TypeP\n         }\n     }\n \n+    private static boolean checkIsType(Object sourceVal, BType sourceType, BType targetType,\n+                                      List<TypePair> unresolvedTypes) {\n+        int sourceTypeTag = sourceType.getTag();\n+        int targetTypeTag = targetType.getTag();\n+\n+        if (sourceTypeTag != TypeTags.RECORD_TYPE_TAG && sourceTypeTag != TypeTags.OBJECT_TYPE_TAG) {\n+            return checkIsType(sourceType, targetType);\n+        }\n+\n+        if (targetType.getTag() == TypeTags.INTERSECTION_TAG) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d23769ed66098c9697e620d5714559780588b0d"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0OTEwMDYx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#pullrequestreview-464910061", "createdAt": "2020-08-11T09:43:39Z", "commit": {"oid": "8d23769ed66098c9697e620d5714559780588b0d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwOTo0MzozOVrOG-wWeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwOTo0MzozOVrOG-wWeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1NzA4MA==", "bodyText": "this flag can move within the if body? as it is used only there.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#discussion_r468457080", "createdAt": "2020-08-11T09:43:39Z", "author": {"login": "Kishanthan"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/TypeChecker.java", "diffHunk": "@@ -975,6 +1070,137 @@ private static boolean checkIsRecordType(BType sourceType, BRecordType targetTyp\n         return true;\n     }\n \n+    private static boolean checkRecordBelongsToAnydataType(MapValue sourceVal, BRecordType recordType,\n+                                                           List<TypePair> unresolvedTypes) {\n+        BType targetType = BTypes.typeAnydata;\n+        TypePair pair = new TypePair(recordType, targetType);\n+        if (unresolvedTypes.contains(pair)) {\n+            return true;\n+        }\n+        unresolvedTypes.add(pair);\n+\n+        Map<String, BField> fields = recordType.getFields();\n+\n+        for (BField field : fields.values()) {\n+            String fieldName = field.getFieldName();\n+\n+            boolean optionalField = Flags.isFlagOn(field.flags, Flags.OPTIONAL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d23769ed66098c9697e620d5714559780588b0d"}, "originalPosition": 143}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0OTEwMzA2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#pullrequestreview-464910306", "createdAt": "2020-08-11T09:43:59Z", "commit": {"oid": "8d23769ed66098c9697e620d5714559780588b0d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwOTo0Mzo1OVrOG-wXLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwOTo0Mzo1OVrOG-wXLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1NzI2Mw==", "bodyText": "merge these two ifs", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#discussion_r468457263", "createdAt": "2020-08-11T09:43:59Z", "author": {"login": "Kishanthan"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/TypeChecker.java", "diffHunk": "@@ -975,6 +1070,137 @@ private static boolean checkIsRecordType(BType sourceType, BRecordType targetTyp\n         return true;\n     }\n \n+    private static boolean checkRecordBelongsToAnydataType(MapValue sourceVal, BRecordType recordType,\n+                                                           List<TypePair> unresolvedTypes) {\n+        BType targetType = BTypes.typeAnydata;\n+        TypePair pair = new TypePair(recordType, targetType);\n+        if (unresolvedTypes.contains(pair)) {\n+            return true;\n+        }\n+        unresolvedTypes.add(pair);\n+\n+        Map<String, BField> fields = recordType.getFields();\n+\n+        for (BField field : fields.values()) {\n+            String fieldName = field.getFieldName();\n+\n+            boolean optionalField = Flags.isFlagOn(field.flags, Flags.OPTIONAL);\n+\n+            if (Flags.isFlagOn(field.flags, Flags.READONLY)) {\n+                BString fieldNameBString = StringUtils.fromString(fieldName);\n+\n+                if (optionalField) {\n+                    if (!sourceVal.containsKey(fieldNameBString)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d23769ed66098c9697e620d5714559780588b0d"}, "originalPosition": 149}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0OTExNjkx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#pullrequestreview-464911691", "createdAt": "2020-08-11T09:45:55Z", "commit": {"oid": "8d23769ed66098c9697e620d5714559780588b0d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwOTo0NTo1NVrOG-wbrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwOTo0NTo1NVrOG-wbrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ1ODQxMg==", "bodyText": "nested ifs. can it be merged?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#discussion_r468458412", "createdAt": "2020-08-11T09:45:55Z", "author": {"login": "Kishanthan"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/TypeChecker.java", "diffHunk": "@@ -975,6 +1070,137 @@ private static boolean checkIsRecordType(BType sourceType, BRecordType targetTyp\n         return true;\n     }\n \n+    private static boolean checkRecordBelongsToAnydataType(MapValue sourceVal, BRecordType recordType,\n+                                                           List<TypePair> unresolvedTypes) {\n+        BType targetType = BTypes.typeAnydata;\n+        TypePair pair = new TypePair(recordType, targetType);\n+        if (unresolvedTypes.contains(pair)) {\n+            return true;\n+        }\n+        unresolvedTypes.add(pair);\n+\n+        Map<String, BField> fields = recordType.getFields();\n+\n+        for (BField field : fields.values()) {\n+            String fieldName = field.getFieldName();\n+\n+            boolean optionalField = Flags.isFlagOn(field.flags, Flags.OPTIONAL);\n+\n+            if (Flags.isFlagOn(field.flags, Flags.READONLY)) {\n+                BString fieldNameBString = StringUtils.fromString(fieldName);\n+\n+                if (optionalField) {\n+                    if (!sourceVal.containsKey(fieldNameBString)) {\n+                        continue;\n+                    }\n+                }\n+\n+                if (!checkIsLikeType(sourceVal.get(fieldNameBString), targetType)) {\n+                    return false;\n+                }\n+            } else {\n+                if (!checkIsType(field.type, targetType, unresolvedTypes)) {\n+                    return false;\n+                }\n+            }\n+        }\n+\n+        if (recordType.sealed) {\n+            return true;\n+        }\n+\n+        return checkIsType(recordType.restFieldType, targetType, unresolvedTypes);\n+    }\n+\n+    private static boolean checkIsRecordType(Object sourceVal, BType sourceType, BRecordType targetType,\n+                                             List<TypePair> unresolvedTypes) {\n+        if (sourceType.getTag() != TypeTags.RECORD_TYPE_TAG) {\n+            return false;\n+        }\n+\n+        TypePair pair = new TypePair(sourceType, targetType);\n+        if (unresolvedTypes.contains(pair)) {\n+            return true;\n+        }\n+        unresolvedTypes.add(pair);\n+\n+        BRecordType sourceRecordType = (BRecordType) sourceType;\n+        if (targetType.sealed && !sourceRecordType.sealed) {\n+            return false;\n+        }\n+\n+        if (!sourceRecordType.sealed &&\n+                !checkIsType(sourceRecordType.restFieldType, targetType.restFieldType, unresolvedTypes)) {\n+            return false;\n+        }\n+\n+        MapValue sourceRecordValue = (MapValue) sourceVal;\n+\n+        Map<String, BField> sourceFields = sourceRecordType.getFields();\n+        Set<String> targetFieldNames = targetType.getFields().keySet();\n+\n+        for (BField targetField : targetType.getFields().values()) {\n+            String fieldName = targetField.getFieldName();\n+            BField sourceField = sourceFields.get(fieldName);\n+\n+            if (sourceField == null) {\n+                return false;\n+            }\n+\n+            if (hasIncompatibleReadOnlyFlags(targetField, sourceField)) {\n+                return false;\n+            }\n+\n+            boolean optionalTargetField = Flags.isFlagOn(targetField.flags, Flags.OPTIONAL);\n+            boolean optionalSourceField = Flags.isFlagOn(sourceField.flags, Flags.OPTIONAL);\n+\n+            if (Flags.isFlagOn(sourceField.flags, Flags.READONLY)) {\n+                BString fieldNameBString = StringUtils.fromString(fieldName);\n+\n+                if (optionalSourceField) {\n+                    if (!sourceRecordValue.containsKey(fieldNameBString)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d23769ed66098c9697e620d5714559780588b0d"}, "originalPosition": 217}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0OTE2MzUx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#pullrequestreview-464916351", "createdAt": "2020-08-11T09:52:09Z", "commit": {"oid": "8d23769ed66098c9697e620d5714559780588b0d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwOTo1MjowOVrOG-wpxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwOTo1MjowOVrOG-wpxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ2MjAyMg==", "bodyText": "EOF line?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#discussion_r468462022", "createdAt": "2020-08-11T09:52:09Z", "author": {"login": "Kishanthan"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/balo/test_projects/test_project_two/Ballerina.toml", "diffHunk": "@@ -0,0 +1,5 @@\n+[project]\n+org-name= \"testorgtwo\"\n+version= \"2.0.0\"\n+\n+[dependencies]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d23769ed66098c9697e620d5714559780588b0d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1118d66df8f9e76d8c957f60024283cdc767bb7", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a1118d66df8f9e76d8c957f60024283cdc767bb7", "committedDate": "2020-08-11T11:21:23Z", "message": "Address review suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3325b4cf811e9986121a0f5c112fb5f3d93e229d", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3325b4cf811e9986121a0f5c112fb5f3d93e229d", "committedDate": "2020-08-17T04:12:02Z", "message": "Merge branch 'master' of https://github.com/ballerina-lang/ballerina into fix-is-type-for-readonly-fields"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NjkyODEw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#pullrequestreview-469692810", "createdAt": "2020-08-18T17:53:26Z", "commit": {"oid": "3325b4cf811e9986121a0f5c112fb5f3d93e229d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo1MzoyNlrOHCfq7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo1MzoyNlrOHCfq7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3ODA5NQ==", "bodyText": "why we need another checkIsType method ? whats the purpose of this newly added method?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#discussion_r472378095", "createdAt": "2020-08-18T17:53:26Z", "author": {"login": "Kishanthan"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/TypeChecker.java", "diffHunk": "@@ -641,6 +642,60 @@ public static boolean checkIsType(BType sourceType, BType targetType, List<TypeP\n         }\n     }\n \n+    private static boolean checkIsType(Object sourceVal, BType sourceType, BType targetType,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3325b4cf811e9986121a0f5c112fb5f3d93e229d"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NjkzNjI2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#pullrequestreview-469693626", "createdAt": "2020-08-18T17:54:33Z", "commit": {"oid": "3325b4cf811e9986121a0f5c112fb5f3d93e229d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo1NDozM1rOHCftfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo1NDozM1rOHCftfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3ODc0OQ==", "bodyText": "This case seems to have a big logic. shall we move it to a separate method for better readability?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#discussion_r472378749", "createdAt": "2020-08-18T17:54:33Z", "author": {"login": "Kishanthan"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/TypeChecker.java", "diffHunk": "@@ -741,6 +796,46 @@ private static boolean checkIsMapType(BType sourceType, BMapType targetType, Lis\n         }\n     }\n \n+    private static boolean checkIsMapType(Object sourceVal, BType sourceType, BMapType targetType,\n+                                          List<TypePair> unresolvedTypes) {\n+        BType targetConstrainedType = targetType.getConstrainedType();\n+        switch (sourceType.getTag()) {\n+            case TypeTags.MAP_TAG:\n+                return checkConstraints(((BMapType) sourceType).getConstrainedType(), targetConstrainedType,\n+                                        unresolvedTypes);\n+            case TypeTags.RECORD_TYPE_TAG:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3325b4cf811e9986121a0f5c112fb5f3d93e229d"}, "originalPosition": 89}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24985b7034f8fc4d3262f537999ff4c35cb93272", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/24985b7034f8fc4d3262f537999ff4c35cb93272", "committedDate": "2020-08-19T03:05:15Z", "message": "Refactor code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89b76682f90eb58e5521c08091638ae0374f140f", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/89b76682f90eb58e5521c08091638ae0374f140f", "committedDate": "2020-08-25T04:44:21Z", "message": "Merge branch 'master' of https://github.com/ballerina-lang/ballerina into fix-is-type-for-readonly-fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14fc6498828ae44d2ceb2ceef8c341b4ee1360b6", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/14fc6498828ae44d2ceb2ceef8c341b4ee1360b6", "committedDate": "2020-08-28T05:15:43Z", "message": "Merge branch 'master' of https://github.com/ballerina-lang/ballerina into fix-is-type-for-readonly-fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad0723d42e1a559778f8fe81bfb439491f7ecf14", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ad0723d42e1a559778f8fe81bfb439491f7ecf14", "committedDate": "2020-09-06T17:59:23Z", "message": "Merge branch 'master' of https://github.com/ballerina-lang/ballerina into fix-is-type-for-readonly-fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18af91f97821563e97351992d5a6959a751b7a69", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/18af91f97821563e97351992d5a6959a751b7a69", "committedDate": "2020-09-11T14:39:48Z", "message": "Resolve conflicts and Merge branch 'master' of https://github.com/ballerina-lang/ballerina into fix-is-type-for-readonly-fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3632cbc6abece596b5b28152009556ba74ca158", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b3632cbc6abece596b5b28152009556ba74ca158", "committedDate": "2020-09-11T17:23:50Z", "message": "Fix issues due to class changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ef2b523855a0442dad39528c7e57dd6aa350750", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9ef2b523855a0442dad39528c7e57dd6aa350750", "committedDate": "2020-09-14T05:56:42Z", "message": "Merge branch 'master' of https://github.com/ballerina-lang/ballerina into fix-is-type-for-readonly-fields"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NDcwNDM2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24862#pullrequestreview-487470436", "createdAt": "2020-09-14T07:09:58Z", "commit": {"oid": "9ef2b523855a0442dad39528c7e57dd6aa350750"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3684, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}