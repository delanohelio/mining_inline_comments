{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMTU4MjA0", "number": 26930, "title": "Mark relevant stream/query lang lib methods and `StreamImplementor` methods as `isolated`", "bodyText": "Purpose\nPurpose of this PR is to mark relevant stream/query lang lib methods and StreamImplementor methods as isolated.\nFixes #26575\nFixes #26677\nApproach\nn/a\nSamples\nn/a\nRemarks\n\nballerina-platform/ballerina-spec#634\nhttps://github.com/ballerina-platform/ballerina-spec/blob/master/lang/lib/stream.bal\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-11-15T07:39:15Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26930", "merged": true, "mergeCommit": {"oid": "faec7b2a8037d42428c3723282b082d3e7ecdd08"}, "closed": true, "closedAt": "2020-11-17T03:30:52Z", "author": {"login": "grainier"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdcmmtHgH2gAyNTIxMTU4MjA0OmI2N2Q3YWI4OTllZWNjNzY2NTJhZjgzZGI5M2QxZWNkMDEyYzMyMzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddRAjpAFqTUzMTk5NjY4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b67d7ab899eecc76652af83db93d1ecd012c3232", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b67d7ab899eecc76652af83db93d1ecd012c3232", "committedDate": "2020-11-15T02:05:47Z", "message": "Mark stream langlib methods as `isolated`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c487e432803a7e7949d191088bd0ba60d0ac2d88", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c487e432803a7e7949d191088bd0ba60d0ac2d88", "committedDate": "2020-11-15T07:26:00Z", "message": "Add an util method to invoke any function as an external function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25d30962e1a3337fce30209f1c096110249fe62f", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/25d30962e1a3337fce30209f1c096110249fe62f", "committedDate": "2020-11-15T07:29:20Z", "message": "Expose scheduling to lang-internal module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8023c4b00d23c9a3d64cecd11d85124712ef5ae3", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8023c4b00d23c9a3d64cecd11d85124712ef5ae3", "committedDate": "2020-11-15T07:32:27Z", "message": "Mark `StreamImplementor` methods `isolated`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9469d31ff1cc350adaf8e37998c506af7eba8b67", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9469d31ff1cc350adaf8e37998c506af7eba8b67", "committedDate": "2020-11-15T09:18:24Z", "message": "Fix failing langlib test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNzg4MjI4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26930#pullrequestreview-530788228", "createdAt": "2020-11-15T11:07:43Z", "commit": {"oid": "8023c4b00d23c9a3d64cecd11d85124712ef5ae3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQxMTowNzo0NFrOHzewpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQxMToxMzowNFrOHzeyxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc0MzM5OQ==", "bodyText": "Shouldn't this be a non-public function in the stream langlib instead? We don't need it elsewhere, right?\nShall we also change the return type to any|error, since () is already covered in any?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26930#discussion_r523743399", "createdAt": "2020-11-15T11:07:44Z", "author": {"login": "MaryamZi"}, "path": "langlib/lang.__internal/src/main/ballerina/src/lang.__internal/stream-utils.bal", "diffHunk": "@@ -100,13 +100,23 @@ public isolated function getReturnType(any func) returns typedesc<Type> = @java:\n #\n # + strm - The stream\n # + return - An abstract object which is iterable\n-public function getIteratorObj(stream<Type, ErrorType> strm) returns\n+public isolated function getIteratorObj(stream<Type, ErrorType> strm) returns\n     object {\n-        public function next() returns record {|Type value;|}|ErrorType?;} |\n+        public isolated function next() returns record {|Type value;|}|ErrorType?;} |\n     object {\n-        public function next() returns record {|Type value;|}|ErrorType?;\n-        public function close() returns ErrorType?;\n+        public isolated function next() returns record {|Type value;|}|ErrorType?;\n+        public isolated function close() returns ErrorType?;\n     } = @java:Method {\n         'class: \"org.ballerinalang.langlib.internal.GetIteratorObj\",\n         name: \"getIteratorObj\"\n     } external;\n+\n+# Invoke a non-isolated function as an external function (workaround for isolated invocations).\n+#\n+# + func - function to invoke\n+# + args - args for the function to invoke\n+# + return - result of the invocation\n+public isolated function invokeAsExternal(any func, any|error... args) returns any|error|() = @java:Method {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8023c4b00d23c9a3d64cecd11d85124712ef5ae3"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzc0Mzk0Mw==", "bodyText": "Can't we do\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (res is _Frame) {\n          \n          \n            \n                        return res;\n          \n          \n            \n                    } else if (res is error) {\n          \n          \n            \n                        return res;\n          \n          \n            \n                    if (res is _Frame|error) {\n          \n          \n            \n                        return res;", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26930#discussion_r523743943", "createdAt": "2020-11-15T11:13:04Z", "author": {"login": "MaryamZi"}, "path": "langlib/lang.query/src/main/ballerina/src/lang.query/types.bal", "diffHunk": "@@ -66,9 +66,16 @@ class _StreamPipeline {\n         self.resType = resType;\n     }\n \n-    public function next() returns _Frame|error? {\n+    public isolated function next() returns _Frame|error? {\n         _StreamFunction sf = self.streamFunction;\n-        return sf.process();\n+        var res = internal:invokeAsExternal(sf.process);\n+        if (res is _Frame) {\n+            return res;\n+        } else if (res is error) {\n+            return res;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9469d31ff1cc350adaf8e37998c506af7eba8b67"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d97ca9cdac22409c90315440b107d70588065625", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d97ca9cdac22409c90315440b107d70588065625", "committedDate": "2020-11-15T13:35:21Z", "message": "Improve return types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fb340b980e184a3b63a2aba4c5a4eabe58d40ce", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6fb340b980e184a3b63a2aba4c5a4eabe58d40ce", "committedDate": "2020-11-15T13:35:40Z", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into fix-26677"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5b494c7d52ef94a79f548c0137376c9fd10268a", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c5b494c7d52ef94a79f548c0137376c9fd10268a", "committedDate": "2020-11-16T07:18:50Z", "message": "Improve stream implementor type checking"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16cee81ca96dac252b74288b322557e4aef597b6", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/16cee81ca96dac252b74288b322557e4aef597b6", "committedDate": "2020-11-16T07:19:25Z", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into fix-26677"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd70c586b77f7fbfbb191cd0c17d5724ff013449", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cd70c586b77f7fbfbb191cd0c17d5724ff013449", "committedDate": "2020-11-16T08:14:19Z", "message": "Move stream implementor tests to jBal unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c649f4e8307870d9d330ce49cc1cd7fe8da2dccd", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c649f4e8307870d9d330ce49cc1cd7fe8da2dccd", "committedDate": "2020-11-16T08:55:32Z", "message": "Fix check styles"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMTk2NTgy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26930#pullrequestreview-531196582", "createdAt": "2020-11-16T10:33:21Z", "commit": {"oid": "c649f4e8307870d9d330ce49cc1cd7fe8da2dccd"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDozMzoyMVrOHz0JBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDozOTo0MVrOHz0kag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA5MzcwMg==", "bodyText": "Should we add a Name in org.wso2.ballerinalang.compiler.util.Names instead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26930#discussion_r524093702", "createdAt": "2020-11-16T10:33:21Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -3013,6 +3013,28 @@ public void visit(BLangTypeInit cIExpr) {\n                 if (!cIExpr.initInvocation.argExprs.isEmpty()) {\n                     BLangExpression iteratorExpr = cIExpr.initInvocation.argExprs.get(0);\n                     BType constructType = checkExpr(iteratorExpr, env, symTable.noType);\n+                    BType closeableIteratorType = symTable.langQueryModuleSymbol.scope\n+                            .lookup(names.fromString(BLangCompilerConstants.ABSTRACT_CLOSEABLE_ITERATOR_CLASS))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c649f4e8307870d9d330ce49cc1cd7fe8da2dccd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDEwMDcxNA==", "bodyText": "Can't we look up the two functions, next and close, and if not null check if the isolated flag is on? That way we can give a more descriptive error, avoid looking up the iterators for each iteration, and also continue the rest of the analysis for the object?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26930#discussion_r524100714", "createdAt": "2020-11-16T10:39:41Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -3013,6 +3013,28 @@ public void visit(BLangTypeInit cIExpr) {\n                 if (!cIExpr.initInvocation.argExprs.isEmpty()) {\n                     BLangExpression iteratorExpr = cIExpr.initInvocation.argExprs.get(0);\n                     BType constructType = checkExpr(iteratorExpr, env, symTable.noType);\n+                    BType closeableIteratorType = symTable.langQueryModuleSymbol.scope\n+                            .lookup(names.fromString(BLangCompilerConstants.ABSTRACT_CLOSEABLE_ITERATOR_CLASS))\n+                            .symbol.type;\n+                    BType iteratorType = symTable.langQueryModuleSymbol.scope\n+                            .lookup(names.fromString(BLangCompilerConstants.ABSTRACT_ITERATOR_CLASS)).symbol.type;\n+                    BAttachedFunction closeFunc = types.getAttachedFuncFromObject((BObjectType) constructType,\n+                            BLangCompilerConstants.CLOSE_FUNC);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c649f4e8307870d9d330ce49cc1cd7fe8da2dccd"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMjE2NDUy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26930#pullrequestreview-531216452", "createdAt": "2020-11-16T10:59:54Z", "commit": {"oid": "c649f4e8307870d9d330ce49cc1cd7fe8da2dccd"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMjI0MDUz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26930#pullrequestreview-531224053", "createdAt": "2020-11-16T11:11:01Z", "commit": {"oid": "c649f4e8307870d9d330ce49cc1cd7fe8da2dccd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMToxMTowMVrOHz2sFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMToxMTowMVrOHz2sFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDEzNTQ0NQ==", "bodyText": "Is this error ever logged now?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26930#discussion_r524135445", "createdAt": "2020-11-16T11:11:01Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -3013,6 +3013,28 @@ public void visit(BLangTypeInit cIExpr) {\n                 if (!cIExpr.initInvocation.argExprs.isEmpty()) {\n                     BLangExpression iteratorExpr = cIExpr.initInvocation.argExprs.get(0);\n                     BType constructType = checkExpr(iteratorExpr, env, symTable.noType);\n+                    BType closeableIteratorType = symTable.langQueryModuleSymbol.scope\n+                            .lookup(names.fromString(BLangCompilerConstants.ABSTRACT_CLOSEABLE_ITERATOR_CLASS))\n+                            .symbol.type;\n+                    BType iteratorType = symTable.langQueryModuleSymbol.scope\n+                            .lookup(names.fromString(BLangCompilerConstants.ABSTRACT_ITERATOR_CLASS)).symbol.type;\n+                    BAttachedFunction closeFunc = types.getAttachedFuncFromObject((BObjectType) constructType,\n+                            BLangCompilerConstants.CLOSE_FUNC);\n+                    if (closeFunc != null) {\n+                        if (!types.isAssignable(constructType, closeableIteratorType)) {\n+                            dlog.error(iteratorExpr.pos, DiagnosticCode.INVALID_STREAM_CONSTRUCTOR_CLOSEABLE_ITERATOR,\n+                                    constructType);\n+                            resultType = symTable.semanticError;\n+                            return;\n+                        }\n+                    } else {\n+                        if (!types.isAssignable(constructType, iteratorType)) {\n+                            dlog.error(iteratorExpr.pos, DiagnosticCode.INVALID_STREAM_CONSTRUCTOR_ITERATOR,\n+                                    constructType);\n+                            resultType = symTable.semanticError;\n+                            return;\n+                        }\n+                    }\n                     BUnionType nextReturnType = types.getVarTypeFromIteratorFuncReturnType(constructType);\n                     BUnionType expectedReturnType = createNextReturnType(cIExpr.pos, (BStreamType) actualType);\n                     if (nextReturnType == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c649f4e8307870d9d330ce49cc1cd7fe8da2dccd"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMjI0OTcz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26930#pullrequestreview-531224973", "createdAt": "2020-11-16T11:12:19Z", "commit": {"oid": "c649f4e8307870d9d330ce49cc1cd7fe8da2dccd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMToxMjoyMFrOHz2xoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMToxMjoyMFrOHz2xoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDEzNjg2NQ==", "bodyText": "Can't we reuse DiagnosticCode.INCOMPATIBLE_TYPES for these?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26930#discussion_r524136865", "createdAt": "2020-11-16T11:12:20Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -3013,6 +3013,28 @@ public void visit(BLangTypeInit cIExpr) {\n                 if (!cIExpr.initInvocation.argExprs.isEmpty()) {\n                     BLangExpression iteratorExpr = cIExpr.initInvocation.argExprs.get(0);\n                     BType constructType = checkExpr(iteratorExpr, env, symTable.noType);\n+                    BType closeableIteratorType = symTable.langQueryModuleSymbol.scope\n+                            .lookup(names.fromString(BLangCompilerConstants.ABSTRACT_CLOSEABLE_ITERATOR_CLASS))\n+                            .symbol.type;\n+                    BType iteratorType = symTable.langQueryModuleSymbol.scope\n+                            .lookup(names.fromString(BLangCompilerConstants.ABSTRACT_ITERATOR_CLASS)).symbol.type;\n+                    BAttachedFunction closeFunc = types.getAttachedFuncFromObject((BObjectType) constructType,\n+                            BLangCompilerConstants.CLOSE_FUNC);\n+                    if (closeFunc != null) {\n+                        if (!types.isAssignable(constructType, closeableIteratorType)) {\n+                            dlog.error(iteratorExpr.pos, DiagnosticCode.INVALID_STREAM_CONSTRUCTOR_CLOSEABLE_ITERATOR,\n+                                    constructType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c649f4e8307870d9d330ce49cc1cd7fe8da2dccd"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf7f95d592214df4df84a89e0b02cee38e7cb162", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bf7f95d592214df4df84a89e0b02cee38e7cb162", "committedDate": "2020-11-16T12:39:18Z", "message": "Improve type checking for stream implementor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b046fcaa57fb6c8624e51d819207c62ecf70341a", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b046fcaa57fb6c8624e51d819207c62ecf70341a", "committedDate": "2020-11-16T12:39:58Z", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into fix-26677"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxOTg5MTIw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26930#pullrequestreview-531989120", "createdAt": "2020-11-17T03:06:05Z", "commit": {"oid": "b046fcaa57fb6c8624e51d819207c62ecf70341a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxOTk2Njgz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26930#pullrequestreview-531996683", "createdAt": "2020-11-17T03:30:02Z", "commit": {"oid": "b046fcaa57fb6c8624e51d819207c62ecf70341a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4875, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}