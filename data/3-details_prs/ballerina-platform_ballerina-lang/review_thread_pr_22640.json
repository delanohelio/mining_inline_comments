{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNjc4MjYz", "number": 22640, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODoyMDowMFrODzACmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwOToxMDo0NFrOD0IxXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODA0NjMyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODoyMDowMFrOGHYdGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNzowODoyMlrOGHouhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM5Mzg4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } else if ((expType.tag == TypeTags.DECIMAL) && !NumericLiteralSupport\n          \n          \n            \n                                .isHexIndicator(literalExpr.originalValue)) {\n          \n          \n            \n                        } else if (expType.tag == TypeTags.DECIMAL && \n          \n          \n            \n                                !NumericLiteralSupport.isHexIndicator(literalExpr.originalValue)) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22640#discussion_r410393881", "createdAt": "2020-04-17T18:20:00Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -344,7 +344,8 @@ private BType setLiteralValueAndGetType(BLangLiteral literalExpr, BType expType)\n             if (expType.tag == TypeTags.FLOAT) {\n                 literalType = symTable.floatType;\n                 literalExpr.value = ((Long) literalValue).doubleValue();\n-            } else if (expType.tag == TypeTags.DECIMAL) {\n+            } else if ((expType.tag == TypeTags.DECIMAL) && !NumericLiteralSupport\n+                    .isHexIndicator(literalExpr.originalValue)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae3786b7a44caf6e0b1e3b9ce154afb2b6283580"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY2MDQ4NA==", "bodyText": "Fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22640#discussion_r410660484", "createdAt": "2020-04-18T07:08:22Z", "author": {"login": "chiranSachintha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -344,7 +344,8 @@ private BType setLiteralValueAndGetType(BLangLiteral literalExpr, BType expType)\n             if (expType.tag == TypeTags.FLOAT) {\n                 literalType = symTable.floatType;\n                 literalExpr.value = ((Long) literalValue).doubleValue();\n-            } else if (expType.tag == TypeTags.DECIMAL) {\n+            } else if ((expType.tag == TypeTags.DECIMAL) && !NumericLiteralSupport\n+                    .isHexIndicator(literalExpr.originalValue)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM5Mzg4MQ=="}, "originalCommit": {"oid": "ae3786b7a44caf6e0b1e3b9ce154afb2b6283580"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODA2NDkyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/util/NumericLiteralSupport.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODoyNTo0NlrOGHYo3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNzowODo0M1rOGHoutQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM5Njg5NA==", "bodyText": "Shall we rename this to\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static boolean isHexIndicator(String literalValue) {\n          \n          \n            \n                public static boolean hasHexIndicator(String literalValue) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22640#discussion_r410396894", "createdAt": "2020-04-17T18:25:46Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/util/NumericLiteralSupport.java", "diffHunk": "@@ -68,6 +68,24 @@ public static boolean isHexLiteral(String numericLiteral) {\n         return false;\n     }\n \n+    /**\n+     * Check input for decimal indicator.\n+     *\n+     * @param literalValue literal to check\n+     * @return true if Hex prefix is present, false otherwise\n+     */\n+    public static boolean isHexIndicator(String literalValue) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae3786b7a44caf6e0b1e3b9ce154afb2b6283580"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY2MDUzMw==", "bodyText": "Fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22640#discussion_r410660533", "createdAt": "2020-04-18T07:08:43Z", "author": {"login": "chiranSachintha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/util/NumericLiteralSupport.java", "diffHunk": "@@ -68,6 +68,24 @@ public static boolean isHexLiteral(String numericLiteral) {\n         return false;\n     }\n \n+    /**\n+     * Check input for decimal indicator.\n+     *\n+     * @param literalValue literal to check\n+     * @return true if Hex prefix is present, false otherwise\n+     */\n+    public static boolean isHexIndicator(String literalValue) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM5Njg5NA=="}, "originalCommit": {"oid": "ae3786b7a44caf6e0b1e3b9ce154afb2b6283580"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0ODA3MzYzOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/util/NumericLiteralSupport.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODoyODoxNlrOGHYuJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNzowOTowNVrOGHou2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM5ODI0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (firstChar == 'x' || secondChar == 'x' || firstChar == 'X' || secondChar == 'X');\n          \n          \n            \n                    return firstChar == 'x' || secondChar == 'x' || firstChar == 'X' || secondChar == 'X';\n          \n      \n    \n    \n  \n\nShall we add a comment to say why we are checking both 2nd and 3rd chars?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22640#discussion_r410398245", "createdAt": "2020-04-17T18:28:16Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/util/NumericLiteralSupport.java", "diffHunk": "@@ -68,6 +68,24 @@ public static boolean isHexLiteral(String numericLiteral) {\n         return false;\n     }\n \n+    /**\n+     * Check input for decimal indicator.\n+     *\n+     * @param literalValue literal to check\n+     * @return true if Hex prefix is present, false otherwise\n+     */\n+    public static boolean isHexIndicator(String literalValue) {\n+        int length = literalValue.length();\n+        // There should be at least 3 characters to form hex literal.\n+        if (length < 3) {\n+            return false;\n+        }\n+        char firstChar = literalValue.charAt(1);\n+        char secondChar = literalValue.charAt(2);\n+        return (firstChar == 'x' || secondChar == 'x' || firstChar == 'X' || secondChar == 'X');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae3786b7a44caf6e0b1e3b9ce154afb2b6283580"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY2MDU2OA==", "bodyText": "Fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22640#discussion_r410660568", "createdAt": "2020-04-18T07:09:05Z", "author": {"login": "chiranSachintha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/util/NumericLiteralSupport.java", "diffHunk": "@@ -68,6 +68,24 @@ public static boolean isHexLiteral(String numericLiteral) {\n         return false;\n     }\n \n+    /**\n+     * Check input for decimal indicator.\n+     *\n+     * @param literalValue literal to check\n+     * @return true if Hex prefix is present, false otherwise\n+     */\n+    public static boolean isHexIndicator(String literalValue) {\n+        int length = literalValue.length();\n+        // There should be at least 3 characters to form hex literal.\n+        if (length < 3) {\n+            return false;\n+        }\n+        char firstChar = literalValue.charAt(1);\n+        char secondChar = literalValue.charAt(2);\n+        return (firstChar == 'x' || secondChar == 'x' || firstChar == 'X' || secondChar == 'X');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM5ODI0NQ=="}, "originalCommit": {"oid": "ae3786b7a44caf6e0b1e3b9ce154afb2b6283580"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTk2MjU1OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/decimal/decimal_value_negative_literal.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwOToxMDo0NFrOGI7RlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzoyOTo0M1rOGJP7SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxMjk0OQ==", "bodyText": "Shall we add tests for 0X and -0X too?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22640#discussion_r412012949", "createdAt": "2020-04-21T09:10:44Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/decimal/decimal_value_negative_literal.bal", "diffHunk": "@@ -19,6 +19,8 @@ function testInvlaidDecimalValue() {\n     // This is to test a syntax issue.\n     decimal a = 12.3f;\n     decimal b = 0x4fp1;\n+    decimal c = 0x12bc;\n+    decimal d = -0x12b;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e4c1d7d28047fe0a934873617c99d759e4a97ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM1MTMwNA==", "bodyText": "Done", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22640#discussion_r412351304", "createdAt": "2020-04-21T17:29:43Z", "author": {"login": "chiranSachintha"}, "path": "tests/jballerina-bstring-unit-test/src/test/resources/test-src/types/decimal/decimal_value_negative_literal.bal", "diffHunk": "@@ -19,6 +19,8 @@ function testInvlaidDecimalValue() {\n     // This is to test a syntax issue.\n     decimal a = 12.3f;\n     decimal b = 0x4fp1;\n+    decimal c = 0x12bc;\n+    decimal d = -0x12b;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxMjk0OQ=="}, "originalCommit": {"oid": "7e4c1d7d28047fe0a934873617c99d759e4a97ef"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3855, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}