{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MzEwMDQz", "number": 21607, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMjowMzoyMVrODm6mRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzo1OTowMFrODm7njA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMTMyNTQ5OnYy", "diffSide": "RIGHT", "path": "stdlib/database/jdbc2/src/main/ballerina/src/java.jdbc/client.bal", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMjowMzoyMVrOF0m7XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNDo0MzowMVrOF0pEZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwODA2MQ==", "bodyText": "Need indentation here. This is an issue with formatter which was fixed with #21354", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21607#discussion_r390708061", "createdAt": "2020-03-11T02:03:21Z", "author": {"login": "anupama-pathirage"}, "path": "stdlib/database/jdbc2/src/main/ballerina/src/java.jdbc/client.bal", "diffHunk": "@@ -36,10 +36,41 @@ public type Client client object {\n         return createClient(self, clientConf, sql:getGlobalConnectionPool());\n     }\n \n+    # Executes the sql query provided by the user, and returns the result as stream.\n+    #\n+    # + sqlQuery - The query which needs to be executed\n+    # + rowType - The `typedesc` of the record that should be returned as a result. If this is not provided the default\n+    #             column names of the query result set be used for the record attributes\n+    # + return - Stream of records in the type of `rowType`\n+    public remote function query(@untainted string sqlQuery, typedesc<record {}>? rowType = ())\n+    returns stream<record{}, sql:Error> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8745692601756faa334f1cfc92caa6bb920aee47"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczMDM2OA==", "bodyText": "I took an update and ran the formatting tool yesterday (after the update from master) and again today and this is how it formatted. If I have the indentation here it reverts and puts back as above.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21607#discussion_r390730368", "createdAt": "2020-03-11T03:41:04Z", "author": {"login": "sinthuja"}, "path": "stdlib/database/jdbc2/src/main/ballerina/src/java.jdbc/client.bal", "diffHunk": "@@ -36,10 +36,41 @@ public type Client client object {\n         return createClient(self, clientConf, sql:getGlobalConnectionPool());\n     }\n \n+    # Executes the sql query provided by the user, and returns the result as stream.\n+    #\n+    # + sqlQuery - The query which needs to be executed\n+    # + rowType - The `typedesc` of the record that should be returned as a result. If this is not provided the default\n+    #             column names of the query result set be used for the record attributes\n+    # + return - Stream of records in the type of `rowType`\n+    public remote function query(@untainted string sqlQuery, typedesc<record {}>? rowType = ())\n+    returns stream<record{}, sql:Error> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwODA2MQ=="}, "originalCommit": {"oid": "8745692601756faa334f1cfc92caa6bb920aee47"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczMzcwMA==", "bodyText": "AFAIK formatting tool with his fix is not released yet. @NipunaMarcus Any thoughts?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21607#discussion_r390733700", "createdAt": "2020-03-11T03:56:45Z", "author": {"login": "anupama-pathirage"}, "path": "stdlib/database/jdbc2/src/main/ballerina/src/java.jdbc/client.bal", "diffHunk": "@@ -36,10 +36,41 @@ public type Client client object {\n         return createClient(self, clientConf, sql:getGlobalConnectionPool());\n     }\n \n+    # Executes the sql query provided by the user, and returns the result as stream.\n+    #\n+    # + sqlQuery - The query which needs to be executed\n+    # + rowType - The `typedesc` of the record that should be returned as a result. If this is not provided the default\n+    #             column names of the query result set be used for the record attributes\n+    # + return - Stream of records in the type of `rowType`\n+    public remote function query(@untainted string sqlQuery, typedesc<record {}>? rowType = ())\n+    returns stream<record{}, sql:Error> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwODA2MQ=="}, "originalCommit": {"oid": "8745692601756faa334f1cfc92caa6bb920aee47"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczODY4Mg==", "bodyText": "We can leave this and fix them later, in case we need to merge this soon for the release :)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21607#discussion_r390738682", "createdAt": "2020-03-11T04:20:52Z", "author": {"login": "anupama-pathirage"}, "path": "stdlib/database/jdbc2/src/main/ballerina/src/java.jdbc/client.bal", "diffHunk": "@@ -36,10 +36,41 @@ public type Client client object {\n         return createClient(self, clientConf, sql:getGlobalConnectionPool());\n     }\n \n+    # Executes the sql query provided by the user, and returns the result as stream.\n+    #\n+    # + sqlQuery - The query which needs to be executed\n+    # + rowType - The `typedesc` of the record that should be returned as a result. If this is not provided the default\n+    #             column names of the query result set be used for the record attributes\n+    # + return - Stream of records in the type of `rowType`\n+    public remote function query(@untainted string sqlQuery, typedesc<record {}>? rowType = ())\n+    returns stream<record{}, sql:Error> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwODA2MQ=="}, "originalCommit": {"oid": "8745692601756faa334f1cfc92caa6bb920aee47"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc0MzE0Mg==", "bodyText": "Yes, +1. Once the formatter tool is fixed and released, I'll rerun the tool and fix these with the separate PR.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21607#discussion_r390743142", "createdAt": "2020-03-11T04:43:01Z", "author": {"login": "sinthuja"}, "path": "stdlib/database/jdbc2/src/main/ballerina/src/java.jdbc/client.bal", "diffHunk": "@@ -36,10 +36,41 @@ public type Client client object {\n         return createClient(self, clientConf, sql:getGlobalConnectionPool());\n     }\n \n+    # Executes the sql query provided by the user, and returns the result as stream.\n+    #\n+    # + sqlQuery - The query which needs to be executed\n+    # + rowType - The `typedesc` of the record that should be returned as a result. If this is not provided the default\n+    #             column names of the query result set be used for the record attributes\n+    # + return - Stream of records in the type of `rowType`\n+    public remote function query(@untainted string sqlQuery, typedesc<record {}>? rowType = ())\n+    returns stream<record{}, sql:Error> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwODA2MQ=="}, "originalCommit": {"oid": "8745692601756faa334f1cfc92caa6bb920aee47"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMTMyNjMwOnYy", "diffSide": "RIGHT", "path": "stdlib/database/jdbc2/src/main/ballerina/src/java.jdbc/client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMjowMzo0NlrOF0m7zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMjowMzo0NlrOF0m7zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwODE3NQ==", "bodyText": "Shouldn't it be both DML and DDL?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21607#discussion_r390708175", "createdAt": "2020-03-11T02:03:46Z", "author": {"login": "anupama-pathirage"}, "path": "stdlib/database/jdbc2/src/main/ballerina/src/java.jdbc/client.bal", "diffHunk": "@@ -36,10 +36,41 @@ public type Client client object {\n         return createClient(self, clientConf, sql:getGlobalConnectionPool());\n     }\n \n+    # Executes the sql query provided by the user, and returns the result as stream.\n+    #\n+    # + sqlQuery - The query which needs to be executed\n+    # + rowType - The `typedesc` of the record that should be returned as a result. If this is not provided the default\n+    #             column names of the query result set be used for the record attributes\n+    # + return - Stream of records in the type of `rowType`\n+    public remote function query(@untainted string sqlQuery, typedesc<record {}>? rowType = ())\n+    returns stream<record{}, sql:Error> {\n+        if (self.clientActive) {\n+            return nativeQuery(self, java:fromString(sqlQuery), rowType);\n+        } else {\n+            return sql:generateApplicationErrorStream(\"JDBC Client is already closed, hence \"\n+                + \"further operations are not allowed\");\n+        }\n+    }\n+\n+    # Executes the DML sql queries provided by the user, and returns summary of the execution.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8745692601756faa334f1cfc92caa6bb920aee47"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMTM2NTIwOnYy", "diffSide": "RIGHT", "path": "stdlib/database/mysql/src/main/ballerina/src/mysql/client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMjoyODozNlrOF0nTWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMjoyODozNlrOF0nTWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNDIwMg==", "bodyText": "Shouldn't these be defined as separate types and then as a single union type?\npublic const SSL_PREFERRED = \"PREFERRED\";\npublic const SSL_REQUIRED = \"REQUIRED\";\n...\n\npublic type SSLMode SSL_PREFERRED|SSL_REQUIRED ..;\n\nThen usage will be\nSSLMode mode = sql:SSL_PREFERRED;", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21607#discussion_r390714202", "createdAt": "2020-03-11T02:28:36Z", "author": {"login": "anupama-pathirage"}, "path": "stdlib/database/mysql/src/main/ballerina/src/mysql/client.bal", "diffHunk": "@@ -82,7 +113,7 @@ public type Options record {|\n |};\n \n # Possible options for SSL Mode.\n-public type SSLMode \"PREFERRED\" | \"REQUIRED\" | \"VERIFY_CERT\" | \"VERIFY_IDENTITY\";\n+public type SSLMode \"PREFERRED\"|\"REQUIRED\"|\"VERIFY_CERT\"|\"VERIFY_IDENTITY\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8745692601756faa334f1cfc92caa6bb920aee47"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMTQ5MjYwOnYy", "diffSide": "RIGHT", "path": "stdlib/database/mysql/src/main/ballerina/src/mysql/client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzo1OTowMFrOF0ohew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMzo1OTowMFrOF0ohew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczNDIwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public type SSLMode SSL_PREFERRED | SSL_REQUIRED| SSL_VERIFY_CERT | SSL_VERIFY_IDENTITY;\n          \n          \n            \n            public type SSLMode SSL_PREFERRED|SSL_REQUIRED|SSL_VERIFY_CERT|SSL_VERIFY_IDENTITY;", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21607#discussion_r390734203", "createdAt": "2020-03-11T03:59:00Z", "author": {"login": "anupama-pathirage"}, "path": "stdlib/database/mysql/src/main/ballerina/src/mysql/client.bal", "diffHunk": "@@ -82,7 +113,13 @@ public type Options record {|\n |};\n \n # Possible options for SSL Mode.\n-public type SSLMode \"PREFERRED\" | \"REQUIRED\" | \"VERIFY_CERT\" | \"VERIFY_IDENTITY\";\n+public const SSL_PREFERRED = \"PREFERRED\";\n+public const SSL_REQUIRED = \"REQUIRED\";\n+public const SSL_VERIFY_CERT = \"VERIFY_CERT\";\n+public const SSL_VERIFY_IDENTITY = \"VERIFY_IDENTITY\";\n+\n+# SSLMode as a union of available ssl modes.\n+public type SSLMode SSL_PREFERRED | SSL_REQUIRED| SSL_VERIFY_CERT | SSL_VERIFY_IDENTITY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb1db698bab1d3470bc58c1197c7ef86ec9c751f"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 762, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}