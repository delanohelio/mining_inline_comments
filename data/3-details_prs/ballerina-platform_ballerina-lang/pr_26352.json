{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMjY2Nzgx", "number": 26352, "title": "[Formatter] Add several node implementations", "bodyText": "Purpose\nAdds the following node implementations:\n\nMethodCallExpressionNode\nXmlTypeDescriptorNode\nXMLQualifiedNameNode\nObjectTypeDescriptorNode\nObjectFieldNode\nConditionalExpressionNode\nXMLFilterExpressionNode\nXMLStepExpressionNode\nObjectConstructorExpressionNode\nQueryActionNode\n\nPartially Fixes #26052\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-10-14T10:19:03Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26352", "merged": true, "mergeCommit": {"oid": "64863077df017c2a307e4239c281cbbb5eb9e3ca"}, "closed": true, "closedAt": "2020-10-14T11:59:00Z", "author": {"login": "IrushiL"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSY2azAH2gAyNTAzMjY2NzgxOjAyZDY5ODllMDYzNjhhNDU0YWM5YTMwM2JkYjVmMGYwMWRmZmNiM2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSb6JKgFqTUwODI0MDM4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "02d6989e06368a454ac9a303bdb5f0f01dffcb3c", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/02d6989e06368a454ac9a303bdb5f0f01dffcb3c", "committedDate": "2020-10-14T08:25:02Z", "message": "Add several node implementations\n\nMethodCallExpressionNode, XmlTypeDescriptorNode, XMLQualifiedNameNode, ObjectTypeDescriptorNode, ObjectFieldNode, ConditionalExpressionNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54833fb9fc715d1ded758535d9f4e211e6cc3692", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/54833fb9fc715d1ded758535d9f4e211e6cc3692", "committedDate": "2020-10-14T10:12:55Z", "message": "Add several node implementations\n\nXMLFilterExpressionNode, XMLStepExpressionNode, ObjectConstructorExpressionNode, QueryActionNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2bb3efaa0ed410143bdb415f01e9496f19db6ce", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a2bb3efaa0ed410143bdb415f01e9496f19db6ce", "committedDate": "2020-10-14T10:49:39Z", "message": "Add XMLNamePatternChainingNode and TemplateExpressionNode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MjQwMzg0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26352#pullrequestreview-508240384", "createdAt": "2020-10-14T11:15:36Z", "commit": {"oid": "a2bb3efaa0ed410143bdb415f01e9496f19db6ce"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMToxNTozN1rOHhOFLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMToxNTozN1rOHhOFLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU5NTc1Ng==", "bodyText": "We might have to set indentation to the braces as well, similar to the record-type-desc", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26352#discussion_r504595756", "createdAt": "2020-10-14T11:15:37Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -2277,20 +2345,93 @@ public RestArgumentNode transform(RestArgumentNode restArgumentNode) {\n \n     @Override\n     public ObjectTypeDescriptorNode transform(ObjectTypeDescriptorNode objectTypeDescriptorNode) {\n+        NodeList<Token> objectTypeQualifiers = formatNodeList(objectTypeDescriptorNode.objectTypeQualifiers(),\n+                1, 0, 1, 0);\n+        Token objectKeyword = formatToken(objectTypeDescriptorNode.objectKeyword(), 1, 0);\n+        Token openBrace = formatToken(objectTypeDescriptorNode.openBrace(), 0, 1);\n+        indent();\n+        NodeList<Node> members = formatNodeList(objectTypeDescriptorNode.members(), 0, 1, 0, 1);\n+        unindent();\n+        Token closeBrace = formatToken(objectTypeDescriptorNode.closeBrace(), this.trailingWS, this.trailingNL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2bb3efaa0ed410143bdb415f01e9496f19db6ce"}, "originalPosition": 160}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4360, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}