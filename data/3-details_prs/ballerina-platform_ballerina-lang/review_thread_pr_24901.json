{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MjU3MDk2", "number": 24901, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDoyOTowOVrOERTKmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDo0Mjo1NFrOERTSCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTc1MjU2OnYy", "diffSide": "RIGHT", "path": "misc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/utils/PackageUtils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDoyOTowOVrOG173hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNTozNzowM1rOG18x9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwODU4MA==", "bodyText": "@praveennadarajah Shall we add a comment explaining that in here we have handled the service files specifically and the reason behind that?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24901#discussion_r459208580", "createdAt": "2020-07-23T04:29:09Z", "author": {"login": "NipunaRanasinghe"}, "path": "misc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/utils/PackageUtils.java", "diffHunk": "@@ -86,4 +89,24 @@ public static boolean isBlank(String str) {\n         }\n         return srcNames;\n     }\n+\n+    /**\n+     * Get relative path when a bal file is inside a directory.\n+     *\n+     * @param sourcePath     source path\n+     * @param patternMatcher pattern matcher string\n+     * @param sourceName     source name\n+     * @param fileName       file name\n+     * @return relative path\n+     */\n+    public static String getDirectoryRelativePath(String sourcePath, String patternMatcher, String sourceName,\n+                                                  String fileName) {\n+        Pattern pattern = Pattern.compile(SERVICE_REGEX);\n+        Matcher matcher = pattern.matcher(patternMatcher);\n+        if (matcher.find()) {\n+            return sourcePath;\n+        } else {\n+            return sourcePath.replace(sourceName, fileName);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "282f00d5f9b7df09eba07656a43494c76913ed13"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxODAxNw==", "bodyText": "Added comments.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24901#discussion_r459218017", "createdAt": "2020-07-23T05:13:28Z", "author": {"login": "praveennadarajah"}, "path": "misc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/utils/PackageUtils.java", "diffHunk": "@@ -86,4 +89,24 @@ public static boolean isBlank(String str) {\n         }\n         return srcNames;\n     }\n+\n+    /**\n+     * Get relative path when a bal file is inside a directory.\n+     *\n+     * @param sourcePath     source path\n+     * @param patternMatcher pattern matcher string\n+     * @param sourceName     source name\n+     * @param fileName       file name\n+     * @return relative path\n+     */\n+    public static String getDirectoryRelativePath(String sourcePath, String patternMatcher, String sourceName,\n+                                                  String fileName) {\n+        Pattern pattern = Pattern.compile(SERVICE_REGEX);\n+        Matcher matcher = pattern.matcher(patternMatcher);\n+        if (matcher.find()) {\n+            return sourcePath;\n+        } else {\n+            return sourcePath.replace(sourceName, fileName);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwODU4MA=="}, "originalCommit": {"oid": "282f00d5f9b7df09eba07656a43494c76913ed13"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIyMzU0Mw==", "bodyText": "Looks good!", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24901#discussion_r459223543", "createdAt": "2020-07-23T05:37:03Z", "author": {"login": "NipunaRanasinghe"}, "path": "misc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/utils/PackageUtils.java", "diffHunk": "@@ -86,4 +89,24 @@ public static boolean isBlank(String str) {\n         }\n         return srcNames;\n     }\n+\n+    /**\n+     * Get relative path when a bal file is inside a directory.\n+     *\n+     * @param sourcePath     source path\n+     * @param patternMatcher pattern matcher string\n+     * @param sourceName     source name\n+     * @param fileName       file name\n+     * @return relative path\n+     */\n+    public static String getDirectoryRelativePath(String sourcePath, String patternMatcher, String sourceName,\n+                                                  String fileName) {\n+        Pattern pattern = Pattern.compile(SERVICE_REGEX);\n+        Matcher matcher = pattern.matcher(patternMatcher);\n+        if (matcher.find()) {\n+            return sourcePath;\n+        } else {\n+            return sourcePath.replace(sourceName, fileName);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwODU4MA=="}, "originalCommit": {"oid": "282f00d5f9b7df09eba07656a43494c76913ed13"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTc3MTYzOnYy", "diffSide": "RIGHT", "path": "misc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/utils/PackageUtils.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNDo0Mjo1NFrOG18CGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNTo1NDozM1rOG19CRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxMTI4OA==", "bodyText": "What do you mean by patternMatcher here? AFAIR this the reference location path of the source that we are rectifying, right? we can think of using an appropriate arg name instead.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24901#discussion_r459211288", "createdAt": "2020-07-23T04:42:54Z", "author": {"login": "NipunaRanasinghe"}, "path": "misc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/utils/PackageUtils.java", "diffHunk": "@@ -86,4 +89,24 @@ public static boolean isBlank(String str) {\n         }\n         return srcNames;\n     }\n+\n+    /**\n+     * Get relative path when a bal file is inside a directory.\n+     *\n+     * @param sourcePath     source path\n+     * @param patternMatcher pattern matcher string\n+     * @param sourceName     source name\n+     * @param fileName       file name\n+     * @return relative path\n+     */\n+    public static String getDirectoryRelativePath(String sourcePath, String patternMatcher, String sourceName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "282f00d5f9b7df09eba07656a43494c76913ed13"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxOTkwMw==", "bodyText": "Yes, patternMatcher refers to \"reference location\" in one instance and \"reference type\" in another instance. I think renaming patternMatcher to \"reference\" would work fine. WDYT?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24901#discussion_r459219903", "createdAt": "2020-07-23T05:21:51Z", "author": {"login": "praveennadarajah"}, "path": "misc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/utils/PackageUtils.java", "diffHunk": "@@ -86,4 +89,24 @@ public static boolean isBlank(String str) {\n         }\n         return srcNames;\n     }\n+\n+    /**\n+     * Get relative path when a bal file is inside a directory.\n+     *\n+     * @param sourcePath     source path\n+     * @param patternMatcher pattern matcher string\n+     * @param sourceName     source name\n+     * @param fileName       file name\n+     * @return relative path\n+     */\n+    public static String getDirectoryRelativePath(String sourcePath, String patternMatcher, String sourceName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxMTI4OA=="}, "originalCommit": {"oid": "282f00d5f9b7df09eba07656a43494c76913ed13"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIyMzM2Mw==", "bodyText": "+1 for reference/referencePath", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24901#discussion_r459223363", "createdAt": "2020-07-23T05:36:28Z", "author": {"login": "NipunaRanasinghe"}, "path": "misc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/utils/PackageUtils.java", "diffHunk": "@@ -86,4 +89,24 @@ public static boolean isBlank(String str) {\n         }\n         return srcNames;\n     }\n+\n+    /**\n+     * Get relative path when a bal file is inside a directory.\n+     *\n+     * @param sourcePath     source path\n+     * @param patternMatcher pattern matcher string\n+     * @param sourceName     source name\n+     * @param fileName       file name\n+     * @return relative path\n+     */\n+    public static String getDirectoryRelativePath(String sourcePath, String patternMatcher, String sourceName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxMTI4OA=="}, "originalCommit": {"oid": "282f00d5f9b7df09eba07656a43494c76913ed13"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIyNzcxNw==", "bodyText": "Renamed to reference.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24901#discussion_r459227717", "createdAt": "2020-07-23T05:54:33Z", "author": {"login": "praveennadarajah"}, "path": "misc/debug-adapter/modules/debug-adapter-core/src/main/java/org/ballerinalang/debugadapter/utils/PackageUtils.java", "diffHunk": "@@ -86,4 +89,24 @@ public static boolean isBlank(String str) {\n         }\n         return srcNames;\n     }\n+\n+    /**\n+     * Get relative path when a bal file is inside a directory.\n+     *\n+     * @param sourcePath     source path\n+     * @param patternMatcher pattern matcher string\n+     * @param sourceName     source name\n+     * @param fileName       file name\n+     * @return relative path\n+     */\n+    public static String getDirectoryRelativePath(String sourcePath, String patternMatcher, String sourceName,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIxMTI4OA=="}, "originalCommit": {"oid": "282f00d5f9b7df09eba07656a43494c76913ed13"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 429, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}