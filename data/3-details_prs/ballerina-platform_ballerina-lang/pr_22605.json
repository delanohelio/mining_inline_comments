{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMTEzMjk4", "number": 22605, "title": "Enable dependency paths and native-lib paths work across Operating Systems", "bodyText": "Purpose\n\nTo fix three test cases that were failing on Windows due to the issue in the toml parser.\n\nFixes\n#21638,\n#20933,\n#20044\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-14T10:56:26Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22605", "merged": true, "mergeCommit": {"oid": "599316a24887014c75591840a070ec37c9d2c364"}, "closed": true, "closedAt": "2020-08-04T02:54:47Z", "author": {"login": "parkavi11"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYErcMAFqTM5NDI4MjY0MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc69R-eAH2gAyNDAzMTEzMjk4OjIzY2MzNzZjY2E3MjM5YTQ1OTQ1ZmJhZGYwNzJiMDU5YjlhZmQ1Yjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MjgyNjQx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22605#pullrequestreview-394282641", "createdAt": "2020-04-16T03:59:12Z", "commit": {"oid": "035fcef0e1df7f571aa0d294099151aca14db863"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMzo1OToxMlrOGGTr-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNDowNzoxMlrOGGTziQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI2NzE5NA==", "bodyText": "You can probably return the method without adding a flag and a if", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22605#discussion_r409267194", "createdAt": "2020-04-16T03:59:12Z", "author": {"login": "hevayo"}, "path": "compiler/ballerina-lang/src/test/java/org/ballerinalang/toml/ManifestProcessorTest.java", "diffHunk": "@@ -126,20 +129,52 @@ public void testLicenseDescription() throws TomlException {\n         Assert.assertEquals(manifest.getProject().getLicense().get(1), \"Apache-2.0\");\n     }\n \n-    @Test(description = \"One dependency added to the dependencies section has an effect\")\n-    public void testSingleDependencies() throws TomlException, IOException {\n-        Path tmpDir = Files.createTempDirectory(\"manifest-test-\");\n-        Path baloPath = tmpDir.resolve(\"string_utils.balo\");\n-        Files.createFile(baloPath);\n-        \n-        Manifest manifest = ManifestProcessor.parseTomlContentFromString(this.validProjectBlock + \"[dependencies] \\n \" +\n-                \"string-utils = {path = \\\"\" + baloPath + \"\\\", version = \\\"1.1.5\\\"} \\n\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getModuleID(), \"string-utils\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getVersion(), \"1.1.5\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getPath().toString(), baloPath.toString());\n-        \n-        Files.delete(baloPath);\n-        Files.delete(tmpDir);\n+    @Test(description = \"One dependency added to the dependencies section has an effect except on Windows\")\n+    public void testSingleDependenciesLinux() throws TomlException, IOException {\n+        if (OS.contains(\"win\")) {\n+            flag = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "035fcef0e1df7f571aa0d294099151aca14db863"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI2NzI4MA==", "bodyText": "Same as above you can return the function", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22605#discussion_r409267280", "createdAt": "2020-04-16T03:59:39Z", "author": {"login": "hevayo"}, "path": "compiler/ballerina-lang/src/test/java/org/ballerinalang/toml/ManifestProcessorTest.java", "diffHunk": "@@ -126,20 +129,52 @@ public void testLicenseDescription() throws TomlException {\n         Assert.assertEquals(manifest.getProject().getLicense().get(1), \"Apache-2.0\");\n     }\n \n-    @Test(description = \"One dependency added to the dependencies section has an effect\")\n-    public void testSingleDependencies() throws TomlException, IOException {\n-        Path tmpDir = Files.createTempDirectory(\"manifest-test-\");\n-        Path baloPath = tmpDir.resolve(\"string_utils.balo\");\n-        Files.createFile(baloPath);\n-        \n-        Manifest manifest = ManifestProcessor.parseTomlContentFromString(this.validProjectBlock + \"[dependencies] \\n \" +\n-                \"string-utils = {path = \\\"\" + baloPath + \"\\\", version = \\\"1.1.5\\\"} \\n\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getModuleID(), \"string-utils\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getVersion(), \"1.1.5\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getPath().toString(), baloPath.toString());\n-        \n-        Files.delete(baloPath);\n-        Files.delete(tmpDir);\n+    @Test(description = \"One dependency added to the dependencies section has an effect except on Windows\")\n+    public void testSingleDependenciesLinux() throws TomlException, IOException {\n+        if (OS.contains(\"win\")) {\n+            flag = false;\n+        }\n+        if (flag) {\n+            Path tmpDir = Files.createTempDirectory(\"manifest-test-\");\n+            Path baloPath = tmpDir.resolve(\"string_utils.balo\");\n+            Files.createFile(baloPath);\n+\n+            // Set tomlData replaced with proper path\n+            String tomlData = this.validProjectBlock + \"[dependencies] \\n string-utils = { path = \\\"\"\n+                    + baloPath + \"\\\", version = \\\"1.1.5\\\" } \\n \";\n+            Manifest manifest = ManifestProcessor.parseTomlContentFromString(tomlData);\n+            Assert.assertEquals(manifest.getDependencies().get(0).getModuleID(), \"string-utils\");\n+            Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getVersion(), \"1.1.5\");\n+            Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getPath().toString(),\n+                    baloPath.toString());\n+\n+            Files.delete(baloPath);\n+            Files.delete(tmpDir);\n+        }\n+    }\n+\n+    @Test(description = \"One dependency added to the dependencies section has an effect only on Windows\")\n+    public void testSingleDependenciesWindows() throws TomlException, IOException {\n+        if (!OS.contains(\"win\")) {\n+            flag = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "035fcef0e1df7f571aa0d294099151aca14db863"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI2OTEyOQ==", "bodyText": "We can have same test for both windows and linux since we use resolve to get the path of the balo and skip the test if it is windows.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22605#discussion_r409269129", "createdAt": "2020-04-16T04:07:12Z", "author": {"login": "hevayo"}, "path": "compiler/ballerina-lang/src/test/java/org/ballerinalang/toml/ManifestProcessorTest.java", "diffHunk": "@@ -149,21 +184,53 @@ public void testSingleEmptyDependencies() throws TomlException {\n         Assert.assertEquals(manifest.getDependencies().get(0).getModuleID(), \"string-utils\");\n     }\n \n-    @Test(description = \"Multiple dependencies added to the dependencies section has an effect\")\n-    public void testMultipleDependencies() throws TomlException, IOException {\n-        Path tmpDir = Files.createTempDirectory(\"manifest-test-\");\n-        Path baloPath = tmpDir.resolve(\"string_utils.balo\");\n-        Files.createFile(baloPath);\n-        \n-        Manifest manifest = ManifestProcessor.parseTomlContentFromString(this.validProjectBlock + \"[dependencies] \\n \" +\n-                \"string-utils = { path = \\\"\" + baloPath + \"\\\", version = \\\"1.0.5\\\" } \\n \" +\n-                \"jquery = { version = \\\"2.2.3\\\" } \\n\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getModuleID(), \"string-utils\");\n-        Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getVersion(), \"1.0.5\");\n-        Assert.assertEquals(manifest.getDependencies().get(1).getModuleID(), \"jquery\");\n-        Assert.assertEquals(manifest.getDependencies().get(1).getMetadata().getVersion(), \"2.2.3\");\n-    \n-        Files.delete(baloPath);\n-        Files.delete(tmpDir);\n+    @Test(description = \"Multiple dependencies added to the dependencies section has an effect except on Windows\")\n+    public void testMultipleDependenciesLinux() throws TomlException, IOException {\n+        if (OS.contains(\"win\")) {\n+            flag = false;\n+        }\n+        if (flag) {\n+            Path tmpDir = Files.createTempDirectory(\"manifest-test-\");\n+            Path baloPath = tmpDir.resolve(\"string_utils.balo\");\n+            Files.createFile(baloPath);\n+\n+            String tomlData = this.validProjectBlock + \"[dependencies] \\n string-utils = { path = \\\"\"\n+                    + baloPath + \"\\\", version = \\\"1.0.5\\\" } \\n \"\n+                    + \"jquery = { version = \\\"2.2.3\\\" } \\n\";\n+\n+            Manifest manifest = ManifestProcessor.parseTomlContentFromString(tomlData);\n+            Assert.assertEquals(manifest.getDependencies().get(0).getModuleID(), \"string-utils\");\n+            Assert.assertEquals(manifest.getDependencies().get(0).getMetadata().getVersion(), \"1.0.5\");\n+            Assert.assertEquals(manifest.getDependencies().get(1).getModuleID(), \"jquery\");\n+            Assert.assertEquals(manifest.getDependencies().get(1).getMetadata().getVersion(), \"2.2.3\");\n+\n+            Files.delete(baloPath);\n+            Files.delete(tmpDir);\n+        }\n+    }\n+\n+    @Test(description = \"Multiple dependencies added to the dependencies section has an effect only on Windows\")\n+    public void testMultipleDependenciesWindows() throws TomlException, IOException {\n+        if (!OS.contains(\"win\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "035fcef0e1df7f571aa0d294099151aca14db863"}, "originalPosition": 129}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8b2e64e20aca7ab0fc028c86412d655e88b5b8a", "author": {"user": {"login": "parkavi11", "name": "Parkavi"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e8b2e64e20aca7ab0fc028c86412d655e88b5b8a", "committedDate": "2020-04-17T15:07:19Z", "message": "Fix failing toml parser test cases on Windows"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0Njk1NDE1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22605#pullrequestreview-404695415", "createdAt": "2020-05-04T03:29:27Z", "commit": {"oid": "63731e9b000c49b609418a2210db1c5dbd107aae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwMzoyOToyN1rOGPyATA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwMzoyOToyN1rOGPyATA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIwMTEwMA==", "bodyText": "Can we move this logic in to the model instead of having it at the balo writer.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22605#discussion_r419201100", "createdAt": "2020-05-04T03:29:27Z", "author": {"login": "hevayo"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/writer/BaloFileWriter.java", "diffHunk": "@@ -310,6 +312,11 @@ private void addPlatformLibs(Path root, Path projectDirectory, String moduleName\n                     .map(lib -> Paths.get(lib.getPath())).collect(Collectors.toList());\n \n             for (Path lib : libs) {\n+                if (os.contains(\"win\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63731e9b000c49b609418a2210db1c5dbd107aae"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cbcfd47fe9cdabb459bf15010884fc27cc351c0", "author": {"user": {"login": "parkavi11", "name": "Parkavi"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9cbcfd47fe9cdabb459bf15010884fc27cc351c0", "committedDate": "2020-05-08T07:31:33Z", "message": "Enable native lib paths n toml across OS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5788ff669253d3c8aa532bf9822b5c5e349e0fac", "author": {"user": {"login": "parkavi11", "name": "Parkavi"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5788ff669253d3c8aa532bf9822b5c5e349e0fac", "committedDate": "2020-06-06T08:00:38Z", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into newChangesToml-1.2.x"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d69eb1d47f3c9a547930a2289907cbdc00aa033", "author": {"user": {"login": "parkavi11", "name": "Parkavi"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1d69eb1d47f3c9a547930a2289907cbdc00aa033", "committedDate": "2020-06-06T10:25:17Z", "message": "Move native lib test cases to ManifestProcessorTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fac4425e9db4108cc078d0089f489e94c1a9298", "author": {"user": {"login": "parkavi11", "name": "Parkavi"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9fac4425e9db4108cc078d0089f489e94c1a9298", "committedDate": "2020-06-06T10:26:38Z", "message": "Remove unwanted resources added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9956a06e910250245c75462285e8502e86151f8e", "author": {"user": {"login": "parkavi11", "name": "Parkavi"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9956a06e910250245c75462285e8502e86151f8e", "committedDate": "2020-06-15T04:00:52Z", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into newChangesToml-1.2.x"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "208a6b57182065f9abc1511543236be6faf16e44", "author": {"user": {"login": "parkavi11", "name": "Parkavi"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/208a6b57182065f9abc1511543236be6faf16e44", "committedDate": "2020-06-15T04:03:09Z", "message": "check null path in getPath"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c104645f37674ac96fc0ef0d16dd7a81f5cb1663", "author": {"user": {"login": "parkavi11", "name": "Parkavi"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c104645f37674ac96fc0ef0d16dd7a81f5cb1663", "committedDate": "2020-06-15T17:02:17Z", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into newChangesToml-1.2.x"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96934be5f93f6d6d3db9941710a9877b93a73a60", "author": {"user": {"login": "parkavi11", "name": "Parkavi"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/96934be5f93f6d6d3db9941710a9877b93a73a60", "committedDate": "2020-07-02T03:38:12Z", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into newChangesToml-1.2.x"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c5af89e733539538a0595f3f63de80dcfda7369", "author": {"user": {"login": "parkavi11", "name": "Parkavi"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5c5af89e733539538a0595f3f63de80dcfda7369", "committedDate": "2020-07-09T08:41:53Z", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into newChangesToml-1.2.x"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NDEyNTg2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22605#pullrequestreview-445412586", "createdAt": "2020-07-09T08:47:19Z", "commit": {"oid": "5c5af89e733539538a0595f3f63de80dcfda7369"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5ee1b5de2f11fad4568d81aa5fba846e9ed3882", "author": {"user": {"login": "parkavi11", "name": "Parkavi"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f5ee1b5de2f11fad4568d81aa5fba846e9ed3882", "committedDate": "2020-07-10T07:41:39Z", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into newChangesToml-1.2.x"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23cc376cca7239a45945fbadf072b059b9afd5b8", "author": {"user": {"login": "parkavi11", "name": "Parkavi"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/23cc376cca7239a45945fbadf072b059b9afd5b8", "committedDate": "2020-08-02T13:17:32Z", "message": "Merge branch 'ballerina-1.2.x' of https://github.com/ballerina-platform/ballerina-lang into newChangesToml-1.2.x"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4039, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}