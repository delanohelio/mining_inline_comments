{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1ODAzOTM3", "number": 26763, "title": "Add configs for transaction log properties and allow disabling Atomikos transaction manager", "bodyText": "Purpose\n\n$title\n\nFixes #26053, #26055\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-11-05T05:24:45Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763", "merged": true, "mergeCommit": {"oid": "918a4bffed44bffb4e64d4d1ed76e62bfaccc6ad"}, "closed": true, "closedAt": "2020-12-15T17:50:34Z", "author": {"login": "lasinicl"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZbahigH2gAyNTE1ODAzOTM3OmM3ZTMxYjIzNDhiZWZhYjVmMWVlYTRjZjdjMmIzYWZmMjlhMjc3ZjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmuI9zgFqTU1MzY0MTIyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c7e31b2348befab5f1eea4cf7c2b3aff29a277f6", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c7e31b2348befab5f1eea4cf7c2b3aff29a277f6", "committedDate": "2020-11-05T05:21:45Z", "message": "Add configs for log properties and allow disabling atomikos transaction manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9e07910043b2d8b81078cb79773d468864d4e88", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f9e07910043b2d8b81078cb79773d468864d4e88", "committedDate": "2020-11-05T13:34:38Z", "message": "Refactor code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dd20de041156ec4354ad41a47a4833c2cfbb43c", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6dd20de041156ec4354ad41a47a4833c2cfbb43c", "committedDate": "2020-11-27T04:33:52Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into trx-atomikos\n\n\u0001 Conflicts:\n\u0001\tbvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55e08c86478085321517cad140fc930236005f9a", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/55e08c86478085321517cad140fc930236005f9a", "committedDate": "2020-11-27T05:01:05Z", "message": "Resolve conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "296fca3d565b28a6ee89ad8a88d157d833e3124e", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/296fca3d565b28a6ee89ad8a88d157d833e3124e", "committedDate": "2020-11-27T05:05:29Z", "message": "Fix checkstyle issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNzEyMjI3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#pullrequestreview-543712227", "createdAt": "2020-12-03T08:34:28Z", "commit": {"oid": "296fca3d565b28a6ee89ad8a88d157d833e3124e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwODozNDoyOFrOH-I-jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwODo0MTowMlrOH-Jh_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyMDg0Nw==", "bodyText": "Can't we move this line out of for loop?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r534920847", "createdAt": "2020-12-03T08:34:28Z", "author": {"login": "mohanvive"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -160,7 +235,33 @@ public void registerParticipation(String gTransactionId, String transactionBlock\n      */\n     //TODO:Comment for now, might need it for distributed transactions.\n     public boolean prepare(String transactionId, String transactionBlockId) {\n-          return true;\n+        if (transactionManagerEnabled) {\n+            return true;\n+        }\n+        String combinedId = generateCombinedTransactionId(transactionId, transactionBlockId);\n+        List<BallerinaTransactionContext> txContextList = resourceRegistry.get(combinedId);\n+        if (txContextList != null) {\n+            for (BallerinaTransactionContext ctx : txContextList) {\n+                try {\n+                    XAResource xaResource = ctx.getXAResource();\n+                    if (xaResource != null) {\n+                        Xid xid = xidRegistry.get(combinedId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "296fca3d565b28a6ee89ad8a88d157d833e3124e"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNDE5Nw==", "bodyText": "Why don't we throw this exception? Any reason to handle it and return falase?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r534924197", "createdAt": "2020-12-03T08:36:25Z", "author": {"login": "mohanvive"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -160,7 +235,33 @@ public void registerParticipation(String gTransactionId, String transactionBlock\n      */\n     //TODO:Comment for now, might need it for distributed transactions.\n     public boolean prepare(String transactionId, String transactionBlockId) {\n-          return true;\n+        if (transactionManagerEnabled) {\n+            return true;\n+        }\n+        String combinedId = generateCombinedTransactionId(transactionId, transactionBlockId);\n+        List<BallerinaTransactionContext> txContextList = resourceRegistry.get(combinedId);\n+        if (txContextList != null) {\n+            for (BallerinaTransactionContext ctx : txContextList) {\n+                try {\n+                    XAResource xaResource = ctx.getXAResource();\n+                    if (xaResource != null) {\n+                        Xid xid = xidRegistry.get(combinedId);\n+                        xaResource.prepare(xid);\n+                    }\n+                } catch (Throwable e) {\n+                    log.error(\"error in prepare the transaction, \" + combinedId + \":\" + e.getMessage(), e);\n+                    return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "296fca3d565b28a6ee89ad8a88d157d833e3124e"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNjcxNg==", "bodyText": "Again, error message does not looks good. Shall we change it as \"Error at transaction prepare phase\" ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r534926716", "createdAt": "2020-12-03T08:38:25Z", "author": {"login": "mohanvive"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -160,7 +235,33 @@ public void registerParticipation(String gTransactionId, String transactionBlock\n      */\n     //TODO:Comment for now, might need it for distributed transactions.\n     public boolean prepare(String transactionId, String transactionBlockId) {\n-          return true;\n+        if (transactionManagerEnabled) {\n+            return true;\n+        }\n+        String combinedId = generateCombinedTransactionId(transactionId, transactionBlockId);\n+        List<BallerinaTransactionContext> txContextList = resourceRegistry.get(combinedId);\n+        if (txContextList != null) {\n+            for (BallerinaTransactionContext ctx : txContextList) {\n+                try {\n+                    XAResource xaResource = ctx.getXAResource();\n+                    if (xaResource != null) {\n+                        Xid xid = xidRegistry.get(combinedId);\n+                        xaResource.prepare(xid);\n+                    }\n+                } catch (Throwable e) {\n+                    log.error(\"error in prepare the transaction, \" + combinedId + \":\" + e.getMessage(), e);\n+                    return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNDE5Nw=="}, "originalCommit": {"oid": "296fca3d565b28a6ee89ad8a88d157d833e3124e"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyOTkxOQ==", "bodyText": "Also, whether printing combinedid makes sense? Don't we need to print transaction id and transaction block id separately?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r534929919", "createdAt": "2020-12-03T08:41:02Z", "author": {"login": "mohanvive"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -160,7 +235,33 @@ public void registerParticipation(String gTransactionId, String transactionBlock\n      */\n     //TODO:Comment for now, might need it for distributed transactions.\n     public boolean prepare(String transactionId, String transactionBlockId) {\n-          return true;\n+        if (transactionManagerEnabled) {\n+            return true;\n+        }\n+        String combinedId = generateCombinedTransactionId(transactionId, transactionBlockId);\n+        List<BallerinaTransactionContext> txContextList = resourceRegistry.get(combinedId);\n+        if (txContextList != null) {\n+            for (BallerinaTransactionContext ctx : txContextList) {\n+                try {\n+                    XAResource xaResource = ctx.getXAResource();\n+                    if (xaResource != null) {\n+                        Xid xid = xidRegistry.get(combinedId);\n+                        xaResource.prepare(xid);\n+                    }\n+                } catch (Throwable e) {\n+                    log.error(\"error in prepare the transaction, \" + combinedId + \":\" + e.getMessage(), e);\n+                    return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNDE5Nw=="}, "originalCommit": {"oid": "296fca3d565b28a6ee89ad8a88d157d833e3124e"}, "originalPosition": 152}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "267fe93485bd0524fc4eed85f196ba1d35b56db7", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/267fe93485bd0524fc4eed85f196ba1d35b56db7", "committedDate": "2020-12-04T11:34:24Z", "message": "Fix handling the exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5475e76be596f0b06e6aedac82b0b055f009705", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c5475e76be596f0b06e6aedac82b0b055f009705", "committedDate": "2020-12-07T05:17:42Z", "message": "Log exceptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83d2d6f17e6b4c25cdb0626be931af7c753c0008", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/83d2d6f17e6b4c25cdb0626be931af7c753c0008", "committedDate": "2020-12-07T05:32:27Z", "message": "Improve error log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2ODA0NjYz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#pullrequestreview-546804663", "createdAt": "2020-12-08T07:16:14Z", "commit": {"oid": "83d2d6f17e6b4c25cdb0626be931af7c753c0008"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoxNjoxNFrOIBKa7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoxNjoxNFrOIBKa7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5MDIyMA==", "bodyText": "shall we add a test case for this in transaction repo as a unit test?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r538090220", "createdAt": "2020-12-08T07:16:14Z", "author": {"login": "gimantha"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -96,6 +119,57 @@ public static TransactionResourceManager getInstance() {\n         return transactionResourceManager;\n     }\n \n+    /**\n+     * This method adds configs for transaction log path and transaction log name.\n+     *\n+     */\n+    private void addLogConfigToRegistry() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83d2d6f17e6b4c25cdb0626be931af7c753c0008"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2ODA1MDc5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#pullrequestreview-546805079", "createdAt": "2020-12-08T07:17:03Z", "commit": {"oid": "83d2d6f17e6b4c25cdb0626be931af7c753c0008"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoxNzowM1rOIBKcrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoxNzowM1rOIBKcrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5MDY3MA==", "bodyText": "merge the ifs", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r538090670", "createdAt": "2020-12-08T07:17:03Z", "author": {"login": "pcnfernando"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -96,6 +119,57 @@ public static TransactionResourceManager getInstance() {\n         return transactionResourceManager;\n     }\n \n+    /**\n+     * This method adds configs for transaction log path and transaction log name.\n+     *\n+     */\n+    private void addLogConfigToRegistry() {\n+        // Path to log directory given for atomikos log path property should exist.\n+        // Therefore create a transaction_log_dir in root directory if not exists.\n+        final Path projectRoot = findProjectRoot(Paths.get(System.getProperty(\"user.dir\")));\n+        if (projectRoot != null) {\n+            String logPath = projectRoot.toAbsolutePath().toString() + \"/transaction_log_dir\";\n+            Path transactionLogDirectory = Paths.get(logPath);\n+            if (!Files.exists(transactionLogDirectory)) {\n+                try {\n+                    Files.createDirectory(transactionLogDirectory);\n+                } catch (IOException e) {\n+                    stderr.println(\"error: failed to create transaction log directory\");\n+                }\n+            }\n+            CONFIG_REGISTRY.addConfiguration(\"b7a.transaction.log.base\", logPath);\n+            CONFIG_REGISTRY.addConfiguration(\"b7a.transaction.log.name\", \"transaction_recovery\");\n+        }\n+    }\n+\n+    /**\n+     * This method sets values for atomikos transaction log path and name properties using the available configs.\n+     *\n+     */\n+    private void setLogProperties() {\n+        String logDirPath = CONFIG_REGISTRY.getAsString(\"b7a.transaction.log.base\");\n+        String logFileName = CONFIG_REGISTRY.getAsString(\"b7a.transaction.log.name\");\n+        if (logDirPath != null && logFileName != null) {\n+            System.setProperty(ATOMIKOS_LOG_BASE_PROPERTY, logDirPath);\n+            System.setProperty(ATOMIKOS_LOG_NAME_PROPERTY, logFileName);\n+        }\n+    }\n+\n+    /**\n+     * This method check whether the atomikos transaction manager should be enabled or not.\n+     *\n+     * @return boolean whether the atomikos transaction manager should be enabled or not\n+     */\n+    private boolean getTransactionManagerEnabled() {\n+        String transactionManagerEnabled = CONFIG_REGISTRY.getAsString(\"b7a.transaction.manager.enabled\");\n+        if (transactionManagerEnabled != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83d2d6f17e6b4c25cdb0626be931af7c753c0008"}, "originalPosition": 122}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2ODA2MDgw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#pullrequestreview-546806080", "createdAt": "2020-12-08T07:19:05Z", "commit": {"oid": "83d2d6f17e6b4c25cdb0626be931af7c753c0008"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoxOTowNVrOIBKgNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoxOTowNVrOIBKgNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5MTU3Mg==", "bodyText": "Is it possible for user to define the log directory as well? if he as not set it, we will use this name as the default one. may be we will have to give another property to set the directory as well", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r538091572", "createdAt": "2020-12-08T07:19:05Z", "author": {"login": "gimantha"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -96,6 +119,57 @@ public static TransactionResourceManager getInstance() {\n         return transactionResourceManager;\n     }\n \n+    /**\n+     * This method adds configs for transaction log path and transaction log name.\n+     *\n+     */\n+    private void addLogConfigToRegistry() {\n+        // Path to log directory given for atomikos log path property should exist.\n+        // Therefore create a transaction_log_dir in root directory if not exists.\n+        final Path projectRoot = findProjectRoot(Paths.get(System.getProperty(\"user.dir\")));\n+        if (projectRoot != null) {\n+            String logPath = projectRoot.toAbsolutePath().toString() + \"/transaction_log_dir\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83d2d6f17e6b4c25cdb0626be931af7c753c0008"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b29edd52b3d02e2869a06955cfa57594c48f4477", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b29edd52b3d02e2869a06955cfa57594c48f4477", "committedDate": "2020-12-09T14:07:36Z", "message": "Add suggested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36609cb4237ffedcc908a7822823ea0f36176b27", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/36609cb4237ffedcc908a7822823ea0f36176b27", "committedDate": "2020-12-10T14:55:56Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into trx-atomikos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bf94f5c6d4c78c8480fe5a73570467e57a5b273", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8bf94f5c6d4c78c8480fe5a73570467e57a5b273", "committedDate": "2020-12-11T05:16:13Z", "message": "Refactor code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cd1a64b17b84d80191dedff46546309c91af0e8", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0cd1a64b17b84d80191dedff46546309c91af0e8", "committedDate": "2020-12-15T07:14:36Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into trx-atomikos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf0f32799424d45bc88f66fba0ba6622c258a101", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bf0f32799424d45bc88f66fba0ba6622c258a101", "committedDate": "2020-12-15T07:44:27Z", "message": "Disable atomikos coordinator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff", "author": {"user": {"login": "lasinicl", "name": "Lasini Liyange"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff", "committedDate": "2020-12-15T08:54:04Z", "message": "Disable atomikos coordinator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMzE1NzI4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#pullrequestreview-552315728", "createdAt": "2020-12-15T10:36:08Z", "commit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMzE4OTM0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#pullrequestreview-552318934", "createdAt": "2020-12-15T10:40:02Z", "commit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNzE2NDMw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#pullrequestreview-552716430", "createdAt": "2020-12-15T17:49:57Z", "commit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjI3MDEy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#pullrequestreview-553627012", "createdAt": "2020-12-16T12:12:43Z", "commit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjoxMjo0M1rOIHCWlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjoxMjo0M1rOIHCWlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI0OTQ5NA==", "bodyText": "Use File.separatorChar for platform independent coding while joining paths", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544249494", "createdAt": "2020-12-16T12:12:43Z", "author": {"login": "pcnfernando"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -96,6 +118,51 @@ public static TransactionResourceManager getInstance() {\n         return transactionResourceManager;\n     }\n \n+    /**\n+     * This method sets values for atomikos transaction log path and name properties using the available configs.\n+     *\n+     */\n+    private void setLogProperties() {\n+        final Path projectRoot = findProjectRoot(Paths.get(System.getProperty(\"user.dir\")));\n+        if (projectRoot != null) {\n+            String logDir = getTransactionLogDirectory();\n+            String logPath = projectRoot.toAbsolutePath().toString() + \"/\" + logDir;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjI4NzY0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#pullrequestreview-553628764", "createdAt": "2020-12-16T12:15:06Z", "commit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjoxNTowN1rOIHCcIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjoxNTowN1rOIHCcIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1MDkxNA==", "bodyText": "Improve the error to include the directory and the message", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544250914", "createdAt": "2020-12-16T12:15:07Z", "author": {"login": "pcnfernando"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -96,6 +118,51 @@ public static TransactionResourceManager getInstance() {\n         return transactionResourceManager;\n     }\n \n+    /**\n+     * This method sets values for atomikos transaction log path and name properties using the available configs.\n+     *\n+     */\n+    private void setLogProperties() {\n+        final Path projectRoot = findProjectRoot(Paths.get(System.getProperty(\"user.dir\")));\n+        if (projectRoot != null) {\n+            String logDir = getTransactionLogDirectory();\n+            String logPath = projectRoot.toAbsolutePath().toString() + \"/\" + logDir;\n+            Path transactionLogDirectory = Paths.get(logPath);\n+            if (!Files.exists(transactionLogDirectory)) {\n+                try {\n+                    Files.createDirectory(transactionLogDirectory);\n+                } catch (IOException e) {\n+                    stderr.println(\"error: failed to create transaction log directory\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjMwNTA4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#pullrequestreview-553630508", "createdAt": "2020-12-16T12:17:15Z", "commit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjoxNzoxNlrOIHChPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjoxNzoxNlrOIHChPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1MjIyMA==", "bodyText": "Let's move b7a.transaction.manager.enabled to a constant", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544252220", "createdAt": "2020-12-16T12:17:16Z", "author": {"login": "pcnfernando"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -96,6 +118,51 @@ public static TransactionResourceManager getInstance() {\n         return transactionResourceManager;\n     }\n \n+    /**\n+     * This method sets values for atomikos transaction log path and name properties using the available configs.\n+     *\n+     */\n+    private void setLogProperties() {\n+        final Path projectRoot = findProjectRoot(Paths.get(System.getProperty(\"user.dir\")));\n+        if (projectRoot != null) {\n+            String logDir = getTransactionLogDirectory();\n+            String logPath = projectRoot.toAbsolutePath().toString() + \"/\" + logDir;\n+            Path transactionLogDirectory = Paths.get(logPath);\n+            if (!Files.exists(transactionLogDirectory)) {\n+                try {\n+                    Files.createDirectory(transactionLogDirectory);\n+                } catch (IOException e) {\n+                    stderr.println(\"error: failed to create transaction log directory\");\n+                }\n+            }\n+            System.setProperty(ATOMIKOS_LOG_BASE_PROPERTY, logPath);\n+            System.setProperty(ATOMIKOS_LOG_NAME_PROPERTY, \"transaction_recovery\");\n+        }\n+    }\n+\n+    /**\n+     * This method checks whether the atomikos transaction manager should be enabled or not.\n+     *\n+     * @return boolean whether the atomikos transaction manager should be enabled or not\n+     */\n+    private boolean getTransactionManagerEnabled() {\n+        boolean transactionManagerEnabled = CONFIG_REGISTRY.getAsBoolean(\"b7a.transaction.manager.enabled\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "originalPosition": 106}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjMwODcw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#pullrequestreview-553630870", "createdAt": "2020-12-16T12:17:40Z", "commit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjoxNzo0MFrOIHCibA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjoxNzo0MFrOIHCibA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1MjUyNA==", "bodyText": "Here as well", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544252524", "createdAt": "2020-12-16T12:17:40Z", "author": {"login": "pcnfernando"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -96,6 +118,51 @@ public static TransactionResourceManager getInstance() {\n         return transactionResourceManager;\n     }\n \n+    /**\n+     * This method sets values for atomikos transaction log path and name properties using the available configs.\n+     *\n+     */\n+    private void setLogProperties() {\n+        final Path projectRoot = findProjectRoot(Paths.get(System.getProperty(\"user.dir\")));\n+        if (projectRoot != null) {\n+            String logDir = getTransactionLogDirectory();\n+            String logPath = projectRoot.toAbsolutePath().toString() + \"/\" + logDir;\n+            Path transactionLogDirectory = Paths.get(logPath);\n+            if (!Files.exists(transactionLogDirectory)) {\n+                try {\n+                    Files.createDirectory(transactionLogDirectory);\n+                } catch (IOException e) {\n+                    stderr.println(\"error: failed to create transaction log directory\");\n+                }\n+            }\n+            System.setProperty(ATOMIKOS_LOG_BASE_PROPERTY, logPath);\n+            System.setProperty(ATOMIKOS_LOG_NAME_PROPERTY, \"transaction_recovery\");\n+        }\n+    }\n+\n+    /**\n+     * This method checks whether the atomikos transaction manager should be enabled or not.\n+     *\n+     * @return boolean whether the atomikos transaction manager should be enabled or not\n+     */\n+    private boolean getTransactionManagerEnabled() {\n+        boolean transactionManagerEnabled = CONFIG_REGISTRY.getAsBoolean(\"b7a.transaction.manager.enabled\");\n+        return transactionManagerEnabled;\n+    }\n+\n+    /**\n+     * This method gets the user specified config for log directory name.\n+     *\n+     * @return string log directory name\n+     */\n+    private String getTransactionLogDirectory() {\n+        String transactionLogDirectory = CONFIG_REGISTRY.getAsString(\"b7a.transaction.log.base\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjM1MDYx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#pullrequestreview-553635061", "createdAt": "2020-12-16T12:23:08Z", "commit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjoyMzowOVrOIHCwKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjoyMzowOVrOIHCwKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1NjA0MA==", "bodyText": "merge the two if stmnts", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544256040", "createdAt": "2020-12-16T12:23:09Z", "author": {"login": "pcnfernando"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -171,25 +265,36 @@ public boolean notifyCommit(String transactionId, String transactionBlockId) {\n         boolean commitSuccess = true;\n         List<BallerinaTransactionContext> txContextList = resourceRegistry.get(combinedId);\n         if (txContextList != null) {\n-            Transaction trx = trxRegistry.get(combinedId);\n-            try {\n-                if (trx != null) {\n-                    trx.commit();\n+            if (transactionManagerEnabled) {\n+                Transaction trx = trxRegistry.get(combinedId);\n+                try {\n+                    if (trx != null) {\n+                        trx.commit();\n+                    }\n+                } catch (SystemException | HeuristicMixedException | HeuristicRollbackException\n+                        | RollbackException e) {\n+                    log.error(\"error when committing transaction \" + transactionId + \":\" + e.getMessage(), e);\n+                    commitSuccess = false;\n                 }\n-\n-            } catch (SystemException | HeuristicMixedException | HeuristicRollbackException | RollbackException e) {\n-                log.error(\"error when committing the transaction, \" + combinedId + \":\" + e.getMessage(), e);\n-                commitSuccess = false;\n             }\n \n             for (BallerinaTransactionContext ctx : txContextList) {\n                 try {\n                     XAResource xaResource = ctx.getXAResource();\n-                    if (xaResource == null) {\n-                        ctx.commit();\n+                    if (transactionManagerEnabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "originalPosition": 192}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjM1NzQz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#pullrequestreview-553635743", "createdAt": "2020-12-16T12:24:09Z", "commit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjoyNDowOVrOIHCySg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjoyNDowOVrOIHCySg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1NjU4Ng==", "bodyText": "merge these ifs as well", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544256586", "createdAt": "2020-12-16T12:24:09Z", "author": {"login": "pcnfernando"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -219,25 +324,35 @@ public boolean notifyAbort(String transactionId, String transactionBlockId, Obje\n         List<BallerinaTransactionContext> txContextList = resourceRegistry.get(combinedId);\n \n         if (txContextList != null) {\n-            Transaction trx = trxRegistry.get(combinedId);\n-            try {\n-                if (trx != null) {\n-                    trx.rollback();\n+            if (transactionManagerEnabled) {\n+                Transaction trx = trxRegistry.get(combinedId);\n+                try {\n+                    if (trx != null) {\n+                        trx.rollback();\n+                    }\n+                } catch (SystemException e) {\n+                    log.error(\"error when aborting transaction \" + transactionId + \":\" + e.getMessage(), e);\n+                    abortSuccess = false;\n                 }\n-\n-            } catch (SystemException e) {\n-                log.error(\"error when aborting the transaction, \" + combinedId + \":\" + e.getMessage(), e);\n-                abortSuccess = false;\n             }\n \n             for (BallerinaTransactionContext ctx : txContextList) {\n                 try {\n                     XAResource xaResource = ctx.getXAResource();\n-                    if (xaResource == null) {\n-                        ctx.rollback();\n+                    if (transactionManagerEnabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "originalPosition": 240}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjQxMjIz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#pullrequestreview-553641223", "createdAt": "2020-12-16T12:31:46Z", "commit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjozMTo0NlrOIHDEHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjozMTo0NlrOIHDEHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI2MTE0OA==", "bodyText": "merge xid and txContextList != null checks", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26763#discussion_r544261148", "createdAt": "2020-12-16T12:31:46Z", "author": {"login": "pcnfernando"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/transactions/TransactionResourceManager.java", "diffHunk": "@@ -359,19 +486,38 @@ public TransactionLocalContext getCurrentTransactionContext() {\n      */\n     void endXATransaction(String transactionId, String transactionBlockId) {\n         String combinedId = generateCombinedTransactionId(transactionId, transactionBlockId);\n-        Transaction trx = trxRegistry.get(combinedId);\n-        if (trx != null) {\n-            List<BallerinaTransactionContext> txContextList = resourceRegistry.get(combinedId);\n-            if (txContextList != null) {\n-                for (BallerinaTransactionContext ctx : txContextList) {\n-                    try {\n-                        XAResource xaResource = ctx.getXAResource();\n-                        if (xaResource != null) {\n-                            trx.delistResource(xaResource, TMSUCCESS);\n+        if (transactionManagerEnabled) {\n+            Transaction trx = trxRegistry.get(combinedId);\n+            if (trx != null) {\n+                List<BallerinaTransactionContext> txContextList = resourceRegistry.get(combinedId);\n+                if (txContextList != null) {\n+                    for (BallerinaTransactionContext ctx : txContextList) {\n+                        try {\n+                            XAResource xaResource = ctx.getXAResource();\n+                            if (xaResource != null) {\n+                                trx.delistResource(xaResource, TMSUCCESS);\n+                            }\n+                        } catch (IllegalStateException | SystemException e) {\n+                            log.error(\"error in ending the XA transaction \" + transactionId\n+                                    + \":\" + e.getMessage(), e);\n+                        }\n+                    }\n+                }\n+            }\n+        } else {\n+            Xid xid = xidRegistry.get(combinedId);\n+            if (xid != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be5ca3959024a07e3ddbeaf6d941ac8f3f9b4bff"}, "originalPosition": 333}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4966, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}