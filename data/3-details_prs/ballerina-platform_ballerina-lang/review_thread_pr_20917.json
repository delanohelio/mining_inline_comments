{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMzEyMDA0", "number": 20917, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwODo0NDoyOVrODeXmQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODozNDowMVrODfFjew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTcwNDk4OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/types/finaltypes/final-field-test-negative.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwODo0NDoyOVrOFndt-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNTo0MTo1NlrOFnq5yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkyNTY5MQ==", "bodyText": "Shall we improve the name of the function to reflect what's actually being tested?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20917#discussion_r376925691", "createdAt": "2020-02-10T08:44:29Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/types/finaltypes/final-field-test-negative.bal", "diffHunk": "@@ -71,3 +71,9 @@ function testLocalFinalValueWithoutTypeInitializedFromFunction() {\n function getName() returns string {\n     return \"Ballerina\";\n }\n+\n+listener http:MockListener ml = new http:MockListener(8080);\n+\n+public function testListenerVariable() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b03539571ba11720c55c60affdd6928ec9307377"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE0MTcwNg==", "bodyText": "done", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20917#discussion_r377141706", "createdAt": "2020-02-10T15:41:56Z", "author": {"login": "KRVPerera"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/types/finaltypes/final-field-test-negative.bal", "diffHunk": "@@ -71,3 +71,9 @@ function testLocalFinalValueWithoutTypeInitializedFromFunction() {\n function getName() returns string {\n     return \"Ballerina\";\n }\n+\n+listener http:MockListener ml = new http:MockListener(8080);\n+\n+public function testListenerVariable() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkyNTY5MQ=="}, "originalCommit": {"oid": "b03539571ba11720c55c60affdd6928ec9307377"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzODc2NDcyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDowMzozMVrOFohK5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDowMzozMVrOFohK5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzMDgyMQ==", "bodyText": "This is not used anymore. I think safe to remove this.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20917#discussion_r378030821", "createdAt": "2020-02-12T04:03:31Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -2071,6 +2077,7 @@ private void checkConstantAssignment(BLangExpression varRef) {\n         }\n     }\n \n+    // TODO : check if READONLY is used now", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12a51a244bdf47a9b2f7abe7b7234c9cdf448690"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzODc2NTg3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDowNDoyM1rOFohLlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDowNDoyM1rOFohLlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzMDk5OQ==", "bodyText": "Better to move string literals to constants. Same for Listener as well.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20917#discussion_r378030999", "createdAt": "2020-02-12T04:04:23Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -2062,7 +2062,13 @@ private void checkConstantAssignment(BLangExpression varRef) {\n         Name varName = names.fromIdNode(simpleVarRef.variableName);\n         if (!Names.IGNORE.equals(varName) && env.enclInvokable != env.enclPkg.initFunction) {\n             if ((simpleVarRef.symbol.flags & Flags.FINAL) == Flags.FINAL) {\n-                dlog.error(varRef.pos, DiagnosticCode.CANNOT_ASSIGN_VALUE_FINAL, varRef);\n+                if ((simpleVarRef.symbol.flags & Flags.SERVICE) == Flags.SERVICE) {\n+                    dlog.error(varRef.pos, DiagnosticCode.INVALID_VARIABLE_ASSIGNMENT_FINAL, \"service\", varRef);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12a51a244bdf47a9b2f7abe7b7234c9cdf448690"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTIzMTQ5OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/resources/compiler.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODozMjo1NFrOFolgzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODozMjo1NFrOFolgzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMTk2NA==", "bodyText": "Instead of variable, we can say Listener/Service declaration is final.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20917#discussion_r378101964", "createdAt": "2020-02-12T08:32:54Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/resources/compiler.properties", "diffHunk": "@@ -353,6 +353,9 @@ error.no.new.variables.var.assignment=\\\n error.invalid.variable.assignment=\\\n   invalid assignment in variable ''{0}''\n \n+error.invalid.variable.assignment.field.final =\\\n+  invalid assignment: ''{0}'' variable ''{1}'' is final", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12a51a244bdf47a9b2f7abe7b7234c9cdf448690"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTIzNDUxOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODozNDowMVrOFolimQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODozNDowMVrOFolimQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMjQyNQ==", "bodyText": "Sometimes Service name can be anonymous. (name will start with $) In such cases, avoiding name will be good.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20917#discussion_r378102425", "createdAt": "2020-02-12T08:34:01Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -2062,7 +2062,13 @@ private void checkConstantAssignment(BLangExpression varRef) {\n         Name varName = names.fromIdNode(simpleVarRef.variableName);\n         if (!Names.IGNORE.equals(varName) && env.enclInvokable != env.enclPkg.initFunction) {\n             if ((simpleVarRef.symbol.flags & Flags.FINAL) == Flags.FINAL) {\n-                dlog.error(varRef.pos, DiagnosticCode.CANNOT_ASSIGN_VALUE_FINAL, varRef);\n+                if ((simpleVarRef.symbol.flags & Flags.SERVICE) == Flags.SERVICE) {\n+                    dlog.error(varRef.pos, DiagnosticCode.INVALID_VARIABLE_ASSIGNMENT_FINAL, \"service\", varRef);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12a51a244bdf47a9b2f7abe7b7234c9cdf448690"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1173, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}