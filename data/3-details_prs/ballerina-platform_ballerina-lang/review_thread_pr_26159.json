{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1Mjc4NzE1", "number": 26159, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwNTo1MjoxNFrOEpsstg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDo1NTowM1rOEseNMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMTU5NDE0OnYy", "diffSide": "RIGHT", "path": "misc/docerina/src/main/java/org/ballerinalang/docgen/Generator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwNTo1MjoxNFrOHbh0oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNjo1NzoyM1rOHcPoUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYyNzc0NA==", "bodyText": "Is there a possibility to add a unit test for this?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26159#discussion_r498627744", "createdAt": "2020-10-02T05:52:14Z", "author": {"login": "pramodya1994"}, "path": "misc/docerina/src/main/java/org/ballerinalang/docgen/Generator.java", "diffHunk": "@@ -39,6 +39,7 @@\n import org.ballerinalang.model.tree.NodeKind;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37151984f40b02a1dc6a44da1f22bd9e793aa6ae"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3ODI1Ng==", "bodyText": "Added a test case", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26159#discussion_r499378256", "createdAt": "2020-10-05T06:57:23Z", "author": {"login": "shehan360"}, "path": "misc/docerina/src/main/java/org/ballerinalang/docgen/Generator.java", "diffHunk": "@@ -39,6 +39,7 @@\n import org.ballerinalang.model.tree.NodeKind;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYyNzc0NA=="}, "originalCommit": {"oid": "37151984f40b02a1dc6a44da1f22bd9e793aa6ae"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDY3MzYyOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ErrorsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDo1Mjo1OFrOHfu_SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDo1Mjo1OFrOHfu_SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAzNzc2OA==", "bodyText": "Shall we add license header?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26159#discussion_r503037768", "createdAt": "2020-10-12T04:52:58Z", "author": {"login": "pramodya1994"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ErrorsTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.ballerinalang.test.documentation;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c641595521fdc03b8382f912cd543d088b85c5cc"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDY3NDAzOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ErrorsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDo1MzoxN1rOHfu_gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDo1MzoxN1rOHfu_gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAzNzgyNw==", "bodyText": "Shall we add @since annotation?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26159#discussion_r503037827", "createdAt": "2020-10-12T04:53:17Z", "author": {"login": "pramodya1994"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ErrorsTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.ballerinalang.test.documentation;\n+\n+import org.ballerinalang.docgen.docs.BallerinaDocGenerator;\n+import org.ballerinalang.docgen.generator.model.Module;\n+import org.ballerinalang.docgen.generator.model.Project;\n+import org.ballerinalang.docgen.model.ModuleDoc;\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Test cases related to error types in docs.\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c641595521fdc03b8382f912cd543d088b85c5cc"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDY3Njk4OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ErrorsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDo1NTowM1rOHfvBFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDo1NTowM1rOHfvBFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAzODIzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Paths.get(\"src/test/resources\", sourceRoot).toAbsolutePath().toString(), modules);\n          \n          \n            \n                            Paths.get(\"src\", \"test\", \"resources\", sourceRoot).toAbsolutePath().toString(), modules);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26159#discussion_r503038230", "createdAt": "2020-10-12T04:55:03Z", "author": {"login": "pramodya1994"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ErrorsTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.ballerinalang.test.documentation;\n+\n+import org.ballerinalang.docgen.docs.BallerinaDocGenerator;\n+import org.ballerinalang.docgen.generator.model.Module;\n+import org.ballerinalang.docgen.generator.model.Project;\n+import org.ballerinalang.docgen.model.ModuleDoc;\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Test cases related to error types in docs.\n+ */\n+public class ErrorsTest {\n+    private Module testModule;\n+\n+    @BeforeClass\n+    public void setup() throws IOException {\n+        String sourceRoot =\n+                \"test-src\" + File.separator + \"documentation\" + File.separator + \"errors_project\";\n+        CompileResult result = BCompileUtil.compile(sourceRoot, \"test_module\");\n+\n+        List<BLangPackage> modules = new LinkedList<>();\n+        modules.add((BLangPackage) result.getAST());\n+        Map<String, ModuleDoc> docsMap = BallerinaDocGenerator.generateModuleDocs(\n+                Paths.get(\"src/test/resources\", sourceRoot).toAbsolutePath().toString(), modules);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c641595521fdc03b8382f912cd543d088b85c5cc"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4856, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}