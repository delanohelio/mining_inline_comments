{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2NzgyNDUw", "number": 27460, "title": "Fix included record parameter issue with non-basic types", "bodyText": "Purpose\n\n$subject.\n\nFixes #27458\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-12-11T10:27:03Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27460", "merged": true, "mergeCommit": {"oid": "f8b09f7b1f272910610d90a095a3769e15d81019"}, "closed": true, "closedAt": "2020-12-11T13:45:42Z", "author": {"login": "chiranSachintha"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlFRavgH2gAyNTM2NzgyNDUwOmUzMDQ2ZTk1ZjVmNTBkOWZkYTE0NWYyMzQ3OTdkNGFmNTg1MmNmMTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlH_WlAFqTU1MDA5ODA1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e3046e95f5f50d9fda145f234797d4af5852cf18", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e3046e95f5f50d9fda145f234797d4af5852cf18", "committedDate": "2020-12-11T10:20:59Z", "message": "Fix included record parameter issue with non-basic types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bcb904d148388e989eda93e7c855e93b5ef18fc", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7bcb904d148388e989eda93e7c855e93b5ef18fc", "committedDate": "2020-12-11T10:21:09Z", "message": "Add unit tests for included record parameter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMDExODEx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27460#pullrequestreview-550011811", "createdAt": "2020-12-11T11:19:03Z", "commit": {"oid": "7bcb904d148388e989eda93e7c855e93b5ef18fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMToxOTowM1rOID0dWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMToxOTowM1rOID0dWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3NjEyMw==", "bodyText": "As discussed offline, let's check if we can use the expected type for the argument here to make use of the contextual information.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27460#discussion_r540876123", "createdAt": "2020-12-11T11:19:03Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5680,9 +5680,10 @@ private BVarSymbol checkParameterNameForDefaultArgument(BLangIdentifier argName,\n             }\n         }\n         if (incRecordParamAllowAdditionalFields != null) {\n-            LinkedHashMap<String, BField> fields = ((BRecordType) incRecordParamAllowAdditionalFields.type).fields;\n-            if (!fields.containsKey(argName.value) && types.isAssignable(expr.type,\n-                                            ((BRecordType) incRecordParamAllowAdditionalFields.type).restFieldType)) {\n+            BRecordType incRecordType = (BRecordType) incRecordParamAllowAdditionalFields.type;\n+            BType exprType = checkExpr(expr, env);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bcb904d148388e989eda93e7c855e93b5ef18fc"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2096269b1ae220f11edeb96dcfab15b0b410be11", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2096269b1ae220f11edeb96dcfab15b0b410be11", "committedDate": "2020-12-11T11:55:29Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMDY0MzEz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27460#pullrequestreview-550064313", "createdAt": "2020-12-11T12:41:55Z", "commit": {"oid": "2096269b1ae220f11edeb96dcfab15b0b410be11"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMjo0MTo1NVrOID3IOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMjo0Mjo1NlrOID3KcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDkxOTg2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LinkedHashMap<String, BField> fields = incRecordType.fields;\n          \n          \n            \n                        if (!fields.containsKey(argName.value)) {\n          \n          \n            \n                        if (!incRecordType.fields.containsKey(argName.value)) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27460#discussion_r540919864", "createdAt": "2020-12-11T12:41:55Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5680,9 +5680,10 @@ private BVarSymbol checkParameterNameForDefaultArgument(BLangIdentifier argName,\n             }\n         }\n         if (incRecordParamAllowAdditionalFields != null) {\n-            LinkedHashMap<String, BField> fields = ((BRecordType) incRecordParamAllowAdditionalFields.type).fields;\n-            if (!fields.containsKey(argName.value) && types.isAssignable(expr.type,\n-                                            ((BRecordType) incRecordParamAllowAdditionalFields.type).restFieldType)) {\n+            BRecordType incRecordType = (BRecordType) incRecordParamAllowAdditionalFields.type;\n+            checkExpr(expr, env, incRecordType.restFieldType);\n+            LinkedHashMap<String, BField> fields = incRecordType.fields;\n+            if (!fields.containsKey(argName.value)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2096269b1ae220f11edeb96dcfab15b0b410be11"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDkyMDQzMw==", "bodyText": "Shall we also add a test where the contextually expected type is used? e.g., [1, 2] where a float[] is expected.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27460#discussion_r540920433", "createdAt": "2020-12-11T12:42:56Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/functions/functions_with_included_record_parameters.bal", "diffHunk": "@@ -277,6 +283,12 @@ function testFunctionOfFunctionTypedParamWithIncludedRecordParam20() {\n     assertEquality(5, val);\n }\n \n+function testFunctionOfFunctionTypedParamWithIncludedRecordParam21() {\n+    int[] x = [1, 2];\n+    int[] val = functionOfFunctionTypedParamWithIncludedRecordParam21(a = [1, 2]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2096269b1ae220f11edeb96dcfab15b0b410be11"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d139988f0e57ffb3d13263d690cbb4dbe4344e0", "author": {"user": {"login": "chiranSachintha", "name": "Chiran Sachintha"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5d139988f0e57ffb3d13263d690cbb4dbe4344e0", "committedDate": "2020-12-11T12:55:14Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMDk4MDU2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27460#pullrequestreview-550098056", "createdAt": "2020-12-11T13:30:58Z", "commit": {"oid": "5d139988f0e57ffb3d13263d690cbb4dbe4344e0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4582, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}