{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMDQ4OTI0", "number": 22060, "title": "Use ballerina module run approach for single bal files", "bodyText": "Purpose\n\nModify 'RunExecutableTask' to use the process builder approach for single bal files as well.\n\nFixes #22002\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-03-22T18:20:26Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22060", "merged": true, "mergeCommit": {"oid": "499c510e66bd22c4f2bc39d04f83c948441114e5"}, "closed": true, "closedAt": "2020-03-25T09:16:55Z", "author": {"login": "suganyasuven"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQWKVOAFqTM3OTExOTg1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRD6NAgFqTM4MDk2OTQyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTE5ODU4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22060#pullrequestreview-379119858", "createdAt": "2020-03-23T03:57:26Z", "commit": {"oid": "cd89b93eee6b12198f48a9a524dec1c75ef52862"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMzo1NzoyNlrOF52Rdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMzo1NzoyNlrOF52Rdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwMjM1OQ==", "bodyText": "Better to use comments to describe what we do here and the reason behind to always add all the jars inside /bre/lib for single bal file scenario :)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22060#discussion_r396202359", "createdAt": "2020-03-23T03:57:26Z", "author": {"login": "NipunaRanasinghe"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunExecutableTask.java", "diffHunk": "@@ -158,49 +148,15 @@ private void runGeneratedExecutable(BLangPackage executableModule, BuildContext\n         }\n     }\n \n-    /**\n-     * Run an executable that is generated from 'run bal' command.\n-     *\n-     * @param executableModule The module to run.\n-     */\n-    private void runGeneratedExecutableWithSameClassLoader(BLangPackage executableModule, BuildContext buildContext) {\n-\n-        ExecutableJar executableJar = buildContext.moduleDependencyPathMap.get(executableModule.packageID);\n-        String initClassName = BFileUtil.getQualifiedClassName(executableModule.packageID.orgName.value,\n-                executableModule.packageID.name.value,\n-                MODULE_INIT_CLASS_NAME);\n-        try {\n-            URL[] urls = new URL[executableJar.moduleLibs.size() + 1];\n-            urls[0] = buildContext.getJarPathFromTargetCache(executableModule.packageID).toUri().toURL();\n-            int i = 1;\n-            for (Path platformLib : executableJar.moduleLibs) {\n-                urls[i++] = platformLib.toUri().toURL();\n-            }\n-            URLClassLoader classLoader = new URLClassLoader(urls);\n-            Class<?> initClazz = classLoader.loadClass(initClassName);\n-            Method mainMethod = initClazz.getDeclaredMethod(JAVA_MAIN, String[].class);\n-            mainMethod.invoke(null, (Object) this.args);\n-            if (!initClazz.getField(\"serviceEPAvailable\").getBoolean(initClazz)) {\n-                Runtime.getRuntime().exit(0);\n-            }\n-        } catch (MalformedURLException e) {\n-            throw createLauncherException(\"loading jar file failed with given source path \" + this.executableJarPath);\n-        } catch (ClassNotFoundException e) {\n-            throw createLauncherException(\"module init class with name \" + initClassName + \" cannot be found \");\n-        } catch (NoSuchMethodException e) {\n-            throw createLauncherException(\"main method cannot be found for init class \" + initClassName);\n-        } catch (IllegalAccessException | IllegalArgumentException e) {\n-            throw createLauncherException(\"invoking main method failed due to \" + e.getMessage());\n-        } catch (InvocationTargetException | NoSuchFieldException e) {\n-            throw createLauncherException(\"invoking main method failed due to \", e.getCause());\n-        }\n-    }\n-\n     private String getAllClassPaths(BLangPackage executableModule, BuildContext buildContext) {\n         StringJoiner cp = new StringJoiner(File.pathSeparator);\n         // Adds executable thin jar path.\n         cp.add(this.executableJarPath.toString());\n         // Adds all the dependency paths.\n+        if (buildContext.getSourceType() == SINGLE_BAL_FILE) {\n+            cp.add(System.getProperty(BALLERINA_HOME) + \"/bre/lib/*\");\n+            return cp.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd89b93eee6b12198f48a9a524dec1c75ef52862"}, "originalPosition": 90}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTU0MjEy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22060#pullrequestreview-379154212", "createdAt": "2020-03-23T06:15:44Z", "commit": {"oid": "35e8c7bf86ba58077b5fec2f819d67f10f174f51"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjoxNTo0NFrOF54ATg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjoxNTo0NFrOF54ATg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzMDczNA==", "bodyText": "Shall we use   String balHomePath = buildContext.get(BuildContextField.HOME_REPO).toString() for getting ballerina home as we did in other tasks", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22060#discussion_r396230734", "createdAt": "2020-03-23T06:15:44Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunExecutableTask.java", "diffHunk": "@@ -158,49 +148,17 @@ private void runGeneratedExecutable(BLangPackage executableModule, BuildContext\n         }\n     }\n \n-    /**\n-     * Run an executable that is generated from 'run bal' command.\n-     *\n-     * @param executableModule The module to run.\n-     */\n-    private void runGeneratedExecutableWithSameClassLoader(BLangPackage executableModule, BuildContext buildContext) {\n-\n-        ExecutableJar executableJar = buildContext.moduleDependencyPathMap.get(executableModule.packageID);\n-        String initClassName = BFileUtil.getQualifiedClassName(executableModule.packageID.orgName.value,\n-                executableModule.packageID.name.value,\n-                MODULE_INIT_CLASS_NAME);\n-        try {\n-            URL[] urls = new URL[executableJar.moduleLibs.size() + 1];\n-            urls[0] = buildContext.getJarPathFromTargetCache(executableModule.packageID).toUri().toURL();\n-            int i = 1;\n-            for (Path platformLib : executableJar.moduleLibs) {\n-                urls[i++] = platformLib.toUri().toURL();\n-            }\n-            URLClassLoader classLoader = new URLClassLoader(urls);\n-            Class<?> initClazz = classLoader.loadClass(initClassName);\n-            Method mainMethod = initClazz.getDeclaredMethod(JAVA_MAIN, String[].class);\n-            mainMethod.invoke(null, (Object) this.args);\n-            if (!initClazz.getField(\"serviceEPAvailable\").getBoolean(initClazz)) {\n-                Runtime.getRuntime().exit(0);\n-            }\n-        } catch (MalformedURLException e) {\n-            throw createLauncherException(\"loading jar file failed with given source path \" + this.executableJarPath);\n-        } catch (ClassNotFoundException e) {\n-            throw createLauncherException(\"module init class with name \" + initClassName + \" cannot be found \");\n-        } catch (NoSuchMethodException e) {\n-            throw createLauncherException(\"main method cannot be found for init class \" + initClassName);\n-        } catch (IllegalAccessException | IllegalArgumentException e) {\n-            throw createLauncherException(\"invoking main method failed due to \" + e.getMessage());\n-        } catch (InvocationTargetException | NoSuchFieldException e) {\n-            throw createLauncherException(\"invoking main method failed due to \", e.getCause());\n-        }\n-    }\n-\n     private String getAllClassPaths(BLangPackage executableModule, BuildContext buildContext) {\n         StringJoiner cp = new StringJoiner(File.pathSeparator);\n         // Adds executable thin jar path.\n         cp.add(this.executableJarPath.toString());\n-        // Adds all the dependency paths.\n+        if (buildContext.getSourceType() == SINGLE_BAL_FILE) {\n+            // Adds '<ballerina-home>/bre/lib/*' to the class-path since we need to have ballerina runtime\n+            // related dependencies when running single bal files.\n+            cp.add(System.getProperty(BALLERINA_HOME) + \"/bre/lib/*\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35e8c7bf86ba58077b5fec2f819d67f10f174f51"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTU0OTMw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22060#pullrequestreview-379154930", "createdAt": "2020-03-23T06:18:01Z", "commit": {"oid": "35e8c7bf86ba58077b5fec2f819d67f10f174f51"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjoxODowMVrOF54Cqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjoxODowMVrOF54Cqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzMTMzOQ==", "bodyText": "Shall we make this method to get the parameters instead of calculating inside method which would be more clear.\nex. getAllClassPaths(BLangPackage executableModule, boolean isSingleFileContext, String ballerinaHome)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22060#discussion_r396231339", "createdAt": "2020-03-23T06:18:01Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunExecutableTask.java", "diffHunk": "@@ -158,49 +148,17 @@ private void runGeneratedExecutable(BLangPackage executableModule, BuildContext\n         }\n     }\n \n-    /**\n-     * Run an executable that is generated from 'run bal' command.\n-     *\n-     * @param executableModule The module to run.\n-     */\n-    private void runGeneratedExecutableWithSameClassLoader(BLangPackage executableModule, BuildContext buildContext) {\n-\n-        ExecutableJar executableJar = buildContext.moduleDependencyPathMap.get(executableModule.packageID);\n-        String initClassName = BFileUtil.getQualifiedClassName(executableModule.packageID.orgName.value,\n-                executableModule.packageID.name.value,\n-                MODULE_INIT_CLASS_NAME);\n-        try {\n-            URL[] urls = new URL[executableJar.moduleLibs.size() + 1];\n-            urls[0] = buildContext.getJarPathFromTargetCache(executableModule.packageID).toUri().toURL();\n-            int i = 1;\n-            for (Path platformLib : executableJar.moduleLibs) {\n-                urls[i++] = platformLib.toUri().toURL();\n-            }\n-            URLClassLoader classLoader = new URLClassLoader(urls);\n-            Class<?> initClazz = classLoader.loadClass(initClassName);\n-            Method mainMethod = initClazz.getDeclaredMethod(JAVA_MAIN, String[].class);\n-            mainMethod.invoke(null, (Object) this.args);\n-            if (!initClazz.getField(\"serviceEPAvailable\").getBoolean(initClazz)) {\n-                Runtime.getRuntime().exit(0);\n-            }\n-        } catch (MalformedURLException e) {\n-            throw createLauncherException(\"loading jar file failed with given source path \" + this.executableJarPath);\n-        } catch (ClassNotFoundException e) {\n-            throw createLauncherException(\"module init class with name \" + initClassName + \" cannot be found \");\n-        } catch (NoSuchMethodException e) {\n-            throw createLauncherException(\"main method cannot be found for init class \" + initClassName);\n-        } catch (IllegalAccessException | IllegalArgumentException e) {\n-            throw createLauncherException(\"invoking main method failed due to \" + e.getMessage());\n-        } catch (InvocationTargetException | NoSuchFieldException e) {\n-            throw createLauncherException(\"invoking main method failed due to \", e.getCause());\n-        }\n-    }\n-\n     private String getAllClassPaths(BLangPackage executableModule, BuildContext buildContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35e8c7bf86ba58077b5fec2f819d67f10f174f51"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MjA2MjA1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22060#pullrequestreview-379206205", "createdAt": "2020-03-23T08:16:36Z", "commit": {"oid": "f4c8f4ee2639b0bc77e38ee1444bc53f831a1cd3"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwODoxNjozNlrOF56j_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwODoxNzo0MFrOF56l2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI3MjYzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private String getAllClassPaths(BLangPackage executableModule, boolean isSingleFileContext,\n          \n          \n            \n                                                BuildContext buildContext) {\n          \n          \n            \n                private String getAllClassPaths(BLangPackage executableModule, BuildContext buildContext) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22060#discussion_r396272639", "createdAt": "2020-03-23T08:16:36Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunExecutableTask.java", "diffHunk": "@@ -158,49 +148,18 @@ private void runGeneratedExecutable(BLangPackage executableModule, BuildContext\n         }\n     }\n \n-    /**\n-     * Run an executable that is generated from 'run bal' command.\n-     *\n-     * @param executableModule The module to run.\n-     */\n-    private void runGeneratedExecutableWithSameClassLoader(BLangPackage executableModule, BuildContext buildContext) {\n-\n-        ExecutableJar executableJar = buildContext.moduleDependencyPathMap.get(executableModule.packageID);\n-        String initClassName = BFileUtil.getQualifiedClassName(executableModule.packageID.orgName.value,\n-                executableModule.packageID.name.value,\n-                MODULE_INIT_CLASS_NAME);\n-        try {\n-            URL[] urls = new URL[executableJar.moduleLibs.size() + 1];\n-            urls[0] = buildContext.getJarPathFromTargetCache(executableModule.packageID).toUri().toURL();\n-            int i = 1;\n-            for (Path platformLib : executableJar.moduleLibs) {\n-                urls[i++] = platformLib.toUri().toURL();\n-            }\n-            URLClassLoader classLoader = new URLClassLoader(urls);\n-            Class<?> initClazz = classLoader.loadClass(initClassName);\n-            Method mainMethod = initClazz.getDeclaredMethod(JAVA_MAIN, String[].class);\n-            mainMethod.invoke(null, (Object) this.args);\n-            if (!initClazz.getField(\"serviceEPAvailable\").getBoolean(initClazz)) {\n-                Runtime.getRuntime().exit(0);\n-            }\n-        } catch (MalformedURLException e) {\n-            throw createLauncherException(\"loading jar file failed with given source path \" + this.executableJarPath);\n-        } catch (ClassNotFoundException e) {\n-            throw createLauncherException(\"module init class with name \" + initClassName + \" cannot be found \");\n-        } catch (NoSuchMethodException e) {\n-            throw createLauncherException(\"main method cannot be found for init class \" + initClassName);\n-        } catch (IllegalAccessException | IllegalArgumentException e) {\n-            throw createLauncherException(\"invoking main method failed due to \" + e.getMessage());\n-        } catch (InvocationTargetException | NoSuchFieldException e) {\n-            throw createLauncherException(\"invoking main method failed due to \", e.getCause());\n-        }\n-    }\n-\n-    private String getAllClassPaths(BLangPackage executableModule, BuildContext buildContext) {\n+    private String getAllClassPaths(BLangPackage executableModule, boolean isSingleFileContext,\n+                                    BuildContext buildContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c8f4ee2639b0bc77e38ee1444bc53f831a1cd3"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI3Mjg3MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (isSingleFileContext) {\n          \n          \n            \n                    if (buildContext.getSourceType().equals(SINGLE_BAL_FILE)) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22060#discussion_r396272870", "createdAt": "2020-03-23T08:17:07Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunExecutableTask.java", "diffHunk": "@@ -158,49 +148,18 @@ private void runGeneratedExecutable(BLangPackage executableModule, BuildContext\n         }\n     }\n \n-    /**\n-     * Run an executable that is generated from 'run bal' command.\n-     *\n-     * @param executableModule The module to run.\n-     */\n-    private void runGeneratedExecutableWithSameClassLoader(BLangPackage executableModule, BuildContext buildContext) {\n-\n-        ExecutableJar executableJar = buildContext.moduleDependencyPathMap.get(executableModule.packageID);\n-        String initClassName = BFileUtil.getQualifiedClassName(executableModule.packageID.orgName.value,\n-                executableModule.packageID.name.value,\n-                MODULE_INIT_CLASS_NAME);\n-        try {\n-            URL[] urls = new URL[executableJar.moduleLibs.size() + 1];\n-            urls[0] = buildContext.getJarPathFromTargetCache(executableModule.packageID).toUri().toURL();\n-            int i = 1;\n-            for (Path platformLib : executableJar.moduleLibs) {\n-                urls[i++] = platformLib.toUri().toURL();\n-            }\n-            URLClassLoader classLoader = new URLClassLoader(urls);\n-            Class<?> initClazz = classLoader.loadClass(initClassName);\n-            Method mainMethod = initClazz.getDeclaredMethod(JAVA_MAIN, String[].class);\n-            mainMethod.invoke(null, (Object) this.args);\n-            if (!initClazz.getField(\"serviceEPAvailable\").getBoolean(initClazz)) {\n-                Runtime.getRuntime().exit(0);\n-            }\n-        } catch (MalformedURLException e) {\n-            throw createLauncherException(\"loading jar file failed with given source path \" + this.executableJarPath);\n-        } catch (ClassNotFoundException e) {\n-            throw createLauncherException(\"module init class with name \" + initClassName + \" cannot be found \");\n-        } catch (NoSuchMethodException e) {\n-            throw createLauncherException(\"main method cannot be found for init class \" + initClassName);\n-        } catch (IllegalAccessException | IllegalArgumentException e) {\n-            throw createLauncherException(\"invoking main method failed due to \" + e.getMessage());\n-        } catch (InvocationTargetException | NoSuchFieldException e) {\n-            throw createLauncherException(\"invoking main method failed due to \", e.getCause());\n-        }\n-    }\n-\n-    private String getAllClassPaths(BLangPackage executableModule, BuildContext buildContext) {\n+    private String getAllClassPaths(BLangPackage executableModule, boolean isSingleFileContext,\n+                                    BuildContext buildContext) {\n         StringJoiner cp = new StringJoiner(File.pathSeparator);\n         // Adds executable thin jar path.\n         cp.add(this.executableJarPath.toString());\n-        // Adds all the dependency paths.\n+        if (isSingleFileContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c8f4ee2639b0bc77e38ee1444bc53f831a1cd3"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI3Mjk4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        commands.add(getAllClassPaths(executableModule, isSingleFileContext, buildContext));\n          \n          \n            \n                        commands.add(getAllClassPaths(executableModule, buildContext));", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22060#discussion_r396272981", "createdAt": "2020-03-23T08:17:23Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunExecutableTask.java", "diffHunk": "@@ -138,12 +127,13 @@ private void runGeneratedExecutable(BLangPackage executableModule, BuildContext\n \n         String initClassName = BFileUtil.getQualifiedClassName(executableModule.packageID.orgName.value,\n                 executableModule.packageID.name.value, MODULE_INIT_CLASS_NAME);\n+        boolean isSingleFileContext = buildContext.getSourceType().equals(SINGLE_BAL_FILE);\n         try {\n             List<String> commands = new ArrayList<>();\n             commands.add(\"java\");\n             // Sets classpath with executable thin jar and all dependency jar paths.\n             commands.add(\"-cp\");\n-            commands.add(getAllClassPaths(executableModule, buildContext));\n+            commands.add(getAllClassPaths(executableModule, isSingleFileContext, buildContext));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c8f4ee2639b0bc77e38ee1444bc53f831a1cd3"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI3MzExMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    boolean isSingleFileContext = buildContext.getSourceType().equals(SINGLE_BAL_FILE);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22060#discussion_r396273113", "createdAt": "2020-03-23T08:17:40Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunExecutableTask.java", "diffHunk": "@@ -138,12 +127,13 @@ private void runGeneratedExecutable(BLangPackage executableModule, BuildContext\n \n         String initClassName = BFileUtil.getQualifiedClassName(executableModule.packageID.orgName.value,\n                 executableModule.packageID.name.value, MODULE_INIT_CLASS_NAME);\n+        boolean isSingleFileContext = buildContext.getSourceType().equals(SINGLE_BAL_FILE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c8f4ee2639b0bc77e38ee1444bc53f831a1cd3"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0437f28b317dea624dad1a640302dee3d9e683a", "author": {"user": {"login": "suganyasuven", "name": "Suganya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f0437f28b317dea624dad1a640302dee3d9e683a", "committedDate": "2020-03-23T10:42:35Z", "message": "Use process builder approach for single bal files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95f58cfac3d2c04a79066c74842b8e3bef264ab2", "author": {"user": {"login": "suganyasuven", "name": "Suganya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/95f58cfac3d2c04a79066c74842b8e3bef264ab2", "committedDate": "2020-03-23T10:42:52Z", "message": "Merge https://github.com/ballerina-platform/ballerina-lang into fix-22002-stage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTY5NDI3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22060#pullrequestreview-380969427", "createdAt": "2020-03-25T09:16:05Z", "commit": {"oid": "95f58cfac3d2c04a79066c74842b8e3bef264ab2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3762, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}