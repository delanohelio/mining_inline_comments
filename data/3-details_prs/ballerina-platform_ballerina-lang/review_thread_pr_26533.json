{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MzUzODY2", "number": 26533, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1NToyMlrOEw1a_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1NToyMlrOEw1a_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjQyMzY3OnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/TypeChecker.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1NToyMlrOHmouuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxOTo1OToyMVrOHmxqSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3NTI1Ng==", "bodyText": "Is it enough to simply check if the two types are compatible? What about the behaviour if the record type contains a never field? \ud83e\udd14", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26533#discussion_r510275256", "createdAt": "2020-10-22T15:55:22Z", "author": {"login": "pubudu91"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/TypeChecker.java", "diffHunk": "@@ -1156,17 +1196,24 @@ private static boolean checkRecordBelongsToAnydataType(MapValue sourceVal, BReco\n \n     private static boolean checkIsRecordType(Object sourceVal, Type sourceType, BRecordType targetType,\n                                              List<TypePair> unresolvedTypes) {\n-        if (sourceType.getTag() != TypeTags.RECORD_TYPE_TAG) {\n-            return false;\n+        switch (sourceType.getTag()) {\n+            case TypeTags.RECORD_TYPE_TAG:\n+                return checkIsRecordType((MapValue) sourceVal, (BRecordType) sourceType, targetType, unresolvedTypes);\n+            case TypeTags.MAP_TAG:\n+                return checkIsRecordType((BMapType) sourceType, targetType, unresolvedTypes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ac94c99c276d065300e92d7401feb11a90ac969"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI5Nzg1Ng==", "bodyText": "Since we check the source map's constraint against the field type in https://github.com/ballerina-platform/ballerina-lang/pull/26533/files#diff-19c04b50f4303ca57559920287e2ca9ef20fd7ddaad5b7c75d425c340ec5421dR1151, that shouldn't be an issue, right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26533#discussion_r510297856", "createdAt": "2020-10-22T16:27:35Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/TypeChecker.java", "diffHunk": "@@ -1156,17 +1196,24 @@ private static boolean checkRecordBelongsToAnydataType(MapValue sourceVal, BReco\n \n     private static boolean checkIsRecordType(Object sourceVal, Type sourceType, BRecordType targetType,\n                                              List<TypePair> unresolvedTypes) {\n-        if (sourceType.getTag() != TypeTags.RECORD_TYPE_TAG) {\n-            return false;\n+        switch (sourceType.getTag()) {\n+            case TypeTags.RECORD_TYPE_TAG:\n+                return checkIsRecordType((MapValue) sourceVal, (BRecordType) sourceType, targetType, unresolvedTypes);\n+            case TypeTags.MAP_TAG:\n+                return checkIsRecordType((BMapType) sourceType, targetType, unresolvedTypes);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3NTI1Ng=="}, "originalCommit": {"oid": "8ac94c99c276d065300e92d7401feb11a90ac969"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQyMTU3OQ==", "bodyText": "Had a chat with Maryam and got this clarified.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26533#discussion_r510421579", "createdAt": "2020-10-22T19:59:21Z", "author": {"login": "pubudu91"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/TypeChecker.java", "diffHunk": "@@ -1156,17 +1196,24 @@ private static boolean checkRecordBelongsToAnydataType(MapValue sourceVal, BReco\n \n     private static boolean checkIsRecordType(Object sourceVal, Type sourceType, BRecordType targetType,\n                                              List<TypePair> unresolvedTypes) {\n-        if (sourceType.getTag() != TypeTags.RECORD_TYPE_TAG) {\n-            return false;\n+        switch (sourceType.getTag()) {\n+            case TypeTags.RECORD_TYPE_TAG:\n+                return checkIsRecordType((MapValue) sourceVal, (BRecordType) sourceType, targetType, unresolvedTypes);\n+            case TypeTags.MAP_TAG:\n+                return checkIsRecordType((BMapType) sourceType, targetType, unresolvedTypes);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3NTI1Ng=="}, "originalCommit": {"oid": "8ac94c99c276d065300e92d7401feb11a90ac969"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4626, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}