{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMTYxMjI1", "number": 24478, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTowOToxMFrOEKXRSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTowOToxMFrOEKXRSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzAyNDc0OnYy", "diffSide": "RIGHT", "path": "stdlib/cache/src/main/ballerina/src/cache/cache_errors.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTowOToxMFrOGrW9Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNjo1ODozM1rOGrZNAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExODA5MQ==", "bodyText": "Shall we use a constant for \"DEBUG\" as it has been used in multiple places?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24478#discussion_r448118091", "createdAt": "2020-07-01T05:09:10Z", "author": {"login": "chamil321"}, "path": "stdlib/cache/src/main/ballerina/src/cache/cache_errors.bal", "diffHunk": "@@ -23,29 +23,18 @@ public type CacheError distinct error;\n # Represents Cache related errors.\n public type Error CacheError;\n \n-# Prepare the `error` as a `cache:Error` after printing an error log.\n+# Prepare the `error` as a `cache:Error` after printing an log with provided log level.\n #\n # + message - Error message\n # + err - `error` instance\n+# + logLevel - Log level of the error message\n # + return - Prepared `Error` instance\n-function prepareError(string message, error? err = ()) returns Error {\n-    log:printError(message, err);\n-    Error cacheError;\n-    if (err is error) {\n-        cacheError = CacheError(message, err);\n-    } else {\n-        cacheError = CacheError(message);\n+function prepareError(string message, error? err = (), public string logLevel = \"ERROR\") returns Error {\n+    if (logLevel == \"ERROR\") {\n+        log:printError(message, err);\n+    } else if (logLevel == \"DEBUG\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "826844e013718dca27e94ed782a9f4b3e92fa82c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE1NDg4MA==", "bodyText": "Fixed with ab5abed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24478#discussion_r448154880", "createdAt": "2020-07-01T06:58:33Z", "author": {"login": "ldclakmal"}, "path": "stdlib/cache/src/main/ballerina/src/cache/cache_errors.bal", "diffHunk": "@@ -23,29 +23,18 @@ public type CacheError distinct error;\n # Represents Cache related errors.\n public type Error CacheError;\n \n-# Prepare the `error` as a `cache:Error` after printing an error log.\n+# Prepare the `error` as a `cache:Error` after printing an log with provided log level.\n #\n # + message - Error message\n # + err - `error` instance\n+# + logLevel - Log level of the error message\n # + return - Prepared `Error` instance\n-function prepareError(string message, error? err = ()) returns Error {\n-    log:printError(message, err);\n-    Error cacheError;\n-    if (err is error) {\n-        cacheError = CacheError(message, err);\n-    } else {\n-        cacheError = CacheError(message);\n+function prepareError(string message, error? err = (), public string logLevel = \"ERROR\") returns Error {\n+    if (logLevel == \"ERROR\") {\n+        log:printError(message, err);\n+    } else if (logLevel == \"DEBUG\") {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExODA5MQ=="}, "originalCommit": {"oid": "826844e013718dca27e94ed782a9f4b3e92fa82c"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3292, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}