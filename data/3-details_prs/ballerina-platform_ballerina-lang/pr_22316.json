{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NjAzODc0", "number": 22316, "title": "[master] Add support for record -> json assignment", "bodyText": "Purpose\n\nThis PR adds support for assigning compatible records to json.\nFixes #18697\nFixes #22306\n\nSamples\npublic function main() {\n    Person p = {};\n    json j = p; // Used to be a compile error\n}\n\ntype Person record {|\n    string name = \"\";\n    int age = 0;\n|};\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-03-30T12:00:22Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22316", "merged": true, "mergeCommit": {"oid": "31b0551c910b31974516e5ac9cc4527dc69751d5"}, "closed": true, "closedAt": "2020-04-01T06:50:02Z", "author": {"login": "pubudu91"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcStPbfAH2gAyMzk1NjAzODc0OjIyZjI2NTZhZWUzYjYzZjUxY2IzMTMyZjE3NzA5MWZmNWE4M2I5NDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTR_PHAFqTM4NTMwNDg4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "22f2656aee3b63f51cb3132f177091ff5a83b945", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/22f2656aee3b63f51cb3132f177091ff5a83b945", "committedDate": "2020-03-30T11:59:18Z", "message": "Add support for record -> json assignment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NDk1OTky", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22316#pullrequestreview-384495992", "createdAt": "2020-03-31T08:11:11Z", "commit": {"oid": "22f2656aee3b63f51cb3132f177091ff5a83b945"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODoxMToxMlrOF-KGYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODozODo1OVrOF-LJtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcyMTUwNQ==", "bodyText": "Not related to this PR, but returning true for isJSONObject if  typeTag == TypeTags.JSON_TAG is wrong right? And we need to check the map's constraint too assuming this is a generic method.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22316#discussion_r400721505", "createdAt": "2020-03-31T08:11:12Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/JSONUtils.java", "diffHunk": "@@ -297,7 +297,8 @@ public static boolean isJSONObject(Object json) {\n         }\n \n         BType type = ((RefValue) json).getType();\n-        return type.getTag() == TypeTags.JSON_TAG || type.getTag() == TypeTags.MAP_TAG;\n+        int typeTag = type.getTag();\n+        return typeTag == TypeTags.JSON_TAG || typeTag == TypeTags.MAP_TAG || typeTag == TypeTags.RECORD_TYPE_TAG;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22f2656aee3b63f51cb3132f177091ff5a83b945"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczODAyNA==", "bodyText": "Shouldn't we just return false?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22316#discussion_r400738024", "createdAt": "2020-03-31T08:37:50Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -618,17 +622,34 @@ private boolean isAssignable(BType source, BType target, Set<TypePair> unresolve\n                 isArrayTypesAssignable(source, target, unresolvedTypes);\n     }\n \n-    private boolean isAssignableRecordType(BRecordType recordType, BMapType targetMapType) {\n+    private boolean isAssignableRecordType(BRecordType recordType, BType type) {\n+        BType targetType;\n+        switch (type.tag) {\n+            case TypeTags.MAP:\n+                targetType = ((BMapType) type).constraint;\n+                break;\n+            case TypeTags.JSON:\n+                targetType = type;\n+                break;\n+            default:\n+                throw new IllegalArgumentException(\"Incompatible target type: \" + type.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22f2656aee3b63f51cb3132f177091ff5a83b945"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczODY1Nw==", "bodyText": "Shall we move this logic to recordFieldsAssignableToType. Rest fields are also record fields?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22316#discussion_r400738657", "createdAt": "2020-03-31T08:38:50Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -618,17 +622,34 @@ private boolean isAssignable(BType source, BType target, Set<TypePair> unresolve\n                 isArrayTypesAssignable(source, target, unresolvedTypes);\n     }\n \n-    private boolean isAssignableRecordType(BRecordType recordType, BMapType targetMapType) {\n+    private boolean isAssignableRecordType(BRecordType recordType, BType type) {\n+        BType targetType;\n+        switch (type.tag) {\n+            case TypeTags.MAP:\n+                targetType = ((BMapType) type).constraint;\n+                break;\n+            case TypeTags.JSON:\n+                targetType = type;\n+                break;\n+            default:\n+                throw new IllegalArgumentException(\"Incompatible target type: \" + type.toString());\n+        }\n+\n         if (recordType.sealed) {\n-            return recordFieldsAssignableToMap(recordType, targetMapType);\n+            return recordFieldsAssignableToType(recordType, targetType);\n         } else {\n-            return isAssignable(recordType.restFieldType, targetMapType.constraint)\n-                    && recordFieldsAssignableToMap(recordType, targetMapType);\n+            return recordFieldsAssignableToType(recordType, targetType) &&\n+                    isAssignable(recordType.restFieldType, targetType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22f2656aee3b63f51cb3132f177091ff5a83b945"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczODc0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *   Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n             *   Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22316#discussion_r400738742", "createdAt": "2020-03-31T08:38:59Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/json/RecordToJSONTest.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ *   Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22f2656aee3b63f51cb3132f177091ff5a83b945"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "804641c1e06678783c2934c3cd8e93b95c390290", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/804641c1e06678783c2934c3cd8e93b95c390290", "committedDate": "2020-03-31T09:43:21Z", "message": "Fix checkstyle issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10a0a381decb2cf76cab579f8d1c8754f75ae848", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/10a0a381decb2cf76cab579f8d1c8754f75ae848", "committedDate": "2020-03-31T09:52:41Z", "message": "Update tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/json/RecordToJSONTest.java\n\nCo-Authored-By: Maryam Ziyad <maryamziyadm@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "223bf6f27769209ba8c3b783fcbf6d81b7cb10cd", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/223bf6f27769209ba8c3b783fcbf6d81b7cb10cd", "committedDate": "2020-03-31T10:15:39Z", "message": "Simplify the record field assignability check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b4eaeab6e39b5cf11c6e0dbd24855b4643cf582", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4b4eaeab6e39b5cf11c6e0dbd24855b4643cf582", "committedDate": "2020-03-31T16:20:12Z", "message": "Remove unnecessary JSON type check in JSONUtils"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzA0ODg1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22316#pullrequestreview-385304885", "createdAt": "2020-04-01T06:48:06Z", "commit": {"oid": "4b4eaeab6e39b5cf11c6e0dbd24855b4643cf582"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4089, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}