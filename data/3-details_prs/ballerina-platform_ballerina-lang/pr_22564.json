{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNzYyNzMx", "number": 22564, "title": "Fix API docs of module-system", "bodyText": "Purpose\n\n$Title", "createdAt": "2020-04-10T05:23:42Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564", "merged": true, "mergeCommit": {"oid": "bf3a40099eb52d9fee60ce5113a9169ffa2b2778"}, "closed": true, "closedAt": "2020-04-13T03:42:49Z", "author": {"login": "chamil321"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWKspbAH2gAyNDAxNzYyNzMxOjVhMjA2NTkwMGExZjM0YWU3NmZjOTY5MDQyYzlhNWIzOTVhYjI5NTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWf5pFAFqTM5MTc0MTg1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5a2065900a1f34ae76fc969042c9a5b395ab2956", "committedDate": "2020-04-10T06:00:14Z", "message": "Fix API docs of module-system"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "032ef329786dd7eb40ba256ea576849be2655cac", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/032ef329786dd7eb40ba256ea576849be2655cac", "committedDate": "2020-04-10T05:21:55Z", "message": "Fix API docs of module-system"}, "afterCommit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5a2065900a1f34ae76fc969042c9a5b395ab2956", "committedDate": "2020-04-10T06:00:14Z", "message": "Fix API docs of module-system"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTM5NTMw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#pullrequestreview-391539530", "createdAt": "2020-04-10T16:40:32Z", "commit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo0MDozMlrOGD_g2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo0Mzo0M1rOGD_mPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzOTUxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This module provides functions to retrieve information about the system and the current users of the system. The `system:exec` method creates the `system:Process` object that can control and obtain information about the ballerina process.\n          \n          \n            \n            This module provides functions to retrieve information about the system and the current users of the system. The `system:exec` method creates the `system:Process` object, which can control and obtain information about a Ballerina process.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r406839514", "createdAt": "2020-04-10T16:40:32Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/Module.md", "diffHunk": "@@ -1,26 +1,5 @@\n ## Module overview\n \n-This module provides functions to retrieve information about the system and the current users of the system.\n+This module provides functions to retrieve information about the system and the current users of the system. The `system:exec` method creates the `system:Process` object that can control and obtain information about the ballerina process.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzOTYwNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Waits for the process to finish it's work and exit.\n          \n          \n            \n            # Waits for the process to finish its work and exit.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r406839605", "createdAt": "2020-04-10T16:40:46Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/process.bal", "diffHunk": "@@ -23,51 +23,72 @@ public type Process object {\n \n     private int BUF_SIZE = 10240;\n \n-    # Waits for the process to finish it's work and exit.\n-    #\n-    # + return - Returns the exit code for the process, or an `Error` if a failure occurs\n-    public function waitForExit() returns int | Error {\n+# Waits for the process to finish it's work and exit.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzOTY4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Returns the exit code for the process, or an `Error` if a failure occurs\n          \n          \n            \n            # + return - Returns the exit code for the process or else an `Error` if a failure occurs\n          \n      \n    \n    \n  \n\nneed to specify the error type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r406839682", "createdAt": "2020-04-10T16:40:56Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/process.bal", "diffHunk": "@@ -23,51 +23,72 @@ public type Process object {\n \n     private int BUF_SIZE = 10240;\n \n-    # Waits for the process to finish it's work and exit.\n-    #\n-    # + return - Returns the exit code for the process, or an `Error` if a failure occurs\n-    public function waitForExit() returns int | Error {\n+# Waits for the process to finish it's work and exit.\n+# ```ballerina\n+# int|error exitCode = process.waitForExit();\n+# ```\n+#\n+# + return - Returns the exit code for the process, or an `Error` if a failure occurs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzOTk5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Returns the exit code of the process, or an `Error` if the process hasn't exited yet\n          \n          \n            \n            # + return - Returns the exit code of the process or else an `Error` if the process hasn't exited yet\n          \n      \n    \n    \n  \n\nSpecify the error type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r406839994", "createdAt": "2020-04-10T16:41:40Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/process.bal", "diffHunk": "@@ -23,51 +23,72 @@ public type Process object {\n \n     private int BUF_SIZE = 10240;\n \n-    # Waits for the process to finish it's work and exit.\n-    #\n-    # + return - Returns the exit code for the process, or an `Error` if a failure occurs\n-    public function waitForExit() returns int | Error {\n+# Waits for the process to finish it's work and exit.\n+# ```ballerina\n+# int|error exitCode = process.waitForExit();\n+# ```\n+#\n+# + return - Returns the exit code for the process, or an `Error` if a failure occurs\n+    public function waitForExit() returns int|Error {\n         return nativeWaitForExit(self);\n     }\n \n-    # Returns the exit code of the process when it has finished the execution.\n-    # Error if the process has not exited yet.\n-    #\n-    # + return - Returns the exit code of the process, or an `Error` if the process hasn't exited yet\n-    public function exitCode() returns int | Error {\n+# Returns the exit code of the process when it has finished the execution.\n+# Error if the process has not exited yet.\n+# ```ballerina\n+# int|error exitCode = process.exitCode();\n+# ```\n+#\n+# + return - Returns the exit code of the process, or an `Error` if the process hasn't exited yet", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MDExMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The `io:WritableByteChannel` which represents the process's 'standard input'\n          \n          \n            \n            # + return - The `io:WritableByteChannel`, which represents the process's 'standard input'", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r406840112", "createdAt": "2020-04-10T16:41:54Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/process.bal", "diffHunk": "@@ -23,51 +23,72 @@ public type Process object {\n \n     private int BUF_SIZE = 10240;\n \n-    # Waits for the process to finish it's work and exit.\n-    #\n-    # + return - Returns the exit code for the process, or an `Error` if a failure occurs\n-    public function waitForExit() returns int | Error {\n+# Waits for the process to finish it's work and exit.\n+# ```ballerina\n+# int|error exitCode = process.waitForExit();\n+# ```\n+#\n+# + return - Returns the exit code for the process, or an `Error` if a failure occurs\n+    public function waitForExit() returns int|Error {\n         return nativeWaitForExit(self);\n     }\n \n-    # Returns the exit code of the process when it has finished the execution.\n-    # Error if the process has not exited yet.\n-    #\n-    # + return - Returns the exit code of the process, or an `Error` if the process hasn't exited yet\n-    public function exitCode() returns int | Error {\n+# Returns the exit code of the process when it has finished the execution.\n+# Error if the process has not exited yet.\n+# ```ballerina\n+# int|error exitCode = process.exitCode();\n+# ```\n+#\n+# + return - Returns the exit code of the process, or an `Error` if the process hasn't exited yet\n+    public function exitCode() returns int|Error {\n         return nativeExitCode(self);\n     }\n \n-    # Destroys the process.\n+# Destroys the process.\n+# ```ballerina\n+# process.destroy();\n+# ```\n     public function destroy() {\n         return nativeDestroy(self);\n     }\n \n-    # Provides a channel (to write into), which is made available as the 'standard input' for the process.\n-    #\n-    # + return - The `io:WritableByteChannel` which represents the process's 'standard input'\n+# Provides a channel (to write into), which is made available as the 'standard input' for the process.\n+# ```ballerina\n+# io:WritableByteChannel output = process.stdin();\n+# ```\n+#\n+# + return - The `io:WritableByteChannel` which represents the process's 'standard input'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MDIwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The `io:ReadableByteChannel` which represents the process's 'standard output'\n          \n          \n            \n            # + return - The `io:ReadableByteChannel`, which represents the process's 'standard output'", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r406840202", "createdAt": "2020-04-10T16:42:07Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/process.bal", "diffHunk": "@@ -23,51 +23,72 @@ public type Process object {\n \n     private int BUF_SIZE = 10240;\n \n-    # Waits for the process to finish it's work and exit.\n-    #\n-    # + return - Returns the exit code for the process, or an `Error` if a failure occurs\n-    public function waitForExit() returns int | Error {\n+# Waits for the process to finish it's work and exit.\n+# ```ballerina\n+# int|error exitCode = process.waitForExit();\n+# ```\n+#\n+# + return - Returns the exit code for the process, or an `Error` if a failure occurs\n+    public function waitForExit() returns int|Error {\n         return nativeWaitForExit(self);\n     }\n \n-    # Returns the exit code of the process when it has finished the execution.\n-    # Error if the process has not exited yet.\n-    #\n-    # + return - Returns the exit code of the process, or an `Error` if the process hasn't exited yet\n-    public function exitCode() returns int | Error {\n+# Returns the exit code of the process when it has finished the execution.\n+# Error if the process has not exited yet.\n+# ```ballerina\n+# int|error exitCode = process.exitCode();\n+# ```\n+#\n+# + return - Returns the exit code of the process, or an `Error` if the process hasn't exited yet\n+    public function exitCode() returns int|Error {\n         return nativeExitCode(self);\n     }\n \n-    # Destroys the process.\n+# Destroys the process.\n+# ```ballerina\n+# process.destroy();\n+# ```\n     public function destroy() {\n         return nativeDestroy(self);\n     }\n \n-    # Provides a channel (to write into), which is made available as the 'standard input' for the process.\n-    #\n-    # + return - The `io:WritableByteChannel` which represents the process's 'standard input'\n+# Provides a channel (to write into), which is made available as the 'standard input' for the process.\n+# ```ballerina\n+# io:WritableByteChannel output = process.stdin();\n+# ```\n+#\n+# + return - The `io:WritableByteChannel` which represents the process's 'standard input'\n     public function stdin() returns io:WritableByteChannel {\n         return nativeStdin(self);\n     }\n \n-    # Provides a channel (to read from), which is made available as the 'standard output' of the process.\n-    #\n-    # + return - The `io:ReadableByteChannel` which represents the process's 'standard output'\n+# Provides a channel (to read from), which is made available as the 'standard output' of the process.\n+# ```ballerina\n+# io:ReadableByteChannel input = process.stdout();\n+# ```\n+#\n+# + return - The `io:ReadableByteChannel` which represents the process's 'standard output'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MDI3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The `io:ReadableByteChannel` which represents the process's 'standard error'\n          \n          \n            \n            # + return - The `io:ReadableByteChannel`, which represents the process's 'standard error'", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r406840271", "createdAt": "2020-04-10T16:42:16Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/process.bal", "diffHunk": "@@ -23,51 +23,72 @@ public type Process object {\n \n     private int BUF_SIZE = 10240;\n \n-    # Waits for the process to finish it's work and exit.\n-    #\n-    # + return - Returns the exit code for the process, or an `Error` if a failure occurs\n-    public function waitForExit() returns int | Error {\n+# Waits for the process to finish it's work and exit.\n+# ```ballerina\n+# int|error exitCode = process.waitForExit();\n+# ```\n+#\n+# + return - Returns the exit code for the process, or an `Error` if a failure occurs\n+    public function waitForExit() returns int|Error {\n         return nativeWaitForExit(self);\n     }\n \n-    # Returns the exit code of the process when it has finished the execution.\n-    # Error if the process has not exited yet.\n-    #\n-    # + return - Returns the exit code of the process, or an `Error` if the process hasn't exited yet\n-    public function exitCode() returns int | Error {\n+# Returns the exit code of the process when it has finished the execution.\n+# Error if the process has not exited yet.\n+# ```ballerina\n+# int|error exitCode = process.exitCode();\n+# ```\n+#\n+# + return - Returns the exit code of the process, or an `Error` if the process hasn't exited yet\n+    public function exitCode() returns int|Error {\n         return nativeExitCode(self);\n     }\n \n-    # Destroys the process.\n+# Destroys the process.\n+# ```ballerina\n+# process.destroy();\n+# ```\n     public function destroy() {\n         return nativeDestroy(self);\n     }\n \n-    # Provides a channel (to write into), which is made available as the 'standard input' for the process.\n-    #\n-    # + return - The `io:WritableByteChannel` which represents the process's 'standard input'\n+# Provides a channel (to write into), which is made available as the 'standard input' for the process.\n+# ```ballerina\n+# io:WritableByteChannel output = process.stdin();\n+# ```\n+#\n+# + return - The `io:WritableByteChannel` which represents the process's 'standard input'\n     public function stdin() returns io:WritableByteChannel {\n         return nativeStdin(self);\n     }\n \n-    # Provides a channel (to read from), which is made available as the 'standard output' of the process.\n-    #\n-    # + return - The `io:ReadableByteChannel` which represents the process's 'standard output'\n+# Provides a channel (to read from), which is made available as the 'standard output' of the process.\n+# ```ballerina\n+# io:ReadableByteChannel input = process.stdout();\n+# ```\n+#\n+# + return - The `io:ReadableByteChannel` which represents the process's 'standard output'\n     public function stdout() returns io:ReadableByteChannel {\n         return nativeStdout(self);\n     }\n \n-    # Provides a channel (to read from), which is made available as the 'standard error' of the process.\n-    #\n-    # + return - The `io:ReadableByteChannel` which represents the process's 'standard error'\n+# Provides a channel (to read from), which is made available as the 'standard error' of the process.\n+# ```ballerina\n+# io:ReadableByteChannel input = process.stderr();\n+# ```\n+#\n+# + return - The `io:ReadableByteChannel` which represents the process's 'standard error'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MDM4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The process that is passed in, which is used to help chain pipe operations\n          \n          \n            \n            # + return - The process that is passed in which is used to help the chain pipe operations", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r406840386", "createdAt": "2020-04-10T16:42:32Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/process.bal", "diffHunk": "@@ -23,51 +23,72 @@ public type Process object {\n \n     private int BUF_SIZE = 10240;\n \n-    # Waits for the process to finish it's work and exit.\n-    #\n-    # + return - Returns the exit code for the process, or an `Error` if a failure occurs\n-    public function waitForExit() returns int | Error {\n+# Waits for the process to finish it's work and exit.\n+# ```ballerina\n+# int|error exitCode = process.waitForExit();\n+# ```\n+#\n+# + return - Returns the exit code for the process, or an `Error` if a failure occurs\n+    public function waitForExit() returns int|Error {\n         return nativeWaitForExit(self);\n     }\n \n-    # Returns the exit code of the process when it has finished the execution.\n-    # Error if the process has not exited yet.\n-    #\n-    # + return - Returns the exit code of the process, or an `Error` if the process hasn't exited yet\n-    public function exitCode() returns int | Error {\n+# Returns the exit code of the process when it has finished the execution.\n+# Error if the process has not exited yet.\n+# ```ballerina\n+# int|error exitCode = process.exitCode();\n+# ```\n+#\n+# + return - Returns the exit code of the process, or an `Error` if the process hasn't exited yet\n+    public function exitCode() returns int|Error {\n         return nativeExitCode(self);\n     }\n \n-    # Destroys the process.\n+# Destroys the process.\n+# ```ballerina\n+# process.destroy();\n+# ```\n     public function destroy() {\n         return nativeDestroy(self);\n     }\n \n-    # Provides a channel (to write into), which is made available as the 'standard input' for the process.\n-    #\n-    # + return - The `io:WritableByteChannel` which represents the process's 'standard input'\n+# Provides a channel (to write into), which is made available as the 'standard input' for the process.\n+# ```ballerina\n+# io:WritableByteChannel output = process.stdin();\n+# ```\n+#\n+# + return - The `io:WritableByteChannel` which represents the process's 'standard input'\n     public function stdin() returns io:WritableByteChannel {\n         return nativeStdin(self);\n     }\n \n-    # Provides a channel (to read from), which is made available as the 'standard output' of the process.\n-    #\n-    # + return - The `io:ReadableByteChannel` which represents the process's 'standard output'\n+# Provides a channel (to read from), which is made available as the 'standard output' of the process.\n+# ```ballerina\n+# io:ReadableByteChannel input = process.stdout();\n+# ```\n+#\n+# + return - The `io:ReadableByteChannel` which represents the process's 'standard output'\n     public function stdout() returns io:ReadableByteChannel {\n         return nativeStdout(self);\n     }\n \n-    # Provides a channel (to read from), which is made available as the 'standard error' of the process.\n-    #\n-    # + return - The `io:ReadableByteChannel` which represents the process's 'standard error'\n+# Provides a channel (to read from), which is made available as the 'standard error' of the process.\n+# ```ballerina\n+# io:ReadableByteChannel input = process.stderr();\n+# ```\n+#\n+# + return - The `io:ReadableByteChannel` which represents the process's 'standard error'\n     public function stderr() returns io:ReadableByteChannel {\n         return nativeStderr(self);\n     }\n \n-    # Pipes the standard output of the current process to the standard input of the given process.\n-    #\n-    # + process - The process to pipe the data to\n-    # + return - The process that is passed in, which is used to help chain pipe operations\n+# Pipes the standard output of the current process to the standard input of the given process.\n+# ```ballerina\n+# var x3out = x1.pipe(x2).pipe(x3).stdout();\n+# ```\n+#\n+# + process - The process to pipe the data to\n+# + return - The process that is passed in, which is used to help chain pipe operations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MDQ4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Environment variable value if it exists, else an empty string\n          \n          \n            \n            # + return - Environment variable value if it exists or else an empty string", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r406840487", "createdAt": "2020-04-10T16:42:46Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/system.bal", "diffHunk": "@@ -17,6 +17,9 @@\n import ballerina/java;\n \n # Returns the environment variable value associated with the provided name.\n+# ```ballerina\n+# string port = system:getEnv(\"HTTP_PORT\");\n+# ```\n #\n # + name - Name of the environment variable\n # + return - Environment variable value if it exists, else an empty string", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MDU3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Current user's name if it can be determined, else an empty string\n          \n          \n            \n            # + return - Current user's name if it can be determined or else an empty string", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r406840574", "createdAt": "2020-04-10T16:42:59Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/system.bal", "diffHunk": "@@ -35,6 +38,9 @@ function nativeGetEnv(handle key) returns handle = @java:Method {\n } external;\n \n # Returns the current user's name.\n+# ```ballerina\n+# string username = system:getUsername();\n+# ```\n #\n # + return - Current user's name if it can be determined, else an empty string", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MDYzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Current user's home directory if it can be determined, else an empty string\n          \n          \n            \n            # + return - Current user's home directory if it can be determined or else an empty string", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r406840634", "createdAt": "2020-04-10T16:43:06Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/system.bal", "diffHunk": "@@ -47,6 +53,9 @@ function nativeGetUsername() returns handle = @java:Method {\n } external;\n \n # Returns the current user's home directory path.\n+# ```ballerina\n+# string userHome = system:getUserHome();\n+# ```\n #\n # + return - Current user's home directory if it can be determined, else an empty string", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MDc4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - A `system:Process` object in success, or an `system:Error` if a failure occurs\n          \n          \n            \n            # + return - A `system:Process` object in success or else a `system:Error` if a failure occurs", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r406840780", "createdAt": "2020-04-10T16:43:27Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/system.bal", "diffHunk": "@@ -71,12 +83,15 @@ function nativeUuid() returns handle = @java:Method {\n } external;\n \n # Executes an operating system command as a subprocess of the current process.\n+# ```ballerina\n+# system:Process|system:Error proc = system:exec(\"ls\", {}, \"/\", \"-la\")\n+# ```\n #\n # + command - The name of the command to be executed\n # + env - Environment variables to be set to the process\n # + dir - The current working directory to be set to the process\n # + args - Command arguments to be passed in\n-# + return - Returns a `Process` object in success, or an `Error` if a failure occurs\n+# + return - A `system:Process` object in success, or an `system:Error` if a failure occurs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MDg5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents an `FileSystemError` with a detailed message.\n          \n          \n            \n            # Represents a `FileSystemError` with a detailed message.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r406840895", "createdAt": "2020-04-10T16:43:43Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/system_errors.bal", "diffHunk": "@@ -16,32 +16,32 @@\n \n # Record type to hold the details of an error.\n #\n-# + message - Specific error message of the error.\n-# + cause - Any other error, which causes this error.\n+# + message - Specific error message of the error\n+# + cause - Any other error, which causes this error\n public type Detail record {\n     string message;\n     error cause?;\n };\n \n-# Represents the error code for invalid operations\n+# Represents the error code for invalid operations.\n public const INVALID_OPERATION_ERROR = \"{ballerina/system}InvalidOperationError\";\n \n # Represents an `InvalidOperationError` with a detailed message.\n public type InvalidOperationError error<INVALID_OPERATION_ERROR, Detail>;\n \n-# Represents the error code for permission errors\n+# Represents the error code for permission errors.\n public const PERMISSION_ERROR = \"{ballerina/system}PermissionError\";\n \n # Represents an `PermissionError` with a detailed message.\n public type PermissionError error<PERMISSION_ERROR, Detail>;\n \n-# Represents the error code for file system errors\n+# Represents the error code for file system errors.\n public const FILE_SYSTEM_ERROR = \"{ballerina/system}FileSystemError\";\n \n # Represents an `FileSystemError` with a detailed message.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2065900a1f34ae76fc969042c9a5b395ab2956"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzQwNjky", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#pullrequestreview-391740692", "createdAt": "2020-04-11T06:21:48Z", "commit": {"oid": "2a7a6bfabfe8201c307a401287d276cf00042594"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjoyMTo0OFrOGEK0UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjoyMzowNlrOGEK0sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNDcyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Returns the exit code for the process, or else an `Error` if a failure occurs\n          \n          \n            \n            # + return - Returns the exit code for the process or else an `Error` if a failure occurs\n          \n      \n    \n    \n  \n\nneed to specify the error type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r407024721", "createdAt": "2020-04-11T06:21:48Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/process.bal", "diffHunk": "@@ -23,12 +23,12 @@ public type Process object {\n \n     private int BUF_SIZE = 10240;\n \n-# Waits for the process to finish it's work and exit.\n+# Waits for the process to finish its work and exit.\n # ```ballerina\n # int|error exitCode = process.waitForExit();\n # ```\n #\n-# + return - Returns the exit code for the process, or an `Error` if a failure occurs\n+# + return - Returns the exit code for the process, or else an `Error` if a failure occurs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7a6bfabfe8201c307a401287d276cf00042594"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNDczOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Returns the exit code of the process, or else an `Error` if the process hasn't exited yet\n          \n          \n            \n            # + return - Returns the exit code of the process or else an `Error` if the process hasn't exited yet\n          \n      \n    \n    \n  \n\nSame as above.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r407024739", "createdAt": "2020-04-11T06:22:03Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/process.bal", "diffHunk": "@@ -39,7 +39,7 @@ public type Process object {\n # int|error exitCode = process.exitCode();\n # ```\n #\n-# + return - Returns the exit code of the process, or an `Error` if the process hasn't exited yet\n+# + return - Returns the exit code of the process, or else an `Error` if the process hasn't exited yet", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7a6bfabfe8201c307a401287d276cf00042594"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNDc3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The process that is passed in which is used to help the chain pipe operations\n          \n          \n            \n            # + return - The process that is passed to be used to help the chain pipe operations", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r407024775", "createdAt": "2020-04-11T06:22:33Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/process.bal", "diffHunk": "@@ -88,7 +88,7 @@ public type Process object {\n # ```\n #\n # + process - The process to pipe the data to\n-# + return - The process that is passed in, which is used to help chain pipe operations\n+# + return - The process that is passed in which is used to help the chain pipe operations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7a6bfabfe8201c307a401287d276cf00042594"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNDgxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - A `system:Process` object in success or else a `system:Error` if a failure occurs\n          \n          \n            \n            # + return - A `system:Process` object if successful or else a `system:Error` if a failure occurs", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#discussion_r407024818", "createdAt": "2020-04-11T06:23:06Z", "author": {"login": "praneesha"}, "path": "stdlib/system/src/main/ballerina/src/system/system.bal", "diffHunk": "@@ -91,7 +91,7 @@ function nativeUuid() returns handle = @java:Method {\n # + env - Environment variables to be set to the process\n # + dir - The current working directory to be set to the process\n # + args - Command arguments to be passed in\n-# + return - A `system:Process` object in success, or an `system:Error` if a failure occurs\n+# + return - A `system:Process` object in success or else a `system:Error` if a failure occurs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7a6bfabfe8201c307a401287d276cf00042594"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a7a6bfabfe8201c307a401287d276cf00042594", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2a7a6bfabfe8201c307a401287d276cf00042594", "committedDate": "2020-04-11T06:03:18Z", "message": "Fix review suggestions"}, "afterCommit": {"oid": "7718ff7dabd1a034f97738922adbbaaeb13c4f35", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7718ff7dabd1a034f97738922adbbaaeb13c4f35", "committedDate": "2020-04-11T06:39:09Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0224048b1d4573edc45b5d1b63d5552886cf485", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f0224048b1d4573edc45b5d1b63d5552886cf485", "committedDate": "2020-04-11T06:40:24Z", "message": "Fix review suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7718ff7dabd1a034f97738922adbbaaeb13c4f35", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7718ff7dabd1a034f97738922adbbaaeb13c4f35", "committedDate": "2020-04-11T06:39:09Z", "message": "Fix review suggestions"}, "afterCommit": {"oid": "f0224048b1d4573edc45b5d1b63d5552886cf485", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f0224048b1d4573edc45b5d1b63d5552886cf485", "committedDate": "2020-04-11T06:40:24Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzQxODU1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22564#pullrequestreview-391741855", "createdAt": "2020-04-11T06:42:26Z", "commit": {"oid": "f0224048b1d4573edc45b5d1b63d5552886cf485"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3883, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}