{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNjYwMjU1", "number": 23900, "title": "Migrate stdlib modules to new table syntax", "bodyText": "Purpose\nChange io:csv, http:cookie modules to the new table syntax and enable test cases.\nFixes #\nFixes #22328\nFixes #22329\nApproach\n\n$ Subject", "createdAt": "2020-06-10T19:40:22Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900", "merged": true, "mergeCommit": {"oid": "45653f210c62dd44c35b22d2b4f9845cf0311688"}, "closed": true, "closedAt": "2020-06-13T03:04:11Z", "author": {"login": "MadhukaHarith92"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqJmusgFqTQyODY4MDQyNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqug1gAFqTQzMDEwODQyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NjgwNDI1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#pullrequestreview-428680425", "createdAt": "2020-06-11T08:02:21Z", "commit": {"oid": "e73e3a10a2a163be74dca8873643214010549606"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODowMjoyMVrOGiSubQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODowMjoyMVrOGiSubQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYxMTU2NQ==", "bodyText": "Why this test case is commented out?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r438611565", "createdAt": "2020-06-11T08:02:21Z", "author": {"login": "daneshk"}, "path": "stdlib/http/src/test/resources/test-src/services/nativeimpl/cookie/cookie-native-function-negative.bal", "diffHunk": "@@ -248,7 +248,6 @@ function testAddPersistentCookieWithoutPersistentStore() returns @tainted http:C\n     }\n     return cookies;\n }\n-\n //TODO Table remove - Fix\n //function testRemovePersistentCookieFromCookieStore_1() returns @tainted http:Cookie[] {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e73e3a10a2a163be74dca8873643214010549606"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NjgwODE5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#pullrequestreview-428680819", "createdAt": "2020-06-11T08:02:56Z", "commit": {"oid": "e73e3a10a2a163be74dca8873643214010549606"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODowMjo1NlrOGiSvig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODowMjo1NlrOGiSvig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYxMTg1MA==", "bodyText": "Why TODO? Can we remove it", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r438611850", "createdAt": "2020-06-11T08:02:56Z", "author": {"login": "daneshk"}, "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionNegativeTest.java", "diffHunk": "@@ -157,6 +157,7 @@ public void testAddPersistentCookieWithoutPersistentStore() {\n                           \"Cookie objects are in the Return Values\");\n     }\n \n+    //TODO Table remove - Fix", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e73e3a10a2a163be74dca8873643214010549606"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Njk3NDgy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#pullrequestreview-428697482", "createdAt": "2020-06-11T08:26:24Z", "commit": {"oid": "e73e3a10a2a163be74dca8873643214010549606"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODoyNjoyNVrOGiTf2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODoyNjoyNVrOGiTf2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyNDIxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public function getTable(typedesc<record {}> structType, public string[] tableKey = [])\n          \n          \n            \n                public function getTable(typedesc<record {}> structType, public string[] fieldNames = [])", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r438624219", "createdAt": "2020-06-11T08:26:25Z", "author": {"login": "daneshk"}, "path": "stdlib/io/src/main/ballerina/src/io/readable_csv_channel.bal", "diffHunk": "@@ -94,21 +96,23 @@ public type ReadableCSVChannel object {\n         return ();\n     }\n \n-//TODO Table remove - Fix\n-//# Returns a table, which corresponds to the CSV records.\n-//# ```ballerina\n-//# var tblResult = readableCSVChannel.getTable(Employee);\n-//# ```\n-//#\n-//# + structType - The object in which the CSV records should be deserialized\n-//# + return - Table, which represents the CSV records or else an `io:Error`\n-    //public function getTable(typedesc<record {}> structType) returns @tainted table<record {}>|Error {\n-    //    return getTableExtern(self, structType);\n-    //}\n+# Returns a table, which corresponds to the CSV records.\n+# ```ballerina\n+# var tblResult1 = readableCSVChannel.getTable(Employee);\n+# var tblResult2 = readableCSVChannel.getTable(Employee, [\"id\", \"name\"]);\n+# ```\n+#\n+# + structType - The object in which the CSV records should be deserialized\n+# + tableKey - The key of the table\n+# + return - Table, which represents the CSV records or else an `io:Error`\n+    public function getTable(typedesc<record {}> structType, public string[] tableKey = [])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e73e3a10a2a163be74dca8873643214010549606"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Njk5MTEx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#pullrequestreview-428699111", "createdAt": "2020-06-11T08:28:39Z", "commit": {"oid": "e73e3a10a2a163be74dca8873643214010549606"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODoyODozOVrOGiTkcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODoyODozOVrOGiTkcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyNTM5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + tableKey - The key of the table\n          \n          \n            \n            # + fieldNames - The names of the fields used as the (composite)key of the table.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r438625392", "createdAt": "2020-06-11T08:28:39Z", "author": {"login": "daneshk"}, "path": "stdlib/io/src/main/ballerina/src/io/readable_csv_channel.bal", "diffHunk": "@@ -94,21 +96,23 @@ public type ReadableCSVChannel object {\n         return ();\n     }\n \n-//TODO Table remove - Fix\n-//# Returns a table, which corresponds to the CSV records.\n-//# ```ballerina\n-//# var tblResult = readableCSVChannel.getTable(Employee);\n-//# ```\n-//#\n-//# + structType - The object in which the CSV records should be deserialized\n-//# + return - Table, which represents the CSV records or else an `io:Error`\n-    //public function getTable(typedesc<record {}> structType) returns @tainted table<record {}>|Error {\n-    //    return getTableExtern(self, structType);\n-    //}\n+# Returns a table, which corresponds to the CSV records.\n+# ```ballerina\n+# var tblResult1 = readableCSVChannel.getTable(Employee);\n+# var tblResult2 = readableCSVChannel.getTable(Employee, [\"id\", \"name\"]);\n+# ```\n+#\n+# + structType - The object in which the CSV records should be deserialized\n+# + tableKey - The key of the table", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e73e3a10a2a163be74dca8873643214010549606"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NzIzOTQw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#pullrequestreview-428723940", "createdAt": "2020-06-11T09:01:27Z", "commit": {"oid": "e73e3a10a2a163be74dca8873643214010549606"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOTowMToyN1rOGiUt8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOTowMToyN1rOGiUt8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0NDIwOQ==", "bodyText": "Why are we changing these test cases?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r438644209", "createdAt": "2020-06-11T09:01:27Z", "author": {"login": "daneshk"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/types/string/bstring-table-test.bal", "diffHunk": "@@ -20,14 +20,11 @@ type Employee record {\n     float salary;\n };\n function testTableGeneration() returns int {\n-   table<Employee> tbEmployee = table {\n-           {key id, name, salary},\n-           [\n-               {1, \"Mary\ud83e\udd12\", 300.5},\n-               {2, \"John\ud83d\udc89\", 200.5},\n-               {3, \"Jim\", 330.5}\n-           ]\n-       };\n+   table<Employee> tbEmployee = table [\n+               {id: 1, name: \"Mary\", salary: 300.5},\n+               {id: 2, name: \"John\", salary: 200.5},\n+               {id: 3, name: \"Jim\", salary: 330.5}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e73e3a10a2a163be74dca8873643214010549606"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5Mzk4NDAy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#pullrequestreview-429398402", "createdAt": "2020-06-12T01:04:55Z", "commit": {"oid": "2f22aa2b56171e77d8490d6366e9f14276d4dfb9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTowNDo1NVrOGiz2IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTowNDo1NVrOGiz2IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1NDIwOQ==", "bodyText": "Do we need to log this error here? As we are returning the error, anyway user will have to handle that.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#discussion_r439154209", "createdAt": "2020-06-12T01:04:55Z", "author": {"login": "Bhashinee"}, "path": "stdlib/io/src/main/java/org/ballerinalang/stdlib/io/nativeimpl/GetTable.java", "diffHunk": "@@ -35,69 +58,107 @@\n     private GetTable() {\n     }\n \n-    //TODO Table remove - Fix\n+    public static Object getTable(ObjectValue csvChannel, TypedescValue typedescValue, ArrayValue key) {\n+        try {\n+            final ObjectValue delimitedObj =\n+                    (ObjectValue) csvChannel.get(StringUtils.fromString(CSV_CHANNEL_DELIMITED_STRUCT_FIELD));\n+            DelimitedRecordChannel delimitedChannel = (DelimitedRecordChannel) delimitedObj\n+                    .getNativeData(IOConstants.TXT_RECORD_CHANNEL_NAME);\n+            if (delimitedChannel.hasReachedEnd()) {\n+                return IOUtils.createEoFError();\n+            }\n+            List<String[]> records = new ArrayList<>();\n+            while (delimitedChannel.hasNext()) {\n+                records.add(delimitedChannel.read());\n+            }\n+            return getTable(typedescValue, key, records);\n+        } catch (BallerinaIOException | BallerinaException e) {\n+            String msg = \"failed to process the delimited file: \" + e.getMessage();\n+            log.error(msg, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f22aa2b56171e77d8490d6366e9f14276d4dfb9"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDg4NzAx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#pullrequestreview-429488701", "createdAt": "2020-06-12T06:22:57Z", "commit": {"oid": "70e13a687b4d804f6b825b74cc1dba70370eb420"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc22d67d16aaa7d24f842266bfc56bc93f711255", "author": {"user": {"login": "MadhukaHarith92", "name": "Madhuka Harith Wickramapala"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cc22d67d16aaa7d24f842266bfc56bc93f711255", "committedDate": "2020-06-12T16:06:09Z", "message": "Update io:csv with new table syntax"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "809783c423d2ef71606849761db7879be58e565b", "author": {"user": {"login": "MadhukaHarith92", "name": "Madhuka Harith Wickramapala"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/809783c423d2ef71606849761db7879be58e565b", "committedDate": "2020-06-12T16:06:09Z", "message": "Update http:cookie with new table syntax"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9eb0f52b13170a97356c4ac8d6871896d8084e72", "author": {"user": {"login": "MadhukaHarith92", "name": "Madhuka Harith Wickramapala"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9eb0f52b13170a97356c4ac8d6871896d8084e72", "committedDate": "2020-06-12T16:06:09Z", "message": "Enable io:csv test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fedd4302446d6bc8051ac052527cad471902215b", "author": {"user": {"login": "MadhukaHarith92", "name": "Madhuka Harith Wickramapala"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fedd4302446d6bc8051ac052527cad471902215b", "committedDate": "2020-06-12T16:06:10Z", "message": "Fix review changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTA4NDI1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23900#pullrequestreview-430108425", "createdAt": "2020-06-13T03:02:24Z", "commit": {"oid": "fedd4302446d6bc8051ac052527cad471902215b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4354, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}