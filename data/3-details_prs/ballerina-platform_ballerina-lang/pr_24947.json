{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2ODg4MTcx", "number": 24947, "title": "Add debug engage test for services", "bodyText": "Purpose\nThis PR will add debug engage test for ballerina service.\nFixes #24598", "createdAt": "2020-07-27T04:22:50Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24947", "merged": true, "mergeCommit": {"oid": "c9483ed5a23400e8f470fa807769d61c7cac68cd"}, "closed": true, "closedAt": "2020-08-03T10:49:21Z", "author": {"login": "praveennadarajah"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc45_99AH2gAyNDU2ODg4MTcxOjkwNmY5MzA4MjQyOWI4Mzc5ZDY5NDZiMzYyMmQyNmJiYzVkZDBkOGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7MXcggFqTQ1OTc4NTYxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "906f93082429b8379d6946b3622d26bbc5dd0d8c", "author": {"user": {"login": "praveennadarajah", "name": "Praveen Nadarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/906f93082429b8379d6946b3622d26bbc5dd0d8c", "committedDate": "2020-07-27T04:20:18Z", "message": "Add debug engage test for services"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1Njg2NDM2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24947#pullrequestreview-455686436", "createdAt": "2020-07-27T11:10:33Z", "commit": {"oid": "906f93082429b8379d6946b3622d26bbc5dd0d8c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMToxMDozM1rOG3d-UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMToxMDozM1rOG3d-UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxNTk1Mg==", "bodyText": "Shall we add this to an @AfterClass method? If the test throws an error before executing this line, the termination would not take place. When we define the annotation we should define it as @AfterClass(alwaysRun=true).", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24947#discussion_r460815952", "createdAt": "2020-07-27T11:10:33Z", "author": {"login": "azinneera"}, "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/adapter/ServiceDebugTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.debugger.test.adapter;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.ballerinalang.debugger.test.DebugAdapterBaseTestCase;\n+import org.ballerinalang.debugger.test.utils.BallerinaTestDebugPoint;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.eclipse.lsp4j.debug.StoppedEventArguments;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+\n+import static org.ballerinalang.debugger.test.utils.DebugUtils.findFreePort;\n+\n+/**\n+ * Test class for service related debug scenarios.\n+ */\n+public class ServiceDebugTest extends DebugAdapterBaseTestCase {\n+    private String projectPath;\n+\n+    @BeforeClass\n+    public void setup() {\n+        testProjectName = \"breakpoint-tests\";\n+        testModuleName = \"myService\";\n+        projectPath = testProjectBaseDir + File.separator + testProjectName;\n+\n+        testModuleFileName = \"tests\" + File.separator + \"hello_service_test.bal\";\n+        testProjectPath = testProjectBaseDir.toString() + File.separator + testProjectName;\n+        testEntryFilePath = Paths.get(testProjectPath, \"src\", testModuleName, testModuleFileName).toString();\n+    }\n+\n+    @Test\n+    public void testServiceDebugScenarios() throws BallerinaTestException {\n+        String fileName = \"serviceDirectory\" + File.separator + \"serviceFile.bal\";\n+        String filePath = Paths.get(testProjectPath, \"src\", testModuleName, fileName).toString();\n+        int port = findFreePort();\n+\n+        runDebuggeeProgram(projectPath, port);\n+        addBreakPoint(new BallerinaTestDebugPoint(filePath, 36));\n+        initDebugSession(null, port);\n+\n+        // Test for service debug engage\n+        Pair<BallerinaTestDebugPoint, StoppedEventArguments> debugHitInfo = waitForDebugHit(20000);\n+        Assert.assertEquals(debugHitInfo.getLeft(), testBreakpoints.get(0));\n+\n+        terminateDebugSession();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "906f93082429b8379d6946b3622d26bbc5dd0d8c"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1Njg5OTc2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24947#pullrequestreview-455689976", "createdAt": "2020-07-27T11:16:48Z", "commit": {"oid": "906f93082429b8379d6946b3622d26bbc5dd0d8c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMToxNjo0OVrOG3eJfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMToxNjo0OVrOG3eJfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxODgxMg==", "bodyText": "Shall we change the above 2 lines to use Paths.get since File.sperator is a pre-1.7 JDK way??", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24947#discussion_r460818812", "createdAt": "2020-07-27T11:16:49Z", "author": {"login": "azinneera"}, "path": "tests/jballerina-debugger-integration-test/src/test/java/org/ballerinalang/debugger/test/adapter/ServiceDebugTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.debugger.test.adapter;\n+\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.ballerinalang.debugger.test.DebugAdapterBaseTestCase;\n+import org.ballerinalang.debugger.test.utils.BallerinaTestDebugPoint;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.eclipse.lsp4j.debug.StoppedEventArguments;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+\n+import static org.ballerinalang.debugger.test.utils.DebugUtils.findFreePort;\n+\n+/**\n+ * Test class for service related debug scenarios.\n+ */\n+public class ServiceDebugTest extends DebugAdapterBaseTestCase {\n+    private String projectPath;\n+\n+    @BeforeClass\n+    public void setup() {\n+        testProjectName = \"breakpoint-tests\";\n+        testModuleName = \"myService\";\n+        projectPath = testProjectBaseDir + File.separator + testProjectName;\n+\n+        testModuleFileName = \"tests\" + File.separator + \"hello_service_test.bal\";\n+        testProjectPath = testProjectBaseDir.toString() + File.separator + testProjectName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "906f93082429b8379d6946b3622d26bbc5dd0d8c"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1ODIyNDIy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24947#pullrequestreview-455822422", "createdAt": "2020-07-27T14:14:43Z", "commit": {"oid": "906f93082429b8379d6946b3622d26bbc5dd0d8c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3728ce5a80644adcbf17d012d5982e115323dc12", "author": {"user": {"login": "praveennadarajah", "name": "Praveen Nadarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3728ce5a80644adcbf17d012d5982e115323dc12", "committedDate": "2020-07-31T08:31:11Z", "message": "Add review changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fca049eebed2a4d2a852269f5a1f6db148c4160", "author": {"user": {"login": "praveennadarajah", "name": "Praveen Nadarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4fca049eebed2a4d2a852269f5a1f6db148c4160", "committedDate": "2020-07-31T08:51:26Z", "message": "Fix checkstyle issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MTA5NDM0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24947#pullrequestreview-459109434", "createdAt": "2020-07-31T11:38:34Z", "commit": {"oid": "4fca049eebed2a4d2a852269f5a1f6db148c4160"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e1e0ae1a1ef958bcfedf28cbfb780ac5faa8db0", "author": {"user": {"login": "praveennadarajah", "name": "Praveen Nadarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6e1e0ae1a1ef958bcfedf28cbfb780ac5faa8db0", "committedDate": "2020-08-03T06:11:58Z", "message": "Add single bal file debug engage test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5Nzg1NjE0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24947#pullrequestreview-459785614", "createdAt": "2020-08-03T06:52:05Z", "commit": {"oid": "6e1e0ae1a1ef958bcfedf28cbfb780ac5faa8db0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3715, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}