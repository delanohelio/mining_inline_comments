{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NzIyOTA4", "number": 26384, "title": "[Formatter] Fix test cases and exception handling", "bodyText": "Purpose\n\nFix the  class_definition_declaration_5.bal test case.\nFix indentation in query expressions.\nHandle exceptions while formatting a node in order to proceed formatting the remaining nodes.\n\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-10-16T09:47:55Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26384", "merged": true, "mergeCommit": {"oid": "72d91d6d765473ef3a65ca150ad99882a73b4496"}, "closed": true, "closedAt": "2020-10-16T11:05:34Z", "author": {"login": "IrushiL"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTDU-GgH2gAyNTA0NzIyOTA4OmUwZmQyNDZlNGIyODk0MTU1MmEyOTQ2MmQ0Nzc4OTZjNmY5MDM4OTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTEV_PAFqTUxMDM2OTc1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e0fd246e4b28941552a29462d477896c6f903892", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e0fd246e4b28941552a29462d477896c6f903892", "committedDate": "2020-10-16T09:54:25Z", "message": "Fix class_definition_declaration_5 test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5a7a55e1992c295dc795fc93c0321c99853b1b0", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f5a7a55e1992c295dc795fc93c0321c99853b1b0", "committedDate": "2020-10-16T09:54:25Z", "message": "Fix the indentation issue in query expressions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "323ba3e9839b57367d82f049620fc04c47b44343", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/323ba3e9839b57367d82f049620fc04c47b44343", "committedDate": "2020-10-16T09:54:25Z", "message": "Fix an incorrect assert file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33b81054bcdb20b7f1637d55b0acfddfa02f46ec", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/33b81054bcdb20b7f1637d55b0acfddfa02f46ec", "committedDate": "2020-10-16T09:54:26Z", "message": "Handle exceptions while formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwMzI3ODc1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26384#pullrequestreview-510327875", "createdAt": "2020-10-16T10:00:49Z", "commit": {"oid": "b5c49d3e442bdefbfcac89bedd9a0998ca769f51"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMDowMDo0OVrOHiy1vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMDowMjozMVrOHiy9YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI0NjU5MQ==", "bodyText": "Reduce the two return statements (Within try and the catch blocks) to a single one.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26384#discussion_r506246591", "createdAt": "2020-10-16T10:00:49Z", "author": {"login": "nadeeshaan"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3630,33 +3635,39 @@ public Token transform(Token token) {\n      */\n     @SuppressWarnings(\"unchecked\")\n     private <T extends Node> T formatNode(T node, int trailingWS, int trailingNL) {\n-        if (node == null || node.isMissing()) {\n-            return node;\n-        }\n+        try {\n+            if (node == null || node.isMissing()) {\n+                return node;\n+            }\n \n-        if (!isInLineRange(node, lineRange)) {\n-            checkForNewline(node);\n-            return node;\n-        }\n+            if (!isInLineRange(node, lineRange)) {\n+                checkForNewline(node);\n+                return node;\n+            }\n \n-        int prevTrailingNL = env.trailingNL;\n-        int prevTrailingWS = env.trailingWS;\n-        env.trailingNL = trailingNL;\n-        env.trailingWS = trailingWS;\n+            int prevTrailingNL = env.trailingNL;\n+            int prevTrailingWS = env.trailingWS;\n+            env.trailingNL = trailingNL;\n+            env.trailingWS = trailingWS;\n \n-        // Cache the current node and parent before format.\n-        // Because reference to the nodes will change after modifying.\n-        T oldNode = node;\n-        Node parent = node.parent();\n+            // Cache the current node and parent before format.\n+            // Because reference to the nodes will change after modifying.\n+            T oldNode = node;\n+            Node parent = node.parent();\n \n-        node = (T) node.apply(this);\n-        if (shouldWrapLine(oldNode, parent)) {\n-            node = wrapLine(oldNode, parent);\n-        }\n+            node = (T) node.apply(this);\n+            if (shouldWrapLine(oldNode, parent)) {\n+                node = wrapLine(oldNode, parent);\n+            }\n \n-        env.trailingNL = prevTrailingNL;\n-        env.trailingWS = prevTrailingWS;\n-        return node;\n+            env.trailingNL = prevTrailingNL;\n+            env.trailingWS = prevTrailingWS;\n+            return node;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5c49d3e442bdefbfcac89bedd9a0998ca769f51"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI0ODU0NA==", "bodyText": "Only the starting line number will not be helpful when there are multiple nodes in a single line, shall we add at least the starting column as well?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26384#discussion_r506248544", "createdAt": "2020-10-16T10:02:31Z", "author": {"login": "nadeeshaan"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3630,33 +3635,39 @@ public Token transform(Token token) {\n      */\n     @SuppressWarnings(\"unchecked\")\n     private <T extends Node> T formatNode(T node, int trailingWS, int trailingNL) {\n-        if (node == null || node.isMissing()) {\n-            return node;\n-        }\n+        try {\n+            if (node == null || node.isMissing()) {\n+                return node;\n+            }\n \n-        if (!isInLineRange(node, lineRange)) {\n-            checkForNewline(node);\n-            return node;\n-        }\n+            if (!isInLineRange(node, lineRange)) {\n+                checkForNewline(node);\n+                return node;\n+            }\n \n-        int prevTrailingNL = env.trailingNL;\n-        int prevTrailingWS = env.trailingWS;\n-        env.trailingNL = trailingNL;\n-        env.trailingWS = trailingWS;\n+            int prevTrailingNL = env.trailingNL;\n+            int prevTrailingWS = env.trailingWS;\n+            env.trailingNL = trailingNL;\n+            env.trailingWS = trailingWS;\n \n-        // Cache the current node and parent before format.\n-        // Because reference to the nodes will change after modifying.\n-        T oldNode = node;\n-        Node parent = node.parent();\n+            // Cache the current node and parent before format.\n+            // Because reference to the nodes will change after modifying.\n+            T oldNode = node;\n+            Node parent = node.parent();\n \n-        node = (T) node.apply(this);\n-        if (shouldWrapLine(oldNode, parent)) {\n-            node = wrapLine(oldNode, parent);\n-        }\n+            node = (T) node.apply(this);\n+            if (shouldWrapLine(oldNode, parent)) {\n+                node = wrapLine(oldNode, parent);\n+            }\n \n-        env.trailingNL = prevTrailingNL;\n-        env.trailingWS = prevTrailingWS;\n-        return node;\n+            env.trailingNL = prevTrailingNL;\n+            env.trailingWS = prevTrailingWS;\n+            return node;\n+        } catch (Exception e) {\n+            LOGGER.error(String.format(\"Error while formatting [node: %s] [line: %s]: %s\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5c49d3e442bdefbfcac89bedd9a0998ca769f51"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "caf8313ec46d5fcf94c212e2e60ff9cbaf4b392c", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/caf8313ec46d5fcf94c212e2e60ff9cbaf4b392c", "committedDate": "2020-10-16T10:11:02Z", "message": "Fix query expression nodes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b5c49d3e442bdefbfcac89bedd9a0998ca769f51", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b5c49d3e442bdefbfcac89bedd9a0998ca769f51", "committedDate": "2020-10-16T09:40:16Z", "message": "Handle exceptions while formatting"}, "afterCommit": {"oid": "caf8313ec46d5fcf94c212e2e60ff9cbaf4b392c", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/caf8313ec46d5fcf94c212e2e60ff9cbaf4b392c", "committedDate": "2020-10-16T10:11:02Z", "message": "Fix query expression nodes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e06dbeeddcbde122479252fb93cd7b0acacf5970", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e06dbeeddcbde122479252fb93cd7b0acacf5970", "committedDate": "2020-10-16T10:36:19Z", "message": "Fix review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwMzY5NzU1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26384#pullrequestreview-510369755", "createdAt": "2020-10-16T11:05:26Z", "commit": {"oid": "e06dbeeddcbde122479252fb93cd7b0acacf5970"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4392, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}