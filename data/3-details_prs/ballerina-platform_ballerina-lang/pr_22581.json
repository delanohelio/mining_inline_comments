{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxODY2ODc0", "number": 22581, "title": "Update API of Docs in module, Time", "bodyText": "Purpose\nUpdate Documentation API of the module, Time.\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-10T11:10:26Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581", "merged": true, "mergeCommit": {"oid": "e55411f4f8da4c7819a57d1bc4f21b71068f5d92"}, "closed": true, "closedAt": "2020-04-11T10:12:09Z", "author": {"login": "Maninda"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWPFUUAH2gAyNDAxODY2ODc0OjJlOTMyM2MzYzQyYzY0OWVkZmJkMzkxYjI3NDJlYjQzNmE2ZTNmNDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWi3bkAFqTM5MTc1MzgzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47", "author": {"user": {"login": "Maninda", "name": "Maninda Edirisooriya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2e9323c3c42c649edfbd391b2742eb436a6e3f47", "committedDate": "2020-04-10T11:06:48Z", "message": "Update API of Docs in module, Time"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTQ3MzUz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#pullrequestreview-391547353", "createdAt": "2020-04-10T16:55:59Z", "commit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "state": "COMMENTED", "comments": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo1NTo1OVrOGD_61w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzowMTozN1rOGEAEpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NjE2Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For information on the operations, which you can perform with this module, see the below **Functions**. For examples on the usage of the operations, see [Time Example](https://ballerina.io/v1-2/learn/by-example/time.html).\n          \n          \n            \n            For information on the operations, which you can perform with this module, see the below **Functions**. For an example on the usage of the operations, see the [Time Example](https://ballerina.io/learn/by-example/time.html).", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846167", "createdAt": "2020-04-10T16:55:59Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/Module.md", "diffHunk": "@@ -9,148 +7,9 @@ The module has two main types as [Time](records/Time.html) and [TimeZone](record\n * If `id` starts with '+' or '-', the ID is parsed as an offset. Offset can be specified in one of the following ways. +h, +hh, +hh:mm, -hh:mm, +hhmm, -hhmm, +hh:mm:ss, -hh:mm:ss, +hhmmss, -hhmmss\n * Also `id` can be a region-based zone ID. The format is '{area}/{city}' eg: \"America/Panama\". The zones are based on IANA Time Zone Database (TZDB) supplied data.\n \n-## Samples\n-\n-### Getting the current time/date\n-\n-```ballerina\n-import ballerina/io;\n-import ballerina/time;\n-\n-public function main() {\n-    time:Time time = time:currentTime();    // Create a record of type \u2018Time\u2019.\n-    io:println(time);\n-\n-    int timeValue = time.time;    // Time in milliseconds since January 1, 1970, 00:00:00 GMT. E.g., 1523513039.\n-    io:println(timeValue);\n-    int nanoTime = time:nanoTime();    // Time in nanoseconds since an arbitrary origin. Therefore, it should be used only to calculate durations. E.g., 2426115697486340.\n-    io:println(nanoTime);\n-    string zoneId = time.zone.id;    // Time zone as an identifier. E.g., \u201cAmerica/Panama\u201d.\n-    io:println(zoneId);\n-    int zoneoffset = time.zone.offset;    // Time zone as an offset. E.g., -05:00.\n-    io:println(zoneoffset);\n-\n-    // Get the current date and time upto milliseconds.\n-    int year = time:getYear(time);    // E.g., 2018\n-    io:println(year);\n-    int month = time:getMonth(time);    // E.g., 3\n-    io:println(month);\n-    int day = time:getDay(time);    // E.g., 1\n-    io:println(day);\n-    int hour = time:getHour(time);    // E.g., 18\n-    io:println(hour);\n-    int minute = time:getMinute(time);    // E.g., 56\n-    io:println(minute);\n-    int second = time:getSecond(time);    // E.g., 23\n-    io:println(second);\n-    int milliSecond = time:getMilliSecond(time);    // E.g., 555\n-    io:println(milliSecond);\n-    string weekday = time:getWeekday(time);// Day of the week. E.g., \u201cTUESDAY\u201d.\n-    io:println(weekday);\n-}\n-```\n-\n-### Creating a time/date record\n-\n-```ballerina\n-import ballerina/io;\n-import ballerina/time;\n-\n-public function main() {\n-    // Create a record of type \u2018Time\u2019 with time zone.\n-    time:TimeZone zoneIdValue = {id: \"America/Panama\"};\n-    time:Time time1 = {time: 1498488382000, zone: zoneIdValue};\n-    io:println(time1);\n-\n-    // Create a record of type \u2018Time\u2019 with the time zone offset.\n-    time:TimeZone zoneOffsetValue = {id: \"-05:00\"};\n-    time:Time time2 = {time: 1498488382000, zone: zoneOffsetValue};\n-    io:println(time2);\n-\n-    // Create a record of type \u2018Time\u2019 without the time zone.\n-    time:TimeZone noZoneValue = {id: \"\"};\n-    time:Time time3 = {time: 1498488382000, zone: noZoneValue};\n-    io:println(time3);\n-\n-    // Create a record of type \u2018Time\u2019 with time and date. E.g., 2018-03-28T23:42:45.554-05:00\n-    time:Time | error dateTime = time:createTime(2018, 3, 28, 23, 42, 45, 554, \"America/Panama\");\n-    if (dateTime is time:Time) {\n-        io:println(dateTime);\n-    } else {\n-        io:println(\"An error occurred: \", dateTime);\n-    }\n-}\n-```\n-\n-\n-### Formatting a time/date to a string\n-\n-```ballerina\n-import ballerina/io;\n-import ballerina/time;\n-\n-public function main() returns error? {\n-    time:TimeZone zoneValue = {id: \"America/Panama\"};\n-    time:Time time = {time: 1498488382444, zone: zoneValue};\n-\n-    //Format a time to a string of a given pattern.\n-    string | error time1 = check time:format(time, \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");    //E.g., \u201c2017-06-26T09:46:22.444-0500\u201d.\n-    io:println(time1);\n-\n-    //Format a time to a string of the RFC-1123 format.\n-    string | error time2 = time:format(time, time:TIME_FORMAT_RFC_1123);    // E.g., \"Mon, 26 Jun 2017 09:46:22 -0500\u201d\n-    io:println(time2);\n-\n-    // Convert a time record to a string value.\n-    string time3 = time:toString(time);//\u201d2017-06-26T09:46:22.444-05:00\u201d\n-    io:println(time3);\n-}\n-```\n-\n-### Parsing a string to time/date\n-\n-```ballerina\n-import ballerina/io;\n-import ballerina/time;\n-\n-public function main() returns error? {\n-    // Parse a time string of a given format.\n-    time:Time | error time1 = time:parse(\"2017-06-26T09:46:22.444-0500\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");    // The \u2018Z\u2019 stands for the time zone.\n-    io:println(time1);\n-\n-    // Parse a time string of the RFC-1123 format.\n-    time:Time | error time2 = time:parse(\"Wed, 28 Mar 2018 11:56:23 +0530\", time:TIME_FORMAT_RFC_1123);\n-    io:println(time2);\n-}\n-```\n-\n-### Setting time durations\n-\n-```ballerina\n-import ballerina/time;\n-\n-public function main() {\n-    // Add a duration to a given time.\n-    time:Time | error time1 = time:parse(\"2017-06-26T09:46:22.444-0500\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n-    if (time1 is time:Time) {\n-        time1 = time:addDuration(time1, 1, 1, 1, 1, 1, 1, 1);\n-    // Adds 1 year, 1 month, 1 day, 1 hour, 1 minute, 1 second, and 1 millisecond.\n-    }\n-\n-    // Subtract a duration from a given time.\n-    time:Time | error time2 = time:parse(\"2016-03-01T09:46:22.444-0500\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n-    if (time2 is time:Time) {\n-        time2 = time:subtractDuration(time2, 1, 1, 1, 1, 1, 1, 1);\n-    // Subtracts 1 year, 1 month, 1 day, 1 hour, 1 minute, 1 second, and 1 millisecond.\n-    }\n+For information on the operations, which you can perform with this module, see the below **Functions**. For examples on the usage of the operations, see [Time Example](https://ballerina.io/v1-2/learn/by-example/time.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NjMxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Specify the time error that occurs in the module.\n          \n          \n            \n            # Specifies the time error that occurs in the module.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846311", "createdAt": "2020-04-10T16:56:20Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/time_errors.bal", "diffHunk": "@@ -14,18 +14,18 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# Record type to hold the details of an error.\n+# Details of an error.\n #\n-# + message - Specific error message of the error.\n-# + cause - Any other error, which causes this error.\n+# + message - Specific error message of the error\n+# + cause - Any other error, which causes this error\n public type Detail record {\n     string message;\n     error cause?;\n };\n \n-# Error reason to specify the time error that occurs in the module\n+# Specify the time error that occurs in the module.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NjM3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents Time module related error.\n          \n          \n            \n            # Represents the Time module related error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846377", "createdAt": "2020-04-10T16:56:28Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/time_errors.bal", "diffHunk": "@@ -14,18 +14,18 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# Record type to hold the details of an error.\n+# Details of an error.\n #\n-# + message - Specific error message of the error.\n-# + cause - Any other error, which causes this error.\n+# + message - Specific error message of the error\n+# + cause - Any other error, which causes this error\n public type Detail record {\n     string message;\n     error cause?;\n };\n \n-# Error reason to specify the time error that occurs in the module\n+# Specify the time error that occurs in the module.\n public const TIME_ERROR_REASON = \"{ballerina/time}TimeError\";\n-# Represents Time module related error\n+# Represents Time module related error.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NjQ3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Returns ISO 8601 string representation of the given time.\n          \n          \n            \n            # Returns the ISO 8601 string representation of the given time.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846472", "createdAt": "2020-04-10T16:56:43Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -41,6 +41,11 @@ public type Time record {|\n |};\n \n # Returns ISO 8601 string representation of the given time.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NjU2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Returns formatted string representation of the given time.\n          \n          \n            \n            # Returns the formatted string representation of the given time.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846565", "createdAt": "2020-04-10T16:56:55Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -59,10 +64,15 @@ function externToString(Time time) returns handle = @java:Method {\n } external;\n \n # Returns formatted string representation of the given time.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NjY1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + timeFormat - The format which is used to format the time represented by this object\n          \n          \n            \n            # + timeFormat - The format, which is used to format the time represented by this object", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846653", "createdAt": "2020-04-10T16:57:03Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -59,10 +64,15 @@ function externToString(Time time) returns handle = @java:Method {\n } external;\n \n # Returns formatted string representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  string|error timeString = time:format(time, time:TIME_FORMAT_RFC_1123);\n+# ```\n #\n # + time - The Time record to be formatted\n # + timeFormat - The format which is used to format the time represented by this object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NjczNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The formatted string of the given time or an error if failed to format the time\n          \n          \n            \n            # + return - The formatted string of the given time or else an error if failed to format the time", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846737", "createdAt": "2020-04-10T16:57:11Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -59,10 +64,15 @@ function externToString(Time time) returns handle = @java:Method {\n } external;\n \n # Returns formatted string representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  string|error timeString = time:format(time, time:TIME_FORMAT_RFC_1123);\n+# ```\n #\n # + time - The Time record to be formatted\n # + timeFormat - The format which is used to format the time represented by this object\n-# + return - The formatted string of the given time or an `time:Error` if failed to format the time\n+# + return - The formatted string of the given time or an error if failed to format the time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0Njg3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The month-of-year, from 1 (January) to 12 (December)\n          \n          \n            \n            # + return - The month-of-year from 1 (January) to 12 (December)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406846879", "createdAt": "2020-04-10T16:57:29Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -96,6 +111,11 @@ function externGetYear(Time time) returns int = @java:Method {\n } external;\n \n # Returns the month representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int month = time:getMonth(time);\n+# ```\n #\n # + time - The Time record to get the month representation from\n # + return - The month-of-year, from 1 (January) to 12 (December)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NzIwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The year representation\n          \n          \n            \n            # + return - The year representation with", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406847204", "createdAt": "2020-04-10T16:58:18Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -192,11 +242,16 @@ function externGetMilliSecond(Time time) returns int = @java:Method {\n } external;\n \n # Returns the date representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  [int, int, int] date = time:getDate(time);\n+# ```\n #\n-# + time - The Time record to get the date representation from\n-# + return - The year representation.\n-#            The month-of-year, from 1 (January) to 12 (December).\n-#            The day-of-month, from 1 to 31.\n+# + time - The Time record to get the date representation\n+# + return - The year representation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NzMwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            The month-of-year, from 1 (January) to 12 (December)\n          \n          \n            \n            #            the month-of-year from 1 (January) to 12 (December) and", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406847309", "createdAt": "2020-04-10T16:58:30Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -192,11 +242,16 @@ function externGetMilliSecond(Time time) returns int = @java:Method {\n } external;\n \n # Returns the date representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  [int, int, int] date = time:getDate(time);\n+# ```\n #\n-# + time - The Time record to get the date representation from\n-# + return - The year representation.\n-#            The month-of-year, from 1 (January) to 12 (December).\n-#            The day-of-month, from 1 to 31.\n+# + time - The Time record to get the date representation\n+# + return - The year representation\n+#            The month-of-year, from 1 (January) to 12 (December)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NzQyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            The day-of-month, from 1 to 31\n          \n          \n            \n            #            the day-of-month from 1 to 31", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406847426", "createdAt": "2020-04-10T16:58:45Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -192,11 +242,16 @@ function externGetMilliSecond(Time time) returns int = @java:Method {\n } external;\n \n # Returns the date representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  [int, int, int] date = time:getDate(time);\n+# ```\n #\n-# + time - The Time record to get the date representation from\n-# + return - The year representation.\n-#            The month-of-year, from 1 (January) to 12 (December).\n-#            The day-of-month, from 1 to 31.\n+# + time - The Time record to get the date representation\n+# + return - The year representation\n+#            The month-of-year, from 1 (January) to 12 (December)\n+#            The day-of-month, from 1 to 31", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 188}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NzU3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The hour-of-day, from 0 to 23\n          \n          \n            \n            # + return - The hour-of-day to represent from 0 to 23,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406847571", "createdAt": "2020-04-10T16:59:03Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -207,12 +262,17 @@ function externGetDate(Time time) returns [int, int, int] = @java:Method {\n } external;\n \n # Returns the time representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  [int, int, int, int] timeGenerated = time:getTime(time);\n+# ```\n #\n # + time - The Time record\n-# + return - The hour-of-day, from 0 to 23.\n-#            The minute-of-hour to represent, from 0 to 59.\n-#            The second-of-minute, from 0 to 59.\n-#            The milli-of-second, from 0 to 999.\n+# + return - The hour-of-day, from 0 to 23", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 207}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0Nzc5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            The minute-of-hour to represent, from 0 to 59\n          \n          \n            \n            #            the minute-of-hour to represent from 0 to 59,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406847794", "createdAt": "2020-04-10T16:59:34Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -207,12 +262,17 @@ function externGetDate(Time time) returns [int, int, int] = @java:Method {\n } external;\n \n # Returns the time representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  [int, int, int, int] timeGenerated = time:getTime(time);\n+# ```\n #\n # + time - The Time record\n-# + return - The hour-of-day, from 0 to 23.\n-#            The minute-of-hour to represent, from 0 to 59.\n-#            The second-of-minute, from 0 to 59.\n-#            The milli-of-second, from 0 to 999.\n+# + return - The hour-of-day, from 0 to 23\n+#            The minute-of-hour to represent, from 0 to 59", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 208}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0Nzg3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            The second-of-minute, from 0 to 59\n          \n          \n            \n            #            the second-of-minute from 0 to 59,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406847874", "createdAt": "2020-04-10T16:59:44Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -207,12 +262,17 @@ function externGetDate(Time time) returns [int, int, int] = @java:Method {\n } external;\n \n # Returns the time representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  [int, int, int, int] timeGenerated = time:getTime(time);\n+# ```\n #\n # + time - The Time record\n-# + return - The hour-of-day, from 0 to 23.\n-#            The minute-of-hour to represent, from 0 to 59.\n-#            The second-of-minute, from 0 to 59.\n-#            The milli-of-second, from 0 to 999.\n+# + return - The hour-of-day, from 0 to 23\n+#            The minute-of-hour to represent, from 0 to 59\n+#            The second-of-minute, from 0 to 59", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 209}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0Nzk2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            The milli-of-second, from 0 to 999\n          \n          \n            \n            #            and the milli-of-second from 0 to 999", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406847964", "createdAt": "2020-04-10T16:59:55Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -207,12 +262,17 @@ function externGetDate(Time time) returns [int, int, int] = @java:Method {\n } external;\n \n # Returns the time representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  [int, int, int, int] timeGenerated = time:getTime(time);\n+# ```\n #\n # + time - The Time record\n-# + return - The hour-of-day, from 0 to 23.\n-#            The minute-of-hour to represent, from 0 to 59.\n-#            The second-of-minute, from 0 to 59.\n-#            The milli-of-second, from 0 to 999.\n+# + return - The hour-of-day, from 0 to 23\n+#            The minute-of-hour to represent, from 0 to 59\n+#            The second-of-minute, from 0 to 59\n+#            The milli-of-second, from 0 to 999", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 210}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODExOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + time - The Time record of which the time-zone to be changed\n          \n          \n            \n            # + time - The Time record of which the time-zone is to be changed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848118", "createdAt": "2020-04-10T17:00:16Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -267,11 +343,17 @@ function externSubtractDuration(Time time, int years, int months, int days, int\n } external;\n \n # Change the time-zone of the given time.\n+# ```ballerina\n+#  string zoneId = \"America/Panama\";\n+#  time:TimeZone zoneValue = {id: zoneId};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  time:Time|time:Error newTime = time:toTimeZone(time, zoneId);\n+# ```\n #\n # + time - The Time record of which the time-zone to be changed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 255}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODE2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + zoneId - The new time-zone id\n          \n          \n            \n            # + zoneId - The new time-zone ID", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848165", "createdAt": "2020-04-10T17:00:22Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -267,11 +343,17 @@ function externSubtractDuration(Time time, int years, int months, int days, int\n } external;\n \n # Change the time-zone of the given time.\n+# ```ballerina\n+#  string zoneId = \"America/Panama\";\n+#  time:TimeZone zoneValue = {id: zoneId};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  time:Time|time:Error newTime = time:toTimeZone(time, zoneId);\n+# ```\n #\n # + time - The Time record of which the time-zone to be changed\n # + zoneId - The new time-zone id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 256}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODIzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Time object containing time and zone information after the conversion\n          \n          \n            \n            # + return - Time object containing the time and zone information after the conversion", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848234", "createdAt": "2020-04-10T17:00:31Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -267,11 +343,17 @@ function externSubtractDuration(Time time, int years, int months, int days, int\n } external;\n \n # Change the time-zone of the given time.\n+# ```ballerina\n+#  string zoneId = \"America/Panama\";\n+#  time:TimeZone zoneValue = {id: zoneId};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  time:Time|time:Error newTime = time:toTimeZone(time, zoneId);\n+# ```\n #\n # + time - The Time record of which the time-zone to be changed\n # + zoneId - The new time-zone id\n # + return - Time object containing time and zone information after the conversion", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 257}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODI4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            or an error if failed to format the time\n          \n          \n            \n            #            or else an error if failed to format the time", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848287", "createdAt": "2020-04-10T17:00:39Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -267,11 +343,17 @@ function externSubtractDuration(Time time, int years, int months, int days, int\n } external;\n \n # Change the time-zone of the given time.\n+# ```ballerina\n+#  string zoneId = \"America/Panama\";\n+#  time:TimeZone zoneValue = {id: zoneId};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  time:Time|time:Error newTime = time:toTimeZone(time, zoneId);\n+# ```\n #\n # + time - The Time record of which the time-zone to be changed\n # + zoneId - The new time-zone id\n # + return - Time object containing time and zone information after the conversion\n-#            or an `time:Error` if failed to format the time\n+#            or an error if failed to format the time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 259}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODQwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Time object containing the time and the zone information\n          \n          \n            \n            # + return - Time object containing the time and zone information", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848406", "createdAt": "2020-04-10T17:00:55Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -282,8 +364,11 @@ function externToTimeZone(Time time, handle zoneId) returns Time|Error = @java:M\n } external;\n \n # Returns the current time value with the system default time-zone.\n+# ```ballerina\n+#  time:Time now = time:currentTime();\n+# ```\n #\n-# + return - Time object containing the time and zone information\n+# + return - Time object containing the time and the zone information", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 272}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODUxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + month - The month-of-year to represent, from 1 (January) to 12 (December)\n          \n          \n            \n            # + month - The month-of-year to represent from 1 (January) to 12 (December)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848514", "createdAt": "2020-04-10T17:01:12Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -306,6 +394,9 @@ function externNanoTime() returns int = @java:Method {\n } external;\n \n # Returns the Time object correspoding to the given time components and time-zone.\n+# ```ballerina\n+#  time:Time|error dateTime = time:createTime(2020, 3, 28, 23, 42, 45, 554, \"America/Panama\");\n+# ```\n #\n # + year - The year representation\n # + month - The month-of-year to represent, from 1 (January) to 12 (December)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 298}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODU3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + timeFormat - The format which is used to parse the given text\n          \n          \n            \n            # + timeFormat - The format, which is used to parse the given text", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848576", "createdAt": "2020-04-10T17:01:24Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -328,10 +419,14 @@ function externCreateTime(int year, int month, int date, int hour, int minute, i\n } external;\n \n # Returns the time for the given string representation based on the given format string.\n+# ```ballerina\n+#  string timeFormat = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";\n+#  time:Time|error time = time:parse(\"2020-06-26T09:46:22.444-0500\", timeFormat);\n+# ```\n #\n # + data - The time text to parse\n # + timeFormat - The format which is used to parse the given text", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 309}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0ODY3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Time object containing time and zone information or an error if failed to parse the given string\n          \n          \n            \n            # + return - Time object containing the time and zone information or else an error if failed to parse the given string", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r406848678", "createdAt": "2020-04-10T17:01:37Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -328,10 +419,14 @@ function externCreateTime(int year, int month, int date, int hour, int minute, i\n } external;\n \n # Returns the time for the given string representation based on the given format string.\n+# ```ballerina\n+#  string timeFormat = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";\n+#  time:Time|error time = time:parse(\"2020-06-26T09:46:22.444-0500\", timeFormat);\n+# ```\n #\n # + data - The time text to parse\n # + timeFormat - The format which is used to parse the given text\n-# + return - Time object containing time and zone information or an `time:Error` if failed to parse the given string\n+# + return - Time object containing time and zone information or an error if failed to parse the given string", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e9323c3c42c649edfbd391b2742eb436a6e3f47"}, "originalPosition": 311}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b", "author": {"user": {"login": "Maninda", "name": "Maninda Edirisooriya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/237fce81b7876462a60ff278bec1824cdc9de76b", "committedDate": "2020-04-10T20:08:22Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzUxNzk1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#pullrequestreview-391751795", "createdAt": "2020-04-11T09:36:53Z", "commit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "state": "COMMENTED", "comments": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwOTozNjo1M1rOGEL3cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwOTo0NjoyOFrOGEL6-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MTkwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The module has two main types as [Time](records/Time.html) and [TimeZone](records/TimeZone.html). The type `Time` represents a time associated with a given time zone. It has `time` and `zone` as attributes. The type `TimeZone` represents the time zone associated with a given time. It has `id` and `offset` as attributes. An `id` can be one of the following:\n          \n          \n            \n            The module has two main types as [Time](records/Time.html) and [TimeZone](records/TimeZone.html). The `Time` type represents a time associated with a given time zone. It has `time` and `zone` as its attributes. The `TimeZone` type represents the time zone associated with a given time. It has `id` and `offset` as its attributes. An `id` can be one of the following:", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407041904", "createdAt": "2020-04-11T09:36:53Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/Module.md", "diffHunk": "@@ -1,5 +1,3 @@\n-## Module overview\n-\n This module provides implementations related to time, date, time zones, and durations. \n \n The module has two main types as [Time](records/Time.html) and [TimeZone](records/TimeZone.html). The type `Time` represents a time associated with a given time zone. It has `time` and `zone` as attributes. The type `TimeZone` represents the time zone associated with a given time. It has `id` and `offset` as attributes. An `id` can be one of the following:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MTkyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * If `id` starts with '+' or '-', the ID is parsed as an offset. Offset can be specified in one of the following ways. +h, +hh, +hh:mm, -hh:mm, +hhmm, -hhmm, +hh:mm:ss, -hh:mm:ss, +hhmmss, -hhmmss\n          \n          \n            \n            * If `id` starts with '+' or '-', the ID is parsed as an offset. The offset can be specified in one of the following ways: +h, +hh, +hh:mm, -hh:mm, +hhmm, -hhmm, +hh:mm:ss, -hh:mm:ss, +hhmmss, -hhmmss", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407041923", "createdAt": "2020-04-11T09:37:11Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/Module.md", "diffHunk": "@@ -9,148 +7,9 @@ The module has two main types as [Time](records/Time.html) and [TimeZone](record\n * If `id` starts with '+' or '-', the ID is parsed as an offset. Offset can be specified in one of the following ways. +h, +hh, +hh:mm, -hh:mm, +hhmm, -hhmm, +hh:mm:ss, -hh:mm:ss, +hhmmss, -hhmmss", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MTk0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Also `id` can be a region-based zone ID. The format is '{area}/{city}' eg: \"America/Panama\". The zones are based on IANA Time Zone Database (TZDB) supplied data.\n          \n          \n            \n            * Also, `id` can be a region-based zone ID. The format is '{area}/{city}' e.g., \"America/Panama\". The zones are based on IANA Time Zone Database (TZDB) supplied data.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407041948", "createdAt": "2020-04-11T09:37:23Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/Module.md", "diffHunk": "@@ -9,148 +7,9 @@ The module has two main types as [Time](records/Time.html) and [TimeZone](record\n * If `id` starts with '+' or '-', the ID is parsed as an offset. Offset can be specified in one of the following ways. +h, +hh, +hh:mm, -hh:mm, +hhmm, -hhmm, +hh:mm:ss, -hh:mm:ss, +hhmmss, -hhmmss\n * Also `id` can be a region-based zone ID. The format is '{area}/{city}' eg: \"America/Panama\". The zones are based on IANA Time Zone Database (TZDB) supplied data.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjAwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Specifies the time error that occurs in the module.\n          \n          \n            \n            # Specifies the time error, which occurs in the module.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042004", "createdAt": "2020-04-11T09:37:51Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/time_errors.bal", "diffHunk": "@@ -14,18 +14,18 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# Record type to hold the details of an error.\n+# Details of an error.\n #\n-# + message - Specific error message of the error.\n-# + cause - Any other error, which causes this error.\n+# + message - Specific error message of the error\n+# + cause - Any other error, which causes this error\n public type Detail record {\n     string message;\n     error cause?;\n };\n \n-# Error reason to specify the time error that occurs in the module\n+# Specifies the time error that occurs in the module.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjA5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The ISO 8601 formatted string of the given time\n          \n          \n            \n            # + return - The ISO 8601-formatted string of the given time", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042094", "createdAt": "2020-04-11T09:38:45Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -40,7 +40,12 @@ public type Time record {|\n     TimeZone zone;\n |};\n \n-# Returns ISO 8601 string representation of the given time.\n+# Returns the ISO 8601 string representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  string timeString = time:toString(time);\n+# ```\n #\n # + time - The Time record to be converted to string\n # + return - The ISO 8601 formatted string of the given time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjIxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The formatted string of the given time or else an error if failed to format the time\n          \n          \n            \n            # + return - The formatted string of the given time or else a `time:Error` if failed to format the time\n          \n      \n    \n    \n  \n\nneed to specify the error type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042212", "createdAt": "2020-04-11T09:39:55Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -58,11 +63,16 @@ function externToString(Time time) returns handle = @java:Method {\n     class: \"org.ballerinalang.stdlib.time.nativeimpl.ExternMethods\"\n } external;\n \n-# Returns formatted string representation of the given time.\n+# Returns the formatted string representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  string|error timeString = time:format(time, time:TIME_FORMAT_RFC_1123);\n+# ```\n #\n # + time - The Time record to be formatted\n-# + timeFormat - The format which is used to format the time represented by this object\n-# + return - The formatted string of the given time or an `time:Error` if failed to format the time\n+# + timeFormat - The format, which is used to format the time represented by this object\n+# + return - The formatted string of the given time or else an error if failed to format the time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjI1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The day-of-month, from 1 to 31\n          \n          \n            \n            # + return - The day-of-month from 1 to 31", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042256", "createdAt": "2020-04-11T09:40:28Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -109,8 +129,13 @@ function externGetMonth(Time time) returns int = @java:Method {\n } external;\n \n # Returns the date representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int day = time:getDay(time);\n+# ```\n #\n-# + time - The Time record to get the date representation from\n+# + time - The Time record to get the date representation\n # + return - The day-of-month, from 1 to 31", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjI3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + time - The Time record to get the  hour representation\n          \n          \n            \n            # + time - The Time record to get the hour representation", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042275", "createdAt": "2020-04-11T09:40:43Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -140,8 +170,13 @@ function externGetWeekday(Time time) returns handle = @java:Method {\n } external;\n \n # Returns the hour representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int hour = time:getHour(time);\n+# ```\n #\n-# + time - The Time record to get the  hour representation from\n+# + time - The Time record to get the  hour representation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjI5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + time - The Time record to get the  minute representation\n          \n          \n            \n            # + time - The Time record to get the minute representation", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042290", "createdAt": "2020-04-11T09:40:53Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -153,8 +188,13 @@ function externGetHour(Time time) returns int = @java:Method {\n } external;\n \n # Returns the minute representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int minute = time:getMinute(time);\n+# ```\n #\n-# + time - The Time record to get the  minute representation from\n+# + time - The Time record to get the  minute representation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjMwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The hour-of-day, from 0 to 23\n          \n          \n            \n            # + return - The hour-of-day from 0 to 23", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042302", "createdAt": "2020-04-11T09:41:01Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -140,8 +170,13 @@ function externGetWeekday(Time time) returns handle = @java:Method {\n } external;\n \n # Returns the hour representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int hour = time:getHour(time);\n+# ```\n #\n-# + time - The Time record to get the  hour representation from\n+# + time - The Time record to get the  hour representation\n # + return - The hour-of-day, from 0 to 23", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjMyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The minute-of-hour to represent, from 0 to 59\n          \n          \n            \n            # + return - The minute-of-hour to represent from 0 to 59", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042325", "createdAt": "2020-04-11T09:41:22Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -153,8 +188,13 @@ function externGetHour(Time time) returns int = @java:Method {\n } external;\n \n # Returns the minute representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int minute = time:getMinute(time);\n+# ```\n #\n-# + time - The Time record to get the  minute representation from\n+# + time - The Time record to get the  minute representation\n # + return - The minute-of-hour to represent, from 0 to 59", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjM0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The milli-of-second, from 0 to 999\n          \n          \n            \n            # + return - The milli-of-second from 0 to 999", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042348", "createdAt": "2020-04-11T09:41:37Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -179,8 +224,13 @@ function externGetSecond(Time time) returns int = @java:Method {\n } external;\n \n # Returns the millisecond representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int milliSecond = time:getMilliSecond(time);\n+# ```\n #\n-# + time - The Time record to get the millisecond representation from\n+# + time - The Time record to get the millisecond representation\n # + return - The milli-of-second, from 0 to 999", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjM5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + time - The Time record to add the duration to\n          \n          \n            \n            # + time - The Time record to add the duration", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042390", "createdAt": "2020-04-11T09:42:13Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -223,6 +283,14 @@ function externGetTime(Time time) returns [int, int, int, int] = @java:Method {\n } external;\n \n # Add specified durations to the given time value.\n+# ```ballerina\n+#  string timeText = \"2020-06-26T09:46:22.444-0500\";\n+#  string timeFormat = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";\n+#  time:Time|error originalTime = time:parse(timeText, timeFormat);\n+#  if (originalTime is time:Time) {\n+#      time:Time newTime = time:addDuration(originalTime, 1, 1, 1, 1, 1, 1, 1);\n+#  }\n+# ```\n #\n # + time - The Time record to add the duration to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 236}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjQyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            or else an error if failed to format the time\n          \n          \n            \n            #            or else  a `time:Error` if failed to format the time", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042426", "createdAt": "2020-04-11T09:42:42Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -267,11 +343,17 @@ function externSubtractDuration(Time time, int years, int months, int days, int\n } external;\n \n # Change the time-zone of the given time.\n+# ```ballerina\n+#  string zoneId = \"America/Panama\";\n+#  time:TimeZone zoneValue = {id: zoneId};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  time:Time|time:Error newTime = time:toTimeZone(time, zoneId);\n+# ```\n #\n-# + time - The Time record of which the time-zone to be changed\n-# + zoneId - The new time-zone id\n-# + return - Time object containing time and zone information after the conversion\n-#            or an `time:Error` if failed to format the time\n+# + time - The Time record of which the time-zone is to be changed\n+# + zoneId - The new time-zone ID\n+# + return - Time object containing the time and zone information after the conversion\n+#            or else an error if failed to format the time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 271}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjQ3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + date - The day-of-month to represent, from 1 to 31\n          \n          \n            \n            # + date - The day-of-month to represent from 1 to 31", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042479", "createdAt": "2020-04-11T09:43:12Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -306,9 +394,12 @@ function externNanoTime() returns int = @java:Method {\n } external;\n \n # Returns the Time object correspoding to the given time components and time-zone.\n+# ```ballerina\n+#  time:Time|error dateTime = time:createTime(2020, 3, 28, 23, 42, 45, 554, \"America/Panama\");\n+# ```\n #\n # + year - The year representation\n-# + month - The month-of-year to represent, from 1 (January) to 12 (December)\n+# + month - The month-of-year to represent from 1 (January) to 12 (December)\n # + date - The day-of-month to represent, from 1 to 31", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 312}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjQ4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + date - The day-of-month to represent, from 1 to 31\n          \n          \n            \n            # + date - The day-of-month to represent from 1 to 31", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042487", "createdAt": "2020-04-11T09:43:20Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -306,9 +394,12 @@ function externNanoTime() returns int = @java:Method {\n } external;\n \n # Returns the Time object correspoding to the given time components and time-zone.\n+# ```ballerina\n+#  time:Time|error dateTime = time:createTime(2020, 3, 28, 23, 42, 45, 554, \"America/Panama\");\n+# ```\n #\n # + year - The year representation\n-# + month - The month-of-year to represent, from 1 (January) to 12 (December)\n+# + month - The month-of-year to represent from 1 (January) to 12 (December)\n # + date - The day-of-month to represent, from 1 to 31", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 312}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjQ5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + hour - The hour-of-day to represent, from 0 to 23\n          \n          \n            \n            # + hour - The hour-of-day to represent from 0 to 23", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042498", "createdAt": "2020-04-11T09:43:27Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -306,9 +394,12 @@ function externNanoTime() returns int = @java:Method {\n } external;\n \n # Returns the Time object correspoding to the given time components and time-zone.\n+# ```ballerina\n+#  time:Time|error dateTime = time:createTime(2020, 3, 28, 23, 42, 45, 554, \"America/Panama\");\n+# ```\n #\n # + year - The year representation\n-# + month - The month-of-year to represent, from 1 (January) to 12 (December)\n+# + month - The month-of-year to represent from 1 (January) to 12 (December)\n # + date - The day-of-month to represent, from 1 to 31\n # + hour - The hour-of-day to represent, from 0 to 23", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 313}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjUwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + minute - The minute-of-hour to represent, from 0 to 59\n          \n          \n            \n            # + minute - The minute-of-hour to represent from 0 to 59", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042504", "createdAt": "2020-04-11T09:43:33Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -306,9 +394,12 @@ function externNanoTime() returns int = @java:Method {\n } external;\n \n # Returns the Time object correspoding to the given time components and time-zone.\n+# ```ballerina\n+#  time:Time|error dateTime = time:createTime(2020, 3, 28, 23, 42, 45, 554, \"America/Panama\");\n+# ```\n #\n # + year - The year representation\n-# + month - The month-of-year to represent, from 1 (January) to 12 (December)\n+# + month - The month-of-year to represent from 1 (January) to 12 (December)\n # + date - The day-of-month to represent, from 1 to 31\n # + hour - The hour-of-day to represent, from 0 to 23\n # + minute - The minute-of-hour to represent, from 0 to 59", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 314}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjU2MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Time object containing the time and zone information or else an error if failed to parse the given string\n          \n          \n            \n            # + return - Time object containing the time and zone information or else  a `time:Error` if failed to parse the given string", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042561", "createdAt": "2020-04-11T09:43:47Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -328,10 +419,14 @@ function externCreateTime(int year, int month, int date, int hour, int minute, i\n } external;\n \n # Returns the time for the given string representation based on the given format string.\n+# ```ballerina\n+#  string timeFormat = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";\n+#  time:Time|error time = time:parse(\"2020-06-26T09:46:22.444-0500\", timeFormat);\n+# ```\n #\n # + data - The time text to parse\n-# + timeFormat - The format which is used to parse the given text\n-# + return - Time object containing time and zone information or an `time:Error` if failed to parse the given string\n+# + timeFormat - The format, which is used to parse the given text\n+# + return - Time object containing the time and zone information or else an error if failed to parse the given string", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 328}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0MjgxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The second-of-minute, from 0 to 59\n          \n          \n            \n            # + return - The second-of-minute from 0 to 59", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407042810", "createdAt": "2020-04-11T09:46:28Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -166,8 +206,13 @@ function externGetMinute(Time time) returns int = @java:Method {\n } external;\n \n # Returns the second representation of the given time.\n+# ```ballerina\n+#  time:TimeZone zoneValue = {id: \"America/Panama\"};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  int second = time:getSecond(time);\n+# ```\n #\n-# + time - The Time record to get the second representation from\n+# + time - The Time record to get the second representation\n # + return - The second-of-minute, from 0 to 59", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237fce81b7876462a60ff278bec1824cdc9de76b"}, "originalPosition": 162}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee98df6d0c533146b95846895007413dc99aa47e", "author": {"user": {"login": "Maninda", "name": "Maninda Edirisooriya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ee98df6d0c533146b95846895007413dc99aa47e", "committedDate": "2020-04-11T09:56:39Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzUzNDUx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#pullrequestreview-391753451", "createdAt": "2020-04-11T10:03:51Z", "commit": {"oid": "ee98df6d0c533146b95846895007413dc99aa47e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMDowMzo1MVrOGEMBYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMDowNzo0N1rOGEMCrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0NDQ0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            or else  a `time:Error` if failed to format the time\n          \n          \n            \n            #            or else a `time:Error` if failed to format the time", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407044449", "createdAt": "2020-04-11T10:03:51Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -267,11 +343,17 @@ function externSubtractDuration(Time time, int years, int months, int days, int\n } external;\n \n # Change the time-zone of the given time.\n+# ```ballerina\n+#  string zoneId = \"America/Panama\";\n+#  time:TimeZone zoneValue = {id: zoneId};\n+#  time:Time time = {time: 1578488382444, zone: zoneValue};\n+#  time:Time|time:Error newTime = time:toTimeZone(time, zoneId);\n+# ```\n #\n-# + time - The Time record of which the time-zone to be changed\n-# + zoneId - The new time-zone id\n-# + return - Time object containing time and zone information after the conversion\n-#            or an `time:Error` if failed to format the time\n+# + time - The Time record of which the time-zone is to be changed\n+# + zoneId - The new time-zone ID\n+# + return - Time object containing the time and zone information after the conversion\n+#            or else  a `time:Error` if failed to format the time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee98df6d0c533146b95846895007413dc99aa47e"}, "originalPosition": 288}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0NDc4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Returns the current time value with the system default time-zone.\n          \n          \n            \n            # Returns the current time value with the default system time-zone.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#discussion_r407044780", "createdAt": "2020-04-11T10:07:47Z", "author": {"login": "praneesha"}, "path": "stdlib/time/src/main/ballerina/src/time/timelib.bal", "diffHunk": "@@ -282,8 +364,11 @@ function externToTimeZone(Time time, handle zoneId) returns Time|Error = @java:M\n } external;\n \n # Returns the current time value with the system default time-zone.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee98df6d0c533146b95846895007413dc99aa47e"}, "originalPosition": 295}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a84eb6414d380f428dc3624af9b539bbcc6d053", "author": {"user": {"login": "Maninda", "name": "Maninda Edirisooriya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4a84eb6414d380f428dc3624af9b539bbcc6d053", "committedDate": "2020-04-11T10:08:56Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzUzODM2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22581#pullrequestreview-391753836", "createdAt": "2020-04-11T10:09:44Z", "commit": {"oid": "4a84eb6414d380f428dc3624af9b539bbcc6d053"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3970, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}