{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NzYyMTQ0", "number": 21046, "title": "Add stream construct", "bodyText": "Purpose\n$title\nFixes #20745\nApproach\n\nn/a\n\nSamples\nint i = 0;\n\nstream<int> evenNumberStream = stream {\n    i += 2;\n    return { value: i };\n};\n\nvar evenNumberRec = evenNumberStream.next();\nint evenNumber = <int>evenNumberRec[\"value\"];\n\nRemarks\n\n#20745\nballerina-platform/ballerina-spec#406\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-02-13T09:36:35Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21046", "merged": true, "mergeCommit": {"oid": "8364d05d5bb84577d231f702eba899a7d3dd3ae1"}, "closed": true, "closedAt": "2020-02-14T08:49:24Z", "author": {"login": "grainier"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcD0567gH2gAyMzc0NzYyMTQ0OjhlMjk0NWUyNTc1MTliNjFiMjgxMGI2YTQ3NjYwMGI1ZTY2N2VhMTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcEHu6EgFqTM1ODcwNTQ3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8e2945e257519b61b2810b6a476600b5e667ea17", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8e2945e257519b61b2810b6a476600b5e667ea17", "committedDate": "2020-02-13T06:26:11Z", "message": "Add stream construct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "319865543b5f2da9db179c8449e1b3dfa83e8581", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/319865543b5f2da9db179c8449e1b3dfa83e8581", "committedDate": "2020-02-13T09:32:04Z", "message": "Fix and enable stream construct tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MzQwNzc1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21046#pullrequestreview-358340775", "createdAt": "2020-02-13T16:01:03Z", "commit": {"oid": "319865543b5f2da9db179c8449e1b3dfa83e8581"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjowMTowM1rOFpZk3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjowMTowM1rOFpZk3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk1NDk3Mw==", "bodyText": "Add a description to the class?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21046#discussion_r378954973", "createdAt": "2020-02-13T16:01:03Z", "author": {"login": "gimantha"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/expressions/StreamConstructorNode.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.model.tree.expressions;\n+\n+/**\n+ * @since 1.2.0\n+ */\n+public interface StreamConstructorNode extends ExpressionNode {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "319865543b5f2da9db179c8449e1b3dfa83e8581"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MzQzNDQ2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21046#pullrequestreview-358343446", "createdAt": "2020-02-13T16:04:09Z", "commit": {"oid": "319865543b5f2da9db179c8449e1b3dfa83e8581"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjowNDowOVrOFpZsjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjowNDowOVrOFpZsjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk1Njk0Mg==", "bodyText": "dont we need to set the constraint type of the stream type here?.. meaning that we have to create a new stream type, without using symTable.streamType", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21046#discussion_r378956942", "createdAt": "2020-02-13T16:04:09Z", "author": {"login": "gimantha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -4276,6 +4278,30 @@ public void visit(BLangServiceConstructorExpr serviceConstructorExpr) {\n         result = rewriteExpr(typeInit);\n     }\n \n+    @Override\n+    public void visit(BLangStreamConstructorExpr streamConstructorExpr) {\n+        BLangInvocation streamConstructInvocation = streamConstructInvocation(streamConstructorExpr);\n+        result = rewriteExpr(streamConstructInvocation);\n+    }\n+\n+    private BLangInvocation streamConstructInvocation(BLangStreamConstructorExpr streamConstructorExpr) {\n+        BLangLambdaFunction lambdaFunction = streamConstructorExpr.lambdaFunction;\n+        BInvokableSymbol symbol = (BInvokableSymbol) symTable.langStreamModuleSymbol.scope\n+                .lookup(Names.CONSTRUCT_STREAM).symbol;\n+\n+        BType targetType = ((BStreamType) streamConstructorExpr.type).constraint;\n+        BType typedescType = new BTypedescType(targetType, symTable.typeDesc.tsymbol);\n+        BLangTypedescExpr typedescExpr = new BLangTypedescExpr();\n+        typedescExpr.resolvedType = targetType;\n+        typedescExpr.type = typedescType;\n+\n+        BLangInvocation streamConstructInvocation = ASTBuilderUtil.createInvocationExprForMethod(\n+                streamConstructorExpr.pos, symbol, new ArrayList<>(Lists.of(typedescExpr, lambdaFunction)),\n+                symResolver);\n+        streamConstructInvocation.type = symTable.streamType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "319865543b5f2da9db179c8449e1b3dfa83e8581"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MzU5OTE1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21046#pullrequestreview-358359915", "createdAt": "2020-02-13T16:24:01Z", "commit": {"oid": "319865543b5f2da9db179c8449e1b3dfa83e8581"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyNDowMVrOFpaeJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoyNDowMVrOFpaeJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2OTYzOQ==", "bodyText": "lets make versioning consistent with 3 digits", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21046#discussion_r378969639", "createdAt": "2020-02-13T16:24:01Z", "author": {"login": "gimantha"}, "path": "langlib/lang.stream/src/main/java/org/ballerinalang/langlib/stream/Construct.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.ballerinalang.langlib.stream;\n+\n+import org.ballerinalang.jvm.scheduling.Scheduler;\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.jvm.types.BFunctionType;\n+import org.ballerinalang.jvm.types.BStreamType;\n+import org.ballerinalang.jvm.values.FPValue;\n+import org.ballerinalang.jvm.values.IteratorValue;\n+import org.ballerinalang.jvm.values.MapValueImpl;\n+import org.ballerinalang.jvm.values.StreamValue;\n+import org.ballerinalang.jvm.values.TypedescValue;\n+import org.ballerinalang.jvm.values.api.BFunctionPointer;\n+import org.ballerinalang.jvm.values.api.BString;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+import org.ballerinalang.natives.annotations.ReturnType;\n+\n+/**\n+ * Native implementation of lang.stream:construct(typeDesc, function).\n+ *\n+ * @since 1.2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "319865543b5f2da9db179c8449e1b3dfa83e8581"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70d6841b3dff21394c316ec2a322d4ebdd9fa754", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/70d6841b3dff21394c316ec2a322d4ebdd9fa754", "committedDate": "2020-02-14T04:04:51Z", "message": "Merge upstream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b8648327459f39d62381438cb990fa4840053af", "author": {"user": {"login": "grainier", "name": "Grainier Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5b8648327459f39d62381438cb990fa4840053af", "committedDate": "2020-02-14T04:19:35Z", "message": "Fix class level comments and versioning"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NzA1NDc1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21046#pullrequestreview-358705475", "createdAt": "2020-02-14T04:22:22Z", "commit": {"oid": "5b8648327459f39d62381438cb990fa4840053af"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4276, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}