{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4Nzg2NjU4", "number": 25605, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDo0OTo0OVrOEgPTFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwNTowMzowNlrOEivuYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjQwNTM1OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaModuleID.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDo0OTo0OVrOHM_b9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOTozMjoyOFrOHNGvgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM4NDMxMQ==", "bodyText": "Shall we mention what needs to be improved? otherwise we might forget these over time", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25605#discussion_r483384311", "createdAt": "2020-09-04T04:49:49Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaModuleID.java", "diffHunk": "@@ -66,4 +66,24 @@ public String toString() {\n         }\n         return this.orgName() + \"/\" + this.moduleName() + \":\" + this.version();\n     }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+\n+        if (obj == null || getClass() != obj.getClass()) {\n+            return false;\n+        }\n+\n+        // TODO: Improve this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "099d672eeb139711e14c66c1d38913364d9086ef"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwNDAwMA==", "bodyText": "Will fix these in the PR itself", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25605#discussion_r483504000", "createdAt": "2020-09-04T09:32:28Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaModuleID.java", "diffHunk": "@@ -66,4 +66,24 @@ public String toString() {\n         }\n         return this.orgName() + \"/\" + this.moduleName() + \":\" + this.version();\n     }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+\n+        if (obj == null || getClass() != obj.getClass()) {\n+            return false;\n+        }\n+\n+        // TODO: Improve this", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM4NDMxMQ=="}, "originalCommit": {"oid": "099d672eeb139711e14c66c1d38913364d9086ef"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjQ4OTA1OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaSemanticModel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNTozNDo0N1rOHNAL0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOTozMzo1MVrOHNGyeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM5NjU2Mg==", "bodyText": "Is it possible to get this logic to a common place? Since the same is implemented in https://github.com/ballerina-platform/ballerina-lang/pull/25605/files#diff-3bb78fa9a4bfafbf27ec61bfdea79e93R1059 as well?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25605#discussion_r483396562", "createdAt": "2020-09-04T05:34:47Z", "author": {"login": "nadeeshaan"}, "path": "compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaSemanticModel.java", "diffHunk": "@@ -99,4 +129,31 @@ public BallerinaSemanticModel(BLangCompilationUnit compilationUnit, BLangPackage\n     public List<Diagnostic> diagnostics(TextRange range) {\n         return new ArrayList<>();\n     }\n+\n+    private boolean isSymbolInUserProject(BSymbol symbol, DiagnosticPos cursorPos) {\n+        return symbol.origin == SOURCE &&\n+                (cursorPos.compareTo(symbol.pos) > SYMBOL_POSITION ||\n+                        symbol.owner instanceof BPackageSymbol ||\n+                        Symbols.isFlagOn(symbol.flags, Flags.WORKER));\n+    }\n+\n+    private boolean isImportedSymbol(BSymbol symbol) {\n+        return symbol.origin == COMPILED_SOURCE &&\n+                (Symbols.isFlagOn(symbol.flags, Flags.PUBLIC) || symbol.getKind() == SymbolKind.PACKAGE);\n+    }\n+\n+    private boolean isWithinSymbol(LinePosition cursorPos, DiagnosticPos symbolPos) {\n+        int symbolStartLine = symbolPos.getStartLine();\n+        int symbolEndLine = symbolPos.getEndLine();\n+        int symbolStartCol = symbolPos.getStartColumn();\n+        int symbolEndCol = symbolPos.getEndColumn();\n+        int cursorLine = cursorPos.line();\n+        int cursorCol = cursorPos.offset();\n+\n+        return (symbolStartLine < cursorLine && symbolEndLine > cursorLine)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "099d672eeb139711e14c66c1d38913364d9086ef"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwNDc2MA==", "bodyText": "For now, I just simply took the same logic. But yeah, need to figure out where to place things like these", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25605#discussion_r483504760", "createdAt": "2020-09-04T09:33:51Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-compiler-api/src/main/java/org/ballerina/compiler/impl/BallerinaSemanticModel.java", "diffHunk": "@@ -99,4 +129,31 @@ public BallerinaSemanticModel(BLangCompilationUnit compilationUnit, BLangPackage\n     public List<Diagnostic> diagnostics(TextRange range) {\n         return new ArrayList<>();\n     }\n+\n+    private boolean isSymbolInUserProject(BSymbol symbol, DiagnosticPos cursorPos) {\n+        return symbol.origin == SOURCE &&\n+                (cursorPos.compareTo(symbol.pos) > SYMBOL_POSITION ||\n+                        symbol.owner instanceof BPackageSymbol ||\n+                        Symbols.isFlagOn(symbol.flags, Flags.WORKER));\n+    }\n+\n+    private boolean isImportedSymbol(BSymbol symbol) {\n+        return symbol.origin == COMPILED_SOURCE &&\n+                (Symbols.isFlagOn(symbol.flags, Flags.PUBLIC) || symbol.getKind() == SymbolKind.PACKAGE);\n+    }\n+\n+    private boolean isWithinSymbol(LinePosition cursorPos, DiagnosticPos symbolPos) {\n+        int symbolStartLine = symbolPos.getStartLine();\n+        int symbolEndLine = symbolPos.getEndLine();\n+        int symbolStartCol = symbolPos.getStartColumn();\n+        int symbolEndCol = symbolPos.getEndColumn();\n+        int cursorLine = cursorPos.line();\n+        int cursorCol = cursorPos.offset();\n+\n+        return (symbolStartLine < cursorLine && symbolEndLine > cursorLine)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM5NjU2Mg=="}, "originalCommit": {"oid": "099d672eeb139711e14c66c1d38913364d9086ef"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0ODY4OTYwOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-compiler-api/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwNTowMzowNlrOHQyoxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNTowOTo1MlrOHREE5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM2ODkwMQ==", "bodyText": "Do we still need this?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25605#discussion_r487368901", "createdAt": "2020-09-12T05:03:06Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-compiler-api/build.gradle", "diffHunk": "@@ -27,6 +27,9 @@ dependencies {\n \n     testCompile 'org.testng:testng'\n     testCompile project(path: ':ballerina-test-utils', configuration: 'shadow')\n+    testCompile project(':ballerina-io')\n+\n+    baloTestImplementation project(path: ':ballerina-io', configuration: 'baloImplementation')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab925c1aed0661527dbe20bb25203ead7054f8a1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY1NDYyOQ==", "bodyText": "No we don't. Not sure how this came up here again. Will remove this.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25605#discussion_r487654629", "createdAt": "2020-09-14T05:09:52Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-compiler-api/build.gradle", "diffHunk": "@@ -27,6 +27,9 @@ dependencies {\n \n     testCompile 'org.testng:testng'\n     testCompile project(path: ':ballerina-test-utils', configuration: 'shadow')\n+    testCompile project(':ballerina-io')\n+\n+    baloTestImplementation project(path: ':ballerina-io', configuration: 'baloImplementation')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM2ODkwMQ=="}, "originalCommit": {"oid": "ab925c1aed0661527dbe20bb25203ead7054f8a1"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 179, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}