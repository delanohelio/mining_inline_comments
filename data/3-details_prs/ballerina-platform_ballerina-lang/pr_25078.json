{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMDIzNTUx", "number": 25078, "title": "Improve 'transactional' functions parsing", "bodyText": "Purpose\n\nImprove 'transactional' functions parsing.\nUse a list to contain function qualifiers.\nAdd a single method to parse function qualifiers.\n\nFixes #24221, #25016 #24992\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-07-31T10:44:27Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078", "merged": true, "mergeCommit": {"oid": "6649ceaf669902ac231fdb14b9cad53c5c77d6b6"}, "closed": true, "closedAt": "2020-08-11T06:00:54Z", "author": {"login": "rdulmina"}, "timelineItems": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6BkqBAH2gAyNDYwMDIzNTUxOmQ4ODJmMzNhYzQ1YzJhYTk1NDI3MWNiMTg3NzJlM2U2NzMxN2U3YzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9wbTuAFqTQ2NDc2OTQzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d882f33ac45c2aa954271cb18772e3e67317e7c4", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d882f33ac45c2aa954271cb18772e3e67317e7c4", "committedDate": "2020-07-30T15:43:38Z", "message": "Add missing case to parseObjectMember method."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "520334fe1d06980a1a933d596d9e25a1e7947b84", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/520334fe1d06980a1a933d596d9e25a1e7947b84", "committedDate": "2020-07-31T10:16:12Z", "message": "Add all qualifiers to a list for func-def."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe32af56af66db6b967b7a2fa30b9ae5b439afe1", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fe32af56af66db6b967b7a2fa30b9ae5b439afe1", "committedDate": "2020-07-31T10:31:38Z", "message": "Remove fall through."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0869d6cad732a43b0e575c28afd4bf7ee3b720f0", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0869d6cad732a43b0e575c28afd4bf7ee3b720f0", "committedDate": "2020-07-31T10:40:53Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MDk5MjE2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#pullrequestreview-459099216", "createdAt": "2020-07-31T11:16:57Z", "commit": {"oid": "0869d6cad732a43b0e575c28afd4bf7ee3b720f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxNjo1N1rOG6E_Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxNjo1N1rOG6E_Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1MjM1OQ==", "bodyText": "If the token is neither transactional or function, we'll have to add recovery here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#discussion_r463552359", "createdAt": "2020-07-31T11:16:57Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -1460,28 +1461,21 @@ private STNode parseFuncDefinition(STNode metadata, boolean isObjectMethod, STNo\n      * </code>\n      *\n      * @param metadata Metadata\n-     * @param visibilityQualifier Visibility qualifier\n+     * @param qualifiers qualifier list\n      * @return Parsed node\n      */\n-    private STNode parseFuncDefOrFuncTypeDesc(STNode metadata, boolean isObjectMethod, STNode... qualifiers) {\n-        parseTransactionalQUalifier(qualifiers);\n+    private STNode parseFuncDefOrFuncTypeDesc(STNode metadata, boolean isObjectMethod, List<STNode> qualifiers) {\n+        if (peek().kind == SyntaxKind.TRANSACTIONAL_KEYWORD) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0869d6cad732a43b0e575c28afd4bf7ee3b720f0"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca9b002d317dae50e5354f23674c477206e833ab", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ca9b002d317dae50e5354f23674c477206e833ab", "committedDate": "2020-08-04T04:57:48Z", "message": "Added recovery in parseFuncDefOrFuncTypeDesc method.\nAdded recovery in parseFuncDefOrFuncTypeDesc method with some test cases. Will add more tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb6644589726dcf9a0b6d2a3491072e50633eb1f", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eb6644589726dcf9a0b6d2a3491072e50633eb1f", "committedDate": "2020-08-04T04:58:30Z", "message": "Enable test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "295b566ecb419577e1f97e8ba5e14a26c73ceba0", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/295b566ecb419577e1f97e8ba5e14a26c73ceba0", "committedDate": "2020-08-04T12:05:29Z", "message": "Added more test cases for transactional functions."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec4a189fab7ab7fed6678b9b7924d1733938ec82", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ec4a189fab7ab7fed6678b9b7924d1733938ec82", "committedDate": "2020-08-04T17:20:13Z", "message": "Update assert files."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a62773b1aac7ae39090922ac552f5b43158b243", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8a62773b1aac7ae39090922ac552f5b43158b243", "committedDate": "2020-08-05T05:00:00Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48191cc4b5a546b72743eb9475ac0be1e78d618c", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/48191cc4b5a546b72743eb9475ac0be1e78d618c", "committedDate": "2020-08-05T05:20:03Z", "message": "Fix IndexOutOfBoundsException in parseReturnTypeDescRhs method."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d368db2541072397e73e8573eb9645c29c03d60d", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d368db2541072397e73e8573eb9645c29c03d60d", "committedDate": "2020-08-05T09:44:04Z", "message": "Fix null pointer exception."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42c76136fc90a266885d89a35a60331bb73e9a8e", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/42c76136fc90a266885d89a35a60331bb73e9a8e", "committedDate": "2020-08-07T05:41:20Z", "message": "Single method to parse function qualifiers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf771cdd1b9cf092af4a74ef5369985e144530dc", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bf771cdd1b9cf092af4a74ef5369985e144530dc", "committedDate": "2020-08-07T05:56:48Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58eb6cbbf5d454e7227ded19906168f4ed9c098d", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/58eb6cbbf5d454e7227ded19906168f4ed9c098d", "committedDate": "2020-08-07T07:20:46Z", "message": "Update node transformer."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f376d38508cd7b21b42abb97e3fc96c964ae6dd", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3f376d38508cd7b21b42abb97e3fc96c964ae6dd", "committedDate": "2020-08-07T12:12:36Z", "message": "Fix issue in constant annotation decl parsing."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee9c64f9f9c06964e8ee2f9cf0fcfc9b3ad0752c", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ee9c64f9f9c06964e8ee2f9cf0fcfc9b3ad0752c", "committedDate": "2020-08-07T12:39:22Z", "message": "Resolve conflicts."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5631b81e69824f093f92439235e1b6d9244cee5", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b5631b81e69824f093f92439235e1b6d9244cee5", "committedDate": "2020-08-07T13:14:47Z", "message": "Add missing files."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf8b853aa4b279820621a868396da738a4bb5309", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cf8b853aa4b279820621a868396da738a4bb5309", "committedDate": "2020-08-10T04:11:37Z", "message": "Remove ObjectMethodDefinitionNode."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa22d6adb6b14d87e9a41b089e4fb94d0b72d07b", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aa22d6adb6b14d87e9a41b089e4fb94d0b72d07b", "committedDate": "2020-08-10T04:31:29Z", "message": "Fix language-server failure."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcff57f0f4ca24023848b210da3fbe9dbd129869", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bcff57f0f4ca24023848b210da3fbe9dbd129869", "committedDate": "2020-08-10T04:32:54Z", "message": "Add missing imports."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTYzODgx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#pullrequestreview-463963881", "createdAt": "2020-08-10T05:27:51Z", "commit": {"oid": "bcff57f0f4ca24023848b210da3fbe9dbd129869"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNToyNzo1MVrOG-Bvww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNToyNzo1MVrOG-Bvww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MzUwNw==", "bodyText": "Do we need this change?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#discussion_r467693507", "createdAt": "2020-08-10T05:27:51Z", "author": {"login": "lochana-chathura"}, "path": "misc/testerina/modules/testerina-core/src/main/ballerina/Ballerina.toml", "diffHunk": "@@ -8,5 +8,5 @@ target = \"java8\"\n     [[platform.libraries]]\n         artifactId = \"mock\"\n         version = \"0.0.0\"\n-        path = \"./lib/testerina-core-2.0.0-Preview2.jar\"\n+        path = \"./lib/testerina-core-2.0.0-Preview3-SNAPSHOT.jar\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcff57f0f4ca24023848b210da3fbe9dbd129869"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTY0MTA2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#pullrequestreview-463964106", "createdAt": "2020-08-10T05:28:54Z", "commit": {"oid": "bcff57f0f4ca24023848b210da3fbe9dbd129869"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNToyODo1NFrOG-Bwbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNToyODo1NFrOG-Bwbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MzY3OQ==", "bodyText": "this file also?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#discussion_r467693679", "createdAt": "2020-08-10T05:28:54Z", "author": {"login": "lochana-chathura"}, "path": "tests/jballerina-unit-test/ballerina-internal.log.1", "diffHunk": "@@ -0,0 +1,720 @@\n+[2020-08-07 12:25:46,714] SEVERE {b7a.log.crash} - ballerina/lang_annotations/1_0_0/___init ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcff57f0f4ca24023848b210da3fbe9dbd129869"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTY0NTU3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#pullrequestreview-463964557", "createdAt": "2020-08-10T05:30:51Z", "commit": {"oid": "bcff57f0f4ca24023848b210da3fbe9dbd129869"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNTozMDo1MVrOG-ByRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNTozMDo1MVrOG-ByRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5NDE1MQ==", "bodyText": "these qualifiers are always optional right? Do we need to go to the recovery?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#discussion_r467694151", "createdAt": "2020-08-10T05:30:51Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -5636,6 +5662,97 @@ private STNode parseObjectMethodOrField(SyntaxKind nextTokenKind, SyntaxKind nex\n         return parseObjectMethodOrField(solution.tokenKind, nextTokenKind, metadata, visibilityQualifier);\n     }\n \n+    /**\n+     * Parse function qualifiers.\n+     *\n+     * @return Parsed node\n+     */\n+    private STNode parseFunctionQualifiers(ParserRuleContext context, List<STNode> qualifierList) {\n+        STToken nextToken = peek();\n+        return parseFunctionQualifiers(nextToken.kind, context, qualifierList);\n+    }\n+\n+    private STNode parseFunctionQualifiers(SyntaxKind tokenKind, ParserRuleContext context,\n+                                               List<STNode> qualifierList) {\n+        while (!isEndOfFunctionQualifiers(tokenKind)) {\n+            STNode qualifier;\n+            switch (tokenKind) {\n+                case REMOTE_KEYWORD:\n+                    qualifier = parseRemoteKeyword();\n+                    break;\n+                case TRANSACTIONAL_KEYWORD:\n+                    qualifier = parseTransactionalKeyword();\n+                    break;\n+                case RESOURCE_KEYWORD:\n+                    qualifier = parseResourceKeyword();\n+                    break;\n+                default:\n+                    Solution solution = recover(peek(), context, context, qualifierList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcff57f0f4ca24023848b210da3fbe9dbd129869"}, "originalPosition": 272}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTY1NzIy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#pullrequestreview-463965722", "createdAt": "2020-08-10T05:35:31Z", "commit": {"oid": "bcff57f0f4ca24023848b210da3fbe9dbd129869"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNTozNTozMVrOG-B2eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNTozNTozMVrOG-B2eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5NTIyNA==", "bodyText": "what if the function keyword missing? we'll end up in an infinite loop right as function keyword is not handled inside parseFunctionQualifiers?\nI think we may check for REMOTE, TRANSACTIONAL, RESOURCE keywords and else return true. WDYT?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#discussion_r467695224", "createdAt": "2020-08-10T05:35:31Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -5636,6 +5662,97 @@ private STNode parseObjectMethodOrField(SyntaxKind nextTokenKind, SyntaxKind nex\n         return parseObjectMethodOrField(solution.tokenKind, nextTokenKind, metadata, visibilityQualifier);\n     }\n \n+    /**\n+     * Parse function qualifiers.\n+     *\n+     * @return Parsed node\n+     */\n+    private STNode parseFunctionQualifiers(ParserRuleContext context, List<STNode> qualifierList) {\n+        STToken nextToken = peek();\n+        return parseFunctionQualifiers(nextToken.kind, context, qualifierList);\n+    }\n+\n+    private STNode parseFunctionQualifiers(SyntaxKind tokenKind, ParserRuleContext context,\n+                                               List<STNode> qualifierList) {\n+        while (!isEndOfFunctionQualifiers(tokenKind)) {\n+            STNode qualifier;\n+            switch (tokenKind) {\n+                case REMOTE_KEYWORD:\n+                    qualifier = parseRemoteKeyword();\n+                    break;\n+                case TRANSACTIONAL_KEYWORD:\n+                    qualifier = parseTransactionalKeyword();\n+                    break;\n+                case RESOURCE_KEYWORD:\n+                    qualifier = parseResourceKeyword();\n+                    break;\n+                default:\n+                    Solution solution = recover(peek(), context, context, qualifierList);\n+\n+                    // If the parser recovered by inserting a token, then try to re-parse the same\n+                    // rule with the inserted token. This is done to pick the correct branch\n+                    // to continue the parsing.\n+                    if (solution.action == Action.REMOVE) {\n+                        return solution.recoveredNode;\n+                    }\n+\n+                    return parseFunctionQualifiers(solution.tokenKind, context, qualifierList);\n+            }\n+\n+            DiagnosticCode diagnosticCode = validateFunctionQualifier(qualifier, context, qualifierList);\n+            if (diagnosticCode != null) {\n+                // If the qualifier list is empty add invalid node as minutiae to the next token.\n+                if (qualifierList.size() == 0) {\n+                    addInvalidNodeToNextToken(qualifier, diagnosticCode, qualifier.toString().trim());\n+                } else {\n+                    //If the qualifier list is not empty add invalid node to the last node in the list.\n+                    updateLastNodeInListWithInvalidNode(qualifierList, qualifier, diagnosticCode);\n+                }\n+            } else {\n+                qualifierList.add(qualifier);\n+            }\n+            tokenKind = peek().kind;\n+        }\n+        return STNodeFactory.createNodeList(qualifierList);\n+    }\n+\n+    private boolean isEndOfFunctionQualifiers(SyntaxKind tokenKind) {\n+        switch (tokenKind) {\n+            case FUNCTION_KEYWORD:\n+            case EOF_TOKEN:\n+                return true;\n+            default:\n+                return false;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcff57f0f4ca24023848b210da3fbe9dbd129869"}, "originalPosition": 308}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTY2MTAx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#pullrequestreview-463966101", "createdAt": "2020-08-10T05:37:10Z", "commit": {"oid": "bcff57f0f4ca24023848b210da3fbe9dbd129869"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNTozNzoxMFrOG-B3rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNTozNzoxMFrOG-B3rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5NTUzNA==", "bodyText": "add a new line :)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#discussion_r467695534", "createdAt": "2020-08-10T05:37:10Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-parser/src/test/resources/declarations/object-type-def/object_type_def_source_41.bal", "diffHunk": "@@ -0,0 +1,14 @@\n+type foo object {\n+     remote transactional function foo(){\n+\n+     }\n+     remote function foo0(){\n+\n+     }\n+     transactional function foo1() {\n+\n+     }\n+     function foo2() {\n+\n+     }\n+};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcff57f0f4ca24023848b210da3fbe9dbd129869"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTY3Njc1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#pullrequestreview-463967675", "createdAt": "2020-08-10T05:44:10Z", "commit": {"oid": "bcff57f0f4ca24023848b210da3fbe9dbd129869"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNTo0NDoxMFrOG-B9Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNTo0NDoxMFrOG-B9Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5Njk2Nw==", "bodyText": "Shall we also modify return parseObjectMember(solution.tokenKind); beneath. Otherwise we'll be re-parsing with the wrong method I think.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#discussion_r467696967", "createdAt": "2020-08-10T05:44:10Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -5550,19 +5573,19 @@ private STNode parseObjectMember(SyntaxKind nextTokenKind, STNode metadata) {\n                 member = parseObjectMethodOrField(metadata, visibilityQualifier);\n                 break;\n             case REMOTE_KEYWORD:\n-                member = parseObjectMethodOrField(metadata, STNodeFactory.createEmptyNode());\n-                break;\n             case FUNCTION_KEYWORD:\n             case TRANSACTIONAL_KEYWORD:\n-                member = parseObjectMethod(metadata, STNodeFactory.createEmptyNode(), STNodeFactory.createEmptyNode());\n+            case RESOURCE_KEYWORD: // resource qualifier is not allowed but let it pass here and validate in\n+                // parseFunctionQualifiers method\n+                member = parseObjectMethod(metadata, new ArrayList<>());\n                 break;\n             default:\n                 if (isTypeStartingToken(nextTokenKind)) {\n                     member = parseObjectField(metadata, STNodeFactory.createEmptyNode());\n                     break;\n                 }\n \n-                Solution solution = recover(peek(), ParserRuleContext.OBJECT_MEMBER_WITHOUT_METADATA);\n+                Solution solution = recover(peek(), ParserRuleContext.OBJECT_MEMBER_WITHOUT_METADATA, metadata);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcff57f0f4ca24023848b210da3fbe9dbd129869"}, "originalPosition": 217}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1536b419dac0ba632398a51d5cb209ee5eb47367", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1536b419dac0ba632398a51d5cb209ee5eb47367", "committedDate": "2020-08-10T06:04:34Z", "message": "Undo unwanted file changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83d57e1662a02b209d65000ee00d4843a31c6c88", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/83d57e1662a02b209d65000ee00d4843a31c6c88", "committedDate": "2020-08-10T06:39:38Z", "message": "Update assert files."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTk2NzA0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#pullrequestreview-463996704", "createdAt": "2020-08-10T07:08:12Z", "commit": {"oid": "83d57e1662a02b209d65000ee00d4843a31c6c88"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99ff7c5dd1c976ded47baf6e68a67c978b5e5ac5", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/99ff7c5dd1c976ded47baf6e68a67c978b5e5ac5", "committedDate": "2020-08-10T09:41:42Z", "message": "Delete unwanted file added to the previous commits."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MTM3MTY3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#pullrequestreview-464137167", "createdAt": "2020-08-10T11:08:09Z", "commit": {"oid": "99ff7c5dd1c976ded47baf6e68a67c978b5e5ac5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMTowODowOVrOG-KNVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMTowODowOVrOG-KNVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgzMjE0OA==", "bodyText": "Can returning immediately be a problem?\neg:\ntransactional xyz resource function foo() {\n}\nHere xyz is an invalid token. After recovering from it, shouldn't the loop continue?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#discussion_r467832148", "createdAt": "2020-08-10T11:08:09Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -5636,6 +5662,97 @@ private STNode parseObjectMethodOrField(SyntaxKind nextTokenKind, SyntaxKind nex\n         return parseObjectMethodOrField(solution.tokenKind, nextTokenKind, metadata, visibilityQualifier);\n     }\n \n+    /**\n+     * Parse function qualifiers.\n+     *\n+     * @return Parsed node\n+     */\n+    private STNode parseFunctionQualifiers(ParserRuleContext context, List<STNode> qualifierList) {\n+        STToken nextToken = peek();\n+        return parseFunctionQualifiers(nextToken.kind, context, qualifierList);\n+    }\n+\n+    private STNode parseFunctionQualifiers(SyntaxKind tokenKind, ParserRuleContext context,\n+                                               List<STNode> qualifierList) {\n+        while (!isEndOfFunctionQualifiers(tokenKind)) {\n+            STNode qualifier;\n+            switch (tokenKind) {\n+                case REMOTE_KEYWORD:\n+                    qualifier = parseRemoteKeyword();\n+                    break;\n+                case TRANSACTIONAL_KEYWORD:\n+                    qualifier = parseTransactionalKeyword();\n+                    break;\n+                case RESOURCE_KEYWORD:\n+                    qualifier = parseResourceKeyword();\n+                    break;\n+                default:\n+                    Solution solution = recover(peek(), context, context, qualifierList);\n+\n+                    // If the parser recovered by inserting a token, then try to re-parse the same\n+                    // rule with the inserted token. This is done to pick the correct branch\n+                    // to continue the parsing.\n+                    if (solution.action == Action.REMOVE) {\n+                        return solution.recoveredNode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99ff7c5dd1c976ded47baf6e68a67c978b5e5ac5"}, "originalPosition": 291}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54dc59f91ca4264395b8b4cfa2468254dbc6d1d2", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/54dc59f91ca4264395b8b4cfa2468254dbc6d1d2", "committedDate": "2020-08-11T03:33:48Z", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "145830fd54f3daa54c63bb695fb8036dfd74f86f", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/145830fd54f3daa54c63bb695fb8036dfd74f86f", "committedDate": "2020-08-11T03:46:02Z", "message": "Update assert files."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7582397b8f33e7e1c9f4b2c1b790b8293eb25ff", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b7582397b8f33e7e1c9f4b2c1b790b8293eb25ff", "committedDate": "2020-08-11T04:11:56Z", "message": "Add missing files."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NzY5NDM3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25078#pullrequestreview-464769437", "createdAt": "2020-08-11T06:00:44Z", "commit": {"oid": "b7582397b8f33e7e1c9f4b2c1b790b8293eb25ff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4970, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}