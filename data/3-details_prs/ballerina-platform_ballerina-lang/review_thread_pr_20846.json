{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMjgwNjk0", "number": 20846, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwODo1MjowM1rODdmo9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOToxMTozOFrODdm_dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzY4MzcyOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/string/StringValueBasicsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwODo1MjowM1rOFmTPkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwODo1MjowM1rOFmTPkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcwNTQ4OA==", "bodyText": "We assert the length because that is the main difference from the old String. If we assert by value both old and new cases pass. Shall we return the length and assert?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20846#discussion_r375705488", "createdAt": "2020-02-06T08:52:03Z", "author": {"login": "riyafa"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/string/StringValueBasicsTest.java", "diffHunk": "@@ -69,6 +70,13 @@ public void testError() {\n         Assert.assertEquals(((BInteger) returns[0]).intValue(), 5);\n     }\n \n+    @Test\n+    public void testArrayStore() {\n+        BValue[] returns = BRunUtil.invoke(result, \"testArrayStore\");\n+        Assert.assertEquals(returns[0].getClass(), BValueArray.class);\n+        Assert.assertEquals(((BValueArray) returns[0]).getStringArray()[0], \"h\ud83d\ude00llo\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a28418ef44e9fa44a3444eae3b2f1b2ba8f30ad2"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzY4NDQ1OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/types/string/string-value-test.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwODo1MjoxOFrOFmTQAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwODo1MjoxOFrOFmTQAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcwNTYwMg==", "bodyText": "Shall we return the length?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20846#discussion_r375705602", "createdAt": "2020-02-06T08:52:18Z", "author": {"login": "riyafa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/types/string/string-value-test.bal", "diffHunk": "@@ -20,3 +20,9 @@ function testError() returns int {\n     error err = error(smiley);\n     return err.reason().length();\n }\n+\n+function testArrayStore() returns string[] {\n+    string[] arr = [];\n+    arr[0] = \"h\ud83d\ude00llo\";\n+    return arr;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a28418ef44e9fa44a3444eae3b2f1b2ba8f30ad2"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzY4NjYzOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/types/string/string-value-test.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwODo1MzowMlrOFmTRTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwODo1MzowMlrOFmTRTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcwNTkzNQ==", "bodyText": "Shall we add test for a multi element array also, just to be on the safe side?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20846#discussion_r375705935", "createdAt": "2020-02-06T08:53:02Z", "author": {"login": "riyafa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/types/string/string-value-test.bal", "diffHunk": "@@ -20,3 +20,9 @@ function testError() returns int {\n     error err = error(smiley);\n     return err.reason().length();\n }\n+\n+function testArrayStore() returns string[] {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a28418ef44e9fa44a3444eae3b2f1b2ba8f30ad2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzczMDAwOnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/StringUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOTowNzo0NFrOFmTsKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOTowNzo0NFrOFmTsKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcxMjgwOA==", "bodyText": "fromString is used to convert java string to ballerina. do we need a way to convert BString to BString?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20846#discussion_r375712808", "createdAt": "2020-02-06T09:07:44Z", "author": {"login": "manuranga"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/StringUtils.java", "diffHunk": "@@ -133,4 +133,8 @@ public static StringValue fromString(String s) {\n         return new NonBmpStringValue(s, highSurrogatesArr);\n     }\n \n+    public static BString fromString(BString s) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a28418ef44e9fa44a3444eae3b2f1b2ba8f30ad2"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzczNjUwOnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/BmpStringValue.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOToxMDowMVrOFmTwVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOToxMDowMVrOFmTwVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcxMzg3Nw==", "bodyText": "extra paran", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20846#discussion_r375713877", "createdAt": "2020-02-06T09:10:01Z", "author": {"login": "manuranga"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/values/BmpStringValue.java", "diffHunk": "@@ -46,9 +48,9 @@ public int length() {\n      }\n \n      @Override\n-     public StringValue concat(StringValue str) {\n+     public BString concat(BString str) {\n          if (str instanceof BmpStringValue) {\n-             return new BmpStringValue(this.value + ((BmpStringValue) str).value);\n+             return new BmpStringValue((this.value + ((BmpStringValue) str).value));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a28418ef44e9fa44a3444eae3b2f1b2ba8f30ad2"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzc0MTM1OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/javainterop/RefTypeTests.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwOToxMTozOFrOFmTzVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODowMzoxMVrOFm07Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcxNDY0NQ==", "bodyText": "need the long name ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20846#discussion_r375714645", "createdAt": "2020-02-06T09:11:38Z", "author": {"login": "manuranga"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/javainterop/RefTypeTests.java", "diffHunk": "@@ -388,7 +387,7 @@ public static HandleValue getHandle() {\n         return new HandleValue(m);\n     }\n \n-    public static StringValue useHandle(HandleValue h) {\n+    public static org.ballerinalang.jvm.values.api.BString useHandle(HandleValue h) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a28418ef44e9fa44a3444eae3b2f1b2ba8f30ad2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcyMDk0Nw==", "bodyText": "yes. org.ballerinalang.model.values.BString also imported here for assertions.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20846#discussion_r375720947", "createdAt": "2020-02-06T09:24:31Z", "author": {"login": "vinok88"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/javainterop/RefTypeTests.java", "diffHunk": "@@ -388,7 +387,7 @@ public static HandleValue getHandle() {\n         return new HandleValue(m);\n     }\n \n-    public static StringValue useHandle(HandleValue h) {\n+    public static org.ballerinalang.jvm.values.api.BString useHandle(HandleValue h) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcxNDY0NQ=="}, "originalCommit": {"oid": "a28418ef44e9fa44a3444eae3b2f1b2ba8f30ad2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI1NzMxMQ==", "bodyText": "got it.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20846#discussion_r376257311", "createdAt": "2020-02-07T08:03:11Z", "author": {"login": "manuranga"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/javainterop/RefTypeTests.java", "diffHunk": "@@ -388,7 +387,7 @@ public static HandleValue getHandle() {\n         return new HandleValue(m);\n     }\n \n-    public static StringValue useHandle(HandleValue h) {\n+    public static org.ballerinalang.jvm.values.api.BString useHandle(HandleValue h) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcxNDY0NQ=="}, "originalCommit": {"oid": "a28418ef44e9fa44a3444eae3b2f1b2ba8f30ad2"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1265, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}