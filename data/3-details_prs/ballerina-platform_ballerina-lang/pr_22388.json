{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2ODM3Nzgw", "number": 22388, "title": "Add subtyping feature and improvements to the Ballerina bindgen tool", "bodyText": "Purpose\nThis PR consists of the following improvements and issue fixes to the Ballerina bindgen tool.\nImprovements:\n\nProvide support for Java subtyping.\nAn improvement to the folder structure of the generated bindings.\nImprovements to error messages and information provided to the user.\n\nFixes:\n\nFixes an issue in the generation of child classes.\nFixes an issue that occurs while reading constants file when re-running the tool.\nFixes some issues related to type mappings.\n\nFixes #22089\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-01T08:26:26Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22388", "merged": true, "mergeCommit": {"oid": "e8641d33ed373c8a6fa1e00bceaf63d86ddb2877"}, "closed": true, "closedAt": "2020-04-06T14:13:47Z", "author": {"login": "IrushiL"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTS42nAH2gAyMzk2ODM3NzgwOmIwYWEwZDRmMThlYmNiMjAzMzBlZjM5YTI4YzhhYjA2ODM2MmQ3ZDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTd3NyAFqTM4NTkzMTE1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b0aa0d4f18ebcb20330ef39a28c8ab068362d7d7", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b0aa0d4f18ebcb20330ef39a28c8ab068362d7d7", "committedDate": "2020-04-01T07:51:02Z", "message": "Fix the issue with loading inner classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a401bc179fab4a2395e00031ab50ec00d457554c", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a401bc179fab4a2395e00031ab50ec00d457554c", "committedDate": "2020-04-01T07:51:02Z", "message": "Fix the issue with reading the constants file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16389dad7b0015eeb57898c11f85887a0be0b567", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/16389dad7b0015eeb57898c11f85887a0be0b567", "committedDate": "2020-04-01T07:51:02Z", "message": "Improve the file structure of generated bindings and error handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a3c2816f0eca0f1320cfb057de91d6d7f9c4ab1", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8a3c2816f0eca0f1320cfb057de91d6d7f9c4ab1", "committedDate": "2020-04-01T07:51:02Z", "message": "Add support for Java subtyping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df3cd77753c938a2222ff91d41362ffe4b1f8f59", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/df3cd77753c938a2222ff91d41362ffe4b1f8f59", "committedDate": "2020-04-01T07:51:02Z", "message": "Refactor the template logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4238788479caf53d5f12ae9a8a4d1607db800c2", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b4238788479caf53d5f12ae9a8a4d1607db800c2", "committedDate": "2020-04-01T07:51:02Z", "message": "Add object tags for all implemented interfaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "029b846fada3ad7e3e648955b3f5533c40672870", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/029b846fada3ad7e3e648955b3f5533c40672870", "committedDate": "2020-04-01T07:51:02Z", "message": "Fix the issue with getting string array from handle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0103bcbd423212962002b3d0fe661d0dd537a92a", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0103bcbd423212962002b3d0fe661d0dd537a92a", "committedDate": "2020-04-01T07:51:02Z", "message": "Fix issues related to type mappings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b89e7b682313f033f897911e8c8f479010f82c5", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6b89e7b682313f033f897911e8c8f479010f82c5", "committedDate": "2020-04-01T07:51:02Z", "message": "Refactor the code and template"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3cc49cfeb4ba7bce90e437970310f47973d2245", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c3cc49cfeb4ba7bce90e437970310f47973d2245", "committedDate": "2020-04-01T07:51:02Z", "message": "Fix a compilation issue in the generated template"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1db672531cdbda0e97b383774328a8b9ed37830c", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1db672531cdbda0e97b383774328a8b9ed37830c", "committedDate": "2020-04-01T08:11:06Z", "message": "Improve and refactor the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69df4eff4f02da2415a6ae4b76fa46bda4eba3fc", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/69df4eff4f02da2415a6ae4b76fa46bda4eba3fc", "committedDate": "2020-04-01T12:51:36Z", "message": "Add review changes to the code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NTcxMTUx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22388#pullrequestreview-385571151", "createdAt": "2020-04-01T13:14:08Z", "commit": {"oid": "69df4eff4f02da2415a6ae4b76fa46bda4eba3fc"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzoxNDowOFrOF-__cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzoxNDozMVrOF_AAdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYwNDQ2Ng==", "bodyText": "As a practice, we add @SInCE annotation. Shall we add that.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22388#discussion_r401604466", "createdAt": "2020-04-01T13:14:08Z", "author": {"login": "warunalakshitha"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/model/JMethod.java", "diffHunk": "@@ -0,0 +1,181 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.bindgen.model;\n+\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Parameter;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Locale;\n+\n+import static org.ballerinalang.bindgen.command.BindingsGenerator.getAllJavaClasses;\n+import static org.ballerinalang.bindgen.command.BindingsGenerator.setClassListForLooping;\n+import static org.ballerinalang.bindgen.utils.BindgenConstants.BALLERINA_RESERVED_WORDS;\n+import static org.ballerinalang.bindgen.utils.BindgenConstants.BALLERINA_STRING;\n+import static org.ballerinalang.bindgen.utils.BindgenConstants.BALLERINA_STRING_ARRAY;\n+import static org.ballerinalang.bindgen.utils.BindgenConstants.METHOD_INTEROP_TYPE;\n+import static org.ballerinalang.bindgen.utils.BindgenUtils.getBallerinaHandleType;\n+import static org.ballerinalang.bindgen.utils.BindgenUtils.getBallerinaParamType;\n+import static org.ballerinalang.bindgen.utils.BindgenUtils.isStaticMethod;\n+\n+/**\n+ * Class for storing details pertaining to a specific Java method used for Ballerina bridge code generation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69df4eff4f02da2415a6ae4b76fa46bda4eba3fc"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYwNDcyNA==", "bodyText": "@SInCE tag is missing.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22388#discussion_r401604724", "createdAt": "2020-04-01T13:14:31Z", "author": {"login": "warunalakshitha"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/model/JParameter.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.bindgen.model;\n+\n+import java.lang.reflect.Parameter;\n+\n+import static org.ballerinalang.bindgen.command.BindingsGenerator.getAllJavaClasses;\n+import static org.ballerinalang.bindgen.command.BindingsGenerator.setClassListForLooping;\n+import static org.ballerinalang.bindgen.utils.BindgenConstants.BALLERINA_STRING;\n+import static org.ballerinalang.bindgen.utils.BindgenConstants.BALLERINA_STRING_ARRAY;\n+import static org.ballerinalang.bindgen.utils.BindgenUtils.getBallerinaHandleType;\n+import static org.ballerinalang.bindgen.utils.BindgenUtils.getBallerinaParamType;\n+import static org.ballerinalang.bindgen.utils.BindgenUtils.getPrimitiveArrayType;\n+\n+/**\n+ * Class for storing specific parameter details of a Java method used for Ballerina bridge code generation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69df4eff4f02da2415a6ae4b76fa46bda4eba3fc"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02b4f79ed8e0561f91df20949a1f4d07d1e4d1b8", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/02b4f79ed8e0561f91df20949a1f4d07d1e4d1b8", "committedDate": "2020-04-01T13:27:52Z", "message": "Add the since annotation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NjE1NzAx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22388#pullrequestreview-385615701", "createdAt": "2020-04-01T14:01:57Z", "commit": {"oid": "02b4f79ed8e0561f91df20949a1f4d07d1e4d1b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1OTI0MTIx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22388#pullrequestreview-385924121", "createdAt": "2020-04-01T20:27:04Z", "commit": {"oid": "02b4f79ed8e0561f91df20949a1f4d07d1e4d1b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDoyNzowNVrOF_RWKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDoyNzowNVrOF_RWKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg4ODgwOQ==", "bodyText": "Assigned variables have never accessed?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22388#discussion_r401888809", "createdAt": "2020-04-01T20:27:05Z", "author": {"login": "pramodya1994"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/model/JClass.java", "diffHunk": "@@ -39,68 +38,66 @@\n \n /**\n  * Class for storing details pertaining to a specific Java class used for Ballerina bridge code generation.\n+ *\n+ * @since 1.2.0\n  */\n public class JClass {\n \n-    public String shortClassName;\n-    public String packageName;\n-\n     private String prefix;\n     private String className;\n+    private String packageName;\n+    private String shortClassName;\n \n-    private Boolean isInterface = false;\n-    private Boolean directClass = false;\n-    private Boolean isAbstractClass = false;\n-    private Boolean singleConstructor = false;\n-    private Boolean singleConstructorError = false;\n-\n-    private Set<Class> superClassObjects = new HashSet<>();\n+    private boolean isInterface = false;\n+    private boolean isDirectClass = false;\n+    private boolean isAbstract = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02b4f79ed8e0561f91df20949a1f4d07d1e4d1b8"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1OTI0NzE1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22388#pullrequestreview-385924715", "createdAt": "2020-04-01T20:28:03Z", "commit": {"oid": "02b4f79ed8e0561f91df20949a1f4d07d1e4d1b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDoyODowNFrOF_RYKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDoyODowNFrOF_RYKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg4OTMyMQ==", "bodyText": "This variable is assigned but never accessed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22388#discussion_r401889321", "createdAt": "2020-04-01T20:28:04Z", "author": {"login": "pramodya1994"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/model/JClass.java", "diffHunk": "@@ -39,68 +38,66 @@\n \n /**\n  * Class for storing details pertaining to a specific Java class used for Ballerina bridge code generation.\n+ *\n+ * @since 1.2.0\n  */\n public class JClass {\n \n-    public String shortClassName;\n-    public String packageName;\n-\n     private String prefix;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02b4f79ed8e0561f91df20949a1f4d07d1e4d1b8"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1OTI1MjQw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22388#pullrequestreview-385925240", "createdAt": "2020-04-01T20:28:54Z", "commit": {"oid": "02b4f79ed8e0561f91df20949a1f4d07d1e4d1b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDoyODo1NFrOF_RZzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDoyODo1NFrOF_RZzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg4OTc0Mg==", "bodyText": "Why this is empty?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22388#discussion_r401889742", "createdAt": "2020-04-01T20:28:54Z", "author": {"login": "pramodya1994"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/model/JClass.java", "diffHunk": "@@ -111,52 +108,66 @@ public JClass(Class c) {\n     }\n \n     private void populateConstructors(Constructor[] constructors) {\n-\n         int i = 1;\n         for (Constructor constructor : constructors) {\n             JConstructor jConstructor = new JConstructor(constructor);\n-            jConstructor.setConstructorName(\"new\" + this.shortClassName + i);\n-            this.constructorList.add(jConstructor);\n+            jConstructor.setConstructorName(\"new\" + shortClassName + i);\n+            constructorList.add(jConstructor);\n             i++;\n         }\n     }\n \n     private void populateInitFunctions() {\n-\n         int j = 1;\n-        for (JConstructor constructor : this.constructorList) {\n+        for (JConstructor constructor : constructorList) {\n             JConstructor newCons = null;\n             try {\n                 newCons = (JConstructor) constructor.clone();\n-            } catch (CloneNotSupportedException e) {\n-                errStream.println(e);\n+            } catch (CloneNotSupportedException ignore) {\n+\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02b4f79ed8e0561f91df20949a1f4d07d1e4d1b8"}, "originalPosition": 154}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1OTMwMzkw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22388#pullrequestreview-385930390", "createdAt": "2020-04-01T20:37:00Z", "commit": {"oid": "02b4f79ed8e0561f91df20949a1f4d07d1e4d1b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozNzowMFrOF_RqSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozNzowMFrOF_RqSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5Mzk2Mw==", "bodyText": "This method has used anywhere?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22388#discussion_r401893963", "createdAt": "2020-04-01T20:37:00Z", "author": {"login": "pramodya1994"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/utils/BindgenUtils.java", "diffHunk": "@@ -231,7 +301,6 @@ public static void createDirectory(String path) throws BindgenException {\n     }\n \n     public static Set<String> getClassNamesInJar(String jarPath) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02b4f79ed8e0561f91df20949a1f4d07d1e4d1b8"}, "originalPosition": 257}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1OTMxMTUx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22388#pullrequestreview-385931151", "createdAt": "2020-04-01T20:38:12Z", "commit": {"oid": "02b4f79ed8e0561f91df20949a1f4d07d1e4d1b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozODoxMlrOF_Rszw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozODoxMlrOF_Rszw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5NDYwNw==", "bodyText": "Have we used this method?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22388#discussion_r401894607", "createdAt": "2020-04-01T20:38:12Z", "author": {"login": "pramodya1994"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/utils/BindgenUtils.java", "diffHunk": "@@ -256,49 +325,41 @@ public static void createDirectory(String path) throws BindgenException {\n     }\n \n     public static boolean isPublicField(Field field) {\n-\n         int modifiers = field.getModifiers();\n         return Modifier.isPublic(modifiers);\n     }\n \n     public static boolean isPublicMethod(Method method) {\n-\n         int modifiers = method.getModifiers();\n         return Modifier.isPublic(modifiers);\n     }\n \n     public static boolean isPublicClass(Class javaClass) {\n-\n         int modifiers = javaClass.getModifiers();\n         return Modifier.isPublic(modifiers);\n     }\n \n     public static boolean isStaticField(Field field) {\n-\n         int modifiers = field.getModifiers();\n         return Modifier.isStatic(modifiers);\n     }\n \n     public static boolean isStaticMethod(Method method) {\n-\n         int modifiers = method.getModifiers();\n         return Modifier.isStatic(modifiers);\n     }\n \n     public static boolean isFinalField(Field field) {\n-\n         int modifiers = field.getModifiers();\n         return Modifier.isFinal(modifiers);\n     }\n \n     public static boolean isAbstractClass(Class javaClass) {\n-\n         int modifiers = javaClass.getModifiers();\n         return Modifier.isAbstract(modifiers);\n     }\n \n     public static String getModuleName(String jarPath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02b4f79ed8e0561f91df20949a1f4d07d1e4d1b8"}, "originalPosition": 307}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4131, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}