{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMwOTcwMTUy", "number": 23797, "title": "Implement Stream type descriptor for incremental parser", "bodyText": "Purpose\n\n$title\n\nFixes #23796\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-06-08T09:11:03Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23797", "merged": true, "mergeCommit": {"oid": "b0ccd640b4c9650460e91f266b873d8cf98d008c"}, "closed": true, "closedAt": "2020-06-09T10:21:49Z", "author": {"login": "dulvinw"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpNQcLAFqTQyNjA2NjMwOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpiZlvAFqTQyNzAwMDEwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MDY2MzA5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23797#pullrequestreview-426066309", "createdAt": "2020-06-08T09:39:17Z", "commit": {"oid": "40c18e04dc04a3362c9b11fb1eaff18261ec3977"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwOTozOToxN1rOGgWUCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwOTo0MzozMFrOGgWdwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU3MzE5NQ==", "bodyText": "do we need replaceAll()?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23797#discussion_r436573195", "createdAt": "2020-06-08T09:39:17Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -2278,6 +2313,14 @@ protected BLangNode transformSyntaxNode(Node node) {\n     }\n \n     // ------------------------------------------private methods--------------------------------------------------------\n+    BLangValueType addValueType(DiagnosticPos pos, String typeName) {\n+        BLangValueType typeNode = (BLangValueType) TreeBuilder.createValueTypeNode();\n+        typeNode.pos = pos;\n+        typeNode.typeKind = (TreeUtils.stringToTypeKind(typeName.replaceAll(\"\\\\s+\", \"\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40c18e04dc04a3362c9b11fb1eaff18261ec3977"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU3MzU1NA==", "bodyText": "Additional parenthesis", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23797#discussion_r436573554", "createdAt": "2020-06-08T09:39:56Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -2278,6 +2313,14 @@ protected BLangNode transformSyntaxNode(Node node) {\n     }\n \n     // ------------------------------------------private methods--------------------------------------------------------\n+    BLangValueType addValueType(DiagnosticPos pos, String typeName) {\n+        BLangValueType typeNode = (BLangValueType) TreeBuilder.createValueTypeNode();\n+        typeNode.pos = pos;\n+        typeNode.typeKind = (TreeUtils.stringToTypeKind(typeName.replaceAll(\"\\\\s+\", \"\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU3MzE5NQ=="}, "originalCommit": {"oid": "40c18e04dc04a3362c9b11fb1eaff18261ec3977"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU3NDQ3OA==", "bodyText": "Can't we directly use TypeKind.STREAM?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23797#discussion_r436574478", "createdAt": "2020-06-08T09:41:30Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -2237,6 +2240,38 @@ public BLangNode transform(RemoteMethodCallActionNode remoteMethodCallActionNode\n         return bLangActionInvocation;\n     }\n \n+    @Override\n+    public BLangNode transform(StreamTypeDescriptorNode streamTypeDescriptorNode) {\n+        String streamTypeName = \"stream\";\n+        String anyTypeName = \"any\";\n+        BLangType constraint, error = null;\n+        Optional<Node> paramsNode = streamTypeDescriptorNode.streamTypeParamsNode();\n+        boolean hasConstraint = paramsNode.isPresent();\n+        boolean hasError = hasConstraint && ((StreamTypeParamsNode) paramsNode.get()).rightTypeDescNode().isPresent();\n+        DiagnosticPos pos = getPosition(streamTypeDescriptorNode);\n+\n+        if (hasError) {\n+            error = (BLangType) ((StreamTypeParamsNode) paramsNode.get()).rightTypeDescNode().get().apply(this);\n+        }\n+        if (!hasConstraint) {\n+            constraint = addValueType(pos, anyTypeName);\n+        } else {\n+            constraint = (BLangType) ((StreamTypeParamsNode) paramsNode.get()).leftTypeDescNode().apply(this);\n+        }\n+\n+        BLangBuiltInRefTypeNode refType = (BLangBuiltInRefTypeNode) TreeBuilder.createBuiltInReferenceTypeNode();\n+        refType.typeKind = TreeUtils.stringToTypeKind(streamTypeName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40c18e04dc04a3362c9b11fb1eaff18261ec3977"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU3NTY4MQ==", "bodyText": "((StreamTypeParamsNode) paramsNode.get()) is called several times. consider extracting it to a variable.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23797#discussion_r436575681", "createdAt": "2020-06-08T09:43:30Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangNodeTransformer.java", "diffHunk": "@@ -2237,6 +2240,38 @@ public BLangNode transform(RemoteMethodCallActionNode remoteMethodCallActionNode\n         return bLangActionInvocation;\n     }\n \n+    @Override\n+    public BLangNode transform(StreamTypeDescriptorNode streamTypeDescriptorNode) {\n+        String streamTypeName = \"stream\";\n+        String anyTypeName = \"any\";\n+        BLangType constraint, error = null;\n+        Optional<Node> paramsNode = streamTypeDescriptorNode.streamTypeParamsNode();\n+        boolean hasConstraint = paramsNode.isPresent();\n+        boolean hasError = hasConstraint && ((StreamTypeParamsNode) paramsNode.get()).rightTypeDescNode().isPresent();\n+        DiagnosticPos pos = getPosition(streamTypeDescriptorNode);\n+\n+        if (hasError) {\n+            error = (BLangType) ((StreamTypeParamsNode) paramsNode.get()).rightTypeDescNode().get().apply(this);\n+        }\n+        if (!hasConstraint) {\n+            constraint = addValueType(pos, anyTypeName);\n+        } else {\n+            constraint = (BLangType) ((StreamTypeParamsNode) paramsNode.get()).leftTypeDescNode().apply(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40c18e04dc04a3362c9b11fb1eaff18261ec3977"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1eae1809fad8431cf1cb04a7ddd1fd94cd11382e", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1eae1809fad8431cf1cb04a7ddd1fd94cd11382e", "committedDate": "2020-06-09T04:47:13Z", "message": "Fix syntax-tree-descriptor json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa1f4ed320cf62f3cb48a5cbfe786eedf94d65d2", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fa1f4ed320cf62f3cb48a5cbfe786eedf94d65d2", "committedDate": "2020-06-09T04:47:13Z", "message": "Implement StreamTypeDescriptorNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71d193d105fc57d3f73f195bc5e2822516d35674", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/71d193d105fc57d3f73f195bc5e2822516d35674", "committedDate": "2020-06-09T04:47:13Z", "message": "Review Suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9709f1ff7cd236c7078c20932b587b6a19943aa7", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9709f1ff7cd236c7078c20932b587b6a19943aa7", "committedDate": "2020-06-09T04:26:33Z", "message": "Review Suggestions"}, "afterCommit": {"oid": "71d193d105fc57d3f73f195bc5e2822516d35674", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/71d193d105fc57d3f73f195bc5e2822516d35674", "committedDate": "2020-06-09T04:47:13Z", "message": "Review Suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MDAwMTA3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23797#pullrequestreview-427000107", "createdAt": "2020-06-09T10:21:42Z", "commit": {"oid": "71d193d105fc57d3f73f195bc5e2822516d35674"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4416, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}