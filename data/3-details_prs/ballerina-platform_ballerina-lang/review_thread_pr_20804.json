{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5MDQyMDMx", "number": 20804, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDo0NDo1MVrODdo10Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNjoyOTo0MlrODeV9WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNDA0NDMzOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDo0NDo1MVrOFmWsSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDo0NDo1MVrOFmWsSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc2MTk5NQ==", "bodyText": "already processed wording does not specifically say that the response is reused. Shall we rephrase it?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String errorMessage = \"Couldn't complete the outbound response which has been already processed.\";\n          \n          \n            \n                        String errorMessage = \"Couldn't complete the respond operation as the response has been already used.\";", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#discussion_r375761995", "createdAt": "2020-02-06T10:44:51Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -61,8 +62,18 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n         HttpCarbonMessage inboundRequestMsg = HttpUtil.getCarbonMsg(connectionObj, null);\n         Strand strand = Scheduler.getStrand();\n         DataContext dataContext = new DataContext(strand, new NonBlockingCallback(strand), inboundRequestMsg);\n-        HttpCarbonMessage outboundResponseMsg = HttpUtil\n-                .getCarbonMsg(outboundResponseObj, HttpUtil.createHttpCarbonMessage(false));\n+        HttpCarbonMessage outboundResponseMsg;\n+        if (outboundResponseObj.get(RESPONSE_CACHE_CONTROL_FIELD) == null && outboundResponseObj.\n+                getNativeData(HttpConstants.IS_RESPONSE_PROCESSED) != null) {\n+            String errorMessage = \"Couldn't complete the outbound response which has been already processed.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54844221207308cadde865e72823b899d71b1f7"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNDA1MDEyOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDo0NjozOVrOFmWv4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDo0NjozOVrOFmWv4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc2MjkxNA==", "bodyText": "Shall we move this conditional check to a smaller method which has a descriptive method name? So that code will be readable", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#discussion_r375762914", "createdAt": "2020-02-06T10:46:39Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -61,8 +62,18 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n         HttpCarbonMessage inboundRequestMsg = HttpUtil.getCarbonMsg(connectionObj, null);\n         Strand strand = Scheduler.getStrand();\n         DataContext dataContext = new DataContext(strand, new NonBlockingCallback(strand), inboundRequestMsg);\n-        HttpCarbonMessage outboundResponseMsg = HttpUtil\n-                .getCarbonMsg(outboundResponseObj, HttpUtil.createHttpCarbonMessage(false));\n+        HttpCarbonMessage outboundResponseMsg;\n+        if (outboundResponseObj.get(RESPONSE_CACHE_CONTROL_FIELD) == null && outboundResponseObj.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54844221207308cadde865e72823b899d71b1f7"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNDA1NDYxOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDo0ODowN1rOFmWyng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDo0ODowN1rOFmWyng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc2MzYxNA==", "bodyText": "Shall we remove this object declaration?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#discussion_r375763614", "createdAt": "2020-02-06T10:48:07Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -61,8 +62,18 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n         HttpCarbonMessage inboundRequestMsg = HttpUtil.getCarbonMsg(connectionObj, null);\n         Strand strand = Scheduler.getStrand();\n         DataContext dataContext = new DataContext(strand, new NonBlockingCallback(strand), inboundRequestMsg);\n-        HttpCarbonMessage outboundResponseMsg = HttpUtil\n-                .getCarbonMsg(outboundResponseObj, HttpUtil.createHttpCarbonMessage(false));\n+        HttpCarbonMessage outboundResponseMsg;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54844221207308cadde865e72823b899d71b1f7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNDA1NTY2OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDo0ODoyMFrOFmWzPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDo0ODoyMFrOFmWzPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc2Mzc3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    outboundResponseMsg = HttpUtil.getCarbonMsg(outboundResponseObj, HttpUtil.\n          \n          \n            \n                    HttpCarbonMessage outboundResponseMsg = HttpUtil.getCarbonMsg(outboundResponseObj, HttpUtil.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#discussion_r375763774", "createdAt": "2020-02-06T10:48:20Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -61,8 +62,18 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n         HttpCarbonMessage inboundRequestMsg = HttpUtil.getCarbonMsg(connectionObj, null);\n         Strand strand = Scheduler.getStrand();\n         DataContext dataContext = new DataContext(strand, new NonBlockingCallback(strand), inboundRequestMsg);\n-        HttpCarbonMessage outboundResponseMsg = HttpUtil\n-                .getCarbonMsg(outboundResponseObj, HttpUtil.createHttpCarbonMessage(false));\n+        HttpCarbonMessage outboundResponseMsg;\n+        if (outboundResponseObj.get(RESPONSE_CACHE_CONTROL_FIELD) == null && outboundResponseObj.\n+                getNativeData(HttpConstants.IS_RESPONSE_PROCESSED) != null) {\n+            String errorMessage = \"Couldn't complete the outbound response which has been already processed.\";\n+            HttpUtil.sendOutboundResponse(inboundRequestMsg, HttpUtil.createErrorMessage(errorMessage, 500));\n+            unBlockStrand(strand);\n+            log.debug(errorMessage);\n+            return HttpUtil.createHttpError(errorMessage, HttpErrorType.GENERIC_LISTENER_ERROR);\n+        }\n+        outboundResponseObj.addNativeData(HttpConstants.IS_RESPONSE_PROCESSED, true);\n+        outboundResponseMsg = HttpUtil.getCarbonMsg(outboundResponseObj, HttpUtil.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54844221207308cadde865e72823b899d71b1f7"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNDA2OTgxOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/HttpConstants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDo1Mjo1MVrOFmW7xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMDo1Mjo1MVrOFmW7xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc2NTk1OQ==", "bodyText": "Shall we rephrase this as well?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String IS_RESPONSE_PROCESSED = \"isResponseProcessed\";\n          \n          \n            \n                public static final String IS_DIRTY_RESPONSE = \"isDirtyProcessed\";", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#discussion_r375765959", "createdAt": "2020-02-06T10:52:51Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/HttpConstants.java", "diffHunk": "@@ -138,6 +138,7 @@\n     public static final String ANNOTATION_METHOD_OPTIONS = HTTP_METHOD_OPTIONS;\n     public static final String ANN_NAME_PARAM_ORDER_CONFIG = \"ParamOrderConfig\";\n     public static final String ANN_FIELD_PATH_PARAM_ORDER = \"pathParamOrder\";\n+    public static final String IS_RESPONSE_PROCESSED = \"isResponseProcessed\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54844221207308cadde865e72823b899d71b1f7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTQyNTM1OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/HttpConstants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNjoyMTo0NVrOFnbKNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNjoyMTo0NVrOFnbKNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4Mzc2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String IS_DIRTY_RESPONSE = \"isDirtyProcessed\";\n          \n          \n            \n                public static final String DIRTY_RESPONSE = \"dirtyResponse\";", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#discussion_r376883764", "createdAt": "2020-02-10T06:21:45Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/HttpConstants.java", "diffHunk": "@@ -138,6 +138,7 @@\n     public static final String ANNOTATION_METHOD_OPTIONS = HTTP_METHOD_OPTIONS;\n     public static final String ANN_NAME_PARAM_ORDER_CONFIG = \"ParamOrderConfig\";\n     public static final String ANN_FIELD_PATH_PARAM_ORDER = \"pathParamOrder\";\n+    public static final String IS_DIRTY_RESPONSE = \"isDirtyProcessed\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "432e71d87baf6831e22c40e21ff02ce4167674ba"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTQzNjQxOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/sample/HTTPCallerActionsTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNjoyOTo0MlrOFnbQkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNjoyOTo0MlrOFnbQkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4NTM5NQ==", "bodyText": "Shall we add another test case to check the returned error?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20804#discussion_r376885395", "createdAt": "2020-02-10T06:29:42Z", "author": {"login": "chamil321"}, "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/sample/HTTPCallerActionsTestCase.java", "diffHunk": "@@ -71,4 +71,14 @@ public void testNonBlockingRedirectAction() throws IOException {\n     public void testExecutionAfterRedirectAction() throws BallerinaTestException {\n         postRedirectLogLeecher.waitForText(LOG_LEECHER_TIMEOUT);\n     }\n+\n+    @Test\n+    public void testDirtyResponse() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "432e71d87baf6831e22c40e21ff02ce4167674ba"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1255, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}