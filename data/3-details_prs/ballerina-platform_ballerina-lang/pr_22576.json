{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxODUyMTY4", "number": 22576, "title": "Fix API docs in OAuth2 module", "bodyText": "Purpose\n$subject\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-10T10:21:55Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576", "merged": true, "mergeCommit": {"oid": "d237aecdc2f4aa1f0d17039d1dd4695d466d95ac"}, "closed": true, "closedAt": "2020-04-11T12:59:51Z", "author": {"login": "ldclakmal"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcV66PaAH2gAyNDAxODUyMTY4OmY2NzFmNWI1MzQwZDFlNzcxYjIyNTZkNGU3OTc3MmJhN2QzNzA2NTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWku1KgFqTM5MTc2MTg1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f671f5b5340d1e771b2256d4e79772ba7d370655", "author": {"user": {"login": "ldclakmal", "name": "Chanaka Lakmal"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f671f5b5340d1e771b2256d4e79772ba7d370655", "committedDate": "2020-04-09T11:36:36Z", "message": "Update api-docs of oauth2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "410940e25b96c475ea415f5f93312bb2aaf0e1ab", "author": {"user": {"login": "ldclakmal", "name": "Chanaka Lakmal"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/410940e25b96c475ea415f5f93312bb2aaf0e1ab", "committedDate": "2020-04-09T16:10:45Z", "message": "Update module.md of oauth2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16", "author": {"user": {"login": "ldclakmal", "name": "Chanaka Lakmal"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/df47f9608003351cea06fd7a63eee997b6353f16", "committedDate": "2020-04-10T10:20:45Z", "message": "Add code-snippet for objects"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMzc2Njgw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#pullrequestreview-391376680", "createdAt": "2020-04-10T10:27:18Z", "commit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "state": "COMMENTED", "comments": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDoyNzoxOFrOGD3BWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozNDo0MFrOGD3KBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMDM3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This module provides an inbound OAuth2 authentication provider which can be used to authenticate the provided credentials against an introspection endpoint, and an outbound OAuth2 authentication provider which can be used to authenticate with an external endpoint.\n          \n          \n            \n            This module provides an inbound OAuth2 authentication provider, which can be used to authenticate the provided credentials against an introspection endpoint and an outbound OAuth2 authentication provider, which can be used to authenticate an external endpoint.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406700377", "createdAt": "2020-04-10T10:27:18Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/Module.md", "diffHunk": "@@ -1,11 +1,8 @@\n-## Module Overview\n-\n-This module provides an inbound and outbound OAuth2 authentication provider, which can be used to authenticate the provided credentials against an introspection endpoint and authenticate with an external endpoint.\n+This module provides an inbound OAuth2 authentication provider which can be used to authenticate the provided credentials against an introspection endpoint, and an outbound OAuth2 authentication provider which can be used to authenticate with an external endpoint.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMDQ1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The `oauth2:InboundOAuth2Provider` is an implementation of the `auth:InboundAuthProvider` interface. This calls an introspection endpoint, validate the token, and performs authentication and authorization.\n          \n          \n            \n            The `oauth2:InboundOAuth2Provider` is an implementation of the `auth:InboundAuthProvider` interface. This calls an introspection endpoint, validates the token, and performs authentication and authorization.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406700458", "createdAt": "2020-04-10T10:27:33Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/Module.md", "diffHunk": "@@ -1,11 +1,8 @@\n-## Module Overview\n-\n-This module provides an inbound and outbound OAuth2 authentication provider, which can be used to authenticate the provided credentials against an introspection endpoint and authenticate with an external endpoint.\n+This module provides an inbound OAuth2 authentication provider which can be used to authenticate the provided credentials against an introspection endpoint, and an outbound OAuth2 authentication provider which can be used to authenticate with an external endpoint.\n \n ### Inbound OAuth2 Provider\n \n-The `oauth2:InboundOAuth2Provider` is an implementation of the `auth:InboundAuthProvider` interface. This calls an\n- introspection endpoint, validate the token, and performs authentication and authorization.\n+The `oauth2:InboundOAuth2Provider` is an implementation of the `auth:InboundAuthProvider` interface. This calls an introspection endpoint, validate the token, and performs authentication and authorization.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMDYzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Authenticates provider OAuth2 tokens with introspection endpoint.\n          \n          \n            \n            # Authenticates provider OAuth2 tokens with an introspection endpoint.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406700632", "createdAt": "2020-04-10T10:28:05Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/inbound_oauth2_provider.bal", "diffHunk": "@@ -37,18 +37,21 @@ public type InboundOAuth2Provider object {\n \n     # Provides authentication based on the provided introspection configuration.\n     #\n-    # + config - OAuth2 introspection configurations\n+    # + config - OAuth2 introspection server configurations\n     public function __init(IntrospectionServerConfig config) {\n         self.tokenTypeHint = config?.tokenTypeHint;\n         self.introspectionClient = new(config.url, config.clientConfig);\n         self.inboundOAuth2Cache = config?.oauth2Cache;\n         self.defaultTokenExpTimeInSeconds = config.defaultTokenExpTimeInSeconds;\n     }\n \n-    # Attempts to authenticate with credential.\n-    #\n-    # + credential - Credential to be authenticated\n-    # + return - `true` if authentication is successful, otherwise `false` or `auth:Error` if an error occurred\n+# Authenticates provider OAuth2 tokens with introspection endpoint.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMDY2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - `true` if authentication is successful, otherwise `false` or `auth:Error` if an error occurred\n          \n          \n            \n            # + return - `true` if authentication is successful, otherwise `false`, or else an `auth:Error` if an error occurred", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406700669", "createdAt": "2020-04-10T10:28:16Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/inbound_oauth2_provider.bal", "diffHunk": "@@ -37,18 +37,21 @@ public type InboundOAuth2Provider object {\n \n     # Provides authentication based on the provided introspection configuration.\n     #\n-    # + config - OAuth2 introspection configurations\n+    # + config - OAuth2 introspection server configurations\n     public function __init(IntrospectionServerConfig config) {\n         self.tokenTypeHint = config?.tokenTypeHint;\n         self.introspectionClient = new(config.url, config.clientConfig);\n         self.inboundOAuth2Cache = config?.oauth2Cache;\n         self.defaultTokenExpTimeInSeconds = config.defaultTokenExpTimeInSeconds;\n     }\n \n-    # Attempts to authenticate with credential.\n-    #\n-    # + credential - Credential to be authenticated\n-    # + return - `true` if authentication is successful, otherwise `false` or `auth:Error` if an error occurred\n+# Authenticates provider OAuth2 tokens with introspection endpoint.\n+# ```ballerina\n+# boolean|auth:Error result = inboundOAuth2Provider.authenticate(\"<credential>\");\n+# ```\n+#\n+# + credential - OAuth2 token to be authenticated\n+# + return - `true` if authentication is successful, otherwise `false` or `auth:Error` if an error occurred", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMDgxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Log and prepare `error` as a `oauth2:Error`.\n          \n          \n            \n            # Log and prepare the `error` as an `oauth2:Error`.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406700818", "createdAt": "2020-04-10T10:28:48Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/oauth2_errors.bal", "diffHunk": "@@ -32,7 +32,7 @@ public const OAUTH2_ERROR = \"{ballerina/oauth2}Error\";\n # Represents the OAuth2 error type with details.\n public type Error error<OAUTH2_ERROR, Detail>;\n \n-# Log and prepare `error` as a `Error`.\n+# Log and prepare `error` as a `oauth2:Error`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMDg4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents outbound OAuth2 provider, which generates OAtuh2 tokens.\n          \n          \n            \n            # Represents the outbound OAuth2 provider, which generates OAtuh2 tokens.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406700883", "createdAt": "2020-04-10T10:28:57Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -24,7 +24,7 @@ import ballerina/time;\n # Represents the grant type configs supported for OAuth2.\n type GrantTypeConfig ClientCredentialsGrantConfig|PasswordGrantConfig|DirectTokenConfig;\n \n-# Represents outbound OAuth2 provider.\n+# Represents outbound OAuth2 provider, which generates OAtuh2 tokens.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMDk0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Generate token for OAuth2 authentication.\n          \n          \n            \n            # Generate a token for OAuth2 authentication.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406700945", "createdAt": "2020-04-10T10:29:06Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -47,9 +47,12 @@ public type OutboundOAuth2Provider object {\n         };\n     }\n \n-    # Generate token for OAuth2 authentication.\n-    #\n-    # + return - Generated token or `auth:Error` if an error occurred\n+# Generate token for OAuth2 authentication.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTA4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Generated `string` token or `auth:Error` if an error occurred\n          \n          \n            \n            # + return - Generated `string` token or `auth:Error` if an error occurred\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format of the return statement description.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701082", "createdAt": "2020-04-10T10:29:35Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -47,9 +47,12 @@ public type OutboundOAuth2Provider object {\n         };\n     }\n \n-    # Generate token for OAuth2 authentication.\n-    #\n-    # + return - Generated token or `auth:Error` if an error occurred\n+# Generate token for OAuth2 authentication.\n+# ```ballerina\n+# string:auth:Error token = outboundOAuth2Provider.generateToken();\n+# ```\n+#\n+# + return - Generated `string` token or `auth:Error` if an error occurred", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTE0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + data - Map of data which is extracted from the HTTP response\n          \n          \n            \n            # + data - Map of data, which is extracted from the HTTP response", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701148", "createdAt": "2020-04-10T10:29:45Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -71,10 +74,14 @@ public type OutboundOAuth2Provider object {\n         }\n     }\n \n-    # Inspect the incoming data and generate the token for OAuth2 authentication.\n-    #\n-    # + data - Map of data which is extracted from the HTTP response\n-    # + return - String token, or `auth:Error` occurred when generating token or `()` if nothing to be returned\n+# Inspect the incoming data and generate the token for OAuth2 authentication.\n+# ```ballerina\n+# string:auth:Error? token = outboundOAuth2Provider.inspect(data);\n+# ```\n+#\n+# + data - Map of data which is extracted from the HTTP response", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTI1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Generated `string` token, or `auth:Error` occurred when generating token or `()` if nothing to be\n          \n          \n            \n            # + return - Generated `string` token, or `auth:Error` occurred when generating token or `()` if nothing to be\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701256", "createdAt": "2020-04-10T10:30:03Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -71,10 +74,14 @@ public type OutboundOAuth2Provider object {\n         }\n     }\n \n-    # Inspect the incoming data and generate the token for OAuth2 authentication.\n-    #\n-    # + data - Map of data which is extracted from the HTTP response\n-    # + return - String token, or `auth:Error` occurred when generating token or `()` if nothing to be returned\n+# Inspect the incoming data and generate the token for OAuth2 authentication.\n+# ```ballerina\n+# string:auth:Error? token = outboundOAuth2Provider.inspect(data);\n+# ```\n+#\n+# + data - Map of data which is extracted from the HTTP response\n+# + return - Generated `string` token, or `auth:Error` occurred when generating token or `()` if nothing to be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTMyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The data structure which is used to configue OAuth2 client credentials grant type.\n          \n          \n            \n            # The data structure, which is used to configure the OAuth2 client credentials grant type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701320", "createdAt": "2020-04-10T10:30:17Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -93,16 +100,16 @@ public type OutboundOAuth2Provider object {\n     }\n };\n \n-# The `ClientCredentialsGrantConfig` record can be used to configue OAuth2 client credentials grant type.\n+# The data structure which is used to configue OAuth2 client credentials grant type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTM2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint\n          \n          \n            \n            # + credentialBearer - Bearer of authentication credentials, which are sent to the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701363", "createdAt": "2020-04-10T10:30:27Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -93,16 +100,16 @@ public type OutboundOAuth2Provider object {\n     }\n };\n \n-# The `ClientCredentialsGrantConfig` record can be used to configue OAuth2 client credentials grant type.\n+# The data structure which is used to configue OAuth2 client credentials grant type.\n #\n # + tokenUrl - Token URL for the authorization endpoint\n # + clientId - Client ID for the client credentials grant authentication\n # + clientSecret - Client secret for the client credentials grant authentication\n-# + scopes - Scope of the access request\n+# + scopes - Scope(s) of the access request\n # + clockSkewInSeconds - Clock skew in seconds\n # + retryRequest - Retry the request if the initial request returns a 401 response\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTM5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + clientConfig - HTTP client configurations which is used to call the authorization endpoint\n          \n          \n            \n            # + clientConfig - HTTP client configurations, which are used to call the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701395", "createdAt": "2020-04-10T10:30:37Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -93,16 +100,16 @@ public type OutboundOAuth2Provider object {\n     }\n };\n \n-# The `ClientCredentialsGrantConfig` record can be used to configue OAuth2 client credentials grant type.\n+# The data structure which is used to configue OAuth2 client credentials grant type.\n #\n # + tokenUrl - Token URL for the authorization endpoint\n # + clientId - Client ID for the client credentials grant authentication\n # + clientSecret - Client secret for the client credentials grant authentication\n-# + scopes - Scope of the access request\n+# + scopes - Scope(s) of the access request\n # + clockSkewInSeconds - Clock skew in seconds\n # + retryRequest - Retry the request if the initial request returns a 401 response\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint\n+# + clientConfig - HTTP client configurations which is used to call the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTQyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The data structure which is used to configue OAuth2 password grant type.\n          \n          \n            \n            # The data structure, which is used to configue OAuth2 password grant type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701429", "createdAt": "2020-04-10T10:30:45Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -114,19 +121,19 @@ public type ClientCredentialsGrantConfig record {|\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `PasswordGrantConfig` record can be used to configue OAuth2 password grant type\n+# The data structure which is used to configue OAuth2 password grant type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTQ3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint\n          \n          \n            \n            # + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701473", "createdAt": "2020-04-10T10:30:56Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -114,19 +121,19 @@ public type ClientCredentialsGrantConfig record {|\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `PasswordGrantConfig` record can be used to configue OAuth2 password grant type\n+# The data structure which is used to configue OAuth2 password grant type.\n #\n # + tokenUrl - Token URL for the authorization endpoint\n # + username - Username for password grant authentication\n # + password - Password for password grant authentication\n # + clientId - Client ID for password grant authentication\n # + clientSecret - Client secret for password grant authentication\n-# + scopes - Scope of the access request\n+# + scopes - Scope(s) of the access request\n # + refreshConfig - Configurations for refreshing the access token\n # + clockSkewInSeconds - Clock skew in seconds\n # + retryRequest - Retry the request if the initial request returns a 401 response\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTUyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + clientConfig - HTTP client configurations which is used to call the authorization endpoint\n          \n          \n            \n            # + clientConfig - HTTP client configurations, which are used to call the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701522", "createdAt": "2020-04-10T10:31:06Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -114,19 +121,19 @@ public type ClientCredentialsGrantConfig record {|\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `PasswordGrantConfig` record can be used to configue OAuth2 password grant type\n+# The data structure which is used to configue OAuth2 password grant type.\n #\n # + tokenUrl - Token URL for the authorization endpoint\n # + username - Username for password grant authentication\n # + password - Password for password grant authentication\n # + clientId - Client ID for password grant authentication\n # + clientSecret - Client secret for password grant authentication\n-# + scopes - Scope of the access request\n+# + scopes - Scope(s) of the access request\n # + refreshConfig - Configurations for refreshing the access token\n # + clockSkewInSeconds - Clock skew in seconds\n # + retryRequest - Retry the request if the initial request returns a 401 response\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint\n+# + clientConfig - HTTP client configurations which is used to call the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTU1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The data structure which is used to configure OAuth2 access token directly.\n          \n          \n            \n            # The data structure, which is used to configure OAuth2 access token directly.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701558", "createdAt": "2020-04-10T10:31:13Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -141,13 +148,13 @@ public type PasswordGrantConfig record {|\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `DirectTokenConfig` record configures the access token directly.\n+# The data structure which is used to configure OAuth2 access token directly.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTU5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint\n          \n          \n            \n            # + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701594", "createdAt": "2020-04-10T10:31:25Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -141,13 +148,13 @@ public type PasswordGrantConfig record {|\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `DirectTokenConfig` record configures the access token directly.\n+# The data structure which is used to configure OAuth2 access token directly.\n #\n # + accessToken - Access token for the authorization endpoint\n # + refreshConfig - Configurations for refreshing the access token\n # + clockSkewInSeconds - Clock skew in seconds\n # + retryRequest - Retry the request if the initial request returns a 401 response\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n+# + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTY0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The data structure which can be used to pass the configurations for refreshing the access token of\n          \n          \n            \n            # The data structure, which can be used to pass the configurations for refreshing the access token of", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701648", "createdAt": "2020-04-10T10:31:37Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -156,29 +163,29 @@ public type DirectTokenConfig record {|\n     http:CredentialBearer credentialBearer = http:AUTH_HEADER_BEARER;\n |};\n \n-# The `RefreshConfig` record can be used to pass the configurations for refreshing the access token of password grant type.\n+# The data structure which can be used to pass the configurations for refreshing the access token of", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTcxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # password grant type.\n          \n          \n            \n            # the password grant type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701712", "createdAt": "2020-04-10T10:31:49Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -156,29 +163,29 @@ public type DirectTokenConfig record {|\n     http:CredentialBearer credentialBearer = http:AUTH_HEADER_BEARER;\n |};\n \n-# The `RefreshConfig` record can be used to pass the configurations for refreshing the access token of password grant type.\n+# The data structure which can be used to pass the configurations for refreshing the access token of\n+# password grant type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTc2Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint\n          \n          \n            \n            # + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701767", "createdAt": "2020-04-10T10:32:00Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -156,29 +163,29 @@ public type DirectTokenConfig record {|\n     http:CredentialBearer credentialBearer = http:AUTH_HEADER_BEARER;\n |};\n \n-# The `RefreshConfig` record can be used to pass the configurations for refreshing the access token of password grant type.\n+# The data structure which can be used to pass the configurations for refreshing the access token of\n+# password grant type.\n #\n # + refreshUrl - Refresh token URL for the refresh token server\n-# + scopes - Scope of the access request\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + scopes - Scope(s) of the access request\n+# + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTgxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + clientConfig - HTTP client configurations which is used to call the authorization endpoint\n          \n          \n            \n            # + clientConfig - HTTP client configurations, which are used to call the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701812", "createdAt": "2020-04-10T10:32:12Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -156,29 +163,29 @@ public type DirectTokenConfig record {|\n     http:CredentialBearer credentialBearer = http:AUTH_HEADER_BEARER;\n |};\n \n-# The `RefreshConfig` record can be used to pass the configurations for refreshing the access token of password grant type.\n+# The data structure which can be used to pass the configurations for refreshing the access token of\n+# password grant type.\n #\n # + refreshUrl - Refresh token URL for the refresh token server\n-# + scopes - Scope of the access request\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + scopes - Scope(s) of the access request\n+# + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint\n+# + clientConfig - HTTP client configurations which is used to call the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTg3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The data structure which can be used pass the configurations for refreshing the access token directly.\n          \n          \n            \n            # The data structure, which can be used to pass the configurations for refreshing the access token directly.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701879", "createdAt": "2020-04-10T10:32:28Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -156,29 +163,29 @@ public type DirectTokenConfig record {|\n     http:CredentialBearer credentialBearer = http:AUTH_HEADER_BEARER;\n |};\n \n-# The `RefreshConfig` record can be used to pass the configurations for refreshing the access token of password grant type.\n+# The data structure which can be used to pass the configurations for refreshing the access token of\n+# password grant type.\n #\n # + refreshUrl - Refresh token URL for the refresh token server\n-# + scopes - Scope of the access request\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + scopes - Scope(s) of the access request\n+# + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint\n+# + clientConfig - HTTP client configurations which is used to call the authorization endpoint\n public type RefreshConfig record {|\n     string refreshUrl;\n     string[] scopes?;\n     http:CredentialBearer credentialBearer = http:AUTH_HEADER_BEARER;\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `DirectTokenRefreshConfig` record passes the configurations for refreshing the access token for\n-# the grant type of the direct token grant type.\n+# The data structure which can be used pass the configurations for refreshing the access token directly.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTkyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint\n          \n          \n            \n            # + credentialBearer - Bearer of authentication credentials, which are sent to the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701923", "createdAt": "2020-04-10T10:32:37Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -156,29 +163,29 @@ public type DirectTokenConfig record {|\n     http:CredentialBearer credentialBearer = http:AUTH_HEADER_BEARER;\n |};\n \n-# The `RefreshConfig` record can be used to pass the configurations for refreshing the access token of password grant type.\n+# The data structure which can be used to pass the configurations for refreshing the access token of\n+# password grant type.\n #\n # + refreshUrl - Refresh token URL for the refresh token server\n-# + scopes - Scope of the access request\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + scopes - Scope(s) of the access request\n+# + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint\n+# + clientConfig - HTTP client configurations which is used to call the authorization endpoint\n public type RefreshConfig record {|\n     string refreshUrl;\n     string[] scopes?;\n     http:CredentialBearer credentialBearer = http:AUTH_HEADER_BEARER;\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `DirectTokenRefreshConfig` record passes the configurations for refreshing the access token for\n-# the grant type of the direct token grant type.\n+# The data structure which can be used pass the configurations for refreshing the access token directly.\n #\n # + refreshUrl - Refresh token URL for the refresh token server\n # + refreshToken - Refresh token for the refresh token server\n # + clientId - Client ID for authentication with the authorization endpoint\n # + clientSecret - Client secret for authentication with the authorization endpoint\n-# + scopes - Scope of the access request\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + scopes - Scope(s) of the access request\n+# + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMTk4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + clientConfig - HTTP client configurations which is used to call the authorization endpoint\n          \n          \n            \n            # + clientConfig - HTTP client configurations, which are used to call the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406701987", "createdAt": "2020-04-10T10:32:48Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -156,29 +163,29 @@ public type DirectTokenConfig record {|\n     http:CredentialBearer credentialBearer = http:AUTH_HEADER_BEARER;\n |};\n \n-# The `RefreshConfig` record can be used to pass the configurations for refreshing the access token of password grant type.\n+# The data structure which can be used to pass the configurations for refreshing the access token of\n+# password grant type.\n #\n # + refreshUrl - Refresh token URL for the refresh token server\n-# + scopes - Scope of the access request\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + scopes - Scope(s) of the access request\n+# + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint\n+# + clientConfig - HTTP client configurations which is used to call the authorization endpoint\n public type RefreshConfig record {|\n     string refreshUrl;\n     string[] scopes?;\n     http:CredentialBearer credentialBearer = http:AUTH_HEADER_BEARER;\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `DirectTokenRefreshConfig` record passes the configurations for refreshing the access token for\n-# the grant type of the direct token grant type.\n+# The data structure which can be used pass the configurations for refreshing the access token directly.\n #\n # + refreshUrl - Refresh token URL for the refresh token server\n # + refreshToken - Refresh token for the refresh token server\n # + clientId - Client ID for authentication with the authorization endpoint\n # + clientSecret - Client secret for authentication with the authorization endpoint\n-# + scopes - Scope of the access request\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + scopes - Scope(s) of the access request\n+# + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint\n+# + clientConfig - HTTP client configurations which is used to call the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjA0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The data structure which stores the values received from the authorization/token server to use them\n          \n          \n            \n            # The data structure, which stores the values received from the authorization/token server to use them", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406702042", "createdAt": "2020-04-10T10:33:00Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -189,10 +196,10 @@ public type DirectTokenRefreshConfig record {|\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `OutboundOAuth2CacheEntry` stores the values received from the authorization/token server to use them\n+# The data structure which stores the values received from the authorization/token server to use them", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjEzNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The data structure which stores the values needed to prepare the HTTP request, which is to be sent to the\n          \n          \n            \n            # The data structure, which stores the values needed to prepare the HTTP request, which are to be sent to the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406702137", "createdAt": "2020-04-10T10:33:17Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -201,13 +208,14 @@ public type OutboundOAuth2CacheEntry record {\n     int expTime;\n };\n \n-# The `RequestConfig` record prepares the HTTP request, which is to be sent to the authorization endpoint.\n+# The data structure which stores the values needed to prepare the HTTP request, which is to be sent to the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjE3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint\n          \n          \n            \n            # + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406702174", "createdAt": "2020-04-10T10:33:27Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -201,13 +208,14 @@ public type OutboundOAuth2CacheEntry record {\n     int expTime;\n };\n \n-# The `RequestConfig` record prepares the HTTP request, which is to be sent to the authorization endpoint.\n+# The data structure which stores the values needed to prepare the HTTP request, which is to be sent to the\n+# authorization endpoint.\n #\n # + payload - Payload of the request\n # + clientId - Client ID for client credentials grant authentication\n # + clientSecret - Client secret for client credentials grant authentication\n-# + scopes - Scope of the access request\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n+# + scopes - Scope(s) of the access request\n+# + credentialBearer - Bearer of authentication credentials which are sent to the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 180}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjIyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - OAuth2 token or `oauth2:Error` if the validation fails\n          \n          \n            \n            # + return - OAuth2 token or `oauth2:Error` if the validation fails\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406702225", "createdAt": "2020-04-10T10:33:38Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -216,11 +224,11 @@ type RequestConfig record {|\n     http:CredentialBearer credentialBearer;\n |};\n \n-# Process auth token for OAuth2 at token generation.\n+# Generates the OAuth2 token.\n #\n # + authConfig - OAuth2 configurations\n # + oauth2CacheEntry - OAuth2 cache entry\n-# + return - Auth token or `Error` if the validation fails\n+# + return - OAuth2 token or `oauth2:Error` if the validation fails", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjI5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Process the OAuth2 token at inspection flow.\n          \n          \n            \n            # Processes the OAuth2 token at the inspection flow.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406702297", "createdAt": "2020-04-10T10:33:50Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -232,11 +240,11 @@ function generateAuthTokenForOAuth2(GrantTypeConfig authConfig, @tainted Outboun\n     }\n }\n \n-# Process auth token for OAuth2 at inspection.\n+# Process the OAuth2 token at inspection flow.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjM1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - OAuth2 token or `oauth2:Error` if the validation fails\n          \n          \n            \n            # + return - OAuth2 token or `oauth2:Error` if the validation fails\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406702355", "createdAt": "2020-04-10T10:33:58Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -232,11 +240,11 @@ function generateAuthTokenForOAuth2(GrantTypeConfig authConfig, @tainted Outboun\n     }\n }\n \n-# Process auth token for OAuth2 at inspection.\n+# Process the OAuth2 token at inspection flow.\n #\n # + authConfig - OAuth2 configurations\n # + oauth2CacheEntry - OAuth2 cache entry\n-# + return - Auth token or `Error` if the validation fails\n+# + return - OAuth2 token or `oauth2:Error` if the validation fails", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 208}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjQzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Process the OAuth2 token for password grant type.\n          \n          \n            \n            # Processes the OAuth2 token for the password grant type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406702431", "createdAt": "2020-04-10T10:34:09Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -256,11 +264,11 @@ function inspectAuthTokenForOAuth2(GrantTypeConfig authConfig, @tainted Outbound\n     return prepareError(\"Failed to get the access token since retry request is set as false.\");\n }\n \n-# Process the auth token for OAuth2 password grant.\n+# Process the OAuth2 token for password grant type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjQ5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - OAuth2 token or `oauth2:Error` if an error occurred during the HTTP client invocation or validation\n          \n          \n            \n            # + return - OAuth2 token or `oauth2:Error` if an error occurred during the HTTP client invocation or validation\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406702495", "createdAt": "2020-04-10T10:34:17Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -256,11 +264,11 @@ function inspectAuthTokenForOAuth2(GrantTypeConfig authConfig, @tainted Outbound\n     return prepareError(\"Failed to get the access token since retry request is set as false.\");\n }\n \n-# Process the auth token for OAuth2 password grant.\n+# Process the OAuth2 token for password grant type.\n #\n-# + grantTypeConfig - Password grant configurations\n+# + grantTypeConfig - Password grant type configurations\n # + oauth2CacheEntry - OAuth2 cache entry\n-# + return - Auth token or `Error` if an error occurred during the HTTP client invocation or validation\n+# + return - OAuth2 token or `oauth2:Error` if an error occurred during the HTTP client invocation or validation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 223}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjU1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Process the OAuth2 token for client credentials grant type.\n          \n          \n            \n            # Processes the OAuth2 token for the client credentials grant type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406702556", "createdAt": "2020-04-10T10:34:31Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -297,11 +305,11 @@ function getAuthTokenForOAuth2PasswordGrant(PasswordGrantConfig grantTypeConfig,\n     }\n }\n \n-# Process the auth token for OAuth2 client credentials grant.\n+# Process the OAuth2 token for client credentials grant type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 232}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjU5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - OAuth2 token or `oauth2:Error` if an error occurred during the HTTP client invocation or validation\n          \n          \n            \n            # + return - OAuth2 token or `oauth2:Error` if an error occurred during the HTTP client invocation or validation\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406702598", "createdAt": "2020-04-10T10:34:40Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -297,11 +305,11 @@ function getAuthTokenForOAuth2PasswordGrant(PasswordGrantConfig grantTypeConfig,\n     }\n }\n \n-# Process the auth token for OAuth2 client credentials grant.\n+# Process the OAuth2 token for client credentials grant type.\n #\n-# + grantTypeConfig - Client credentials grant configurations\n+# + grantTypeConfig - Client credentials grant type configurations\n # + oauth2CacheEntry - OAuth2 cache entry\n-# + return - Auth token or `Error` if an error occurred during the HTTP client invocation or validation\n+# + return - OAuth2 token or `oauth2:Error` if an error occurred during the HTTP client invocation or validation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 238}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMzc5MzUy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#pullrequestreview-391379352", "createdAt": "2020-04-10T10:35:24Z", "commit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "state": "COMMENTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozNToyNFrOGD3K9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMDozNzowOFrOGD3M1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjgzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Process the OAuth2 token for direct token mode.\n          \n          \n            \n            # Processes the OAuth2 token for the direct token mode.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406702839", "createdAt": "2020-04-10T10:35:24Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -338,11 +346,11 @@ function getAuthTokenForOAuth2ClientCredentialsGrant(ClientCredentialsGrantConfi\n     }\n }\n \n-# Process the auth token for OAuth2 direct token mode.\n+# Process the OAuth2 token for direct token mode.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 247}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjg4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return -OAuth2 token or `oauth2:Error` if an error occurred during the HTTP client invocation or validation\n          \n          \n            \n            # + return -OAuth2 token or `oauth2:Error` if an error occurred during the HTTP client invocation or validation\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406702881", "createdAt": "2020-04-10T10:35:33Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -338,11 +346,11 @@ function getAuthTokenForOAuth2ClientCredentialsGrant(ClientCredentialsGrantConfi\n     }\n }\n \n-# Process the auth token for OAuth2 direct token mode.\n+# Process the OAuth2 token for direct token mode.\n #\n-# + grantTypeConfig - Direct token configurations\n+# + grantTypeConfig - Direct token mode configurations\n # + oauth2CacheEntry - OAuth2 cache entry\n-# + return - Auth token or `Error` if an error occurred during the HTTP client invocation or validation\n+# + return -OAuth2 token or `oauth2:Error` if an error occurred during the HTTP client invocation or validation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 253}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjkyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Checks the validity of the access token which is in the cache. If the expiry time is 0, that means no expiry time is\n          \n          \n            \n            # Checks the validity of the access token, which is in the cache. If the expiry time is 0, that means no expiry time is", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406702928", "createdAt": "2020-04-10T10:35:42Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -387,11 +395,11 @@ function getAuthTokenForOAuth2DirectTokenMode(DirectTokenConfig grantTypeConfig,\n     }\n }\n \n-# Check the validity of the access token which is in the cache. If the expiry time is 0, that means no expiry time is\n+# Checks the validity of the access token which is in the cache. If the expiry time is 0, that means no expiry time is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 262}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMjk3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - `true` if the access token is valid, `false` otherwise\n          \n          \n            \n            # + return - `true` if the access token is valid, `false` otherwise\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406702971", "createdAt": "2020-04-10T10:35:52Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -387,11 +395,11 @@ function getAuthTokenForOAuth2DirectTokenMode(DirectTokenConfig grantTypeConfig,\n     }\n }\n \n-# Check the validity of the access token which is in the cache. If the expiry time is 0, that means no expiry time is\n+# Checks the validity of the access token which is in the cache. If the expiry time is 0, that means no expiry time is\n # returned with the authorization request. This implies that the token is valid forever.\n #\n # + oauth2CacheEntry - OAuth2 cache entry\n-# + return - Whether the access token is valid or not\n+# + return - `true` if the access token is valid, `false` otherwise", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 267}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMzAxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Received OAuth2 access token or `oauth2:Error` if an error occurred during the HTTP client invocation\n          \n          \n            \n            # + return - Received OAuth2 access token or `oauth2:Error` if an error occurred during the HTTP client invocation\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406703011", "createdAt": "2020-04-10T10:36:02Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -413,11 +421,11 @@ function isOAuth2CacheEntryValid(OutboundOAuth2CacheEntry oauth2CacheEntry) retu\n     return false;\n }\n \n-# Request an access token from the authorization endpoint using the provided configurations.\n+# Requests an access token from the authorization endpoint using the provided configurations.\n #\n-# + config - Grant type configuration\n+# + config - OAuth2 grant type configurations\n # + oauth2CacheEntry - OAuth2 cache entry\n-# + return - Access token received or `Error` if an error occurred during the HTTP client invocation\n+# + return - Received OAuth2 access token or `oauth2:Error` if an error occurred during the HTTP client invocation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 282}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMzA1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Received access token or `oauth2:Error` if an error occurred during HTTP client invocation\n          \n          \n            \n            # + return - Received access token or `oauth2:Error` if an error occurred during HTTP client invocation\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406703055", "createdAt": "2020-04-10T10:36:14Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -470,11 +478,11 @@ function getAccessTokenFromAuthorizationRequest(ClientCredentialsGrantConfig|Pas\n     return doRequest(tokenUrl, authorizationRequest, clientConfig, oauth2CacheEntry, clockSkewInSeconds);\n }\n \n-# Request an access token from the authorization endpoint using the provided refresh configurations.\n+# Requests an access token from the authorization endpoint using the provided refresh configurations.\n #\n # + config - Password grant type configuration or direct token configuration\n # + oauth2CacheEntry - OAuth2 cache entry\n-# + return - Access token received or `Error` if an error occurred during HTTP client invocation\n+# + return - Received access token or `oauth2:Error` if an error occurred during HTTP client invocation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 296}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMzA5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Executes the actual request and get the access token from authorization endpoint.\n          \n          \n            \n            # Executes the actual request and gets the access token from the authorization endpoint.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406703096", "createdAt": "2020-04-10T10:36:23Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -533,14 +541,14 @@ function getAccessTokenFromRefreshRequest(PasswordGrantConfig|DirectTokenConfig\n     return doRequest(refreshUrl, refreshRequest, clientConfig, oauth2CacheEntry, clockSkewInSeconds);\n }\n \n-# Execute the actual request and get the access token from authorization endpoint.\n+# Executes the actual request and get the access token from authorization endpoint.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 305}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMzEzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + clientConfig - HTTP client configurations which is used to call the authorization endpoint\n          \n          \n            \n            # + clientConfig - HTTP client configurations, which are used to call the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406703130", "createdAt": "2020-04-10T10:36:33Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -533,14 +541,14 @@ function getAccessTokenFromRefreshRequest(PasswordGrantConfig|DirectTokenConfig\n     return doRequest(refreshUrl, refreshRequest, clientConfig, oauth2CacheEntry, clockSkewInSeconds);\n }\n \n-# Execute the actual request and get the access token from authorization endpoint.\n+# Executes the actual request and get the access token from authorization endpoint.\n #\n # + url - URL of the authorization endpoint\n # + request - Prepared request to be sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + clientConfig - HTTP client configurations which is used to call the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 310}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMzE2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Received OAuth2 access token or `oauth2:Error` if an error occurred during HTTP client invocation\n          \n          \n            \n            # + return - Received OAuth2 access token or `oauth2:Error` if an error occurred during HTTP client invocation\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406703163", "createdAt": "2020-04-10T10:36:39Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -533,14 +541,14 @@ function getAccessTokenFromRefreshRequest(PasswordGrantConfig|DirectTokenConfig\n     return doRequest(refreshUrl, refreshRequest, clientConfig, oauth2CacheEntry, clockSkewInSeconds);\n }\n \n-# Execute the actual request and get the access token from authorization endpoint.\n+# Executes the actual request and get the access token from authorization endpoint.\n #\n # + url - URL of the authorization endpoint\n # + request - Prepared request to be sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + clientConfig - HTTP client configurations which is used to call the authorization endpoint\n # + oauth2CacheEntry - OAuth2 cache entry\n # + clockSkewInSeconds - Clock skew in seconds\n-# + return - Access token received or `Error` if an error occurred during HTTP client invocation\n+# + return - Received OAuth2 access token or `oauth2:Error` if an error occurred during HTTP client invocation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 314}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMzI0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Prepared HTTP request object or `oauth2:Error` if an error occurred during preparing request\n          \n          \n            \n            # + return - Prepared HTTP request object or `oauth2:Error` if an error occurred during preparing request\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406703246", "createdAt": "2020-04-10T10:36:52Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -556,10 +564,10 @@ function doRequest(string url, http:Request request, http:ClientConfiguration cl\n     }\n }\n \n-# Prepare the request to be sent to the authorization endpoint by adding the relevant headers and payloads.\n+# Prepares the request to be sent to the authorization endpoint by adding the relevant headers and payloads.\n #\n-# + config - `RequestConfig` record\n-# + return - Prepared HTTP request object or `Error` if an error occurred during preparing request\n+# + config - `oauth2:RequestConfig` record\n+# + return - Prepared HTTP request object or `oauth2:Error` if an error occurred during preparing request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 328}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMzI3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Extracts the access token from the JSON payload of a given HTTP response and update the token cache.\n          \n          \n            \n            # Extracts the access token from the JSON payload of a given HTTP response and updates the token cache.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406703273", "createdAt": "2020-04-10T10:36:59Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -597,12 +605,12 @@ function prepareRequest(RequestConfig config) returns http:Request|Error {\n     return req;\n }\n \n-# Extract the access token from the JSON payload of a given HTTP response and update the token cache.\n+# Extracts the access token from the JSON payload of a given HTTP response and update the token cache.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 337}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcwMzMxNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Extracted access token or `oauth2:Error` if an error occurred during the HTTP client invocation\n          \n          \n            \n            # + return - Extracted access token or `oauth2:Error` if an error occurred during the HTTP client invocation\n          \n      \n    \n    \n  \n\nPlease refer the template for the correct format.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406703317", "createdAt": "2020-04-10T10:37:08Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -597,12 +605,12 @@ function prepareRequest(RequestConfig config) returns http:Request|Error {\n     return req;\n }\n \n-# Extract the access token from the JSON payload of a given HTTP response and update the token cache.\n+# Extracts the access token from the JSON payload of a given HTTP response and update the token cache.\n #\n # + response - HTTP response object\n # + oauth2CacheEntry - OAuth2 cache entry\n # + clockSkewInSeconds - Clock skew in seconds\n-# + return - Extracted access token or `Error` if an error occurred during the HTTP client invocation\n+# + return - Extracted access token or `oauth2:Error` if an error occurred during the HTTP client invocation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df47f9608003351cea06fd7a63eee997b6353f16"}, "originalPosition": 343}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "208c7ebf82899c3f01d2c26b0bcf17e29d87d40e", "author": {"user": {"login": "ldclakmal", "name": "Chanaka Lakmal"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/208c7ebf82899c3f01d2c26b0bcf17e29d87d40e", "committedDate": "2020-04-10T11:56:54Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNDA3NDQ5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#pullrequestreview-391407449", "createdAt": "2020-04-10T12:02:24Z", "commit": {"oid": "208c7ebf82899c3f01d2c26b0bcf17e29d87d40e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMjowMjoyNVrOGD4r2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMjowMjoyNVrOGD4r2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcyNzY0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Generated `string` token, or `auth:Error` occurred when generating token or `()` if nothing to be\n          \n          \n            \n            #            returned\n          \n          \n            \n            # + return - Generated `string` token, `auth:Error` occurred while generating the token, or else \n          \n          \n            \n            #            `()` if nothing to be returned", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r406727642", "createdAt": "2020-04-10T12:02:25Z", "author": {"login": "ldclakmal"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -71,10 +74,14 @@ public type OutboundOAuth2Provider object {\n         }\n     }\n \n-    # Inspect the incoming data and generate the token for OAuth2 authentication.\n-    #\n-    # + data - Map of data which is extracted from the HTTP response\n-    # + return - String token, or `auth:Error` occurred when generating token or `()` if nothing to be returned\n+# Inspect the incoming data and generate the token for OAuth2 authentication.\n+# ```ballerina\n+# string:auth:Error? token = outboundOAuth2Provider.inspect(data);\n+# ```\n+#\n+# + data - Map of data, which is extracted from the HTTP response\n+# + return - Generated `string` token, or `auth:Error` occurred when generating token or `()` if nothing to be\n+#            returned", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "208c7ebf82899c3f01d2c26b0bcf17e29d87d40e"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d30c17e1d0318aaef277d9a41f991549f66b707", "author": {"user": {"login": "ldclakmal", "name": "Chanaka Lakmal"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2d30c17e1d0318aaef277d9a41f991549f66b707", "committedDate": "2020-04-10T12:11:21Z", "message": "Apply suggestions from code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e69ff816b30d0f07cedcafce3022c7521bb7e128", "author": {"user": {"login": "ldclakmal", "name": "Chanaka Lakmal"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e69ff816b30d0f07cedcafce3022c7521bb7e128", "committedDate": "2020-04-10T12:25:29Z", "message": "Update BBE links"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1", "author": {"user": {"login": "ldclakmal", "name": "Chanaka Lakmal"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4d03ce30187b75a7402b0710803d4bc891dbade1", "committedDate": "2020-04-11T05:46:34Z", "message": "Move module.md content into relevant objects"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzQyOTI2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#pullrequestreview-391742926", "createdAt": "2020-04-11T07:03:16Z", "commit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "state": "COMMENTED", "comments": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzowMzoxNlrOGELBaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzoxMjozOFrOGELE1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODA3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents inbound OAuth2 provider, which calls the introspection server and validate the received credentials,\n          \n          \n            \n            # Represents the inbound OAuth2 provider, which calls the introspection server, validates the received credentials,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028072", "createdAt": "2020-04-11T07:03:16Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/inbound_oauth2_provider.bal", "diffHunk": "@@ -22,7 +22,15 @@ import ballerina/mime;\n import ballerina/stringutils;\n import ballerina/time;\n \n-# Represents inbound OAuth2 provider, which calls the introspection server and validate the received credentials.\n+# Represents inbound OAuth2 provider, which calls the introspection server and validate the received credentials,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODExNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Provides authentication based on the provided introspection configuration.\n          \n          \n            \n                # Provides authentication based on the provided introspection configurations.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028116", "createdAt": "2020-04-11T07:03:33Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/inbound_oauth2_provider.bal", "diffHunk": "@@ -37,18 +45,21 @@ public type InboundOAuth2Provider object {\n \n     # Provides authentication based on the provided introspection configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODEzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Authenticates provider OAuth2 tokens with an introspection endpoint.\n          \n          \n            \n            # Authenticates the provider OAuth2 tokens with an introspection endpoint.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028133", "createdAt": "2020-04-11T07:03:45Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/inbound_oauth2_provider.bal", "diffHunk": "@@ -37,18 +45,21 @@ public type InboundOAuth2Provider object {\n \n     # Provides authentication based on the provided introspection configuration.\n     #\n-    # + config - OAuth2 introspection configurations\n+    # + config - OAuth2 introspection server configurations\n     public function __init(IntrospectionServerConfig config) {\n         self.tokenTypeHint = config?.tokenTypeHint;\n         self.introspectionClient = new(config.url, config.clientConfig);\n         self.inboundOAuth2Cache = config?.oauth2Cache;\n         self.defaultTokenExpTimeInSeconds = config.defaultTokenExpTimeInSeconds;\n     }\n \n-    # Attempts to authenticate with credential.\n-    #\n-    # + credential - Credential to be authenticated\n-    # + return - `true` if authentication is successful, otherwise `false` or `auth:Error` if an error occurred\n+# Authenticates provider OAuth2 tokens with an introspection endpoint.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODE3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - `true` if authentication is successful, otherwise `false`, or else an `auth:Error` if an error occurred\n          \n          \n            \n            # + return - `true` if authentication is successful, `false` otherwise, or else an `auth:Error` if an error occurred", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028179", "createdAt": "2020-04-11T07:04:04Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/inbound_oauth2_provider.bal", "diffHunk": "@@ -37,18 +45,21 @@ public type InboundOAuth2Provider object {\n \n     # Provides authentication based on the provided introspection configuration.\n     #\n-    # + config - OAuth2 introspection configurations\n+    # + config - OAuth2 introspection server configurations\n     public function __init(IntrospectionServerConfig config) {\n         self.tokenTypeHint = config?.tokenTypeHint;\n         self.introspectionClient = new(config.url, config.clientConfig);\n         self.inboundOAuth2Cache = config?.oauth2Cache;\n         self.defaultTokenExpTimeInSeconds = config.defaultTokenExpTimeInSeconds;\n     }\n \n-    # Attempts to authenticate with credential.\n-    #\n-    # + credential - Credential to be authenticated\n-    # + return - `true` if authentication is successful, otherwise `false` or `auth:Error` if an error occurred\n+# Authenticates provider OAuth2 tokens with an introspection endpoint.\n+# ```ballerina\n+# boolean|auth:Error result = inboundOAuth2Provider.authenticate(\"<credential>\");\n+# ```\n+#\n+# + credential - OAuth2 token to be authenticated\n+# + return - `true` if authentication is successful, otherwise `false`, or else an `auth:Error` if an error occurred", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODIxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents the outbound OAuth2 provider, which generates OAtuh2 tokens. This supports client credentials grant type,\n          \n          \n            \n            # Represents the outbound OAuth2 provider, which generates OAtuh2 tokens. This supports the client credentials grant type,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028212", "createdAt": "2020-04-11T07:04:26Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -24,7 +24,45 @@ import ballerina/time;\n # Represents the grant type configs supported for OAuth2.\n type GrantTypeConfig ClientCredentialsGrantConfig|PasswordGrantConfig|DirectTokenConfig;\n \n-# Represents outbound OAuth2 provider.\n+# Represents the outbound OAuth2 provider, which generates OAtuh2 tokens. This supports client credentials grant type,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODIyNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # password grant type and the direct token mode which sends the access token directly.\n          \n          \n            \n            # password grant type, and the direct token mode, which sends the access token directly.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028227", "createdAt": "2020-04-11T07:04:38Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -24,7 +24,45 @@ import ballerina/time;\n # Represents the grant type configs supported for OAuth2.\n type GrantTypeConfig ClientCredentialsGrantConfig|PasswordGrantConfig|DirectTokenConfig;\n \n-# Represents outbound OAuth2 provider.\n+# Represents the outbound OAuth2 provider, which generates OAtuh2 tokens. This supports client credentials grant type,\n+# password grant type and the direct token mode which sends the access token directly.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODI2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Generate a token for OAuth2 authentication.\n          \n          \n            \n            # Generate a token for the OAuth2 authentication.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028263", "createdAt": "2020-04-11T07:05:05Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -47,9 +85,12 @@ public type OutboundOAuth2Provider object {\n         };\n     }\n \n-    # Generate token for OAuth2 authentication.\n-    #\n-    # + return - Generated token or `auth:Error` if an error occurred\n+# Generate a token for OAuth2 authentication.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODI3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Inspect the incoming data and generate the token for OAuth2 authentication.\n          \n          \n            \n            # Inspect the incoming data and generate the token for the OAuth2 authentication.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028279", "createdAt": "2020-04-11T07:05:17Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -71,10 +112,14 @@ public type OutboundOAuth2Provider object {\n         }\n     }\n \n-    # Inspect the incoming data and generate the token for OAuth2 authentication.\n-    #\n-    # + data - Map of data which is extracted from the HTTP response\n-    # + return - String token, or `auth:Error` occurred when generating token or `()` if nothing to be returned\n+# Inspect the incoming data and generate the token for OAuth2 authentication.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODI5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Generated `string` token, `auth:Error` occurred while generating the token, or else \n          \n          \n            \n            # + return - Generated `string` token, an `auth:Error` occurred while generating the token, or else", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028292", "createdAt": "2020-04-11T07:05:31Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -71,10 +112,14 @@ public type OutboundOAuth2Provider object {\n         }\n     }\n \n-    # Inspect the incoming data and generate the token for OAuth2 authentication.\n-    #\n-    # + data - Map of data which is extracted from the HTTP response\n-    # + return - String token, or `auth:Error` occurred when generating token or `()` if nothing to be returned\n+# Inspect the incoming data and generate the token for OAuth2 authentication.\n+# ```ballerina\n+# string:auth:Error? token = outboundOAuth2Provider.inspect(data);\n+# ```\n+#\n+# + data - Map of data, which is extracted from the HTTP response\n+# + return - Generated `string` token, `auth:Error` occurred while generating the token, or else ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODMxMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            `()` if nothing to be returned\n          \n          \n            \n            #            `()` if nothing is to be returned", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028313", "createdAt": "2020-04-11T07:05:38Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -71,10 +112,14 @@ public type OutboundOAuth2Provider object {\n         }\n     }\n \n-    # Inspect the incoming data and generate the token for OAuth2 authentication.\n-    #\n-    # + data - Map of data which is extracted from the HTTP response\n-    # + return - String token, or `auth:Error` occurred when generating token or `()` if nothing to be returned\n+# Inspect the incoming data and generate the token for OAuth2 authentication.\n+# ```ballerina\n+# string:auth:Error? token = outboundOAuth2Provider.inspect(data);\n+# ```\n+#\n+# + data - Map of data, which is extracted from the HTTP response\n+# + return - Generated `string` token, `auth:Error` occurred while generating the token, or else \n+#            `()` if nothing to be returned", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODM1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + credentialBearer - Bearer of authentication credentials, which are sent to the authorization endpoint\n          \n          \n            \n            # + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028350", "createdAt": "2020-04-11T07:05:58Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -93,16 +138,16 @@ public type OutboundOAuth2Provider object {\n     }\n };\n \n-# The `ClientCredentialsGrantConfig` record can be used to configue OAuth2 client credentials grant type.\n+# The data structure, which is used to configure the OAuth2 client credentials grant type.\n #\n # + tokenUrl - Token URL for the authorization endpoint\n # + clientId - Client ID for the client credentials grant authentication\n # + clientSecret - Client secret for the client credentials grant authentication\n-# + scopes - Scope of the access request\n+# + scopes - Scope(s) of the access request\n # + clockSkewInSeconds - Clock skew in seconds\n # + retryRequest - Retry the request if the initial request returns a 401 response\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + credentialBearer - Bearer of authentication credentials, which are sent to the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODM1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The data structure, which is used to configue OAuth2 password grant type.\n          \n          \n            \n            # The data structure, which is used to configure the OAuth2 password grant type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028359", "createdAt": "2020-04-11T07:06:08Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -114,19 +159,19 @@ public type ClientCredentialsGrantConfig record {|\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `PasswordGrantConfig` record can be used to configue OAuth2 password grant type\n+# The data structure, which is used to configue OAuth2 password grant type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODM3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + username - Username for password grant authentication\n          \n          \n            \n            # + username - Username for the password grant authentication", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028374", "createdAt": "2020-04-11T07:06:28Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -114,19 +159,19 @@ public type ClientCredentialsGrantConfig record {|\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `PasswordGrantConfig` record can be used to configue OAuth2 password grant type\n+# The data structure, which is used to configue OAuth2 password grant type.\n #\n # + tokenUrl - Token URL for the authorization endpoint\n # + username - Username for password grant authentication", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODM4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + password - Password for password grant authentication\n          \n          \n            \n            # + password - Password for the password grant authentication", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028381", "createdAt": "2020-04-11T07:06:36Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -114,19 +159,19 @@ public type ClientCredentialsGrantConfig record {|\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `PasswordGrantConfig` record can be used to configue OAuth2 password grant type\n+# The data structure, which is used to configue OAuth2 password grant type.\n #\n # + tokenUrl - Token URL for the authorization endpoint\n # + username - Username for password grant authentication\n # + password - Password for password grant authentication", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODM5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + clientId - Client ID for password grant authentication\n          \n          \n            \n            # + clientId - Client ID for the password grant authentication", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028392", "createdAt": "2020-04-11T07:06:44Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -114,19 +159,19 @@ public type ClientCredentialsGrantConfig record {|\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `PasswordGrantConfig` record can be used to configue OAuth2 password grant type\n+# The data structure, which is used to configue OAuth2 password grant type.\n #\n # + tokenUrl - Token URL for the authorization endpoint\n # + username - Username for password grant authentication\n # + password - Password for password grant authentication\n # + clientId - Client ID for password grant authentication", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODQxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + clientSecret - Client secret for password grant authentication\n          \n          \n            \n            # + clientSecret - Client secret for the password grant authentication", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028412", "createdAt": "2020-04-11T07:06:51Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -114,19 +159,19 @@ public type ClientCredentialsGrantConfig record {|\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `PasswordGrantConfig` record can be used to configue OAuth2 password grant type\n+# The data structure, which is used to configue OAuth2 password grant type.\n #\n # + tokenUrl - Token URL for the authorization endpoint\n # + username - Username for password grant authentication\n # + password - Password for password grant authentication\n # + clientId - Client ID for password grant authentication\n # + clientSecret - Client secret for password grant authentication", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODQzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint\n          \n          \n            \n            # + credentialBearer - Bearer of the authentication credentials, which is sent to the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028430", "createdAt": "2020-04-11T07:07:08Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -114,19 +159,19 @@ public type ClientCredentialsGrantConfig record {|\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `PasswordGrantConfig` record can be used to configue OAuth2 password grant type\n+# The data structure, which is used to configue OAuth2 password grant type.\n #\n # + tokenUrl - Token URL for the authorization endpoint\n # + username - Username for password grant authentication\n # + password - Password for password grant authentication\n # + clientId - Client ID for password grant authentication\n # + clientSecret - Client secret for password grant authentication\n-# + scopes - Scope of the access request\n+# + scopes - Scope(s) of the access request\n # + refreshConfig - Configurations for refreshing the access token\n # + clockSkewInSeconds - Clock skew in seconds\n # + retryRequest - Retry the request if the initial request returns a 401 response\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODQ1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # The data structure, which is used to configure OAuth2 access token directly.\n          \n          \n            \n            # The data structure, which is used to configure the OAuth2 access token directly.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028452", "createdAt": "2020-04-11T07:07:21Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -141,13 +186,13 @@ public type PasswordGrantConfig record {|\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `DirectTokenConfig` record configures the access token directly.\n+# The data structure, which is used to configure OAuth2 access token directly.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODQ1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint\n          \n          \n            \n            # + credentialBearer - Bearer of the authentication credentials, which is sent to the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028458", "createdAt": "2020-04-11T07:07:34Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -141,13 +186,13 @@ public type PasswordGrantConfig record {|\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `DirectTokenConfig` record configures the access token directly.\n+# The data structure, which is used to configure OAuth2 access token directly.\n #\n # + accessToken - Access token for the authorization endpoint\n # + refreshConfig - Configurations for refreshing the access token\n # + clockSkewInSeconds - Clock skew in seconds\n # + retryRequest - Retry the request if the initial request returns a 401 response\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n+# + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODQ3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint\n          \n          \n            \n            # + credentialBearer - Bearer of the authentication credentials, which is sent to the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028478", "createdAt": "2020-04-11T07:07:49Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -156,29 +201,29 @@ public type DirectTokenConfig record {|\n     http:CredentialBearer credentialBearer = http:AUTH_HEADER_BEARER;\n |};\n \n-# The `RefreshConfig` record can be used to pass the configurations for refreshing the access token of password grant type.\n+# The data structure, which can be used to pass the configurations for refreshing the access token of\n+# the password grant type.\n #\n # + refreshUrl - Refresh token URL for the refresh token server\n-# + scopes - Scope of the access request\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + scopes - Scope(s) of the access request\n+# + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODUxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + credentialBearer - Bearer of authentication credentials, which are sent to the authorization endpoint\n          \n          \n            \n            # + credentialBearer - Bearer of authentication credentials, which is sent to the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028518", "createdAt": "2020-04-11T07:08:14Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -156,29 +201,29 @@ public type DirectTokenConfig record {|\n     http:CredentialBearer credentialBearer = http:AUTH_HEADER_BEARER;\n |};\n \n-# The `RefreshConfig` record can be used to pass the configurations for refreshing the access token of password grant type.\n+# The data structure, which can be used to pass the configurations for refreshing the access token of\n+# the password grant type.\n #\n # + refreshUrl - Refresh token URL for the refresh token server\n-# + scopes - Scope of the access request\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + scopes - Scope(s) of the access request\n+# + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint\n+# + clientConfig - HTTP client configurations, which are used to call the authorization endpoint\n public type RefreshConfig record {|\n     string refreshUrl;\n     string[] scopes?;\n     http:CredentialBearer credentialBearer = http:AUTH_HEADER_BEARER;\n     http:ClientConfiguration clientConfig = {};\n |};\n \n-# The `DirectTokenRefreshConfig` record passes the configurations for refreshing the access token for\n-# the grant type of the direct token grant type.\n+# The data structure, which can be used to pass the configurations for refreshing the access token directly.\n #\n # + refreshUrl - Refresh token URL for the refresh token server\n # + refreshToken - Refresh token for the refresh token server\n # + clientId - Client ID for authentication with the authorization endpoint\n # + clientSecret - Client secret for authentication with the authorization endpoint\n-# + scopes - Scope of the access request\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + scopes - Scope(s) of the access request\n+# + credentialBearer - Bearer of authentication credentials, which are sent to the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODU4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + clientId - Client ID for client credentials grant authentication\n          \n          \n            \n            # + clientId - Client ID for the client credentials grant authentication", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028580", "createdAt": "2020-04-11T07:08:49Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -201,13 +246,14 @@ public type OutboundOAuth2CacheEntry record {\n     int expTime;\n };\n \n-# The `RequestConfig` record prepares the HTTP request, which is to be sent to the authorization endpoint.\n+# The data structure, which stores the values needed to prepare the HTTP request, which are to be sent to the\n+# authorization endpoint.\n #\n # + payload - Payload of the request\n # + clientId - Client ID for client credentials grant authentication", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 213}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODYwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + clientSecret - Client secret for client credentials grant authentication\n          \n          \n            \n            # + clientSecret - Client secret for the client credentials grant authentication", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028604", "createdAt": "2020-04-11T07:08:56Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -201,13 +246,14 @@ public type OutboundOAuth2CacheEntry record {\n     int expTime;\n };\n \n-# The `RequestConfig` record prepares the HTTP request, which is to be sent to the authorization endpoint.\n+# The data structure, which stores the values needed to prepare the HTTP request, which are to be sent to the\n+# authorization endpoint.\n #\n # + payload - Payload of the request\n # + clientId - Client ID for client credentials grant authentication\n # + clientSecret - Client secret for client credentials grant authentication", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 214}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODYyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint\n          \n          \n            \n            # + credentialBearer - Bearer of the authentication credentials, which is sent to the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028623", "createdAt": "2020-04-11T07:09:04Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -201,13 +246,14 @@ public type OutboundOAuth2CacheEntry record {\n     int expTime;\n };\n \n-# The `RequestConfig` record prepares the HTTP request, which is to be sent to the authorization endpoint.\n+# The data structure, which stores the values needed to prepare the HTTP request, which are to be sent to the\n+# authorization endpoint.\n #\n # + payload - Payload of the request\n # + clientId - Client ID for client credentials grant authentication\n # + clientSecret - Client secret for client credentials grant authentication\n-# + scopes - Scope of the access request\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n+# + scopes - Scope(s) of the access request\n+# + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 218}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODY0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - OAuth2 token or else `oauth2:Error` if the validation failed\n          \n          \n            \n            # + return - OAuth2 token or else an `oauth2:Error` if the validation failed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028643", "createdAt": "2020-04-11T07:09:16Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -216,11 +262,11 @@ type RequestConfig record {|\n     http:CredentialBearer credentialBearer;\n |};\n \n-# Process auth token for OAuth2 at token generation.\n+# Generates the OAuth2 token.\n #\n # + authConfig - OAuth2 configurations\n # + oauth2CacheEntry - OAuth2 cache entry\n-# + return - Auth token or `Error` if the validation fails\n+# + return - OAuth2 token or else `oauth2:Error` if the validation failed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 232}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODY1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - OAuth2 token or else `oauth2:Error` if the validation failed\n          \n          \n            \n            # + return - OAuth2 token or else an `oauth2:Error` if the validation failed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028655", "createdAt": "2020-04-11T07:09:28Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -232,11 +278,11 @@ function generateAuthTokenForOAuth2(GrantTypeConfig authConfig, @tainted Outboun\n     }\n }\n \n-# Process auth token for OAuth2 at inspection.\n+# Processes the OAuth2 token at the inspection flow.\n #\n # + authConfig - OAuth2 configurations\n # + oauth2CacheEntry - OAuth2 cache entry\n-# + return - Auth token or `Error` if the validation fails\n+# + return - OAuth2 token or else `oauth2:Error` if the validation failed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 246}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODcwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - OAuth2 token or else `oauth2:Error` if an error occurred while HTTP client invocation or validation\n          \n          \n            \n            # + return - OAuth2 token or else an `oauth2:Error` occurred during the HTTP client invocation or validation", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028707", "createdAt": "2020-04-11T07:09:56Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -256,11 +302,11 @@ function inspectAuthTokenForOAuth2(GrantTypeConfig authConfig, @tainted Outbound\n     return prepareError(\"Failed to get the access token since retry request is set as false.\");\n }\n \n-# Process the auth token for OAuth2 password grant.\n+# Processes the OAuth2 token for the password grant type.\n #\n-# + grantTypeConfig - Password grant configurations\n+# + grantTypeConfig - Password grant type configurations\n # + oauth2CacheEntry - OAuth2 cache entry\n-# + return - Auth token or `Error` if an error occurred during the HTTP client invocation or validation\n+# + return - OAuth2 token or else `oauth2:Error` if an error occurred while HTTP client invocation or validation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 261}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODc1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - OAuth2 token or else `oauth2:Error` if an error occurred while HTTP client invocation or validation\n          \n          \n            \n            # + return - OAuth2 token or else an `oauth2:Error` occurred during the HTTP client invocation or validation", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028758", "createdAt": "2020-04-11T07:10:16Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -297,11 +343,11 @@ function getAuthTokenForOAuth2PasswordGrant(PasswordGrantConfig grantTypeConfig,\n     }\n }\n \n-# Process the auth token for OAuth2 client credentials grant.\n+# Processes the OAuth2 token for the client credentials grant type.\n #\n-# + grantTypeConfig - Client credentials grant configurations\n+# + grantTypeConfig - Client credentials grant type configurations\n # + oauth2CacheEntry - OAuth2 cache entry\n-# + return - Auth token or `Error` if an error occurred during the HTTP client invocation or validation\n+# + return - OAuth2 token or else `oauth2:Error` if an error occurred while HTTP client invocation or validation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 276}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODc3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return -OAuth2 token or else `oauth2:Error` if an error occurred while HTTP client invocation or validation\n          \n          \n            \n            # + return -OAuth2 token or else an `oauth2:Error` occurred during the HTTP client invocation or validation", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028777", "createdAt": "2020-04-11T07:10:34Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -338,11 +384,11 @@ function getAuthTokenForOAuth2ClientCredentialsGrant(ClientCredentialsGrantConfi\n     }\n }\n \n-# Process the auth token for OAuth2 direct token mode.\n+# Processes the OAuth2 token for the direct token mode.\n #\n-# + grantTypeConfig - Direct token configurations\n+# + grantTypeConfig - Direct token mode configurations\n # + oauth2CacheEntry - OAuth2 cache entry\n-# + return - Auth token or `Error` if an error occurred during the HTTP client invocation or validation\n+# + return -OAuth2 token or else `oauth2:Error` if an error occurred while HTTP client invocation or validation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 291}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODgzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Received OAuth2 access token or else `oauth2:Error` if an error occurred while HTTP client invocation\n          \n          \n            \n            # + return - Received OAuth2 access token or else an `oauth2:Error` occurred during the HTTP client invocation", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028834", "createdAt": "2020-04-11T07:11:07Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -413,11 +459,11 @@ function isOAuth2CacheEntryValid(OutboundOAuth2CacheEntry oauth2CacheEntry) retu\n     return false;\n }\n \n-# Request an access token from the authorization endpoint using the provided configurations.\n+# Requests an access token from the authorization endpoint using the provided configurations.\n #\n-# + config - Grant type configuration\n+# + config - OAuth2 grant type configurations\n # + oauth2CacheEntry - OAuth2 cache entry\n-# + return - Access token received or `Error` if an error occurred during the HTTP client invocation\n+# + return - Received OAuth2 access token or else `oauth2:Error` if an error occurred while HTTP client invocation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 320}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODg0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Received access token or else `oauth2:Error` if an error occurred while HTTP client invocation\n          \n          \n            \n            # + return - Received access token or else an `oauth2:Error` occurred during the HTTP client invocation", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028849", "createdAt": "2020-04-11T07:11:25Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -470,11 +516,11 @@ function getAccessTokenFromAuthorizationRequest(ClientCredentialsGrantConfig|Pas\n     return doRequest(tokenUrl, authorizationRequest, clientConfig, oauth2CacheEntry, clockSkewInSeconds);\n }\n \n-# Request an access token from the authorization endpoint using the provided refresh configurations.\n+# Requests an access token from the authorization endpoint using the provided refresh configurations.\n #\n # + config - Password grant type configuration or direct token configuration\n # + oauth2CacheEntry - OAuth2 cache entry\n-# + return - Access token received or `Error` if an error occurred during HTTP client invocation\n+# + return - Received access token or else `oauth2:Error` if an error occurred while HTTP client invocation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 334}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODkwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Received OAuth2 access token or else `oauth2:Error` if an error occurred while HTTP client invocation\n          \n          \n            \n            # + return - Received OAuth2 access token or else an `oauth2:Error` occurred during the HTTP client invocation", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028903", "createdAt": "2020-04-11T07:11:51Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -533,14 +579,14 @@ function getAccessTokenFromRefreshRequest(PasswordGrantConfig|DirectTokenConfig\n     return doRequest(refreshUrl, refreshRequest, clientConfig, oauth2CacheEntry, clockSkewInSeconds);\n }\n \n-# Execute the actual request and get the access token from authorization endpoint.\n+# Executes the actual request and gets the access token from the authorization endpoint.\n #\n # + url - URL of the authorization endpoint\n # + request - Prepared request to be sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + clientConfig - HTTP client configurations, which are used to call the authorization endpoint\n # + oauth2CacheEntry - OAuth2 cache entry\n # + clockSkewInSeconds - Clock skew in seconds\n-# + return - Access token received or `Error` if an error occurred during HTTP client invocation\n+# + return - Received OAuth2 access token or else `oauth2:Error` if an error occurred while HTTP client invocation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 352}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODkxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + config - `oauth2:RequestConfig` record\n          \n          \n            \n            # + config - The `oauth2:RequestConfig` record", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028915", "createdAt": "2020-04-11T07:12:03Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -556,10 +602,10 @@ function doRequest(string url, http:Request request, http:ClientConfiguration cl\n     }\n }\n \n-# Prepare the request to be sent to the authorization endpoint by adding the relevant headers and payloads.\n+# Prepares the request to be sent to the authorization endpoint by adding the relevant headers and payloads.\n #\n-# + config - `RequestConfig` record\n-# + return - Prepared HTTP request object or `Error` if an error occurred during preparing request\n+# + config - `oauth2:RequestConfig` record", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 365}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODkyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Prepared HTTP request object or else `oauth2:Error` if an error occurred while preparing the request\n          \n          \n            \n            # + return - Prepared HTTP request object or else an `oauth2:Error` occurred while preparing the request", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028929", "createdAt": "2020-04-11T07:12:20Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -556,10 +602,10 @@ function doRequest(string url, http:Request request, http:ClientConfiguration cl\n     }\n }\n \n-# Prepare the request to be sent to the authorization endpoint by adding the relevant headers and payloads.\n+# Prepares the request to be sent to the authorization endpoint by adding the relevant headers and payloads.\n #\n-# + config - `RequestConfig` record\n-# + return - Prepared HTTP request object or `Error` if an error occurred during preparing request\n+# + config - `oauth2:RequestConfig` record\n+# + return - Prepared HTTP request object or else `oauth2:Error` if an error occurred while preparing the request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 366}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyODk1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Extracted access token or else `oauth2:Error` if an error occurred while HTTP client invocation\n          \n          \n            \n            # + return - Extracted access token or else an `oauth2:Error` occurred during the HTTP client invocation", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407028950", "createdAt": "2020-04-11T07:12:38Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -597,12 +643,12 @@ function prepareRequest(RequestConfig config) returns http:Request|Error {\n     return req;\n }\n \n-# Extract the access token from the JSON payload of a given HTTP response and update the token cache.\n+# Extracts the access token from the JSON payload of a given HTTP response and updates the token cache.\n #\n # + response - HTTP response object\n # + oauth2CacheEntry - OAuth2 cache entry\n # + clockSkewInSeconds - Clock skew in seconds\n-# + return - Extracted access token or `Error` if an error occurred during the HTTP client invocation\n+# + return - Extracted access token or else `oauth2:Error` if an error occurred while HTTP client invocation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d03ce30187b75a7402b0710803d4bc891dbade1"}, "originalPosition": 381}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50641360819870f488eea6e7afbc3595cfbd115d", "author": {"user": {"login": "ldclakmal", "name": "Chanaka Lakmal"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/50641360819870f488eea6e7afbc3595cfbd115d", "committedDate": "2020-04-11T12:05:56Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzYxNDA4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#pullrequestreview-391761408", "createdAt": "2020-04-11T12:13:57Z", "commit": {"oid": "50641360819870f488eea6e7afbc3595cfbd115d"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMjoxMzo1N1rOGEMxRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMjoxNToxN1rOGEMx0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1NjcxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Log and prepare the `error` as an `oauth2:Error`.\n          \n          \n            \n            # Logs and prepares the `error` as an `oauth2:Error`.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407056711", "createdAt": "2020-04-11T12:13:57Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/oauth2_errors.bal", "diffHunk": "@@ -32,7 +32,7 @@ public const OAUTH2_ERROR = \"{ballerina/oauth2}Error\";\n # Represents the OAuth2 error type with details.\n public type Error error<OAUTH2_ERROR, Detail>;\n \n-# Log and prepare `error` as a `Error`.\n+# Log and prepare the `error` as an `oauth2:Error`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50641360819870f488eea6e7afbc3595cfbd115d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1Njc2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - Generated `string` token or else `auth:Error` if an error occurred\n          \n          \n            \n            # + return - Generated `string` token or else an `auth:Error` if an error occurred", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407056763", "createdAt": "2020-04-11T12:14:31Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -47,9 +85,12 @@ public type OutboundOAuth2Provider object {\n         };\n     }\n \n-    # Generate token for OAuth2 authentication.\n-    #\n-    # + return - Generated token or `auth:Error` if an error occurred\n+# Generate a token for the OAuth2 authentication.\n+# ```ballerina\n+# string:auth:Error token = outboundOAuth2Provider.generateToken();\n+# ```\n+#\n+# + return - Generated `string` token or else `auth:Error` if an error occurred", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50641360819870f488eea6e7afbc3595cfbd115d"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1NjgwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Inspect the incoming data and generate the token for the OAuth2 authentication.\n          \n          \n            \n            # Inspects the incoming data and generates the token for the OAuth2 authentication.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407056801", "createdAt": "2020-04-11T12:14:43Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -71,10 +112,14 @@ public type OutboundOAuth2Provider object {\n         }\n     }\n \n-    # Inspect the incoming data and generate the token for OAuth2 authentication.\n-    #\n-    # + data - Map of data which is extracted from the HTTP response\n-    # + return - String token, or `auth:Error` occurred when generating token or `()` if nothing to be returned\n+# Inspect the incoming data and generate the token for the OAuth2 authentication.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50641360819870f488eea6e7afbc3595cfbd115d"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1Njg0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint\n          \n          \n            \n            # + credentialBearer - Bearer of the authentication credentials, which is sent to the authorization endpoint", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#discussion_r407056849", "createdAt": "2020-04-11T12:15:17Z", "author": {"login": "praneesha"}, "path": "stdlib/oauth2/src/main/ballerina/src/oauth2/outbound_oauth2_provider.bal", "diffHunk": "@@ -93,16 +138,16 @@ public type OutboundOAuth2Provider object {\n     }\n };\n \n-# The `ClientCredentialsGrantConfig` record can be used to configue OAuth2 client credentials grant type.\n+# The data structure, which is used to configure the OAuth2 client credentials grant type.\n #\n # + tokenUrl - Token URL for the authorization endpoint\n # + clientId - Client ID for the client credentials grant authentication\n # + clientSecret - Client secret for the client credentials grant authentication\n-# + scopes - Scope of the access request\n+# + scopes - Scope(s) of the access request\n # + clockSkewInSeconds - Clock skew in seconds\n # + retryRequest - Retry the request if the initial request returns a 401 response\n-# + credentialBearer - How authentication credentials are sent to the authorization endpoint\n-# + clientConfig - HTTP client configurations which calls the authorization endpoint\n+# + credentialBearer - Bearer of the authentication credentials, which are sent to the authorization endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50641360819870f488eea6e7afbc3595cfbd115d"}, "originalPosition": 107}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f5fc7e1feb61c6c90f9bd4bb2558cc4153a32af", "author": {"user": {"login": "ldclakmal", "name": "Chanaka Lakmal"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8f5fc7e1feb61c6c90f9bd4bb2558cc4153a32af", "committedDate": "2020-04-11T12:18:50Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: praneesha <praneesha@wso2.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzYxODU0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22576#pullrequestreview-391761854", "createdAt": "2020-04-11T12:20:09Z", "commit": {"oid": "8f5fc7e1feb61c6c90f9bd4bb2558cc4153a32af"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3942, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}