{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMTk2MzU2", "number": 24791, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMzo0MTozN1rOEPIp6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMzo0MTozN1rOEPIp6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzA1ODk5OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/packaging/PackagingTestCase.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMzo0MTozN1rOGyre6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNDozNTo1NFrOGzFDFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5NDQwOA==", "bodyText": "If I'm not mistaken, this test will be failing once a newer version of the socket module is available, as the module version is hard-coded here. Is it the expected behaviour or am I missing something?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24791#discussion_r455794408", "createdAt": "2020-07-16T13:41:37Z", "author": {"login": "NipunaRanasinghe"}, "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/packaging/PackagingTestCase.java", "diffHunk": "@@ -297,6 +298,27 @@ public void testBuildAndRunModuleWithPeriod() throws BallerinaTestException {\n         buildLeecher.waitForText(5000);\n     }\n \n+    @Test(description = \"Test modules with org-name `ballerina` resolving from central, if new version is available\")\n+    public void testResolveBallerinaModulesFromCentral() throws BallerinaTestException, IOException {\n+        // copy `ballerina-central-module` project from resources to a temp\n+        Path originalTestProject = Paths\n+                .get(\"src\", \"test\", \"resources\", \"packaging\", \"scope\", \"ballerina-central-module\").toAbsolutePath();\n+        Path projectPath = tempProjectDirectory.resolve(\"ballerinaCentralModuleProject\");\n+        copyFolder(originalTestProject, projectPath);\n+\n+        // Build module\n+        LogLeecher buildLeecher = new LogLeecher(\"ballerina/socket:9.0.0 pulled from central successfully\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba2802d62f3d9ace82fd3e6efb6ecebc24e23432"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg0OTAwNA==", "bodyText": "This particular module version is pushed to staging central server we used a high version number so that newer version will not break the test.  I doubt socket module will reach 9.0.0. The test will check if newer modules in central will get pulled even though module is found in bit cache.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24791#discussion_r455849004", "createdAt": "2020-07-16T14:53:48Z", "author": {"login": "hevayo"}, "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/packaging/PackagingTestCase.java", "diffHunk": "@@ -297,6 +298,27 @@ public void testBuildAndRunModuleWithPeriod() throws BallerinaTestException {\n         buildLeecher.waitForText(5000);\n     }\n \n+    @Test(description = \"Test modules with org-name `ballerina` resolving from central, if new version is available\")\n+    public void testResolveBallerinaModulesFromCentral() throws BallerinaTestException, IOException {\n+        // copy `ballerina-central-module` project from resources to a temp\n+        Path originalTestProject = Paths\n+                .get(\"src\", \"test\", \"resources\", \"packaging\", \"scope\", \"ballerina-central-module\").toAbsolutePath();\n+        Path projectPath = tempProjectDirectory.resolve(\"ballerinaCentralModuleProject\");\n+        copyFolder(originalTestProject, projectPath);\n+\n+        // Build module\n+        LogLeecher buildLeecher = new LogLeecher(\"ballerina/socket:9.0.0 pulled from central successfully\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5NDQwOA=="}, "originalCommit": {"oid": "ba2802d62f3d9ace82fd3e6efb6ecebc24e23432"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg3MDQyOA==", "bodyText": "The current ballerina/socket version is 0.6.5, So we decided to pull a higher version (9.0.0) than that to stg-central. In this test case that pulled version to stg-central is pulling when building this project. Normally we are using stg-central only for testing purposes and newer versions will to add to it. So we will not have a need to update this version in the near future. Do we have any good way of doing this? So I can put another PR for that.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24791#discussion_r455870428", "createdAt": "2020-07-16T15:22:54Z", "author": {"login": "pramodya1994"}, "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/packaging/PackagingTestCase.java", "diffHunk": "@@ -297,6 +298,27 @@ public void testBuildAndRunModuleWithPeriod() throws BallerinaTestException {\n         buildLeecher.waitForText(5000);\n     }\n \n+    @Test(description = \"Test modules with org-name `ballerina` resolving from central, if new version is available\")\n+    public void testResolveBallerinaModulesFromCentral() throws BallerinaTestException, IOException {\n+        // copy `ballerina-central-module` project from resources to a temp\n+        Path originalTestProject = Paths\n+                .get(\"src\", \"test\", \"resources\", \"packaging\", \"scope\", \"ballerina-central-module\").toAbsolutePath();\n+        Path projectPath = tempProjectDirectory.resolve(\"ballerinaCentralModuleProject\");\n+        copyFolder(originalTestProject, projectPath);\n+\n+        // Build module\n+        LogLeecher buildLeecher = new LogLeecher(\"ballerina/socket:9.0.0 pulled from central successfully\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5NDQwOA=="}, "originalCommit": {"oid": "ba2802d62f3d9ace82fd3e6efb6ecebc24e23432"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxMzI2OQ==", "bodyText": "@hevayo @pramodya1994 thanks for the explanations. I also think this would be okay as we are using an unreachable version. +1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24791#discussion_r456213269", "createdAt": "2020-07-17T04:35:54Z", "author": {"login": "NipunaRanasinghe"}, "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/packaging/PackagingTestCase.java", "diffHunk": "@@ -297,6 +298,27 @@ public void testBuildAndRunModuleWithPeriod() throws BallerinaTestException {\n         buildLeecher.waitForText(5000);\n     }\n \n+    @Test(description = \"Test modules with org-name `ballerina` resolving from central, if new version is available\")\n+    public void testResolveBallerinaModulesFromCentral() throws BallerinaTestException, IOException {\n+        // copy `ballerina-central-module` project from resources to a temp\n+        Path originalTestProject = Paths\n+                .get(\"src\", \"test\", \"resources\", \"packaging\", \"scope\", \"ballerina-central-module\").toAbsolutePath();\n+        Path projectPath = tempProjectDirectory.resolve(\"ballerinaCentralModuleProject\");\n+        copyFolder(originalTestProject, projectPath);\n+\n+        // Build module\n+        LogLeecher buildLeecher = new LogLeecher(\"ballerina/socket:9.0.0 pulled from central successfully\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc5NDQwOA=="}, "originalCommit": {"oid": "ba2802d62f3d9ace82fd3e6efb6ecebc24e23432"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 401, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}