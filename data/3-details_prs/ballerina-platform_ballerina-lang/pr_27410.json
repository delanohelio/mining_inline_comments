{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MDIwMDIz", "number": 27410, "title": "Service resource methods are not considered for subtyping", "bodyText": "Purpose\nAs a part of service typing stage-2, $title.\nThis is a breaking change, this disallow resource method decl in object type decl.\nExample: https://github.com/ballerina-platform/ballerina-lang/pull/27410/files#diff-57bb99a9a4e0c7e4130933445e9369df2af89036d22e35d83082e976eb1a1713L33\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-12-09T08:57:12Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410", "merged": true, "mergeCommit": {"oid": "ee25c4a2879387149a4afb02fdc28db7268f50e8"}, "closed": true, "closedAt": "2021-01-07T04:14:38Z", "author": {"login": "rdhananjaya"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJV8blAH2gAyNTM1MDIwMDIzOmFlOWY3NmZiNzc5YjcwODhkMTFlOTQ1OTllZTU1NmU0Njk4MGNkMTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtsNgQAFqTU2MzE5OTU4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ae9f76fb779b7088d11e94599ee556e46980cd17", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ae9f76fb779b7088d11e94599ee556e46980cd17", "committedDate": "2020-09-16T05:56:34Z", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5a26d6109e37cbf48c70ae068d7637f90c8511d", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b5a26d6109e37cbf48c70ae068d7637f90c8511d", "committedDate": "2020-09-25T09:39:34Z", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e1fbe635f671de75ca1ee07a569a775a28cc5a1", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0e1fbe635f671de75ca1ee07a569a775a28cc5a1", "committedDate": "2020-12-08T08:50:31Z", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adfaa9523711387b05aebcc1232de3cc083507f4", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/adfaa9523711387b05aebcc1232de3cc083507f4", "committedDate": "2020-12-09T07:18:22Z", "message": "Remove type checking of service remote and resource methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e78a3a6f388df90a0993400ec22bf8e065adb9eb", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e78a3a6f388df90a0993400ec22bf8e065adb9eb", "committedDate": "2020-12-09T13:58:31Z", "message": "Disallow remote and resource decl on service obj"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa1d1db1f5336c1d23560224978f6351a998be36", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aa1d1db1f5336c1d23560224978f6351a998be36", "committedDate": "2020-12-11T08:27:36Z", "message": "Remove restriction of service remote methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c65aada19cedeb66e4d1dd4beaa7d7136f9d819", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8c65aada19cedeb66e4d1dd4beaa7d7136f9d819", "committedDate": "2020-12-16T15:22:27Z", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into service-type-checking\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticErrorCode.java\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "501c77c13c5256ee4ee64162308ceaf2c4eb93dc", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/501c77c13c5256ee4ee64162308ceaf2c4eb93dc", "committedDate": "2020-12-16T17:01:57Z", "message": "Fix failing negative test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a28e4b5f6c5e399de12636fd4db0e927045694c", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2a28e4b5f6c5e399de12636fd4db0e927045694c", "committedDate": "2021-01-05T01:29:56Z", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into service-type-checking"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b", "committedDate": "2021-01-05T06:13:59Z", "message": "Merge branch 'lang-sl-alpha' of github.com:ballerina-platform/ballerina-lang into service-type-checking\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticErrorCode.java"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9a2f894c1a09838d3a20e45a81ff94d99d4d31bb", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9a2f894c1a09838d3a20e45a81ff94d99d4d31bb", "committedDate": "2021-01-05T06:00:28Z", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into service-type-checking\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticErrorCode.java"}, "afterCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b", "committedDate": "2021-01-05T06:13:59Z", "message": "Merge branch 'lang-sl-alpha' of github.com:ballerina-platform/ballerina-lang into service-type-checking\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticErrorCode.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxODA1NDQ0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#pullrequestreview-561805444", "createdAt": "2021-01-05T13:55:40Z", "commit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo1NTo0MVrOIOYG1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDoyNTozN1rOIOZLWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0NTk0MQ==", "bodyText": "Missing the license header.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551945941", "createdAt": "2021-01-05T13:55:41Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/klass/service_class_resource_remote_function_references_neg.bal", "diffHunk": "@@ -0,0 +1,9 @@\n+type SType service object {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0NjgxNA==", "bodyText": "This tests more than just the reference (inclusion), right? Shall we rename the test and the file?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551946814", "createdAt": "2021-01-05T13:57:04Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/klass/ServiceClassTest.java", "diffHunk": "@@ -60,6 +60,17 @@ public void testResourcePathParamNegative() {\n         Assert.assertEquals(index, 3);\n     }\n \n+    @Test\n+    public void testResourceFunctionReferences() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0ODg3OA==", "bodyText": "Is this needed?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551948878", "createdAt": "2021-01-05T14:00:45Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/resources/compiler.properties", "diffHunk": "@@ -769,6 +769,12 @@ error.resource.function.invalid.return.type=\\\n error.remote.in.non.object.function=\\\n   remote modifier not allowed in non-object attached function {0}\n \n+error.unsupported.resource.function.declaration.in.object.type=\\\n+  unsupported resource function declaration in object type definition\n+\n+error.unsupported.remote.function.decl.in.service.obj.type=\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0OTM0Ng==", "bodyText": "Shall we use method instead?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              unsupported resource function declaration in object type definition\n          \n          \n            \n              resource method declarations are not allowed in an object type definition", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551949346", "createdAt": "2021-01-05T14:01:33Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/resources/compiler.properties", "diffHunk": "@@ -769,6 +769,12 @@ error.resource.function.invalid.return.type=\\\n error.remote.in.non.object.function=\\\n   remote modifier not allowed in non-object attached function {0}\n \n+error.unsupported.resource.function.declaration.in.object.type=\\\n+  unsupported resource function declaration in object type definition", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk1OTU3Nw==", "bodyText": "Do we need to check this? Can't we rely on just the resource flag for the method?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551959577", "createdAt": "2021-01-05T14:18:54Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/TypeChecker.java", "diffHunk": "@@ -1639,6 +1639,12 @@ private static boolean checkObjectSubTypeForMethods(List<TypePair> unresolvedTyp\n                                                         String targetTypeModule, String sourceTypeModule,\n                                                         BObjectType sourceType, BObjectType targetType) {\n         for (MemberFunctionType lhsFunc : targetFuncs) {\n+            // As of state-2 of service typing changes, resource functions are not considered for sub-typing.\n+            if (SymbolFlags.isFlagOn(targetType.getFlags(), SymbolFlags.SERVICE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk2MDI5OQ==", "bodyText": "Same comment as above. Since resources are only allowed in services do we need to check this here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551960299", "createdAt": "2021-01-05T14:20:13Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/BIRGen.java", "diffHunk": "@@ -494,12 +494,17 @@ public void visit(BLangClassDefinition classDefinition) {\n \n         for (BAttachedFunction func : ((BObjectTypeSymbol) classDefinition.symbol).referencedFunctions) {\n             BInvokableSymbol funcSymbol = func.symbol;\n+            if (Symbols.isService(classDefinition.symbol)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk2MTAxMA==", "bodyText": "Shall we include the \"declaration\" part in the code?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551961010", "createdAt": "2021-01-05T14:21:26Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticErrorCode.java", "diffHunk": "@@ -653,21 +653,24 @@\n     REMOTE_FUNCTION_IN_NON_NETWORK_OBJECT(\"BCE3967\", \"remote.function.in.non.network.object\"),\n     UNSUPPORTED_PATH_PARAM_TYPE(\"BCE3968\", \"unsupported.path.param.type\"),\n     UNSUPPORTED_REST_PATH_PARAM_TYPE(\"BCE3969\", \"unsupported.rest.path.param.type\"),\n-    SERVICE_ABSOLUTE_PATH_OR_LITERAL_IS_REQUIRED_BY_LISTENER(\"BCE3970\",\n+    OBJECT_TYPE_DEF_DOES_NOT_ALLOW_RESOURCE_FUNC(\"BCE3970\", \"unsupported.resource.function.declaration.in.object.type\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk2MTQxMQ==", "bodyText": "Same comment as above re: checking for services first.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551961411", "createdAt": "2021-01-05T14:22:10Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -3532,6 +3528,11 @@ private void validateReferencedFunction(Location pos, BAttachedFunction func, Sy\n             return;\n         }\n \n+        // Service typing does not consider resource methods when type checking.\n+        if (Symbols.isService(func.symbol.receiverSymbol) && Symbols.isResource(func.symbol)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk2MTYzOA==", "bodyText": "Unnecessary change?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551961638", "createdAt": "2021-01-05T14:22:33Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -1318,7 +1317,7 @@ private boolean checkStructEquivalency(BType rhsType, BType lhsType, Set<TypePai\n         return false;\n     }\n \n-    public boolean checkObjectEquivalency(BObjectType rhsType, BObjectType lhsType, Set<TypePair> unresolvedTypes) {\n+    public boolean  checkObjectEquivalency(BObjectType rhsType, BObjectType lhsType, Set<TypePair> unresolvedTypes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk2MzQ4Mg==", "bodyText": "Do we need a separate variable here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551963482", "createdAt": "2021-01-05T14:25:37Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -3787,7 +3775,9 @@ private boolean checkDetachMethod(BAttachedFunction func) {\n             }\n \n             BType firstParamType = func.type.paramTypes.get(0);\n-            return detachFound = isServiceObject(firstParamType);\n+            boolean isMatchingSignature = firstParamType.tag == TypeTags.OBJECT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 89}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "204c2ce6b9aa636dc25d27c4c38e391d677f5081", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/204c2ce6b9aa636dc25d27c4c38e391d677f5081", "committedDate": "2021-01-06T13:06:58Z", "message": "Merge branch 'lang-sl-alpha' of github.com:ballerina-platform/ballerina-lang into service-type-checking\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticErrorCode.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "933fb7d6f5c676d4a30623b1322e4dfcfa7fd02a", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/933fb7d6f5c676d4a30623b1322e4dfcfa7fd02a", "committedDate": "2021-01-07T02:07:34Z", "message": "Add review suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec0f00ae96e21c09c5a00f44251fd2dec6769ee4", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ec0f00ae96e21c09c5a00f44251fd2dec6769ee4", "committedDate": "2021-01-07T02:20:19Z", "message": "Merge branch 'lang-sl-alpha' of github.com:ballerina-platform/ballerina-lang into service-type-checking\n\n\u0001 Conflicts:\n\u0001\tbvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/TypeChecker.java\n\u0001\ttests/jballerina-unit-test/src/test/resources/test-src/services/service_decl.bal"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzMTk0Mzk2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#pullrequestreview-563194396", "createdAt": "2021-01-07T03:53:00Z", "commit": {"oid": "ec0f00ae96e21c09c5a00f44251fd2dec6769ee4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMzo1MzowMFrOIPeObA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMzo1MzowMFrOIPeObA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA5NDc2NA==", "bodyText": "BCE3971? Need to change the rest too.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r553094764", "createdAt": "2021-01-07T03:53:00Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticErrorCode.java", "diffHunk": "@@ -653,23 +653,25 @@\n     REMOTE_FUNCTION_IN_NON_NETWORK_OBJECT(\"BCE3967\", \"remote.function.in.non.network.object\"),\n     UNSUPPORTED_PATH_PARAM_TYPE(\"BCE3968\", \"unsupported.path.param.type\"),\n     UNSUPPORTED_REST_PATH_PARAM_TYPE(\"BCE3969\", \"unsupported.rest.path.param.type\"),\n-    SERVICE_ABSOLUTE_PATH_OR_LITERAL_IS_REQUIRED_BY_LISTENER(\"BCE3970\",\n+    OBJECT_TYPE_DEF_DOES_NOT_ALLOW_RESOURCE_FUNC_DECL(\"BCE3970\",\n+            \"unsupported.resource.function.declaration.in.object.type\"),\n+    SERVICE_ABSOLUTE_PATH_OR_LITERAL_IS_REQUIRED_BY_LISTENER(\"BCE3972\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0f00ae96e21c09c5a00f44251fd2dec6769ee4"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzMTk3NDg0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#pullrequestreview-563197484", "createdAt": "2021-01-07T04:05:57Z", "commit": {"oid": "ec0f00ae96e21c09c5a00f44251fd2dec6769ee4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNDowNTo1N1rOIPeZSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNDowNTo1N1rOIPeZSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA5NzU0Nw==", "bodyText": "In what scenarios is the included function a resource declaration?\nI tried the following but ((BObjectTypeSymbol) classDefinition.symbol).referencedFunctions is empty at this point.\nservice class Foo {\n    resource function get x() returns int {\n        return 1;\n    }\n}\n\nservice class Bar {\n    *Foo;\n\n    resource function get x() returns byte {\n        return 1;\n    }\n}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r553097547", "createdAt": "2021-01-07T04:05:57Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/BIRGen.java", "diffHunk": "@@ -494,12 +494,15 @@ public void visit(BLangClassDefinition classDefinition) {\n \n         for (BAttachedFunction func : ((BObjectTypeSymbol) classDefinition.symbol).referencedFunctions) {\n             BInvokableSymbol funcSymbol = func.symbol;\n+            if (Symbols.isResource(funcSymbol) && Symbols.isFunctionDeclaration(funcSymbol)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0f00ae96e21c09c5a00f44251fd2dec6769ee4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzMTk4NzMy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#pullrequestreview-563198732", "createdAt": "2021-01-07T04:11:09Z", "commit": {"oid": "ec0f00ae96e21c09c5a00f44251fd2dec6769ee4"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNDoxMToxMFrOIPedlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNDoxMzowOVrOIPefaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA5ODY0Ng==", "bodyText": "Probably don't need the isLhsAService here also?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r553098646", "createdAt": "2021-01-07T04:11:10Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -1360,18 +1360,18 @@ public boolean checkObjectEquivalency(BObjectType rhsType, BObjectType lhsType,\n                     !isAssignable(rhsField.type, lhsField.type, unresolvedTypes)) {\n                 return false;\n             }\n-\n-            // If LHS field is a resource field, RHS field must be a resource field\n-            if (Symbols.isResource(lhsField.symbol) && !Symbols.isResource(rhsField.symbol)) {\n-                return false;\n-            }\n         }\n \n         for (BAttachedFunction lhsFunc : lhsFuncs) {\n             if (lhsFunc == lhsStructSymbol.initializerFunc) {\n                 continue;\n             }\n \n+            // Service resource methods are not considered as part of service objects type.\n+            if (isLhsAService && Symbols.isResource(lhsFunc.symbol)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0f00ae96e21c09c5a00f44251fd2dec6769ee4"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA5OTExMw==", "bodyText": "Can't we continue to use isServiceObject?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r553099113", "createdAt": "2021-01-07T04:13:09Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -3804,7 +3794,11 @@ private boolean checkAttachMethod(BAttachedFunction func) {\n \n             // todo: change is unions are allowed as service type.\n             BType firstParamType = func.type.paramTypes.get(0);\n-            if (!isServiceObject(firstParamType)) {\n+            if (firstParamType.tag != TypeTags.OBJECT) {\n+                return false;\n+            }\n+\n+            if (!Symbols.isService(firstParamType.tsymbol)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0f00ae96e21c09c5a00f44251fd2dec6769ee4"}, "originalPosition": 95}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzMTk5NTg1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#pullrequestreview-563199585", "createdAt": "2021-01-07T04:14:24Z", "commit": {"oid": "ec0f00ae96e21c09c5a00f44251fd2dec6769ee4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4780, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}