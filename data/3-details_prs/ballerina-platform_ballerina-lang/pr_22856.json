{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NzY5MTg1", "number": 22856, "title": "fix the spec deviations for List binding patterns", "bodyText": "Purpose\n\nList binding patterns were not allowed for arrays in the 1.2.2 release. With these fixes we have enabled the same.\n\n\nAlso fixed an issue in the type checker when inferring the record type of a reference, the restFieldType was added as map for any kind of reference.\n\nFixes #17927\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n[x ] Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-23T08:43:04Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22856", "merged": true, "mergeCommit": {"oid": "78ca88d5d323caf71ea6aa7d34d467fd17c997e7"}, "closed": true, "closedAt": "2020-05-05T05:09:32Z", "author": {"login": "dulvinw"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZwETeAH2gAyNDA3NzY5MTg1OmY1NmU2OWJlZDRkMTA3NDE0NDI4ZjUxYmIwMDdjOGI5MzQwM2UxYWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcd_REegFqTQwNDk3MjYyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f56e69bed4d107414428f51bb007c8b93403e1af", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f56e69bed4d107414428f51bb007c8b93403e1af", "committedDate": "2020-04-21T09:14:20Z", "message": "Add testcase for simple array destructure test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "208a1f9df08f58c20fba275eb694915a72865be4", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/208a1f9df08f58c20fba275eb694915a72865be4", "committedDate": "2020-04-21T10:19:12Z", "message": "Simple Array Destructure binding fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa36cdd554528ac834a9a3844902730a2a0dd6b9", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aa36cdd554528ac834a9a3844902730a2a0dd6b9", "committedDate": "2020-04-21T10:37:35Z", "message": "Add negative testcases for simple binding pattern"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5355e99c236a700efcd255a50bbdfd44a1dfcd71", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5355e99c236a700efcd255a50bbdfd44a1dfcd71", "committedDate": "2020-04-21T12:51:06Z", "message": "Fixes and test for Simple Undefined size arrays destructures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61705e84b25212ccac848bb13947bec91334185e", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/61705e84b25212ccac848bb13947bec91334185e", "committedDate": "2020-04-22T05:26:41Z", "message": "Add reference binding pattern and with rest test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1abd0606125b9d3e65083bd2e3006cfae0cf5038", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1abd0606125b9d3e65083bd2e3006cfae0cf5038", "committedDate": "2020-04-22T10:39:17Z", "message": "Add type checker fix for assinging map<any> for the restFieldType when\na RecordVarRef is typeChecked.\nAdded nested listBinding pattern test with Records"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9b2e5fc04f9f8a922df1cc45575c33ff7fca718", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b9b2e5fc04f9f8a922df1cc45575c33ff7fca718", "committedDate": "2020-04-22T11:35:42Z", "message": "Enable support for nested tuple destructuring binding patterns."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f34bafe7f57db9cd4dcfb0a5d6fdd64005f89fda", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f34bafe7f57db9cd4dcfb0a5d6fdd64005f89fda", "committedDate": "2020-04-23T06:44:14Z", "message": "Add nested tuple testcases."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNzk2MjQ1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22856#pullrequestreview-401796245", "createdAt": "2020-04-28T12:44:35Z", "commit": {"oid": "f34bafe7f57db9cd4dcfb0a5d6fdd64005f89fda"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjo0NDozNVrOGNSJsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjo0NDozNVrOGNSJsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU4MjA2NA==", "bodyText": "Shall we update the comment to something like:\nRest variable type of Record ref (record destructuring assignment) is a map where T is the broad type of all fields that are not specified in the destructuring pattern. Here we set the rest type of record type to T.\nPlease feel free to change the message appropriately", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22856#discussion_r416582064", "createdAt": "2020-04-28T12:44:35Z", "author": {"login": "rdhananjaya"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -1405,11 +1405,16 @@ public void visit(BLangRecordVarRef varRefExpr) {\n         varRefExpr.symbol = new BVarSymbol(0, recordSymbol.name,\n                 env.enclPkg.symbol.pkgID, bRecordType, env.scope.owner);\n \n-        if (varRefExpr.restParam == null) {\n+        if (restParam == null) {\n             bRecordType.sealed = true;\n             bRecordType.restFieldType = symTable.noType;\n-        } else {\n+        } else if (restParam.type == symTable.semanticError) {\n             bRecordType.restFieldType = symTable.mapType;\n+        } else {\n+            // Since the variable ref for a map returns the Map type and the model stores the constraint of the map type", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f34bafe7f57db9cd4dcfb0a5d6fdd64005f89fda"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNzk5MDEy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22856#pullrequestreview-401799012", "createdAt": "2020-04-28T12:48:08Z", "commit": {"oid": "f34bafe7f57db9cd4dcfb0a5d6fdd64005f89fda"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjo0ODowOFrOGNSScQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjo0ODowOFrOGNSScQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU4NDMwNQ==", "bodyText": "I think this test belong here https://github.com/ballerina-platform/ballerina-lang/tree/e8ad87cc9c315cd9892905ecd5eacf49018efb4c/tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/varref", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22856#discussion_r416584305", "createdAt": "2020-04-28T12:48:08Z", "author": {"login": "rdhananjaya"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/types/lists/ArrayDestructureTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.test.types.lists;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f34bafe7f57db9cd4dcfb0a5d6fdd64005f89fda"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60bfc55bf8770aabed455f6920a8e2c1cea82dcd", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/60bfc55bf8770aabed455f6920a8e2c1cea82dcd", "committedDate": "2020-04-30T09:21:02Z", "message": "Review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjM3NzU0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22856#pullrequestreview-404237754", "createdAt": "2020-05-01T15:54:34Z", "commit": {"oid": "60bfc55bf8770aabed455f6920a8e2c1cea82dcd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNTo1NDozNFrOGPNk8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNTo1NDozNFrOGPNk8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYwNDI3Mg==", "bodyText": "We usually break the line after the COMMA", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22856#discussion_r418604272", "createdAt": "2020-05-01T15:54:34Z", "author": {"login": "rdhananjaya"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/varref/ArrayDestructureTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.test.expressions.varref;\n+\n+import org.ballerinalang.model.values.BValue;\n+import org.ballerinalang.test.util.BAssertUtil;\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.BRunUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * Test case for list destructure bindings.\n+ *\n+ * @since 1.3.0\n+ */\n+public class ArrayDestructureTest {\n+\n+    CompileResult compileResult;\n+\n+    @BeforeClass\n+    public void setup() {\n+        compileResult = BCompileUtil.compile(\"test-src/expressions/varref/array_destructure_test.bal\");\n+    }\n+\n+    @Test\n+    public void testSimpleArrayDestructureBinding() {\n+        BValue[] result = BRunUtil.invoke(compileResult, \"testSimpleListBindingPattern\");\n+    }\n+\n+    @Test\n+    public void testSimpleArrayDestructureWithUndefinedSize() {\n+        BValue[] result = BRunUtil.invoke(compileResult, \"testSimpleListBindingPatternWithUndefinedSize\");\n+    }\n+\n+    @Test\n+    public void testReferenceArrayDestructure() {\n+        BValue[] result = BRunUtil.invoke(compileResult, \"testReferenceListBindingPattern\");\n+    }\n+\n+    @Test\n+    public void testReferenceArrayDestructureWithUndefinedSize() {\n+        BValue[] result = BRunUtil.invoke(compileResult, \"testReferenceListBindingPatternWithUndefinedSize\");\n+    }\n+\n+    @Test\n+    public void testReferenceArrayDestructureWithRecordDestructure() {\n+        BValue[] result = BRunUtil.invoke(compileResult, \"testReferenceListBindingPatternWithRecordDestructure\");\n+    }\n+\n+    @Test\n+    public void testReferenceArrayDestructureWithUndefinedSizeAndDifferentType() {\n+        BValue[] result = BRunUtil.invoke(compileResult\n+                , \"testReferenceListBindingPatternForUndefinedSizeWithDifferentType\");\n+    }\n+\n+    @Test\n+    public void testReferenceListBindingPatternWithTuples() {\n+        BValue[] result = BRunUtil.invoke(compileResult, \"testReferenceListBindingPatternWithTuples\");\n+    }\n+\n+    @Test\n+    public void testSimpleArrayDestructureNegative() {\n+        CompileResult negativeTestCompile = BCompileUtil\n+                .compile(\"test-src/expressions/varref/array_destructure_negative.bal\");\n+        Assert.assertEquals(negativeTestCompile.getErrorCount(), 5);\n+\n+        int index = 0;\n+        BAssertUtil.validateError(negativeTestCompile, index++\n+                , \"incompatible types: expected '[int,int,int,int,int]', found 'int[4]'\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60bfc55bf8770aabed455f6920a8e2c1cea82dcd"}, "originalPosition": 87}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "222780f7c66500810490d9d021a6aed6d68a313c", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/222780f7c66500810490d9d021a6aed6d68a313c", "committedDate": "2020-05-04T08:38:13Z", "message": "Styling Fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0OTcyNjIy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22856#pullrequestreview-404972622", "createdAt": "2020-05-04T13:12:33Z", "commit": {"oid": "222780f7c66500810490d9d021a6aed6d68a313c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3446, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}