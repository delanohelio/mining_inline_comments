{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNTYzMjAz", "number": 23463, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNzoxNDo0NFrOD_SLRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNzoyNzo0NVrOD_SZIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Njg0Njc5OnYy", "diffSide": "RIGHT", "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/command/BindgenCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNzoxNDo0NFrOGZ2-qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODowNjozMlrOGZ4dMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc2ODM2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Path sourceRootPath = Paths.get(System.getProperty(\"user.dir\"));\n          \n          \n            \n                private Path sourceRootPath = Paths.get(System.getProperty(USER_DIR));\n          \n      \n    \n    \n  \n\nCan we use USER_DIR from BindgenConstants?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23463#discussion_r429768363", "createdAt": "2020-05-25T07:14:44Z", "author": {"login": "pramodya1994"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/command/BindgenCommand.java", "diffHunk": "@@ -38,6 +42,8 @@\n \n     private static final PrintStream outStream = System.out;\n     private static final PrintStream outError = System.err;\n+    private Path sourceRootPath = Paths.get(System.getProperty(\"user.dir\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17af64743789ef4b425025c5b7c3e624e5cac496"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc5MjU2Mg==", "bodyText": "Yes, fixed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23463#discussion_r429792562", "createdAt": "2020-05-25T08:06:32Z", "author": {"login": "IrushiL"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/command/BindgenCommand.java", "diffHunk": "@@ -38,6 +42,8 @@\n \n     private static final PrintStream outStream = System.out;\n     private static final PrintStream outError = System.err;\n+    private Path sourceRootPath = Paths.get(System.getProperty(\"user.dir\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc2ODM2Mw=="}, "originalCommit": {"oid": "17af64743789ef4b425025c5b7c3e624e5cac496"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Njg1MTU1OnYy", "diffSide": "RIGHT", "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/command/BindgenCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNzoxNjozNlrOGZ3Bkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODowNjoxMVrOGZ4cow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc2OTEwNg==", "bodyText": "Is there a possibility to use one variable for targetOutputPath and sourceRootPath?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23463#discussion_r429769106", "createdAt": "2020-05-25T07:16:36Z", "author": {"login": "pramodya1994"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/command/BindgenCommand.java", "diffHunk": "@@ -38,6 +42,8 @@\n \n     private static final PrintStream outStream = System.out;\n     private static final PrintStream outError = System.err;\n+    private Path sourceRootPath = Paths.get(System.getProperty(\"user.dir\"));\n+    private Path targetOutputPath = sourceRootPath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17af64743789ef4b425025c5b7c3e624e5cac496"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc5MjQxOQ==", "bodyText": "Done.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23463#discussion_r429792419", "createdAt": "2020-05-25T08:06:11Z", "author": {"login": "IrushiL"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/command/BindgenCommand.java", "diffHunk": "@@ -38,6 +42,8 @@\n \n     private static final PrintStream outStream = System.out;\n     private static final PrintStream outError = System.err;\n+    private Path sourceRootPath = Paths.get(System.getProperty(\"user.dir\"));\n+    private Path targetOutputPath = sourceRootPath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc2OTEwNg=="}, "originalCommit": {"oid": "17af64743789ef4b425025c5b7c3e624e5cac496"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Njg2MTMwOnYy", "diffSide": "RIGHT", "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/command/BindgenCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNzoyMDoyN1rOGZ3Hjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODowNTo1N1rOGZ4cQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3MDYzOQ==", "bodyText": "Shall we throw UnsupportedOperationException in setParentCmdParser(...) in line number 164?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23463#discussion_r429770639", "createdAt": "2020-05-25T07:20:27Z", "author": {"login": "pramodya1994"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/command/BindgenCommand.java", "diffHunk": "@@ -87,6 +114,20 @@ public void execute() {\n             bindingsGenerator.setDependentJars(dependencyList);\n         }\n \n+        String splitColonRegex = \"\\\\s*:\\\\s*\";\n+        if (this.mavenDependency != null) {\n+            String[] mvnDependency = this.mavenDependency.split(splitColonRegex);\n+            if (mvnDependency.length != 3) {\n+                outError.println(\"\\nError in the maven dependency provided.\\n\");\n+                outStream.println(BINDGEN_CMD);\n+                outStream.println(\"\\nUse 'ballerina bindgen --help' for more information on the command.\");\n+                return;\n+            }\n+            bindingsGenerator.setMvnGroupId(mvnDependency[0]);\n+            bindingsGenerator.setMvnArtifactId(mvnDependency[1]);\n+            bindingsGenerator.setMvnVersion(mvnDependency[2]);\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17af64743789ef4b425025c5b7c3e624e5cac496"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc5MjMyMQ==", "bodyText": "All the other commands seem to be following this norm. I think we can keep this as it is.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23463#discussion_r429792321", "createdAt": "2020-05-25T08:05:57Z", "author": {"login": "IrushiL"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/command/BindgenCommand.java", "diffHunk": "@@ -87,6 +114,20 @@ public void execute() {\n             bindingsGenerator.setDependentJars(dependencyList);\n         }\n \n+        String splitColonRegex = \"\\\\s*:\\\\s*\";\n+        if (this.mavenDependency != null) {\n+            String[] mvnDependency = this.mavenDependency.split(splitColonRegex);\n+            if (mvnDependency.length != 3) {\n+                outError.println(\"\\nError in the maven dependency provided.\\n\");\n+                outStream.println(BINDGEN_CMD);\n+                outStream.println(\"\\nUse 'ballerina bindgen --help' for more information on the command.\");\n+                return;\n+            }\n+            bindingsGenerator.setMvnGroupId(mvnDependency[0]);\n+            bindingsGenerator.setMvnArtifactId(mvnDependency[1]);\n+            bindingsGenerator.setMvnVersion(mvnDependency[2]);\n+        }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3MDYzOQ=="}, "originalCommit": {"oid": "17af64743789ef4b425025c5b7c3e624e5cac496"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Njg2MTQyOnYy", "diffSide": "RIGHT", "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/command/BindingsGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNzoyMDozMFrOGZ3Hog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODowMjozN1rOGZ4V7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3MDY1OA==", "bodyText": "@IrushiL There has to be a space before colon. Usually these should be detected by check style validations.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23463#discussion_r429770658", "createdAt": "2020-05-25T07:20:30Z", "author": {"login": "keizer619"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/command/BindingsGenerator.java", "diffHunk": "@@ -79,6 +88,27 @@\n     private static Map<String, String> failedClassGens = new HashMap<>();\n \n     void generateJavaBindings() throws BindgenException {\n+        if (projectRoot != null) {\n+            Manifest manifest = TomlParserUtils.getManifest(projectRoot);\n+            if (manifest != null) {\n+                List<Library> platformLibraries = manifest.getPlatform().getLibraries();\n+                if (platformLibraries != null) {\n+                    for (Library library: platformLibraries) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17af64743789ef4b425025c5b7c3e624e5cac496"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc5MDcwMQ==", "bodyText": "Fixed it.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23463#discussion_r429790701", "createdAt": "2020-05-25T08:02:37Z", "author": {"login": "IrushiL"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/command/BindingsGenerator.java", "diffHunk": "@@ -79,6 +88,27 @@\n     private static Map<String, String> failedClassGens = new HashMap<>();\n \n     void generateJavaBindings() throws BindgenException {\n+        if (projectRoot != null) {\n+            Manifest manifest = TomlParserUtils.getManifest(projectRoot);\n+            if (manifest != null) {\n+                List<Library> platformLibraries = manifest.getPlatform().getLibraries();\n+                if (platformLibraries != null) {\n+                    for (Library library: platformLibraries) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3MDY1OA=="}, "originalCommit": {"oid": "17af64743789ef4b425025c5b7c3e624e5cac496"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Njg4MjI1OnYy", "diffSide": "RIGHT", "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/command/BindingsGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNzoyNzo0NVrOGZ3UnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwODowMjoyNFrOGZ4Vdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3Mzk4MQ==", "bodyText": "Isn't it better to move this logic to a separate method? So we can reduce the complexity of the generateJavaBindings method.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23463#discussion_r429773981", "createdAt": "2020-05-25T07:27:45Z", "author": {"login": "pramodya1994"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/command/BindingsGenerator.java", "diffHunk": "@@ -79,6 +88,27 @@\n     private static Map<String, String> failedClassGens = new HashMap<>();\n \n     void generateJavaBindings() throws BindgenException {\n+        if (projectRoot != null) {\n+            Manifest manifest = TomlParserUtils.getManifest(projectRoot);\n+            if (manifest != null) {\n+                List<Library> platformLibraries = manifest.getPlatform().getLibraries();\n+                if (platformLibraries != null) {\n+                    for (Library library: platformLibraries) {\n+                        if (library.path != null) {\n+                            classPaths.add(Paths.get(projectRoot.toString(), library.path).toString());\n+                        } else if (library.groupId != null && library.artifactId != null && library.version != null) {\n+                            mavenResolver(library.groupId, library.artifactId, library.version, projectRoot);\n+                        }\n+                    }\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17af64743789ef4b425025c5b7c3e624e5cac496"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc5MDU4Mg==", "bodyText": "Done", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23463#discussion_r429790582", "createdAt": "2020-05-25T08:02:24Z", "author": {"login": "IrushiL"}, "path": "misc/ballerina-bindgen/src/main/java/org/ballerinalang/bindgen/command/BindingsGenerator.java", "diffHunk": "@@ -79,6 +88,27 @@\n     private static Map<String, String> failedClassGens = new HashMap<>();\n \n     void generateJavaBindings() throws BindgenException {\n+        if (projectRoot != null) {\n+            Manifest manifest = TomlParserUtils.getManifest(projectRoot);\n+            if (manifest != null) {\n+                List<Library> platformLibraries = manifest.getPlatform().getLibraries();\n+                if (platformLibraries != null) {\n+                    for (Library library: platformLibraries) {\n+                        if (library.path != null) {\n+                            classPaths.add(Paths.get(projectRoot.toString(), library.path).toString());\n+                        } else if (library.groupId != null && library.artifactId != null && library.version != null) {\n+                            mavenResolver(library.groupId, library.artifactId, library.version, projectRoot);\n+                        }\n+                    }\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3Mzk4MQ=="}, "originalCommit": {"oid": "17af64743789ef4b425025c5b7c3e624e5cac496"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3594, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}