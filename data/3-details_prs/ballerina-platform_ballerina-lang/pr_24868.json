{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0Mzk0NTE4", "number": 24868, "title": "Enable JBallerinaUnitTests", "bodyText": "Purpose\nEnables JBallerinaUnitTests picked by Saif in sheet\nApproach\nFixing bugs in parser, Node transformer or fixing the test asserts.\nRemarks\n#24818\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-07-21T11:08:12Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24868", "merged": true, "mergeCommit": {"oid": "fe48a55257763e02992802b064539f6519908f70"}, "closed": true, "closedAt": "2020-07-21T12:54:43Z", "author": {"login": "m36dot"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3ENAygH2gAyNDU0Mzk0NTE4OjBiZTA1MTZkMmJmNjA4NGFhNjE2ZDQxYmU5M2RiNzhlMWIyODRjM2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3ZusqgFqTQ1MzI1NTE5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0be0516d2bf6084aa616d41be93db78e1b284c3e", "author": {"user": {"login": "m36dot", "name": "Saif Abdul Cassim"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0be0516d2bf6084aa616d41be93db78e1b284c3e", "committedDate": "2020-07-21T11:05:45Z", "message": "Enable JBallerinaUnitTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNDIzNTY1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24868#pullrequestreview-452423565", "createdAt": "2020-07-21T12:54:30Z", "commit": {"oid": "0be0516d2bf6084aa616d41be93db78e1b284c3e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMjU1MTk5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24868#pullrequestreview-453255199", "createdAt": "2020-07-22T12:10:32Z", "commit": {"oid": "0be0516d2bf6084aa616d41be93db78e1b284c3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMjoxMDozMlrOG1fjGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMjoxMDozMlrOG1fjGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc0NDYwMw==", "bodyText": "@m36dot aren't the old positions correct?\nIn L34 we have the error in details,\nprivate static final String INVALID_RESOURCE_PARAMETERS =\n            \"invalid resource parameter(s): cannot specify > 2 parameters without specifying path config and/or body \" +\n                    \"config in the resource annotation\";\n\nSo I feel position should be the position of annotation. Not function def start.\nI fixed this to get annotation positions.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24868#discussion_r458744603", "createdAt": "2020-07-22T12:10:32Z", "author": {"login": "lochana-chathura"}, "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/configuration/ResourceConfigPathTest.java", "diffHunk": "@@ -61,14 +61,14 @@ public void testPathParamAndSignatureParamMatch() {\n                 .compile(\"test-src/services/configuration/resource-arg--pathparam-match.bal\");\n         Diagnostic[] diag = compileResult.getDiagnostics();\n         Assert.assertEquals(diag.length, 8);\n-        assertResponse(diag[0], INVALID_RESOURCE_PARAMETERS, 10);\n-        assertResponse(diag[1], INVALID_RESOURCE_PARAMETERS, 18);\n-        assertResponse(diag[2], INVALID_RESOURCE_PARAMETERS, 43);\n-        assertResponse(diag[3], \"Empty data binding param value\", 46);\n+        assertResponse(diag[0], INVALID_RESOURCE_PARAMETERS, 14);\n+        assertResponse(diag[1], INVALID_RESOURCE_PARAMETERS, 22);\n+        assertResponse(diag[2], \"Empty data binding param value\", 46);\n+        assertResponse(diag[3], INVALID_RESOURCE_PARAMETERS, 48);\n         assertResponse(diag[4], \"Invalid data binding param in the signature : expected 'naMe', but found 'name'\", 55);\n-        assertResponse(diag[5], INVALID_RESOURCE_PARAMETERS, 61);\n-        assertResponse(diag[6], \"Invalid data binding param in the signature : expected 'naMe', but found 'name'\", 63);\n-        assertResponse(diag[7], INVALID_RESOURCE_PARAMETERS, 69);\n+        assertResponse(diag[5], \"Invalid data binding param in the signature : expected 'naMe', but found 'name'\", 63);\n+        assertResponse(diag[6], INVALID_RESOURCE_PARAMETERS, 65);\n+        assertResponse(diag[7], INVALID_RESOURCE_PARAMETERS, 73);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0be0516d2bf6084aa616d41be93db78e1b284c3e"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3686, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}