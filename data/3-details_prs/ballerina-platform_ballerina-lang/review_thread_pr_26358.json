{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNTg1Mjk3", "number": 26358, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMjo1MzoxMVrOEtwbgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1ODoxNlrOEt6zvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDE0ODUxOnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMjo1MzoxMVrOHhu7pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODo0MjoxNFrOHh8Jog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzk5MA==", "bodyText": "We don't need to do that check, that information would be ideally passed by the parent.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505133990", "createdAt": "2020-10-15T02:53:11Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -323,8 +323,13 @@ public FunctionDefinitionNode transform(FunctionDefinitionNode functionDefinitio\n         Token functionKeyword = formatToken(functionDefinitionNode.functionKeyword(), 1, 0);\n         IdentifierToken functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n         FunctionSignatureNode functionSignatureNode = formatNode(functionDefinitionNode.functionSignature(), 1, 0);\n-        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(),\n-                this.trailingWS, this.trailingNL);\n+        FunctionBodyNode functionBodyNode;\n+        if (functionDefinitionNode.parent().kind() == SyntaxKind.CLASS_DEFINITION) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM1MDU2Mg==", "bodyText": "But will it be possible to obtain this kind of formatting?\nclass Person {\n    *A;\n    public int age = 10;\n    function foo() returns int {\n\n        int a = 12345;\n        return a;\n    }\n\n    public string name = \"sample name\";\n    int year = 50;\n    function bar() returns string {\n\n        string b = \"bar\";\n        return b;\n    }\n\n    string month = \"february\";\n}\n\nThe following implementation also is using this approach as well.\n\n  \n    \n      ballerina-lang/misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java\n    \n    \n         Line 536\n      in\n      5167380\n    \n    \n    \n    \n\n        \n          \n           if (recordTypeDesc.parent().kind() != SyntaxKind.TYPE_DEFINITION) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505350562", "createdAt": "2020-10-15T08:42:14Z", "author": {"login": "sanjana"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -323,8 +323,13 @@ public FunctionDefinitionNode transform(FunctionDefinitionNode functionDefinitio\n         Token functionKeyword = formatToken(functionDefinitionNode.functionKeyword(), 1, 0);\n         IdentifierToken functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n         FunctionSignatureNode functionSignatureNode = formatNode(functionDefinitionNode.functionSignature(), 1, 0);\n-        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(),\n-                this.trailingWS, this.trailingNL);\n+        FunctionBodyNode functionBodyNode;\n+        if (functionDefinitionNode.parent().kind() == SyntaxKind.CLASS_DEFINITION) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzMzk5MA=="}, "originalCommit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDE1MDc5OnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMjo1NDozMVrOHhu87g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMjo1NDozMVrOHhu87g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNDMxOA==", "bodyText": "IMO we should keep only one newline in both of these cases", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505134318", "createdAt": "2020-10-15T02:54:31Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3413,8 +3424,39 @@ public OrderKeyNode transform(OrderKeyNode orderKeyNode) {\n \n     @Override\n     public ClassDefinitionNode transform(ClassDefinitionNode classDefinitionNode) {\n+        if (classDefinitionNode.metadata().isPresent()) {\n+            MetadataNode metadata = formatNode(classDefinitionNode.metadata().get(), 1, 0);\n+            classDefinitionNode = classDefinitionNode.modify().withMetadata(metadata).apply();\n+        }\n+\n+        if (classDefinitionNode.visibilityQualifier().isPresent()) {\n+            Token visibilityQualifier = formatToken(classDefinitionNode.visibilityQualifier().get(), 1, 0);\n+            classDefinitionNode = classDefinitionNode.modify().withVisibilityQualifier(visibilityQualifier).apply();\n+        }\n \n-        return super.transform(classDefinitionNode);\n+        NodeList<Token> classTypeQualifiers = formatNodeList(classDefinitionNode.classTypeQualifiers(), 1, 0, 1, 0);\n+        Token classKeyword = formatToken(classDefinitionNode.classKeyword(), 1, 0);\n+        Token className = formatToken(classDefinitionNode.className(), 1, 0);\n+        Token openBrace;\n+        if (classDefinitionNode.members().isEmpty()) {\n+            openBrace = formatToken(classDefinitionNode.openBrace(), 0, 2);\n+        } else {\n+            openBrace = formatToken(classDefinitionNode.openBrace(), 0, 1);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDE1NDYzOnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMjo1NjozNlrOHhu_Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMjo1NjozNlrOHhu_Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNDg3MA==", "bodyText": "Similarly, we should keep only one newline here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505134870", "createdAt": "2020-10-15T02:56:36Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -386,7 +391,13 @@ public RequiredParameterNode transform(RequiredParameterNode requiredParameterNo\n \n     @Override\n     public FunctionBodyBlockNode transform(FunctionBodyBlockNode functionBodyBlockNode) {\n-        Token openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n+        Token openBrace;\n+        if (functionBodyBlockNode.statements().isEmpty() && functionBodyBlockNode.namedWorkerDeclarator().isEmpty()) {\n+            openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 2);\n+        } else {\n+            openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDE1NTExOnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMjo1Njo0N1rOHhu_WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMjo1Njo0N1rOHhu_WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNDkzNg==", "bodyText": "Same here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505134936", "createdAt": "2020-10-15T02:56:47Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -502,7 +513,13 @@ public ElseBlockNode transform(ElseBlockNode elseBlockNode) {\n \n     @Override\n     public BlockStatementNode transform(BlockStatementNode blockStatementNode) {\n-        Token openBrace = formatToken(blockStatementNode.openBraceToken(), 0, 1);\n+        Token openBrace;\n+        if (blockStatementNode.statements().isEmpty()) {\n+            openBrace = formatToken(blockStatementNode.openBraceToken(), 0, 2);\n+        } else {\n+            openBrace = formatToken(blockStatementNode.openBraceToken(), 0, 1);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDE1ODI1OnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMjo1ODoyOFrOHhvBIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMjo1ODoyOFrOHhvBIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNTM5Mw==", "bodyText": "Worker init statements should have a newline to follow, rather than a whitespace.\nAlso we should honour user added newline.\nRefer to how we have done for child-statements in the block-statement.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505135393", "createdAt": "2020-10-15T02:58:28Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3451,6 +3493,18 @@ public NamedWorkerDeclarationNode transform(NamedWorkerDeclarationNode namedWork\n                 .apply();\n     }\n \n+    @Override\n+    public NamedWorkerDeclarator transform(NamedWorkerDeclarator namedWorkerDeclarator) {\n+        NodeList<StatementNode> workerInitStatements = formatNodeList(namedWorkerDeclarator.workerInitStatements(), 1\n+                , 0, 1, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDE2MzYwOnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMzowMTozMVrOHhvEOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMzowMTozMVrOHhvEOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEzNjE4NA==", "bodyText": "This should be same as the statements within the block-statement.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505136184", "createdAt": "2020-10-15T03:01:31Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3451,6 +3493,18 @@ public NamedWorkerDeclarationNode transform(NamedWorkerDeclarationNode namedWork\n                 .apply();\n     }\n \n+    @Override\n+    public NamedWorkerDeclarator transform(NamedWorkerDeclarator namedWorkerDeclarator) {\n+        NodeList<StatementNode> workerInitStatements = formatNodeList(namedWorkerDeclarator.workerInitStatements(), 1\n+                , 0, 1, 0);\n+        NodeList<NamedWorkerDeclarationNode> namedWorkerDeclarations =\n+                formatNodeList(namedWorkerDeclarator.namedWorkerDeclarations(), 0, 2, 0, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDIxNjk2OnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/test/resources/actions/type-cast/assert/type_cast_action_1.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMzozMzo0MlrOHhvjGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMzozMzo0MlrOHhvjGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE0NDA5MQ==", "bodyText": "I think we should expand module-level record type defs always.\nI have fixed this with 5167380", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505144091", "createdAt": "2020-10-15T03:33:42Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/actions/type-cast/assert/type_cast_action_1.bal", "diffHunk": "@@ -1,15 +1,9 @@\n-type Person record {\n-    string name;\n-};\n+type Person record { string name; };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7099baf642e19dd1b3404ce867ef1264384b1e7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTc5NjYzOnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0NjozMVrOHh_rHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0NjozMVrOHh_rHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwODI4NA==", "bodyText": "Each member also should preserve newlines. So we need to pass the flag", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505408284", "createdAt": "2020-10-15T09:46:31Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -3413,8 +3409,35 @@ public OrderKeyNode transform(OrderKeyNode orderKeyNode) {\n \n     @Override\n     public ClassDefinitionNode transform(ClassDefinitionNode classDefinitionNode) {\n+        if (classDefinitionNode.metadata().isPresent()) {\n+            MetadataNode metadata = formatNode(classDefinitionNode.metadata().get(), 1, 0);\n+            classDefinitionNode = classDefinitionNode.modify().withMetadata(metadata).apply();\n+        }\n+\n+        if (classDefinitionNode.visibilityQualifier().isPresent()) {\n+            Token visibilityQualifier = formatToken(classDefinitionNode.visibilityQualifier().get(), 1, 0);\n+            classDefinitionNode = classDefinitionNode.modify().withVisibilityQualifier(visibilityQualifier).apply();\n+        }\n+\n+        NodeList<Token> classTypeQualifiers = formatNodeList(classDefinitionNode.classTypeQualifiers(), 1, 0, 1, 0);\n+        Token classKeyword = formatToken(classDefinitionNode.classKeyword(), 1, 0);\n+        Token className = formatToken(classDefinitionNode.className(), 1, 0);\n+        Token openBrace = formatToken(classDefinitionNode.openBrace(), 0, 1);\n+        this.preserveNewlines = true;\n+\n+        indent();\n+        NodeList<Node> members = formatNodeList(classDefinitionNode.members(), 0, 1, 0, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTc5ODE5OnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0Njo0N1rOHh_r9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0Njo0N1rOHh_r9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwODUwMw==", "bodyText": "Lets remove this commented out line", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505408503", "createdAt": "2020-10-15T09:46:47Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -387,6 +387,7 @@ public RequiredParameterNode transform(RequiredParameterNode requiredParameterNo\n     @Override\n     public FunctionBodyBlockNode transform(FunctionBodyBlockNode functionBodyBlockNode) {\n         Token openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n+//        this.preserveNewlines = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTgwMjAyOnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0NzozMVrOHh_uUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0NzozMVrOHh_uUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwOTEwNQ==", "bodyText": "This line might be longer than 120", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505409105", "createdAt": "2020-10-15T09:47:31Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -323,8 +323,8 @@ public FunctionDefinitionNode transform(FunctionDefinitionNode functionDefinitio\n         Token functionKeyword = formatToken(functionDefinitionNode.functionKeyword(), 1, 0);\n         IdentifierToken functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n         FunctionSignatureNode functionSignatureNode = formatNode(functionDefinitionNode.functionSignature(), 1, 0);\n-        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(),\n-                this.trailingWS, this.trailingNL);\n+        //TODO: Fix formatting issue when the function is within a class definition declaration.\n+        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(), this.trailingWS, this.trailingNL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTgxNDM5OnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/test/resources/actions/query/assert/query_action_1.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1MDoxOVrOHh_2FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1MDoxOVrOHh_2FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMTA5Mg==", "bodyText": "This assert is not correct. Let's keep the original for now.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505411092", "createdAt": "2020-10-15T09:50:19Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/actions/query/assert/query_action_1.bal", "diffHunk": "@@ -4,15 +4,13 @@ type Student record {\n };\n \n public function main() {\n-    Student[] studentList = [\n-        {\n-            firstName : \"Michelle\", \n-            gpa : 3.5\n-        }\n-    ];\n-    var result = from var student in studentList do {\n-        var name = {\n-            firstName : student.firstName\n+    Student[] studentList = [{\n+        firstName: \"Michelle\",\n+        gpa: 3.5\n+    }];\n+    var result = from var student in studentList\n+        do {\n+\n+            var name = { firstName: student.firstName };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTgyMDkxOnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/assert/class_definition_declaration_13.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1MTo1OVrOHh_6RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDo0MDo1NFrOHiBs9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMjE2NA==", "bodyText": "This also looks wrong. Lets keep the original", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505412164", "createdAt": "2020-10-15T09:51:59Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/assert/class_definition_declaration_13.bal", "diffHunk": "@@ -1,5 +1,6 @@\n readonly distinct class Foo {\n     string name;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ0MTUyNg==", "bodyText": "Isn't it a explicitly preserved newline added by the user?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505441526", "createdAt": "2020-10-15T10:40:54Z", "author": {"login": "sanjana"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/assert/class_definition_declaration_13.bal", "diffHunk": "@@ -1,5 +1,6 @@\n readonly distinct class Foo {\n     string name;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMjE2NA=="}, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTgyMTk2OnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/assert/class_definition_declaration_16.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1MjoxMVrOHh_69g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1MjoxMVrOHh_69g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMjM0Mg==", "bodyText": "Same here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505412342", "createdAt": "2020-10-15T09:52:11Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/assert/class_definition_declaration_16.bal", "diffHunk": "@@ -2,7 +2,7 @@ class Student {\n     public function foo() {\n         string x = \"abc\";\n     }\n-\n     int a;\n     int b;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTgyNTQwOnYy", "diffSide": "LEFT", "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/assert/class_definition_declaration_17.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1Mjo1NlrOHh_9Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1Mjo1NlrOHh_9Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMjkzOA==", "bodyText": "Same here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505412938", "createdAt": "2020-10-15T09:52:56Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/assert/class_definition_declaration_17.bal", "diffHunk": "@@ -1,14 +1,8 @@\n class Foo {\n     public function init() {\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTgzMDI2OnYy", "diffSide": "LEFT", "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/assert/class_definition_declaration_3.bal", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1NDowMlrOHiAARw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDo0NToyN1rOHiB2fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMzcwMw==", "bodyText": "Same", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505413703", "createdAt": "2020-10-15T09:54:02Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/assert/class_definition_declaration_3.bal", "diffHunk": "@@ -2,10 +2,8 @@ class Foo {\n     public remote function foo() {\n         int x = 0;\n     }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ0Mzk2NQ==", "bodyText": "Could you please further elaborate?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505443965", "createdAt": "2020-10-15T10:45:27Z", "author": {"login": "sanjana"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/assert/class_definition_declaration_3.bal", "diffHunk": "@@ -2,10 +2,8 @@ class Foo {\n     public remote function foo() {\n         int x = 0;\n     }\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMzcwMw=="}, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTgzMjg1OnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/source/class_definition_declaration_15.bal", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1NDozM1rOHiABtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTozNzo1MFrOHiDjew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNDA3MA==", "bodyText": "same for this entire file", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505414070", "createdAt": "2020-10-15T09:54:33Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/source/class_definition_declaration_15.bal", "diffHunk": "@@ -1,32 +1,32 @@\n       client\n    readonly\n          distinct\n-\n-     class  Foo\n+            class  Foo", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ0NDM1Mw==", "bodyText": "This is a source file, so should it be changed as well?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505444353", "createdAt": "2020-10-15T10:46:08Z", "author": {"login": "sanjana"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/source/class_definition_declaration_15.bal", "diffHunk": "@@ -1,32 +1,32 @@\n       client\n    readonly\n          distinct\n-\n-     class  Foo\n+            class  Foo", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNDA3MA=="}, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3MTg2Nw==", "bodyText": "ack", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505471867", "createdAt": "2020-10-15T11:37:50Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/source/class_definition_declaration_15.bal", "diffHunk": "@@ -1,32 +1,32 @@\n       client\n    readonly\n          distinct\n-\n-     class  Foo\n+            class  Foo", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNDA3MA=="}, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTgzNTAxOnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/source/class_definition_declaration_2.bal", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1NTowMlrOHiADAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTozNzo1NlrOHiDjpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNDQwMQ==", "bodyText": "same here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505414401", "createdAt": "2020-10-15T09:55:02Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/source/class_definition_declaration_2.bal", "diffHunk": "@@ -2,6 +2,8 @@ class\n     Person\n \n        {\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ0NDYxOA==", "bodyText": "This is also a source file. Should it be reformatted?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505444618", "createdAt": "2020-10-15T10:46:39Z", "author": {"login": "sanjana"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/source/class_definition_declaration_2.bal", "diffHunk": "@@ -2,6 +2,8 @@ class\n     Person\n \n        {\n+\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNDQwMQ=="}, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3MTkxMA==", "bodyText": "ack", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505471910", "createdAt": "2020-10-15T11:37:56Z", "author": {"login": "SupunS"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/declarations/class-definition/source/class_definition_declaration_2.bal", "diffHunk": "@@ -2,6 +2,8 @@ class\n     Person\n \n        {\n+\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNDQwMQ=="}, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTg0Mjk1OnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1Njo1MFrOHiAIDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1Njo1MFrOHiAIDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNTY5NQ==", "bodyText": "Shall we remove this comment?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505415695", "createdAt": "2020-10-15T09:56:50Z", "author": {"login": "IrushiL"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -387,6 +387,7 @@ public RequiredParameterNode transform(RequiredParameterNode requiredParameterNo\n     @Override\n     public FunctionBodyBlockNode transform(FunctionBodyBlockNode functionBodyBlockNode) {\n         Token openBrace = formatToken(functionBodyBlockNode.openBraceToken(), 0, 1);\n+//        this.preserveNewlines = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTg0ODk1OnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1ODoxNlrOHiALoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1ODoxNlrOHiALoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNjYwOQ==", "bodyText": "This line seems to be exceeding the line limit.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26358#discussion_r505416609", "createdAt": "2020-10-15T09:58:16Z", "author": {"login": "IrushiL"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/NewFormattingTreeModifier.java", "diffHunk": "@@ -323,8 +323,8 @@ public FunctionDefinitionNode transform(FunctionDefinitionNode functionDefinitio\n         Token functionKeyword = formatToken(functionDefinitionNode.functionKeyword(), 1, 0);\n         IdentifierToken functionName = formatToken(functionDefinitionNode.functionName(), 0, 0);\n         FunctionSignatureNode functionSignatureNode = formatNode(functionDefinitionNode.functionSignature(), 1, 0);\n-        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(),\n-                this.trailingWS, this.trailingNL);\n+        //TODO: Fix formatting issue when the function is within a class definition declaration.\n+        FunctionBodyNode functionBodyNode = formatNode(functionDefinitionNode.functionBody(), this.trailingWS, this.trailingNL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e75d92ffba4062f0d4a257a9dd76a4b694ec1456"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4733, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}