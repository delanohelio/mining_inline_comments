{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5ODcxMTQ1", "number": 22925, "title": "Adds the Java casting functionality to java module in the stdlib", "bodyText": "Purpose\nAdds the Java type casting implementation into the java module of the Ballerina standard library.\nFixes #22718\nApproach\nJava type casting could be done on Ballerina object representations of Java classes (Ballerina bindings created to map Java objects). In order to use this Java type casting functionality, a Ballerina binding object should be of the following kind,\n\nIt should implement the Ballerina java:JObject abstract object. This is the Ballerina abstract  object that represents a Ballerina binding object for a Java class.\nIt should have the @java:Binding annotation, which stores the fully qualified name of the Java class that is represented through the Ballerina object.\n\nThe above mentioned JObject abstract object and the Binding annotation are added into the java module of the Ballerina standard library through this PR. Binding objects of this nature could be auto generated using the bindgen tool available inside the Ballerina distribution.\nSamples\nFunction:\n# Returns an `any|error`, which is obtained after casting the provided `JObject`\n# instance to the given `JObject` type depending on assignability.\n#\n# + value    - The JObject `object` instance which is to be casted\n# + castType - The JObject implementation type `typedesc<object>` to which \n#              the given object is casted to if assignable\n# + return   - The `any|error`, which refers to the new JObject `object` instance \n#              or an `error`\npublic function cast(any value, typedesc<any> castType) returns any|error = external;\nExample:\nany|error obj = java:cast(inputStream, typedesc<FileInputStream>);\nif (obj is any) {\n   FileInputStream fileInputStream = <FileInputStream>obj;\n}\nFileInputStream fileInputStream = check java:cast(inputStream, typedesc<FileInputStream>);\nRefer the test cases included in this PR for more samples.\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-28T04:13:25Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22925", "merged": true, "mergeCommit": {"oid": "b8543184a07501dadd1bd3e57eff75fb039b748e"}, "closed": true, "closedAt": "2020-06-10T04:58:13Z", "author": {"login": "IrushiL"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcb74usAH2gAyNDA5ODcxMTQ1OmE3ZjQ4NjI1ZDI1Y2Q0YzlhMWE2NzJlODAxNzA1NjBhZTZhZTdlNGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpaGyDgH2gAyNDA5ODcxMTQ1OjliYWIzYWE3N2I4MmQ4ODZjYTA3OWVhYjhhNjUyMTM0M2YwNTJkNTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a7f48625d25cd4c9a1a672e80170560ae6ae7e4f", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a7f48625d25cd4c9a1a672e80170560ae6ae7e4f", "committedDate": "2020-04-28T04:08:24Z", "message": "Add the Java casting implementation to stdlib"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45bb526fe2fcf4fc5136e6cc441c3ee62a4330fa", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/45bb526fe2fcf4fc5136e6cc441c3ee62a4330fa", "committedDate": "2020-04-28T04:08:34Z", "message": "Add the array utils to stdlib"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cbade2d91c18e2f3c3cdacc304cf4e8551e5bda3", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cbade2d91c18e2f3c3cdacc304cf4e8551e5bda3", "committedDate": "2020-04-28T12:12:37Z", "message": "Refactor and improve the code"}, "afterCommit": {"oid": "21901a6cc849e52c386473852f874e75d4caca96", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/21901a6cc849e52c386473852f874e75d4caca96", "committedDate": "2020-04-28T12:17:12Z", "message": "Refactor and improve the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d717795a55f51e3a16c58447285dcb05911f7da2", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d717795a55f51e3a16c58447285dcb05911f7da2", "committedDate": "2020-04-28T14:24:07Z", "message": "Refactor and improve the code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21901a6cc849e52c386473852f874e75d4caca96", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/21901a6cc849e52c386473852f874e75d4caca96", "committedDate": "2020-04-28T12:17:12Z", "message": "Refactor and improve the code"}, "afterCommit": {"oid": "d717795a55f51e3a16c58447285dcb05911f7da2", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d717795a55f51e3a16c58447285dcb05911f7da2", "committedDate": "2020-04-28T14:24:07Z", "message": "Refactor and improve the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ceaebdae2776052d7b8cca3998c7aca2d98cfd2", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8ceaebdae2776052d7b8cca3998c7aca2d98cfd2", "committedDate": "2020-04-29T07:28:24Z", "message": "Add unit tests for the java cast function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f156c1b77e90e72b226c8d14f54932fcc4e785e5", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f156c1b77e90e72b226c8d14f54932fcc4e785e5", "committedDate": "2020-04-29T07:37:14Z", "message": "Change array util function names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20849d5e3012182eb48cf1fa3bdf434b4c3789f3", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/20849d5e3012182eb48cf1fa3bdf434b4c3789f3", "committedDate": "2020-05-05T23:03:04Z", "message": "Modify the cast function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40822a8df38b7cae8950fdbbbad0174833e80b32", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/40822a8df38b7cae8950fdbbbad0174833e80b32", "committedDate": "2020-05-08T13:16:07Z", "message": "Remove the array util functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dbaa279d25aa3dbcc55d63d8568d12bfa9b8af2", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8dbaa279d25aa3dbcc55d63d8568d12bfa9b8af2", "committedDate": "2020-05-08T15:47:06Z", "message": "Add typeParam annotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec5e849899c02f39bdb791046de7022d70c7321d", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ec5e849899c02f39bdb791046de7022d70c7321d", "committedDate": "2020-05-08T16:10:45Z", "message": "Change the cast function return type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNzg3NDcz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22925#pullrequestreview-410787473", "createdAt": "2020-05-13T10:20:12Z", "commit": {"oid": "ec5e849899c02f39bdb791046de7022d70c7321d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDoyMDoxMlrOGUrGKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDoyMDo1OVrOGUrHpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMzMDc5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + value - The JObject `object` instance which is to be casted\n          \n          \n            \n            # + value - The JObject `object` instance, which is to be casted", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22925#discussion_r424330793", "createdAt": "2020-05-13T10:20:12Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -74,3 +74,16 @@ public function createNull() returns handle = external;\n # + return - The Java Class object for the class with the given name\n public function getClass(string name) returns handle | error = external;\n \n+# Returns an `any|error`, which is obtained after casting the provided `JObject` instance\n+# to the given `JObject` type depending on assignability.\n+# ```ballerina\n+# any|error obj = java:cast(inputStream, typedesc<FileInputStream>);\n+# if (obj is any) {\n+#   FileInputStream fileInputStream = <FileInputStream>obj;\n+# }\n+# ```\n+#\n+# + value - The JObject `object` instance which is to be casted", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5e849899c02f39bdb791046de7022d70c7321d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMzMTAwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + castType - The JObject implementation type `typedesc<object>` to which the given object is casted to if assignable\n          \n          \n            \n            # + castType - The `JObject` implementation type `typedesc<object>` to which the given object is casted to if assignable", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22925#discussion_r424331007", "createdAt": "2020-05-13T10:20:38Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -74,3 +74,16 @@ public function createNull() returns handle = external;\n # + return - The Java Class object for the class with the given name\n public function getClass(string name) returns handle | error = external;\n \n+# Returns an `any|error`, which is obtained after casting the provided `JObject` instance\n+# to the given `JObject` type depending on assignability.\n+# ```ballerina\n+# any|error obj = java:cast(inputStream, typedesc<FileInputStream>);\n+# if (obj is any) {\n+#   FileInputStream fileInputStream = <FileInputStream>obj;\n+# }\n+# ```\n+#\n+# + value - The JObject `object` instance which is to be casted\n+# + castType - The JObject implementation type `typedesc<object>` to which the given object is casted to if assignable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5e849899c02f39bdb791046de7022d70c7321d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMzMTE3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This class contains the implementation of the \"cast\" Ballerina function in ballerina/java module.\n          \n          \n            \n             * This class contains the implementation of the \"cast\" Ballerina function in the `ballerina/java` module.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22925#discussion_r424331173", "createdAt": "2020-05-13T10:20:59Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/java/org/ballerinalang/nativeimpl/java/Cast.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.nativeimpl.java;\n+\n+import org.ballerinalang.jvm.StringUtils;\n+import org.ballerinalang.jvm.scheduling.Strand;\n+import org.ballerinalang.jvm.types.BField;\n+import org.ballerinalang.jvm.types.BObjectType;\n+import org.ballerinalang.jvm.types.BType;\n+import org.ballerinalang.jvm.types.BTypedescType;\n+import org.ballerinalang.jvm.values.HandleValue;\n+import org.ballerinalang.jvm.values.TypedescValue;\n+import org.ballerinalang.jvm.values.api.BObject;\n+import org.ballerinalang.model.types.TypeKind;\n+import org.ballerinalang.natives.annotations.Argument;\n+import org.ballerinalang.natives.annotations.BallerinaFunction;\n+import org.ballerinalang.natives.annotations.ReturnType;\n+\n+import java.util.Map;\n+\n+import static org.ballerinalang.jvm.BallerinaErrors.createError;\n+import static org.ballerinalang.jvm.values.api.BValueCreator.createObjectValue;\n+\n+/**\n+ * This class contains the implementation of the \"cast\" Ballerina function in ballerina/java module.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5e849899c02f39bdb791046de7022d70c7321d"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d8d0556d224e73273dd4a8977669e2c0524b8a9", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9d8d0556d224e73273dd4a8977669e2c0524b8a9", "committedDate": "2020-05-13T11:24:55Z", "message": "Fix Doc comment\n\nCo-authored-by: praneesha <praneesha@wso2.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "244c608d64af53595712dfe9870ec7b0e0080e05", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/244c608d64af53595712dfe9870ec7b0e0080e05", "committedDate": "2020-05-13T11:25:44Z", "message": "Fix Doc comment\n\nCo-authored-by: praneesha <praneesha@wso2.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d68b8c265b5d977ec27fd11b6f55348ce8fa699", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6d68b8c265b5d977ec27fd11b6f55348ce8fa699", "committedDate": "2020-05-13T11:26:22Z", "message": "Fix Doc comment\n\nCo-authored-by: praneesha <praneesha@wso2.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1OTAwNjYz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22925#pullrequestreview-425900663", "createdAt": "2020-06-08T03:49:19Z", "commit": {"oid": "6d68b8c265b5d977ec27fd11b6f55348ce8fa699"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23618656216c603b6a4b947a5e911f1bba66fe65", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/23618656216c603b6a4b947a5e911f1bba66fe65", "committedDate": "2020-06-09T00:39:50Z", "message": "Address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7279c44dc93186b4607f8298be4892e745bdaceb", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7279c44dc93186b4607f8298be4892e745bdaceb", "committedDate": "2020-06-09T00:40:20Z", "message": "Fix issues in documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bab3aa77b82d886ca079eab8a6521343f052d50", "author": {"user": {"login": "IrushiL", "name": "Irushi Liyanage"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9bab3aa77b82d886ca079eab8a6521343f052d50", "committedDate": "2020-06-09T00:41:55Z", "message": "Merge branch 'ballerina-1.2.x' into stdLibUtils12x"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3502, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}