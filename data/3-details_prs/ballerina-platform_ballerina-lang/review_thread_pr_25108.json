{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMjA3MjM2", "number": 25108, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNToyNDo0MlrOEVQ2NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo1Njo0OVrOFE7G-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzMxNTcyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNToyNDo0MlrOG76qwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNToyNDo0MlrOG76qwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4MDM4NQ==", "bodyText": "Change the name to QUERY_SORT_STREAM_FUNCTION and the function name to sortStream, since it's not creating new objects.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465480385", "createdAt": "2020-08-05T05:24:42Z", "author": {"login": "grainier"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "diffHunk": "@@ -194,6 +194,7 @@\n     private static final Name QUERY_CREATE_SELECT_FUNCTION = new Name(\"createSelectFunction\");\n     private static final Name QUERY_CREATE_DO_FUNCTION = new Name(\"createDoFunction\");\n     private static final Name QUERY_CREATE_LIMIT_FUNCTION = new Name(\"createLimitFunction\");\n+    private static final Name QUERY_CREATE_SORT_STREAM_FUNCTION = new Name(\"sortStreamFunction\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzMyNDU5OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNToyOTozNFrOG76wFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNToyOTozNFrOG76wFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4MTc0OQ==", "bodyText": "I think both orderByClause and limitClause should be stacks. Please test whether it's working for inner queries with orderby or limit. i.e: from var p in (from var person in personList select person limit 2) select p;", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465481749", "createdAt": "2020-08-05T05:29:34Z", "author": {"login": "grainier"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "diffHunk": "@@ -205,6 +206,7 @@\n     private static final CompilerContext.Key<QueryDesugar> QUERY_DESUGAR_KEY = new CompilerContext.Key<>();\n     private BLangExpression onConflictExpr;\n     private BLangOrderByClause orderByClause;\n+    private BLangLimitClause limitClause;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzMyODQ2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTozMToxNVrOG76yRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTozMToxNVrOG76yRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4MjMwOA==", "bodyText": "This might lead to NPE with inner queries. Refer to the above comment.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465482308", "createdAt": "2020-08-05T05:31:15Z", "author": {"login": "grainier"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "diffHunk": "@@ -247,11 +249,21 @@ BLangStatementExpression desugar(BLangQueryExpr queryExpr, SymbolEnv env) {\n         BLangVariableReference streamRef = buildStream(clauses, queryExpr.type, env, queryBlock);\n         BLangStatementExpression streamStmtExpr;\n         if (orderByClause != null) {\n-            // Type[] arr passed to order by helper\n+            // Type[] arr passed to stream ordering helper.\n             BLangArrayLiteral orderArr = (BLangArrayLiteral) TreeBuilder.createArrayLiteralExpressionNode();\n             orderArr.exprs = new ArrayList<>();\n             orderArr.type = new BArrayType(types.resolveExprType(queryExpr.type));\n-            streamRef = sortStream(queryBlock, orderByClause, streamRef, orderArr);\n+            if (limitClause != null) {\n+                // should limit after ordering the stream\n+                streamRef = getStreamFunctionVariableRef(queryBlock, QUERY_CREATE_SORT_STREAM_FUNCTION,\n+                        Lists.of(streamRef, orderArr, limitClause.expression), orderByClause.pos);\n+            } else {\n+                streamRef = getStreamFunctionVariableRef(queryBlock, QUERY_CREATE_SORT_STREAM_FUNCTION,\n+                        Lists.of(streamRef, orderArr, ASTBuilderUtil.createLiteral(orderByClause.pos, symTable.intType,\n+                                (long) 0)), orderByClause.pos);\n+            }\n+            orderByClause = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzMzNjc2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTozNToxOFrOG763EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwOTowODozN1rOG8BAvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4MzUzNw==", "bodyText": "Can't we have an order-by and a limit together in a query? i.e. get first two events after ordering the stream.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465483537", "createdAt": "2020-08-05T05:35:18Z", "author": {"login": "grainier"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "diffHunk": "@@ -364,8 +378,12 @@ BLangVariableReference buildStream(List<BLangNode> clauses, BType resultType, Sy\n                     addStreamFunction(block, initPipeline, doFunc);\n                     break;\n                 case LIMIT:\n-                    BLangVariableReference limitFunc = addLimitFunction(block, (BLangLimitClause) clause);\n-                    addStreamFunction(block, initPipeline, limitFunc);\n+                    limitClause = (BLangLimitClause) clause;\n+                    // limit the frames if order by clause is not given\n+                    if (orderByClause == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4NDMxOQ==", "bodyText": "This is handled in line no 257 to 266", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465584319", "createdAt": "2020-08-05T09:08:37Z", "author": {"login": "lasinicl"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "diffHunk": "@@ -364,8 +378,12 @@ BLangVariableReference buildStream(List<BLangNode> clauses, BType resultType, Sy\n                     addStreamFunction(block, initPipeline, doFunc);\n                     break;\n                 case LIMIT:\n-                    BLangVariableReference limitFunc = addLimitFunction(block, (BLangLimitClause) clause);\n-                    addStreamFunction(block, initPipeline, limitFunc);\n+                    limitClause = (BLangLimitClause) clause;\n+                    // limit the frames if order by clause is not given\n+                    if (orderByClause == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4MzUzNw=="}, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzM2OTE0OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTo1MDozM1rOG77KDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTo1MDozM1rOG77KDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4ODM5OA==", "bodyText": "You can use createActionLambda method here.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465488398", "createdAt": "2020-08-05T05:50:33Z", "author": {"login": "grainier"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/QueryDesugar.java", "diffHunk": "@@ -575,42 +594,48 @@ BLangVariableReference addWhereFunction(BLangBlockStmt blockStmt, BLangWhereClau\n     }\n \n     /**\n-     * Desugar order by clause and return a reference to created order by function.\n+     * Desugar orderByClause to below and return a reference to created orderBy _StreamFunction.\n+     * _StreamFunction orderByFunc = createOrderByFunction(function(_Frame frame) {\n+     * _Frame frame = {\"orderKey\": frame[\"x2\"] + frame[\"y2\"], $orderDirection$: true + false\"};\n+     * });\n      *\n      * @param blockStmt parent block to write to.\n      * @param orderByClause  to be desugared.\n-     * @param streamRef reference to the stream output.\n-     * @return variableReference to created order by function.\n+     * @return variableReference to created orderBy _StreamFunction.\n      */\n-    BLangVariableReference sortStream(BLangBlockStmt blockStmt, BLangOrderByClause orderByClause,\n-                                                      BLangVariableReference streamRef, BLangArrayLiteral arr) {\n-\n+    BLangVariableReference addOrderByFunction(BLangBlockStmt blockStmt, BLangOrderByClause orderByClause) {\n         DiagnosticPos pos = orderByClause.pos;\n-\n-        // order by name descending, age ascending\n-        // sortFieldsArrayExpr keeps the ordering fields --> name, age\n-        // sortModesArrayExpr keeps the order direction --> false, true\n+        BLangLambdaFunction lambda = createLambdaFunction(pos, getNilTypeNode(), null, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzM3NjQ5OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTo1NDowM1rOG77OYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTo1NDowM1rOG77OYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ4OTUwNg==", "bodyText": "Shall we refactor this method name to isBasicType?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465489506", "createdAt": "2020-08-05T05:54:03Z", "author": {"login": "grainier"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -3468,14 +3468,15 @@ public BType resolveExprType(BType type) {\n     }\n \n     /**\n-     * Check whether a type is a basic type.\n+     * Check whether a order-key expression type is a basic type.\n      *\n-     * @param type type of the field.\n+     * @param type type of the order-key expression.\n      * @return boolean whether the type is basic type or not.\n      */\n     public boolean checkBasicType(BType type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzM4MzA3OnYy", "diffSide": "RIGHT", "path": "langlib/lang.query/src/main/ballerina/src/lang.query/types.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTo1Njo1N1rOG77SMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwOToyMzowNFrOG8Bg9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ5MDQ4MQ==", "bodyText": "Why these are top-level? Wouldn't it affect when desugaring multiple queries (also inner, nested) with order clauses?  I think it should go inside _OrderByFunction", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465490481", "createdAt": "2020-08-05T05:56:57Z", "author": {"login": "grainier"}, "path": "langlib/lang.query/src/main/ballerina/src/lang.query/types.bal", "diffHunk": "@@ -34,6 +34,9 @@ type Type any|error;\n @typeParam\n type ErrorType error?;\n \n+anydata[][] orderFieldValsArr = [];\n+boolean[] orderDirectionsArr = [];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU5MjU2Ng==", "bodyText": "These arrays are accessed outside _OrderByFunction when adding values to the arrays and sorting. They are emptied in _OrderByFunction so that it won't be an issue when there are multiple queries.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465592566", "createdAt": "2020-08-05T09:23:04Z", "author": {"login": "lasinicl"}, "path": "langlib/lang.query/src/main/ballerina/src/lang.query/types.bal", "diffHunk": "@@ -34,6 +34,9 @@ type Type any|error;\n @typeParam\n type ErrorType error?;\n \n+anydata[][] orderFieldValsArr = [];\n+boolean[] orderDirectionsArr = [];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ5MDQ4MQ=="}, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzM5NDA4OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/query/OrderByClauseTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjowMjoyNFrOG77Y7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwOToyNDozMVrOG8BkNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ5MjIwNg==", "bodyText": "Add some tests for inner queries", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465492206", "createdAt": "2020-08-05T06:02:24Z", "author": {"login": "grainier"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/query/OrderByClauseTest.java", "diffHunk": "@@ -126,19 +127,87 @@ public void testQueryExprWithOrderByClauseAndJoin() {\n         Assert.assertEquals(((BInteger) customer4.get(\"noOfItems\")).intValue(), 25);\n     }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU5MzM5Nw==", "bodyText": "Added in commit 546393a", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r465593397", "createdAt": "2020-08-05T09:24:31Z", "author": {"login": "lasinicl"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/query/OrderByClauseTest.java", "diffHunk": "@@ -126,19 +127,87 @@ public void testQueryExprWithOrderByClauseAndJoin() {\n         Assert.assertEquals(((BInteger) customer4.get(\"noOfItems\")).intValue(), 25);\n     }\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ5MjIwNg=="}, "originalCommit": {"oid": "34607eb1b5476846e2381be0324f5aadfa590e77"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzA2ODg1OnYy", "diffSide": "RIGHT", "path": "language-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion2.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo1NjoyN1rOIFK8AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNTowMjo0N1rOIF5DdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5Mjk5Mg==", "bodyText": "new line", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r542292992", "createdAt": "2020-12-14T10:56:27Z", "author": {"login": "gimantha"}, "path": "language-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion2.json", "diffHunk": "@@ -714,4 +758,4 @@\n       \"insertTextFormat\": \"Snippet\"\n     }\n   ]\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "465dda3cba44f5fcee608308fde0b6b5cf49f33c"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA0ODU2NA==", "bodyText": "Fixed in 101c1d1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r543048564", "createdAt": "2020-12-15T05:02:47Z", "author": {"login": "lasinicl"}, "path": "language-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion2.json", "diffHunk": "@@ -714,4 +758,4 @@\n       \"insertTextFormat\": \"Snippet\"\n     }\n   ]\n-}\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5Mjk5Mg=="}, "originalCommit": {"oid": "465dda3cba44f5fcee608308fde0b6b5cf49f33c"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzA3MDY1OnYy", "diffSide": "RIGHT", "path": "language-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion3.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo1Njo0OVrOIFK9AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNTowMjo1N1rOIF5Dog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5MzI0OA==", "bodyText": "new line", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r542293248", "createdAt": "2020-12-14T10:56:49Z", "author": {"login": "gimantha"}, "path": "language-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion3.json", "diffHunk": "@@ -714,4 +758,4 @@\n       \"insertTextFormat\": \"Snippet\"\n     }\n   ]\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "465dda3cba44f5fcee608308fde0b6b5cf49f33c"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5MzM0OA==", "bodyText": "check other places also", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r542293348", "createdAt": "2020-12-14T10:57:01Z", "author": {"login": "gimantha"}, "path": "language-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion3.json", "diffHunk": "@@ -714,4 +758,4 @@\n       \"insertTextFormat\": \"Snippet\"\n     }\n   ]\n-}\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5MzI0OA=="}, "originalCommit": {"oid": "465dda3cba44f5fcee608308fde0b6b5cf49f33c"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA0ODYxMA==", "bodyText": "Fixed in 101c1d1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25108#discussion_r543048610", "createdAt": "2020-12-15T05:02:57Z", "author": {"login": "lasinicl"}, "path": "language-server/modules/langserver-core/src/test/resources/completion/function/chainCompletion3.json", "diffHunk": "@@ -714,4 +758,4 @@\n       \"insertTextFormat\": \"Snippet\"\n     }\n   ]\n-}\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5MzI0OA=="}, "originalCommit": {"oid": "465dda3cba44f5fcee608308fde0b6b5cf49f33c"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 335, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}