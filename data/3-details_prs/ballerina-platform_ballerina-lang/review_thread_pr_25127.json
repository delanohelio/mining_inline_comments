{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNjU4NjQ0", "number": 25127, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozNjowMFrOEU8UCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozNjowMFrOEU8UCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzk1MTQ2OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/workers/workers.bal", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozNjowMFrOG7axkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNjoyNDoyOVrOG8k46g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1Nzg0MA==", "bodyText": "why we have to add a sleep here? do we know the root cause of this test failure ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25127#discussion_r464957840", "createdAt": "2020-08-04T10:36:00Z", "author": {"login": "Kishanthan"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/workers/workers.bal", "diffHunk": "@@ -543,6 +543,7 @@ function waitFor() {\n }\n \n function add2(int i, int j) returns int {\n+   runtime:sleep(1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5f3514e7ff6772e8632648d22cfe209afc9a18"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk2ODM1Nw==", "bodyText": "It is failing because all three code blocks are running parallely. At one point w2 can start and go to sleep then the future can start and run to completion in 1s and then w2 can resume and the result is returned before w1 can run. In which case test fails.\nAdding a sleep will delay the future also so w1 will for sure run to completion before w2 and the add2 method.\nI think the test is to test the scenario of First cancel the future and then wait . So this change will make sure the orders are correct. cancel the future and then wait\nhttps://github.com/ballerina-platform/ballerina-lang/pull/25127/files#diff-e545514cc5d1ac3d32ca50da10adc6d0R476-R493", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25127#discussion_r464968357", "createdAt": "2020-08-04T10:58:20Z", "author": {"login": "riyafa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/workers/workers.bal", "diffHunk": "@@ -543,6 +543,7 @@ function waitFor() {\n }\n \n function add2(int i, int j) returns int {\n+   runtime:sleep(1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1Nzg0MA=="}, "originalCommit": {"oid": "ba5f3514e7ff6772e8632648d22cfe209afc9a18"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE3MTc2Nw==", "bodyText": "after this sleep you have introduced, can you try and run the this particular test in a loop and verify?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25127#discussion_r466171767", "createdAt": "2020-08-06T06:23:21Z", "author": {"login": "Kishanthan"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/workers/workers.bal", "diffHunk": "@@ -543,6 +543,7 @@ function waitFor() {\n }\n \n function add2(int i, int j) returns int {\n+   runtime:sleep(1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1Nzg0MA=="}, "originalCommit": {"oid": "ba5f3514e7ff6772e8632648d22cfe209afc9a18"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE3MjEzOA==", "bodyText": "I have verified it by running it a 1000 times", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25127#discussion_r466172138", "createdAt": "2020-08-06T06:24:29Z", "author": {"login": "riyafa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/workers/workers.bal", "diffHunk": "@@ -543,6 +543,7 @@ function waitFor() {\n }\n \n function add2(int i, int j) returns int {\n+   runtime:sleep(1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1Nzg0MA=="}, "originalCommit": {"oid": "ba5f3514e7ff6772e8632648d22cfe209afc9a18"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 342, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}