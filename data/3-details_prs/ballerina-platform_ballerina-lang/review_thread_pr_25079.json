{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMTgzNzU0", "number": 25079, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOTo0NDoxM1rOEVJLFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOTo0NDoxM1rOEVJLFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjA1ODQ2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/tree/TreeTraversalAPITest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOTo0NDoxM1rOG7u-YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNToxNjo1NlrOG8jnww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI4ODgwMQ==", "bodyText": "We can enable these test cases by calculating the positions on the fly. Think of a way to get the positions during the runtime by using String.indexOf() methods", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25079#discussion_r465288801", "createdAt": "2020-08-04T19:44:13Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/tree/TreeTraversalAPITest.java", "diffHunk": "@@ -66,6 +66,22 @@ public void testFindTokenFromPosition() {\n         Assert.assertEquals(actualToken.toString(), expectedLexeme);\n     }\n \n+    @Test(enabled = false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3adb8520b40536a80f2539e8ff4f5cf3e25a3ed0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE1MTM2Mw==", "bodyText": "Added the change", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25079#discussion_r466151363", "createdAt": "2020-08-06T05:16:56Z", "author": {"login": "nadeeshaan"}, "path": "compiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/tree/TreeTraversalAPITest.java", "diffHunk": "@@ -66,6 +66,22 @@ public void testFindTokenFromPosition() {\n         Assert.assertEquals(actualToken.toString(), expectedLexeme);\n     }\n \n+    @Test(enabled = false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI4ODgwMQ=="}, "originalCommit": {"oid": "3adb8520b40536a80f2539e8ff4f5cf3e25a3ed0"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 325, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}