{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NTc1MjY1", "number": 25589, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo1MToyMVrOEhH_8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODo0NTowM1rOEhJQ5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTY5NTIyOnYy", "diffSide": "RIGHT", "path": "language-server/modules/langserver-core/spotbugs-exclude.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo1MToyMVrOHOQ_jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODo1MzowMlrOHOTTgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcyMDUyNQ==", "bodyText": "Is this unsafe cast unavoidable? we need to limit using spotbugs-exclusions", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25589#discussion_r484720525", "createdAt": "2020-09-08T07:51:21Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/spotbugs-exclude.xml", "diffHunk": "@@ -64,6 +64,12 @@\n             <Bug pattern=\"BC_UNCONFIRMED_CAST\" />\n         </OR>\n     </Match>\n+    <Match>\n+        <Class name=\"org.ballerinalang.langserver.completions.util.SortingUtil\" />\n+        <OR>\n+            <Bug pattern=\"BC_UNCONFIRMED_CAST\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb7c7e3520940204878061fa020b1d6bf37478bd"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc1ODQwMA==", "bodyText": "Yeah, this is because we depend on the kind instead of the instance of check", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25589#discussion_r484758400", "createdAt": "2020-09-08T08:53:02Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/spotbugs-exclude.xml", "diffHunk": "@@ -64,6 +64,12 @@\n             <Bug pattern=\"BC_UNCONFIRMED_CAST\" />\n         </OR>\n     </Match>\n+    <Match>\n+        <Class name=\"org.ballerinalang.langserver.completions.util.SortingUtil\" />\n+        <OR>\n+            <Bug pattern=\"BC_UNCONFIRMED_CAST\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcyMDUyNQ=="}, "originalCommit": {"oid": "bb7c7e3520940204878061fa020b1d6bf37478bd"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTkwMDg1OnYy", "diffSide": "RIGHT", "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ModulePartNodeContext.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODo0NDo0NFrOHOS_Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODo1MzozNFrOHOTUwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc1MzE2Ng==", "bodyText": "Shall we move this check into a util function in SortingUtil such as SortingUtil.isKeywordCompletionItem(item)?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25589#discussion_r484753166", "createdAt": "2020-09-08T08:44:44Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ModulePartNodeContext.java", "diffHunk": "@@ -57,7 +63,35 @@ public ModulePartNodeContext() {\n         completionItems.addAll(addTopLevelItems(context));\n         completionItems.addAll(this.getTypeItems(context));\n         completionItems.addAll(this.getPackagesCompletionItems(context));\n+        this.sort(context, node, completionItems);\n \n         return completionItems;\n     }\n+\n+    @Override\n+    public void sort(LSContext context, ModulePartNode node, List<LSCompletionItem> items, Object... metaData) {\n+        for (LSCompletionItem item : items) {\n+            CompletionItem cItem = item.getCompletionItem();\n+            if (item instanceof SnippetCompletionItem\n+                    && (((SnippetCompletionItem) item).kind() == SnippetBlock.Kind.SNIPPET\n+                    || ((SnippetCompletionItem) item).kind() == SnippetBlock.Kind.STATEMENT)) {\n+                cItem.setSortText(genSortText(1));\n+                continue;\n+            }\n+            if (item instanceof SnippetCompletionItem\n+                    && ((SnippetCompletionItem) item).kind() == SnippetBlock.Kind.KEYWORD) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb7c7e3520940204878061fa020b1d6bf37478bd"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc1ODcyMg==", "bodyText": "Sounds good, will do.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25589#discussion_r484758722", "createdAt": "2020-09-08T08:53:34Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ModulePartNodeContext.java", "diffHunk": "@@ -57,7 +63,35 @@ public ModulePartNodeContext() {\n         completionItems.addAll(addTopLevelItems(context));\n         completionItems.addAll(this.getTypeItems(context));\n         completionItems.addAll(this.getPackagesCompletionItems(context));\n+        this.sort(context, node, completionItems);\n \n         return completionItems;\n     }\n+\n+    @Override\n+    public void sort(LSContext context, ModulePartNode node, List<LSCompletionItem> items, Object... metaData) {\n+        for (LSCompletionItem item : items) {\n+            CompletionItem cItem = item.getCompletionItem();\n+            if (item instanceof SnippetCompletionItem\n+                    && (((SnippetCompletionItem) item).kind() == SnippetBlock.Kind.SNIPPET\n+                    || ((SnippetCompletionItem) item).kind() == SnippetBlock.Kind.STATEMENT)) {\n+                cItem.setSortText(genSortText(1));\n+                continue;\n+            }\n+            if (item instanceof SnippetCompletionItem\n+                    && ((SnippetCompletionItem) item).kind() == SnippetBlock.Kind.KEYWORD) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc1MzE2Ng=="}, "originalCommit": {"oid": "bb7c7e3520940204878061fa020b1d6bf37478bd"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTkwMjQ1OnYy", "diffSide": "RIGHT", "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ModulePartNodeContext.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODo0NTowM1rOHOS__g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODo1MzozN1rOHOTU2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc1MzQwNg==", "bodyText": "Shall we move this check into a util function in SortingUtil such as SortingUtil.isStatementCompletionItem(item)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25589#discussion_r484753406", "createdAt": "2020-09-08T08:45:03Z", "author": {"login": "rasika"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ModulePartNodeContext.java", "diffHunk": "@@ -57,7 +63,35 @@ public ModulePartNodeContext() {\n         completionItems.addAll(addTopLevelItems(context));\n         completionItems.addAll(this.getTypeItems(context));\n         completionItems.addAll(this.getPackagesCompletionItems(context));\n+        this.sort(context, node, completionItems);\n \n         return completionItems;\n     }\n+\n+    @Override\n+    public void sort(LSContext context, ModulePartNode node, List<LSCompletionItem> items, Object... metaData) {\n+        for (LSCompletionItem item : items) {\n+            CompletionItem cItem = item.getCompletionItem();\n+            if (item instanceof SnippetCompletionItem\n+                    && (((SnippetCompletionItem) item).kind() == SnippetBlock.Kind.SNIPPET\n+                    || ((SnippetCompletionItem) item).kind() == SnippetBlock.Kind.STATEMENT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb7c7e3520940204878061fa020b1d6bf37478bd"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc1ODc0Ng==", "bodyText": "Sounds good, will do.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25589#discussion_r484758746", "createdAt": "2020-09-08T08:53:37Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/completions/providers/context/ModulePartNodeContext.java", "diffHunk": "@@ -57,7 +63,35 @@ public ModulePartNodeContext() {\n         completionItems.addAll(addTopLevelItems(context));\n         completionItems.addAll(this.getTypeItems(context));\n         completionItems.addAll(this.getPackagesCompletionItems(context));\n+        this.sort(context, node, completionItems);\n \n         return completionItems;\n     }\n+\n+    @Override\n+    public void sort(LSContext context, ModulePartNode node, List<LSCompletionItem> items, Object... metaData) {\n+        for (LSCompletionItem item : items) {\n+            CompletionItem cItem = item.getCompletionItem();\n+            if (item instanceof SnippetCompletionItem\n+                    && (((SnippetCompletionItem) item).kind() == SnippetBlock.Kind.SNIPPET\n+                    || ((SnippetCompletionItem) item).kind() == SnippetBlock.Kind.STATEMENT)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc1MzQwNg=="}, "originalCommit": {"oid": "bb7c7e3520940204878061fa020b1d6bf37478bd"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 169, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}