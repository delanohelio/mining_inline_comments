{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MDYxOTE3", "number": 24583, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMDoxOToxOFrOEMA6jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzo1NjoxNFrOEM6Arg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDMzMzU5OnYy", "diffSide": "LEFT", "path": "bvm/ballerina-logging/src/main/java/org/ballerinalang/logging/BLogManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMDoxOToxOVrOGt4PPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMDoyODowOFrOGt4hkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc2MDUwOQ==", "bodyText": "Why are we removing this function?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r450760509", "createdAt": "2020-07-07T10:19:19Z", "author": {"login": "daneshk"}, "path": "bvm/ballerina-logging/src/main/java/org/ballerinalang/logging/BLogManager.java", "diffHunk": "@@ -118,15 +118,6 @@ public BLogLevel getPackageLogLevel(String pkg) {\n         return loggerLevels.containsKey(pkg) ? loggerLevels.get(pkg) : ballerinaUserLogLevel;\n     }\n \n-    /**\n-     * Get the global log level.\n-     *\n-     * @return ballerinaUserLogLevel\n-     */\n-    public BLogLevel getGlobalLogLevel() {\n-        return ballerinaUserLogLevel;\n-    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6475087b634f47f3e72dcd84c8cd59fe18a8ad0a"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc2NTIwMQ==", "bodyText": "This function is no longer used.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r450765201", "createdAt": "2020-07-07T10:28:08Z", "author": {"login": "MadhukaHarith92"}, "path": "bvm/ballerina-logging/src/main/java/org/ballerinalang/logging/BLogManager.java", "diffHunk": "@@ -118,15 +118,6 @@ public BLogLevel getPackageLogLevel(String pkg) {\n         return loggerLevels.containsKey(pkg) ? loggerLevels.get(pkg) : ballerinaUserLogLevel;\n     }\n \n-    /**\n-     * Get the global log level.\n-     *\n-     * @return ballerinaUserLogLevel\n-     */\n-    public BLogLevel getGlobalLogLevel() {\n-        return ballerinaUserLogLevel;\n-    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc2MDUwOQ=="}, "originalCommit": {"oid": "6475087b634f47f3e72dcd84c8cd59fe18a8ad0a"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDM0Njk1OnYy", "diffSide": "RIGHT", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMDoyMzoxNFrOGt4XaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjoyNzoxMlrOGuGWVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc2MjYwMQ==", "bodyText": "Shall we make the second param as nilable type public string? moduleName = ()", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r450762601", "createdAt": "2020-07-07T10:23:14Z", "author": {"login": "daneshk"}, "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -67,3 +91,31 @@ public function printTrace(anydata|(function () returns (anydata)) msg) = @java:\n public function printWarn(anydata|(function () returns (anydata)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n+\n+# Sets the module log level. If the module is not defined, the log level will be set to the current module.\n+# Following log levels are allowed.\n+#\n+# ERROR - error log level\n+#\n+# WARN - warn log level\n+#\n+# INFO - info log level\n+#\n+# DEBUG - debug log level\n+#\n+# TRACE - trace log level\n+#\n+# OFF - turns off logging\n+#\n+# ALL - enables all the log levels\n+#\n+# ```ballerina\n+# log:setModuleLevelLog(log:DEBUG, moduleName=\u201calpha\u201d);\n+# log:setModuleLevelLog(log:WARN);\n+# ```\n+#\n+# + logLevel - Log level to be set\n+# + moduleName - Name of the module\n+public function setModuleLogLevel(LogLevel logLevel, public string moduleName = \"\") = @java:Method {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6475087b634f47f3e72dcd84c8cd59fe18a8ad0a"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk5MTcwMg==", "bodyText": "Updated in 4bbc1b7", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r450991702", "createdAt": "2020-07-07T16:27:12Z", "author": {"login": "MadhukaHarith92"}, "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -67,3 +91,31 @@ public function printTrace(anydata|(function () returns (anydata)) msg) = @java:\n public function printWarn(anydata|(function () returns (anydata)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n+\n+# Sets the module log level. If the module is not defined, the log level will be set to the current module.\n+# Following log levels are allowed.\n+#\n+# ERROR - error log level\n+#\n+# WARN - warn log level\n+#\n+# INFO - info log level\n+#\n+# DEBUG - debug log level\n+#\n+# TRACE - trace log level\n+#\n+# OFF - turns off logging\n+#\n+# ALL - enables all the log levels\n+#\n+# ```ballerina\n+# log:setModuleLevelLog(log:DEBUG, moduleName=\u201calpha\u201d);\n+# log:setModuleLevelLog(log:WARN);\n+# ```\n+#\n+# + logLevel - Log level to be set\n+# + moduleName - Name of the module\n+public function setModuleLogLevel(LogLevel logLevel, public string moduleName = \"\") = @java:Method {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc2MjYwMQ=="}, "originalCommit": {"oid": "6475087b634f47f3e72dcd84c8cd59fe18a8ad0a"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDM1ODU5OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/resources/logging/log-project/src/hello/module_log_level.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMDoyNjozOFrOGt4eeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjoyNzowNlrOGuGWHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc2NDQwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                log:setModuleLogLevel(log:WARN, \"logorg/alpha\");\n          \n          \n            \n                log:setModuleLogLevel(log:WARN, moduleName = \"logorg/alpha\");", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r450764408", "createdAt": "2020-07-07T10:26:38Z", "author": {"login": "daneshk"}, "path": "tests/jballerina-integration-test/src/test/resources/logging/log-project/src/hello/module_log_level.bal", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import ballerina/log;\n+import logorg/alpha;\n+import logorg/beta;\n+\n+public function main() {\n+    log:setModuleLogLevel(log:WARN, \"logorg/alpha\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6475087b634f47f3e72dcd84c8cd59fe18a8ad0a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk5MTY0Ng==", "bodyText": "Updated in 4bbc1b7", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r450991646", "createdAt": "2020-07-07T16:27:06Z", "author": {"login": "MadhukaHarith92"}, "path": "tests/jballerina-integration-test/src/test/resources/logging/log-project/src/hello/module_log_level.bal", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import ballerina/log;\n+import logorg/alpha;\n+import logorg/beta;\n+\n+public function main() {\n+    log:setModuleLogLevel(log:WARN, \"logorg/alpha\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc2NDQwOA=="}, "originalCommit": {"oid": "6475087b634f47f3e72dcd84c8cd59fe18a8ad0a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjUzNzA1OnYy", "diffSide": "RIGHT", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODoyNToxMlrOGu0MqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNjozNTo0NVrOGvDhWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc0Mjg4OA==", "bodyText": "Can you check and verify that in the generated API docs for the log module this gets rendered correctly?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r451742888", "createdAt": "2020-07-08T18:25:12Z", "author": {"login": "pubudu91"}, "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -67,3 +91,31 @@ public function printTrace(anydata|(function () returns (anydata)) msg) = @java:\n public function printWarn(anydata|(function () returns (anydata)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n+\n+# Sets the module log level. If the module is not defined, the log level will be set to the current module.\n+# Following log levels are allowed.\n+#\n+# ERROR - error log level\n+#\n+# WARN - warn log level\n+#\n+# INFO - info log level\n+#\n+# DEBUG - debug log level\n+#\n+# TRACE - trace log level\n+#\n+# OFF - turns off logging\n+#\n+# ALL - enables all the log levels\n+#\n+# ```ballerina\n+# log:setModuleLevelLog(log:DEBUG, moduleName=\u201calpha\u201d);\n+# log:setModuleLevelLog(log:WARN);\n+# ```\n+#\n+# + logLevel - Log level to be set\n+# + moduleName - Name of the module", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bbc1b73166c7ed90f45928998a6ddeef3fdca3d"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk5Mzk0NA==", "bodyText": "Yes, I checked. It is rendered properly.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r451993944", "createdAt": "2020-07-09T06:35:45Z", "author": {"login": "MadhukaHarith92"}, "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -67,3 +91,31 @@ public function printTrace(anydata|(function () returns (anydata)) msg) = @java:\n public function printWarn(anydata|(function () returns (anydata)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n+\n+# Sets the module log level. If the module is not defined, the log level will be set to the current module.\n+# Following log levels are allowed.\n+#\n+# ERROR - error log level\n+#\n+# WARN - warn log level\n+#\n+# INFO - info log level\n+#\n+# DEBUG - debug log level\n+#\n+# TRACE - trace log level\n+#\n+# OFF - turns off logging\n+#\n+# ALL - enables all the log levels\n+#\n+# ```ballerina\n+# log:setModuleLevelLog(log:DEBUG, moduleName=\u201calpha\u201d);\n+# log:setModuleLevelLog(log:WARN);\n+# ```\n+#\n+# + logLevel - Log level to be set\n+# + moduleName - Name of the module", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc0Mjg4OA=="}, "originalCommit": {"oid": "4bbc1b73166c7ed90f45928998a6ddeef3fdca3d"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjU4ODczOnYy", "diffSide": "RIGHT", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo0MDoyNFrOGu0tVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo0MDoyNFrOGu0tVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1MTI1Mg==", "bodyText": "If the module is not defined -> If a module name is not specified", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r451751252", "createdAt": "2020-07-08T18:40:24Z", "author": {"login": "pubudu91"}, "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -67,3 +91,31 @@ public function printTrace(anydata|(function () returns (anydata)) msg) = @java:\n public function printWarn(anydata|(function () returns (anydata)) msg) = @java:Method {\n     class: \"org.ballerinalang.stdlib.log.Utils\"\n } external;\n+\n+# Sets the module log level. If the module is not defined, the log level will be set to the current module.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bbc1b73166c7ed90f45928998a6ddeef3fdca3d"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjYwOTU5OnYy", "diffSide": "RIGHT", "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/Utils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo0NjoyM1rOGu06lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNzozOToyMFrOGvFVbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1NDY0Ng==", "bodyText": "Instead of this switch case, you can use the existing API provided for converting a string log level value to a BLogLevel enum.\nLOG_MANAGER.setModuleLogLevel(BLogLevel.toBLogLevel(level), module);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r451754646", "createdAt": "2020-07-08T18:46:23Z", "author": {"login": "pubudu91"}, "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/Utils.java", "diffHunk": "@@ -103,4 +112,36 @@ public static void printWarn(Object msg) {\n                     });\n         }\n     }\n+\n+    public static void setModuleLogLevel(BString logLevel, Object moduleName) {\n+        String module;\n+        if (moduleName == null) {\n+            module = getPackagePath();\n+        } else {\n+            module = moduleName.toString();\n+        }\n+        String level = logLevel.getValue();\n+        switch (level) {\n+            case debug:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.DEBUG, module);\n+                break;\n+            case error:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.ERROR, module);\n+                break;\n+            case info:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.INFO, module);\n+                break;\n+            case warn:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.WARN, module);\n+                break;\n+            case trace:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.TRACE, module);\n+                break;\n+            case off:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.OFF, module);\n+                break;\n+            default:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.ALL, module);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bbc1b73166c7ed90f45928998a6ddeef3fdca3d"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAyMzY2MA==", "bodyText": "Updated in a15bfd2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r452023660", "createdAt": "2020-07-09T07:39:20Z", "author": {"login": "MadhukaHarith92"}, "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/Utils.java", "diffHunk": "@@ -103,4 +112,36 @@ public static void printWarn(Object msg) {\n                     });\n         }\n     }\n+\n+    public static void setModuleLogLevel(BString logLevel, Object moduleName) {\n+        String module;\n+        if (moduleName == null) {\n+            module = getPackagePath();\n+        } else {\n+            module = moduleName.toString();\n+        }\n+        String level = logLevel.getValue();\n+        switch (level) {\n+            case debug:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.DEBUG, module);\n+                break;\n+            case error:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.ERROR, module);\n+                break;\n+            case info:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.INFO, module);\n+                break;\n+            case warn:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.WARN, module);\n+                break;\n+            case trace:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.TRACE, module);\n+                break;\n+            case off:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.OFF, module);\n+                break;\n+            default:\n+                LOG_MANAGER.setModuleLogLevel(BLogLevel.ALL, module);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1NDY0Ng=="}, "originalCommit": {"oid": "4bbc1b73166c7ed90f45928998a6ddeef3fdca3d"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjY2MjUwOnYy", "diffSide": "RIGHT", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxOTowMjo1NlrOGu1crw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNzozOTowOVrOGvFVFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc2MzM3NQ==", "bodyText": "Can use an enum for this. See https://github.com/ballerina-platform/ballerina-distribution/pull/611/files for examples on how to use enums.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r451763375", "createdAt": "2020-07-08T19:02:56Z", "author": {"login": "pubudu91"}, "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -16,6 +16,30 @@\n \n import ballerina/java;\n \n+# Represents the debug log level.\n+public const DEBUG = \"DEBUG\";\n+\n+# Represents the error log level.\n+public const ERROR = \"ERROR\";\n+\n+# Represents the info log level.\n+public const INFO = \"INFO\";\n+\n+# Represents the trace log level.\n+public const TRACE = \"TRACE\";\n+\n+# Represents the warn log level.\n+public const WARN = \"WARN\";\n+\n+# Represents the all log level.\n+public const ALL = \"ALL\";\n+\n+# Represents the off log level.\n+public const OFF = \"OFF\";\n+\n+# Represents log level types.\n+public type LogLevel DEBUG | INFO | ERROR | WARN | TRACE | OFF | ALL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bbc1b73166c7ed90f45928998a6ddeef3fdca3d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAyMzU3Mg==", "bodyText": "Updated in a15bfd2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r452023572", "createdAt": "2020-07-09T07:39:09Z", "author": {"login": "MadhukaHarith92"}, "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -16,6 +16,30 @@\n \n import ballerina/java;\n \n+# Represents the debug log level.\n+public const DEBUG = \"DEBUG\";\n+\n+# Represents the error log level.\n+public const ERROR = \"ERROR\";\n+\n+# Represents the info log level.\n+public const INFO = \"INFO\";\n+\n+# Represents the trace log level.\n+public const TRACE = \"TRACE\";\n+\n+# Represents the warn log level.\n+public const WARN = \"WARN\";\n+\n+# Represents the all log level.\n+public const ALL = \"ALL\";\n+\n+# Represents the off log level.\n+public const OFF = \"OFF\";\n+\n+# Represents log level types.\n+public type LogLevel DEBUG | INFO | ERROR | WARN | TRACE | OFF | ALL;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc2MzM3NQ=="}, "originalCommit": {"oid": "4bbc1b73166c7ed90f45928998a6ddeef3fdca3d"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTI5ODYxOnYy", "diffSide": "RIGHT", "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMjoxOTowMFrOGvOjww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMjoyOToyMlrOGvO6mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE3NDc4Nw==", "bodyText": "You don't need to say DEBUG = \"DEBUG\". Just DEBUG is enough. Only need to do so if you want to give a different string value to the enum value DEBUG", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r452174787", "createdAt": "2020-07-09T12:19:00Z", "author": {"login": "pubudu91"}, "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -16,6 +16,17 @@\n \n import ballerina/java;\n \n+# Represents log level types.\n+public enum LogLevel {\n+    DEBUG = \"DEBUG\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a15bfd2b9973b96ed19cea57b181b22c1652d975"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE4MDYzNQ==", "bodyText": "Ack. Updated in 472b7ca", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r452180635", "createdAt": "2020-07-09T12:29:22Z", "author": {"login": "MadhukaHarith92"}, "path": "stdlib/log-api/src/main/ballerina/src/log/natives.bal", "diffHunk": "@@ -16,6 +16,17 @@\n \n import ballerina/java;\n \n+# Represents log level types.\n+public enum LogLevel {\n+    DEBUG = \"DEBUG\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE3NDc4Nw=="}, "originalCommit": {"oid": "a15bfd2b9973b96ed19cea57b181b22c1652d975"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTY4ODE0OnYy", "diffSide": "RIGHT", "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/Utils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzo1NjoxNFrOGvSUwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDoyNzo1N1rOGvTtsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNjQ4MQ==", "bodyText": "These are now unused right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r452236481", "createdAt": "2020-07-09T13:56:14Z", "author": {"login": "pubudu91"}, "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/Utils.java", "diffHunk": "@@ -28,6 +29,14 @@\n  */\n public class Utils extends AbstractLogFunction {\n \n+    private static final String debug = \"DEBUG\";\n+    private static final String error = \"ERROR\";\n+    private static final String info = \"INFO\";\n+    private static final String warn = \"WARN\";\n+    private static final String trace = \"TRACE\";\n+    private static final String all = \"ALL\";\n+    private static final String off = \"OFF\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "472b7ca2c222a0c4055fb5ad0861df82a4592d07"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI1OTI0OQ==", "bodyText": "Yes, removed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24583#discussion_r452259249", "createdAt": "2020-07-09T14:27:57Z", "author": {"login": "MadhukaHarith92"}, "path": "stdlib/log-api/src/main/java/org/ballerinalang/stdlib/log/Utils.java", "diffHunk": "@@ -28,6 +29,14 @@\n  */\n public class Utils extends AbstractLogFunction {\n \n+    private static final String debug = \"DEBUG\";\n+    private static final String error = \"ERROR\";\n+    private static final String info = \"INFO\";\n+    private static final String warn = \"WARN\";\n+    private static final String trace = \"TRACE\";\n+    private static final String all = \"ALL\";\n+    private static final String off = \"OFF\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNjQ4MQ=="}, "originalCommit": {"oid": "472b7ca2c222a0c4055fb5ad0861df82a4592d07"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3217, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}