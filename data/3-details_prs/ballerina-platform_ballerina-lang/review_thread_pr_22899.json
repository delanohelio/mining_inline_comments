{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4OTU5NTM4", "number": 22899, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDozMjo0N1rOD2m-FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMToxODozOFrOD2oINQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NTg4MTgxOnYy", "diffSide": "RIGHT", "path": "stdlib/database/jdbc2/src/test/resources/test-src/query/simple-params-query-test.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDozMjo0N1rOGMcO1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDozMjo0N1rOGMcO1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY5ODY0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            function queryJdbcClient(string url, string user, string password,@untainted string|sql:ParameterizedString sqlQuery,\n          \n          \n            \n            function queryJdbcClient(string url, string user, string password, @untainted string|sql:ParameterizedString sqlQuery,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22899#discussion_r415698645", "createdAt": "2020-04-27T10:32:47Z", "author": {"login": "daneshk"}, "path": "stdlib/database/jdbc2/src/test/resources/test-src/query/simple-params-query-test.bal", "diffHunk": "@@ -839,10 +900,11 @@ function getClobColumnChannel() returns @untainted io:ReadableCharacterChannel|e\n     return sourceChannel;\n }\n \n-function queryJdbcClient(string url, string user, string password,@untainted string|sql:ParameterizedString sqlQuery)\n+function queryJdbcClient(string url, string user, string password,@untainted string|sql:ParameterizedString sqlQuery,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f79a77a6d38a5a7a2cb47fcc5ba22d3b9ef6f72e"}, "originalPosition": 627}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NjA3MTU3OnYy", "diffSide": "RIGHT", "path": "stdlib/database/mysql/src/test/resources/test-src/query/simple-params-query-test.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMToxODozOFrOGMd7sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMTozNTozOFrOGMejmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyNjUxNA==", "bodyText": "Is it possible to avoid setting an empty array for insertions, If insertions not required?\nMay be setting a default value", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22899#discussion_r415726514", "createdAt": "2020-04-27T11:18:38Z", "author": {"login": "daneshk"}, "path": "stdlib/database/mysql/src/test/resources/test-src/query/simple-params-query-test.bal", "diffHunk": "@@ -656,6 +710,80 @@ function queryTimestampStringInvalidParam() returns @tainted record {}|error? {\n     return queryMysqlClient(sqlQuery);\n }\n \n+function queryEnumStringParam() returns @tainted record {}|error? {\n+    sql:ParameterizedString sqlQuery = {\n+            parts: [\"SELECT * from ENUMTable where enum_type=\", \"\"],\n+            insertions: [\"doctor\"]\n+     };\n+    return queryMysqlClient(sqlQuery);\n+}\n+\n+type EnumResult record {|\n+    int id;\n+    string enum_type;\n+|};\n+\n+function queryEnumStringParam2() returns @tainted record {}|error? {\n+    sql:ParameterizedString sqlQuery = {\n+            parts: [\"SELECT * from ENUMTable where enum_type=\", \"\"],\n+            insertions: [\"doctor\"]\n+     };\n+    return queryMysqlClient(sqlQuery, resultType=EnumResult);\n+}\n+\n+function querySetStringParam() returns @tainted record {}|error? {\n+    sql:ParameterizedString sqlQuery = {\n+            parts: [\"SELECT * from SetTable where set_type=\", \"\"],\n+            insertions: [\"a,d\"]\n+     };\n+    return queryMysqlClient(sqlQuery);\n+}\n+\n+function queryGeoParam() returns @tainted record {}|error? {\n+    sql:ParameterizedString sqlQuery = {\n+            parts: [\"SELECT id, ST_AsText(geom) as geomText from GEOTable\"],\n+            insertions: []", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f79a77a6d38a5a7a2cb47fcc5ba22d3b9ef6f72e"}, "originalPosition": 554}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczNjcyOA==", "bodyText": "This is a temporary syntax based on this - https://docs.google.com/document/d/1F1Hlxc8rWmKmJKiWnqmeDOQ1XFckrmbeL5V8UxQAD3c/edit#heading=h.f4zz0m9kmsmf, corresponding spec issue - ballerina-platform/ballerina-spec#442. Once these issues are addressed in the language, will make necessary changes to support that syntax in the module to change the current syntax.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22899#discussion_r415736728", "createdAt": "2020-04-27T11:35:38Z", "author": {"login": "sinthuja"}, "path": "stdlib/database/mysql/src/test/resources/test-src/query/simple-params-query-test.bal", "diffHunk": "@@ -656,6 +710,80 @@ function queryTimestampStringInvalidParam() returns @tainted record {}|error? {\n     return queryMysqlClient(sqlQuery);\n }\n \n+function queryEnumStringParam() returns @tainted record {}|error? {\n+    sql:ParameterizedString sqlQuery = {\n+            parts: [\"SELECT * from ENUMTable where enum_type=\", \"\"],\n+            insertions: [\"doctor\"]\n+     };\n+    return queryMysqlClient(sqlQuery);\n+}\n+\n+type EnumResult record {|\n+    int id;\n+    string enum_type;\n+|};\n+\n+function queryEnumStringParam2() returns @tainted record {}|error? {\n+    sql:ParameterizedString sqlQuery = {\n+            parts: [\"SELECT * from ENUMTable where enum_type=\", \"\"],\n+            insertions: [\"doctor\"]\n+     };\n+    return queryMysqlClient(sqlQuery, resultType=EnumResult);\n+}\n+\n+function querySetStringParam() returns @tainted record {}|error? {\n+    sql:ParameterizedString sqlQuery = {\n+            parts: [\"SELECT * from SetTable where set_type=\", \"\"],\n+            insertions: [\"a,d\"]\n+     };\n+    return queryMysqlClient(sqlQuery);\n+}\n+\n+function queryGeoParam() returns @tainted record {}|error? {\n+    sql:ParameterizedString sqlQuery = {\n+            parts: [\"SELECT id, ST_AsText(geom) as geomText from GEOTable\"],\n+            insertions: []", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyNjUxNA=="}, "originalCommit": {"oid": "f79a77a6d38a5a7a2cb47fcc5ba22d3b9ef6f72e"}, "originalPosition": 554}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3786, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}