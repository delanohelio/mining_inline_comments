{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNzkzNTA1", "number": 23034, "title": "Add table constructor expression parsing", "bodyText": "Purpose\n\nAdd table constructor expression support\n\nFixes #23021\nApproach\n\nN/A\n\nSamples\n\nN/A\n\nRemarks\n\nN/A\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-30T19:33:03Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23034", "merged": true, "mergeCommit": {"oid": "f50fd3053289bbf70a91b67750ca680d62371496"}, "closed": true, "closedAt": "2020-05-01T18:29:55Z", "author": {"login": "lochana-chathura"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccs0lKgH2gAyNDExNzkzNTA1OmFiM2U2MWE5MWE1MjMzZTdlNmUwZTcyNmYyMjdhZjJjNjJmMWM0MWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdGAXdgFqTQwNDMyMzA1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ab3e61a91a5233e7e6e0e726f227af2c62f1c41a", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ab3e61a91a5233e7e6e0e726f227af2c62f1c41a", "committedDate": "2020-04-30T13:09:13Z", "message": "Add table constructor expression support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b780bc02dd15b27689e6edfc5752c2381a1fe3a", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2b780bc02dd15b27689e6edfc5752c2381a1fe3a", "committedDate": "2020-04-30T14:48:50Z", "message": "Add syntax validation tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9233749dc741d6f8c871a1bb5716213d506782a7", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9233749dc741d6f8c871a1bb5716213d506782a7", "committedDate": "2020-04-30T19:05:00Z", "message": "Add error recovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc552c81d420a194935fa5630dd511ac0b8b1819", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bc552c81d420a194935fa5630dd511ac0b8b1819", "committedDate": "2020-04-30T19:07:33Z", "message": "Add test cases for error recovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfe7a87a4879e1939cf75d6db49f49e94ab33a15", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cfe7a87a4879e1939cf75d6db49f49e94ab33a15", "committedDate": "2020-04-30T19:11:20Z", "message": "Add generated internal and external nodes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc590c18136d0f134501130f99d0668ed7ded184", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fc590c18136d0f134501130f99d0668ed7ded184", "committedDate": "2020-04-30T19:28:21Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into incremental-parser\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STNodeFactory.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/NodeFactory.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/NodeTransformer.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/NodeVisitor.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/TreeModifier.java\n\u0001\tcompiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/ParserTestUtils.java\n\u0001\tcompiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "057002415d68988c42abb0596e1c47148a574484", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/057002415d68988c42abb0596e1c47148a574484", "committedDate": "2020-04-30T19:30:46Z", "message": "Regenerate tree after merging"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MDM4MTUz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23034#pullrequestreview-404038153", "createdAt": "2020-05-01T06:26:24Z", "commit": {"oid": "057002415d68988c42abb0596e1c47148a574484"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNjoyNjoyNFrOGPDKcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNjo0NTo0N1rOGPDZVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzMzY0OQ==", "bodyText": "Will this have a problem if there is some additional token before key keyword:\nfor eg: table foo key() [{k1:v1}].", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23034#discussion_r418433649", "createdAt": "2020-05-01T06:26:24Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -7061,4 +7070,171 @@ private STNode parseTypeCastParam() {\n \n         return STNodeFactory.createTypeCastParamNode(annot, type);\n     }\n+\n+    /**\n+     * Parse table constructor expression.\n+     * <p>\n+     * <code>\n+     * table-constructor-expr := table [key-specifier] [ [row-list] ]\n+     * </code>\n+     *\n+     * @return Parsed node\n+     */\n+    private STNode parseTableConstructorExpr() {\n+        startContext(ParserRuleContext.TABLE_CONSTRUCTOR);\n+        STNode tableKeyword = parseTableKeyword();\n+        STToken nextToken = peek();\n+\n+        STNode keySpecifier;\n+        if (nextToken.kind == SyntaxKind.KEY_KEYWORD) {\n+            keySpecifier = parseKeySpecifier();\n+        } else {\n+            keySpecifier = STNodeFactory.createEmptyNode();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "057002415d68988c42abb0596e1c47148a574484"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzNDE4OQ==", "bodyText": "I think we'll have to do something like:\nswitch(nextTokenKind)\n    case KEY: \n        // parse key-specifier\n    case OPEN_BRACKET: \n        // parse row-list \n    default: \n        // if non of the above, then recover and re-parse/return", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23034#discussion_r418434189", "createdAt": "2020-05-01T06:28:57Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -7061,4 +7070,171 @@ private STNode parseTypeCastParam() {\n \n         return STNodeFactory.createTypeCastParamNode(annot, type);\n     }\n+\n+    /**\n+     * Parse table constructor expression.\n+     * <p>\n+     * <code>\n+     * table-constructor-expr := table [key-specifier] [ [row-list] ]\n+     * </code>\n+     *\n+     * @return Parsed node\n+     */\n+    private STNode parseTableConstructorExpr() {\n+        startContext(ParserRuleContext.TABLE_CONSTRUCTOR);\n+        STNode tableKeyword = parseTableKeyword();\n+        STToken nextToken = peek();\n+\n+        STNode keySpecifier;\n+        if (nextToken.kind == SyntaxKind.KEY_KEYWORD) {\n+            keySpecifier = parseKeySpecifier();\n+        } else {\n+            keySpecifier = STNodeFactory.createEmptyNode();\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzMzY0OQ=="}, "originalCommit": {"oid": "057002415d68988c42abb0596e1c47148a574484"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzNDUyNg==", "bodyText": "Would it be better to call this as row-list-rhs?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23034#discussion_r418434526", "createdAt": "2020-05-01T06:30:57Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -272,6 +272,21 @@\n     private static final ParserRuleContext[] TYPE_CAST_PARAM_RHS =\n             { ParserRuleContext.TYPE_DESCRIPTOR, ParserRuleContext.GT };\n \n+    private static final ParserRuleContext[] TABLE_KEYWORD_RHS =\n+            { ParserRuleContext.KEY_SPECIFIER, ParserRuleContext.OPEN_BRACKET };\n+\n+    private static final ParserRuleContext[] TABLE_CONSTRUCTOR_RHS =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "057002415d68988c42abb0596e1c47148a574484"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzNDkxOA==", "bodyText": "how about table-row-end?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23034#discussion_r418434918", "createdAt": "2020-05-01T06:32:56Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -272,6 +272,21 @@\n     private static final ParserRuleContext[] TYPE_CAST_PARAM_RHS =\n             { ParserRuleContext.TYPE_DESCRIPTOR, ParserRuleContext.GT };\n \n+    private static final ParserRuleContext[] TABLE_KEYWORD_RHS =\n+            { ParserRuleContext.KEY_SPECIFIER, ParserRuleContext.OPEN_BRACKET };\n+\n+    private static final ParserRuleContext[] TABLE_CONSTRUCTOR_RHS =\n+            { ParserRuleContext.CLOSE_BRACKET, ParserRuleContext.MAPPING_CONSTRUCTOR };\n+\n+    private static final ParserRuleContext[] TABLE_CONSTRUCTOR_END =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "057002415d68988c42abb0596e1c47148a574484"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzNzQ2Mw==", "bodyText": "table-key-rhs?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23034#discussion_r418437463", "createdAt": "2020-05-01T06:45:47Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -272,6 +272,21 @@\n     private static final ParserRuleContext[] TYPE_CAST_PARAM_RHS =\n             { ParserRuleContext.TYPE_DESCRIPTOR, ParserRuleContext.GT };\n \n+    private static final ParserRuleContext[] TABLE_KEYWORD_RHS =\n+            { ParserRuleContext.KEY_SPECIFIER, ParserRuleContext.OPEN_BRACKET };\n+\n+    private static final ParserRuleContext[] TABLE_CONSTRUCTOR_RHS =\n+            { ParserRuleContext.CLOSE_BRACKET, ParserRuleContext.MAPPING_CONSTRUCTOR };\n+\n+    private static final ParserRuleContext[] TABLE_CONSTRUCTOR_END =\n+            { ParserRuleContext.COMMA, ParserRuleContext.CLOSE_BRACKET };\n+\n+    private static final ParserRuleContext[] KEY_SPECIFIER_RHS =\n+            { ParserRuleContext.CLOSE_PARENTHESIS, ParserRuleContext.VARIABLE_NAME };\n+\n+    private static final ParserRuleContext[] KEY_SPECIFIER_END =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "057002415d68988c42abb0596e1c47148a574484"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f692480e6e51b197cbd6655739a63226320ac14", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4f692480e6e51b197cbd6655739a63226320ac14", "committedDate": "2020-05-01T10:19:19Z", "message": "Fix error recovery bug and add more test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MTA5ODQx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23034#pullrequestreview-404109841", "createdAt": "2020-05-01T10:49:22Z", "commit": {"oid": "4f692480e6e51b197cbd6655739a63226320ac14"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxMDo0OToyM1rOGPHEUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxMDo0OToyM1rOGPHEUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ5NzYxOA==", "bodyText": "I sense an issue here :)\nTry something like: table key(a) foo key(b) []", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23034#discussion_r418497618", "createdAt": "2020-05-01T10:49:23Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -7061,4 +7072,196 @@ private STNode parseTypeCastParam() {\n \n         return STNodeFactory.createTypeCastParamNode(annot, type);\n     }\n+\n+    /**\n+     * Parse table constructor expression.\n+     * <p>\n+     * <code>\n+     * table-constructor-expr := table [key-specifier] [ [row-list] ]\n+     * </code>\n+     *\n+     * @return Parsed node\n+     */\n+    private STNode parseTableConstructorExpr() {\n+        startContext(ParserRuleContext.TABLE_CONSTRUCTOR);\n+        STNode tableKeyword = parseTableKeyword();\n+        STNode keySpecifier = STNodeFactory.createEmptyNode();\n+        return parseTableConstructorExpr(tableKeyword, keySpecifier);\n+    }\n+\n+    private STNode parseTableConstructorExpr(STNode tableKeyword, STNode keySpecifier) {\n+        return parseTableConstructorExpr(peek().kind, tableKeyword, keySpecifier);\n+    }\n+\n+    private STNode parseTableConstructorExpr(SyntaxKind nextTokenKind, STNode tableKeyword, STNode keySpecifier) {\n+        STNode openBracket;\n+        STNode rowList;\n+        STNode closeBracket;\n+\n+        // Parse optional key specifier\n+        if (nextTokenKind == SyntaxKind.KEY_KEYWORD) {\n+            keySpecifier = parseKeySpecifier();\n+            nextTokenKind = peek().kind;\n+        }\n+\n+        switch (nextTokenKind) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f692480e6e51b197cbd6655739a63226320ac14"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dacc158ef8e4eab7e8a70248a4c08a92286be44d", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dacc158ef8e4eab7e8a70248a4c08a92286be44d", "committedDate": "2020-05-01T13:24:44Z", "message": "Fix error recovery bug and add a test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MzIzMDUx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23034#pullrequestreview-404323051", "createdAt": "2020-05-01T18:29:43Z", "commit": {"oid": "dacc158ef8e4eab7e8a70248a4c08a92286be44d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3358, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}