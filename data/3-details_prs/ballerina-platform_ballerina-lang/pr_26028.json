{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNjM4OTg2", "number": 26028, "title": "Fix explicit paramTypes passing for BalEnv accepting functions", "bodyText": "Purpose\nFixes #26027\nApproach\nIf normal exact match fails we re-match with BalEnv as the first param.", "createdAt": "2020-09-23T09:24:19Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26028", "merged": true, "mergeCommit": {"oid": "577f53b1a8a1ac9a69216aa40bf4c88e0efc505d"}, "closed": true, "closedAt": "2020-09-28T08:04:17Z", "author": {"login": "manuranga"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLpClcAH2gAyNDkxNjM4OTg2OmY0MjQwNTBjYjA1MTFmYWYzOTUzMDk1ODEyMjE5NTJkNWIyN2Q4OTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNOjjGgFqTQ5NzI1NTE0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f424050cb0511faf395309581221952d5b27d890", "author": {"user": {"login": "manuranga", "name": "manuranga perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f424050cb0511faf395309581221952d5b27d890", "committedDate": "2020-09-23T09:19:20Z", "message": "Fix explicit paramTypes passing for BalEnv accepting functions\n\nFixes #26027"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NTQ4NDI5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26028#pullrequestreview-494548429", "createdAt": "2020-09-23T11:13:02Z", "commit": {"oid": "f424050cb0511faf395309581221952d5b27d890"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMToxMzowMlrOHWml5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMToxMzowMlrOHWml5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ2MzAxMg==", "bodyText": "Another way we can do this is by changing validateArgumentTypes logic where we can skip first parameter if it is BalEnv class. But that has effect on normal interop function validation. This also looks good to me.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26028#discussion_r493463012", "createdAt": "2020-09-23T11:13:02Z", "author": {"login": "warunalakshitha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/interop/JMethodResolver.java", "diffHunk": "@@ -625,13 +626,23 @@ private JMethod resolveExactMethod(Class<?> clazz, String name, JMethodKind kind\n \n         Executable executable = (kind == JMethodKind.CONSTRUCTOR) ? resolveConstructor(clazz, paramTypes) :\n                 resolveMethod(clazz, name, paramTypes);\n+        if (executable == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f424050cb0511faf395309581221952d5b27d890"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NTQ5NDk2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26028#pullrequestreview-494549496", "createdAt": "2020-09-23T11:14:35Z", "commit": {"oid": "f424050cb0511faf395309581221952d5b27d890"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMToxNDozNVrOHWmq0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMToxNDozNVrOHWmq0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ2NDI3Mw==", "bodyText": "Shall we write a test case for object attached interop function with param types.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26028#discussion_r493464273", "createdAt": "2020-09-23T11:14:35Z", "author": {"login": "warunalakshitha"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/javainterop/basic/static_method_tests.bal", "diffHunk": "@@ -218,7 +218,8 @@ function decimalParamAndReturn(decimal a1) returns decimal = @java:Method {\n } external;\n \n  public function addTwoNumbersSlowAsync(int a, int b) returns int = @java:Method {\n-    'class:\"org/ballerinalang/nativeimpl/jvm/tests/StaticMethods\"\n+    'class:\"org/ballerinalang/nativeimpl/jvm/tests/StaticMethods\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f424050cb0511faf395309581221952d5b27d890"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MjU1MTQx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26028#pullrequestreview-497255141", "createdAt": "2020-09-28T07:35:45Z", "commit": {"oid": "f424050cb0511faf395309581221952d5b27d890"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4652, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}