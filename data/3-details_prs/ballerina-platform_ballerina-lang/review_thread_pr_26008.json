{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwODUzMjQw", "number": 26008, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMTowNTo1OFrOEmCEvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMToyNzowNFrOEmCeeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzE1MzI0OnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMTowNTo1OFrOHV06wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMToxNTowMVrOHV1Lag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY0OTE1Mw==", "bodyText": "Shall we get rid of these comments?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26008#discussion_r492649153", "createdAt": "2020-09-22T11:05:58Z", "author": {"login": "sanjana"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -2996,26 +3005,26 @@ public SelectClauseNode transform(SelectClauseNode selectClauseNode) {\n \n     @Override\n     public QueryExpressionNode transform(QueryExpressionNode queryExpressionNode) {\n-        if (!isInLineRange(queryExpressionNode, lineRange)) {\n+//        if (!isInLineRange(queryExpressionNode, lineRange)) {\n             return queryExpressionNode;\n-        }\n-        QueryConstructTypeNode queryConstructType =\n-                this.modifyNode(queryExpressionNode.queryConstructType().orElse(null));\n-        QueryPipelineNode queryPipeline = this.modifyNode(queryExpressionNode.queryPipeline());\n-        SelectClauseNode selectClause = this.modifyNode(queryExpressionNode.selectClause());\n-        OnConflictClauseNode onConflictClause = this.modifyNode(queryExpressionNode.onConflictClause().orElse(null));\n-        if (queryConstructType != null) {\n-            queryExpressionNode = queryExpressionNode.modify()\n-                    .withQueryConstructType(queryConstructType).apply();\n-        }\n-        if (onConflictClause != null) {\n-            queryExpressionNode = queryExpressionNode.modify()\n-                    .withOnConflictClause(onConflictClause).apply();\n-        }\n-        return queryExpressionNode.modify()\n-                .withQueryPipeline(queryPipeline)\n-                .withSelectClause(selectClause)\n-                .apply();\n+//        }\n+//        QueryConstructTypeNode queryConstructType =\n+//                this.modifyNode(queryExpressionNode.queryConstructType().orElse(null));\n+//        QueryPipelineNode queryPipeline = this.modifyNode(queryExpressionNode.queryPipeline());\n+//        SelectClauseNode selectClause = this.modifyNode(queryExpressionNode.selectClause());\n+//        OnConflictClauseNode onConflictClause = this.modifyNode(queryExpressionNode.onConflictClause().orElse(null));\n+//        if (queryConstructType != null) {\n+//            queryExpressionNode = queryExpressionNode.modify()\n+//                    .withQueryConstructType(queryConstructType).apply();\n+//        }\n+//        if (onConflictClause != null) {\n+//            queryExpressionNode = queryExpressionNode.modify()\n+//                    .withOnConflictClause(onConflictClause).apply();\n+//        }\n+//        return queryExpressionNode.modify()\n+//                .withQueryPipeline(queryPipeline)\n+//                .withSelectClause(selectClause)\n+//                .apply();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f0b843031c3e28fbb4fc2dd14b591b9d2a8ee44"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY1MzQxOA==", "bodyText": "I think it's okay to leave it there since we have to enable it again anyway.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26008#discussion_r492653418", "createdAt": "2020-09-22T11:15:01Z", "author": {"login": "IrushiL"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -2996,26 +3005,26 @@ public SelectClauseNode transform(SelectClauseNode selectClauseNode) {\n \n     @Override\n     public QueryExpressionNode transform(QueryExpressionNode queryExpressionNode) {\n-        if (!isInLineRange(queryExpressionNode, lineRange)) {\n+//        if (!isInLineRange(queryExpressionNode, lineRange)) {\n             return queryExpressionNode;\n-        }\n-        QueryConstructTypeNode queryConstructType =\n-                this.modifyNode(queryExpressionNode.queryConstructType().orElse(null));\n-        QueryPipelineNode queryPipeline = this.modifyNode(queryExpressionNode.queryPipeline());\n-        SelectClauseNode selectClause = this.modifyNode(queryExpressionNode.selectClause());\n-        OnConflictClauseNode onConflictClause = this.modifyNode(queryExpressionNode.onConflictClause().orElse(null));\n-        if (queryConstructType != null) {\n-            queryExpressionNode = queryExpressionNode.modify()\n-                    .withQueryConstructType(queryConstructType).apply();\n-        }\n-        if (onConflictClause != null) {\n-            queryExpressionNode = queryExpressionNode.modify()\n-                    .withOnConflictClause(onConflictClause).apply();\n-        }\n-        return queryExpressionNode.modify()\n-                .withQueryPipeline(queryPipeline)\n-                .withSelectClause(selectClause)\n-                .apply();\n+//        }\n+//        QueryConstructTypeNode queryConstructType =\n+//                this.modifyNode(queryExpressionNode.queryConstructType().orElse(null));\n+//        QueryPipelineNode queryPipeline = this.modifyNode(queryExpressionNode.queryPipeline());\n+//        SelectClauseNode selectClause = this.modifyNode(queryExpressionNode.selectClause());\n+//        OnConflictClauseNode onConflictClause = this.modifyNode(queryExpressionNode.onConflictClause().orElse(null));\n+//        if (queryConstructType != null) {\n+//            queryExpressionNode = queryExpressionNode.modify()\n+//                    .withQueryConstructType(queryConstructType).apply();\n+//        }\n+//        if (onConflictClause != null) {\n+//            queryExpressionNode = queryExpressionNode.modify()\n+//                    .withOnConflictClause(onConflictClause).apply();\n+//        }\n+//        return queryExpressionNode.modify()\n+//                .withQueryPipeline(queryPipeline)\n+//                .withSelectClause(selectClause)\n+//                .apply();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY0OTE1Mw=="}, "originalCommit": {"oid": "5f0b843031c3e28fbb4fc2dd14b591b9d2a8ee44"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzIxOTEzOnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMToyNzowNFrOHV1iag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzozNzoyN1rOHV6cmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY1OTMwNg==", "bodyText": "This will create an impact when formatting the following type of nested-if code.\npublic function foo() {\n    if (true) {\n        \n        if (1 < 2) {\n            int x = 2;\n        }\n    } else {\n        int y = 0;\n        return i;\n    }\n}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26008#discussion_r492659306", "createdAt": "2020-09-22T11:27:04Z", "author": {"login": "sanjana"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -912,7 +914,7 @@ public SimpleNameReferenceNode transform(SimpleNameReferenceNode simpleNameRefer\n \n     @Override\n     public IfElseStatementNode transform(IfElseStatementNode ifElseStatementNode) {\n-        if (!isInLineRange(ifElseStatementNode, lineRange)) {\n+        if (!isInLineRange(ifElseStatementNode, lineRange) || !nestedIfBlock(ifElseStatementNode).isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f0b843031c3e28fbb4fc2dd14b591b9d2a8ee44"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY2MjI1NA==", "bodyText": "Yeah, that is added to disable the formatting of nested if blocks, since this fix requires some time. The intention is to leave the nested if block as it is now. The following issue is there to track the fix.\n#25999", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26008#discussion_r492662254", "createdAt": "2020-09-22T11:32:54Z", "author": {"login": "IrushiL"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -912,7 +914,7 @@ public SimpleNameReferenceNode transform(SimpleNameReferenceNode simpleNameRefer\n \n     @Override\n     public IfElseStatementNode transform(IfElseStatementNode ifElseStatementNode) {\n-        if (!isInLineRange(ifElseStatementNode, lineRange)) {\n+        if (!isInLineRange(ifElseStatementNode, lineRange) || !nestedIfBlock(ifElseStatementNode).isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY1OTMwNg=="}, "originalCommit": {"oid": "5f0b843031c3e28fbb4fc2dd14b591b9d2a8ee44"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjczOTczNg==", "bodyText": "Since the formatting of nested if blocks are disabled for now if there are formatting errors in the above code snippet, it will not get formatted.\nBut if the above code is formatted as it is, then the output will also be the same.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26008#discussion_r492739736", "createdAt": "2020-09-22T13:37:27Z", "author": {"login": "IrushiL"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -912,7 +914,7 @@ public SimpleNameReferenceNode transform(SimpleNameReferenceNode simpleNameRefer\n \n     @Override\n     public IfElseStatementNode transform(IfElseStatementNode ifElseStatementNode) {\n-        if (!isInLineRange(ifElseStatementNode, lineRange)) {\n+        if (!isInLineRange(ifElseStatementNode, lineRange) || !nestedIfBlock(ifElseStatementNode).isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY1OTMwNg=="}, "originalCommit": {"oid": "5f0b843031c3e28fbb4fc2dd14b591b9d2a8ee44"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 10, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}