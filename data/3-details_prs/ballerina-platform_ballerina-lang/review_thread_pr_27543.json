{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNjQzMjY1", "number": 27543, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODozNzowMFrOFHtQ7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODozNzowMFrOFHtQ7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNjI1OTY2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODozNzowMFrOIJQQ1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODozNzo1OVrOIJQSZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3NDU1MA==", "bodyText": "Since we need to pass  string constant gen to typegen, I refactor typegen and castgen to have only instance methods and keep string constan tgen gen as class level variable.  With this we do not need to pass string constant gen to all typegen methods. We have done same thing for instructions gen , error gen and terminator gen too.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27543#discussion_r546574550", "createdAt": "2020-12-21T08:37:00Z", "author": {"login": "warunalakshitha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "diffHunk": "@@ -459,12 +457,15 @@ private void generateModuleClasses(BIRPackage module, Map<String, byte[]> jarEnt\n             AsyncDataCollector asyncDataCollector = new AsyncDataCollector(moduleClass);\n             boolean serviceEPAvailable = false;\n             boolean isInitClass = Objects.equals(moduleClass, moduleInitClass);\n+            JvmTypeGen jvmTypeGen = new JvmTypeGen(stringConstantsGen);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0142ca9fc7a50c6b3ae9b53f34cb67188410cc5"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3NDY0Nw==", "bodyText": "@Kishanthan @manuranga", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27543#discussion_r546574647", "createdAt": "2020-12-21T08:37:15Z", "author": {"login": "warunalakshitha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "diffHunk": "@@ -459,12 +457,15 @@ private void generateModuleClasses(BIRPackage module, Map<String, byte[]> jarEnt\n             AsyncDataCollector asyncDataCollector = new AsyncDataCollector(moduleClass);\n             boolean serviceEPAvailable = false;\n             boolean isInitClass = Objects.equals(moduleClass, moduleInitClass);\n+            JvmTypeGen jvmTypeGen = new JvmTypeGen(stringConstantsGen);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3NDU1MA=="}, "originalCommit": {"oid": "e0142ca9fc7a50c6b3ae9b53f34cb67188410cc5"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3NDk0OQ==", "bodyText": "Also removed asyncCollector object pass for every method as well.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27543#discussion_r546574949", "createdAt": "2020-12-21T08:37:59Z", "author": {"login": "warunalakshitha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "diffHunk": "@@ -459,12 +457,15 @@ private void generateModuleClasses(BIRPackage module, Map<String, byte[]> jarEnt\n             AsyncDataCollector asyncDataCollector = new AsyncDataCollector(moduleClass);\n             boolean serviceEPAvailable = false;\n             boolean isInitClass = Objects.equals(moduleClass, moduleInitClass);\n+            JvmTypeGen jvmTypeGen = new JvmTypeGen(stringConstantsGen);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3NDU1MA=="}, "originalCommit": {"oid": "e0142ca9fc7a50c6b3ae9b53f34cb67188410cc5"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2763, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}