{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMDMyMzIy", "number": 25635, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNTowNTowN1rOEgyBtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNTozMjoxOFrOEgySFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODA5NTI2OnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNTowNTowN1rOHNwSPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDoyMzoxOFrOHOWlkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE4NDYzOA==", "bodyText": "Shouldn't this be an AND expression here? Since both the namespacePrefix and the asKeyword should not be null.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25635#discussion_r484184638", "createdAt": "2020-09-07T05:05:07Z", "author": {"login": "IrushiL"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -1186,12 +1186,16 @@ public XMLNamespaceDeclarationNode transform(XMLNamespaceDeclarationNode xMLName\n         Token asKeyword = getToken(xMLNamespaceDeclarationNode.asKeyword().orElse(null));\n         IdentifierToken namespacePrefix = this.modifyNode(xMLNamespaceDeclarationNode.namespacePrefix().orElse(null));\n         Token semicolonToken = getToken(xMLNamespaceDeclarationNode.semicolonToken());\n+        if (asKeyword != null || namespacePrefix != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f98511818c9ad998dc1c7cfdde1f398b0a6ebf3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2MDIyNw==", "bodyText": "The purpose of using the OR is, if either one of asKeyword or namespacePrefix is available (not null), then the if condition would be true and both of them should be present when applying the modifications.\nOtherwise if even a single one out of them is null, there would be an assertion error generated when checking in the Objects.requireNonNull() methods of tree node modifier utility.\nAnd, even if the asKeyword is null, still the parser would be returning a MISSING[as] token if the namespacePrefix is present.\nIs this approach correct, or, are there any other suggestions?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25635#discussion_r484360227", "createdAt": "2020-09-07T11:02:03Z", "author": {"login": "sanjana"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -1186,12 +1186,16 @@ public XMLNamespaceDeclarationNode transform(XMLNamespaceDeclarationNode xMLName\n         Token asKeyword = getToken(xMLNamespaceDeclarationNode.asKeyword().orElse(null));\n         IdentifierToken namespacePrefix = this.modifyNode(xMLNamespaceDeclarationNode.namespacePrefix().orElse(null));\n         Token semicolonToken = getToken(xMLNamespaceDeclarationNode.semicolonToken());\n+        if (asKeyword != null || namespacePrefix != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE4NDYzOA=="}, "originalCommit": {"oid": "1f98511818c9ad998dc1c7cfdde1f398b0a6ebf3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgxMjE3Nw==", "bodyText": "@IrushiL, Thank you for pointing out the issue here. Fixed the logical error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25635#discussion_r484812177", "createdAt": "2020-09-08T10:23:18Z", "author": {"login": "sanjana"}, "path": "misc/formatter/modules/formatter-core/src/main/java/org/ballerinalang/formatter/core/FormattingTreeModifier.java", "diffHunk": "@@ -1186,12 +1186,16 @@ public XMLNamespaceDeclarationNode transform(XMLNamespaceDeclarationNode xMLName\n         Token asKeyword = getToken(xMLNamespaceDeclarationNode.asKeyword().orElse(null));\n         IdentifierToken namespacePrefix = this.modifyNode(xMLNamespaceDeclarationNode.namespacePrefix().orElse(null));\n         Token semicolonToken = getToken(xMLNamespaceDeclarationNode.semicolonToken());\n+        if (asKeyword != null || namespacePrefix != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE4NDYzOA=="}, "originalCommit": {"oid": "1f98511818c9ad998dc1c7cfdde1f398b0a6ebf3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODEzNzE3OnYy", "diffSide": "RIGHT", "path": "misc/formatter/modules/formatter-core/src/test/resources/testng.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNTozMjoxOFrOHNwqLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDoyNDoyMlrOHOWnmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE5MDc2NA==", "bodyText": "We might have to leave this out until fixes for the rest of the statement tests are merged, if there are failing statement tests.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25635#discussion_r484190764", "createdAt": "2020-09-07T05:32:18Z", "author": {"login": "IrushiL"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/testng.xml", "diffHunk": "@@ -29,6 +29,7 @@ under the License.\n         <packages>\n             <package name=\"org.ballerinalang.formatter.core.types.*\" />\n             <package name=\"org.ballerinalang.formatter.core.expressions.*\" />\n+            <package name=\"org.ballerinalang.formatter.core.statements.*\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f98511818c9ad998dc1c7cfdde1f398b0a6ebf3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2MzIzOQ==", "bodyText": "Fixed by limiting to org.ballerinalang.formatter.core.statements.XMLNSDeclarationStatementsTest only.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25635#discussion_r484363239", "createdAt": "2020-09-07T11:08:30Z", "author": {"login": "sanjana"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/testng.xml", "diffHunk": "@@ -29,6 +29,7 @@ under the License.\n         <packages>\n             <package name=\"org.ballerinalang.formatter.core.types.*\" />\n             <package name=\"org.ballerinalang.formatter.core.expressions.*\" />\n+            <package name=\"org.ballerinalang.formatter.core.statements.*\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE5MDc2NA=="}, "originalCommit": {"oid": "1f98511818c9ad998dc1c7cfdde1f398b0a6ebf3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgxMjY5Ng==", "bodyText": "Removed the statement package and added the XMLNSDeclarationStatementsTest class separately.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25635#discussion_r484812696", "createdAt": "2020-09-08T10:24:22Z", "author": {"login": "sanjana"}, "path": "misc/formatter/modules/formatter-core/src/test/resources/testng.xml", "diffHunk": "@@ -29,6 +29,7 @@ under the License.\n         <packages>\n             <package name=\"org.ballerinalang.formatter.core.types.*\" />\n             <package name=\"org.ballerinalang.formatter.core.expressions.*\" />\n+            <package name=\"org.ballerinalang.formatter.core.statements.*\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE5MDc2NA=="}, "originalCommit": {"oid": "1f98511818c9ad998dc1c7cfdde1f398b0a6ebf3"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 190, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}