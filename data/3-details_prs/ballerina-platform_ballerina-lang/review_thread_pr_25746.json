{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MDQyNzMy", "number": 25746, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNToyNjo1N1rOEiluAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNToyNjo1N1rOEiluAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NzA1MDI2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNToyNjo1N1rOHQjgOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODoyOTozMVrOHQpbvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEyMDk1NA==", "bodyText": "do we have to set the symbol to notFound explicitly here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25746#discussion_r487120954", "createdAt": "2020-09-11T15:26:57Z", "author": {"login": "Kishanthan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5102,6 +5102,7 @@ private void checkActionInvocation(BLangInvocation.BLangActionInvocation aInv, B\n         if (((varRef.symbol.tag & SymTag.ENDPOINT) != SymTag.ENDPOINT) && !aInv.async) {\n             dlog.error(aInv.pos, DiagnosticCode.INVALID_ACTION_INVOCATION, varRef.type);\n             this.resultType = symTable.semanticError;\n+            aInv.symbol = symTable.notFoundSymbol;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0701b5895d2afb66a4c7ab5e56adef2f04247aa1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEyOTM1MQ==", "bodyText": "This is to prevent the NPE here \n  \n    \n      ballerina-lang/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java\n    \n    \n         Line 2196\n      in\n      5ac9715\n    \n    \n    \n    \n\n        \n          \n           Symbols.isFlagOn(actionInvocation.symbol.flags, Flags.TRANSACTIONAL)) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25746#discussion_r487129351", "createdAt": "2020-09-11T15:40:40Z", "author": {"login": "rdhananjaya"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5102,6 +5102,7 @@ private void checkActionInvocation(BLangInvocation.BLangActionInvocation aInv, B\n         if (((varRef.symbol.tag & SymTag.ENDPOINT) != SymTag.ENDPOINT) && !aInv.async) {\n             dlog.error(aInv.pos, DiagnosticCode.INVALID_ACTION_INVOCATION, varRef.type);\n             this.resultType = symTable.semanticError;\n+            aInv.symbol = symTable.notFoundSymbol;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEyMDk1NA=="}, "originalCommit": {"oid": "0701b5895d2afb66a4c7ab5e56adef2f04247aa1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzMTAyMw==", "bodyText": "can there be a situation where aInv already had the symbol and this change overrode that symbol ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25746#discussion_r487131023", "createdAt": "2020-09-11T15:43:29Z", "author": {"login": "Kishanthan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5102,6 +5102,7 @@ private void checkActionInvocation(BLangInvocation.BLangActionInvocation aInv, B\n         if (((varRef.symbol.tag & SymTag.ENDPOINT) != SymTag.ENDPOINT) && !aInv.async) {\n             dlog.error(aInv.pos, DiagnosticCode.INVALID_ACTION_INVOCATION, varRef.type);\n             this.resultType = symTable.semanticError;\n+            aInv.symbol = symTable.notFoundSymbol;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEyMDk1NA=="}, "originalCommit": {"oid": "0701b5895d2afb66a4c7ab5e56adef2f04247aa1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzNTkxNg==", "bodyText": "For non error cases the symbol is set here, (bottom of the function) \n  \n    \n      ballerina-lang/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java\n    \n    \n         Line 5130\n      in\n      a16b8a4\n    \n    \n    \n    \n\n        \n          \n           aInv.symbol = remoteFuncSymbol;", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25746#discussion_r487135916", "createdAt": "2020-09-11T15:51:59Z", "author": {"login": "rdhananjaya"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5102,6 +5102,7 @@ private void checkActionInvocation(BLangInvocation.BLangActionInvocation aInv, B\n         if (((varRef.symbol.tag & SymTag.ENDPOINT) != SymTag.ENDPOINT) && !aInv.async) {\n             dlog.error(aInv.pos, DiagnosticCode.INVALID_ACTION_INVOCATION, varRef.type);\n             this.resultType = symTable.semanticError;\n+            aInv.symbol = symTable.notFoundSymbol;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEyMDk1NA=="}, "originalCommit": {"oid": "0701b5895d2afb66a4c7ab5e56adef2f04247aa1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxODExMQ==", "bodyText": "ack", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25746#discussion_r487218111", "createdAt": "2020-09-11T18:29:31Z", "author": {"login": "Kishanthan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5102,6 +5102,7 @@ private void checkActionInvocation(BLangInvocation.BLangActionInvocation aInv, B\n         if (((varRef.symbol.tag & SymTag.ENDPOINT) != SymTag.ENDPOINT) && !aInv.async) {\n             dlog.error(aInv.pos, DiagnosticCode.INVALID_ACTION_INVOCATION, varRef.type);\n             this.resultType = symTable.semanticError;\n+            aInv.symbol = symTable.notFoundSymbol;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEyMDk1NA=="}, "originalCommit": {"oid": "0701b5895d2afb66a4c7ab5e56adef2f04247aa1"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 88, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}