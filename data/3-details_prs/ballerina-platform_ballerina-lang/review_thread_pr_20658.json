{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MDM4Njkx", "number": 20658, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMTozMDowM1rODYylQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMjozMjo1OFrODYzcNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MzIxMTUyOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/java/org/ballerinalang/nats/streaming/consumer/Attach.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMTozMDowM1rOFe2WZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMjo0MToxN1rOFe32dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MjA3MQ==", "bodyText": "Shall we combine this line?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20658#discussion_r367892071", "createdAt": "2020-01-17T11:30:03Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/messaging/nats/src/main/java/org/ballerinalang/nats/streaming/consumer/Attach.java", "diffHunk": "@@ -41,8 +42,15 @@ public static void streamingAttach(ObjectValue streamingListener, ObjectValue se\n         ConcurrentHashMap<ObjectValue, StreamingListener> serviceListenerMap =\n                 (ConcurrentHashMap<ObjectValue, StreamingListener>) streamingListener\n                         .getNativeData(STREAMING_DISPATCHER_LIST);\n-        serviceListenerMap.put(service, new StreamingListener(service, BRuntime.getCurrentRuntime(),\n-                                                              streamingListener.getObjectValue(\"connection\")\n-                                                                      .getStringValue(Constants.URL)));\n+        boolean manualAck = getAckMode(service);\n+        serviceListenerMap.put(service, new StreamingListener(service, manualAck, BRuntime.getCurrentRuntime(),\n+                streamingListener.getObjectValue(\"connection\")\n+                        .getStringValue(Constants.URL)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98bd33630e1209ba2dbe758ebca74bf626d2ebb2"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkxNjY2MA==", "bodyText": "#20658 (comment)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20658#discussion_r367916660", "createdAt": "2020-01-17T12:41:17Z", "author": {"login": "aashikam"}, "path": "stdlib/messaging/nats/src/main/java/org/ballerinalang/nats/streaming/consumer/Attach.java", "diffHunk": "@@ -41,8 +42,15 @@ public static void streamingAttach(ObjectValue streamingListener, ObjectValue se\n         ConcurrentHashMap<ObjectValue, StreamingListener> serviceListenerMap =\n                 (ConcurrentHashMap<ObjectValue, StreamingListener>) streamingListener\n                         .getNativeData(STREAMING_DISPATCHER_LIST);\n-        serviceListenerMap.put(service, new StreamingListener(service, BRuntime.getCurrentRuntime(),\n-                                                              streamingListener.getObjectValue(\"connection\")\n-                                                                      .getStringValue(Constants.URL)));\n+        boolean manualAck = getAckMode(service);\n+        serviceListenerMap.put(service, new StreamingListener(service, manualAck, BRuntime.getCurrentRuntime(),\n+                streamingListener.getObjectValue(\"connection\")\n+                        .getStringValue(Constants.URL)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5MjA3MQ=="}, "originalCommit": {"oid": "98bd33630e1209ba2dbe758ebca74bf626d2ebb2"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MzM1MjIwOnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/java/org/ballerinalang/nats/streaming/consumer/Attach.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMjozMjo1OVrOFe3q2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMzozMToxMFrOFe4_zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkxMzY5MA==", "bodyText": "This is not formatted according to the standard. Previous was correct.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20658#discussion_r367913690", "createdAt": "2020-01-17T12:32:59Z", "author": {"login": "wggihan"}, "path": "stdlib/messaging/nats/src/main/java/org/ballerinalang/nats/streaming/consumer/Attach.java", "diffHunk": "@@ -41,8 +42,15 @@ public static void streamingAttach(ObjectValue streamingListener, ObjectValue se\n         ConcurrentHashMap<ObjectValue, StreamingListener> serviceListenerMap =\n                 (ConcurrentHashMap<ObjectValue, StreamingListener>) streamingListener\n                         .getNativeData(STREAMING_DISPATCHER_LIST);\n-        serviceListenerMap.put(service, new StreamingListener(service, BRuntime.getCurrentRuntime(),\n-                                                              streamingListener.getObjectValue(\"connection\")\n-                                                                      .getStringValue(Constants.URL)));\n+        boolean manualAck = getAckMode(service);\n+        serviceListenerMap.put(service, new StreamingListener(service, manualAck, BRuntime.getCurrentRuntime(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98bd33630e1209ba2dbe758ebca74bf626d2ebb2"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkzNTQzOQ==", "bodyText": "Fixed this in 128133c", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20658#discussion_r367935439", "createdAt": "2020-01-17T13:31:10Z", "author": {"login": "aashikam"}, "path": "stdlib/messaging/nats/src/main/java/org/ballerinalang/nats/streaming/consumer/Attach.java", "diffHunk": "@@ -41,8 +42,15 @@ public static void streamingAttach(ObjectValue streamingListener, ObjectValue se\n         ConcurrentHashMap<ObjectValue, StreamingListener> serviceListenerMap =\n                 (ConcurrentHashMap<ObjectValue, StreamingListener>) streamingListener\n                         .getNativeData(STREAMING_DISPATCHER_LIST);\n-        serviceListenerMap.put(service, new StreamingListener(service, BRuntime.getCurrentRuntime(),\n-                                                              streamingListener.getObjectValue(\"connection\")\n-                                                                      .getStringValue(Constants.URL)));\n+        boolean manualAck = getAckMode(service);\n+        serviceListenerMap.put(service, new StreamingListener(service, manualAck, BRuntime.getCurrentRuntime(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkxMzY5MA=="}, "originalCommit": {"oid": "98bd33630e1209ba2dbe758ebca74bf626d2ebb2"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 518, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}