{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0OTI2Njkw", "number": 27401, "title": "Implement foldingRange capability for language server", "bodyText": "Purpose\nAdd code folding capability for Ballerina.\nFixes https://github.com/ballerina-platform/plugin-vscode/issues/70\nApproach\n\nImplement textDocument/foldingRange support of language server protocol. Ref: https://microsoft.github.io/language-server-protocol/specification#textDocument_foldingRange\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-12-09T05:59:41Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27401", "merged": true, "mergeCommit": {"oid": "0c2ebe8b65a497d9e196d26256bdb21a000b5435"}, "closed": true, "closedAt": "2020-12-11T11:20:23Z", "author": {"login": "prabushi"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkaq5rABqjQwODg3NDA2MDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlGHqbAFqTU1MDAxMjQ4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d24f0d29d7029330b5cab5f4d5365d59a48aff97", "author": {"user": {"login": "prabushi", "name": "Prabushi Samarakoon"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d24f0d29d7029330b5cab5f4d5365d59a48aff97", "committedDate": "2020-12-09T05:52:59Z", "message": "Implement foldingRange capability for language server\n\nAdd code folding capability for Ballerina.\nRelated issue:  https://github.com/ballerina-platform/plugin-vscode/issues/70"}, "afterCommit": {"oid": "6cdcf6054974d4b87c15e8e1754e559a311cdcd3", "author": {"user": {"login": "prabushi", "name": "Prabushi Samarakoon"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6cdcf6054974d4b87c15e8e1754e559a311cdcd3", "committedDate": "2020-12-09T08:41:56Z", "message": "Implement foldingRange capability for language server\n\nAdd code folding capability for Ballerina.\nRelated issue:  https://github.com/ballerina-platform/plugin-vscode/issues/70"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4Nzg2ODIw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27401#pullrequestreview-548786820", "createdAt": "2020-12-10T03:12:27Z", "commit": {"oid": "6cdcf6054974d4b87c15e8e1754e559a311cdcd3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwMzoxMjoyN1rOICzg2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwMzozMjozMVrOICz75g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgxMjA1OQ==", "bodyText": "Let's remove this variable and when we need to return an empty list, use Collections.emptyList() API", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27401#discussion_r539812059", "createdAt": "2020-12-10T03:12:27Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/BallerinaTextDocumentService.java", "diffHunk": "@@ -510,4 +514,30 @@ public void didClose(DidCloseTextDocumentParams params) {\n     @Override\n     public void didSave(DidSaveTextDocumentParams params) {\n     }\n+\n+    @JsonRequest\n+    public CompletableFuture<List<FoldingRange>> foldingRange(FoldingRangeRequestParams params) {\n+        return CompletableFuture.supplyAsync(() -> {\n+            List<FoldingRange> emptyFoldingRangeList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cdcf6054974d4b87c15e8e1754e559a311cdcd3"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgxMjM4Ng==", "bodyText": "With the new project API based implementation changes we don't need isCachedExternalSource check", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27401#discussion_r539812386", "createdAt": "2020-12-10T03:13:24Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/BallerinaTextDocumentService.java", "diffHunk": "@@ -510,4 +514,30 @@ public void didClose(DidCloseTextDocumentParams params) {\n     @Override\n     public void didSave(DidSaveTextDocumentParams params) {\n     }\n+\n+    @JsonRequest\n+    public CompletableFuture<List<FoldingRange>> foldingRange(FoldingRangeRequestParams params) {\n+        return CompletableFuture.supplyAsync(() -> {\n+            List<FoldingRange> emptyFoldingRangeList = new ArrayList<>();\n+            String fileUri = params.getTextDocument().getUri();\n+            Optional<Path> filePath = CommonUtil.getPathFromURI(fileUri);\n+            if (filePath.isEmpty() || CommonUtil.isCachedExternalSource(fileUri)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cdcf6054974d4b87c15e8e1754e559a311cdcd3"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgxMzIxNQ==", "bodyText": "Without accessing the document at this point, let's create a context and pass the context to FoldingRangeProvider.getFoldingRange API. then all the calculations can be carry out within the API", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27401#discussion_r539813215", "createdAt": "2020-12-10T03:15:51Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/BallerinaTextDocumentService.java", "diffHunk": "@@ -510,4 +514,30 @@ public void didClose(DidCloseTextDocumentParams params) {\n     @Override\n     public void didSave(DidSaveTextDocumentParams params) {\n     }\n+\n+    @JsonRequest\n+    public CompletableFuture<List<FoldingRange>> foldingRange(FoldingRangeRequestParams params) {\n+        return CompletableFuture.supplyAsync(() -> {\n+            List<FoldingRange> emptyFoldingRangeList = new ArrayList<>();\n+            String fileUri = params.getTextDocument().getUri();\n+            Optional<Path> filePath = CommonUtil.getPathFromURI(fileUri);\n+            if (filePath.isEmpty() || CommonUtil.isCachedExternalSource(fileUri)) {\n+                return emptyFoldingRangeList;\n+            }\n+            try {\n+                Optional<Document> document = workspaceManager.document(filePath.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cdcf6054974d4b87c15e8e1754e559a311cdcd3"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgxODc3MQ==", "bodyText": "shall we try to handle the imports within the FoldingRangeFinder? Otherwise we have to expose the createFoldingRange utility method as well as a part of the syntax tree visiting is disconnected", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27401#discussion_r539818771", "createdAt": "2020-12-10T03:32:00Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/foldingrange/FoldingRangeProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.ballerinalang.langserver.foldingrange;\n+\n+import io.ballerina.compiler.syntax.tree.ImportDeclarationNode;\n+import io.ballerina.compiler.syntax.tree.ModulePartNode;\n+import io.ballerina.compiler.syntax.tree.SyntaxTree;\n+import org.eclipse.lsp4j.FoldingRange;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Provider class of folding ranges.\n+ */\n+public class FoldingRangeProvider {\n+\n+    /**\n+     * Returns the list of folding ranges for the given syntax tree.\n+     *\n+     * @param syntaxTree Syntax tree representation\n+     * @return The list of folding ranges\n+     */\n+    public static List<FoldingRange> getFoldingRange(SyntaxTree syntaxTree) {\n+\n+        ModulePartNode modulePartNode = syntaxTree.rootNode();\n+        FoldingRangeFinder foldingRangeFinder = new FoldingRangeFinder();\n+        List<FoldingRange> foldingRangeList = new ArrayList<>(foldingRangeFinder.getFoldingRange(modulePartNode));\n+\n+        List<ImportDeclarationNode> imports = modulePartNode.imports().stream().collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cdcf6054974d4b87c15e8e1754e559a311cdcd3"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgxODk4Mg==", "bodyText": "Shall we add @since annotation as well?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27401#discussion_r539818982", "createdAt": "2020-12-10T03:32:31Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-core/src/main/java/org/ballerinalang/langserver/foldingrange/FoldingRangeProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.ballerinalang.langserver.foldingrange;\n+\n+import io.ballerina.compiler.syntax.tree.ImportDeclarationNode;\n+import io.ballerina.compiler.syntax.tree.ModulePartNode;\n+import io.ballerina.compiler.syntax.tree.SyntaxTree;\n+import org.eclipse.lsp4j.FoldingRange;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Provider class of folding ranges.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cdcf6054974d4b87c15e8e1754e559a311cdcd3"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6cdcf6054974d4b87c15e8e1754e559a311cdcd3", "author": {"user": {"login": "prabushi", "name": "Prabushi Samarakoon"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6cdcf6054974d4b87c15e8e1754e559a311cdcd3", "committedDate": "2020-12-09T08:41:56Z", "message": "Implement foldingRange capability for language server\n\nAdd code folding capability for Ballerina.\nRelated issue:  https://github.com/ballerina-platform/plugin-vscode/issues/70"}, "afterCommit": {"oid": "f868b73f431b80a27be712957817e762edd0602d", "author": {"user": {"login": "prabushi", "name": "Prabushi Samarakoon"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f868b73f431b80a27be712957817e762edd0602d", "committedDate": "2020-12-10T11:23:21Z", "message": "Implement foldingRange capability for language server\n\nAdd code folding capability for Ballerina.\nRelated issue: https://github.com/ballerina-platform/plugin-vscode/issues/70"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f868b73f431b80a27be712957817e762edd0602d", "author": {"user": {"login": "prabushi", "name": "Prabushi Samarakoon"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f868b73f431b80a27be712957817e762edd0602d", "committedDate": "2020-12-10T11:23:21Z", "message": "Implement foldingRange capability for language server\n\nAdd code folding capability for Ballerina.\nRelated issue: https://github.com/ballerina-platform/plugin-vscode/issues/70"}, "afterCommit": {"oid": "470935775a6b78611c5419ccd95a8dc8cb05cbff", "author": {"user": {"login": "prabushi", "name": "Prabushi Samarakoon"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/470935775a6b78611c5419ccd95a8dc8cb05cbff", "committedDate": "2020-12-10T11:27:30Z", "message": "Implement foldingRange capability for language server\n\nAdd code folding capability for Ballerina.\nRelated issue: https://github.com/ballerina-platform/plugin-vscode/issues/70"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d8137f601b728b19ca961c8352d38098d00cae4", "author": {"user": {"login": "prabushi", "name": "Prabushi Samarakoon"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0d8137f601b728b19ca961c8352d38098d00cae4", "committedDate": "2020-12-10T15:47:37Z", "message": "Implement foldingRange capability for language server\n\nAdd code folding capability for Ballerina.\nRelated issue: https://github.com/ballerina-platform/plugin-vscode/issues/70"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b5e21bc595292e9dfda2ede3cf6b0f2267f8a9d", "author": {"user": {"login": "prabushi", "name": "Prabushi Samarakoon"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7b5e21bc595292e9dfda2ede3cf6b0f2267f8a9d", "committedDate": "2020-12-10T20:22:47Z", "message": "Test cases for foldingRange feature\n\nAdd testcases for lineFoldingOnly case of foldingRange feature."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "470935775a6b78611c5419ccd95a8dc8cb05cbff", "author": {"user": {"login": "prabushi", "name": "Prabushi Samarakoon"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/470935775a6b78611c5419ccd95a8dc8cb05cbff", "committedDate": "2020-12-10T11:27:30Z", "message": "Implement foldingRange capability for language server\n\nAdd code folding capability for Ballerina.\nRelated issue: https://github.com/ballerina-platform/plugin-vscode/issues/70"}, "afterCommit": {"oid": "7b5e21bc595292e9dfda2ede3cf6b0f2267f8a9d", "author": {"user": {"login": "prabushi", "name": "Prabushi Samarakoon"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7b5e21bc595292e9dfda2ede3cf6b0f2267f8a9d", "committedDate": "2020-12-10T20:22:47Z", "message": "Test cases for foldingRange feature\n\nAdd testcases for lineFoldingOnly case of foldingRange feature."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMDEyNDgw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27401#pullrequestreview-550012480", "createdAt": "2020-12-11T11:20:14Z", "commit": {"oid": "7b5e21bc595292e9dfda2ede3cf6b0f2267f8a9d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4776, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}