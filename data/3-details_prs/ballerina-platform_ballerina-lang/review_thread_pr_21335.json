{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwODAwNjg2", "number": 21335, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoyNTo0NFrODje9Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoyNTo0NFrODje9Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTMzODk5OnYy", "diffSide": "RIGHT", "path": "tool-plugins/vscode/src/extension.ts", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoyNTo0NFrOFvUPDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNjoxNTo0MVrOFwUitw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1ODkyNw==", "bodyText": "I think this is to capture the initial configuration at the server-side? It seems that we are violating the LSP by sending the didChangeConfiguration notification through the extension bypassing the protocol. I think what we should do to fetch the initial configuration is to use the configuration request at the server-side [1].\n[1] https://microsoft.github.io/language-server-protocol/specifications/specification-3-14/#workspace_configuration", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21335#discussion_r385158927", "createdAt": "2020-02-27T14:25:44Z", "author": {"login": "nadeeshaan"}, "path": "tool-plugins/vscode/src/extension.ts", "diffHunk": "@@ -91,6 +91,21 @@ export function activate(context: ExtensionContext): Promise<any> {\n         activateTreeView(ballerinaExtInstance);\n         // Enable Ballerina Syntax Highlighter\n         activateSyntaxHighlighter(ballerinaExtInstance);\n+\n+        ballerinaExtInstance.onReady().then(() => {\n+            const langClient = <ExtendedLangClient>ballerinaExtInstance.langClient;\n+            // Send initial configuration \n+            const args: DidChangeConfigurationParams = {\n+                settings: workspace.getConfiguration('ballerina'),\n+            };\n+            langClient.sendNotification(\"workspace/didChangeConfiguration\", args);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "396d3313e219e543e3964e0a34ba0dd0a2dcdf9d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2MzkwNQ==", "bodyText": "+1, initially I was reluctant to add this workspace/configuration request since some clients might not have implemented it. If we stressing down on the protocol let's strict with it, I'll add a fix.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21335#discussion_r385563905", "createdAt": "2020-02-28T08:28:59Z", "author": {"login": "rasika"}, "path": "tool-plugins/vscode/src/extension.ts", "diffHunk": "@@ -91,6 +91,21 @@ export function activate(context: ExtensionContext): Promise<any> {\n         activateTreeView(ballerinaExtInstance);\n         // Enable Ballerina Syntax Highlighter\n         activateSyntaxHighlighter(ballerinaExtInstance);\n+\n+        ballerinaExtInstance.onReady().then(() => {\n+            const langClient = <ExtendedLangClient>ballerinaExtInstance.langClient;\n+            // Send initial configuration \n+            const args: DidChangeConfigurationParams = {\n+                settings: workspace.getConfiguration('ballerina'),\n+            };\n+            langClient.sendNotification(\"workspace/didChangeConfiguration\", args);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1ODkyNw=="}, "originalCommit": {"oid": "396d3313e219e543e3964e0a34ba0dd0a2dcdf9d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU2OTQ2NQ==", "bodyText": "+1, initially I was reluctant to add this workspace/configuration request since some clients might not have implemented it. If we stressing down on the protocol let's strict with it, I'll add a fix.\n\nAwesome :D", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21335#discussion_r385569465", "createdAt": "2020-02-28T08:43:00Z", "author": {"login": "nadeeshaan"}, "path": "tool-plugins/vscode/src/extension.ts", "diffHunk": "@@ -91,6 +91,21 @@ export function activate(context: ExtensionContext): Promise<any> {\n         activateTreeView(ballerinaExtInstance);\n         // Enable Ballerina Syntax Highlighter\n         activateSyntaxHighlighter(ballerinaExtInstance);\n+\n+        ballerinaExtInstance.onReady().then(() => {\n+            const langClient = <ExtendedLangClient>ballerinaExtInstance.langClient;\n+            // Send initial configuration \n+            const args: DidChangeConfigurationParams = {\n+                settings: workspace.getConfiguration('ballerina'),\n+            };\n+            langClient.sendNotification(\"workspace/didChangeConfiguration\", args);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1ODkyNw=="}, "originalCommit": {"oid": "396d3313e219e543e3964e0a34ba0dd0a2dcdf9d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIxMjUzNQ==", "bodyText": "As discussed since we are having troubles in getting the result of the CompletableFuture, will do this as an improvement. Created #21390 to track this.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21335#discussion_r386212535", "createdAt": "2020-03-02T06:15:41Z", "author": {"login": "rasika"}, "path": "tool-plugins/vscode/src/extension.ts", "diffHunk": "@@ -91,6 +91,21 @@ export function activate(context: ExtensionContext): Promise<any> {\n         activateTreeView(ballerinaExtInstance);\n         // Enable Ballerina Syntax Highlighter\n         activateSyntaxHighlighter(ballerinaExtInstance);\n+\n+        ballerinaExtInstance.onReady().then(() => {\n+            const langClient = <ExtendedLangClient>ballerinaExtInstance.langClient;\n+            // Send initial configuration \n+            const args: DidChangeConfigurationParams = {\n+                settings: workspace.getConfiguration('ballerina'),\n+            };\n+            langClient.sendNotification(\"workspace/didChangeConfiguration\", args);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1ODkyNw=="}, "originalCommit": {"oid": "396d3313e219e543e3964e0a34ba0dd0a2dcdf9d"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1038, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}