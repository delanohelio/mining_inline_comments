{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MDAzNzE3", "number": 24955, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo0NjoxMFrOESSyTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo0NjoxMFrOESSyTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjE3NjE0OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo0NjoxMFrOG3ZPFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTo0MDo1OFrOG3bLtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczODMyNg==", "bodyText": "Trying to recover again can be expensive..\nSince we have already parsed the expression and knows that it is invalid, we can create a dummy literal/var-ref here and use that as the uri.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24955#discussion_r460738326", "createdAt": "2020-07-27T08:46:10Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -8245,7 +8245,14 @@ private STNode parseFieldIdent() {\n     private STNode parseXMLNamespaceDeclaration(boolean isModuleVar) {\n         startContext(ParserRuleContext.XML_NAMESPACE_DECLARATION);\n         STNode xmlnsKeyword = parseXMLNSKeyword();\n-        STNode namespaceUri = parseXMLNamespaceUri();\n+\n+        STNode namespaceUri = parseSimpleConstExpr();\n+        while (!isValidXMLNameSpaceURI(namespaceUri)) {\n+            xmlnsKeyword = SyntaxErrors.cloneWithTrailingInvalidNodeMinutiae(xmlnsKeyword,\n+                    namespaceUri, DiagnosticErrorCode.ERROR_INVALID_XML_NAMESPACE_URI);\n+            namespaceUri = parseSimpleConstExpr();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79251066fd6228e442f292a7ea6b163941ba2551"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2Njg1MQ==", "bodyText": "Then while can be a if", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24955#discussion_r460766851", "createdAt": "2020-07-27T09:34:52Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -8245,7 +8245,14 @@ private STNode parseFieldIdent() {\n     private STNode parseXMLNamespaceDeclaration(boolean isModuleVar) {\n         startContext(ParserRuleContext.XML_NAMESPACE_DECLARATION);\n         STNode xmlnsKeyword = parseXMLNSKeyword();\n-        STNode namespaceUri = parseXMLNamespaceUri();\n+\n+        STNode namespaceUri = parseSimpleConstExpr();\n+        while (!isValidXMLNameSpaceURI(namespaceUri)) {\n+            xmlnsKeyword = SyntaxErrors.cloneWithTrailingInvalidNodeMinutiae(xmlnsKeyword,\n+                    namespaceUri, DiagnosticErrorCode.ERROR_INVALID_XML_NAMESPACE_URI);\n+            namespaceUri = parseSimpleConstExpr();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczODMyNg=="}, "originalCommit": {"oid": "79251066fd6228e442f292a7ea6b163941ba2551"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2Nzk5MA==", "bodyText": "but what if there is a valid uri next to it eg: xmlns 5 \"myxml\" as ns1; ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24955#discussion_r460767990", "createdAt": "2020-07-27T09:37:03Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -8245,7 +8245,14 @@ private STNode parseFieldIdent() {\n     private STNode parseXMLNamespaceDeclaration(boolean isModuleVar) {\n         startContext(ParserRuleContext.XML_NAMESPACE_DECLARATION);\n         STNode xmlnsKeyword = parseXMLNSKeyword();\n-        STNode namespaceUri = parseXMLNamespaceUri();\n+\n+        STNode namespaceUri = parseSimpleConstExpr();\n+        while (!isValidXMLNameSpaceURI(namespaceUri)) {\n+            xmlnsKeyword = SyntaxErrors.cloneWithTrailingInvalidNodeMinutiae(xmlnsKeyword,\n+                    namespaceUri, DiagnosticErrorCode.ERROR_INVALID_XML_NAMESPACE_URI);\n+            namespaceUri = parseSimpleConstExpr();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczODMyNg=="}, "originalCommit": {"oid": "79251066fd6228e442f292a7ea6b163941ba2551"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc3MDIyOQ==", "bodyText": "I see your point.\n+1 for the current approach then.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24955#discussion_r460770229", "createdAt": "2020-07-27T09:40:58Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -8245,7 +8245,14 @@ private STNode parseFieldIdent() {\n     private STNode parseXMLNamespaceDeclaration(boolean isModuleVar) {\n         startContext(ParserRuleContext.XML_NAMESPACE_DECLARATION);\n         STNode xmlnsKeyword = parseXMLNSKeyword();\n-        STNode namespaceUri = parseXMLNamespaceUri();\n+\n+        STNode namespaceUri = parseSimpleConstExpr();\n+        while (!isValidXMLNameSpaceURI(namespaceUri)) {\n+            xmlnsKeyword = SyntaxErrors.cloneWithTrailingInvalidNodeMinutiae(xmlnsKeyword,\n+                    namespaceUri, DiagnosticErrorCode.ERROR_INVALID_XML_NAMESPACE_URI);\n+            namespaceUri = parseSimpleConstExpr();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczODMyNg=="}, "originalCommit": {"oid": "79251066fd6228e442f292a7ea6b163941ba2551"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 454, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}