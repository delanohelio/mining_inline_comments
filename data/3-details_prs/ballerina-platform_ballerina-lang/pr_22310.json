{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NTU1MzMx", "number": 22310, "title": "Docerina support for record/object field-level documentation", "bodyText": "Purpose\n\nDocerina support for record/object field-level documentation\n\nBallerina:\n# Person record\npublic type Person record {|\n    # name of the person\n    string name;\n    # age of the person\n    int age;\n    # country code of the person\n    CountryCode countryCode;\n|};\nAPI Docs:\n\nIf field description is given in the record/object Documentation and field-level both, priority is given to the record/object Documentation.\n# Apartment record\n#\n# + number - number of the apartment \n# + street - street of the apartment \n# + countryCode - country code of the apartment \npublic type Appartment record {|\n    # apartment no\n    int number;\n    # apartment street\n    string street;\n    # apartment country-code\n    CountryCode countryCode;\n|};\nAPI Docs:\n\nFixes #22307\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-03-30T10:25:22Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22310", "merged": true, "mergeCommit": {"oid": "33a64180ead0e47c5fc536bad901203d3ea8340d"}, "closed": true, "closedAt": "2020-03-31T16:43:45Z", "author": {"login": "pramodya1994"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSr3nXgH2gAyMzk1NTU1MzMxOjQ4MmRkNjNhNGI1MTExMWMxNTk3MWNjZWRhZTIxZmI2NGU4NjZkN2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTBdPMgBqjMxODI4NTg2MzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "482dd63a4b51111c15971ccedae21fb64e866d7b", "author": {"user": {"login": "pramodya1994", "name": "Pramodya Mendis"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/482dd63a4b51111c15971ccedae21fb64e866d7b", "committedDate": "2020-03-30T10:23:23Z", "message": "Docerina support for record/object field-level documentation\n\nFixes #22307"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "47885e0e3c265e696b6d4b2524fc94dae430cdae", "author": {"user": {"login": "pramodya1994", "name": "Pramodya Mendis"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/47885e0e3c265e696b6d4b2524fc94dae430cdae", "committedDate": "2020-03-30T14:20:13Z", "message": "Add unit tests for docerina module/object field level support"}, "afterCommit": {"oid": "a8da4d3c83c92bf3677c6146b22a64c8d05dffaf", "author": {"user": {"login": "pramodya1994", "name": "Pramodya Mendis"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a8da4d3c83c92bf3677c6146b22a64c8d05dffaf", "committedDate": "2020-03-30T14:48:32Z", "message": "Add unit tests for docerina module/object field level support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MDQ3NTk5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22310#pullrequestreview-384047599", "createdAt": "2020-03-30T16:52:50Z", "commit": {"oid": "a8da4d3c83c92bf3677c6146b22a64c8d05dffaf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1Mjo1MFrOF9zEdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1Mjo1MFrOF9zEdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0NDE4MQ==", "bodyText": "@pramodya1994 Do we need to declare these variable if its only used once?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22310#discussion_r400344181", "createdAt": "2020-03-30T16:52:50Z", "author": {"login": "keizer619"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/docerina/FieldLevelDocsTest.java", "diffHunk": "@@ -0,0 +1,235 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.test.docerina;\n+\n+import org.ballerinalang.docgen.docs.BallerinaDocGenerator;\n+import org.ballerinalang.docgen.generator.model.DefaultableVarible;\n+import org.ballerinalang.docgen.generator.model.Module;\n+import org.ballerinalang.docgen.generator.model.Object;\n+import org.ballerinalang.docgen.generator.model.Project;\n+import org.ballerinalang.docgen.generator.model.Record;\n+import org.ballerinalang.docgen.model.ModuleDoc;\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Test class to check record/object field-level documentation in docerina.\n+ */\n+public class FieldLevelDocsTest {\n+\n+    private Module testModule;\n+    // record with module-level documentation\n+    private Record addressRecord;\n+    // record with field-level documentation\n+    private Record personRecord;\n+    // record with both module-level & field-level documentation\n+    private Record apartmentRecord;\n+    // Object with module-level documentation\n+    private Object studentObj;\n+    // Object with field-level documentation\n+    private Object teacherObj;\n+\n+    private static final String PARAGRAPH_OPEN_TAG = \"<p>\";\n+    private static final String PARAGRAPH_CLOSE_TAG = \"</p>\";\n+    private static final String NEW_LINE = \"\\n\";\n+    private static final String PARAGRAPH_CLOSE_WITH_NEW_LINE = PARAGRAPH_CLOSE_TAG + NEW_LINE;\n+\n+    @BeforeClass\n+    public void setup() throws IOException {\n+        String sourceRoot = \"test-src/docerina/fieldLevelDocsProject\";\n+        CompileResult result = BCompileUtil.compile(sourceRoot, \"testModule\");\n+\n+        List<BLangPackage> modules = new LinkedList<>();\n+        modules.add((BLangPackage) result.getAST());\n+        Map<String, ModuleDoc> docsMap = BallerinaDocGenerator.generateModuleDocsFromBLangPackages(\n+                Paths.get(\"src/test/resources\", sourceRoot).toAbsolutePath().toString(), modules);\n+        List<ModuleDoc> moduleDocList = new ArrayList<>(docsMap.values());\n+        moduleDocList.sort(Comparator.comparing(pkg -> pkg.bLangPackage.packageID.toString()));\n+        Map<String, List<Path>> resources = new HashMap<>();\n+\n+        Project project = BallerinaDocGenerator.getDocsGenModel(moduleDocList, resources);\n+        testModule = project.modules.get(0);\n+\n+        List<Record> records = testModule.records;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8da4d3c83c92bf3677c6146b22a64c8d05dffaf"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MDU4NDAw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22310#pullrequestreview-384058400", "createdAt": "2020-03-30T17:06:17Z", "commit": {"oid": "a8da4d3c83c92bf3677c6146b22a64c8d05dffaf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzowNjoxN1rOF9zmQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzowNjoxN1rOF9zmQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1MjgzMg==", "bodyText": "@pramodya1994 is above path works on windows?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22310#discussion_r400352832", "createdAt": "2020-03-30T17:06:17Z", "author": {"login": "keizer619"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/docerina/FieldLevelDocsTest.java", "diffHunk": "@@ -0,0 +1,235 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.ballerinalang.test.docerina;\n+\n+import org.ballerinalang.docgen.docs.BallerinaDocGenerator;\n+import org.ballerinalang.docgen.generator.model.DefaultableVarible;\n+import org.ballerinalang.docgen.generator.model.Module;\n+import org.ballerinalang.docgen.generator.model.Object;\n+import org.ballerinalang.docgen.generator.model.Project;\n+import org.ballerinalang.docgen.generator.model.Record;\n+import org.ballerinalang.docgen.model.ModuleDoc;\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Test class to check record/object field-level documentation in docerina.\n+ */\n+public class FieldLevelDocsTest {\n+\n+    private Module testModule;\n+    // record with module-level documentation\n+    private Record addressRecord;\n+    // record with field-level documentation\n+    private Record personRecord;\n+    // record with both module-level & field-level documentation\n+    private Record apartmentRecord;\n+    // Object with module-level documentation\n+    private Object studentObj;\n+    // Object with field-level documentation\n+    private Object teacherObj;\n+\n+    private static final String PARAGRAPH_OPEN_TAG = \"<p>\";\n+    private static final String PARAGRAPH_CLOSE_TAG = \"</p>\";\n+    private static final String NEW_LINE = \"\\n\";\n+    private static final String PARAGRAPH_CLOSE_WITH_NEW_LINE = PARAGRAPH_CLOSE_TAG + NEW_LINE;\n+\n+    @BeforeClass\n+    public void setup() throws IOException {\n+        String sourceRoot = \"test-src/docerina/fieldLevelDocsProject\";\n+        CompileResult result = BCompileUtil.compile(sourceRoot, \"testModule\");\n+\n+        List<BLangPackage> modules = new LinkedList<>();\n+        modules.add((BLangPackage) result.getAST());\n+        Map<String, ModuleDoc> docsMap = BallerinaDocGenerator.generateModuleDocsFromBLangPackages(\n+                Paths.get(\"src/test/resources\", sourceRoot).toAbsolutePath().toString(), modules);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8da4d3c83c92bf3677c6146b22a64c8d05dffaf"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MzIwNjgx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22310#pullrequestreview-384320681", "createdAt": "2020-03-31T00:18:08Z", "commit": {"oid": "a8da4d3c83c92bf3677c6146b22a64c8d05dffaf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDoxODowOVrOF-A29Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDoxODowOVrOF-A29Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3MDEwMQ==", "bodyText": "Shall we have some test cases with md at field level", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22310#discussion_r400570101", "createdAt": "2020-03-31T00:18:09Z", "author": {"login": "hevayo"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/docerina/fieldLevelDocsProject/src/testModule/test.bal", "diffHunk": "@@ -0,0 +1,64 @@\n+import ballerina/io;\n+\n+public const string LKA = \"LKA\";\n+public const string LK = \"LK\";\n+public const string USA = \"USA\";\n+\n+public type CountryCode LK|LKA|USA;\n+\n+# Address record\n+#\n+# + street - street of the address\n+# + city - city of the address\n+# + countryCode - country code of the address\n+public type Address record {|\n+    string street;\n+    string city;\n+    CountryCode countryCode;\n+|};\n+\n+# Person record\n+public type Person record {|\n+    # name of the person\n+    string name;\n+    # age of the person\n+    int age;\n+    # country code of the person\n+    CountryCode countryCode;\n+|};\n+\n+# Apartment record\n+#\n+# + number - number of the apartment\n+# + street - street of the apartment\n+# + countryCode - country code of the apartment\n+public type Apartment record {|\n+    # apartment no\n+    int number;\n+    # apartment street\n+    string street;\n+    # apartment country-code\n+    CountryCode countryCode;\n+|};\n+\n+# Student object\n+#\n+# + name - student name\n+# + age - student age\n+public type Student object {\n+    public string name = \"Saman\";\n+    public int age = 15;\n+};\n+\n+# Teacher object\n+public type Teacher object {\n+    # Teacher name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8da4d3c83c92bf3677c6146b22a64c8d05dffaf"}, "originalPosition": 55}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8da4d3c83c92bf3677c6146b22a64c8d05dffaf", "author": {"user": {"login": "pramodya1994", "name": "Pramodya Mendis"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a8da4d3c83c92bf3677c6146b22a64c8d05dffaf", "committedDate": "2020-03-30T14:48:32Z", "message": "Add unit tests for docerina module/object field level support"}, "afterCommit": {"oid": "a1202add143c3796cc19245cdd3b0aad30acb65f", "author": {"user": {"login": "pramodya1994", "name": "Pramodya Mendis"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a1202add143c3796cc19245cdd3b0aad30acb65f", "committedDate": "2020-03-31T06:38:22Z", "message": "Add unit tests for docerina module/object field level support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NTUzMTUx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22310#pullrequestreview-384553151", "createdAt": "2020-03-31T09:24:38Z", "commit": {"oid": "a1202add143c3796cc19245cdd3b0aad30acb65f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8596ca149accbd82c6035ae5e20690d568ec1f65", "author": {"user": {"login": "pramodya1994", "name": "Pramodya Mendis"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8596ca149accbd82c6035ae5e20690d568ec1f65", "committedDate": "2020-03-31T11:32:05Z", "message": "Add unit tests for docerina module/object field level support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a1202add143c3796cc19245cdd3b0aad30acb65f", "author": {"user": {"login": "pramodya1994", "name": "Pramodya Mendis"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a1202add143c3796cc19245cdd3b0aad30acb65f", "committedDate": "2020-03-31T06:38:22Z", "message": "Add unit tests for docerina module/object field level support"}, "afterCommit": {"oid": "8596ca149accbd82c6035ae5e20690d568ec1f65", "author": {"user": {"login": "pramodya1994", "name": "Pramodya Mendis"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8596ca149accbd82c6035ae5e20690d568ec1f65", "committedDate": "2020-03-31T11:32:05Z", "message": "Add unit tests for docerina module/object field level support"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4078, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}