{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNTA4NTg4", "number": 21415, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNDo1NTo1N1rODkg9jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNDo1NTo1N1rODkg9jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjE1Mzc0OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/tracing/TracingTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNDo1NTo1N1rOFw4WBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNDo1NTo1N1rOFw4WBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc5OTEwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // 46. echoServi\n          \n          \n            \n                    // ce5__service_0 -> ballerina/http/Caller:respond\n          \n          \n            \n                    // 46. echoService5__service_0 -> ballerina/http/Caller:respond", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21415#discussion_r386799109", "createdAt": "2020-03-03T04:55:57Z", "author": {"login": "nadundesilva"}, "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/observability/tracing/TracingTestCase.java", "diffHunk": "@@ -216,6 +216,33 @@ public void testOOTBTracingWithWorkers() throws Exception {\n     }\n \n     @Test(dependsOnMethods = \"testOOTBTracingWithWorkers\")\n+    public void testOOTBTracingForUserDefinedFunctions() throws Exception {\n+        final String service = \"http://localhost:9095/echoService/\";\n+        HttpClientRequest.doGet(service + \"resourceOne\");\n+        Thread.sleep(1000);\n+        Type type = new TypeToken<List<BMockSpan>>() {\n+        }.getType();\n+        String data = HttpClientRequest.doGet(service + \"getMockTracers\").getData();\n+        List<BMockSpan> mockSpans = new Gson().fromJson(data, type);\n+\n+        // 39. echoService3__service_0 -> getMockTracers (Root Span)\n+        // 40. echoService3__service_0 -> ballerina/http/Caller:respond\n+\n+        // 41. echoService5__service_0 -> resourceOne (Root Span)\n+        // 42. echoService5__service_0 -> ballerina/http/Client:get\n+        // 43. echoService5__service_0 -> ballerina/http/HttpClient:get\n+        // 44. echoService5__service_0 -> resourceTwo\n+        // 45. echoService5__service_0 -> default:sayHelloWorld2\n+        // 46. echoServi\n+        // ce5__service_0 -> ballerina/http/Caller:respond", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3488d013b8f09ff7c9c2e3f2fc88a0c7284198a3"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1082, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}