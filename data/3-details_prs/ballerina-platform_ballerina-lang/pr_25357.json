{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwODQ1NzMy", "number": 25357, "title": "Refactor genJMethodForBFunc method of JvmMethodGen", "bodyText": "Purpose\n\nThis is an attempt at refactoring runtime codegen classes. First attempt to refactor the genJMethodForBFunc method of JvmMethodGen. Other changes include moving static functions from the JvmMethodGen class to common utility classes.\n\nRelated issue #25252 and #24405\nApproach\n\nBreak the genJMethodForBFunc method to smaller methods and remove static methods from JvmMethodGen class.\n\nSamples\n\nN/A\n\nRemarks\n\nN/A\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-08-20T11:28:02Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25357", "merged": true, "mergeCommit": {"oid": "5310c96b81b07b2c6a20e4ee4e3de87acd3ed511"}, "closed": true, "closedAt": "2020-08-25T09:24:43Z", "author": {"login": "riyafa"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdBDXy-ABqjM2NzkyODQ3NzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCToqvAFqTQ3NDI5NDE3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8bf77ee3c92f895dbefdbbbd60e297b51e1c97be", "author": {"user": {"login": "riyafa", "name": "Riyafa Abdul Hameed"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8bf77ee3c92f895dbefdbbbd60e297b51e1c97be", "committedDate": "2020-08-20T11:21:24Z", "message": "Refactor genJMethodForBFunc method of JvmMethodGen\n\nRelated issue https://github.com/ballerina-platform/ballerina-lang/issues/25252"}, "afterCommit": {"oid": "3d4f1c6591e04f89e8a6586c9bdac15d068a223c", "author": {"user": {"login": "riyafa", "name": "Riyafa Abdul Hameed"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3d4f1c6591e04f89e8a6586c9bdac15d068a223c", "committedDate": "2020-08-21T11:46:07Z", "message": "Refactor genJMethodForBFunc method of JvmMethodGen\n\nRelated issue https://github.com/ballerina-platform/ballerina-lang/issues/25252"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNjc3Mjk5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25357#pullrequestreview-472677299", "createdAt": "2020-08-21T17:46:44Z", "commit": {"oid": "3d4f1c6591e04f89e8a6586c9bdac15d068a223c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzo0Njo0NVrOHE18vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzo1NTowMVrOHE2MiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg0MDI1Mg==", "bodyText": "Can we change the class name to something like JvmCodegenUtil ? I think it's more understandable.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25357#discussion_r474840252", "createdAt": "2020-08-21T17:46:45Z", "author": {"login": "HindujaB"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmCodeGenCommons.java", "diffHunk": "@@ -0,0 +1,546 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.ballerinalang.compiler.bir.codegen;\n+\n+import org.ballerinalang.compiler.BLangCompilerException;\n+import org.ballerinalang.model.elements.PackageID;\n+import org.objectweb.asm.ClassWriter;\n+import org.objectweb.asm.FieldVisitor;\n+import org.objectweb.asm.Handle;\n+import org.objectweb.asm.Label;\n+import org.objectweb.asm.MethodVisitor;\n+import org.objectweb.asm.Opcodes;\n+import org.objectweb.asm.Type;\n+import org.wso2.ballerinalang.compiler.bir.codegen.internal.AsyncDataCollector;\n+import org.wso2.ballerinalang.compiler.bir.codegen.internal.LabelGenerator;\n+import org.wso2.ballerinalang.compiler.bir.codegen.internal.ScheduleFunctionInfo;\n+import org.wso2.ballerinalang.compiler.bir.codegen.interop.InteropMethodGen;\n+import org.wso2.ballerinalang.compiler.bir.codegen.interop.JType;\n+import org.wso2.ballerinalang.compiler.bir.codegen.interop.JTypeTags;\n+import org.wso2.ballerinalang.compiler.bir.model.BIRInstruction;\n+import org.wso2.ballerinalang.compiler.bir.model.BIRNode;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BType;\n+import org.wso2.ballerinalang.compiler.util.Name;\n+import org.wso2.ballerinalang.compiler.util.ResolvedTypeBuilder;\n+import org.wso2.ballerinalang.compiler.util.TypeTags;\n+import org.wso2.ballerinalang.compiler.util.diagnotic.DiagnosticPos;\n+import org.wso2.ballerinalang.util.Flags;\n+\n+import java.util.List;\n+\n+import static org.objectweb.asm.Opcodes.AASTORE;\n+import static org.objectweb.asm.Opcodes.ALOAD;\n+import static org.objectweb.asm.Opcodes.ANEWARRAY;\n+import static org.objectweb.asm.Opcodes.BIPUSH;\n+import static org.objectweb.asm.Opcodes.DUP;\n+import static org.objectweb.asm.Opcodes.GOTO;\n+import static org.objectweb.asm.Opcodes.ICONST_0;\n+import static org.objectweb.asm.Opcodes.ICONST_1;\n+import static org.objectweb.asm.Opcodes.IFNE;\n+import static org.objectweb.asm.Opcodes.INVOKESPECIAL;\n+import static org.objectweb.asm.Opcodes.INVOKEVIRTUAL;\n+import static org.objectweb.asm.Opcodes.NEW;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.ARRAY_VALUE;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.BAL_EXTENSION;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.BTYPE;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.B_STRING_VALUE;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.CHANNEL_DETAILS;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.CONSTRUCTOR_INIT_METHOD;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.DECIMAL_VALUE;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.ERROR_VALUE;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.FILE_NAME_PERIOD_SEPERATOR;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.FUNCTION;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.FUNCTION_POINTER;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.FUTURE_VALUE;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.HANDLE_VALUE;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.JAVA_PACKAGE_SEPERATOR;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.JVM_INIT_METHOD;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.MAP_VALUE;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.OBJECT;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.OBJECT_VALUE;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.STRAND_CLASS;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.STRAND_METADATA;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.STRAND_METADATA_VAR_PREFIX;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.STREAM_VALUE;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.STRING_VALUE;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.TABLE_VALUE_IMPL;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.TYPEDESC_VALUE;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.WINDOWS_PATH_SEPERATOR;\n+import static org.wso2.ballerinalang.compiler.bir.codegen.JvmConstants.XML_VALUE;\n+\n+/**\n+ * The common functions used in CodeGen.\n+ */\n+public class JvmCodeGenCommons {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d4f1c6591e04f89e8a6586c9bdac15d068a223c"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg0NDI5Ng==", "bodyText": "Is this indentation correct? I checked with WSO2 checkstyle it was like this.\n                this.mv.visitMethodInsn(INVOKESTATIC, BAL_ERRORS, \"createInteropError\",\n                        String.format(\"(L%s;)L%s;\", THROWABLE, ERROR_VALUE), false);\nSame happens in many other places.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25357#discussion_r474844296", "createdAt": "2020-08-21T17:55:01Z", "author": {"login": "HindujaB"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmErrorGen.java", "diffHunk": "@@ -104,10 +101,11 @@ void generateTryCatch(BIRNode.BIRFunction func, String funcName, BIRNode.BIRBasi\n                 this.mv.visitTryCatchBlock(startLabel, endLabel, errorValueLabel, catchIns.errorClass);\n                 this.mv.visitLabel(errorValueLabel);\n                 this.mv.visitMethodInsn(INVOKESTATIC, BAL_ERRORS, \"createInteropError\", String.format(\"(L%s;)L%s;\",\n-                        THROWABLE, ERROR_VALUE), false);\n-                jvmInstructionGen.generateVarStore(this.mv, retVarDcl, this.currentPackageName, retIndex);\n-                BIRTerminator.Return term = catchIns.term;\n-                termGen.genReturnTerm(term, retIndex, func);\n+                                                                                                      THROWABLE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d4f1c6591e04f89e8a6586c9bdac15d068a223c"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMjE3NjM2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25357#pullrequestreview-473217636", "createdAt": "2020-08-24T08:22:12Z", "commit": {"oid": "3d4f1c6591e04f89e8a6586c9bdac15d068a223c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwODoyMjoxMlrOHFZbVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwODoyMjoxMlrOHFZbVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQyMTUyNQ==", "bodyText": "This class in not needed as discussed during the review. We can directly access all these variables without null checks now.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25357#discussion_r475421525", "createdAt": "2020-08-24T08:22:12Z", "author": {"login": "Kishanthan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmCheckNotNull.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.ballerinalang.compiler.bir.codegen;\n+\n+import org.ballerinalang.compiler.BLangCompilerException;\n+import org.wso2.ballerinalang.compiler.bir.model.BIRNode;\n+import org.wso2.ballerinalang.compiler.bir.model.BIROperand;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BField;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.BType;\n+\n+import java.util.List;\n+\n+/**\n+ * The common functions used in CodeGen.\n+ */\n+public class JvmCheckNotNull {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d4f1c6591e04f89e8a6586c9bdac15d068a223c"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef242e20cabe882d3c2e8e932fc2582aa3d5ae09", "author": {"user": {"login": "riyafa", "name": "Riyafa Abdul Hameed"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ef242e20cabe882d3c2e8e932fc2582aa3d5ae09", "committedDate": "2020-08-24T14:09:28Z", "message": "Refactor genJMethodForBFunc method of JvmMethodGen\n\nRelated issue https://github.com/ballerina-platform/ballerina-lang/issues/25252"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d4f1c6591e04f89e8a6586c9bdac15d068a223c", "author": {"user": {"login": "riyafa", "name": "Riyafa Abdul Hameed"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3d4f1c6591e04f89e8a6586c9bdac15d068a223c", "committedDate": "2020-08-21T11:46:07Z", "message": "Refactor genJMethodForBFunc method of JvmMethodGen\n\nRelated issue https://github.com/ballerina-platform/ballerina-lang/issues/25252"}, "afterCommit": {"oid": "ef242e20cabe882d3c2e8e932fc2582aa3d5ae09", "author": {"user": {"login": "riyafa", "name": "Riyafa Abdul Hameed"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ef242e20cabe882d3c2e8e932fc2582aa3d5ae09", "committedDate": "2020-08-24T14:09:28Z", "message": "Refactor genJMethodForBFunc method of JvmMethodGen\n\nRelated issue https://github.com/ballerina-platform/ballerina-lang/issues/25252"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNzU4ODY0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25357#pullrequestreview-473758864", "createdAt": "2020-08-24T18:35:12Z", "commit": {"oid": "ef242e20cabe882d3c2e8e932fc2582aa3d5ae09"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0Mjk0MTc0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25357#pullrequestreview-474294174", "createdAt": "2020-08-25T09:17:42Z", "commit": {"oid": "ef242e20cabe882d3c2e8e932fc2582aa3d5ae09"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4901, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}