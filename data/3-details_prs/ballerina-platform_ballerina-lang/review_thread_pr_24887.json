{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MDM1NzM0", "number": 24887, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMTowNjoxOFrOEQ_47w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODowMDozOFrOERKIGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjU5NDM5OnYy", "diffSide": "RIGHT", "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/BaseTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMTowNjoxOFrOG1dnWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMDowNDo1NVrOG1yQbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcxMjkyMA==", "bodyText": "Won't this break in Windows? Why don't we have something like this?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Paths.get(\"src\", \"test\", \"resources\", \"project-based-tests/outside-tests\").toAbsolutePath();\n          \n          \n            \n                            Paths.get(\"src\", \"test\", \"resources\", \"project-based-tests\", \"outside-tests\").toAbsolutePath();", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24887#discussion_r458712920", "createdAt": "2020-07-22T11:06:18Z", "author": {"login": "parkavi11"}, "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/BaseTestCase.java", "diffHunk": "@@ -78,6 +79,11 @@ public void initialize() throws BallerinaTestException, IOException {\n                 Paths.get(\"src\", \"test\", \"resources\", \"project-based-tests/test-report-tests\").toAbsolutePath();\n         reportTestProjectPath = tempProjectDirectory.resolve(\"test-report\");\n         FileUtils.copyFolder(originalReportTestProj, reportTestProjectPath);\n+\n+        Path outsideTestsProj =\n+                Paths.get(\"src\", \"test\", \"resources\", \"project-based-tests/outside-tests\").toAbsolutePath();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "764ab4a596379d964ce6d7c4507511e03cf648c7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA1MTExNw==", "bodyText": "Thanks for the pointer @parkavi11\nYou are correct. We should either use \"File.separator\" or use the approach you suggested. I'll correct it,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24887#discussion_r459051117", "createdAt": "2020-07-22T20:04:55Z", "author": {"login": "Dilhasha"}, "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/BaseTestCase.java", "diffHunk": "@@ -78,6 +79,11 @@ public void initialize() throws BallerinaTestException, IOException {\n                 Paths.get(\"src\", \"test\", \"resources\", \"project-based-tests/test-report-tests\").toAbsolutePath();\n         reportTestProjectPath = tempProjectDirectory.resolve(\"test-report\");\n         FileUtils.copyFolder(originalReportTestProj, reportTestProjectPath);\n+\n+        Path outsideTestsProj =\n+                Paths.get(\"src\", \"test\", \"resources\", \"project-based-tests/outside-tests\").toAbsolutePath();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcxMjkyMA=="}, "originalCommit": {"oid": "764ab4a596379d964ce6d7c4507511e03cf648c7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDI3MTYzOnYy", "diffSide": "RIGHT", "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/PathVerificationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODowMDozOFrOG1t_cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOTozNDo1OVrOG1xRlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4MTIzMg==", "bodyText": "Why do we give it as pathVerification.tests? Looks like the module structure is wrong. The path to test files seems to be outside-tests/src/pathVerification.tests but the correct path should be outside-tests/src/pathVerification/tests.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24887#discussion_r458981232", "createdAt": "2020-07-22T18:00:38Z", "author": {"login": "azinneera"}, "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/PathVerificationTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.testerina.test;\n+\n+import org.ballerinalang.test.context.BMainInstance;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.ballerinalang.test.context.LogLeecher;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * Test class containing tests related to test path verification.\n+ */\n+public class PathVerificationTest extends BaseTestCase {\n+\n+    private BMainInstance balClient;\n+    private String projectPath;\n+\n+    @BeforeClass\n+    public void setup() throws BallerinaTestException {\n+        balClient = new BMainInstance(balServer);\n+        projectPath = outsideTestsProjectPath.toString();\n+    }\n+\n+    @Test\n+    public void verifyTestsOutsidePath() throws BallerinaTestException {\n+        LogLeecher passingLeecher = new LogLeecher(\"1 passing\");\n+        LogLeecher failingLeecher = new LogLeecher(\"0 failing\");\n+        balClient.runMain(\"test\", new String[]{\"pathVerification.tests\"}, null, new String[0],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "764ab4a596379d964ce6d7c4507511e03cf648c7"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAzNTAzMA==", "bodyText": "@azinneera The module structure is correct, I generated it. I have both source files and test files since this check is to see whether tests defined in source files are being executed.\nI guess the module name is confusing, I will get rid of the \".tests\" part.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24887#discussion_r459035030", "createdAt": "2020-07-22T19:34:59Z", "author": {"login": "Dilhasha"}, "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/PathVerificationTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.testerina.test;\n+\n+import org.ballerinalang.test.context.BMainInstance;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.ballerinalang.test.context.LogLeecher;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * Test class containing tests related to test path verification.\n+ */\n+public class PathVerificationTest extends BaseTestCase {\n+\n+    private BMainInstance balClient;\n+    private String projectPath;\n+\n+    @BeforeClass\n+    public void setup() throws BallerinaTestException {\n+        balClient = new BMainInstance(balServer);\n+        projectPath = outsideTestsProjectPath.toString();\n+    }\n+\n+    @Test\n+    public void verifyTestsOutsidePath() throws BallerinaTestException {\n+        LogLeecher passingLeecher = new LogLeecher(\"1 passing\");\n+        LogLeecher failingLeecher = new LogLeecher(\"0 failing\");\n+        balClient.runMain(\"test\", new String[]{\"pathVerification.tests\"}, null, new String[0],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4MTIzMg=="}, "originalCommit": {"oid": "764ab4a596379d964ce6d7c4507511e03cf648c7"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 425, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}