{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MjQzMjM1", "number": 23560, "title": "Add exclude tags and operations attributes to openapi annotation [1.2.x]", "bodyText": "Purpose\n\nFix issues with tag and operation filtering. Add the extra fields excludeTags and excludeOperations to Opeanapi annotation. This use to filter the tags and operations that exclude validating.\n\nSamples\n\n@openapi:ServiceInfo {\ncontract: \"resources/petstore.yaml\",\nexcludeTags: [\"user\"]\nexcludeOperations: [\"getOrderById\"]\n}\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-05-28T04:38:45Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560", "merged": true, "mergeCommit": {"oid": "9960465e081ea6557357e76fccd03cd2c27c09f3"}, "closed": true, "closedAt": "2020-06-04T12:02:58Z", "author": {"login": "lnash94"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclSO-uAH2gAyNDI0MjQzMjM1OjU0NTIyMjFiMzU0MTNjODYwYWM5NjVkMmMyNzE0ZjgwOWI3Yjc1N2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnlz6TgFqTQyMzM2NDc2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5452221b35413c860ac965d2c2714f809b7b757f", "author": {"user": {"login": "lnash94", "name": "Sumudu Nissanka"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5452221b35413c860ac965d2c2714f809b7b757f", "committedDate": "2020-05-27T05:15:56Z", "message": "Fix tag filter issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f96a30ec2c7ccc999dc31b7ab493b9b13f60312a", "author": {"user": {"login": "lnash94", "name": "Sumudu Nissanka"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f96a30ec2c7ccc999dc31b7ab493b9b13f60312a", "committedDate": "2020-05-27T05:42:30Z", "message": "Add exclude attribute"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a7b668b5f03383ba99c6d105f1de271b4b8ea3e", "author": {"user": {"login": "lnash94", "name": "Sumudu Nissanka"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8a7b668b5f03383ba99c6d105f1de271b4b8ea3e", "committedDate": "2020-05-28T04:08:29Z", "message": "Fix suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8907d319c06b161cf0107bfa9c8f786edbdd3954", "author": {"user": {"login": "lnash94", "name": "Sumudu Nissanka"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8907d319c06b161cf0107bfa9c8f786edbdd3954", "committedDate": "2020-05-28T04:23:13Z", "message": "Remove Comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMzQxNDYx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560#pullrequestreview-422341461", "createdAt": "2020-06-02T04:55:17Z", "commit": {"oid": "8907d319c06b161cf0107bfa9c8f786edbdd3954"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDo1NToxN1rOGdiCrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDo1NToxN1rOGdiCrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYxOTYzMQ==", "bodyText": "@lnash94 We can avoid this additional line", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560#discussion_r433619631", "createdAt": "2020-06-02T04:55:17Z", "author": {"login": "keizer619"}, "path": "misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/OpenAPIPathSummary.java", "diffHunk": "@@ -23,11 +23,12 @@\n import io.swagger.v3.oas.models.media.Schema;\n import io.swagger.v3.oas.models.parameters.Parameter;\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8907d319c06b161cf0107bfa9c8f786edbdd3954"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMzQyMzk5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560#pullrequestreview-422342399", "createdAt": "2020-06-02T04:58:34Z", "commit": {"oid": "8907d319c06b161cf0107bfa9c8f786edbdd3954"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDo1ODozNFrOGdiFeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDo1ODozNFrOGdiFeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYyMDM0NA==", "bodyText": "Just wondering where we made these access modifiers as default intentionally?\nUsually it has to be public.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560#discussion_r433620344", "createdAt": "2020-06-02T04:58:34Z", "author": {"login": "keizer619"}, "path": "misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/Constants.java", "diffHunk": "@@ -40,4 +40,6 @@\n     static final String OPERATIONS = \"operations\";\n     static final String BODY = \"body\";\n     static final String FAILONERRORS = \"failOnErrors\";\n+    static final String EXCLUDETAGS = \"excludeTags\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8907d319c06b161cf0107bfa9c8f786edbdd3954"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMzQyNTc5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560#pullrequestreview-422342579", "createdAt": "2020-06-02T04:59:09Z", "commit": {"oid": "8907d319c06b161cf0107bfa9c8f786edbdd3954"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDo1OTowOVrOGdiF8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNDo1OTowOVrOGdiF8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYyMDQ2NQ==", "bodyText": "We can avoid these extra line", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560#discussion_r433620465", "createdAt": "2020-06-02T04:59:09Z", "author": {"login": "keizer619"}, "path": "misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/ValidatorUtil.java", "diffHunk": "@@ -700,4 +793,54 @@ private static String convertOpenAPITypeToBallerina(String type) {\n     private static Diagnostic.DiagnosticPosition getServiceNamePosition(ServiceNode serviceNode) {\n         return serviceNode.getName().getPosition();\n     }\n+\n+    private static void tagsFilter (ServiceNode serviceNode,\n+                                    OpenAPIPathSummary openApiSummary,\n+                                    List<String> tags,\n+                                    Diagnostic.Kind kind,\n+                                    Diagnostic.Kind kind1,\n+                                    Diagnostic.Kind kind2,\n+                                    DiagnosticLog dLog) {\n+        for (String method : openApiSummary.getAvailableOperations()) {\n+            if (openApiSummary.hasTags(tags, method)) {\n+                kind = kind1;\n+                break;\n+            } else {\n+                kind = kind2;\n+            }\n+        }\n+        dLog.logDiagnostic(kind, getServiceNamePosition(serviceNode),\n+                ErrorMessages.unimplementedOpenAPIPath(openApiSummary.getPath()));\n+    }\n+    //for Operation Filter\n+    private static void operationsFilter (ServiceNode serviceNode,\n+                                          OpenAPIPathSummary openApiSummary,\n+                                          List<String> operations,\n+                                          Diagnostic.Kind kind,\n+                                          Diagnostic.Kind kind1,\n+                                          Diagnostic.Kind kind2,\n+                                          DiagnosticLog dLog) {\n+        for (String method : openApiSummary.getAvailableOperations()) {\n+            if (openApiSummary.hasOperations(operations, method)) {\n+                kind = kind1;\n+                break;\n+            } else {\n+                kind = kind2;\n+            }\n+        }\n+        dLog.logDiagnostic(kind, getServiceNamePosition(serviceNode),\n+                ErrorMessages.unimplementedOpenAPIPath(openApiSummary.getPath()));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8907d319c06b161cf0107bfa9c8f786edbdd3954"}, "originalPosition": 368}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7de83c293751ce3cb45be044b2fed2fd93a38f04", "author": {"user": {"login": "lnash94", "name": "Sumudu Nissanka"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7de83c293751ce3cb45be044b2fed2fd93a38f04", "committedDate": "2020-06-02T05:22:51Z", "message": "Fix review suggestion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1eff8ceceaaefe525321f74c9a25dd6f0519bd1", "author": {"user": {"login": "lnash94", "name": "Sumudu Nissanka"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a1eff8ceceaaefe525321f74c9a25dd6f0519bd1", "committedDate": "2020-06-02T06:46:03Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5023d0fc7c31617c45b823e1b78e347a428283ec", "author": {"user": {"login": "lnash94", "name": "Sumudu Nissanka"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5023d0fc7c31617c45b823e1b78e347a428283ec", "committedDate": "2020-06-02T12:38:34Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdbc2e27f6ec5c3d30e0e40d1b7f258b57625e22", "author": {"user": {"login": "lnash94", "name": "Sumudu Nissanka"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fdbc2e27f6ec5c3d30e0e40d1b7f258b57625e22", "committedDate": "2020-06-02T13:55:25Z", "message": "Fix checkstyle error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMzAwMjIz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560#pullrequestreview-423300223", "createdAt": "2020-06-03T07:47:56Z", "commit": {"oid": "fdbc2e27f6ec5c3d30e0e40d1b7f258b57625e22"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNzo0Nzo1NlrOGeQDqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNzo0Nzo1NlrOGeQDqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3MzU0Ng==", "bodyText": "these can be moved into the error messages class I think... it will be much clear then....", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560#discussion_r434373546", "createdAt": "2020-06-03T07:47:56Z", "author": {"login": "NipunaMarcus"}, "path": "misc/openapi-ballerina/modules/openapi-validator/src/main/java/org/ballerinalang/openapi/validator/OpenAPIValidatorPlugin.java", "diffHunk": "@@ -136,54 +139,30 @@ public void process(ServiceNode serviceNode, List<AnnotationAttachmentNode> anno\n                                     }\n                                 } else {\n                                     dLog.logDiagnostic(Diagnostic.Kind.ERROR, annotation.getPosition(),\n-                                                       \"Contract path should be applied as a string value\");\n+                                            \"Contract path should be applied as a string value\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdbc2e27f6ec5c3d30e0e40d1b7f258b57625e22"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMzY0NzYy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23560#pullrequestreview-423364762", "createdAt": "2020-06-03T09:12:19Z", "commit": {"oid": "fdbc2e27f6ec5c3d30e0e40d1b7f258b57625e22"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4459, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}