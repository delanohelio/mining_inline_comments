{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3NjE1ODk4", "number": 27165, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNDo1ODowOVrOE9ejpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNDo1ODowOVrOE9ejpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyODk5MjM2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/ConstantSymbol.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNDo1ODowOVrOH6L4pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwOTozOTo1N1rOH63V1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc3NDE4Mg==", "bodyText": "What if we return an Optional here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27165#discussion_r530774182", "createdAt": "2020-11-26T04:58:09Z", "author": {"login": "nadeeshaan"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/ConstantSymbol.java", "diffHunk": "@@ -22,12 +22,19 @@\n  *\n  * @since 2.0.0\n  */\n-public interface ConstantSymbol extends VariableSymbol {\n+public interface ConstantSymbol extends VariableSymbol, SingletonTypeSymbol {\n \n     /**\n      * Get the constant value.\n      *\n      * @return {@link Object} value of the constant\n      */\n     Object constValue();\n+\n+    /**\n+     * Gets the broader type of constant expression associated with this symbol.\n+     *\n+     * @return {@link TypeSymbol} of the broader type\n+     */\n+    TypeSymbol broaderTypeDescriptor();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8ca6c3d6d47474452c419a7f58a3f182bbf113c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc3OTUzMQ==", "bodyText": "From a language POV, no reason for broader type of a constant expr to be optional right? If there's a constant, it also has a broader type. It may become null for incomplete constant declarations?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27165#discussion_r530779531", "createdAt": "2020-11-26T05:20:33Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/ConstantSymbol.java", "diffHunk": "@@ -22,12 +22,19 @@\n  *\n  * @since 2.0.0\n  */\n-public interface ConstantSymbol extends VariableSymbol {\n+public interface ConstantSymbol extends VariableSymbol, SingletonTypeSymbol {\n \n     /**\n      * Get the constant value.\n      *\n      * @return {@link Object} value of the constant\n      */\n     Object constValue();\n+\n+    /**\n+     * Gets the broader type of constant expression associated with this symbol.\n+     *\n+     * @return {@link TypeSymbol} of the broader type\n+     */\n+    TypeSymbol broaderTypeDescriptor();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc3NDE4Mg=="}, "originalCommit": {"oid": "a8ca6c3d6d47474452c419a7f58a3f182bbf113c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgwNTE3NA==", "bodyText": "Shouldn't incomplete constant declarations is a expected case?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27165#discussion_r530805174", "createdAt": "2020-11-26T06:51:20Z", "author": {"login": "rasika"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/ConstantSymbol.java", "diffHunk": "@@ -22,12 +22,19 @@\n  *\n  * @since 2.0.0\n  */\n-public interface ConstantSymbol extends VariableSymbol {\n+public interface ConstantSymbol extends VariableSymbol, SingletonTypeSymbol {\n \n     /**\n      * Get the constant value.\n      *\n      * @return {@link Object} value of the constant\n      */\n     Object constValue();\n+\n+    /**\n+     * Gets the broader type of constant expression associated with this symbol.\n+     *\n+     * @return {@link TypeSymbol} of the broader type\n+     */\n+    TypeSymbol broaderTypeDescriptor();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc3NDE4Mg=="}, "originalCommit": {"oid": "a8ca6c3d6d47474452c419a7f58a3f182bbf113c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ4NjE2NA==", "bodyText": "Yes, but the APIs for the most part designed to be in-line with the spec. Optionals were used in places where the spec has specified it's optional. e.g., rest param in function type", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27165#discussion_r531486164", "createdAt": "2020-11-27T09:39:57Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/compiler/api/symbols/ConstantSymbol.java", "diffHunk": "@@ -22,12 +22,19 @@\n  *\n  * @since 2.0.0\n  */\n-public interface ConstantSymbol extends VariableSymbol {\n+public interface ConstantSymbol extends VariableSymbol, SingletonTypeSymbol {\n \n     /**\n      * Get the constant value.\n      *\n      * @return {@link Object} value of the constant\n      */\n     Object constValue();\n+\n+    /**\n+     * Gets the broader type of constant expression associated with this symbol.\n+     *\n+     * @return {@link TypeSymbol} of the broader type\n+     */\n+    TypeSymbol broaderTypeDescriptor();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc3NDE4Mg=="}, "originalCommit": {"oid": "a8ca6c3d6d47474452c419a7f58a3f182bbf113c"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2957, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}