{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNTQ3MjIz", "number": 20980, "title": "Improve reading array of values via config API", "bodyText": "Fixes #20857\nPurpose\n\n$title\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-02-11T09:20:17Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980", "merged": true, "mergeCommit": {"oid": "0ffa803bb74f09e2d179e908ab55d29284b895ba"}, "closed": true, "closedAt": "2020-02-13T04:12:59Z", "author": {"login": "aashikam"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDOLNPAH2gAyMzczNTQ3MjIzOmM1ZmY0N2RmNWRlMmU3ZDIyMjQ4YjE5YWVjM2YyMzI4YWYzYTNhODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDy_0egFqTM1Nzk0NDUwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c5ff47df5de2e7d22248b19aec3f2328af3a3a87", "author": {"user": {"login": "aashikam", "name": "Arshika Mohottige"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c5ff47df5de2e7d22248b19aec3f2328af3a3a87", "committedDate": "2020-02-11T09:18:46Z", "message": "Improve reading array of values via config API\n\nFixes https://github.com/ballerina-platform/ballerina-lang/issues/20857"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MTgyODkz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#pullrequestreview-357182893", "createdAt": "2020-02-12T04:30:01Z", "commit": {"oid": "c5ff47df5de2e7d22248b19aec3f2328af3a3a87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDozMDowMlrOFoheag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDozMDowMlrOFoheag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNTgxOA==", "bodyText": "Was this annotation needed?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#discussion_r378035818", "createdAt": "2020-02-12T04:30:02Z", "author": {"login": "pubudu91"}, "path": "stdlib/config-api/src/main/java/org/ballerinalang/stdlib/config/GetConfig.java", "diffHunk": "@@ -65,16 +65,27 @@ public static Object get(String configKey, String type) {\n     @SuppressWarnings(\"unchecked\")\n     private static MapValue buildMapValue(Map<String, Object> section) {\n         MapValue map = new MapValueImpl<String, Object>();\n-\n-        section.forEach((key, val) -> {\n-            if (val instanceof String || val instanceof Long || val instanceof Double || val instanceof Boolean) {\n-                map.put(key, val);\n-            }\n-        });\n+        section.forEach((key, val) -> map.put(key, getConvertedValue(val)));\n         return map;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     private static BArray buildArrayValue(List value) {\n-        return BValueCreator.createArrayValue(value.toArray(), new BArrayType(BTypes.typeAnydata));\n+        Object[] convertedValues = new Object[value.size()];\n+        value.forEach(convertedValue -> convertedValues[value.indexOf(convertedValue)] =\n+                getConvertedValue(convertedValue));\n+        return BValueCreator.createArrayValue(convertedValues, new BArrayType(BTypes.typeAnydata));\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5ff47df5de2e7d22248b19aec3f2328af3a3a87"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MTg2NDUx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#pullrequestreview-357186451", "createdAt": "2020-02-12T04:45:36Z", "commit": {"oid": "c5ff47df5de2e7d22248b19aec3f2328af3a3a87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDo0NTozNlrOFohpmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDo0NTozNlrOFohpmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzODY4MQ==", "bodyText": "Shall we replace this with a normal for loop? We now avoid the use of these as much as possible and reverting the current usages back to normal loops", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#discussion_r378038681", "createdAt": "2020-02-12T04:45:36Z", "author": {"login": "pubudu91"}, "path": "stdlib/config-api/src/main/java/org/ballerinalang/stdlib/config/GetConfig.java", "diffHunk": "@@ -65,16 +65,27 @@ public static Object get(String configKey, String type) {\n     @SuppressWarnings(\"unchecked\")\n     private static MapValue buildMapValue(Map<String, Object> section) {\n         MapValue map = new MapValueImpl<String, Object>();\n-\n-        section.forEach((key, val) -> {\n-            if (val instanceof String || val instanceof Long || val instanceof Double || val instanceof Boolean) {\n-                map.put(key, val);\n-            }\n-        });\n+        section.forEach((key, val) -> map.put(key, getConvertedValue(val)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5ff47df5de2e7d22248b19aec3f2328af3a3a87"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MTg2NTQ0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#pullrequestreview-357186544", "createdAt": "2020-02-12T04:46:00Z", "commit": {"oid": "c5ff47df5de2e7d22248b19aec3f2328af3a3a87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDo0NjowMFrOFohp3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDo0NjowMFrOFohp3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzODc0OQ==", "bodyText": "same comment as above regarding the use of .forEach()", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#discussion_r378038749", "createdAt": "2020-02-12T04:46:00Z", "author": {"login": "pubudu91"}, "path": "stdlib/config-api/src/main/java/org/ballerinalang/stdlib/config/GetConfig.java", "diffHunk": "@@ -65,16 +65,27 @@ public static Object get(String configKey, String type) {\n     @SuppressWarnings(\"unchecked\")\n     private static MapValue buildMapValue(Map<String, Object> section) {\n         MapValue map = new MapValueImpl<String, Object>();\n-\n-        section.forEach((key, val) -> {\n-            if (val instanceof String || val instanceof Long || val instanceof Double || val instanceof Boolean) {\n-                map.put(key, val);\n-            }\n-        });\n+        section.forEach((key, val) -> map.put(key, getConvertedValue(val)));\n         return map;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     private static BArray buildArrayValue(List value) {\n-        return BValueCreator.createArrayValue(value.toArray(), new BArrayType(BTypes.typeAnydata));\n+        Object[] convertedValues = new Object[value.size()];\n+        value.forEach(convertedValue -> convertedValues[value.indexOf(convertedValue)] =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5ff47df5de2e7d22248b19aec3f2328af3a3a87"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17a35ff055ab731ff5d08ee9040564a2d160ebd7", "author": {"user": {"login": "aashikam", "name": "Arshika Mohottige"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/17a35ff055ab731ff5d08ee9040564a2d160ebd7", "committedDate": "2020-02-12T05:14:31Z", "message": "Add changes from code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MjAwMzI4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#pullrequestreview-357200328", "createdAt": "2020-02-12T05:42:22Z", "commit": {"oid": "c5ff47df5de2e7d22248b19aec3f2328af3a3a87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNTo0MjoyMlrOFoiUpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNTo0MjoyMlrOFoiUpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA0OTcwMw==", "bodyText": "Shall we add test cases for negative cases and multi dimensional arrays as well? See https://github.com/toml-lang/toml/tree/v0.4.0#array\nAlso a bit more complex case for arrays of table and a negative case as well: https://github.com/toml-lang/toml/tree/v0.4.0#array-of-tables", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#discussion_r378049703", "createdAt": "2020-02-12T05:42:22Z", "author": {"login": "pubudu91"}, "path": "stdlib/config-api/src/test/resources/datafiles/default/ballerina.conf", "diffHunk": "@@ -52,3 +52,11 @@ World!!!\n [listenerConfig.keyStore]\n paths=[\"/etc\", \"/tmp\", \"/usr/lib/\"]\n ports=[9090, 9091, 9092]\n+\n+[[foo]]\n+a=1\n+b=2\n+\n+[[foo]]\n+a=3\n+b=4", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5ff47df5de2e7d22248b19aec3f2328af3a3a87"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c110eed6dac592c079919193e5c6b0e098ae3b7f", "author": {"user": {"login": "aashikam", "name": "Arshika Mohottige"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c110eed6dac592c079919193e5c6b0e098ae3b7f", "committedDate": "2020-02-12T11:24:22Z", "message": "Add more tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3OTQ0NTAy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20980#pullrequestreview-357944502", "createdAt": "2020-02-13T04:12:49Z", "commit": {"oid": "c110eed6dac592c079919193e5c6b0e098ae3b7f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4232, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}