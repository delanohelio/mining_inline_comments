{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MTQ1NzMz", "number": 24652, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODowOTo0NlrOEPBIfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTowMDoxNFrOEPK9Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTgyNjUyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BStructureType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODowOTo0NlrOGyfoKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOTowNzoyN1rOGyh_TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYwMDE3MQ==", "bodyText": "Just curious what this check does? \"($\"", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24652#discussion_r455600171", "createdAt": "2020-07-16T08:09:46Z", "author": {"login": "KRVPerera"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BStructureType.java", "diffHunk": "@@ -49,4 +54,22 @@ public BStructureType(int tag, BTypeSymbol tSymbol, int flags) {\n     public void accept(TypeVisitor visitor) {\n         visitor.visit(this);\n     }\n+\n+    protected boolean shouldPrintShape(Name name) {\n+        if (name == null) {\n+            return false;\n+        }\n+\n+        String value = name.value;\n+\n+        if (value.isEmpty() || value.startsWith(DOLLAR)) {\n+            return true;\n+        }\n+\n+        if (!(Symbols.isFlagOn(this.tsymbol.flags, Flags.READONLY))) {\n+            return false;\n+        }\n+\n+        return value.startsWith(\"($\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29ffb803df71216442828a113cfe1493d41d9b7c"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYzODg2MA==", "bodyText": "For immutable record/object types the name is something like (T & readonly). So in the anonymous case it will be something like ($anonType$n & readonly).\nWe should clean this up in general though, to look at a flag maybe, instead of the name. #24471 tracks that.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24652#discussion_r455638860", "createdAt": "2020-07-16T09:07:27Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/types/BStructureType.java", "diffHunk": "@@ -49,4 +54,22 @@ public BStructureType(int tag, BTypeSymbol tSymbol, int flags) {\n     public void accept(TypeVisitor visitor) {\n         visitor.visit(this);\n     }\n+\n+    protected boolean shouldPrintShape(Name name) {\n+        if (name == null) {\n+            return false;\n+        }\n+\n+        String value = name.value;\n+\n+        if (value.isEmpty() || value.startsWith(DOLLAR)) {\n+            return true;\n+        }\n+\n+        if (!(Symbols.isFlagOn(this.tsymbol.flags, Flags.READONLY))) {\n+            return false;\n+        }\n+\n+        return value.startsWith(\"($\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYwMDE3MQ=="}, "originalCommit": {"oid": "29ffb803df71216442828a113cfe1493d41d9b7c"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzQzNjE4OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTowMDoxNFrOGyvHeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo0MDoxOVrOGyw43g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1Mzk0Ng==", "bodyText": "How can there be a semantic error in a union type?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24652#discussion_r455853946", "createdAt": "2020-07-16T15:00:14Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -1280,7 +1280,16 @@ private BType checkListConstructorCompatibility(BType bType, BLangListConstructo\n             this.dlog.setNonConsoleDLog();\n \n             List<BType> compatibleTypes = new ArrayList<>();\n+            boolean erroredExpType = false;\n             for (BType memberType : ((BUnionType) bType).getMemberTypes()) {\n+                if (memberType == symTable.semanticError) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29ffb803df71216442828a113cfe1493d41d9b7c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg4Mjk3NA==", "bodyText": "One example is when there's a member type that is not defined.\npublic function main() {\n    Foo|int[] x = [1, 2];\n}\nWe seem to be logging an unknown type 'Foo' error, and using semantic error as the member type.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24652#discussion_r455882974", "createdAt": "2020-07-16T15:40:19Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -1280,7 +1280,16 @@ private BType checkListConstructorCompatibility(BType bType, BLangListConstructo\n             this.dlog.setNonConsoleDLog();\n \n             List<BType> compatibleTypes = new ArrayList<>();\n+            boolean erroredExpType = false;\n             for (BType memberType : ((BUnionType) bType).getMemberTypes()) {\n+                if (memberType == symTable.semanticError) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1Mzk0Ng=="}, "originalCommit": {"oid": "29ffb803df71216442828a113cfe1493d41d9b7c"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3231, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}