{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyOTYxNTk0", "number": 23942, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOTo0NzozM1rOEEnbTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOTo0Nzo0OVrOEEnbzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjc1NzI1OnYy", "diffSide": "RIGHT", "path": "stdlib/database/jdbc/src/test/java/org/ballerinalang/jdbc/batchexecute/BatchExecuteTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOTo0NzozM1rOGiWQrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDowMzo0M1rOGiWyxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2OTQ4NA==", "bodyText": "Isn't this should be 2.0.0?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23942#discussion_r438669484", "createdAt": "2020-06-11T09:47:33Z", "author": {"login": "sinthuja"}, "path": "stdlib/database/jdbc/src/test/java/org/ballerinalang/jdbc/batchexecute/BatchExecuteTest.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.jdbc.batchexecute;\n+\n+import org.ballerinalang.jdbc.utils.SQLDBUtils;\n+import org.ballerinalang.model.values.BError;\n+import org.ballerinalang.model.values.BMap;\n+import org.ballerinalang.model.values.BString;\n+import org.ballerinalang.model.values.BValue;\n+import org.ballerinalang.model.values.BValueArray;\n+import org.ballerinalang.model.values.BValueType;\n+import org.ballerinalang.sql.Constants;\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.BRunUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.sql.SQLException;\n+\n+import static org.ballerinalang.sql.Constants.ErrorRecordFields.EXECUTION_RESULTS;\n+\n+/**\n+ * This test class verifies the behaviour of the batch execute.\n+ *\n+ * @since 1.3.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0672d91238dad3385b73135295794215cb523a26"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY3ODIxNA==", "bodyText": "Fixed in e00abad", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23942#discussion_r438678214", "createdAt": "2020-06-11T10:03:43Z", "author": {"login": "niveathika"}, "path": "stdlib/database/jdbc/src/test/java/org/ballerinalang/jdbc/batchexecute/BatchExecuteTest.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.jdbc.batchexecute;\n+\n+import org.ballerinalang.jdbc.utils.SQLDBUtils;\n+import org.ballerinalang.model.values.BError;\n+import org.ballerinalang.model.values.BMap;\n+import org.ballerinalang.model.values.BString;\n+import org.ballerinalang.model.values.BValue;\n+import org.ballerinalang.model.values.BValueArray;\n+import org.ballerinalang.model.values.BValueType;\n+import org.ballerinalang.sql.Constants;\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.BRunUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.sql.SQLException;\n+\n+import static org.ballerinalang.sql.Constants.ErrorRecordFields.EXECUTION_RESULTS;\n+\n+/**\n+ * This test class verifies the behaviour of the batch execute.\n+ *\n+ * @since 1.3.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2OTQ4NA=="}, "originalCommit": {"oid": "0672d91238dad3385b73135295794215cb523a26"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjc1ODUzOnYy", "diffSide": "RIGHT", "path": "stdlib/database/jdbc/src/test/java/org/ballerinalang/jdbc/batchexecute/BatchExecuteTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOTo0Nzo0OVrOGiWRcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDowMzozMlrOGiWydQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2OTY4MA==", "bodyText": "Looks like a formatting issue?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23942#discussion_r438669680", "createdAt": "2020-06-11T09:47:49Z", "author": {"login": "sinthuja"}, "path": "stdlib/database/jdbc/src/test/java/org/ballerinalang/jdbc/batchexecute/BatchExecuteTest.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.jdbc.batchexecute;\n+\n+import org.ballerinalang.jdbc.utils.SQLDBUtils;\n+import org.ballerinalang.model.values.BError;\n+import org.ballerinalang.model.values.BMap;\n+import org.ballerinalang.model.values.BString;\n+import org.ballerinalang.model.values.BValue;\n+import org.ballerinalang.model.values.BValueArray;\n+import org.ballerinalang.model.values.BValueType;\n+import org.ballerinalang.sql.Constants;\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.BRunUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.sql.SQLException;\n+\n+import static org.ballerinalang.sql.Constants.ErrorRecordFields.EXECUTION_RESULTS;\n+\n+/**\n+ * This test class verifies the behaviour of the batch execute.\n+ *\n+ * @since 1.3.0\n+ */\n+public class BatchExecuteTest {\n+    private CompileResult result;\n+    private static final String DB_NAME = \"TEST_SQL_BATCH_EXECUTE\";\n+    private static final String JDBC_URL = \"jdbc:h2:file:\" + SQLDBUtils.DB_DIR + DB_NAME;\n+    private BValue[] args = {new BString(JDBC_URL), new BString(SQLDBUtils.DB_USER),\n+            new BString(SQLDBUtils.DB_PASSWORD)};\n+    @BeforeClass\n+    public void setup() throws SQLException {\n+        result = BCompileUtil.compileOffline(SQLDBUtils.getBalFilesDir(\"batchexecute\",\n+                                                                            \"batch-execute-query-test.bal\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0672d91238dad3385b73135295794215cb523a26"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY3ODEzMw==", "bodyText": "Fixed in e00abad", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23942#discussion_r438678133", "createdAt": "2020-06-11T10:03:32Z", "author": {"login": "niveathika"}, "path": "stdlib/database/jdbc/src/test/java/org/ballerinalang/jdbc/batchexecute/BatchExecuteTest.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.jdbc.batchexecute;\n+\n+import org.ballerinalang.jdbc.utils.SQLDBUtils;\n+import org.ballerinalang.model.values.BError;\n+import org.ballerinalang.model.values.BMap;\n+import org.ballerinalang.model.values.BString;\n+import org.ballerinalang.model.values.BValue;\n+import org.ballerinalang.model.values.BValueArray;\n+import org.ballerinalang.model.values.BValueType;\n+import org.ballerinalang.sql.Constants;\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.BRunUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.sql.SQLException;\n+\n+import static org.ballerinalang.sql.Constants.ErrorRecordFields.EXECUTION_RESULTS;\n+\n+/**\n+ * This test class verifies the behaviour of the batch execute.\n+ *\n+ * @since 1.3.0\n+ */\n+public class BatchExecuteTest {\n+    private CompileResult result;\n+    private static final String DB_NAME = \"TEST_SQL_BATCH_EXECUTE\";\n+    private static final String JDBC_URL = \"jdbc:h2:file:\" + SQLDBUtils.DB_DIR + DB_NAME;\n+    private BValue[] args = {new BString(JDBC_URL), new BString(SQLDBUtils.DB_USER),\n+            new BString(SQLDBUtils.DB_PASSWORD)};\n+    @BeforeClass\n+    public void setup() throws SQLException {\n+        result = BCompileUtil.compileOffline(SQLDBUtils.getBalFilesDir(\"batchexecute\",\n+                                                                            \"batch-execute-query-test.bal\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2OTY4MA=="}, "originalCommit": {"oid": "0672d91238dad3385b73135295794215cb523a26"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3411, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}