{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNjA5NDg3", "number": 20991, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMjowMzoyOVrODexy-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMjowMzoyOVrODexy-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTk5NzM4OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMjowMzoyOVrOFoGeRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMToyNToxMFrOFpzmkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5MzQxNQ==", "bodyText": "Should we provide more details with this error log to trace this request ? (May be inboundRequestMsg.getSequenceId())", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20991#discussion_r377593415", "createdAt": "2020-02-11T12:03:29Z", "author": {"login": "anupama-pathirage"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -61,8 +62,16 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n         HttpCarbonMessage inboundRequestMsg = HttpUtil.getCarbonMsg(connectionObj, null);\n         Strand strand = Scheduler.getStrand();\n         DataContext dataContext = new DataContext(strand, new NonBlockingCallback(strand), inboundRequestMsg);\n-        HttpCarbonMessage outboundResponseMsg = HttpUtil\n-                .getCarbonMsg(outboundResponseObj, HttpUtil.createHttpCarbonMessage(false));\n+        if (isDirtyResponse(outboundResponseObj)) {\n+            String errorMessage = \"Couldn't complete the respond operation as the response has been already used.\";\n+            HttpUtil.sendOutboundResponse(inboundRequestMsg, HttpUtil.createErrorMessage(errorMessage, 500));\n+            unBlockStrand(strand);\n+            log.debug(errorMessage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2165dc989175d19a3abeb4b0a8dbbd77f5ffb8a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNDQ0Mw==", "bodyText": "We couldn't expose the inboundRequestMsg.getSequenceId() to the ballerina and it will not be useful to the user as they can't understand this.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20991#discussion_r378034443", "createdAt": "2020-02-12T04:22:34Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -61,8 +62,16 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n         HttpCarbonMessage inboundRequestMsg = HttpUtil.getCarbonMsg(connectionObj, null);\n         Strand strand = Scheduler.getStrand();\n         DataContext dataContext = new DataContext(strand, new NonBlockingCallback(strand), inboundRequestMsg);\n-        HttpCarbonMessage outboundResponseMsg = HttpUtil\n-                .getCarbonMsg(outboundResponseObj, HttpUtil.createHttpCarbonMessage(false));\n+        if (isDirtyResponse(outboundResponseObj)) {\n+            String errorMessage = \"Couldn't complete the respond operation as the response has been already used.\";\n+            HttpUtil.sendOutboundResponse(inboundRequestMsg, HttpUtil.createErrorMessage(errorMessage, 500));\n+            unBlockStrand(strand);\n+            log.debug(errorMessage);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5MzQxNQ=="}, "originalCommit": {"oid": "e2165dc989175d19a3abeb4b0a8dbbd77f5ffb8a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNjg5MA==", "bodyText": "This log is for troubleshooting purposes right? Same is used to track other debug log messages [1]. @chamil321 Any thoughts? Btw, don't we need to check log.isDebugEnabled() before having debug logs here?\n[1] \n  \n    \n      ballerina-lang/stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java\n    \n    \n         Line 96\n      in\n      e2165dc\n    \n    \n    \n    \n\n        \n          \n           log.debug(\"Pipelining is required. Sequence id of the request: {}\",", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20991#discussion_r378036890", "createdAt": "2020-02-12T04:35:59Z", "author": {"login": "anupama-pathirage"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -61,8 +62,16 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n         HttpCarbonMessage inboundRequestMsg = HttpUtil.getCarbonMsg(connectionObj, null);\n         Strand strand = Scheduler.getStrand();\n         DataContext dataContext = new DataContext(strand, new NonBlockingCallback(strand), inboundRequestMsg);\n-        HttpCarbonMessage outboundResponseMsg = HttpUtil\n-                .getCarbonMsg(outboundResponseObj, HttpUtil.createHttpCarbonMessage(false));\n+        if (isDirtyResponse(outboundResponseObj)) {\n+            String errorMessage = \"Couldn't complete the respond operation as the response has been already used.\";\n+            HttpUtil.sendOutboundResponse(inboundRequestMsg, HttpUtil.createErrorMessage(errorMessage, 500));\n+            unBlockStrand(strand);\n+            log.debug(errorMessage);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5MzQxNQ=="}, "originalCommit": {"oid": "e2165dc989175d19a3abeb4b0a8dbbd77f5ffb8a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2MTIxNw==", "bodyText": "Fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20991#discussion_r378061217", "createdAt": "2020-02-12T06:31:42Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -61,8 +62,16 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n         HttpCarbonMessage inboundRequestMsg = HttpUtil.getCarbonMsg(connectionObj, null);\n         Strand strand = Scheduler.getStrand();\n         DataContext dataContext = new DataContext(strand, new NonBlockingCallback(strand), inboundRequestMsg);\n-        HttpCarbonMessage outboundResponseMsg = HttpUtil\n-                .getCarbonMsg(outboundResponseObj, HttpUtil.createHttpCarbonMessage(false));\n+        if (isDirtyResponse(outboundResponseObj)) {\n+            String errorMessage = \"Couldn't complete the respond operation as the response has been already used.\";\n+            HttpUtil.sendOutboundResponse(inboundRequestMsg, HttpUtil.createErrorMessage(errorMessage, 500));\n+            unBlockStrand(strand);\n+            log.debug(errorMessage);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5MzQxNQ=="}, "originalCommit": {"oid": "e2165dc989175d19a3abeb4b0a8dbbd77f5ffb8a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5MzIyMw==", "bodyText": "+1 Let's add the change to the master branch as well", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20991#discussion_r378093223", "createdAt": "2020-02-12T08:12:58Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -61,8 +62,16 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n         HttpCarbonMessage inboundRequestMsg = HttpUtil.getCarbonMsg(connectionObj, null);\n         Strand strand = Scheduler.getStrand();\n         DataContext dataContext = new DataContext(strand, new NonBlockingCallback(strand), inboundRequestMsg);\n-        HttpCarbonMessage outboundResponseMsg = HttpUtil\n-                .getCarbonMsg(outboundResponseObj, HttpUtil.createHttpCarbonMessage(false));\n+        if (isDirtyResponse(outboundResponseObj)) {\n+            String errorMessage = \"Couldn't complete the respond operation as the response has been already used.\";\n+            HttpUtil.sendOutboundResponse(inboundRequestMsg, HttpUtil.createErrorMessage(errorMessage, 500));\n+            unBlockStrand(strand);\n+            log.debug(errorMessage);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5MzQxNQ=="}, "originalCommit": {"oid": "e2165dc989175d19a3abeb4b0a8dbbd77f5ffb8a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM4MTM5Mw==", "bodyText": "Fixed in #21090", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20991#discussion_r379381393", "createdAt": "2020-02-14T11:25:10Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/nativeimpl/connection/Respond.java", "diffHunk": "@@ -61,8 +62,16 @@ public static Object nativeRespond(ObjectValue connectionObj, ObjectValue outbou\n         HttpCarbonMessage inboundRequestMsg = HttpUtil.getCarbonMsg(connectionObj, null);\n         Strand strand = Scheduler.getStrand();\n         DataContext dataContext = new DataContext(strand, new NonBlockingCallback(strand), inboundRequestMsg);\n-        HttpCarbonMessage outboundResponseMsg = HttpUtil\n-                .getCarbonMsg(outboundResponseObj, HttpUtil.createHttpCarbonMessage(false));\n+        if (isDirtyResponse(outboundResponseObj)) {\n+            String errorMessage = \"Couldn't complete the respond operation as the response has been already used.\";\n+            HttpUtil.sendOutboundResponse(inboundRequestMsg, HttpUtil.createErrorMessage(errorMessage, 500));\n+            unBlockStrand(strand);\n+            log.debug(errorMessage);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5MzQxNQ=="}, "originalCommit": {"oid": "e2165dc989175d19a3abeb4b0a8dbbd77f5ffb8a"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1217, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}