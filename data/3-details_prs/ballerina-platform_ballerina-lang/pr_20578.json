{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxOTk1NDkx", "number": 20578, "title": "Handling double slashes in the HTTP client and server", "bodyText": "Purpose\nHandling double slashes at HTTP client and server.\nFixes #19722\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-01-13T08:36:01Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20578", "merged": true, "mergeCommit": {"oid": "fef573b4344e80d9e8e3385b1b3ca00c6b07cc7c"}, "closed": true, "closedAt": "2020-01-16T05:44:06Z", "author": {"login": "kalaiyarasiganeshalingam"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb53zpOAH2gAyMzYxOTk1NDkxOmE4NDg3MjY3YjU1NzUzNzYwODA1OWI3MGU1M2Q2NmFlODJlNGIxMmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6zI-hAFqTM0MzY3Nzc2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a8487267b557537608059b70e53d66ae82e4b12b", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a8487267b557537608059b70e53d66ae82e4b12b", "committedDate": "2020-01-13T08:09:48Z", "message": "Handling dowble slash"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e6108c7999223e31be001bcd8d332b731fef4e4", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9e6108c7999223e31be001bcd8d332b731fef4e4", "committedDate": "2020-01-13T08:31:07Z", "message": "Add whitespaces"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNzk3MDUx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20578#pullrequestreview-341797051", "createdAt": "2020-01-13T12:02:26Z", "commit": {"oid": "9e6108c7999223e31be001bcd8d332b731fef4e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMjowMjoyNlrOFc0u4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMjowMjoyNlrOFc0u4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc2ODQxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String DOWBLE_SLASH = \"//\";\n          \n          \n            \n                public static final String DOUBLE_SLASH = \"//\";", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20578#discussion_r365768416", "createdAt": "2020-01-13T12:02:26Z", "author": {"login": "Bhashinee"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/HttpConstants.java", "diffHunk": "@@ -431,6 +431,8 @@\n \n     public static final String COLON = \":\";\n     public static final String DOLLAR = \"$\";\n+    public static final String DOWBLE_SLASH = \"//\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6108c7999223e31be001bcd8d332b731fef4e4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNzMyNjM2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20578#pullrequestreview-341732636", "createdAt": "2020-01-13T09:59:24Z", "commit": {"oid": "9e6108c7999223e31be001bcd8d332b731fef4e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOTo1OToyNFrOFcxt2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOTo1OToyNFrOFcxt2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxOTAwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String DOWBLE_SLASH = \"//\";\n          \n          \n            \n                public static final String DOUBLE_SLASH = \"//\";", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20578#discussion_r365719001", "createdAt": "2020-01-13T09:59:24Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/HttpConstants.java", "diffHunk": "@@ -431,6 +431,8 @@\n \n     public static final String COLON = \":\";\n     public static final String DOLLAR = \"$\";\n+    public static final String DOWBLE_SLASH = \"//\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6108c7999223e31be001bcd8d332b731fef4e4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxODAzNDY5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20578#pullrequestreview-341803469", "createdAt": "2020-01-13T12:15:36Z", "commit": {"oid": "9e6108c7999223e31be001bcd8d332b731fef4e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMjoxNTozN1rOFc1BQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMjoxNTozN1rOFc1BQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3MzEyMg==", "bodyText": "Do we need to have this 'err' ? We can simply do something like this?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            value = err.reason();\n          \n          \n            \n                            value = result.reason();", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20578#discussion_r365773122", "createdAt": "2020-01-13T12:15:37Z", "author": {"login": "Bhashinee"}, "path": "tests/jballerina-integration-test/src/test/resources/http/src/httpservices/44_http_url.bal", "diffHunk": "@@ -0,0 +1,56 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+import ballerina/http;\n+\n+http:Client urlClient = new (\"http://localhost:9254//url\", { cache: { enabled: false }});\n+\n+@http:ServiceConfig {\n+    basePath: \"/url//test\"\n+}\n+service urlBackend on new http:Listener(9254) {\n+\n+    @http:ResourceConfig {\n+        path: \"//\"\n+    }\n+    resource function replyText(http:Caller caller, http:Request req) {\n+        checkpanic caller->respond(\"Hello\");\n+    }\n+}\n+\n+@http:ServiceConfig {\n+    basePath: \"//url\"\n+}\n+service urlClientTest on new http:Listener(9255)  {\n+\n+    @http:ResourceConfig {\n+        methods: [\"GET\"],\n+        path: \"//\"\n+    }\n+    resource function hello(http:Caller caller, http:Request request) {\n+        string value = \"\";\n+        var response1 = urlClient->get(\"//test\");\n+        if (response1 is http:Response) {\n+            var result = response1.getTextPayload();\n+            if (result is string) {\n+                value = result;\n+            } else {\n+                error err = result;\n+                value = err.reason();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e6108c7999223e31be001bcd8d332b731fef4e4"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dfd0f0b177ced2bde29e80f72e58b1a4e08a836", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4dfd0f0b177ced2bde29e80f72e58b1a4e08a836", "committedDate": "2020-01-13T12:16:16Z", "message": "Fix travis failed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb207891ba42998ace20ffdc35de41af841a6fb1", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eb207891ba42998ace20ffdc35de41af841a6fb1", "committedDate": "2020-01-14T04:30:34Z", "message": "Fix the reviewed comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjg5NDc4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20578#pullrequestreview-342289478", "createdAt": "2020-01-14T04:46:17Z", "commit": {"oid": "eb207891ba42998ace20ffdc35de41af841a6fb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDo0NjoxN1rOFdMFbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDo0NjoxN1rOFdMFbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE1MTAyMw==", "bodyText": "This line is unnecessary. Shall we remove that?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20578#discussion_r366151023", "createdAt": "2020-01-14T04:46:17Z", "author": {"login": "Bhashinee"}, "path": "tests/jballerina-integration-test/src/test/resources/http/src/httpservices/44_http_url.bal", "diffHunk": "@@ -0,0 +1,56 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+import ballerina/http;\n+\n+http:Client urlClient = new (\"http://localhost:9254//url\", { cache: { enabled: false }});\n+\n+@http:ServiceConfig {\n+    basePath: \"/url//test\"\n+}\n+service urlBackend on new http:Listener(9254) {\n+\n+    @http:ResourceConfig {\n+        path: \"//\"\n+    }\n+    resource function replyText(http:Caller caller, http:Request req) {\n+        checkpanic caller->respond(\"Hello\");\n+    }\n+}\n+\n+@http:ServiceConfig {\n+    basePath: \"//url\"\n+}\n+service urlClientTest on new http:Listener(9255)  {\n+\n+    @http:ResourceConfig {\n+        methods: [\"GET\"],\n+        path: \"//\"\n+    }\n+    resource function hello(http:Caller caller, http:Request request) {\n+        string value = \"\";\n+        var response1 = urlClient->get(\"//test\");\n+        if (response1 is http:Response) {\n+            var result = response1.getTextPayload();\n+            if (result is string) {\n+                value = result;\n+            } else {\n+                error err = result;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb207891ba42998ace20ffdc35de41af841a6fb1"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74f11a37cbba73ab73154dce9819f66a881dee91", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/74f11a37cbba73ab73154dce9819f66a881dee91", "committedDate": "2020-01-14T05:07:36Z", "message": "Remove the unnecessary line"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMzAzNjAz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20578#pullrequestreview-342303603", "createdAt": "2020-01-14T05:53:40Z", "commit": {"oid": "74f11a37cbba73ab73154dce9819f66a881dee91"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNTo1Mzo0MFrOFdMyXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNTo1Mzo0MFrOFdMyXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE2MjUyNg==", "bodyText": "Is this required?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20578#discussion_r366162526", "createdAt": "2020-01-14T05:53:40Z", "author": {"login": "chamil321"}, "path": "stdlib/http/src/main/java/org/ballerinalang/net/http/HttpResource.java", "diffHunk": "@@ -72,6 +73,7 @@\n \n     private boolean transactionAnnotated = false;\n \n+    private static PrintStream console = System.out;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74f11a37cbba73ab73154dce9819f66a881dee91"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b28f833afbad7907eb59a3b794d09e552f175ce", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7b28f833afbad7907eb59a3b794d09e552f175ce", "committedDate": "2020-01-14T07:41:22Z", "message": "Remove the PrintStream"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNjcyNzQ5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20578#pullrequestreview-343672749", "createdAt": "2020-01-16T04:53:39Z", "commit": {"oid": "7b28f833afbad7907eb59a3b794d09e552f175ce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNjc3NzY2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20578#pullrequestreview-343677766", "createdAt": "2020-01-16T05:17:30Z", "commit": {"oid": "7b28f833afbad7907eb59a3b794d09e552f175ce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4460, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}