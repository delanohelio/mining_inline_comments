{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NDg5Njk2", "number": 22427, "title": "Add continue and break statement support", "bodyText": "Purpose\nAdd continue and break statement support for the new parser\nFixes #22321\nApproach\n\nAdd new tokens.\nAdd continue and break statement support.\nAdd recovery logic for both statements.\nAdd Test cases to test new statements\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-02T10:28:18Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427", "merged": true, "mergeCommit": {"oid": "53d62c1cb6a41421157abf502348244b29b5c87e"}, "closed": true, "closedAt": "2020-04-03T13:42:06Z", "author": {"login": "rdulmina"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTBYYpgH2gAyMzk3NDg5Njk2OjMyNjE3YWY5ZjI3ZmJkMTllMzU3MzdjMGY4MDdhMmQ1Mzg0NzY2ZTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcT_PTvgH2gAyMzk3NDg5Njk2OjdmOTg4NDYyY2VhMWFiYjZiNWE3NGQ3NTFiYzJkYmVkNmNlYWNjNmE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "32617af9f27fbd19e35737c0f807a2d5384766e0", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/32617af9f27fbd19e35737c0f807a2d5384766e0", "committedDate": "2020-03-31T11:27:11Z", "message": "Continue statement support for internal tree"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e680e965442b5b7f8b71e1b2f14c326ba818f60b", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e680e965442b5b7f8b71e1b2f14c326ba818f60b", "committedDate": "2020-04-01T05:38:06Z", "message": "create ContinueStatement.java file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a918c8f0052dafc34b7f6aee93494d9bca0bbd0", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5a918c8f0052dafc34b7f6aee93494d9bca0bbd0", "committedDate": "2020-04-01T07:05:56Z", "message": "resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2246fadf31759fd0c9c818b2b7c6fb04b120027f", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2246fadf31759fd0c9c818b2b7c6fb04b120027f", "committedDate": "2020-04-01T07:59:58Z", "message": "Createfacade for continue statement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d690306fcf25d94542277db900e5141f9e56982d", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d690306fcf25d94542277db900e5141f9e56982d", "committedDate": "2020-04-01T08:34:05Z", "message": "Break statement support to the parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b421fa2cc281deb7577fd39c36bab9dc33e95fa8", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b421fa2cc281deb7577fd39c36bab9dc33e95fa8", "committedDate": "2020-04-02T08:49:50Z", "message": "recovery logic for continue and break statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c479b41ed72e21be01ef2434574f4f587a078bc2", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c479b41ed72e21be01ef2434574f4f587a078bc2", "committedDate": "2020-04-02T10:07:27Z", "message": "Test cases for continue and break statements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MzE3MTM0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#pullrequestreview-386317134", "createdAt": "2020-04-02T10:58:26Z", "commit": {"oid": "c479b41ed72e21be01ef2434574f4f587a078bc2"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo1ODoyN1rOF_l9_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTowNjo1NVrOF_mPBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyNjY4NA==", "bodyText": "Add a new line", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#discussion_r402226684", "createdAt": "2020-04-02T10:58:27Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -3486,4 +3495,62 @@ private STNode parseCheckingKeyword() {\n             return sol.recoveredNode;\n         }\n     }\n-}\n+\n+    /**\n+     * Parse Continue statement.\n+     * <code>continue-stmt := continue ; </code>\n+     *\n+     * @return Continue statement\n+     */\n+    private STNode parseContinueStatement() {\n+        startContext(ParserRuleContext.CONTINUE_STATEMENT);\n+        STNode continueKeyword = parseContinueKeyword();\n+        STNode semicolon = parseSemicolon();\n+        endContext();\n+        return STNodeFactory.createContinueStatement(continueKeyword, semicolon);\n+    }\n+\n+    /**\n+     * Parse Continue-keyword.\n+     *\n+     * @return Continue-keyword node\n+     */\n+    private STNode parseContinueKeyword() {\n+        STToken token = peek();\n+        if (token.kind == SyntaxKind.CONTINUE_KEYWORD) {\n+            return consume();\n+        } else {\n+            Solution sol = recover(token, ParserRuleContext.CONTINUE_KEYWORD);\n+            return sol.recoveredNode;\n+        }\n+    }\n+\n+    /**\n+     * Parse Break statement.\n+     * <code>break-stmt := break ; </code>\n+     *\n+     * @return Break statement\n+     */\n+    private STNode parseBreakStatement() {\n+        startContext(ParserRuleContext.BREAK_STATEMENT);\n+        STNode breakKeyword = parseBreakKeyword();\n+        STNode semicolon = parseSemicolon();\n+        endContext();\n+        return STNodeFactory.createBreakStatement(breakKeyword, semicolon);\n+    }\n+\n+    /**\n+     * Parse Continue-keyword.\n+     *\n+     * @return Continue-keyword node\n+     */\n+    private STNode parseBreakKeyword() {\n+        STToken token = peek();\n+        if (token.kind == SyntaxKind.BREAK_KEYWORD) {\n+            return consume();\n+        } else {\n+            Solution sol = recover(token, ParserRuleContext.BREAK_KEYWORD);\n+            return sol.recoveredNode;\n+        }\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c479b41ed72e21be01ef2434574f4f587a078bc2"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyNzMzNQ==", "bodyText": "Not properly formatted", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#discussion_r402227335", "createdAt": "2020-04-02T10:59:39Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STBreakStatement.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.ballerinalang.compiler.internal.parser.tree;\n+\n+import io.ballerinalang.compiler.syntax.tree.Node;\n+import io.ballerinalang.compiler.syntax.tree.NonTerminalNode;\n+import io.ballerinalang.compiler.syntax.tree.BreakStatement;\n+\n+public class STBreakStatement extends STStatement{\n+    public final STNode breakKeyword;\n+    public final STNode semicolonToken;\n+\n+\n+    STBreakStatement(STNode breakKeyword,\n+                        STNode semicolonToken) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c479b41ed72e21be01ef2434574f4f587a078bc2"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyNzQ1OQ==", "bodyText": "extra newline.\nPlease fix in other files as well", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#discussion_r402227459", "createdAt": "2020-04-02T10:59:51Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STBreakStatement.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.ballerinalang.compiler.internal.parser.tree;\n+\n+import io.ballerinalang.compiler.syntax.tree.Node;\n+import io.ballerinalang.compiler.syntax.tree.NonTerminalNode;\n+import io.ballerinalang.compiler.syntax.tree.BreakStatement;\n+\n+public class STBreakStatement extends STStatement{\n+    public final STNode breakKeyword;\n+    public final STNode semicolonToken;\n+\n+\n+    STBreakStatement(STNode breakKeyword,\n+                        STNode semicolonToken) {\n+        super(SyntaxKind.BREAK_STATEMENT);\n+        this.breakKeyword = breakKeyword;\n+        this.semicolonToken = semicolonToken;\n+\n+\n+        this.bucketCount = 2;\n+        this.childBuckets = new STNode[this.bucketCount];\n+        this.addChildNode(breakKeyword, 0);\n+        this.addChildNode(semicolonToken, 1);\n+\n+    }\n+\n+    @Override\n+    public Node createFacade(int position, NonTerminalNode parent) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c479b41ed72e21be01ef2434574f4f587a078bc2"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyNzk2OA==", "bodyText": "add a newline at EOF", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#discussion_r402227968", "createdAt": "2020-04-02T11:00:50Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/STNodeFactory.java", "diffHunk": "@@ -335,5 +346,7 @@ public static STNode createVersionPart(STNode leadingDot, STNode versionNumber)\n \n     public static STNode createImportPrefix(STNode asKeyword, STNode prefix) {\n         return new STImportPrefix(asKeyword, prefix);\n+\n     }\n-}\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c479b41ed72e21be01ef2434574f4f587a078bc2"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyODUxMA==", "bodyText": "seems this is not in the correct order. Also next number should be 211", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#discussion_r402228510", "createdAt": "2020-04-02T11:01:55Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/SyntaxKind.java", "diffHunk": "@@ -50,8 +50,11 @@\n     WHILE_KEYWORD(207, \"while\"),\n     CHECK_KEYWORD(208, \"check\"),\n     CHECKPANIC_KEYWORD(209, \"checkpanic\"),\n+    CONTINUE_KEYWORD(212,\"continue\"),\n+    BREAK_KEYWORD(213,\"break\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c479b41ed72e21be01ef2434574f4f587a078bc2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyODY1MA==", "bodyText": "next number should be 1208", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#discussion_r402228650", "createdAt": "2020-04-02T11:02:13Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/tree/SyntaxKind.java", "diffHunk": "@@ -110,6 +113,10 @@\n     WHILE_STATEMENT(1205),\n     CALL_STATEMENT(1206),\n     PANIC_STATEMENT(1207),\n+    CONTINUE_STATEMENT(1209),\n+    BREAK_STATEMENT(1210),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c479b41ed72e21be01ef2434574f4f587a078bc2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIzMDgyOQ==", "bodyText": "Use 'sentence-case' for comments", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#discussion_r402230829", "createdAt": "2020-04-02T11:06:33Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -3486,4 +3495,62 @@ private STNode parseCheckingKeyword() {\n             return sol.recoveredNode;\n         }\n     }\n-}\n+\n+    /**\n+     * Parse Continue statement.\n+     * <code>continue-stmt := continue ; </code>\n+     *\n+     * @return Continue statement\n+     */\n+    private STNode parseContinueStatement() {\n+        startContext(ParserRuleContext.CONTINUE_STATEMENT);\n+        STNode continueKeyword = parseContinueKeyword();\n+        STNode semicolon = parseSemicolon();\n+        endContext();\n+        return STNodeFactory.createContinueStatement(continueKeyword, semicolon);\n+    }\n+\n+    /**\n+     * Parse Continue-keyword.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c479b41ed72e21be01ef2434574f4f587a078bc2"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIzMTA0NA==", "bodyText": "Incorrect doc comment", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#discussion_r402231044", "createdAt": "2020-04-02T11:06:55Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -3486,4 +3495,62 @@ private STNode parseCheckingKeyword() {\n             return sol.recoveredNode;\n         }\n     }\n-}\n+\n+    /**\n+     * Parse Continue statement.\n+     * <code>continue-stmt := continue ; </code>\n+     *\n+     * @return Continue statement\n+     */\n+    private STNode parseContinueStatement() {\n+        startContext(ParserRuleContext.CONTINUE_STATEMENT);\n+        STNode continueKeyword = parseContinueKeyword();\n+        STNode semicolon = parseSemicolon();\n+        endContext();\n+        return STNodeFactory.createContinueStatement(continueKeyword, semicolon);\n+    }\n+\n+    /**\n+     * Parse Continue-keyword.\n+     *\n+     * @return Continue-keyword node\n+     */\n+    private STNode parseContinueKeyword() {\n+        STToken token = peek();\n+        if (token.kind == SyntaxKind.CONTINUE_KEYWORD) {\n+            return consume();\n+        } else {\n+            Solution sol = recover(token, ParserRuleContext.CONTINUE_KEYWORD);\n+            return sol.recoveredNode;\n+        }\n+    }\n+\n+    /**\n+     * Parse Break statement.\n+     * <code>break-stmt := break ; </code>\n+     *\n+     * @return Break statement\n+     */\n+    private STNode parseBreakStatement() {\n+        startContext(ParserRuleContext.BREAK_STATEMENT);\n+        STNode breakKeyword = parseBreakKeyword();\n+        STNode semicolon = parseSemicolon();\n+        endContext();\n+        return STNodeFactory.createBreakStatement(breakKeyword, semicolon);\n+    }\n+\n+    /**\n+     * Parse Continue-keyword.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c479b41ed72e21be01ef2434574f4f587a078bc2"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ca3da8f59b2bc0c85eb23735777c18f3e6b94b1", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7ca3da8f59b2bc0c85eb23735777c18f3e6b94b1", "committedDate": "2020-04-02T11:39:59Z", "message": "Reformated the changed files\n\nused statement case for comments\nadded new line for EOF\nreorded the codelines\nformated indentation issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MzQzMTY1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#pullrequestreview-386343165", "createdAt": "2020-04-02T11:40:52Z", "commit": {"oid": "c479b41ed72e21be01ef2434574f4f587a078bc2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo0MDo1MlrOF_nQUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo0MTowMFrOF_nQfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI0Nzc2MQ==", "bodyText": "Shouldn't this be createToken(1);?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#discussion_r402247761", "createdAt": "2020-04-02T11:40:52Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/BreakStatement.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.ballerinalang.compiler.syntax.tree;\n+\n+import io.ballerinalang.compiler.internal.parser.tree.STNode;\n+\n+public class BreakStatement extends Statement{\n+    private Token breakToken;\n+    private Token semicolonToken;\n+\n+    public BreakStatement(STNode node, int position, NonTerminalNode parent) {\n+        super(node, position, parent);\n+    }\n+\n+    public Token breakToken() {\n+        if (breakToken != null) {\n+            return breakToken;\n+        }\n+\n+        breakToken = createToken(0);\n+        return breakToken;\n+    }\n+\n+    public Token semicolonToken() {\n+        if (semicolonToken != null) {\n+            return semicolonToken;\n+        }\n+\n+        semicolonToken = createToken(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c479b41ed72e21be01ef2434574f4f587a078bc2"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI0NzgwNQ==", "bodyText": "Shouldn't this be createToken(1);?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#discussion_r402247805", "createdAt": "2020-04-02T11:41:00Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/ContinueStatement.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.ballerinalang.compiler.syntax.tree;\n+\n+import io.ballerinalang.compiler.internal.parser.tree.STNode;\n+\n+public class ContinueStatement extends Statement{\n+    private Token continueToken;\n+    private Token semicolonToken;\n+\n+    public ContinueStatement(STNode node, int position, NonTerminalNode parent) {\n+        super(node, position, parent);\n+    }\n+\n+    public Token continueToken() {\n+        if (continueToken != null) {\n+            return continueToken;\n+        }\n+\n+        continueToken = createToken(0);\n+        return continueToken;\n+    }\n+\n+    public Token semicolonToken() {\n+        if (semicolonToken != null) {\n+            return semicolonToken;\n+        }\n+\n+        semicolonToken = createToken(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c479b41ed72e21be01ef2434574f4f587a078bc2"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b6e946c8213a3608dfba669dd36e2e688e86cab", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9b6e946c8213a3608dfba669dd36e2e688e86cab", "committedDate": "2020-04-02T11:51:48Z", "message": "changed createToken(2) to createToken(1)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "794165a478793cba605f566e3adb298d6e306ea3", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/794165a478793cba605f566e3adb298d6e306ea3", "committedDate": "2020-04-02T12:30:20Z", "message": "Merge branch 'incremental-parser' into incremental-parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "032a93bf7cabe43f8573aadbf103efe11023d433", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/032a93bf7cabe43f8573aadbf103efe11023d433", "committedDate": "2020-04-02T17:53:58Z", "message": "fix '{' is not preceded with whitespace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "775dcc18509653ebba499f30f677514b88ab84e1", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/775dcc18509653ebba499f30f677514b88ab84e1", "committedDate": "2020-04-02T17:54:38Z", "message": "fix '{' is not preceded with whitespace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18c4c6aea349da4edcfcc1937c4df3d303e42e4a", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/18c4c6aea349da4edcfcc1937c4df3d303e42e4a", "committedDate": "2020-04-02T18:36:46Z", "message": "remove additional new lines"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0eb06c5ed4907d9103026851f32d5aef912dde4", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d0eb06c5ed4907d9103026851f32d5aef912dde4", "committedDate": "2020-04-02T19:22:00Z", "message": "added missing json files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NzI4OTQ4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#pullrequestreview-386728948", "createdAt": "2020-04-02T19:24:36Z", "commit": {"oid": "d0eb06c5ed4907d9103026851f32d5aef912dde4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToyNDozNlrOF_6I6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOToyNDo1MlrOF_6Jgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1NzE2Mw==", "bodyText": "Can you dd a new line here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#discussion_r402557163", "createdAt": "2020-04-02T19:24:36Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-parser/src/test/resources/statements/break-stmt/break_stmt_assert_1.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{\n+  \"kind\": \"BREAK_STATEMENT\",\n+  \"children\": [\n+    {\n+      \"kind\": \"BREAK_KEYWORD\"\n+    },\n+    {\n+      \"kind\": \"SEMICOLON_TOKEN\"\n+    }\n+  ]\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0eb06c5ed4907d9103026851f32d5aef912dde4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1NzIxNw==", "bodyText": "Can you dd a new line here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#discussion_r402557217", "createdAt": "2020-04-02T19:24:42Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-parser/src/test/resources/statements/break-stmt/break_stmt_assert_2.json", "diffHunk": "@@ -0,0 +1,12 @@\n+{\n+  \"kind\": \"BREAK_STATEMENT\",\n+  \"children\": [\n+    {\n+      \"kind\": \"BREAK_KEYWORD\"\n+    },\n+    {\n+      \"kind\": \"SEMICOLON_TOKEN\",\n+      \"isMissing\": true\n+    }\n+  ]\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0eb06c5ed4907d9103026851f32d5aef912dde4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1NzI2MQ==", "bodyText": "Can you dd a new line here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#discussion_r402557261", "createdAt": "2020-04-02T19:24:47Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-parser/src/test/resources/statements/continue-stmt/continue_stmt_assert_1.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{\n+  \"kind\": \"CONTINUE_STATEMENT\",\n+  \"children\": [\n+    {\n+      \"kind\": \"CONTINUE_KEYWORD\"\n+    },\n+    {\n+      \"kind\": \"SEMICOLON_TOKEN\"\n+    }\n+  ]\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0eb06c5ed4907d9103026851f32d5aef912dde4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU1NzMxNQ==", "bodyText": "Can you dd a new line here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22427#discussion_r402557315", "createdAt": "2020-04-02T19:24:52Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-parser/src/test/resources/statements/continue-stmt/continue_stmt_assert_2.json", "diffHunk": "@@ -0,0 +1,12 @@\n+{\n+  \"kind\": \"CONTINUE_STATEMENT\",\n+  \"children\": [\n+    {\n+      \"kind\": \"CONTINUE_KEYWORD\"\n+    },\n+    {\n+      \"kind\": \"SEMICOLON_TOKEN\",\n+      \"isMissing\": true\n+    }\n+  ]\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0eb06c5ed4907d9103026851f32d5aef912dde4"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f98bd18e2aa86d91d527713ffcd3382bb09e382", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3f98bd18e2aa86d91d527713ffcd3382bb09e382", "committedDate": "2020-04-02T19:38:42Z", "message": "New line to EOF"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1085877735a62fec67c75de8923470202edcfac1", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1085877735a62fec67c75de8923470202edcfac1", "committedDate": "2020-04-03T11:08:15Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into incremental-parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f988462cea1abb6b5a74d751bc2dbed6ceacc6a", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7f988462cea1abb6b5a74d751bc2dbed6ceacc6a", "committedDate": "2020-04-03T11:31:23Z", "message": "Changed the code to match with latest changes in the upstream"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4151, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}