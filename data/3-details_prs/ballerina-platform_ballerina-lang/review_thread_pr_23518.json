{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMjg0MzI3", "number": 23518, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjowNDowNFrOEFmcQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjowOToyOVrOEFmkaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzA4MTYzOnYy", "diffSide": "RIGHT", "path": "misc/tracing-extensions/modules/ballerina-choreo-extension/spotbugs-exclude.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjowNDowNFrOGj40aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMzo1Njo1NFrOGkKYXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4NDI2Nw==", "bodyText": "Licence header should be 2020.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23518#discussion_r440284267", "createdAt": "2020-06-15T16:04:04Z", "author": {"login": "warunalakshitha"}, "path": "misc/tracing-extensions/modules/ballerina-choreo-extension/spotbugs-exclude.xml", "diffHunk": "@@ -0,0 +1,27 @@\n+<!--\n+  ~ Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395b4aca097816c4c5ab66ad5383fca0e401b834"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU3MTk5OQ==", "bodyText": "Fixed in 16163af", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23518#discussion_r440571999", "createdAt": "2020-06-16T03:56:54Z", "author": {"login": "nadundesilva"}, "path": "misc/tracing-extensions/modules/ballerina-choreo-extension/spotbugs-exclude.xml", "diffHunk": "@@ -0,0 +1,27 @@\n+<!--\n+  ~ Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4NDI2Nw=="}, "originalCommit": {"oid": "395b4aca097816c4c5ab66ad5383fca0e401b834"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzEwMjQ4OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjowOToyOVrOGj5BJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMDozMDoyNlrOGkVPYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4NzUyNQ==", "bodyText": "There are cases like running unit tests, where we skip copying libs from distribution using 'skipCopyLibsFromDist' flag. You might need to use 'skipCopyLibsFromDist' in CopyChoreoExtensionTask. Lets see  if unit tests failed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23518#discussion_r440287525", "createdAt": "2020-06-15T16:09:29Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "diffHunk": "@@ -413,8 +424,10 @@ public void execute() {\n                 .addTask(new CreateBaloTask(), isSingleFileBuild)   // create the BALOs for modules (projects only)\n                 .addTask(new CreateBirTask())   // create the bir\n                 .addTask(new CopyNativeLibTask())    // copy the native libs(projects only)\n+                .addTask(new CopyChoreoExtensionTask(), isChoreoExtensionSkipped)   // copy the Choreo extension\n                 .addTask(new CreateJarTask(skipCopyLibsFromDist))   // create the jar\n                 .addTask(new CopyResourcesTask(), isSingleFileBuild)\n+                .addTask(new CopyObservabilitySymbolsTask(), isSingleFileBuild)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395b4aca097816c4c5ab66ad5383fca0e401b834"}, "originalPosition": 220}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM1MzkxMA==", "bodyText": "I think in all our test cases, this will be skipped. Because none of them has the build time flag or the Ballerina.toml table. (Except maybe in any test case which uses ballerina new).\nI will confirm once the other \"lang-server\" related test case issue had been fixed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23518#discussion_r440353910", "createdAt": "2020-06-15T18:06:02Z", "author": {"login": "nadundesilva"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "diffHunk": "@@ -413,8 +424,10 @@ public void execute() {\n                 .addTask(new CreateBaloTask(), isSingleFileBuild)   // create the BALOs for modules (projects only)\n                 .addTask(new CreateBirTask())   // create the bir\n                 .addTask(new CopyNativeLibTask())    // copy the native libs(projects only)\n+                .addTask(new CopyChoreoExtensionTask(), isChoreoExtensionSkipped)   // copy the Choreo extension\n                 .addTask(new CreateJarTask(skipCopyLibsFromDist))   // create the jar\n                 .addTask(new CopyResourcesTask(), isSingleFileBuild)\n+                .addTask(new CopyObservabilitySymbolsTask(), isSingleFileBuild)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4NzUyNQ=="}, "originalCommit": {"oid": "395b4aca097816c4c5ab66ad5383fca0e401b834"}, "originalPosition": 220}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0OTkyMw==", "bodyText": "Resolving as all the integrations are passing.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23518#discussion_r440749923", "createdAt": "2020-06-16T10:30:26Z", "author": {"login": "nadundesilva"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/cmd/BuildCommand.java", "diffHunk": "@@ -413,8 +424,10 @@ public void execute() {\n                 .addTask(new CreateBaloTask(), isSingleFileBuild)   // create the BALOs for modules (projects only)\n                 .addTask(new CreateBirTask())   // create the bir\n                 .addTask(new CopyNativeLibTask())    // copy the native libs(projects only)\n+                .addTask(new CopyChoreoExtensionTask(), isChoreoExtensionSkipped)   // copy the Choreo extension\n                 .addTask(new CreateJarTask(skipCopyLibsFromDist))   // create the jar\n                 .addTask(new CopyResourcesTask(), isSingleFileBuild)\n+                .addTask(new CopyObservabilitySymbolsTask(), isSingleFileBuild)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4NzUyNQ=="}, "originalCommit": {"oid": "395b4aca097816c4c5ab66ad5383fca0e401b834"}, "originalPosition": 220}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3626, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}