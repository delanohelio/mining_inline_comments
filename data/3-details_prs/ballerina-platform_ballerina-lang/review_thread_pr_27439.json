{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1OTkxMzIy", "number": 27439, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxODozMzoyMFrOFFIc_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDozNzoxNFrOFIWC_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwOTI1Njk1OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/ProjectPaths.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxODozMzoyMFrOIFe4YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNTowODowNlrOIF5KRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYxOTc0NA==", "bodyText": "License header missing.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r542619744", "createdAt": "2020-12-14T18:33:20Z", "author": {"login": "hemikak"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/ProjectPaths.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package io.ballerina.projects.directory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "981293c0e5e55d2d3b3c4a86fe6d636713e51e04"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA1MDMxMA==", "bodyText": "Added in 1594be0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r543050310", "createdAt": "2020-12-15T05:08:06Z", "author": {"login": "azinneera"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/ProjectPaths.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package io.ballerina.projects.directory;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYxOTc0NA=="}, "originalCommit": {"oid": "981293c0e5e55d2d3b3c4a86fe6d636713e51e04"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMTE2NzI3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/ProjectPaths.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMzo0MToyMFrOIFxojg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNTowODowM1rOIF5KPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkyNjk5MA==", "bodyText": "Let's move this class to io.ballerina.projects.util class.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r542926990", "createdAt": "2020-12-14T23:41:20Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/ProjectPaths.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package io.ballerina.projects.directory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "981293c0e5e55d2d3b3c4a86fe6d636713e51e04"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA1MDMwMA==", "bodyText": "Moved in 1594be0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r543050300", "createdAt": "2020-12-15T05:08:03Z", "author": {"login": "azinneera"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/ProjectPaths.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package io.ballerina.projects.directory;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkyNjk5MA=="}, "originalCommit": {"oid": "981293c0e5e55d2d3b3c4a86fe6d636713e51e04"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMTE2ODE2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/ProjectPaths.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMzo0MTo0MlrOIFxpEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNTowODowMlrOIF5KNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkyNzEyMg==", "bodyText": "Missing  @SInCE 2.0.0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r542927122", "createdAt": "2020-12-14T23:41:42Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/ProjectPaths.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package io.ballerina.projects.directory;\n+\n+import io.ballerina.projects.Project;\n+import io.ballerina.projects.ProjectException;\n+import io.ballerina.projects.util.ProjectConstants;\n+import org.wso2.ballerinalang.compiler.util.ProjectDirConstants;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Optional;\n+\n+/**\n+ * Consists of static methods that may be used to obtain {@link Project}\n+ * information using file paths.\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "981293c0e5e55d2d3b3c4a86fe6d636713e51e04"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA1MDI5NA==", "bodyText": "Added in 1594be0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r543050294", "createdAt": "2020-12-15T05:08:02Z", "author": {"login": "azinneera"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/ProjectPaths.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package io.ballerina.projects.directory;\n+\n+import io.ballerina.projects.Project;\n+import io.ballerina.projects.ProjectException;\n+import io.ballerina.projects.util.ProjectConstants;\n+import org.wso2.ballerinalang.compiler.util.ProjectDirConstants;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Optional;\n+\n+/**\n+ * Consists of static methods that may be used to obtain {@link Project}\n+ * information using file paths.\n+ */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkyNzEyMg=="}, "originalCommit": {"oid": "981293c0e5e55d2d3b3c4a86fe6d636713e51e04"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMTE5ODM3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/ProjectPaths.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMzo1MToxOFrOIFx5Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNTowNjoyNlrOIF5H8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkzMTI1OA==", "bodyText": "Do we need to support other files here? e.g., resources, Package.md, Ballerina.toml etc", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r542931258", "createdAt": "2020-12-14T23:51:18Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/ProjectPaths.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package io.ballerina.projects.directory;\n+\n+import io.ballerina.projects.Project;\n+import io.ballerina.projects.ProjectException;\n+import io.ballerina.projects.util.ProjectConstants;\n+import org.wso2.ballerinalang.compiler.util.ProjectDirConstants;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Optional;\n+\n+/**\n+ * Consists of static methods that may be used to obtain {@link Project}\n+ * information using file paths.\n+ */\n+public class ProjectPaths {\n+\n+    /**\n+     * Finds the root directory of a Ballerina package using the filepath provided.\n+     *\n+     * @param filepath ballerina file that belongs to a package\n+     * @return path to the package root directory\n+     * @throws ProjectException if the provided path is invalid or if it is a standalone ballerina file\n+     */\n+    public static Path findPackageRoot(Path filepath) throws ProjectException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "981293c0e5e55d2d3b3c4a86fe6d636713e51e04"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkzMzEwNQ==", "bodyText": "AFAIR, what we discussed was to introduce two APIs:\n\nCheck whether a given path belongs to a package?\nGet the package root path from a given file path", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r542933105", "createdAt": "2020-12-14T23:56:08Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/ProjectPaths.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package io.ballerina.projects.directory;\n+\n+import io.ballerina.projects.Project;\n+import io.ballerina.projects.ProjectException;\n+import io.ballerina.projects.util.ProjectConstants;\n+import org.wso2.ballerinalang.compiler.util.ProjectDirConstants;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Optional;\n+\n+/**\n+ * Consists of static methods that may be used to obtain {@link Project}\n+ * information using file paths.\n+ */\n+public class ProjectPaths {\n+\n+    /**\n+     * Finds the root directory of a Ballerina package using the filepath provided.\n+     *\n+     * @param filepath ballerina file that belongs to a package\n+     * @return path to the package root directory\n+     * @throws ProjectException if the provided path is invalid or if it is a standalone ballerina file\n+     */\n+    public static Path findPackageRoot(Path filepath) throws ProjectException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkzMTI1OA=="}, "originalCommit": {"oid": "981293c0e5e55d2d3b3c4a86fe6d636713e51e04"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA0OTcxNQ==", "bodyText": "Yes, the discussed APIs are the ones you mentioned. +1, to add other files. When we support resources, should we support multiple directory levels?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r543049715", "createdAt": "2020-12-15T05:06:26Z", "author": {"login": "azinneera"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/ProjectPaths.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package io.ballerina.projects.directory;\n+\n+import io.ballerina.projects.Project;\n+import io.ballerina.projects.ProjectException;\n+import io.ballerina.projects.util.ProjectConstants;\n+import org.wso2.ballerinalang.compiler.util.ProjectDirConstants;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Optional;\n+\n+/**\n+ * Consists of static methods that may be used to obtain {@link Project}\n+ * information using file paths.\n+ */\n+public class ProjectPaths {\n+\n+    /**\n+     * Finds the root directory of a Ballerina package using the filepath provided.\n+     *\n+     * @param filepath ballerina file that belongs to a package\n+     * @return path to the package root directory\n+     * @throws ProjectException if the provided path is invalid or if it is a standalone ballerina file\n+     */\n+    public static Path findPackageRoot(Path filepath) throws ProjectException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkzMTI1OA=="}, "originalCommit": {"oid": "981293c0e5e55d2d3b3c4a86fe6d636713e51e04"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMTIzODQ4OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/BuildProject.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwMDowMjowN1rOIFyP0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwMDoxMjoyMlrOII2yMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkzNzA0Mw==", "bodyText": "It is not correct to get the module name from the moduleId. Use moduleId to get the ModuleContext.\nWhat's inside moduleId is just for debugging purposes.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r542937043", "createdAt": "2020-12-15T00:02:07Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/BuildProject.java", "diffHunk": "@@ -111,4 +114,38 @@ private BuildProject(ProjectEnvironmentBuilder environmentBuilder, Path projectP\n         }\n         return Optional.empty();\n     }\n+\n+    @Override\n+    public DocumentId documentId(Path file) {\n+        ProjectPaths.findPackageRoot(file);\n+        Path parent = Optional.of(file.toAbsolutePath().getParent()).get();\n+        for (ModuleId moduleId : this.currentPackage().moduleIds()) {\n+            String moduleDirName;\n+            if (moduleId.moduleName().contains(DOT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "981293c0e5e55d2d3b3c4a86fe6d636713e51e04"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkzODEwMQ==", "bodyText": "ModuleId.moduleName() is public method which is not correct. Please remove that as well.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r542938101", "createdAt": "2020-12-15T00:03:05Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/BuildProject.java", "diffHunk": "@@ -111,4 +114,38 @@ private BuildProject(ProjectEnvironmentBuilder environmentBuilder, Path projectP\n         }\n         return Optional.empty();\n     }\n+\n+    @Override\n+    public DocumentId documentId(Path file) {\n+        ProjectPaths.findPackageRoot(file);\n+        Path parent = Optional.of(file.toAbsolutePath().getParent()).get();\n+        for (ModuleId moduleId : this.currentPackage().moduleIds()) {\n+            String moduleDirName;\n+            if (moduleId.moduleName().contains(DOT)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkzNzA0Mw=="}, "originalCommit": {"oid": "981293c0e5e55d2d3b3c4a86fe6d636713e51e04"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA0ODg0Nw==", "bodyText": "ModuleContext is not visible to the BuildProject. What should we do in that case?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r543048847", "createdAt": "2020-12-15T05:03:49Z", "author": {"login": "azinneera"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/BuildProject.java", "diffHunk": "@@ -111,4 +114,38 @@ private BuildProject(ProjectEnvironmentBuilder environmentBuilder, Path projectP\n         }\n         return Optional.empty();\n     }\n+\n+    @Override\n+    public DocumentId documentId(Path file) {\n+        ProjectPaths.findPackageRoot(file);\n+        Path parent = Optional.of(file.toAbsolutePath().getParent()).get();\n+        for (ModuleId moduleId : this.currentPackage().moduleIds()) {\n+            String moduleDirName;\n+            if (moduleId.moduleName().contains(DOT)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkzNzA0Mw=="}, "originalCommit": {"oid": "981293c0e5e55d2d3b3c4a86fe6d636713e51e04"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDczMzE5OQ==", "bodyText": "We need to restructure the Java packages in io.ballerina.projects to make it work. We can move whatever in the directory package to the io.ballerina.projects package.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r544733199", "createdAt": "2020-12-17T01:00:58Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/BuildProject.java", "diffHunk": "@@ -111,4 +114,38 @@ private BuildProject(ProjectEnvironmentBuilder environmentBuilder, Path projectP\n         }\n         return Optional.empty();\n     }\n+\n+    @Override\n+    public DocumentId documentId(Path file) {\n+        ProjectPaths.findPackageRoot(file);\n+        Path parent = Optional.of(file.toAbsolutePath().getParent()).get();\n+        for (ModuleId moduleId : this.currentPackage().moduleIds()) {\n+            String moduleDirName;\n+            if (moduleId.moduleName().contains(DOT)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkzNzA0Mw=="}, "originalCommit": {"oid": "981293c0e5e55d2d3b3c4a86fe6d636713e51e04"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE1NzEwNw==", "bodyText": "Let's go ahead with the current implementation for now. We need to refactor the packages to fix this properly", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r546157107", "createdAt": "2020-12-19T00:12:22Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/directory/BuildProject.java", "diffHunk": "@@ -111,4 +114,38 @@ private BuildProject(ProjectEnvironmentBuilder environmentBuilder, Path projectP\n         }\n         return Optional.empty();\n     }\n+\n+    @Override\n+    public DocumentId documentId(Path file) {\n+        ProjectPaths.findPackageRoot(file);\n+        Path parent = Optional.of(file.toAbsolutePath().getParent()).get();\n+        for (ModuleId moduleId : this.currentPackage().moduleIds()) {\n+            String moduleDirName;\n+            if (moduleId.moduleName().contains(DOT)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkzNzA0Mw=="}, "originalCommit": {"oid": "981293c0e5e55d2d3b3c4a86fe6d636713e51e04"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0Mjk0MTQwOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/util/ProjectPaths.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDozNzoxNFrOIKNPoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDo0MTo0MVrOIKNUBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU3MzY2NA==", "bodyText": "What we had previously (findPackageRoot ) is better IMO.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r547573664", "createdAt": "2020-12-23T00:37:14Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/util/ProjectPaths.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package io.ballerina.projects.util;\n+\n+import io.ballerina.projects.Project;\n+import io.ballerina.projects.ProjectException;\n+import org.wso2.ballerinalang.compiler.util.ProjectDirConstants;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Optional;\n+\n+import static io.ballerina.projects.util.ProjectConstants.BALLERINA_TOML;\n+\n+/**\n+ * Consists of static methods that may be used to obtain {@link Project}\n+ * information using file paths.\n+ *\n+ * @since 2.0.0\n+ */\n+public class ProjectPaths {\n+\n+    /**\n+     * Finds the root directory of a Ballerina package using the filepath provided.\n+     *\n+     * @param filepath ballerina file that belongs to a package\n+     * @return path to the package root directory\n+     * @throws ProjectException if the provided path is invalid or if it is a standalone ballerina file\n+     */\n+    public static Path packageRoot(Path filepath) throws ProjectException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30cfff21151408ce4b521d63c5fca1a7601e36e1"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU3NDc5MA==", "bodyText": "This method should simply traverse recursively until it finds a Ballerina.toml. We don't need to complicate this method IMO.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27439#discussion_r547574790", "createdAt": "2020-12-23T00:41:41Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-lang/src/main/java/io/ballerina/projects/util/ProjectPaths.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package io.ballerina.projects.util;\n+\n+import io.ballerina.projects.Project;\n+import io.ballerina.projects.ProjectException;\n+import org.wso2.ballerinalang.compiler.util.ProjectDirConstants;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Optional;\n+\n+import static io.ballerina.projects.util.ProjectConstants.BALLERINA_TOML;\n+\n+/**\n+ * Consists of static methods that may be used to obtain {@link Project}\n+ * information using file paths.\n+ *\n+ * @since 2.0.0\n+ */\n+public class ProjectPaths {\n+\n+    /**\n+     * Finds the root directory of a Ballerina package using the filepath provided.\n+     *\n+     * @param filepath ballerina file that belongs to a package\n+     * @return path to the package root directory\n+     * @throws ProjectException if the provided path is invalid or if it is a standalone ballerina file\n+     */\n+    public static Path packageRoot(Path filepath) throws ProjectException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU3MzY2NA=="}, "originalCommit": {"oid": "30cfff21151408ce4b521d63c5fca1a7601e36e1"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2918, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}