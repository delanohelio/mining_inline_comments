{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5OTcwODg1", "number": 22936, "title": "Add list constructor expression support", "bodyText": "Purpose\n\nAdd list constructor expression support\n\nFixes #22357\nApproach\n\nN/A\n\nSamples\n\nN/A\n\nRemarks\n\nN/A\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-28T08:42:32Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22936", "merged": true, "mergeCommit": {"oid": "8f1962e0234d6a0e72bf68a9ed4b30d419cf216c"}, "closed": true, "closedAt": "2020-04-28T14:17:37Z", "author": {"login": "lochana-chathura"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcabDBXgH2gAyNDA5OTcwODg1OmZiODM0YTA2OWRiNGZmMDFkYTY0MDQ4Y2EwYzRkZmYzMTVmZDQ1YzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccEmRTgFqTQwMTg4MTY5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fb834a069db4ff01da64048ca0c4dff315fd45c3", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fb834a069db4ff01da64048ca0c4dff315fd45c3", "committedDate": "2020-04-23T11:18:51Z", "message": "Add list-constructor-expr support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b01cd1eb26e33d38b66c8afb6809605f5010a382", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b01cd1eb26e33d38b66c8afb6809605f5010a382", "committedDate": "2020-04-23T12:03:08Z", "message": "Add test cases to validate syntax"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0220c46d7dfda4b2ee504a728fb6ffe893dbb06", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e0220c46d7dfda4b2ee504a728fb6ffe893dbb06", "committedDate": "2020-04-24T15:41:16Z", "message": "Refactor parsing with reusing parseListeners() method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa665415ad0995ddb19b6e65299116098f51f64a", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fa665415ad0995ddb19b6e65299116098f51f64a", "committedDate": "2020-04-24T15:45:42Z", "message": "Add error recovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c342949fffbfbd2a4ea6017254e35b6836583cbe", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c342949fffbfbd2a4ea6017254e35b6836583cbe", "committedDate": "2020-04-25T06:28:38Z", "message": "Add recovery tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d0b43889eb849a22af4101c17bc6c596c25e0fc", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0d0b43889eb849a22af4101c17bc6c596c25e0fc", "committedDate": "2020-04-28T06:46:13Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into list-constructor-expr\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/ParserRuleContext.java\n\u0001\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "103fa42a98705f6708f3699693077e2f345192a2", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/103fa42a98705f6708f3699693077e2f345192a2", "committedDate": "2020-04-28T08:33:43Z", "message": "Fix error recovery"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNjI4OTM0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22936#pullrequestreview-401628934", "createdAt": "2020-04-28T08:51:20Z", "commit": {"oid": "103fa42a98705f6708f3699693077e2f345192a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwODo1MToyMFrOGNJrZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwODo1MToyMFrOGNJrZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ0MzIzNw==", "bodyText": "I reuse the parseListeners() here which has the following definition.\n<code>expression-list := expression (, expression)*</code>\nShall I refactor its name to parseExpressionsList() and corresponding LISTNERS_LIST ctx name to EXPRESSIONS_LIST in error handler.\nOr Let's keep keep those names intact ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22936#discussion_r416443237", "createdAt": "2020-04-28T08:51:20Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -6847,4 +6852,39 @@ private STNode parseTrapKeyword() {\n             return sol.recoveredNode;\n         }\n     }\n+\n+    /**\n+     * Parse list constructor expression.\n+     * <p>\n+     * <code>\n+     * list-constructor-expr := [ [ expr-list ] ]\n+     * <br/>\n+     * expr-list := expression (, expression)*\n+     * </code>\n+     *\n+     * @return Parsed node\n+     */\n+    private STNode parseListConstructorExpr() {\n+        startContext(ParserRuleContext.LIST_CONSTRUCTOR);\n+        STNode openBracket = parseOpenBracket();\n+        STNode expressions = parseOptionalExpressionsList();\n+        STNode closeBracket = parseCloseBracket();\n+        endContext();\n+        return STNodeFactory.createListConstructorExpressionNode(openBracket, expressions, closeBracket);\n+    }\n+\n+    /**\n+     * Parse optional expression list.\n+     *\n+     * @return Parsed node\n+     */\n+    private STNode parseOptionalExpressionsList() {\n+        STToken nextToken = peek();\n+\n+        // Return an empty list if list is empty\n+        if (isEndOfListenersList(nextToken.kind)) {\n+            return STNodeFactory.createNodeList(new ArrayList<>());\n+        }\n+        return parseListeners();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "103fa42a98705f6708f3699693077e2f345192a2"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNjc5Mjg1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22936#pullrequestreview-401679285", "createdAt": "2020-04-28T09:55:37Z", "commit": {"oid": "103fa42a98705f6708f3699693077e2f345192a2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTo1NTozN1rOGNMMxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMDoxNzo0MVrOGNNCmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ4NDU0OA==", "bodyText": "I think we would need two contexts, to make error recovery easy. For example, end of the listeners-list is the {, whereas end of the list constructor is ].\nBut +1 for reusing the same parser logic. May be we can extract the common code and re-use it?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22936#discussion_r416484548", "createdAt": "2020-04-28T09:55:37Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -6847,4 +6852,39 @@ private STNode parseTrapKeyword() {\n             return sol.recoveredNode;\n         }\n     }\n+\n+    /**\n+     * Parse list constructor expression.\n+     * <p>\n+     * <code>\n+     * list-constructor-expr := [ [ expr-list ] ]\n+     * <br/>\n+     * expr-list := expression (, expression)*\n+     * </code>\n+     *\n+     * @return Parsed node\n+     */\n+    private STNode parseListConstructorExpr() {\n+        startContext(ParserRuleContext.LIST_CONSTRUCTOR);\n+        STNode openBracket = parseOpenBracket();\n+        STNode expressions = parseOptionalExpressionsList();\n+        STNode closeBracket = parseCloseBracket();\n+        endContext();\n+        return STNodeFactory.createListConstructorExpressionNode(openBracket, expressions, closeBracket);\n+    }\n+\n+    /**\n+     * Parse optional expression list.\n+     *\n+     * @return Parsed node\n+     */\n+    private STNode parseOptionalExpressionsList() {\n+        STToken nextToken = peek();\n+\n+        // Return an empty list if list is empty\n+        if (isEndOfListenersList(nextToken.kind)) {\n+            return STNodeFactory.createNodeList(new ArrayList<>());\n+        }\n+        return parseListeners();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ0MzIzNw=="}, "originalCommit": {"oid": "103fa42a98705f6708f3699693077e2f345192a2"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ5Njc2Mw==", "bodyText": "{ ParserRuleContext.CLOSE_BRACKET, ParserRuleContext.EXPRESSION }", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22936#discussion_r416496763", "createdAt": "2020-04-28T10:15:04Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -261,6 +261,9 @@\n     private static final ParserRuleContext[] TYPEDESC_RHS = {ParserRuleContext.NON_RECURSIVE_TYPE,\n             ParserRuleContext.ARRAY_TYPE_DESCRIPTOR, ParserRuleContext.OPTIONAL_TYPE_DESCRIPTOR };\n \n+    private static final ParserRuleContext[] LIST_CONSTRUCTOR_RHS =\n+            { ParserRuleContext.CLOSE_BRACKET, ParserRuleContext.LISTENERS_LIST };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "103fa42a98705f6708f3699693077e2f345192a2"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ5ODMzMA==", "bodyText": "Can a close-brace be present in a list-constructor context?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22936#discussion_r416498330", "createdAt": "2020-04-28T10:17:41Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -2297,14 +2309,16 @@ private ParserRuleContext getNextRuleForCloseBrace(int nextLookahead) {\n             case FORK_STMT:\n                 endContext(); // end fork-statement\n                 return ParserRuleContext.STATEMENT;\n+            case LIST_CONSTRUCTOR:\n+                return ParserRuleContext.CLOSE_BRACKET;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "103fa42a98705f6708f3699693077e2f345192a2"}, "originalPosition": 243}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dde2f680381ed7091990dd246f68c3d12e8146b6", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dde2f680381ed7091990dd246f68c3d12e8146b6", "committedDate": "2020-04-28T12:03:47Z", "message": "Change syntax tree descriptor and regenerate tree"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c090ef90a5a8adec56a2802d43fe331854abf7ff", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c090ef90a5a8adec56a2802d43fe331854abf7ff", "committedDate": "2020-04-28T12:45:19Z", "message": "Refactor parseOptionalExpressionsList()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83950f2ec60136f5a3f3936905b0f4929597e72a", "author": {"user": {"login": "lochana-chathura", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/83950f2ec60136f5a3f3936905b0f4929597e72a", "committedDate": "2020-04-28T12:45:56Z", "message": "Update test cases for new changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxODgxNjkz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22936#pullrequestreview-401881693", "createdAt": "2020-04-28T14:17:23Z", "commit": {"oid": "83950f2ec60136f5a3f3936905b0f4929597e72a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3505, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}