{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NjEyOTIy", "number": 24242, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTozODowMlrOEGMzBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDoxNzoyN1rOEGjseQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTM2NTgyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/AbstractParserErrorHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTozODowMlrOGk2Sgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo1Mzo1OVrOGk2mXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5MTM5NQ==", "bodyText": "Can we move this check to before calling seekMatch()?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#discussion_r441291395", "createdAt": "2020-06-17T05:38:02Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/AbstractParserErrorHandler.java", "diffHunk": "@@ -82,10 +92,18 @@ public Solution recover(ParserRuleContext currentCtx, STToken nextToken, Object.\n             return fix;\n         }\n \n+        int currentIndex = this.tokenReader.getCurrentIndex();\n+        if (currentIndex == this.previousIndex) {\n+            itterCount++;\n+        } else {\n+            itterCount = 0;\n+            previousIndex = currentIndex;\n+        }\n+\n         Result bestMatch = seekMatch(currentCtx);\n         if (bestMatch.matches > 0) {\n             Solution sol = bestMatch.solution;\n-            if (sol != null) {\n+            if (sol != null && itterCount < ITTER_LIMIT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ad5b8703a1c102f38542de419d5858c82a1f5c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5NjQ3OA==", "bodyText": "okay", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#discussion_r441296478", "createdAt": "2020-06-17T05:53:59Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/AbstractParserErrorHandler.java", "diffHunk": "@@ -82,10 +92,18 @@ public Solution recover(ParserRuleContext currentCtx, STToken nextToken, Object.\n             return fix;\n         }\n \n+        int currentIndex = this.tokenReader.getCurrentIndex();\n+        if (currentIndex == this.previousIndex) {\n+            itterCount++;\n+        } else {\n+            itterCount = 0;\n+            previousIndex = currentIndex;\n+        }\n+\n         Result bestMatch = seekMatch(currentCtx);\n         if (bestMatch.matches > 0) {\n             Solution sol = bestMatch.solution;\n-            if (sol != null) {\n+            if (sol != null && itterCount < ITTER_LIMIT) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5MTM5NQ=="}, "originalCommit": {"oid": "d4ad5b8703a1c102f38542de419d5858c82a1f5c"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTM2OTQzOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/AbstractParserErrorHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTozOToyNlrOGk2UcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo1Mzo1NFrOGk2mSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5MTg4OA==", "bodyText": "How about a limit of 5? will it break things?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#discussion_r441291888", "createdAt": "2020-06-17T05:39:26Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/AbstractParserErrorHandler.java", "diffHunk": "@@ -35,15 +35,25 @@\n     protected final AbstractTokenReader tokenReader;\n     protected final BallerinaParserErrorListener errorListener;\n     private ArrayDeque<ParserRuleContext> ctxStack = new ArrayDeque<>();\n+    private int previousIndex;\n+    private int itterCount;\n \n     /**\n      * Limit for the distance to travel, to determine a successful lookahead.\n      */\n     protected static final int LOOKAHEAD_LIMIT = 5;\n \n+    /**\n+     * Limit for the number of times parser tries to recover staying on the same token index.\n+     * This will prevent parser going to infinite loops.\n+     */\n+    private static final int ITTER_LIMIT = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ad5b8703a1c102f38542de419d5858c82a1f5c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5NjQ1Ng==", "bodyText": "Yes 5 break things. Trying 7", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#discussion_r441296456", "createdAt": "2020-06-17T05:53:54Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/AbstractParserErrorHandler.java", "diffHunk": "@@ -35,15 +35,25 @@\n     protected final AbstractTokenReader tokenReader;\n     protected final BallerinaParserErrorListener errorListener;\n     private ArrayDeque<ParserRuleContext> ctxStack = new ArrayDeque<>();\n+    private int previousIndex;\n+    private int itterCount;\n \n     /**\n      * Limit for the distance to travel, to determine a successful lookahead.\n      */\n     protected static final int LOOKAHEAD_LIMIT = 5;\n \n+    /**\n+     * Limit for the number of times parser tries to recover staying on the same token index.\n+     * This will prevent parser going to infinite loops.\n+     */\n+    private static final int ITTER_LIMIT = 10;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5MTg4OA=="}, "originalCommit": {"oid": "d4ad5b8703a1c102f38542de419d5858c82a1f5c"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTM3NjI1OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/incremental/HybridNodeStorage.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0Mjo1M1rOGk2Ycw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjowNDowN1rOGk2zkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5MjkxNQ==", "bodyText": "Looks like other methods don't have the public qualifier. Shall we do the same?\nAlso, let move this to the other non-private methods section.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#discussion_r441292915", "createdAt": "2020-06-17T05:42:53Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/incremental/HybridNodeStorage.java", "diffHunk": "@@ -178,4 +178,8 @@ private TextEditRange markAffectedRange(ModulePartNode oldTree, TextEdit textEdi\n                 (textRange.startOffset() - affectedTokenStartOffset);\n         return new TextEditRange(affectedTokenStartOffset, textRange.endOffset(), newTextLength);\n     }\n+\n+    public int getCurrentIndex() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ad5b8703a1c102f38542de419d5858c82a1f5c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5OTg1OQ==", "bodyText": "Done", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#discussion_r441299859", "createdAt": "2020-06-17T06:04:07Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/incremental/HybridNodeStorage.java", "diffHunk": "@@ -178,4 +178,8 @@ private TextEditRange markAffectedRange(ModulePartNode oldTree, TextEdit textEdi\n                 (textRange.startOffset() - affectedTokenStartOffset);\n         return new TextEditRange(affectedTokenStartOffset, textRange.endOffset(), newTextLength);\n     }\n+\n+    public int getCurrentIndex() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5MjkxNQ=="}, "originalCommit": {"oid": "d4ad5b8703a1c102f38542de419d5858c82a1f5c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTM4MjI5OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/TokenReader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0NTozNVrOGk2b5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTo0NTozNVrOGk2b5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5Mzc5Ng==", "bodyText": "IMO, \"currentIndex\" is too generic. Can we use a descriptive term for this?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#discussion_r441293796", "createdAt": "2020-06-17T05:45:35Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/TokenReader.java", "diffHunk": "@@ -113,6 +113,14 @@ public void endMode() {\n         this.lexer.endMode();\n     }\n \n+    /**\n+     *\n+     * @return current token index\n+     */\n+    public int getCurrentIndex() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ad5b8703a1c102f38542de419d5858c82a1f5c"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzExNzM3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/AbstractParserErrorHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDoxNzoyN1rOGlbfmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDoxNzoyN1rOGlbfmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMDk1Mg==", "bodyText": "previousIndex is also not a descriptive name", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24242#discussion_r441900952", "createdAt": "2020-06-18T00:17:27Z", "author": {"login": "sameerajayasoma"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/AbstractParserErrorHandler.java", "diffHunk": "@@ -35,15 +35,25 @@\n     protected final AbstractTokenReader tokenReader;\n     protected final BallerinaParserErrorListener errorListener;\n     private ArrayDeque<ParserRuleContext> ctxStack = new ArrayDeque<>();\n+    private int previousIndex;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1db82fe45b6335589bbc535219421f109a963e7d"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3323, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}