{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMjYzODA4", "number": 26113, "title": "Introduce the `@isolatedParam` annotation ", "bodyText": "Purpose\nThis PR introduces the @isolatedParam annotation for use in langlib modules.\nParameters annotated with @isolatedParam require an isolated function argument if the function is being called in an isolated context.\nFixes #25792\nThis PR also fixes isolation analysis not happening for test source. Fixes #26118\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-09-25T17:43:39Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26113", "merged": true, "mergeCommit": {"oid": "f4b2eec4693cdc5db57aef367d07a1e8e4c751d3"}, "closed": true, "closedAt": "2020-10-20T20:15:38Z", "author": {"login": "MaryamZi"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMBjkegH2gAyNDkzMjYzODA4OmFiMjEzZjA5Njk4ZWEwZWM4NTM2MDNkMGVlMjg2NDk3Y2Y4YzQ1ZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUenCrgFqTUxMzA5NjY3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ab213f09698ea0ec853603d0ee286497cf8c45fc", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ab213f09698ea0ec853603d0ee286497cf8c45fc", "committedDate": "2020-09-24T13:53:05Z", "message": "Introduce the isolatedParam annotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff5e6f7ca140558fe9a18beb3719eb18c728f6b6", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ff5e6f7ca140558fe9a18beb3719eb18c728f6b6", "committedDate": "2020-09-24T15:06:38Z", "message": "Fix SymbolBIRTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24155aabf6ea834053cb9f74146facd384ef3ec5", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/24155aabf6ea834053cb9f74146facd384ef3ec5", "committedDate": "2020-09-24T17:28:16Z", "message": "Fix diagnostics and add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3ce8dfd3319623bad955b5d1c0b06fa2f46c271", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c3ce8dfd3319623bad955b5d1c0b06fa2f46c271", "committedDate": "2020-09-25T16:29:17Z", "message": "Fix isolatedParam analysis for arrow functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f37f7f224c7d370712a35afcf06af6d96da84959", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f37f7f224c7d370712a35afcf06af6d96da84959", "committedDate": "2020-09-25T17:40:50Z", "message": "Add isolatedParam tests for default values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf162f967ca84133e1a894943462589d0823d219", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cf162f967ca84133e1a894943462589d0823d219", "committedDate": "2020-09-26T05:10:07Z", "message": "Merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "265bfb9ae915fe1f3ee6007c3578631313c2b3f4", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/265bfb9ae915fe1f3ee6007c3578631313c2b3f4", "committedDate": "2020-09-26T06:53:48Z", "message": "Fix analysis for rest param args in vararg"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77f51593836147fc2db50d58cd8b75dd1671bde2", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/77f51593836147fc2db50d58cd8b75dd1671bde2", "committedDate": "2020-09-26T16:55:49Z", "message": "Fix error duplication"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72777b5838b9f673ae6523c5db6dd252726cf00a", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/72777b5838b9f673ae6523c5db6dd252726cf00a", "committedDate": "2020-09-29T06:58:31Z", "message": "Merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d3029a0ea97756efd46d74d18bb0ca735f10158", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2d3029a0ea97756efd46d74d18bb0ca735f10158", "committedDate": "2020-09-29T07:38:00Z", "message": "Fix isolation analysis for test source"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6eabcec7c28e23257ac5d2c2af76cc583da008ab", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6eabcec7c28e23257ac5d2c2af76cc583da008ab", "committedDate": "2020-09-29T10:48:33Z", "message": "Fix annotation completion tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "072fe0869cab287d88c4bf06fb3980c3e1b45018", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/072fe0869cab287d88c4bf06fb3980c3e1b45018", "committedDate": "2020-10-07T05:17:04Z", "message": "Resolve conflicts and merge branch 'master' of https://github.com/ballerina-lang/ballerina into add-isolated-rem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e266674e65c720f7eb3aed281a15921aeab495ec", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e266674e65c720f7eb3aed281a15921aeab495ec", "committedDate": "2020-10-14T12:00:59Z", "message": "Merge branch 'master' of https://github.com/ballerina-lang/ballerina into add-isolated-rem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a835a7a6720c035a343db5ad08846e916a19c3b", "author": {"user": {"login": "MaryamZi", "name": "Maryam Ziyad"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3a835a7a6720c035a343db5ad08846e916a19c3b", "committedDate": "2020-10-20T15:18:56Z", "message": "Merge branch 'master' of https://github.com/ballerina-lang/ballerina into add-isolated-rem"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMDk2MTkx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26113#pullrequestreview-513096191", "createdAt": "2020-10-20T20:14:47Z", "commit": {"oid": "3a835a7a6720c035a343db5ad08846e916a19c3b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMDoxNDo0N1rOHlPS-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMDoxNDo0N1rOHlPS-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODgwOTk3Ng==", "bodyText": "Can we break this logic into multiple methods?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26113#discussion_r508809976", "createdAt": "2020-10-20T20:14:47Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/IsolationAnalyzer.java", "diffHunk": "@@ -1372,11 +1412,333 @@ private void analyzeInvocation(BLangInvocation invocationExpr) {\n             }\n         }\n \n-        if (isObjectFieldDefaultValueRequiringIsolation(env)) {\n+        if (objectFieldDefaultValueRequiringIsolation) {\n             dlog.error(invocationExpr.pos, DiagnosticCode.INVALID_NON_ISOLATED_INVOCATION_AS_OBJECT_DEFAULT);\n         }\n     }\n \n+    private void analyzeArgs(List<BLangExpression> requiredArgs, List<BLangExpression> restArgs) {\n+        List<BLangExpression> args = new ArrayList<>(requiredArgs);\n+        args.addAll(restArgs);\n+        for (BLangExpression argExpr : args) {\n+            analyzeNode(argExpr, env);\n+        }\n+    }\n+\n+    private void analyzeAndSetArrowFuncFlagForIsolatedParamArg(BLangExpression arg) {\n+        if (arg.getKind() == NodeKind.REST_ARGS_EXPR) {\n+            BLangExpression expr = ((BLangRestArgsExpression) arg).expr;\n+            if (expr.getKind() != NodeKind.LIST_CONSTRUCTOR_EXPR) {\n+                analyzeNode(arg, env);\n+                return;\n+            }\n+\n+            for (BLangExpression expression : ((BLangListConstructorExpr) expr).exprs) {\n+                analyzeAndSetArrowFuncFlagForIsolatedParamArg(expression);\n+            }\n+            return;\n+        }\n+\n+        boolean namedArg = arg.getKind() == NodeKind.NAMED_ARGS_EXPR;\n+        BLangExpression argExpr = namedArg ? ((BLangNamedArgsExpression) arg).expr : arg;\n+\n+        if (argExpr.getKind() != NodeKind.ARROW_EXPR) {\n+            analyzeNode(argExpr, env);\n+            return;\n+        }\n+\n+        boolean prevInferredIsolatedness = this.inferredIsolated;\n+        this.inferredIsolated = true;\n+\n+        analyzeNode(argExpr, env);\n+\n+        if (this.inferredIsolated) {\n+            BInvokableType invokableType = (BInvokableType) argExpr.type;\n+            BInvokableTypeSymbol tsymbol = (BInvokableTypeSymbol) invokableType.tsymbol;\n+\n+            BInvokableTypeSymbol dupInvokableTypeSymbol = new BInvokableTypeSymbol(tsymbol.tag,\n+                                                                                   tsymbol.flags | Flags.ISOLATED,\n+                                                                                   tsymbol.pkgID, null, tsymbol.owner,\n+                                                                                   tsymbol.pos, tsymbol.origin);\n+            BInvokableType dupInvokableType = new BInvokableType(invokableType.paramTypes, invokableType.restType,\n+                                                                 invokableType.retType, dupInvokableTypeSymbol);\n+            dupInvokableType.flags |= Flags.ISOLATED;\n+            dupInvokableTypeSymbol.type = dupInvokableType;\n+            argExpr.type = dupInvokableType;\n+\n+            if (namedArg) {\n+                arg.type = dupInvokableType;\n+            }\n+        }\n+        this.inferredIsolated = prevInferredIsolatedness && this.inferredIsolated;\n+    }\n+\n+    private void analyzeArgIsolatedness(List<BLangExpression> requiredArgs, List<BLangExpression> restArgs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a835a7a6720c035a343db5ad08846e916a19c3b"}, "originalPosition": 189}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMDk2Njc1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26113#pullrequestreview-513096675", "createdAt": "2020-10-20T20:15:31Z", "commit": {"oid": "3a835a7a6720c035a343db5ad08846e916a19c3b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4680, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}