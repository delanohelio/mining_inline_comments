{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2NTk0MDU3", "number": 27452, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjo1NDoxMlrOFE1EOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjo1NDoxMlrOFE1EOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjA4MDU3OnYy", "diffSide": "RIGHT", "path": "misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/util/TesterinaUtils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjo1NDoxMlrOIFCOsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzozOTo0NlrOIFDZRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE1MDMyMQ==", "bodyText": "Don't we need to handle the potential IndexOutOfBoundException(s) in here? (or are we validating the user inputs in an earlier phase?)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27452#discussion_r542150321", "createdAt": "2020-12-14T06:54:12Z", "author": {"login": "NipunaRanasinghe"}, "path": "misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/util/TesterinaUtils.java", "diffHunk": "@@ -198,12 +198,38 @@ private static Test getTest(String testName, List<Test> tests) {\n     /**\n      * Provides the updated test functions for single Execution after adding the dependent tests.\n      *\n-     * @param currentTests the tests available in current test suite\n-     * @param functions    the list of test functions provided by user\n+     * @param suite         current test suite\n+     * @param functions     the list of test functions provided by user\n      * @return updated list of test functions\n      */\n-    public static List<Test> getSingleExecutionTests(List<Test> currentTests, List<String> functions) {\n-        List<String> updatedFunctionList = getUpdatedFunctionList(currentTests, functions);\n+    public static List<Test> getSingleExecutionTests(TestSuite suite, List<String> functions) {\n+        List<String> filteredList = new ArrayList<>();\n+\n+        // Go through each function in the functionsList\n+        for (String function : functions) {\n+            if (function.contains(\":\")) {\n+                String[] functionDetail = function.split(\":\");\n+\n+                if (functionDetail[0].equals(suite.getPackageID())) {\n+                    if (functionDetail[1].equals(TesterinaConstants.WILDCARD)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8adab9cc37341818c88350cfba1ad8e6304cf7d4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2MjE5Mw==", "bodyText": "Yes. I had missed this. I have handled the exception and now it prints an error.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27452#discussion_r542162193", "createdAt": "2020-12-14T07:23:46Z", "author": {"login": "Ibaqu"}, "path": "misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/util/TesterinaUtils.java", "diffHunk": "@@ -198,12 +198,38 @@ private static Test getTest(String testName, List<Test> tests) {\n     /**\n      * Provides the updated test functions for single Execution after adding the dependent tests.\n      *\n-     * @param currentTests the tests available in current test suite\n-     * @param functions    the list of test functions provided by user\n+     * @param suite         current test suite\n+     * @param functions     the list of test functions provided by user\n      * @return updated list of test functions\n      */\n-    public static List<Test> getSingleExecutionTests(List<Test> currentTests, List<String> functions) {\n-        List<String> updatedFunctionList = getUpdatedFunctionList(currentTests, functions);\n+    public static List<Test> getSingleExecutionTests(TestSuite suite, List<String> functions) {\n+        List<String> filteredList = new ArrayList<>();\n+\n+        // Go through each function in the functionsList\n+        for (String function : functions) {\n+            if (function.contains(\":\")) {\n+                String[] functionDetail = function.split(\":\");\n+\n+                if (functionDetail[0].equals(suite.getPackageID())) {\n+                    if (functionDetail[1].equals(TesterinaConstants.WILDCARD)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE1MDMyMQ=="}, "originalCommit": {"oid": "8adab9cc37341818c88350cfba1ad8e6304cf7d4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2OTQxMw==", "bodyText": "Great!", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27452#discussion_r542169413", "createdAt": "2020-12-14T07:39:46Z", "author": {"login": "NipunaRanasinghe"}, "path": "misc/testerina/modules/testerina-runtime/src/main/java/org/ballerinalang/test/runtime/util/TesterinaUtils.java", "diffHunk": "@@ -198,12 +198,38 @@ private static Test getTest(String testName, List<Test> tests) {\n     /**\n      * Provides the updated test functions for single Execution after adding the dependent tests.\n      *\n-     * @param currentTests the tests available in current test suite\n-     * @param functions    the list of test functions provided by user\n+     * @param suite         current test suite\n+     * @param functions     the list of test functions provided by user\n      * @return updated list of test functions\n      */\n-    public static List<Test> getSingleExecutionTests(List<Test> currentTests, List<String> functions) {\n-        List<String> updatedFunctionList = getUpdatedFunctionList(currentTests, functions);\n+    public static List<Test> getSingleExecutionTests(TestSuite suite, List<String> functions) {\n+        List<String> filteredList = new ArrayList<>();\n+\n+        // Go through each function in the functionsList\n+        for (String function : functions) {\n+            if (function.contains(\":\")) {\n+                String[] functionDetail = function.split(\":\");\n+\n+                if (functionDetail[0].equals(suite.getPackageID())) {\n+                    if (functionDetail[1].equals(TesterinaConstants.WILDCARD)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE1MDMyMQ=="}, "originalCommit": {"oid": "8adab9cc37341818c88350cfba1ad8e6304cf7d4"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2921, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}