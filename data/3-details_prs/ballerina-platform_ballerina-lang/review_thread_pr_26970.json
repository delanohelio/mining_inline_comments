{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMTQ4ODA0", "number": 26970, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNTo1MDo0MlrOE7YglQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNjowOTowNVrOE7ZEZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNzAyOTk3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticErrorCode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNTo1MDo0MlrOH2_ylA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNTo1MDo0MlrOH2_ylA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQzMDI5Mg==", "bodyText": "Shall we keep a gap after the service related codes?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26970#discussion_r527430292", "createdAt": "2020-11-20T05:50:42Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticErrorCode.java", "diffHunk": "@@ -0,0 +1,660 @@\n+/*\n+ *  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.util.diagnostic;\n+\n+import io.ballerina.tools.diagnostics.DiagnosticCode;\n+import io.ballerina.tools.diagnostics.DiagnosticSeverity;\n+\n+/**\n+ * This class contains a list of diagnostic error codes.\n+ *\n+ * @since 0.94\n+ */\n+public enum DiagnosticErrorCode implements DiagnosticCode {\n+\n+    UNDEFINED_MODULE(\"BCE2000\", \"undefined.module\"),\n+    CYCLIC_MODULE_IMPORTS_DETECTED(\"BCE2001\", \"cyclic.module.imports.detected\"),\n+    UNUSED_IMPORT_MODULE(\"BCE2002\", \"unused.import.module\"),\n+    MODULE_NOT_FOUND(\"BCE2003\", \"module.not.found\"),\n+    REDECLARED_IMPORT_MODULE(\"BCE2004\", \"redeclared.import.module\"),\n+    INVALID_MODULE_DECLARATION(\"BCE2005\", \"invalid.module.declaration\"),\n+    MISSING_MODULE_DECLARATION(\"BCE2006\", \"missing.module.declaration\"),\n+    UNEXPECTED_MODULE_DECLARATION(\"BCE2007\", \"unexpected.module.declaration\"),\n+    REDECLARED_SYMBOL(\"BCE2008\", \"redeclared.symbol\"),\n+    REDECLARED_BUILTIN_SYMBOL(\"BCE2009\", \"redeclared.builtin.symbol\"),\n+    UNDEFINED_SYMBOL(\"BCE2010\", \"undefined.symbol\"),\n+    UNDEFINED_FUNCTION(\"BCE2011\", \"undefined.function\"),\n+    UNDEFINED_FUNCTION_IN_TYPE(\"BCE2012\", \"undefined.function.in.type\"),\n+    UNDEFINED_METHOD_IN_OBJECT(\"BCE2013\", \"undefined.method.in.object\"),\n+    UNDEFINED_FIELD_IN_RECORD(\"BCE2014\", \"undefined.field.in.record\"),\n+    UNDEFINED_CONNECTOR(\"BCE2015\", \"undefined.connector\"),\n+    INVALID_ERROR_REASON_TYPE(\"BCE2016\", \"invalid.error.reason.type\"),\n+    UNSUPPORTED_ERROR_REASON_CONST_MATCH(\n+            \"BCE2017\", \"error.match.over.const.reason.ref.not.supported\"),\n+    INVALID_ERROR_DETAIL_TYPE(\"BCE2018\", \"invalid.error.detail.type\"),\n+    ERROR_DETAIL_ARG_IS_NOT_NAMED_ARG(\"BCE2019\", \"error.detail.arg.not.named.arg\"),\n+    DIRECT_ERROR_CTOR_REASON_NOT_PROVIDED(\"BCE2020\", \"missing.error.reason\"),\n+    OBJECT_TYPE_NOT_ALLOWED(\"BCE2021\", \"object.type.not.allowed\"),\n+    OBJECT_TYPE_REQUIRED(\"BCE2022\", \"object.type.required\"),\n+    UNDEFINED_STRUCTURE_FIELD_WITH_TYPE(\"BCE2023\", \"undefined.field.in.structure.with.type\"),\n+    UNDEFINED_STRUCTURE_FIELD(\"BCE2024\", \"undefined.field.in.structure\"),\n+    TYPE_NOT_ALLOWED_WITH_NEW(\"BCE2025\", \"type.not.allowed.with.new\"),\n+    INVALID_INTERSECTION_TYPE(\"BCE2026\", \"invalid.intersection.type\"),\n+    INVALID_NON_READONLY_INTERSECTION_TYPE(\"BCE2027\", \"invalid.non.readonly.intersection.type\"),\n+    INVALID_READONLY_INTERSECTION_TYPE(\"BCE2028\", \"invalid.readonly.intersection.type\"),\n+    INVALID_READONLY_OBJECT_INTERSECTION_TYPE(\"BCE2029\", \"invalid.readonly.object.intersection.type\"),\n+    INVALID_READONLY_OBJECT_TYPE(\"BCE2030\", \"invalid.readonly.object.type\"),\n+    INVALID_READONLY_MAPPING_FIELD(\"BCE2031\", \"invalid.readonly.mapping.field\"),\n+    STREAM_INVALID_CONSTRAINT(\"BCE2032\", \"stream.invalid.constraint\"),\n+    STREAM_INIT_NOT_ALLOWED_HERE(\"BCE2033\", \"stream.initialization.not.allowed.here\"),\n+    CANNOT_INFER_OBJECT_TYPE_FROM_LHS(\"BCE2034\", \"cannot.infer.object.type.from.lhs\"),\n+    OBJECT_UNINITIALIZED_FIELD(\"BCE2035\", \"object.uninitialized.field\"),\n+    CYCLIC_TYPE_REFERENCE(\"BCE2036\", \"cyclic.type.reference\"),\n+    ATTEMPT_REFER_NON_ACCESSIBLE_SYMBOL(\"BCE2037\", \"attempt.refer.non.accessible.symbol\"),\n+    ATTEMPT_EXPOSE_NON_PUBLIC_SYMBOL(\"BCE2038\", \"attempt.expose.non.public.symbol\"),\n+    UNDEFINED_PARAMETER(\"BCE2039\", \"undefined.parameter\"),\n+    ATTACHED_FUNCTIONS_MUST_HAVE_BODY(\"BCE2040\", \"attached.functions.must.have.body\"),\n+    ABSTRACT_OBJECT_CONSTRUCTOR(\"BCE2041\", \"abstract.object.constructor\"),\n+    CANNOT_INITIALIZE_ABSTRACT_OBJECT(\"BCE2042\", \"cannot.initialize.abstract.object\"),\n+    INVALID_INTERFACE_ON_NON_ABSTRACT_OBJECT(\"BCE2043\", \"invalid.interface.of.non.abstract.object\"),\n+    UNIMPLEMENTED_REFERENCED_METHOD_IN_CLASS(\"BCE2044\", \"unimplemented.referenced.method.in.class\"),\n+    PRIVATE_FUNCTION_VISIBILITY(\"BCE2045\", \"private.function.visibility\"),\n+    CANNOT_ATTACH_FUNCTIONS_TO_ABSTRACT_OBJECT(\"BCE2046\", \"cannot.attach.functions.to.abstract.object\"),\n+    ABSTRACT_OBJECT_FUNCTION_CANNOT_HAVE_BODY(\"BCE2047\", \"abstract.object.function.cannot.have.body\"),\n+    PRIVATE_OBJECT_CONSTRUCTOR(\"BCE2048\", \"private.object.constructor\"),\n+    PRIVATE_FIELD_ABSTRACT_OBJECT(\"BCE2049\", \"private.field.abstract.object\"),\n+    FIELD_WITH_DEFAULT_VALUE_ABSTRACT_OBJECT(\"BCE2050\", \"field.with.default.value.abstract.object\"),\n+    PRIVATE_FUNC_ABSTRACT_OBJECT(\"BCE2051\", \"private.function.abstract.object\"),\n+    EXTERN_FUNC_ABSTRACT_OBJECT(\"BCE2052\", \"extern.function.abstract.object\"),\n+    RESOURCE_FUNCTION_CANNOT_BE_EXTERN(\"BCE2053\", \"resource.function.cannot.be.extern\"),\n+    OBJECT_INIT_FUNCTION_CANNOT_BE_EXTERN(\"BCE2054\", \"object.init.function.cannot.be.extern\"),\n+    GLOBAL_VARIABLE_CYCLIC_DEFINITION(\"BCE2055\", \"global.variable.cyclic.reference\"),\n+    CANNOT_FIND_ERROR_TYPE(\"BCE2056\", \"cannot.find.error.constructor.for.type\"),\n+    INVALID_PACKAGE_NAME_QUALIFER(\"BCE2057\", \"invalid.package.name.qualifier\"),\n+    INVALID_FIELD_ACCESS_EXPRESSION(\"BCE2058\", \"invalid.char.colon.in.field.access.expr\"),\n+    VARIABLE_DECL_WITH_VAR_WITHOUT_INITIALIZER(\"BCE2059\", \"variable.decl.with.var.without.initializer\"),\n+\n+    REQUIRED_PARAM_DEFINED_AFTER_DEFAULTABLE_PARAM(\"BCE2060\", \"required.param.not.allowed.after.defaultable.param\"),\n+    POSITIONAL_ARG_DEFINED_AFTER_NAMED_ARG(\"BCE2061\", \"positional.arg.defined.after.named.arg\"),\n+    REST_ARG_DEFINED_AFTER_NAMED_ARG(\"BCE2062\", \"rest.arg.defined.after.named.arg\"),\n+    MISSING_REQUIRED_PARAMETER(\"BCE2063\", \"missing.required.parameter\"),\n+    MISSING_REQUIRED_ARG_ERROR_MESSAGE(\"BCE2064\", \"missing.required.parameter.error.message\"),\n+    OBJECT_CTOR_INIT_CANNOT_HAVE_PARAMETERS(\"BCE2065\", \"object.constructor.init.function.cannot.have.parameters\"),\n+    OBJECT_CTOR_DOES_NOT_SUPPORT_TYPE_REFERENCE_MEMBERS(\n+            \"BCE2066\", \"object.constructor.does.not.support.type.reference.members\"),\n+\n+    INCOMPATIBLE_TYPES(\"BCE2067\", \"incompatible.types\"),\n+    INCOMPATIBLE_TYPES_SPREAD_OP(\"BCE2068\", \"incompatible.types.spread.op\"),\n+    INCOMPATIBLE_TYPES_FIELD(\"BCE2069\", \"incompatible.types.field\"),\n+    UNKNOWN_TYPE(\"BCE2070\", \"unknown.type\"),\n+    BINARY_OP_INCOMPATIBLE_TYPES(\"BCE2071\", \"binary.op.incompatible.types\"),\n+    UNARY_OP_INCOMPATIBLE_TYPES(\"BCE2072\", \"unary.op.incompatible.types\"),\n+    SELF_REFERENCE_VAR(\"BCE2073\", \"self.reference.var\"),\n+    INVALID_WORKER_SEND_POSITION(\"BCE2074\", \"invalid.worker.send.position\"),\n+    INVALID_WORKER_RECEIVE_POSITION(\"BCE2075\", \"invalid.worker.receive.position\"),\n+    UNDEFINED_WORKER(\"BCE2076\", \"undefined.worker\"),\n+    INVALID_WORKER_JOIN_RESULT_TYPE(\"BCE2077\", \"invalid.worker.join.result.type\"),\n+    INVALID_WORKER_TIMEOUT_RESULT_TYPE(\"BCE2078\", \"invalid.worker.timeout.result.type\"),\n+    INVALID_WORKER_REFERRENCE(\"BCE2079\", \"invalid.worker.reference\"),\n+    INCOMPATIBLE_TYPE_CONSTRAINT(\"BCE2080\", \"incompatible.type.constraint\"),\n+    USAGE_OF_WORKER_WITHIN_LOCK_IS_PROHIBITED(\"BCE2081\", \"usage.of.worker.within.lock.is.prohibited\"),\n+    USAGE_OF_START_WITHIN_LOCK_IS_PROHIBITED(\"BCE2082\", \"usage.of.start.within.lock.is.prohibited\"),\n+    WORKER_SEND_RECEIVE_PARAMETER_COUNT_MISMATCH(\"BCE2083\", \"worker.send.receive.parameter.count.mismatch\"),\n+    INVALID_WORKER_INTERACTION(\"BCE2084\", \"worker.invalid.worker.interaction\"),\n+    WORKER_INTERACTIONS_ONLY_ALLOWED_BETWEEN_PEERS(\"BCE2085\", \"worker.interactions.only.allowed.between.peers\"),\n+    WORKER_SEND_AFTER_RETURN(\"BCE2086\", \"worker.send.after.return\"),\n+    WORKER_RECEIVE_AFTER_RETURN(\"BCE2087\", \"worker.receive.after.return\"),\n+    EXPLICIT_WORKER_CANNOT_BE_DEFAULT(\"BCE2088\", \"explicit.worker.cannot.be.default\"),\n+    INVALID_MULTIPLE_FORK_JOIN_SEND(\"BCE2089\", \"worker.multiple.fork.join.send\"),\n+    INCOMPATIBLE_TYPE_REFERENCE(\"BCE2090\", \"incompatible.type.reference\"),\n+    INCOMPATIBLE_TYPE_REFERENCE_NON_PUBLIC_MEMBERS(\"BCE2091\", \"incompatible.type.reference.non.public.members\"),\n+    INCOMPATIBLE_RECORD_TYPE_REFERENCE(\"BCE2092\", \"incompatible.record.type.reference\"),\n+    REDECLARED_TYPE_REFERENCE(\"BCE2093\", \"redeclared.type.reference\"),\n+    REDECLARED_FUNCTION_FROM_TYPE_REFERENCE(\"BCE2094\", \"redeclared.function.from.type.reference\"),\n+    REFERRED_FUNCTION_SIGNATURE_MISMATCH(\"BCE2095\", \"referred.function.signature.mismatch\"),\n+\n+    INVOKABLE_MUST_RETURN(\"BCE2096\", \"invokable.must.return\"),\n+    MAIN_SHOULD_BE_PUBLIC(\"BCE2097\", \"main.should.be.public\"),\n+    MAIN_PARAMS_SHOULD_BE_ANYDATA(\"BCE2098\", \"main.params.should.be.anydata\"),\n+    MAIN_RETURN_SHOULD_BE_ERROR_OR_NIL(\"BCE2099\", \"main.return.should.be.error.or.nil\"),\n+    MODULE_INIT_CANNOT_BE_PUBLIC(\"BCE2100\", \"module.init.cannot.be.public\"),\n+    MODULE_INIT_CANNOT_HAVE_PARAMS(\"BCE2101\", \"module.init.cannot.have.params\"),\n+    MODULE_INIT_RETURN_SHOULD_BE_ERROR_OR_NIL(\"BCE2102\", \"module.init.return.should.be.error.or.nil\"),\n+    ATLEAST_ONE_WORKER_MUST_RETURN(\"BCE2103\", \"atleast.one.worker.must.return\"),\n+    FORK_JOIN_WORKER_CANNOT_RETURN(\"BCE2104\", \"fork.join.worker.cannot.return\"),\n+    FORK_JOIN_INVALID_WORKER_COUNT(\"BCE2105\", \"fork.join.invalid.worker.count\"),\n+    INVALID_FOR_JOIN_SYNTAX_EMPTY_FORK(\"BCE2106\", \"fork.join.syntax.empty.fork\"),\n+    UNREACHABLE_CODE(\"BCE2107\", \"unreachable.code\"),\n+    CONTINUE_CANNOT_BE_OUTSIDE_LOOP(\"BCE2108\", \"continue.cannot.be.outside.loop\"),\n+    BREAK_CANNOT_BE_OUTSIDE_LOOP(\"BCE2109\", \"break.cannot.be.outside.loop\"),\n+\n+    INTEGER_TOO_LARGE(\"BCE2110\", \"integer.too.large\"),\n+    INTEGER_TOO_SMALL(\"BCE2111\", \"integer.too.small\"),\n+    HEXADECIMAL_TOO_LARGE(\"BCE2112\", \"hexadecimal.too.large\"),\n+    HEXADECIMAL_TOO_SMALL(\"BCE2113\", \"hexadecimal.too.small\"),\n+\n+    //Transaction related error codes\n+    ROLLBACK_CANNOT_BE_OUTSIDE_TRANSACTION_BLOCK(\"BCE2300\", \"rollback.cannot.be.outside.transaction.block\"),\n+    COMMIT_CANNOT_BE_OUTSIDE_TRANSACTION_BLOCK(\"BCE2301\", \"commit.cannot.be.outside.transaction.block\"),\n+    RETRY_CANNOT_BE_OUTSIDE_TRANSACTION_BLOCK(\"BCE2302\", \"retry.cannot.be.outside.transaction.block\"),\n+    BREAK_CANNOT_BE_USED_TO_EXIT_TRANSACTION(\"BCE2303\", \"break.statement.cannot.be.used.to.exit.from.a.transaction\"),\n+    CONTINUE_CANNOT_BE_USED_TO_EXIT_TRANSACTION(\n+            \"BCE2304\", \"continue.statement.cannot.be.used.to.exit.from.a.transaction\"),\n+    CHECK_EXPRESSION_INVALID_USAGE_WITHIN_TRANSACTION_BLOCK(\n+            \"BCE2305\", \"check.expression.invalid.usage.within.transaction.block\"),\n+    RETURN_CANNOT_BE_USED_TO_EXIT_TRANSACTION(\"BCE2306\", \"return.statement.cannot.be.used.to.exit.from.a.transaction\"),\n+    DONE_CANNOT_BE_USED_TO_EXIT_TRANSACTION(\"BCE2307\", \"done.statement.cannot.be.used.to.exit.from.a.transaction\"),\n+    INVALID_RETRY_COUNT(\"BCE2308\", \"invalid.retry.count\"),\n+    INVALID_COMMIT_COUNT(\"BCE2309\", \"invalid.commit.count\"),\n+    INVALID_ROLLBACK_COUNT(\"BCE2310\", \"invalid.rollback.count\"),\n+    INVALID_TRANSACTION_HANDLER_ARGS(\"BCE2311\", \"invalid.transaction.handler.args\"),\n+    INVALID_TRANSACTION_HANDLER_SIGNATURE(\"BCE2312\", \"invalid.transaction.handler.signature\"),\n+    LAMBDA_REQUIRED_FOR_TRANSACTION_HANDLER(\"BCE2313\", \"lambda.required.for.transaction.handler\"),\n+    TRANSACTION_CANNOT_BE_USED_WITHIN_HANDLER(\"BCE2314\", \"transaction.cannot.be.used.within.handler\"),\n+    TRANSACTION_CANNOT_BE_USED_WITHIN_TRANSACTIONAL_SCOPE(\n+            \"BCE2315\", \"transaction.cannot.be.used.within.transactional.scope\"),\n+    TRANSACTIONAL_FUNC_INVOKE_PROHIBITED(\"BCE2316\", \"transactional.function.prohibited.outside.transactional.scope\"),\n+    TRANSACTIONAL_WORKER_OUT_OF_TRANSACTIONAL_SCOPE(\n+            \"BCE2317\", \"transactional.worker.prohibited.outside.transactional.scope\"),\n+\n+    NESTED_TRANSACTIONS_ARE_INVALID(\"BCE2318\", \"nested.transactions.are.invalid\"),\n+    INVALID_FUNCTION_POINTER_ASSIGNMENT_FOR_HANDLER(\"BCE2319\", \"invalid.function.pointer.assignment.for.handler\"),\n+    USAGE_OF_START_WITHIN_TRANSACTION_IS_PROHIBITED(\"BCE2320\", \"usage.of.start.within.transaction.is.prohibited\"),\n+    ROLLBACK_CANNOT_BE_WITHIN_TRANSACTIONAL_FUNCTION(\"BCE2321\", \"rollback.cannot.be.within.transactional.function\"),\n+    COMMIT_CANNOT_BE_WITHIN_TRANSACTIONAL_FUNCTION(\"BCE2322\", \"commit.cannot.be.within.transactional.function\"),\n+    MAX_ONE_COMMIT_ROLLBACK_ALLOWED_WITHIN_A_BRANCH(\"BCE2323\", \"max.one.commit.rollback.allowed.within.branch\"),\n+    COMMIT_NOT_ALLOWED(\"BCE2324\", \"commit.not.allowed\"),\n+    ROLLBACK_NOT_ALLOWED(\"BCE2325\", \"rollback.not.allowed\"),\n+\n+    // Service, endpoint related errors codes\n+    SERVICE_INVALID_OBJECT_TYPE(\"BCE2400\", \"service.invalid.object.type\"),\n+    SERVICE_INVALID_ENDPOINT_TYPE(\"BCE2401\", \"service.invalid.endpoint.type\"),\n+    SERVICE_FUNCTION_INVALID_MODIFIER(\"BCE2402\", \"service.function.invalid.modifier\"),\n+    SERVICE_FUNCTION_INVALID_INVOCATION(\"BCE2403\", \"service.function.invalid.invocation\"),\n+    SERVICE_SERVICE_TYPE_REQUIRED_ANONYMOUS(\"BCE2404\", \"service.service.type.required.anonymous\"),\n+    ENDPOINT_OBJECT_TYPE_REQUIRED(\"BCE2405\", \"endpoint.object.type.required\"),\n+    ENDPOINT_OBJECT_NEW_HAS_PARAM(\"BCE2406\", \"endpoint.object.new.has.param\"),\n+    ENDPOINT_INVALID_TYPE(\"BCE2407\", \"endpoint.invalid.type\"),\n+    ENDPOINT_INVALID_TYPE_NO_FUNCTION(\"BCE2408\", \"endpoint.invalid.type.no.function\"),\n+    ENDPOINT_SPI_INVALID_FUNCTION(\"BCE2409\", \"endpoint.spi.invalid.function\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a87e1e99b3170534eb0d99ad1a869c95fe616b73"}, "originalPosition": 194}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNzA0MzQ4OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticErrorCode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNTo1MzozMlrOH2_8SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNTo1MzozMlrOH2_8SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQzMjc3Nw==", "bodyText": "Similarly, good to have a gap after match-stmt related codes", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26970#discussion_r527432777", "createdAt": "2020-11-20T05:53:32Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticErrorCode.java", "diffHunk": "@@ -0,0 +1,660 @@\n+/*\n+ *  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.util.diagnostic;\n+\n+import io.ballerina.tools.diagnostics.DiagnosticCode;\n+import io.ballerina.tools.diagnostics.DiagnosticSeverity;\n+\n+/**\n+ * This class contains a list of diagnostic error codes.\n+ *\n+ * @since 0.94\n+ */\n+public enum DiagnosticErrorCode implements DiagnosticCode {\n+\n+    UNDEFINED_MODULE(\"BCE2000\", \"undefined.module\"),\n+    CYCLIC_MODULE_IMPORTS_DETECTED(\"BCE2001\", \"cyclic.module.imports.detected\"),\n+    UNUSED_IMPORT_MODULE(\"BCE2002\", \"unused.import.module\"),\n+    MODULE_NOT_FOUND(\"BCE2003\", \"module.not.found\"),\n+    REDECLARED_IMPORT_MODULE(\"BCE2004\", \"redeclared.import.module\"),\n+    INVALID_MODULE_DECLARATION(\"BCE2005\", \"invalid.module.declaration\"),\n+    MISSING_MODULE_DECLARATION(\"BCE2006\", \"missing.module.declaration\"),\n+    UNEXPECTED_MODULE_DECLARATION(\"BCE2007\", \"unexpected.module.declaration\"),\n+    REDECLARED_SYMBOL(\"BCE2008\", \"redeclared.symbol\"),\n+    REDECLARED_BUILTIN_SYMBOL(\"BCE2009\", \"redeclared.builtin.symbol\"),\n+    UNDEFINED_SYMBOL(\"BCE2010\", \"undefined.symbol\"),\n+    UNDEFINED_FUNCTION(\"BCE2011\", \"undefined.function\"),\n+    UNDEFINED_FUNCTION_IN_TYPE(\"BCE2012\", \"undefined.function.in.type\"),\n+    UNDEFINED_METHOD_IN_OBJECT(\"BCE2013\", \"undefined.method.in.object\"),\n+    UNDEFINED_FIELD_IN_RECORD(\"BCE2014\", \"undefined.field.in.record\"),\n+    UNDEFINED_CONNECTOR(\"BCE2015\", \"undefined.connector\"),\n+    INVALID_ERROR_REASON_TYPE(\"BCE2016\", \"invalid.error.reason.type\"),\n+    UNSUPPORTED_ERROR_REASON_CONST_MATCH(\n+            \"BCE2017\", \"error.match.over.const.reason.ref.not.supported\"),\n+    INVALID_ERROR_DETAIL_TYPE(\"BCE2018\", \"invalid.error.detail.type\"),\n+    ERROR_DETAIL_ARG_IS_NOT_NAMED_ARG(\"BCE2019\", \"error.detail.arg.not.named.arg\"),\n+    DIRECT_ERROR_CTOR_REASON_NOT_PROVIDED(\"BCE2020\", \"missing.error.reason\"),\n+    OBJECT_TYPE_NOT_ALLOWED(\"BCE2021\", \"object.type.not.allowed\"),\n+    OBJECT_TYPE_REQUIRED(\"BCE2022\", \"object.type.required\"),\n+    UNDEFINED_STRUCTURE_FIELD_WITH_TYPE(\"BCE2023\", \"undefined.field.in.structure.with.type\"),\n+    UNDEFINED_STRUCTURE_FIELD(\"BCE2024\", \"undefined.field.in.structure\"),\n+    TYPE_NOT_ALLOWED_WITH_NEW(\"BCE2025\", \"type.not.allowed.with.new\"),\n+    INVALID_INTERSECTION_TYPE(\"BCE2026\", \"invalid.intersection.type\"),\n+    INVALID_NON_READONLY_INTERSECTION_TYPE(\"BCE2027\", \"invalid.non.readonly.intersection.type\"),\n+    INVALID_READONLY_INTERSECTION_TYPE(\"BCE2028\", \"invalid.readonly.intersection.type\"),\n+    INVALID_READONLY_OBJECT_INTERSECTION_TYPE(\"BCE2029\", \"invalid.readonly.object.intersection.type\"),\n+    INVALID_READONLY_OBJECT_TYPE(\"BCE2030\", \"invalid.readonly.object.type\"),\n+    INVALID_READONLY_MAPPING_FIELD(\"BCE2031\", \"invalid.readonly.mapping.field\"),\n+    STREAM_INVALID_CONSTRAINT(\"BCE2032\", \"stream.invalid.constraint\"),\n+    STREAM_INIT_NOT_ALLOWED_HERE(\"BCE2033\", \"stream.initialization.not.allowed.here\"),\n+    CANNOT_INFER_OBJECT_TYPE_FROM_LHS(\"BCE2034\", \"cannot.infer.object.type.from.lhs\"),\n+    OBJECT_UNINITIALIZED_FIELD(\"BCE2035\", \"object.uninitialized.field\"),\n+    CYCLIC_TYPE_REFERENCE(\"BCE2036\", \"cyclic.type.reference\"),\n+    ATTEMPT_REFER_NON_ACCESSIBLE_SYMBOL(\"BCE2037\", \"attempt.refer.non.accessible.symbol\"),\n+    ATTEMPT_EXPOSE_NON_PUBLIC_SYMBOL(\"BCE2038\", \"attempt.expose.non.public.symbol\"),\n+    UNDEFINED_PARAMETER(\"BCE2039\", \"undefined.parameter\"),\n+    ATTACHED_FUNCTIONS_MUST_HAVE_BODY(\"BCE2040\", \"attached.functions.must.have.body\"),\n+    ABSTRACT_OBJECT_CONSTRUCTOR(\"BCE2041\", \"abstract.object.constructor\"),\n+    CANNOT_INITIALIZE_ABSTRACT_OBJECT(\"BCE2042\", \"cannot.initialize.abstract.object\"),\n+    INVALID_INTERFACE_ON_NON_ABSTRACT_OBJECT(\"BCE2043\", \"invalid.interface.of.non.abstract.object\"),\n+    UNIMPLEMENTED_REFERENCED_METHOD_IN_CLASS(\"BCE2044\", \"unimplemented.referenced.method.in.class\"),\n+    PRIVATE_FUNCTION_VISIBILITY(\"BCE2045\", \"private.function.visibility\"),\n+    CANNOT_ATTACH_FUNCTIONS_TO_ABSTRACT_OBJECT(\"BCE2046\", \"cannot.attach.functions.to.abstract.object\"),\n+    ABSTRACT_OBJECT_FUNCTION_CANNOT_HAVE_BODY(\"BCE2047\", \"abstract.object.function.cannot.have.body\"),\n+    PRIVATE_OBJECT_CONSTRUCTOR(\"BCE2048\", \"private.object.constructor\"),\n+    PRIVATE_FIELD_ABSTRACT_OBJECT(\"BCE2049\", \"private.field.abstract.object\"),\n+    FIELD_WITH_DEFAULT_VALUE_ABSTRACT_OBJECT(\"BCE2050\", \"field.with.default.value.abstract.object\"),\n+    PRIVATE_FUNC_ABSTRACT_OBJECT(\"BCE2051\", \"private.function.abstract.object\"),\n+    EXTERN_FUNC_ABSTRACT_OBJECT(\"BCE2052\", \"extern.function.abstract.object\"),\n+    RESOURCE_FUNCTION_CANNOT_BE_EXTERN(\"BCE2053\", \"resource.function.cannot.be.extern\"),\n+    OBJECT_INIT_FUNCTION_CANNOT_BE_EXTERN(\"BCE2054\", \"object.init.function.cannot.be.extern\"),\n+    GLOBAL_VARIABLE_CYCLIC_DEFINITION(\"BCE2055\", \"global.variable.cyclic.reference\"),\n+    CANNOT_FIND_ERROR_TYPE(\"BCE2056\", \"cannot.find.error.constructor.for.type\"),\n+    INVALID_PACKAGE_NAME_QUALIFER(\"BCE2057\", \"invalid.package.name.qualifier\"),\n+    INVALID_FIELD_ACCESS_EXPRESSION(\"BCE2058\", \"invalid.char.colon.in.field.access.expr\"),\n+    VARIABLE_DECL_WITH_VAR_WITHOUT_INITIALIZER(\"BCE2059\", \"variable.decl.with.var.without.initializer\"),\n+\n+    REQUIRED_PARAM_DEFINED_AFTER_DEFAULTABLE_PARAM(\"BCE2060\", \"required.param.not.allowed.after.defaultable.param\"),\n+    POSITIONAL_ARG_DEFINED_AFTER_NAMED_ARG(\"BCE2061\", \"positional.arg.defined.after.named.arg\"),\n+    REST_ARG_DEFINED_AFTER_NAMED_ARG(\"BCE2062\", \"rest.arg.defined.after.named.arg\"),\n+    MISSING_REQUIRED_PARAMETER(\"BCE2063\", \"missing.required.parameter\"),\n+    MISSING_REQUIRED_ARG_ERROR_MESSAGE(\"BCE2064\", \"missing.required.parameter.error.message\"),\n+    OBJECT_CTOR_INIT_CANNOT_HAVE_PARAMETERS(\"BCE2065\", \"object.constructor.init.function.cannot.have.parameters\"),\n+    OBJECT_CTOR_DOES_NOT_SUPPORT_TYPE_REFERENCE_MEMBERS(\n+            \"BCE2066\", \"object.constructor.does.not.support.type.reference.members\"),\n+\n+    INCOMPATIBLE_TYPES(\"BCE2067\", \"incompatible.types\"),\n+    INCOMPATIBLE_TYPES_SPREAD_OP(\"BCE2068\", \"incompatible.types.spread.op\"),\n+    INCOMPATIBLE_TYPES_FIELD(\"BCE2069\", \"incompatible.types.field\"),\n+    UNKNOWN_TYPE(\"BCE2070\", \"unknown.type\"),\n+    BINARY_OP_INCOMPATIBLE_TYPES(\"BCE2071\", \"binary.op.incompatible.types\"),\n+    UNARY_OP_INCOMPATIBLE_TYPES(\"BCE2072\", \"unary.op.incompatible.types\"),\n+    SELF_REFERENCE_VAR(\"BCE2073\", \"self.reference.var\"),\n+    INVALID_WORKER_SEND_POSITION(\"BCE2074\", \"invalid.worker.send.position\"),\n+    INVALID_WORKER_RECEIVE_POSITION(\"BCE2075\", \"invalid.worker.receive.position\"),\n+    UNDEFINED_WORKER(\"BCE2076\", \"undefined.worker\"),\n+    INVALID_WORKER_JOIN_RESULT_TYPE(\"BCE2077\", \"invalid.worker.join.result.type\"),\n+    INVALID_WORKER_TIMEOUT_RESULT_TYPE(\"BCE2078\", \"invalid.worker.timeout.result.type\"),\n+    INVALID_WORKER_REFERRENCE(\"BCE2079\", \"invalid.worker.reference\"),\n+    INCOMPATIBLE_TYPE_CONSTRAINT(\"BCE2080\", \"incompatible.type.constraint\"),\n+    USAGE_OF_WORKER_WITHIN_LOCK_IS_PROHIBITED(\"BCE2081\", \"usage.of.worker.within.lock.is.prohibited\"),\n+    USAGE_OF_START_WITHIN_LOCK_IS_PROHIBITED(\"BCE2082\", \"usage.of.start.within.lock.is.prohibited\"),\n+    WORKER_SEND_RECEIVE_PARAMETER_COUNT_MISMATCH(\"BCE2083\", \"worker.send.receive.parameter.count.mismatch\"),\n+    INVALID_WORKER_INTERACTION(\"BCE2084\", \"worker.invalid.worker.interaction\"),\n+    WORKER_INTERACTIONS_ONLY_ALLOWED_BETWEEN_PEERS(\"BCE2085\", \"worker.interactions.only.allowed.between.peers\"),\n+    WORKER_SEND_AFTER_RETURN(\"BCE2086\", \"worker.send.after.return\"),\n+    WORKER_RECEIVE_AFTER_RETURN(\"BCE2087\", \"worker.receive.after.return\"),\n+    EXPLICIT_WORKER_CANNOT_BE_DEFAULT(\"BCE2088\", \"explicit.worker.cannot.be.default\"),\n+    INVALID_MULTIPLE_FORK_JOIN_SEND(\"BCE2089\", \"worker.multiple.fork.join.send\"),\n+    INCOMPATIBLE_TYPE_REFERENCE(\"BCE2090\", \"incompatible.type.reference\"),\n+    INCOMPATIBLE_TYPE_REFERENCE_NON_PUBLIC_MEMBERS(\"BCE2091\", \"incompatible.type.reference.non.public.members\"),\n+    INCOMPATIBLE_RECORD_TYPE_REFERENCE(\"BCE2092\", \"incompatible.record.type.reference\"),\n+    REDECLARED_TYPE_REFERENCE(\"BCE2093\", \"redeclared.type.reference\"),\n+    REDECLARED_FUNCTION_FROM_TYPE_REFERENCE(\"BCE2094\", \"redeclared.function.from.type.reference\"),\n+    REFERRED_FUNCTION_SIGNATURE_MISMATCH(\"BCE2095\", \"referred.function.signature.mismatch\"),\n+\n+    INVOKABLE_MUST_RETURN(\"BCE2096\", \"invokable.must.return\"),\n+    MAIN_SHOULD_BE_PUBLIC(\"BCE2097\", \"main.should.be.public\"),\n+    MAIN_PARAMS_SHOULD_BE_ANYDATA(\"BCE2098\", \"main.params.should.be.anydata\"),\n+    MAIN_RETURN_SHOULD_BE_ERROR_OR_NIL(\"BCE2099\", \"main.return.should.be.error.or.nil\"),\n+    MODULE_INIT_CANNOT_BE_PUBLIC(\"BCE2100\", \"module.init.cannot.be.public\"),\n+    MODULE_INIT_CANNOT_HAVE_PARAMS(\"BCE2101\", \"module.init.cannot.have.params\"),\n+    MODULE_INIT_RETURN_SHOULD_BE_ERROR_OR_NIL(\"BCE2102\", \"module.init.return.should.be.error.or.nil\"),\n+    ATLEAST_ONE_WORKER_MUST_RETURN(\"BCE2103\", \"atleast.one.worker.must.return\"),\n+    FORK_JOIN_WORKER_CANNOT_RETURN(\"BCE2104\", \"fork.join.worker.cannot.return\"),\n+    FORK_JOIN_INVALID_WORKER_COUNT(\"BCE2105\", \"fork.join.invalid.worker.count\"),\n+    INVALID_FOR_JOIN_SYNTAX_EMPTY_FORK(\"BCE2106\", \"fork.join.syntax.empty.fork\"),\n+    UNREACHABLE_CODE(\"BCE2107\", \"unreachable.code\"),\n+    CONTINUE_CANNOT_BE_OUTSIDE_LOOP(\"BCE2108\", \"continue.cannot.be.outside.loop\"),\n+    BREAK_CANNOT_BE_OUTSIDE_LOOP(\"BCE2109\", \"break.cannot.be.outside.loop\"),\n+\n+    INTEGER_TOO_LARGE(\"BCE2110\", \"integer.too.large\"),\n+    INTEGER_TOO_SMALL(\"BCE2111\", \"integer.too.small\"),\n+    HEXADECIMAL_TOO_LARGE(\"BCE2112\", \"hexadecimal.too.large\"),\n+    HEXADECIMAL_TOO_SMALL(\"BCE2113\", \"hexadecimal.too.small\"),\n+\n+    //Transaction related error codes\n+    ROLLBACK_CANNOT_BE_OUTSIDE_TRANSACTION_BLOCK(\"BCE2300\", \"rollback.cannot.be.outside.transaction.block\"),\n+    COMMIT_CANNOT_BE_OUTSIDE_TRANSACTION_BLOCK(\"BCE2301\", \"commit.cannot.be.outside.transaction.block\"),\n+    RETRY_CANNOT_BE_OUTSIDE_TRANSACTION_BLOCK(\"BCE2302\", \"retry.cannot.be.outside.transaction.block\"),\n+    BREAK_CANNOT_BE_USED_TO_EXIT_TRANSACTION(\"BCE2303\", \"break.statement.cannot.be.used.to.exit.from.a.transaction\"),\n+    CONTINUE_CANNOT_BE_USED_TO_EXIT_TRANSACTION(\n+            \"BCE2304\", \"continue.statement.cannot.be.used.to.exit.from.a.transaction\"),\n+    CHECK_EXPRESSION_INVALID_USAGE_WITHIN_TRANSACTION_BLOCK(\n+            \"BCE2305\", \"check.expression.invalid.usage.within.transaction.block\"),\n+    RETURN_CANNOT_BE_USED_TO_EXIT_TRANSACTION(\"BCE2306\", \"return.statement.cannot.be.used.to.exit.from.a.transaction\"),\n+    DONE_CANNOT_BE_USED_TO_EXIT_TRANSACTION(\"BCE2307\", \"done.statement.cannot.be.used.to.exit.from.a.transaction\"),\n+    INVALID_RETRY_COUNT(\"BCE2308\", \"invalid.retry.count\"),\n+    INVALID_COMMIT_COUNT(\"BCE2309\", \"invalid.commit.count\"),\n+    INVALID_ROLLBACK_COUNT(\"BCE2310\", \"invalid.rollback.count\"),\n+    INVALID_TRANSACTION_HANDLER_ARGS(\"BCE2311\", \"invalid.transaction.handler.args\"),\n+    INVALID_TRANSACTION_HANDLER_SIGNATURE(\"BCE2312\", \"invalid.transaction.handler.signature\"),\n+    LAMBDA_REQUIRED_FOR_TRANSACTION_HANDLER(\"BCE2313\", \"lambda.required.for.transaction.handler\"),\n+    TRANSACTION_CANNOT_BE_USED_WITHIN_HANDLER(\"BCE2314\", \"transaction.cannot.be.used.within.handler\"),\n+    TRANSACTION_CANNOT_BE_USED_WITHIN_TRANSACTIONAL_SCOPE(\n+            \"BCE2315\", \"transaction.cannot.be.used.within.transactional.scope\"),\n+    TRANSACTIONAL_FUNC_INVOKE_PROHIBITED(\"BCE2316\", \"transactional.function.prohibited.outside.transactional.scope\"),\n+    TRANSACTIONAL_WORKER_OUT_OF_TRANSACTIONAL_SCOPE(\n+            \"BCE2317\", \"transactional.worker.prohibited.outside.transactional.scope\"),\n+\n+    NESTED_TRANSACTIONS_ARE_INVALID(\"BCE2318\", \"nested.transactions.are.invalid\"),\n+    INVALID_FUNCTION_POINTER_ASSIGNMENT_FOR_HANDLER(\"BCE2319\", \"invalid.function.pointer.assignment.for.handler\"),\n+    USAGE_OF_START_WITHIN_TRANSACTION_IS_PROHIBITED(\"BCE2320\", \"usage.of.start.within.transaction.is.prohibited\"),\n+    ROLLBACK_CANNOT_BE_WITHIN_TRANSACTIONAL_FUNCTION(\"BCE2321\", \"rollback.cannot.be.within.transactional.function\"),\n+    COMMIT_CANNOT_BE_WITHIN_TRANSACTIONAL_FUNCTION(\"BCE2322\", \"commit.cannot.be.within.transactional.function\"),\n+    MAX_ONE_COMMIT_ROLLBACK_ALLOWED_WITHIN_A_BRANCH(\"BCE2323\", \"max.one.commit.rollback.allowed.within.branch\"),\n+    COMMIT_NOT_ALLOWED(\"BCE2324\", \"commit.not.allowed\"),\n+    ROLLBACK_NOT_ALLOWED(\"BCE2325\", \"rollback.not.allowed\"),\n+\n+    // Service, endpoint related errors codes\n+    SERVICE_INVALID_OBJECT_TYPE(\"BCE2400\", \"service.invalid.object.type\"),\n+    SERVICE_INVALID_ENDPOINT_TYPE(\"BCE2401\", \"service.invalid.endpoint.type\"),\n+    SERVICE_FUNCTION_INVALID_MODIFIER(\"BCE2402\", \"service.function.invalid.modifier\"),\n+    SERVICE_FUNCTION_INVALID_INVOCATION(\"BCE2403\", \"service.function.invalid.invocation\"),\n+    SERVICE_SERVICE_TYPE_REQUIRED_ANONYMOUS(\"BCE2404\", \"service.service.type.required.anonymous\"),\n+    ENDPOINT_OBJECT_TYPE_REQUIRED(\"BCE2405\", \"endpoint.object.type.required\"),\n+    ENDPOINT_OBJECT_NEW_HAS_PARAM(\"BCE2406\", \"endpoint.object.new.has.param\"),\n+    ENDPOINT_INVALID_TYPE(\"BCE2407\", \"endpoint.invalid.type\"),\n+    ENDPOINT_INVALID_TYPE_NO_FUNCTION(\"BCE2408\", \"endpoint.invalid.type.no.function\"),\n+    ENDPOINT_SPI_INVALID_FUNCTION(\"BCE2409\", \"endpoint.spi.invalid.function\"),\n+\n+    REMOTE_FUNCTION_IN_NON_CLIENT_OBJECT(\"BCE2410\", \"remote.function.in.non.client.object\"),\n+    RESOURCE_FUNCTION_IN_NON_SERVICE_OBJECT(\"BCE2411\", \"resource.function.in.non.service.object\"),\n+    RESOURCE_FUNCTION_INVALID_RETURN_TYPE(\"BCE2412\", \"resource.function.invalid.return.type\"),\n+    REMOTE_IN_NON_OBJECT_FUNCTION(\"BCE2413\", \"remote.in.non.object.function\"),\n+    INVALID_LISTENER_VARIABLE(\"BCE2414\", \"invalid.listener.var\"),\n+    INVALID_LISTENER_ATTACHMENT(\"BCE2415\", \"invalid.listener.attachment\"),\n+\n+    ENDPOINT_NOT_SUPPORT_REGISTRATION(\"BCE2416\", \"endpoint.not.support.registration\"),\n+    INVALID_ACTION_INVOCATION_SYNTAX(\"BCE2417\", \"invalid.action.invocation.syntax\"),\n+    INVALID_METHOD_INVOCATION_SYNTAX(\"BCE2418\", \"invalid.method.invocation.syntax\"),\n+    INVALID_INIT_INVOCATION(\"BCE2419\", \"invalid.init.invocation\"),\n+    INVALID_RESOURCE_FUNCTION_INVOCATION(\"BCE2420\", \"invalid.resource.function.invocation\"),\n+    INVALID_ACTION_INVOCATION(\"BCE2421\", \"invalid.action.invocation\"),\n+\n+    TYPE_CAST_NOT_YET_SUPPORTED(\"BCE2423\", \"type.cast.not.yet.supported.for.type\"),\n+    EQUALITY_NOT_YET_SUPPORTED(\"BCE2424\", \"equality.not.yet.supported.for.type\"),\n+    BINDING_PATTERN_NOT_YET_SUPPORTED(\"BCE2425\", \"binding.pattern.not.yet.supported.for.type\"),\n+    LET_EXPRESSION_NOT_YET_SUPPORTED_RECORD_FIELD(\"BCE2426\", \"let.expression.not.yet.supported.record.field\"),\n+    LET_EXPRESSION_NOT_YET_SUPPORTED_OBJECT_FIELD(\"BCE2427\", \"let.expression.not.yet.supported.object.field\"),\n+\n+    // Cast and conversion related codes\n+    INCOMPATIBLE_TYPES_CAST(\"BCE2500\", \"incompatible.types.cast\"),\n+    INCOMPATIBLE_TYPES_CAST_WITH_SUGGESTION(\"BCE2501\", \"incompatible.types.cast.with.suggestion\"),\n+    INCOMPATIBLE_TYPES_CONVERSION(\"BCE2502\", \"incompatible.types.conversion\"),\n+    INCOMPATIBLE_TYPES_CONVERSION_WITH_SUGGESTION(\"BCE2503\", \"incompatible.types.conversion.with.suggestion\"),\n+    UNSAFE_CAST_ATTEMPT(\"BCE2504\", \"unsafe.cast.attempt\"),\n+    UNSAFE_CONVERSION_ATTEMPT(\"BCE2505\", \"unsafe.conversion.attempt\"),\n+\n+    INVALID_LITERAL_FOR_TYPE(\"BCE2506\", \"invalid.literal.for.type\"),\n+    INCOMPATIBLE_MAPPING_CONSTRUCTOR(\"BCE2507\", \"incompatible.mapping.constructor.expression\"),\n+    MAPPING_CONSTRUCTOR_COMPATIBLE_TYPE_NOT_FOUND(\"BCE2508\", \"mapping.constructor.compatible.type.not.found\"),\n+    CANNOT_INFER_TYPES_FOR_TUPLE_BINDING(\"BCE2509\", \"cannot.infer.types.for.tuple.binding\"),\n+    INVALID_LITERAL_FOR_MATCH_PATTERN(\"BCE2510\", \"invalid.literal.for.match.pattern\"),\n+    INVALID_EXPR_WITH_TYPE_GUARD_FOR_MATCH_PATTERN(\"BCE2511\", \"invalid.expr.with.type.guard.for.match\"),\n+    ARRAY_LITERAL_NOT_ALLOWED(\"BCE2512\", \"array.literal.not.allowed\"),\n+    STRING_TEMPLATE_LIT_NOT_ALLOWED(\"BCE2513\", \"string.template.literal.not.allowed\"),\n+    INVALID_RECORD_LITERAL_KEY(\"BCE2514\", \"invalid.record.literal.key\"),\n+    INVALID_RECORD_LITERAL_IDENTIFIER_KEY(\"BCE2515\", \"invalid.record.literal.identifier.key\"),\n+    INVALID_FIELD_NAME_RECORD_LITERAL(\"BCE2516\", \"invalid.field.name.record.lit\"),\n+    REST_FIELD_NOT_ALLOWED_IN_SEALED_RECORDS(\"BCE2517\", \"rest.field.not.allowed\"),\n+    OPEN_RECORD_CONSTRAINT_NOT_ALLOWED(\"BCE2518\", \"open.record.constraint.not.allowed\"),\n+    INVALID_RECORD_REST_DESCRIPTOR(\"BCE2519\", \"invalid.record.rest.descriptor\"),\n+    MISSING_REQUIRED_RECORD_FIELD(\"BCE2520\", \"missing.required.record.field\"),\n+    DEFAULT_VALUES_NOT_ALLOWED_FOR_OPTIONAL_FIELDS(\"BCE2521\", \"default.values.not.allowed.for.optional.fields\"),\n+    INVALID_FUNCTION_POINTER_INVOCATION(\"BCE2522\", \"invalid.function.pointer.invocation\"),\n+    AMBIGUOUS_TYPES(\"BCE2523\", \"ambiguous.type\"),\n+\n+    TOO_MANY_ARGS_FUNC_CALL(\"BCE2524\", \"too.many.args.call\"),\n+    ASSIGNMENT_COUNT_MISMATCH(\"BCE2525\", \"assignment.count.mismatch\"),\n+    ASSIGNMENT_REQUIRED(\"BCE2526\", \"assignment.required\"),\n+    MULTI_VAL_IN_SINGLE_VAL_CONTEXT(\"BCE2527\", \"multi.value.in.single.value.context\"),\n+    MULTI_VAL_EXPR_IN_SINGLE_VAL_CONTEXT(\"BCE2528\", \"multi.valued.expr.in.single.valued.context\"),\n+    DOES_NOT_RETURN_VALUE(\"BCE2529\", \"does.not.return.value\"),\n+    FUNC_DEFINED_ON_NOT_SUPPORTED_TYPE(\"BCE2530\", \"func.defined.on.not.supported.type\"),\n+    FUNC_DEFINED_ON_NON_LOCAL_TYPE(\"BCE2531\", \"func.defined.on.non.local.type\"),\n+    INVALID_OBJECT_CONSTRUCTOR(\"BCE2532\", \"invalid.object.constructor\"),\n+    RECORD_INITIALIZER_INVOKED(\"BCE2533\", \"explicit.invocation.of.record.init.is.not.allowed\"),\n+    PKG_ALIAS_NOT_ALLOWED_HERE(\"BCE2534\", \"pkg.alias.not.allowed.here\"),\n+\n+    MULTI_VALUE_RETURN_EXPECTED(\"BCE2535\", \"multi.value.return.expected\"),\n+    SINGLE_VALUE_RETURN_EXPECTED(\"BCE2536\", \"single.value.return.expected\"),\n+    TOO_MANY_RETURN_VALUES(\"BCE2537\", \"return.value.too.many\"),\n+    NOT_ENOUGH_RETURN_VALUES(\"BCE2538\", \"return.value.not.enough\"),\n+    INVALID_FUNCTION_INVOCATION(\"BCE2539\", \"invalid.function.invocation\"),\n+    INVALID_FUNCTION_INVOCATION_WITH_NAME(\"BCE2540\", \"invalid.function.invocation.with.name\"),\n+    DUPLICATE_NAMED_ARGS(\"BCE2541\", \"duplicate.named.args\"),\n+    INVALID_DEFAULT_PARAM_VALUE(\"BCE2542\", \"invalid.default.param.value\"),\n+\n+    DUPLICATED_ERROR_CATCH(\"BCE2543\", \"duplicated.error.catch\"),\n+\n+    NO_NEW_VARIABLES_VAR_ASSIGNMENT(\"BCE2544\", \"no.new.variables.var.assignment\"),\n+    INVALID_VARIABLE_ASSIGNMENT(\"BCE2545\", \"invalid.variable.assignment\"),\n+    INVALID_ASSIGNMENT_DECLARATION_FINAL(\"BCE2546\", \"invalid.variable.assignment.declaration.final\"),\n+    CANNOT_ASSIGN_VALUE_FINAL(\"BCE2547\", \"cannot.assign.value.to.final.field\"),\n+    CANNOT_ASSIGN_VALUE_TO_POTENTIALLY_INITIALIZED_FINAL(\n+            \"BCE2548\", \"cannot.assign.value.to.potentially.initialized.final\"),\n+    CANNOT_ASSIGN_VALUE_FUNCTION_ARGUMENT(\"BCE2549\", \"cannot.assign.value.to.function.argument\"),\n+    CANNOT_ASSIGN_VALUE_ENDPOINT(\"BCE2550\", \"cannot.assign.value.to.endpoint\"),\n+    CANNOT_UPDATE_READONLY_VALUE_OF_TYPE(\"BCE2551\", \"cannot.update.readonly.value.of.type\"),\n+    CANNOT_UPDATE_READONLY_RECORD_FIELD(\"BCE2552\", \"cannot.update.readonly.record.field\"),\n+    CANNOT_UPDATE_FINAL_OBJECT_FIELD(\"BCE2553\", \"cannot.update.final.object.field\"),\n+    UNDERSCORE_NOT_ALLOWED(\"BCE2554\", \"underscore.not.allowed\"),\n+    OPERATION_DOES_NOT_SUPPORT_INDEXING(\"BCE2555\", \"operation.does.not.support.indexing\"),\n+    OPERATION_DOES_NOT_SUPPORT_FIELD_ACCESS(\"BCE2556\", \"operation.does.not.support.field.access\"),\n+    OPERATION_DOES_NOT_SUPPORT_FIELD_ACCESS_FOR_ASSIGNMENT(\n+            \"BCE2557\", \"operation.does.not.support.field.access.for.assignment\"),\n+    OPERATION_DOES_NOT_SUPPORT_OPTIONAL_FIELD_ACCESS(\"BCE2558\", \"operation.does.not.support.optional.field.access\"),\n+    OPERATION_DOES_NOT_SUPPORT_FIELD_ACCESS_FOR_NON_REQUIRED_FIELD(\n+            \"BCE2559\", \"operation.does.not.support.field.access.for.non.required.field\"),\n+    OPERATION_DOES_NOT_SUPPORT_OPTIONAL_FIELD_ACCESS_FOR_FIELD(\n+            \"BCE2560\", \"operation.does.not.support.optional.field.access.for.field\"),\n+    OPERATION_DOES_NOT_SUPPORT_INDEX_ACCESS_FOR_ASSIGNMENT(\n+            \"BCE2561\", \"operation.does.not.support.index.access.for.assignment\"),\n+    INVALID_INDEX_EXPR_STRUCT_FIELD_ACCESS(\"BCE2562\", \"invalid.index.expr.struct.field.access\"),\n+    INVALID_INDEX_EXPR_TUPLE_FIELD_ACCESS(\"BCE2563\", \"invalid.index.expr.tuple.field.access\"),\n+    INVALID_TUPLE_INDEX_EXPR(\"BCE2564\", \"invalid.tuple.index.expr\"),\n+    INVALID_RECORD_INDEX_EXPR(\"BCE2565\", \"invalid.record.index.expr\"),\n+    INVALID_ENUM_EXPR(\"BCE2566\", \"invalid.enum.expr\"),\n+    INVALID_EXPR_IN_MATCH_STMT(\"BCE2567\", \"invalid.expr.in.match.stmt\"),\n+    INVALID_PATTERN_CLAUSES_IN_MATCH_STMT(\"BCE2568\", \"invalid.pattern.clauses.in.match.stmt\"),\n+    STATIC_MATCH_ONLY_SUPPORTS_ANYDATA(\"BCE2569\", \"static.value.match.only.supports.anydata\"),\n+    USAGE_OF_UNINITIALIZED_VARIABLE(\"BCE2570\", \"usage.of.uninitialized.variable\"),\n+    UNINITIALIZED_VARIABLE(\"BCE2571\", \"uninitialized.variable\"),\n+    CONTAINS_UNINITIALIZED_FIELDS(\"BCE2572\", \"uninitialized.object.fields\"),\n+    CONTAINS_UNINITIALIZED_VARIABLES(\"BCE2573\", \"uninitialized.variables\"),\n+    INVALID_ANY_VAR_DEF(\"BCE2574\", \"invalid.any.var.def\"),\n+    INVALID_RECORD_LITERAL(\"BCE2575\", \"invalid.record.literal\"),\n+    INVALID_FIELD_IN_RECORD_BINDING_PATTERN(\"BCE2576\", \"invalid.field.in.record.binding.pattern\"),\n+    INVALID_RECORD_LITERAL_BINDING_PATTERN(\"BCE2577\", \"invalid.record.literal.in.binding.pattern\"),\n+    DUPLICATE_KEY_IN_RECORD_LITERAL(\"BCE2578\", \"duplicate.key.in.record.literal\"),\n+    DUPLICATE_KEY_IN_TABLE_LITERAL(\"BCE2579\", \"duplicate.key.in.table.literal\"),\n+    DUPLICATE_KEY_IN_RECORD_LITERAL_SPREAD_OP(\"BCE2580\", \"duplicate.key.in.record.literal.spread.op\"),\n+    POSSIBLE_DUPLICATE_OF_FIELD_SPECIFIED_VIA_SPREAD_OP(\n+            \"BCE2581\", \"possible.duplicate.of.field.specified.via.spread.op\"),\n+    SPREAD_FIELD_MAY_DULPICATE_ALREADY_SPECIFIED_KEYS(\"BCE2582\", \"spread.field.may.duplicate.already.specified.keys\"),\n+    MULTIPLE_INCLUSIVE_TYPES(\"BCE2583\", \"multiple.inclusive.types\"),\n+    INVALID_ARRAY_LITERAL(\"BCE2584\", \"invalid.array.literal\"),\n+    INVALID_TUPLE_LITERAL(\"BCE2585\", \"invalid.tuple.literal\"),\n+    INVALID_LIST_CONSTRUCTOR_ELEMENT_TYPE(\"BCE2586\", \"invalid.list.constructor.type\"),\n+    INVALID_ARRAY_ELEMENT_TYPE(\"BCE2587\", \"invalid.array.element.type\"),\n+    INVALID_TUPLE_BINDING_PATTERN(\"BCE2588\", \"invalid.tuple.binding.pattern\"),\n+    INVALID_TYPE_FOR_TUPLE_VAR_EXPRESSION(\"BCE2589\", \"invalid.type.for.tuple.var.expr\"),\n+    INVALID_TUPLE_BINDING_PATTERN_DECL(\"BCE2590\", \"invalid.tuple.binding.pattern.decl\"),\n+    INVALID_TUPLE_BINDING_PATTERN_INFERENCE(\"BCE2591\", \"invalid.tuple.binding.pattern.inference\"),\n+    MISMATCHING_ARRAY_LITERAL_VALUES(\"BCE2592\", \"mismatching.array.literal.values\"),\n+    SEALED_ARRAY_TYPE_NOT_INITIALIZED(\"BCE2593\", \"sealed.array.type.not.initialized\"),\n+    INVALID_LIST_INDEX_EXPR(\"BCE2594\", \"invalid.list.index.expr\"),\n+    INVALID_ARRAY_INDEX_EXPR(\"BCE2595\", \"invalid.array.index.expr\"),\n+    SEALED_ARRAY_TYPE_CAN_NOT_INFER_SIZE(\"BCE2596\", \"sealed.array.type.can.not.infer.size\"),\n+    INVALID_SORT_FUNC_RETURN_TYPE(\"BCE2597\", \"invalid.key.func.return.type\"),\n+    INVALID_SORT_ARRAY_MEMBER_TYPE(\"BCE2598\", \"invalid.sort.array.member.type\"),\n+    // TODO Maryam remove list array tuple and use first only\n+    INDEX_OUT_OF_RANGE(\"BCE2599\", \"index.out.of.range\"),\n+    LIST_INDEX_OUT_OF_RANGE(\"BCE2600\", \"list.index.out.of.range\"),\n+    ARRAY_INDEX_OUT_OF_RANGE(\"BCE2601\", \"array.index.out.of.range\"),\n+    TUPLE_INDEX_OUT_OF_RANGE(\"BCE2602\", \"tuple.index.out.of.range\"),\n+    INVALID_ARRAY_SIZE_REFERENCE(\"BCE2603\", \"invalid.array.size.reference\"),\n+    INVALID_TYPE_FOR_REST_DESCRIPTOR(\"BCE2604\", \"invalid.type.for.rest.descriptor\"),\n+    INVALID_TYPE_NEW_LITERAL(\"BCE2605\", \"invalid.type.new.literal\"),\n+    INVALID_USAGE_OF_KEYWORD(\"BCE2606\", \"invalid.usage.of.keyword\"),\n+    INVALID_TYPE_OBJECT_CONSTRUCTOR(\"BCE2607\", \"invalid.type.object.constructor\"),\n+\n+    INVALID_RECORD_BINDING_PATTERN(\"BCE2608\", \"invalid.record.binding.pattern\"),\n+    NO_MATCHING_RECORD_REF_PATTERN(\"BCE2609\", \"no.matching.record.ref.found\"),\n+    MULTIPLE_RECORD_REF_PATTERN_FOUND(\"BCE2610\", \"multiple.matching.record.ref.found\"),\n+    NOT_ENOUGH_PATTERNS_TO_MATCH_RECORD_REF(\"BCE2611\", \"not.enough.patterns.to.match.record.ref\"),\n+    INVALID_TYPE_DEFINITION_FOR_RECORD_VAR(\"BCE2612\", \"invalid.type.definition.for.record.var\"),\n+\n+    INVALID_ERROR_BINDING_PATTERN(\"BCE2613\", \"invalid.error.binding.pattern\"),\n+    INVALID_ERROR_REASON_BINDING_PATTERN(\"BCE2614\", \"invalid.error.reason.binding.pattern\"),\n+    INVALID_ERROR_REST_BINDING_PATTERN(\"BCE2615\", \"invalid.error.rest.binding.pattern\"),\n+    INVALID_TYPE_DEFINITION_FOR_ERROR_VAR(\"BCE2616\", \"invalid.type.definition.for.error.var\"),\n+    INVALID_ERROR_DESTRUCTURING_NO_REASON_GIVEN(\"BCE2617\", \"invalid.error.destructuring.reason\"),\n+    INVALID_ERROR_MATCH_PATTERN(\"BCE2618\", \"invalid.error.match.pattern\"),\n+    DUPLICATE_VARIABLE_IN_BINDING_PATTERN(\"BCE2619\", \"duplicate.variable.in.binding.pattern\"),\n+    INVALID_VARIABLE_REFERENCE_IN_BINDING_PATTERN(\"BCE2620\", \"invalid.variable.reference.in.binding.pattern\"),\n+    MISSING_REQUIRED_ARG_BINDING_PATTERN_ERROR_MESSAGE(\"BCE2621\", \"missing.error.arg.binding.pattern.error.message\"),\n+\n+    INVALID_NAMESPACE_PREFIX(\"BCE2622\", \"invalid.namespace.prefix\"),\n+    XML_TAGS_MISMATCH(\"BCE2623\", \"mismatching.xml.start.end.tags\"),\n+    XML_ATTRIBUTE_MAP_UPDATE_NOT_ALLOWED(\"BCE2624\", \"xml.attribute.map.update.not.allowed\"),\n+    XML_QNAME_UPDATE_NOT_ALLOWED(\"BCE2625\", \"xml.qname.update.not.allowed\"),\n+    INVALID_NAMESPACE_DECLARATION(\"BCE2626\", \"invalid.namespace.declaration\"),\n+    CANNOT_UPDATE_XML_SEQUENCE(\"BCE2627\", \"cannot.update.xml.sequence\"),\n+    INVALID_XML_NS_INTERPOLATION(\"BCE2628\", \"invalid.xml.ns.interpolation\"),\n+    CANNOT_FIND_XML_NAMESPACE(\"BCE2629\", \"cannot.find.xml.namespace.prefix\"),\n+    UNSUPPORTED_METHOD_INVOCATION_XML_NAV(\"BCE2630\", \"method.invocation.in.xml.navigation.expressions.not.supported\"),\n+    DEPRECATED_XML_ATTRIBUTE_ACCESS(\"BCE2631\", \"deprecated.xml.attribute.access.expression\"),\n+    UNSUPPORTED_INDEX_IN_XML_NAVIGATION(\"BCE2632\", \"indexing.within.xml.navigation.expression.not.supported\"),\n+\n+    UNDEFINED_ANNOTATION(\"BCE2633\", \"undefined.annotation\"),\n+    ANNOTATION_NOT_ALLOWED(\"BCE2634\", \"annotation.not.allowed\"),\n+    ANNOTATION_ATTACHMENT_CANNOT_HAVE_A_VALUE(\"BCE2635\", \"annotation.attachment.cannot.have.a.value\"),\n+    ANNOTATION_ATTACHMENT_REQUIRES_A_VALUE(\"BCE2636\", \"annotation.attachment.requires.a.value\"),\n+    ANNOTATION_ATTACHMENT_CANNOT_SPECIFY_MULTIPLE_VALUES(\n+            \"BCE2637\", \"annotation.attachment.cannot.specify.multiple.values\"),\n+    ANNOTATION_INVALID_TYPE(\"BCE2638\", \"annotation.invalid.type\"),\n+    ANNOTATION_INVALID_CONST_TYPE(\"BCE2639\", \"annotation.invalid.const.type\"),\n+    ANNOTATION_REQUIRES_CONST(\"BCE2640\", \"annotation.requires.const\"),\n+    INCOMPATIBLE_TYPES_ARRAY_FOUND(\"BCE2641\", \"incompatible.types.array.found\"),\n+    CANNOT_GET_ALL_FIELDS(\"BCE2642\", \"cannot.get.all.fields\"),\n+\n+    INVALID_DOCUMENTATION_IDENTIFIER(\"BCE2643\", \"invalid.documentation.identifier\"),\n+\n+    OPERATOR_NOT_SUPPORTED(\"BCE2644\", \"operator.not.supported\"),\n+    OPERATOR_NOT_ALLOWED_VARIABLE(\"BCE2645\", \"operator.not.allowed.variable\"),\n+    NEVER_TYPE_NOT_ALLOWED_FOR_REQUIRED_FIELDS(\"BCE2646\", \"never.type.not.allowed.for.required.fields\"),\n+    INVALID_NEVER_RETURN_TYPED_FUNCTION_INVOCATION(\"BCE2647\", \"invalid.never.return.typed.function.invocation\"),\n+    NEVER_TYPED_VAR_DEF_NOT_ALLOWED(\"BCE2648\", \"never.typed.var.def.not.allowed\"),\n+\n+    // Error codes related to iteration.\n+    ITERABLE_NOT_SUPPORTED_COLLECTION(\"BCE2800\", \"iterable.not.supported.collection\"),\n+    INCOMPATIBLE_ITERATOR_FUNCTION_SIGNATURE(\"BCE2801\", \"incompatible.iterator.function.signature\"),\n+    ITERABLE_NOT_SUPPORTED_OPERATION(\"BCE2802\", \"iterable.not.supported.operation\"),\n+    ITERABLE_TOO_MANY_VARIABLES(\"BCE2803\", \"iterable.too.many.variables\"),\n+    ITERABLE_NOT_ENOUGH_VARIABLES(\"BCE2804\", \"iterable.not.enough.variables\"),\n+    ITERABLE_TOO_MANY_RETURN_VARIABLES(\"BCE2805\", \"iterable.too.many.return.args\"),\n+    ITERABLE_NOT_ENOUGH_RETURN_VARIABLES(\"BCE2806\", \"iterable.not.enough.return.args\"),\n+    ITERABLE_LAMBDA_REQUIRED(\"BCE2807\", \"iterable.lambda.required\"),\n+    ITERABLE_LAMBDA_TUPLE_REQUIRED(\"BCE2808\", \"iterable.lambda.tuple.required\"),\n+    ITERABLE_NO_ARGS_REQUIRED(\"BCE2809\", \"iterable.no.args.required\"),\n+    ITERABLE_LAMBDA_INCOMPATIBLE_TYPES(\"BCE2810\", \"iterable.lambda.incompatible.types\"),\n+    ITERABLE_RETURN_TYPE_MISMATCH(\"BCE2811\", \"iterable.return.type.mismatch\"),\n+\n+    // match statement related errors\n+    MATCH_STMT_CANNOT_GUARANTEE_A_MATCHING_PATTERN(\"BCE2900\", \"match.stmt.cannot.guarantee.a.matching.pattern\"),\n+    MATCH_STMT_UNREACHABLE_PATTERN(\"BCE2901\", \"match.stmt.unreachable.pattern\"),\n+    MATCH_STMT_UNMATCHED_PATTERN(\"BCE2902\", \"match.stmt.unmatched.pattern\"),\n+    MATCH_STMT_PATTERN_ALWAYS_MATCHES(\"BCE2903\", \"match.stmt.pattern.always.matches\"),\n+    MATCH_STMT_PATTERN_UNREACHABLE(\"BCE2904\", \"match.stmt.unreachable.pattern.available\"),\n+    MATCH_PATTERN_NOT_SUPPORTED(\"BCE2905\", \"match.pattern.not.supported\"),\n+    MATCH_PATTERNS_SHOULD_CONTAIN_SAME_SET_OF_VARIABLES(\n+            \"BCE2906\", \"match.patterns.should.contain.same.set.of.variables\"),\n+    MATCH_PATTERN_CANNOT_REPEAT_SAME_VARIABLE(\"BCE2907\", \"match.pattern.cannot.repeat.same.variable\"),\n+    REST_MATCH_PATTERN_NOT_SUPPORTED(\"BCE2908\", \"rest.match.pattern.not.supported\"),\n+    VARIABLE_SHOULD_BE_DECLARED_AS_CONSTANT(\"BCE2909\", \"match.pattern.variable.should.declared.as.constant\"),\n+    MATCH_STMT_CONTAINS_TWO_DEFAULT_PATTERNS(\"BCE2910\", \"match.stmt.contains.two.default.patterns\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a87e1e99b3170534eb0d99ad1a869c95fe616b73"}, "originalPosition": 412}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNzExMDc5OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/diagnostics/DiagnosticCodeTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNjowNjo0OFrOH3AteA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNjo0NTo1NFrOH3CZMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ0NTM2OA==", "bodyText": "I think getting information using Class, uses java reflection internally.\nInstead we can do something like:\n\nchange the parameter to DiagnosticCode[] codes\nwhen parsing the codes, use: DiagnosticCode[] codes = DiagnosticErrorCode.values();", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26970#discussion_r527445368", "createdAt": "2020-11-20T06:06:48Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/diagnostics/DiagnosticCodeTest.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package io.ballerinalang.compiler.parser.test.diagnostics;\n+\n+import io.ballerina.compiler.internal.diagnostics.DiagnosticErrorCode;\n+import io.ballerina.compiler.internal.diagnostics.DiagnosticWarningCode;\n+import io.ballerina.tools.diagnostics.DiagnosticCode;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Test diagnostic codes.\n+ *\n+ * @since Swan Lake\n+ */\n+public class DiagnosticCodeTest {\n+\n+    private static final String DUPLICATE_DIAGNOSTIC_IDS_FOUND = \"Duplicate diagnostic IDs found\";\n+    private static final String DUPLICATE_DIAGNOSTIC_MSGKEYS_FOUND = \"Duplicate diagnostic messageKeys found\";\n+\n+    @Test\n+    public void testDiagnosticErrorCodesUniqueness() {\n+        validateDiagnosticUniqueness(DiagnosticErrorCode.class);\n+    }\n+\n+    @Test\n+    public void testDiagnosticWarningCodesUniqueness() {\n+        validateDiagnosticUniqueness(DiagnosticWarningCode.class);\n+    }\n+\n+    // helpers\n+    private <E extends DiagnosticCode> void validateDiagnosticUniqueness(Class<E> diagnosticCode) {\n+        E[] diagCodes = diagnosticCode.getEnumConstants();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a87e1e99b3170534eb0d99ad1a869c95fe616b73"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ3Mjk0NA==", "bodyText": "I thought, parsing class would be better practice. I'll change it", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26970#discussion_r527472944", "createdAt": "2020-11-20T06:45:54Z", "author": {"login": "dulajdilshan"}, "path": "compiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/diagnostics/DiagnosticCodeTest.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package io.ballerinalang.compiler.parser.test.diagnostics;\n+\n+import io.ballerina.compiler.internal.diagnostics.DiagnosticErrorCode;\n+import io.ballerina.compiler.internal.diagnostics.DiagnosticWarningCode;\n+import io.ballerina.tools.diagnostics.DiagnosticCode;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Test diagnostic codes.\n+ *\n+ * @since Swan Lake\n+ */\n+public class DiagnosticCodeTest {\n+\n+    private static final String DUPLICATE_DIAGNOSTIC_IDS_FOUND = \"Duplicate diagnostic IDs found\";\n+    private static final String DUPLICATE_DIAGNOSTIC_MSGKEYS_FOUND = \"Duplicate diagnostic messageKeys found\";\n+\n+    @Test\n+    public void testDiagnosticErrorCodesUniqueness() {\n+        validateDiagnosticUniqueness(DiagnosticErrorCode.class);\n+    }\n+\n+    @Test\n+    public void testDiagnosticWarningCodesUniqueness() {\n+        validateDiagnosticUniqueness(DiagnosticWarningCode.class);\n+    }\n+\n+    // helpers\n+    private <E extends DiagnosticCode> void validateDiagnosticUniqueness(Class<E> diagnosticCode) {\n+        E[] diagCodes = diagnosticCode.getEnumConstants();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ0NTM2OA=="}, "originalCommit": {"oid": "a87e1e99b3170534eb0d99ad1a869c95fe616b73"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNzEyMTY0OnYy", "diffSide": "RIGHT", "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNjowOTowNVrOH3A1mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwNjowOTowNVrOH3A1mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ0NzQ1MA==", "bodyText": "Checking the equality of each code one-by-one can be slightly slower than the switch case.\nCan we check for instanceof DiagnosticWarningCode and cast to it, and then use the existing switch case?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26970#discussion_r527447450", "createdAt": "2020-11-20T06:09:05Z", "author": {"login": "SupunS"}, "path": "misc/lib-creator/src/main/java/org/ballerinalang/stdlib/utils/GenerateBalo.java", "diffHunk": "@@ -196,12 +200,11 @@ public void saveCompiledPackage(CompiledPackage compiledPackage,\n     }\n \n     private static boolean isIsolatedWarningLog(DiagnosticCode code) {\n-        switch (code) {\n-            case FUNCTION_CAN_BE_MARKED_ISOLATED:\n-            case WARNING_INVALID_MUTABLE_ACCESS_AS_RECORD_DEFAULT:\n-            case WARNING_INVALID_NON_ISOLATED_INVOCATION_AS_RECORD_DEFAULT:\n-            case WARNING_INVALID_NON_ISOLATED_INIT_EXPRESSION_AS_RECORD_DEFAULT:\n-                return true;\n+        if (FUNCTION_CAN_BE_MARKED_ISOLATED.equals(code) || \n+                WARNING_INVALID_MUTABLE_ACCESS_AS_RECORD_DEFAULT.equals(code) || \n+                WARNING_INVALID_NON_ISOLATED_INVOCATION_AS_RECORD_DEFAULT.equals(code) || \n+                WARNING_INVALID_NON_ISOLATED_INIT_EXPRESSION_AS_RECORD_DEFAULT.equals(code)) {\n+            return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a87e1e99b3170534eb0d99ad1a869c95fe616b73"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3012, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}