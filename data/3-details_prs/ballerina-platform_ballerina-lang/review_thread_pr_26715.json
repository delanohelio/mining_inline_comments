{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NjI2MzQw", "number": 26715, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoyMDoxMFrOE0vbjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoyMDoxMFrOE0vbjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzM4NTEwOnYy", "diffSide": "RIGHT", "path": "tests/testerina-integration-test/src/test/resources/project-based-tests/basic-tests/src/assertions-error-messages/tests/assertions-diff-error-messages.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoyMDoxMFrOHsoQQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoyMDoxMFrOHsoQQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU1ODkxMg==", "bodyText": "Is this a description comment or something that needs to be asserted? Can we remove it?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26715#discussion_r516558912", "createdAt": "2020-11-03T10:20:10Z", "author": {"login": "Ibaqu"}, "path": "tests/testerina-integration-test/src/test/resources/project-based-tests/basic-tests/src/assertions-error-messages/tests/assertions-diff-error-messages.bal", "diffHunk": "@@ -56,18 +70,45 @@ function testAssertJsonValues() {\n     json bioData2 = {name:\"John Doe New\", age:25, address:{city:\"Colombo\", country:\"Sri Lanka\"}};\n     error? err = trap test:assertEquals(bioData, bioData2);\n     error result = <error>err;\n-    test:assertEquals(result.message().toString(),\n-    \"Assertion Failed!\\n \\nexpected: '{\\\"name\\\":\\\"John Doe New\\\",\\\"age\\\":25,\\\"address\\\":{\\\"city\\\":\\\"Colombo\\\",\" + \"\\\"country\\\":\\\"Sri Lanka...'\\nactual\\t: '{\\\"name\\\":\\\"John Doe\\\",\\\"age\\\":25,\\\"address\\\":{\\\"city\\\":\\\"Colombo\\\",\" + \"\\\"country\\\":\\\"Sri Lanka\\\"}}'\");\n+    test:assertEquals(result.message().toString(), \"Assertion Failed!\\n \\nexpected: '{\\\"name\\\":\\\"John Doe New\\\",\\\"age\\\":25,\\\"address\\\":{\\\"city\\\":\\\"Colombo\\\",\" + \"\\\"country\\\":\\\"Sri Lanka...'\\nactual\\t: '{\\\"name\\\":\\\"John Doe\\\",\\\"age\\\":25,\\\"address\\\":{\\\"city\\\":\\\"Colombo\\\",\" + \"\\\"country\\\":\\\"Sri Lanka\\\"}}'\\n \\nDiff\\t:\\n \\n\\n \\nkey: name\\nexpected value\\t: John Doe New\\nactual value\\t: John Doe \\n \\n\");\n+}\n+\n+@test:Config {}\n+function testAssertJsonInJson() {\n+    json j1 = {name: \"Anne\", age: \"21\", marks: {maths: 100, physics: 90, status: {pass:true}}};\n+    json j2 = {name: \"Anne\", age: 21, marks: {maths: 100, physics: 90, status: {pass:false}}};\n+    error? err = trap test:assertEquals(j1, j2);\n+    error result = <error>err;\n+    test:assertEquals(result.message().toString(), \"Assertion Failed!\\n \\nexpected: '{\\\"name\\\":\\\"Anne\\\",\\\"age\\\":21,\\\"marks\\\":{\\\"maths\\\":100,\\\"physics\\\":90,\\\"status\\\":{\\\"pass\\\":false...'\\nactual\\t: '{\\\"name\\\":\\\"Anne\\\",\\\"age\\\":\\\"21\\\",\\\"marks\\\":{\\\"maths\\\":100,\\\"physics\\\":90,\\\"status\\\":{\\\"pass\\\":tru...'\\n \\nDiff\\t:\\n \\n\\n \\nkey: age\\nexpected value\\t: <int> 21\\nactual value\\t: <string> 21 \\n\\n \\nkey: marks.status.pass\\nexpected value\\t: false\\nactual value\\t: true \\n \\n\");\n }\n \n @test:Config {}\n function testAssertLongJsonValues() {\n     json bioData = {name:\"John Doe Old\", age:25, designation: \"SSE\", address:{city:\"Colombo\", country:\"Sri Lankaa\"}};\n     json bioData2 = {name:\"John Doe New\", age:25, designation: \"SSE\", address:{city:\"Colombo\", country:\"Sri Lanka\"}};\n+    //test:assertEquals(bioData, bioData2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcbe4fe06e5284819cfd2a358c6cd0d2efe17fb"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3173, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}