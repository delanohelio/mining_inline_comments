{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MDMyMTMx", "number": 21581, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMDoxMTozMlrODnAvhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMToyOTowMlrODnCWUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjMzMjIxOnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunTestsTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMDoxMTozMlrOF0wibw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMDoxMTozMlrOF0wibw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg2NTUxOQ==", "bodyText": "Shall we change this to more specific message. If there are test failures this code should not run.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21581#discussion_r390865519", "createdAt": "2020-03-11T10:11:32Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunTestsTask.java", "diffHunk": "@@ -93,11 +125,34 @@ public void execute(BuildContext buildContext) {\n             HashSet<Path> testDependencies = getTestDependencies(buildContext, bLangPackage);\n             Path jsonPath = buildContext.getTestJsonPathTargetCache(bLangPackage.packageID);\n             createTestJson(bLangPackage, suite, sourceRootPath, jsonPath);\n-            int testResult = runTestSuit(jsonPath, buildContext, testDependencies);\n+            int testResult = runTestSuit(jsonPath, buildContext, testDependencies, bLangPackage);\n             if (testResult != 0) {\n                 throw createLauncherException(\"there are test failures\");\n             }\n+            Path statusJsonPath = jsonPath.resolve(TesterinaConstants.STATUS_FILE);\n+            try {\n+                ModuleStatus moduleStatus = loadModuleStatusFromFile(statusJsonPath);\n+                testReport.addModuleStatus(String.valueOf(bLangPackage.packageID.name), moduleStatus);\n+            } catch (IOException e) {\n+                throw createLauncherException(\"error while generating test report\", e);\n+            }\n+\n+            if (coverage) {\n+                int coverageResult = generateCoverageReport(buildContext, testDependencies, bLangPackage);\n+                if (coverageResult != 0) {\n+                    throw createLauncherException(\"there are test failures\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd9db867ec4aa975d3d2c1b5047938112788a97"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjU5NTM2OnYy", "diffSide": "RIGHT", "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunTestsTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMToyOTowMlrOF0zE1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMToyOTowMlrOF0zE1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkwNzA5Mw==", "bodyText": "Shall we reduce the no of new lines here", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21581#discussion_r390907093", "createdAt": "2020-03-11T11:29:02Z", "author": {"login": "warunalakshitha"}, "path": "cli/ballerina-packerina/src/main/java/org/ballerinalang/packerina/task/RunTestsTask.java", "diffHunk": "@@ -166,23 +221,95 @@ private static void writeToJson(TestSuite testSuite, Path jsonPath) {\n         }\n     }\n \n-    private int runTestSuit(Path jsonPath, BuildContext buildContext, HashSet<Path> testDependencies) {\n-        String javaCommand = System.getProperty(\"java.command\");\n+    /**\n+     * Write the test report content into a json file.\n+     *\n+     * @param out PrintStream object to print messages to console\n+     * @param testReport Data that are parsed to the json\n+     */\n+    private void writeReportToJson(PrintStream out, TestReport testReport, Path jsonPath) {\n+        out.println();\n+        out.println(\"Generating Test Report\");\n+        File jsonFile = new File(jsonPath.resolve(TEST_RESULTS_FILE).toString());\n+        try (Writer writer = new OutputStreamWriter(new FileOutputStream(jsonFile), StandardCharsets.UTF_8)) {\n+            Gson gson;\n+            if (this.coverage) {\n+                 gson = new Gson();\n+            } else {\n+                gson = new GsonBuilder().setExclusionStrategies(new TestReport.ReportExclusionStrategy()).create();\n+            }\n+            String json = gson.toJson(testReport);\n+            writer.write(new String(json.getBytes(StandardCharsets.UTF_8), StandardCharsets.UTF_8));\n+            out.println(\"\\t\" + Paths.get(\"\").toAbsolutePath().relativize(jsonFile.toPath()));\n+        } catch (IOException e) {\n+            throw LauncherUtils.createLauncherException(\"couldn't read data from the Json file : \" + e.toString());\n+        }\n+    }\n+\n+    private int runTestSuit(Path jsonPath, BuildContext buildContext, HashSet<Path> testDependencies,\n+                            BLangPackage bLangPackage) {\n+        List<String> cmdArgs = new ArrayList<>();\n+        cmdArgs.add(System.getProperty(\"java.command\"));\n         String mainClassName = TesterinaConstants.TESTERINA_LAUNCHER_CLASS_NAME;\n+        Path targetDir = Paths.get(buildContext.get(BuildContextField.TARGET_DIR).toString());\n+        String orgName = String.valueOf(bLangPackage.packageID.orgName);\n+        String packageName = String.valueOf(bLangPackage.packageID.name);\n+\n+        String jacocoAgentJarPath = Paths.get(System.getProperty(BALLERINA_HOME)).resolve(BALLERINA_HOME_BRE)\n+                .resolve(BALLERINA_HOME_LIB).resolve(TesterinaConstants.AGENT_FILE_NAME).toString();\n         try {\n+            if (coverage) {\n+                String agentCommand = \"-javaagent:\"\n+                        + jacocoAgentJarPath\n+                        + \"=destfile=\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd9db867ec4aa975d3d2c1b5047938112788a97"}, "originalPosition": 185}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 977, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}