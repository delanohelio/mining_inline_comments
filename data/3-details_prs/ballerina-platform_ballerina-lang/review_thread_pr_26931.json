{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMTY2OTU1", "number": 26931, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMDozOTo1N1rOFDaHdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo0OTo1OVrOFE67EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MTE3OTQxOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/CompilerDriver.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMDozOTo1N1rOIDCtrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMDozOTo1N1rOIDCtrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA2MTEwMQ==", "bodyText": "Do we need interopvalidate here. Codegen function is empty with new changes.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26931#discussion_r540061101", "createdAt": "2020-12-10T10:39:57Z", "author": {"login": "warunalakshitha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/CompilerDriver.java", "diffHunk": "@@ -389,6 +403,6 @@ private BPackageSymbol getLangModuleFromSource(PackageID modID) {\n             return null;\n         }\n \n-        return codeGen(birGen(desugar(pkg))).symbol;\n+        return codeGen(birEmit(birGen(desugar(pkg)))).symbol;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b54f4622dece6d232d1fa108738d54f275ed8355"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzAzMjk1OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo0ODozMFrOIFKnjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo0ODozMFrOIFKnjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI4Nzc1Ng==", "bodyText": "Can we check whether pkgName and orgName would be same values that can be used from BIRPackage module here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26931#discussion_r542287756", "createdAt": "2020-12-14T10:48:30Z", "author": {"login": "Kishanthan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "diffHunk": "@@ -596,9 +591,7 @@ private void linkGlobalVars(BIRPackage module, String pkgName, String initClass,\n         globalVarClassMap.put(pkgName + LOCK_STORE_VAR_NAME, initClass);\n     }\n \n-    private void linkTypeDefinitions(BIRPackage module, String pkgName,\n-                                     InteropValidator interopValidator,\n-                                     boolean isEntry, String orgName,\n+    private void linkTypeDefinitions(BIRPackage module, String pkgName, boolean isEntry, String orgName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4f2eded42ac3b291bb1ff90923b71df5e303aa3"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzA0MDE3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo0OTo1OVrOIFKrpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxODozODo0MlrOIHTrZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI4ODgwNw==", "bodyText": "Any way we could check and see whether we can get rid of this flag isEntry and have separate functions.? That given better readability IMO.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26931#discussion_r542288807", "createdAt": "2020-12-14T10:49:59Z", "author": {"login": "Kishanthan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "diffHunk": "@@ -545,13 +543,10 @@ private boolean listenerDeclarationFound(List<BIRGlobalVariableDcl> variableDcls\n      *\n      * @param module           bir module\n      * @param initClass        module init class name\n-     * @param interopValidator interop validator instance\n      * @param isEntry          is entry module flag\n      * @return The map of javaClass records on given source file name\n      */\n-    private Map<String, JavaClass> generateClassNameLinking(BIRPackage module, String initClass,\n-                                                            InteropValidator interopValidator,\n-                                                            boolean isEntry) {\n+    private Map<String, JavaClass> generateClassNameLinking(BIRPackage module, String initClass, boolean isEntry) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4f2eded42ac3b291bb1ff90923b71df5e303aa3"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDUzMzM0OA==", "bodyText": "isEntry is passed from generate module to each function generation. This is only used for add default Boolean params to function signature. So code will be duplicate and much complex code if try to separate them to functions. IMO correct thing is to move all desugar code (including encodes, record inits) from codegen to another class which needs to be done separately.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26931#discussion_r544533348", "createdAt": "2020-12-16T18:38:42Z", "author": {"login": "warunalakshitha"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "diffHunk": "@@ -545,13 +543,10 @@ private boolean listenerDeclarationFound(List<BIRGlobalVariableDcl> variableDcls\n      *\n      * @param module           bir module\n      * @param initClass        module init class name\n-     * @param interopValidator interop validator instance\n      * @param isEntry          is entry module flag\n      * @return The map of javaClass records on given source file name\n      */\n-    private Map<String, JavaClass> generateClassNameLinking(BIRPackage module, String initClass,\n-                                                            InteropValidator interopValidator,\n-                                                            boolean isEntry) {\n+    private Map<String, JavaClass> generateClassNameLinking(BIRPackage module, String initClass, boolean isEntry) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI4ODgwNw=="}, "originalCommit": {"oid": "e4f2eded42ac3b291bb1ff90923b71df5e303aa3"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3003, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}