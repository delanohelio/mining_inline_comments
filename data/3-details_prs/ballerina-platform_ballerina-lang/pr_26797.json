{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NjIxNDA3", "number": 26797, "title": "Fix ObjectTypeReferenceTest, ObjectEquivalencyTest & ObjectWithPrivateFieldsNegativeTest  for project API jballerina-unit-tests migration", "bodyText": "Purpose\n\n$Subject\n\nApproach\n\nAdded separate ballerina projects since we cannot build a single module in the new packages concept.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-11-06T09:30:39Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797", "merged": true, "mergeCommit": {"oid": "4a2d2506fb6e26184f3b2c984ace86a3c476536d"}, "closed": true, "closedAt": "2020-11-06T11:48:46Z", "author": {"login": "pramodya1994"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZziGmgH2gAyNTE2NjIxNDA3Ojk1ODEwM2Y4ZmNhZDRkODFiZjljN2M4MjU5MjJhNDJhNzlhYTcwNWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZ1mqAAFqTUyNTA4NTM0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "958103f8fcad4d81bf9c7c825922a42a79aa705f", "author": {"user": {"login": "pramodya1994", "name": "Pramodya Mendis"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/958103f8fcad4d81bf9c7c825922a42a79aa705f", "committedDate": "2020-11-06T09:27:45Z", "message": "Fix ObjectEquivalencyTest & ObjectTypeReferenceTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDc2MzE5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#pullrequestreview-525076319", "createdAt": "2020-11-06T11:37:45Z", "commit": {"oid": "958103f8fcad4d81bf9c7c825922a42a79aa705f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTozNzo0NVrOHuqugw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTozNzo0NVrOHuqugw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY5NjU3OQ==", "bodyText": "I think these are already included in https://github.com/ballerina-platform/ballerina-lang/pull/26797/files#diff-3835b6074874bfd7bcb2e191247640239cbc9c4546822113a142766502ade096R122", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#discussion_r518696579", "createdAt": "2020-11-06T11:37:45Z", "author": {"login": "hemikak"}, "path": "tests/jballerina-unit-test/src/test/resources/testng.xml", "diffHunk": "@@ -780,27 +776,7 @@\n                     <exclude name=\"testListenerObjectDefinedInDifferentPackage\"/>\n                 </methods>\n             </class>\n-            <class name=\"org.ballerinalang.test.object.ObjectEquivalencyTest\">\n-                <methods>\n-                    <exclude name=\"testEqOfPublicObjects\"/>\n-                    <exclude name=\"testEqOfPublicObjects2\"/>\n-                    <exclude name=\"testEqOfPublicObjectsInBalo\"/>\n-                    <exclude name=\"testEqOfPublicObjectsInSamePackage\"/>\n-                    <exclude name=\"testInherentTypeViolationWithNilType\"/>\n-                    <exclude name=\"testNonPublicTypedescEq\"/>\n-                    <exclude name=\"testObjectAssignabilityBetweenNonClientAndClientObject\"/>\n-                    <exclude name=\"testObjectEqualityWithDefaultConstructor\"/>\n-                    <exclude name=\"testObjectEqualityWithRecursiveTypes\"/>\n-                    <exclude name=\"testObjectEquivalenceWhenFieldsHaveModuleVisibility\"/>\n-                    <exclude name=\"testObjectEquivalenceWhenFieldsHavePublicVisibility\"/>\n-                    <exclude name=\"testObjectEquivalencyWithArguments\"/>\n-                    <exclude name=\"testObjectMemberOrder\"/>\n-                    <exclude name=\"testRuntimeEqPublicObjects\"/>\n-                    <exclude name=\"testRuntimeEqPublicObjects1\"/>\n-                    <exclude name=\"testSubtypingBetweenNonClientAndClientObject\"/>\n-                    <exclude name=\"testTupleMatchWithObjectEquivalency\"/>\n-                </methods>\n-            </class>\n+            <class name=\"org.ballerinalang.test.object.ObjectEquivalencyTest\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "958103f8fcad4d81bf9c7c825922a42a79aa705f"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDc2MzY1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#pullrequestreview-525076365", "createdAt": "2020-11-06T11:37:49Z", "commit": {"oid": "958103f8fcad4d81bf9c7c825922a42a79aa705f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTozNzo0OVrOHuqupg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTozNzo0OVrOHuqupg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY5NjYxNA==", "bodyText": "I think these are already included in https://github.com/ballerina-platform/ballerina-lang/pull/26797/files#diff-3835b6074874bfd7bcb2e191247640239cbc9c4546822113a142766502ade096R122", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#discussion_r518696614", "createdAt": "2020-11-06T11:37:49Z", "author": {"login": "hemikak"}, "path": "tests/jballerina-unit-test/src/test/resources/testng.xml", "diffHunk": "@@ -252,11 +252,7 @@\n                     <exclude name=\"testAnonStructAsStructField\"/>\n                 </methods>\n             </class>\n-            <class name=\"org.ballerinalang.test.object.ObjectTypeReferenceTest\">\n-                <methods>\n-                    <exclude name=\"testInvalidTypeReferenceAcrossModules\"/>\n-                </methods>\n-            </class>\n+            <class name=\"org.ballerinalang.test.object.ObjectTypeReferenceTest\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "958103f8fcad4d81bf9c7c825922a42a79aa705f"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4", "author": {"user": {"login": "pramodya1994", "name": "Pramodya Mendis"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f466743d749339e7e4bfeb67ffd1d87d058786d4", "committedDate": "2020-11-06T11:44:57Z", "message": "Fix ObjectWithPrivateFieldsNegativeTestwq"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDgyNjY4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#pullrequestreview-525082668", "createdAt": "2020-11-06T11:48:24Z", "commit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDg0NzI0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#pullrequestreview-525084724", "createdAt": "2020-11-06T11:51:35Z", "commit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1MTozNlrOHurH4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1MTozNlrOHurH4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODcwMzA3NQ==", "bodyText": "Shall we remove this line ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#discussion_r518703075", "createdAt": "2020-11-06T11:51:36Z", "author": {"login": "hemikak"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/object/ObjectEquivalencyTest.java", "diffHunk": "@@ -37,7 +37,7 @@\n     public void setup() {\n \n //        compileResult = BCompileUtil.compile(\"test-src/object/ObjectProject\", \"ObjectEquivalencyTest\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDg0Nzcw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#pullrequestreview-525084770", "createdAt": "2020-11-06T11:51:39Z", "commit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1MTozOVrOHurIDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1MTozOVrOHurIDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODcwMzExOA==", "bodyText": "Shall we remove this line ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#discussion_r518703118", "createdAt": "2020-11-06T11:51:39Z", "author": {"login": "hemikak"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/object/ObjectTypeReferenceTest.java", "diffHunk": "@@ -259,7 +259,7 @@ public void testTypeReferencedFunctionImplementation() {\n     @Test\n     public void testInvalidTypeReferenceAcrossModules() {\n //        CompileResult result = BCompileUtil.compile(\"test-src/object/ObjectProject\", \"object_reference_negative\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDg1MDY0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#pullrequestreview-525085064", "createdAt": "2020-11-06T11:52:04Z", "commit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1MjowNVrOHurI6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1MjowNVrOHurI6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODcwMzMzOQ==", "bodyText": "Shall we remove this line ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#discussion_r518703339", "createdAt": "2020-11-06T11:52:05Z", "author": {"login": "hemikak"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/object/ObjectWithPrivateFieldsNegativeTest.java", "diffHunk": "@@ -35,31 +35,29 @@ public void testRuntimeObjEqNegative() {\n \n //        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/ObjectProject\",\n //                \"object-private-fields-01-negative\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDg1MTI0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#pullrequestreview-525085124", "createdAt": "2020-11-06T11:52:10Z", "commit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1MjoxMFrOHurJGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1MjoxMFrOHurJGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODcwMzM4Ng==", "bodyText": "Shall we remove this line ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#discussion_r518703386", "createdAt": "2020-11-06T11:52:10Z", "author": {"login": "hemikak"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/object/ObjectWithPrivateFieldsNegativeTest.java", "diffHunk": "@@ -35,31 +35,29 @@ public void testRuntimeObjEqNegative() {\n \n //        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/ObjectProject\",\n //                \"object-private-fields-01-negative\");\n-        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/ObjectProject/object-private-fields-01\" +\n-                \"-negative\");\n+        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/RuntimeObjEgNegativeProject\");\n         BValue[] returns = BRunUtil.invoke(compileResult, \"testRuntimeObjEqNegative\");\n \n         Assert.assertEquals(returns[0].stringValue(), \"{ballerina}TypeCastError {\\\"message\\\":\\\"incompatible types:\" +\n-                \" 'org.foo:user' cannot be cast to 'object-private-fields-01-negative:userB'\\\"}\");\n+                \" 'pkg.org_foo:user' cannot be cast to 'pkg:userB'\\\"}\");\n     }\n \n     @Test(description = \"Test private field access\")\n     public void testPrivateFieldAccess() {\n \n //        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/ObjectProject\",\n //                \"object-private-fields-02-negative\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDg1MTcw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#pullrequestreview-525085170", "createdAt": "2020-11-06T11:52:15Z", "commit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1MjoxNVrOHurJQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1MjoxNVrOHurJQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODcwMzQyNw==", "bodyText": "Shall we remove this line ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#discussion_r518703427", "createdAt": "2020-11-06T11:52:15Z", "author": {"login": "hemikak"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/object/ObjectWithPrivateFieldsNegativeTest.java", "diffHunk": "@@ -35,31 +35,29 @@ public void testRuntimeObjEqNegative() {\n \n //        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/ObjectProject\",\n //                \"object-private-fields-01-negative\");\n-        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/ObjectProject/object-private-fields-01\" +\n-                \"-negative\");\n+        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/RuntimeObjEgNegativeProject\");\n         BValue[] returns = BRunUtil.invoke(compileResult, \"testRuntimeObjEqNegative\");\n \n         Assert.assertEquals(returns[0].stringValue(), \"{ballerina}TypeCastError {\\\"message\\\":\\\"incompatible types:\" +\n-                \" 'org.foo:user' cannot be cast to 'object-private-fields-01-negative:userB'\\\"}\");\n+                \" 'pkg.org_foo:user' cannot be cast to 'pkg:userB'\\\"}\");\n     }\n \n     @Test(description = \"Test private field access\")\n     public void testPrivateFieldAccess() {\n \n //        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/ObjectProject\",\n //                \"object-private-fields-02-negative\");\n-        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/ObjectProject/object-private-fields-02\" +\n-                \"-negative\");\n+        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/PrivateFieldsAccessProject\");\n \n         BAssertUtil.validateError(compileResult, 0, \"attempt to refer to non-accessible symbol 'ssn'\", 7, 18);\n-        BAssertUtil.validateError(compileResult, 1, \"undefined field 'ssn' in object 'testorg/org.foo:1.0.0:person'\",\n+        BAssertUtil.validateError(compileResult, 1, \"undefined field 'ssn' in object 'test/pkg.org_foo:1.0.0:person'\",\n                 7, 20);\n     }\n \n     @Test(description = \"Test private object access in public functions\")\n     public void testPrivateObjAccess1() {\n //        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/ObjectProject\", \"private-field1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDg1MjE5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#pullrequestreview-525085219", "createdAt": "2020-11-06T11:52:19Z", "commit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1MjoxOVrOHurJaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1MjoxOVrOHurJaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODcwMzQ2NA==", "bodyText": "Shall we remove this line ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#discussion_r518703464", "createdAt": "2020-11-06T11:52:19Z", "author": {"login": "hemikak"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/object/ObjectWithPrivateFieldsNegativeTest.java", "diffHunk": "@@ -75,7 +73,8 @@ public void testPrivateObjAccess1() {\n     @Test(description = \"Test private object access in public functions\")\n     public void testPrivateObjAccess1SemanticsNegative() {\n //        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/ObjectProject\", \"private-field1.sn\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDg1MzQ2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#pullrequestreview-525085346", "createdAt": "2020-11-06T11:52:31Z", "commit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1MjozMlrOHurJwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo1MjozMlrOHurJwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODcwMzU1Mg==", "bodyText": "Shall we remove this line ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26797#discussion_r518703552", "createdAt": "2020-11-06T11:52:32Z", "author": {"login": "hemikak"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/object/ObjectWithPrivateFieldsNegativeTest.java", "diffHunk": "@@ -94,20 +93,21 @@ public void testPrivateObjAccess1SemanticsNegative() {\n     @Test(description = \"Test private object access in public functions\")\n     public void testPrivateObjAccess2() {\n //        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/ObjectProject\", \"private-field2\");\n-        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/ObjectProject/private-field2\");\n+        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/PrivateObjAccess2Project\");\n \n         Assert.assertEquals(compileResult.getErrorCount(), 2);\n         String expectedErrMsg1 = \"attempt to refer to non-accessible symbol \";\n         int i = 0;\n         BAssertUtil.validateError(compileResult, i++, expectedErrMsg1 + \"'address'\", 10, 13);\n         BAssertUtil.validateError(compileResult, i,\n-                \"undefined field 'address' in object 'testorg/org.foo.baz:1.0.0:FooEmployee'\", 10, 18);\n+                \"undefined field 'address' in object 'test/pkg.org_foo_baz:1.0.0:FooEmployee'\", 10, 18);\n     }\n \n     @Test(description = \"Test private object access in public functions\")\n     public void testPrivateObjAccess2SemanticsNegative() {\n //        CompileResult compileResult = BCompileUtil.compile(\"test-src/object/ObjectProject\", \"private-field2.sn\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f466743d749339e7e4bfeb67ffd1d87d058786d4"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4984, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}