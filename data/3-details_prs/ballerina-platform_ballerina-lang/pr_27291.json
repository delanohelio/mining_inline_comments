{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwODUxOTAw", "number": 27291, "title": "Fix concurrent behavior issue", "bodyText": "Purpose\n$Subject\nFixes #630", "createdAt": "2020-12-02T08:45:12Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27291", "merged": true, "mergeCommit": {"oid": "c202126c8e427ef3d8e20815933db7f7fa1a65f0"}, "closed": true, "closedAt": "2020-12-03T03:17:19Z", "author": {"login": "kalaiyarasiganeshalingam"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiKbB1AH2gAyNTMwODUxOTAwOjAwMTc0NzMxNWYxYzJmNmFiYWQ4Y2JhMWI1MWFjM2JiNGJmNTA1ZWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiRRrEgFqTU0MzAyNDgxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "001747315f1c2f6abad8cba1b51ac3bb4bf505ed", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/001747315f1c2f6abad8cba1b51ac3bb4bf505ed", "committedDate": "2020-12-02T08:39:14Z", "message": "Fix concurrent behavior issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNjI3NTYw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27291#pullrequestreview-542627560", "createdAt": "2020-12-02T09:10:07Z", "commit": {"oid": "001747315f1c2f6abad8cba1b51ac3bb4bf505ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOToxMDowN1rOH9RB3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOToxMDowN1rOH9RB3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAwNDE4OQ==", "bodyText": "We need to have tryLock() here instead of having it in removeLast function.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27291#discussion_r534004189", "createdAt": "2020-12-02T09:10:07Z", "author": {"login": "ldclakmal"}, "path": "stdlib/cache/src/main/ballerina/src/cache/linked_list.bal", "diffHunk": "@@ -43,77 +43,94 @@ public type LinkedList object {\n     #\n     # + node - The node, which should be added to the provided linked list\n     public function addLast(Node node) {\n-        if (self.tail is ()) {\n-            self.head = node;\n-            self.tail = self.head;\n-            return;\n+        if (tryLock()) {\n+            if (self.tail is ()) {\n+                self.head = node;\n+                self.tail = self.head;\n+                releaseLock();\n+                return;\n+            }\n+            Node tempNode = node;\n+            Node tailNode = <Node>self.tail;\n+            tempNode.prev = tailNode;\n+            tailNode.next = tempNode;\n+            self.tail = tempNode;\n+            releaseLock();\n         }\n-        Node tempNode = node;\n-        Node tailNode = <Node>self.tail;\n-        tempNode.prev = tailNode;\n-        tailNode.next = tempNode;\n-        self.tail = tempNode;\n     }\n \n     # Adds a node to the start of the provided linked list.\n     #\n     # + node - The node, which should be added to the provided linked list\n     public function addFirst(Node node) {\n-        if (self.head is ()) {\n-            self.head = node;\n-            self.tail = self.head;\n-            return;\n+        if (tryLock()) {\n+            if (self.head is ()) {\n+                self.head = node;\n+                self.tail = self.head;\n+                releaseLock();\n+                return;\n+            }\n+            Node tempNode = node;\n+            Node headNode = <Node>self.head;\n+            tempNode.next = headNode;\n+            headNode.prev = tempNode;\n+            self.head = tempNode;\n+            releaseLock();\n         }\n-        Node tempNode = node;\n-        Node headNode = <Node>self.head;\n-        tempNode.next = headNode;\n-        headNode.prev = tempNode;\n-        self.head = tempNode;\n     }\n \n     # Removes a node from the provided linked list.\n     #\n     # + node - The node, which should be removed from the provided linked list\n     public function remove(Node node) {\n-        if (tryLock()) {\n-            if (node.prev is ()) {\n-                self.head = node.next;\n-            } else {\n-                Node prev = <Node>node.prev;\n-                prev.next = node.next;\n-            }\n-            if (node.next is ()) {\n-                self.tail = node.prev;\n-            } else {\n-                Node next = <Node>node.next;\n-                next.prev = node.prev;\n-            }\n-            node.next = ();\n-            node.prev = ();\n-            releaseLock();\n+        if (node.prev is ()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "001747315f1c2f6abad8cba1b51ac3bb4bf505ed"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNjI4MzEy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27291#pullrequestreview-542628312", "createdAt": "2020-12-02T09:10:59Z", "commit": {"oid": "001747315f1c2f6abad8cba1b51ac3bb4bf505ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOToxMDo1OVrOH9REXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOToxMDo1OVrOH9REXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAwNDgzMQ==", "bodyText": "This shouldn't be changed. This should be kept as it is. Applies to following 2 changes as well.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27291#discussion_r534004831", "createdAt": "2020-12-02T09:10:59Z", "author": {"login": "ldclakmal"}, "path": "stdlib/cache/src/main/ballerina/src/cache/lru_eviction_policy.bal", "diffHunk": "@@ -30,7 +30,7 @@ public type LruEvictionPolicy object {\n     #\n     # + node - Node of the linked list, which is retrieved\n     public function get(Node node) {\n-        self.linkedList.remove(node);\n+        var output = self.linkedList.removeLast(node);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "001747315f1c2f6abad8cba1b51ac3bb4bf505ed"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNjI5MDM1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27291#pullrequestreview-542629035", "createdAt": "2020-12-02T09:11:50Z", "commit": {"oid": "001747315f1c2f6abad8cba1b51ac3bb4bf505ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOToxMTo1MFrOH9RGeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOToxMTo1MFrOH9RGeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAwNTM2OQ==", "bodyText": "We don't need to tryLock() here. We need to call remove function inside of this function.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27291#discussion_r534005369", "createdAt": "2020-12-02T09:11:50Z", "author": {"login": "ldclakmal"}, "path": "stdlib/cache/src/main/ballerina/src/cache/linked_list.bal", "diffHunk": "@@ -43,77 +43,94 @@ public type LinkedList object {\n     #\n     # + node - The node, which should be added to the provided linked list\n     public function addLast(Node node) {\n-        if (self.tail is ()) {\n-            self.head = node;\n-            self.tail = self.head;\n-            return;\n+        if (tryLock()) {\n+            if (self.tail is ()) {\n+                self.head = node;\n+                self.tail = self.head;\n+                releaseLock();\n+                return;\n+            }\n+            Node tempNode = node;\n+            Node tailNode = <Node>self.tail;\n+            tempNode.prev = tailNode;\n+            tailNode.next = tempNode;\n+            self.tail = tempNode;\n+            releaseLock();\n         }\n-        Node tempNode = node;\n-        Node tailNode = <Node>self.tail;\n-        tempNode.prev = tailNode;\n-        tailNode.next = tempNode;\n-        self.tail = tempNode;\n     }\n \n     # Adds a node to the start of the provided linked list.\n     #\n     # + node - The node, which should be added to the provided linked list\n     public function addFirst(Node node) {\n-        if (self.head is ()) {\n-            self.head = node;\n-            self.tail = self.head;\n-            return;\n+        if (tryLock()) {\n+            if (self.head is ()) {\n+                self.head = node;\n+                self.tail = self.head;\n+                releaseLock();\n+                return;\n+            }\n+            Node tempNode = node;\n+            Node headNode = <Node>self.head;\n+            tempNode.next = headNode;\n+            headNode.prev = tempNode;\n+            self.head = tempNode;\n+            releaseLock();\n         }\n-        Node tempNode = node;\n-        Node headNode = <Node>self.head;\n-        tempNode.next = headNode;\n-        headNode.prev = tempNode;\n-        self.head = tempNode;\n     }\n \n     # Removes a node from the provided linked list.\n     #\n     # + node - The node, which should be removed from the provided linked list\n     public function remove(Node node) {\n-        if (tryLock()) {\n-            if (node.prev is ()) {\n-                self.head = node.next;\n-            } else {\n-                Node prev = <Node>node.prev;\n-                prev.next = node.next;\n-            }\n-            if (node.next is ()) {\n-                self.tail = node.prev;\n-            } else {\n-                Node next = <Node>node.next;\n-                next.prev = node.prev;\n-            }\n-            node.next = ();\n-            node.prev = ();\n-            releaseLock();\n+        if (node.prev is ()) {\n+            self.head = node.next;\n+        } else {\n+            Node prev = <Node>node.prev;\n+            prev.next = node.next;\n+        }\n+        if (node.next is ()) {\n+            self.tail = node.prev;\n+        } else {\n+            Node next = <Node>node.next;\n+            next.prev = node.prev;\n         }\n+        node.next = ();\n+        node.prev = ();\n     }\n \n     # Removes the last node from the provided linked list.\n     #\n+    # + node - The node, which should be removed from the provided linked list\n     # + return - Last node of the provided linked list or `()` if the last node is empty\n-    public function removeLast() returns Node? {\n-        if (self.tail is ()) {\n-            return ();\n+    public function removeLast(Node? node = ()) returns Node? {\n+        if (tryLock()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "001747315f1c2f6abad8cba1b51ac3bb4bf505ed"}, "originalPosition": 102}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "507825c27935d63962b724284c3a7d286d530487", "author": {"user": {"login": "kalaiyarasiganeshalingam", "name": "Kalaiyarasi Ganeshalingam"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/507825c27935d63962b724284c3a7d286d530487", "committedDate": "2020-12-02T10:23:53Z", "message": "Fix comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNzk5NTk5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27291#pullrequestreview-542799599", "createdAt": "2020-12-02T12:46:27Z", "commit": {"oid": "507825c27935d63962b724284c3a7d286d530487"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMDI0ODEz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27291#pullrequestreview-543024813", "createdAt": "2020-12-02T16:38:21Z", "commit": {"oid": "507825c27935d63962b724284c3a7d286d530487"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4704, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}