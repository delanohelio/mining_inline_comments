{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyOTkwMDM3", "number": 27347, "title": "Add missing annotation support for service objects and improve listener", "bodyText": "Purpose\nAdd back missing annotation support for services.\nAnd allow listener's attach method to control what to accept as service path.\nSecond param of listener.attach method can be any combination of string[], string, ().\nFixes: #26885, #27348, and #26838\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-12-05T09:41:45Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347", "merged": true, "mergeCommit": {"oid": "cf8b0268d76944da1b72a1e8e281ff264525bb28"}, "closed": true, "closedAt": "2020-12-09T12:20:55Z", "author": {"login": "rdhananjaya"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdixIqMAH2gAyNTMyOTkwMDM3OjgxOGNmZWRmZjlkZGM3NjY0MzA1MjZkNmY1ZGIzNzY1OTBjNGM2ZGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkdcZDAFqTU0ODEwOTQ2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "818cfedff9ddc766430526d6f5db376590c4c6de", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/818cfedff9ddc766430526d6f5db376590c4c6de", "committedDate": "2020-12-04T05:45:28Z", "message": "Allow listener to decide service path or literal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0241f43cdead4c25c8be3ebe2028acf29406c15e", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0241f43cdead4c25c8be3ebe2028acf29406c15e", "committedDate": "2020-12-05T09:37:11Z", "message": "Fix missing annotation population for services"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "340e3e5082f1aa59a64425fb8da28fb14780c761", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/340e3e5082f1aa59a64425fb8da28fb14780c761", "committedDate": "2020-12-05T09:46:57Z", "message": "Fix check-style issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bcf5ee0fcfcc82484fc21cfd1a76eccd444f22d", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3bcf5ee0fcfcc82484fc21cfd1a76eccd444f22d", "committedDate": "2020-12-06T06:39:32Z", "message": "Add annotation lambda func for services"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47d928be594fd0c4237fc0bfdd66f6f07983a276", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/47d928be594fd0c4237fc0bfdd66f6f07983a276", "committedDate": "2020-12-06T10:41:01Z", "message": "Populate service annotations before attach method\n\nCodegen an populte annotation call just before\ndesugaring service-decl to listener.attach() method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "217817f7468b711f07cddc3b82e2d5d1252904dc", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/217817f7468b711f07cddc3b82e2d5d1252904dc", "committedDate": "2020-12-06T10:58:21Z", "message": "Fix javaDoc checkstyle issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODQ4NjY1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#pullrequestreview-545848665", "createdAt": "2020-12-07T05:56:14Z", "commit": {"oid": "217817f7468b711f07cddc3b82e2d5d1252904dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNTo1NjoxNFrOIAXG3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNTo1NjoxNFrOIAXG3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI0OTUwMg==", "bodyText": "processServiceAnnotations used to be codegen-ed separately for services to specifically recompute the annotations in services that are created within a function (via https://github.com/ballerina-platform/ballerina-lang/blob/v2.0.0-Preview7/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmInstructionGen.java#L1625).\nTo continue to support the same, IMO we need to do something similar.\nThe second annotation access in the following sample used to return {i: 202}, but now returns {i: 101}.\nannotation record {int i;} x on service;\n\nint globalInt = 101;\n\npublic function getService() returns service object {} {\n    return @x {i: globalInt} service object {\n        \n    };\n}\n\npublic function main() {\n    typedesc<service object {}> t = typeof getService();\n    var v = t.@x; // {\"i\":101}\n\n    globalInt = 202;\n    t = typeof getService();\n    v = t.@x; // used to be {\"i\":202}, now {\"i\":101}\n}\nWill we be fixing this anytime soon given that it's a breaking change?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537249502", "createdAt": "2020-12-07T05:56:14Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/AnnotationUtils.java", "diffHunk": "@@ -43,12 +43,17 @@\n      * @param globalAnnotMap The global annotation map\n      * @param bType          The type for which annotations need to be set\n      */\n-    public static void processAnnotations(MapValue globalAnnotMap, Type bType) {\n+    public static void processAnnotations(MapValue globalAnnotMap, Type bType, Strand strand) {\n         if (!(bType instanceof BAnnotatableType)) {\n             return;\n         }\n \n         BAnnotatableType type = (BAnnotatableType) bType;\n+        if (type.getTag() == TypeTags.SERVICE_TAG) {\n+            processServiceAnnotations(globalAnnotMap, (BServiceType) bType, strand);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "217817f7468b711f07cddc3b82e2d5d1252904dc"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODQ5NTI0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#pullrequestreview-545849524", "createdAt": "2020-12-07T05:59:02Z", "commit": {"oid": "217817f7468b711f07cddc3b82e2d5d1252904dc"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNTo1OTowM1rOIAXKPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNjowNjowNlrOIAXTDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MDM2Nw==", "bodyText": "Should we call this hasAnnotations instead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537250367", "createdAt": "2020-12-07T05:59:03Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/types/BServiceType.java", "diffHunk": "@@ -99,4 +93,8 @@ public void setResourceFunctions(ResourceFunctionType[] resourceFunctions) {\n     public int getTag() {\n         return TypeTags.SERVICE_TAG;\n     }\n+\n+    public boolean isAnnotationsAvailable() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "217817f7468b711f07cddc3b82e2d5d1252904dc"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MjQxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (!types.isServiceObject((BObjectTypeSymbol) type.tsymbol)) {\n          \n          \n            \n                            return false;\n          \n          \n            \n                        }\n          \n          \n            \n                        return true;\n          \n          \n            \n                        return types.isServiceObject((BObjectTypeSymbol) type.tsymbol);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537252419", "createdAt": "2020-12-07T06:05:25Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -3798,18 +3796,25 @@ private boolean checkAttachMethod(BAttachedFunction func) {\n \n             // todo: change is unions are allowed as service type.\n             BType firstParamType = func.type.paramTypes.get(0);\n-            if (firstParamType.tag != TypeTags.OBJECT) {\n-                return false;\n-            }\n-\n-            if (!types.isServiceObject((BObjectTypeSymbol) firstParamType.tsymbol)) {\n+            if (!isServiceObject(firstParamType)) {\n                 return false;\n             }\n \n             BType secondParamType = func.type.paramTypes.get(1);\n-            boolean sameType = types.isSameType(this.serviceNameType, secondParamType);\n+            boolean sameType = types.isAssignable(secondParamType, this.serviceNameType);\n             return attachFound = sameType;\n \n         }\n+\n+        private boolean isServiceObject(BType type) {\n+            if (type.tag != TypeTags.OBJECT) {\n+                return false;\n+            }\n+\n+            if (!types.isServiceObject((BObjectTypeSymbol) type.tsymbol)) {\n+                return false;\n+            }\n+            return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "217817f7468b711f07cddc3b82e2d5d1252904dc"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MjU5OQ==", "bodyText": "Will these be supported in the future?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537252599", "createdAt": "2020-12-07T06:05:58Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/resources/compiler.properties", "diffHunk": "@@ -775,6 +775,22 @@ error.invalid.listener.var=\\\n error.invalid.listener.attachment=\\\n   invalid listener attachment\n \n+error.service.absolute.path.or.literal.required.by.listener=\\\n+  service absolute path or literal is required by listener\n+\n+error.service.path.literal.is.not.supported.by.listener=\\\n+  service path literal is not supported by listener\n+\n+error.service.absolute.path.is.not.supported.by.listener=\\\n+  service absolute path is not supported by listener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "217817f7468b711f07cddc3b82e2d5d1252904dc"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MjYyMw==", "bodyText": "Extra new line.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537252623", "createdAt": "2020-12-07T06:06:06Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/resources/compiler.properties", "diffHunk": "@@ -775,6 +775,22 @@ error.invalid.listener.var=\\\n error.invalid.listener.attachment=\\\n   invalid listener attachment\n \n+error.service.absolute.path.or.literal.required.by.listener=\\\n+  service absolute path or literal is required by listener\n+\n+error.service.path.literal.is.not.supported.by.listener=\\\n+  service path literal is not supported by listener\n+\n+error.service.absolute.path.is.not.supported.by.listener=\\\n+  service absolute path is not supported by listener\n+\n+error.service.path.literal.required.by.listener=\\\n+  service path literal is required by the listener\n+\n+error.service.absolute.path.required.by.listener=\\\n+  service absolute path is required by the listener\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "217817f7468b711f07cddc3b82e2d5d1252904dc"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a401819e669484416d318c78f79a84da5327b82a", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a401819e669484416d318c78f79a84da5327b82a", "committedDate": "2020-12-07T11:27:42Z", "message": "Apply review suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd669bbb594e7e320bbbb7b0817992c91c63dadd", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fd669bbb594e7e320bbbb7b0817992c91c63dadd", "committedDate": "2020-12-08T05:02:03Z", "message": "Improve annotation population for object ctors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "897984740a207f4b102986012bc6576acbc41926", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/897984740a207f4b102986012bc6576acbc41926", "committedDate": "2020-12-08T06:07:07Z", "message": "Fix annot_map pkg resolution\n\nand remove annot support lang.internal func"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "482cbe79cd783483e16e5d206253ed45393a2506", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/482cbe79cd783483e16e5d206253ed45393a2506", "committedDate": "2020-12-08T06:15:57Z", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into service-typing-dhananjaya\n\n\u0001 Conflicts:\n\u0001\ttests/jballerina-unit-test/src/test/java/org/ballerinalang/test/functions/TransactionalResourceFunctionTest.java\n\u0001\ttests/jballerina-unit-test/src/test/resources/test-src/functions/transactional_resource_functions.bal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcd9af3fb525a0af9e1d9c2feb1ca33566feee2b", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fcd9af3fb525a0af9e1d9c2feb1ca33566feee2b", "committedDate": "2020-12-08T06:29:17Z", "message": "Remove unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01dfbf85c9b2a3af92b5f7129f56ec017090bdfe", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/01dfbf85c9b2a3af92b5f7129f56ec017090bdfe", "committedDate": "2020-12-08T07:39:37Z", "message": "Re-enable disabled test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af68453960e1ebdf050b5a2448a53a1003bea2c1", "author": {"user": {"login": "rdhananjaya", "name": "Dhananjaya [Danje]"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/af68453960e1ebdf050b5a2448a53a1003bea2c1", "committedDate": "2020-12-09T11:49:43Z", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into service-typing-dhananjaya\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-lang/src/main/java/org/ballerinalang/model/elements/Flag.java\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/util/Flags.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MTA5NDY2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#pullrequestreview-548109466", "createdAt": "2020-12-09T11:56:46Z", "commit": {"oid": "af68453960e1ebdf050b5a2448a53a1003bea2c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4746, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}