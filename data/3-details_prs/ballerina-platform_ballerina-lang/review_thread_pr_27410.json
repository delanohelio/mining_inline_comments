{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MDIwMDIz", "number": 27410, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo1NTo0MVrOFLShsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNDoxMzowOVrOFL_OXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzgyMTk1OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/klass/service_class_resource_remote_function_references_neg.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo1NTo0MVrOIOYG1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo1NTo0MVrOIOYG1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0NTk0MQ==", "bodyText": "Missing the license header.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551945941", "createdAt": "2021-01-05T13:55:41Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/klass/service_class_resource_remote_function_references_neg.bal", "diffHunk": "@@ -0,0 +1,9 @@\n+type SType service object {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzgyODE4OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/klass/ServiceClassTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo1NzowNFrOIOYKPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzo1NzowNFrOIOYKPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0NjgxNA==", "bodyText": "This tests more than just the reference (inclusion), right? Shall we rename the test and the file?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551946814", "createdAt": "2021-01-05T13:57:04Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/klass/ServiceClassTest.java", "diffHunk": "@@ -60,6 +60,17 @@ public void testResourcePathParamNegative() {\n         Assert.assertEquals(index, 3);\n     }\n \n+    @Test\n+    public void testResourceFunctionReferences() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mzg0MTk4OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/resources/compiler.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDowMDo0NVrOIOYSTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDowMDo0NVrOIOYSTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0ODg3OA==", "bodyText": "Is this needed?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551948878", "createdAt": "2021-01-05T14:00:45Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/resources/compiler.properties", "diffHunk": "@@ -769,6 +769,12 @@ error.resource.function.invalid.return.type=\\\n error.remote.in.non.object.function=\\\n   remote modifier not allowed in non-object attached function {0}\n \n+error.unsupported.resource.function.declaration.in.object.type=\\\n+  unsupported resource function declaration in object type definition\n+\n+error.unsupported.remote.function.decl.in.service.obj.type=\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mzg0NTEyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/resources/compiler.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDowMTozM1rOIOYUIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDowMTozM1rOIOYUIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0OTM0Ng==", "bodyText": "Shall we use method instead?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              unsupported resource function declaration in object type definition\n          \n          \n            \n              resource method declarations are not allowed in an object type definition", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551949346", "createdAt": "2021-01-05T14:01:33Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/resources/compiler.properties", "diffHunk": "@@ -769,6 +769,12 @@ error.resource.function.invalid.return.type=\\\n error.remote.in.non.object.function=\\\n   remote modifier not allowed in non-object attached function {0}\n \n+error.unsupported.resource.function.declaration.in.object.type=\\\n+  unsupported resource function declaration in object type definition", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzkxMDY1OnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/TypeChecker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDoxODo1NFrOIOY8GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDo1NDoyNFrOIPba3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk1OTU3Nw==", "bodyText": "Do we need to check this? Can't we rely on just the resource flag for the method?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551959577", "createdAt": "2021-01-05T14:18:54Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/TypeChecker.java", "diffHunk": "@@ -1639,6 +1639,12 @@ private static boolean checkObjectSubTypeForMethods(List<TypePair> unresolvedTyp\n                                                         String targetTypeModule, String sourceTypeModule,\n                                                         BObjectType sourceType, BObjectType targetType) {\n         for (MemberFunctionType lhsFunc : targetFuncs) {\n+            // As of state-2 of service typing changes, resource functions are not considered for sub-typing.\n+            if (SymbolFlags.isFlagOn(targetType.getFlags(), SymbolFlags.SERVICE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA0ODc5Nw==", "bodyText": "Yes we shold, will remove", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r553048797", "createdAt": "2021-01-07T00:54:24Z", "author": {"login": "rdhananjaya"}, "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/TypeChecker.java", "diffHunk": "@@ -1639,6 +1639,12 @@ private static boolean checkObjectSubTypeForMethods(List<TypePair> unresolvedTyp\n                                                         String targetTypeModule, String sourceTypeModule,\n                                                         BObjectType sourceType, BObjectType targetType) {\n         for (MemberFunctionType lhsFunc : targetFuncs) {\n+            // As of state-2 of service typing changes, resource functions are not considered for sub-typing.\n+            if (SymbolFlags.isFlagOn(targetType.getFlags(), SymbolFlags.SERVICE)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk1OTU3Nw=="}, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzkxNTEyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/BIRGen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDoyMDoxM1rOIOY-6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDoyMDoxM1rOIOY-6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk2MDI5OQ==", "bodyText": "Same comment as above. Since resources are only allowed in services do we need to check this here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551960299", "createdAt": "2021-01-05T14:20:13Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/BIRGen.java", "diffHunk": "@@ -494,12 +494,17 @@ public void visit(BLangClassDefinition classDefinition) {\n \n         for (BAttachedFunction func : ((BObjectTypeSymbol) classDefinition.symbol).referencedFunctions) {\n             BInvokableSymbol funcSymbol = func.symbol;\n+            if (Symbols.isService(classDefinition.symbol)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzkxOTYyOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticErrorCode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDoyMToyNlrOIOZBsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDoyMToyNlrOIOZBsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk2MTAxMA==", "bodyText": "Shall we include the \"declaration\" part in the code?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551961010", "createdAt": "2021-01-05T14:21:26Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticErrorCode.java", "diffHunk": "@@ -653,21 +653,24 @@\n     REMOTE_FUNCTION_IN_NON_NETWORK_OBJECT(\"BCE3967\", \"remote.function.in.non.network.object\"),\n     UNSUPPORTED_PATH_PARAM_TYPE(\"BCE3968\", \"unsupported.path.param.type\"),\n     UNSUPPORTED_REST_PATH_PARAM_TYPE(\"BCE3969\", \"unsupported.rest.path.param.type\"),\n-    SERVICE_ABSOLUTE_PATH_OR_LITERAL_IS_REQUIRED_BY_LISTENER(\"BCE3970\",\n+    OBJECT_TYPE_DEF_DOES_NOT_ALLOW_RESOURCE_FUNC(\"BCE3970\", \"unsupported.resource.function.declaration.in.object.type\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzkyMjE2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDoyMjoxMFrOIOZDQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDoyMjoxMFrOIOZDQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk2MTQxMQ==", "bodyText": "Same comment as above re: checking for services first.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551961411", "createdAt": "2021-01-05T14:22:10Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -3532,6 +3528,11 @@ private void validateReferencedFunction(Location pos, BAttachedFunction func, Sy\n             return;\n         }\n \n+        // Service typing does not consider resource methods when type checking.\n+        if (Symbols.isService(func.symbol.receiverSymbol) && Symbols.isResource(func.symbol)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzkyMzYwOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDoyMjozM1rOIOZEJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDoyMjozM1rOIOZEJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk2MTYzOA==", "bodyText": "Unnecessary change?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551961638", "createdAt": "2021-01-05T14:22:33Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -1318,7 +1317,7 @@ private boolean checkStructEquivalency(BType rhsType, BType lhsType, Set<TypePai\n         return false;\n     }\n \n-    public boolean checkObjectEquivalency(BObjectType rhsType, BObjectType lhsType, Set<TypePair> unresolvedTypes) {\n+    public boolean  checkObjectEquivalency(BObjectType rhsType, BObjectType lhsType, Set<TypePair> unresolvedTypes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzkzNTU0OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDoyNTozN1rOIOZLWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDoyNTozN1rOIOZLWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk2MzQ4Mg==", "bodyText": "Do we need a separate variable here?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r551963482", "createdAt": "2021-01-05T14:25:37Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -3787,7 +3775,9 @@ private boolean checkDetachMethod(BAttachedFunction func) {\n             }\n \n             BType firstParamType = func.type.paramTypes.get(0);\n-            return detachFound = isServiceObject(firstParamType);\n+            boolean isMatchingSignature = firstParamType.tag == TypeTags.OBJECT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b08ad6cdc9f1e8a66097fcc67dce3fc174d82b"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MTExNTQwOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticErrorCode.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMzo1MzowMFrOIPeObA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMzo1MzowMFrOIPeObA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA5NDc2NA==", "bodyText": "BCE3971? Need to change the rest too.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r553094764", "createdAt": "2021-01-07T03:53:00Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/util/diagnostic/DiagnosticErrorCode.java", "diffHunk": "@@ -653,23 +653,25 @@\n     REMOTE_FUNCTION_IN_NON_NETWORK_OBJECT(\"BCE3967\", \"remote.function.in.non.network.object\"),\n     UNSUPPORTED_PATH_PARAM_TYPE(\"BCE3968\", \"unsupported.path.param.type\"),\n     UNSUPPORTED_REST_PATH_PARAM_TYPE(\"BCE3969\", \"unsupported.rest.path.param.type\"),\n-    SERVICE_ABSOLUTE_PATH_OR_LITERAL_IS_REQUIRED_BY_LISTENER(\"BCE3970\",\n+    OBJECT_TYPE_DEF_DOES_NOT_ALLOW_RESOURCE_FUNC_DECL(\"BCE3970\",\n+            \"unsupported.resource.function.declaration.in.object.type\"),\n+    SERVICE_ABSOLUTE_PATH_OR_LITERAL_IS_REQUIRED_BY_LISTENER(\"BCE3972\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0f00ae96e21c09c5a00f44251fd2dec6769ee4"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MTEzNDc5OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/BIRGen.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNDowNTo1N1rOIPeZSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNDoxMDowMlrOIPeczg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA5NzU0Nw==", "bodyText": "In what scenarios is the included function a resource declaration?\nI tried the following but ((BObjectTypeSymbol) classDefinition.symbol).referencedFunctions is empty at this point.\nservice class Foo {\n    resource function get x() returns int {\n        return 1;\n    }\n}\n\nservice class Bar {\n    *Foo;\n\n    resource function get x() returns byte {\n        return 1;\n    }\n}", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r553097547", "createdAt": "2021-01-07T04:05:57Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/BIRGen.java", "diffHunk": "@@ -494,12 +494,15 @@ public void visit(BLangClassDefinition classDefinition) {\n \n         for (BAttachedFunction func : ((BObjectTypeSymbol) classDefinition.symbol).referencedFunctions) {\n             BInvokableSymbol funcSymbol = func.symbol;\n+            if (Symbols.isResource(funcSymbol) && Symbols.isFunctionDeclaration(funcSymbol)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0f00ae96e21c09c5a00f44251fd2dec6769ee4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA5ODQ0Ng==", "bodyText": "Oh yes, this doesn't happen as we disallow resources decl.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r553098446", "createdAt": "2021-01-07T04:10:02Z", "author": {"login": "rdhananjaya"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/BIRGen.java", "diffHunk": "@@ -494,12 +494,15 @@ public void visit(BLangClassDefinition classDefinition) {\n \n         for (BAttachedFunction func : ((BObjectTypeSymbol) classDefinition.symbol).referencedFunctions) {\n             BInvokableSymbol funcSymbol = func.symbol;\n+            if (Symbols.isResource(funcSymbol) && Symbols.isFunctionDeclaration(funcSymbol)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA5NzU0Nw=="}, "originalCommit": {"oid": "ec0f00ae96e21c09c5a00f44251fd2dec6769ee4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MTE0MjEwOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNDoxMToxMFrOIPedlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNDoxMToxMFrOIPedlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA5ODY0Ng==", "bodyText": "Probably don't need the isLhsAService here also?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r553098646", "createdAt": "2021-01-07T04:11:10Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -1360,18 +1360,18 @@ public boolean checkObjectEquivalency(BObjectType rhsType, BObjectType lhsType,\n                     !isAssignable(rhsField.type, lhsField.type, unresolvedTypes)) {\n                 return false;\n             }\n-\n-            // If LHS field is a resource field, RHS field must be a resource field\n-            if (Symbols.isResource(lhsField.symbol) && !Symbols.isResource(rhsField.symbol)) {\n-                return false;\n-            }\n         }\n \n         for (BAttachedFunction lhsFunc : lhsFuncs) {\n             if (lhsFunc == lhsStructSymbol.initializerFunc) {\n                 continue;\n             }\n \n+            // Service resource methods are not considered as part of service objects type.\n+            if (isLhsAService && Symbols.isResource(lhsFunc.symbol)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0f00ae96e21c09c5a00f44251fd2dec6769ee4"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MTE0NTI1OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNDoxMzowOVrOIPefaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNDoxMzowOVrOIPefaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA5OTExMw==", "bodyText": "Can't we continue to use isServiceObject?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27410#discussion_r553099113", "createdAt": "2021-01-07T04:13:09Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -3804,7 +3794,11 @@ private boolean checkAttachMethod(BAttachedFunction func) {\n \n             // todo: change is unions are allowed as service type.\n             BType firstParamType = func.type.paramTypes.get(0);\n-            if (!isServiceObject(firstParamType)) {\n+            if (firstParamType.tag != TypeTags.OBJECT) {\n+                return false;\n+            }\n+\n+            if (!Symbols.isService(firstParamType.tsymbol)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0f00ae96e21c09c5a00f44251fd2dec6769ee4"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2901, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}