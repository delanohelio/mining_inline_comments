{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNzUwMTE3", "number": 22560, "title": "Fix API docs of module-java.arrays", "bodyText": "Purpose\n\n$titile", "createdAt": "2020-04-10T04:22:08Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22560", "merged": true, "mergeCommit": {"oid": "89eb94ad44975aa78fb0d615ce7b353e195b169b"}, "closed": true, "closedAt": "2020-04-14T05:05:24Z", "author": {"login": "chamil321"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWK9-zAH2gAyNDAxNzUwMTE3OjllN2FmNmE1M2IwNGE0MGEzMGY0ZTVlYmZmMGQzMjUwYzEzYjYwNGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWf_KmAFqTM5MTc0MjE1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9e7af6a53b04a40a30f4e5ebff0d3250c13b604a", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9e7af6a53b04a40a30f4e5ebff0d3250c13b604a", "committedDate": "2020-04-10T06:19:10Z", "message": "Fix API docs of module-java.arrays"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7334ebe13632bba809507bff037f97925b01c6ac", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7334ebe13632bba809507bff037f97925b01c6ac", "committedDate": "2020-04-10T04:20:54Z", "message": "Fix API docs of module-java.arrays"}, "afterCommit": {"oid": "9e7af6a53b04a40a30f4e5ebff0d3250c13b604a", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9e7af6a53b04a40a30f4e5ebff0d3250c13b604a", "committedDate": "2020-04-10T06:19:10Z", "message": "Fix API docs of module-java.arrays"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTM3NzAy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22560#pullrequestreview-391537702", "createdAt": "2020-04-10T16:36:51Z", "commit": {"oid": "9e7af6a53b04a40a30f4e5ebff0d3250c13b604a"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjozNjo1MVrOGD_a0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjozODoyNlrOGD_ddw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzNzk3MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For information on the operations, which you can perform with the java.arrays module, see the below **Functions**. For example on the usage of the operations, see [Java Arrays](https://ballerina.io/v1-2/learn/by-example/java-arrays.html)\n          \n          \n            \n            For information on the operations, which you can perform with the java.arrays module, see the below **Functions**. For an example on the usage of the operations, see the [Java Arrays Example](https://ballerina.io/learn/by-example/java-arrays.html)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22560#discussion_r406837970", "createdAt": "2020-04-10T16:36:51Z", "author": {"login": "praneesha"}, "path": "stdlib/java.arrays/src/main/ballerina/src/java.arrays/Module.md", "diffHunk": "@@ -1,3 +1,3 @@\n-## Module overview\n+This module provides APIs to create new Java array instances, get elements from arrays, set elements, etc. \n \n-This module provides APIs to create new Java array instances, get elements from arrays, set elements, etc. \n\\ No newline at end of file\n+For information on the operations, which you can perform with the java.arrays module, see the below **Functions**. For example on the usage of the operations, see [Java Arrays](https://ballerina.io/v1-2/learn/by-example/java-arrays.html)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e7af6a53b04a40a30f4e5ebff0d3250c13b604a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzODA4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # with a `panic`, if the specified handle refers to a Java null, or if zero dimensions have been provided.\n          \n          \n            \n            # with a `panic` if the specified handle refers to a Java null or if zero dimensions have been provided.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22560#discussion_r406838084", "createdAt": "2020-04-10T16:37:07Z", "author": {"login": "praneesha"}, "path": "stdlib/java.arrays/src/main/ballerina/src/java.arrays/java_array_utils.bal", "diffHunk": "@@ -16,48 +16,60 @@\n \n import ballerina/java;\n \n-# Returns a new Java array instance with the specified element type and dimensions.\n+# Returns a new Java array instance with the specified element type and dimensions. This function completes abruptly\n+# with a `panic`, if the specified handle refers to a Java null, or if zero dimensions have been provided.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e7af6a53b04a40a30f4e5ebff0d3250c13b604a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzODE4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Returns a `handle` that refers to the element at the specified index in the given Java array. This function\n          \n          \n            \n            # Returns a `handle`, which refers to the element at the specified index in the given Java array. This function", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22560#discussion_r406838187", "createdAt": "2020-04-10T16:37:21Z", "author": {"login": "praneesha"}, "path": "stdlib/java.arrays/src/main/ballerina/src/java.arrays/java_array_utils.bal", "diffHunk": "@@ -16,48 +16,60 @@\n \n import ballerina/java;\n \n-# Returns a new Java array instance with the specified element type and dimensions.\n+# Returns a new Java array instance with the specified element type and dimensions. This function completes abruptly\n+# with a `panic`, if the specified handle refers to a Java null, or if zero dimensions have been provided.\n+# ```ballerina\n+# handle stringClass = check java:getClass(\"java.lang.String\");\n+# handle StrArray = java.arrays:newInstance(stringClass, 4);\n+# ```\n #\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if zero dimensions have been provided.\n-#\n-# + class - the element type of the array\n-# + dimensions - the dimentions of the array\n-# + return - the new Java array instance\n+# + class - The element type of the array\n+# + dimensions - The dimentions of the array\n+# + return - The new Java array instance\n public function newInstance(public handle class, int ...dimensions) returns handle = @java:Method {\n     class: \"java.lang.reflect.Array\",\n     paramTypes: [\"java.lang.Class\", {class: \"int\", dimensions:1}]\n } external;\n \n-# Returns a `handle` that refers to the element at the specified index in the given Java array.\n-#\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if the handle does not refer to a Java array.\n+# Returns a `handle` that refers to the element at the specified index in the given Java array. This function", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e7af6a53b04a40a30f4e5ebff0d3250c13b604a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzODI1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # completes abruptly with a `panic`, if the specified handle refers to a Java null, or if the handle does not refer\n          \n          \n            \n            # completes abruptly with a `panic` if the specified handle refers to a Java null or if the handle does not refer", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22560#discussion_r406838256", "createdAt": "2020-04-10T16:37:31Z", "author": {"login": "praneesha"}, "path": "stdlib/java.arrays/src/main/ballerina/src/java.arrays/java_array_utils.bal", "diffHunk": "@@ -16,48 +16,60 @@\n \n import ballerina/java;\n \n-# Returns a new Java array instance with the specified element type and dimensions.\n+# Returns a new Java array instance with the specified element type and dimensions. This function completes abruptly\n+# with a `panic`, if the specified handle refers to a Java null, or if zero dimensions have been provided.\n+# ```ballerina\n+# handle stringClass = check java:getClass(\"java.lang.String\");\n+# handle StrArray = java.arrays:newInstance(stringClass, 4);\n+# ```\n #\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if zero dimensions have been provided.\n-#\n-# + class - the element type of the array\n-# + dimensions - the dimentions of the array\n-# + return - the new Java array instance\n+# + class - The element type of the array\n+# + dimensions - The dimentions of the array\n+# + return - The new Java array instance\n public function newInstance(public handle class, int ...dimensions) returns handle = @java:Method {\n     class: \"java.lang.reflect.Array\",\n     paramTypes: [\"java.lang.Class\", {class: \"int\", dimensions:1}]\n } external;\n \n-# Returns a `handle` that refers to the element at the specified index in the given Java array.\n-#\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if the handle does not refer to a Java array.\n+# Returns a `handle` that refers to the element at the specified index in the given Java array. This function\n+# completes abruptly with a `panic`, if the specified handle refers to a Java null, or if the handle does not refer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e7af6a53b04a40a30f4e5ebff0d3250c13b604a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzODMyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + array - The `handle` which referes to the Java array\n          \n          \n            \n            # + array - The `handle`, which refers to the Java array", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22560#discussion_r406838324", "createdAt": "2020-04-10T16:37:41Z", "author": {"login": "praneesha"}, "path": "stdlib/java.arrays/src/main/ballerina/src/java.arrays/java_array_utils.bal", "diffHunk": "@@ -16,48 +16,60 @@\n \n import ballerina/java;\n \n-# Returns a new Java array instance with the specified element type and dimensions.\n+# Returns a new Java array instance with the specified element type and dimensions. This function completes abruptly\n+# with a `panic`, if the specified handle refers to a Java null, or if zero dimensions have been provided.\n+# ```ballerina\n+# handle stringClass = check java:getClass(\"java.lang.String\");\n+# handle StrArray = java.arrays:newInstance(stringClass, 4);\n+# ```\n #\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if zero dimensions have been provided.\n-#\n-# + class - the element type of the array\n-# + dimensions - the dimentions of the array\n-# + return - the new Java array instance\n+# + class - The element type of the array\n+# + dimensions - The dimentions of the array\n+# + return - The new Java array instance\n public function newInstance(public handle class, int ...dimensions) returns handle = @java:Method {\n     class: \"java.lang.reflect.Array\",\n     paramTypes: [\"java.lang.Class\", {class: \"int\", dimensions:1}]\n } external;\n \n-# Returns a `handle` that refers to the element at the specified index in the given Java array.\n-#\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if the handle does not refer to a Java array.\n+# Returns a `handle` that refers to the element at the specified index in the given Java array. This function\n+# completes abruptly with a `panic`, if the specified handle refers to a Java null, or if the handle does not refer\n+# to a Java array.\n+# ```ballerina\n+# handle words = getSortedArray();\n+# handle firstWord = java.arrays:get(words, 0);\n+# ```\n #\n-# + array - the `handle` which referes to the Java array\n-# + index - the index of the element to be returned\n-# + return - the `handle` that refers to the element at the specified position in the Java array\n+# + array - The `handle` which referes to the Java array", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e7af6a53b04a40a30f4e5ebff0d3250c13b604a"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzODM4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The `handle` that refers to the element at the specified position in the Java array\n          \n          \n            \n            # + return - The `handle`, which refers to the element at the specified position in the Java array", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22560#discussion_r406838389", "createdAt": "2020-04-10T16:37:51Z", "author": {"login": "praneesha"}, "path": "stdlib/java.arrays/src/main/ballerina/src/java.arrays/java_array_utils.bal", "diffHunk": "@@ -16,48 +16,60 @@\n \n import ballerina/java;\n \n-# Returns a new Java array instance with the specified element type and dimensions.\n+# Returns a new Java array instance with the specified element type and dimensions. This function completes abruptly\n+# with a `panic`, if the specified handle refers to a Java null, or if zero dimensions have been provided.\n+# ```ballerina\n+# handle stringClass = check java:getClass(\"java.lang.String\");\n+# handle StrArray = java.arrays:newInstance(stringClass, 4);\n+# ```\n #\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if zero dimensions have been provided.\n-#\n-# + class - the element type of the array\n-# + dimensions - the dimentions of the array\n-# + return - the new Java array instance\n+# + class - The element type of the array\n+# + dimensions - The dimentions of the array\n+# + return - The new Java array instance\n public function newInstance(public handle class, int ...dimensions) returns handle = @java:Method {\n     class: \"java.lang.reflect.Array\",\n     paramTypes: [\"java.lang.Class\", {class: \"int\", dimensions:1}]\n } external;\n \n-# Returns a `handle` that refers to the element at the specified index in the given Java array.\n-#\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if the handle does not refer to a Java array.\n+# Returns a `handle` that refers to the element at the specified index in the given Java array. This function\n+# completes abruptly with a `panic`, if the specified handle refers to a Java null, or if the handle does not refer\n+# to a Java array.\n+# ```ballerina\n+# handle words = getSortedArray();\n+# handle firstWord = java.arrays:get(words, 0);\n+# ```\n #\n-# + array - the `handle` which referes to the Java array\n-# + index - the index of the element to be returned\n-# + return - the `handle` that refers to the element at the specified position in the Java array\n+# + array - The `handle` which referes to the Java array\n+# + index - The index of the element to be returned\n+# + return - The `handle` that refers to the element at the specified position in the Java array", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e7af6a53b04a40a30f4e5ebff0d3250c13b604a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzODQ4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # function completes abruptly with a `panic`, if the specified handle refers to a Java null, or if the handle does\n          \n          \n            \n            # function completes abruptly with a `panic` if the specified handle refers to a Java null or if the handle does", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22560#discussion_r406838487", "createdAt": "2020-04-10T16:38:04Z", "author": {"login": "praneesha"}, "path": "stdlib/java.arrays/src/main/ballerina/src/java.arrays/java_array_utils.bal", "diffHunk": "@@ -16,48 +16,60 @@\n \n import ballerina/java;\n \n-# Returns a new Java array instance with the specified element type and dimensions.\n+# Returns a new Java array instance with the specified element type and dimensions. This function completes abruptly\n+# with a `panic`, if the specified handle refers to a Java null, or if zero dimensions have been provided.\n+# ```ballerina\n+# handle stringClass = check java:getClass(\"java.lang.String\");\n+# handle StrArray = java.arrays:newInstance(stringClass, 4);\n+# ```\n #\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if zero dimensions have been provided.\n-#\n-# + class - the element type of the array\n-# + dimensions - the dimentions of the array\n-# + return - the new Java array instance\n+# + class - The element type of the array\n+# + dimensions - The dimentions of the array\n+# + return - The new Java array instance\n public function newInstance(public handle class, int ...dimensions) returns handle = @java:Method {\n     class: \"java.lang.reflect.Array\",\n     paramTypes: [\"java.lang.Class\", {class: \"int\", dimensions:1}]\n } external;\n \n-# Returns a `handle` that refers to the element at the specified index in the given Java array.\n-#\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if the handle does not refer to a Java array.\n+# Returns a `handle` that refers to the element at the specified index in the given Java array. This function\n+# completes abruptly with a `panic`, if the specified handle refers to a Java null, or if the handle does not refer\n+# to a Java array.\n+# ```ballerina\n+# handle words = getSortedArray();\n+# handle firstWord = java.arrays:get(words, 0);\n+# ```\n #\n-# + array - the `handle` which referes to the Java array\n-# + index - the index of the element to be returned\n-# + return - the `handle` that refers to the element at the specified position in the Java array\n+# + array - The `handle` which referes to the Java array\n+# + index - The index of the element to be returned\n+# + return - The `handle` that refers to the element at the specified position in the Java array\n public function get(public handle array, public int index) returns handle = @java:Method {\n     class: \"java.lang.reflect.Array\"\n } external;\n \n \n-# Replaces the indexed element at the specified index in the given Java array with the specified element.\n-#\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if the handle does not refer to a Java array.\n+# Replaces the indexed element at the specified index in the given Java array with the specified element. This\n+# function completes abruptly with a `panic`, if the specified handle refers to a Java null, or if the handle does", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e7af6a53b04a40a30f4e5ebff0d3250c13b604a"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzODU2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + array - The `handle` which referes to the Java array\n          \n          \n            \n            # + array - The `handle`, which refers to the Java array", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22560#discussion_r406838563", "createdAt": "2020-04-10T16:38:14Z", "author": {"login": "praneesha"}, "path": "stdlib/java.arrays/src/main/ballerina/src/java.arrays/java_array_utils.bal", "diffHunk": "@@ -16,48 +16,60 @@\n \n import ballerina/java;\n \n-# Returns a new Java array instance with the specified element type and dimensions.\n+# Returns a new Java array instance with the specified element type and dimensions. This function completes abruptly\n+# with a `panic`, if the specified handle refers to a Java null, or if zero dimensions have been provided.\n+# ```ballerina\n+# handle stringClass = check java:getClass(\"java.lang.String\");\n+# handle StrArray = java.arrays:newInstance(stringClass, 4);\n+# ```\n #\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if zero dimensions have been provided.\n-#\n-# + class - the element type of the array\n-# + dimensions - the dimentions of the array\n-# + return - the new Java array instance\n+# + class - The element type of the array\n+# + dimensions - The dimentions of the array\n+# + return - The new Java array instance\n public function newInstance(public handle class, int ...dimensions) returns handle = @java:Method {\n     class: \"java.lang.reflect.Array\",\n     paramTypes: [\"java.lang.Class\", {class: \"int\", dimensions:1}]\n } external;\n \n-# Returns a `handle` that refers to the element at the specified index in the given Java array.\n-#\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if the handle does not refer to a Java array.\n+# Returns a `handle` that refers to the element at the specified index in the given Java array. This function\n+# completes abruptly with a `panic`, if the specified handle refers to a Java null, or if the handle does not refer\n+# to a Java array.\n+# ```ballerina\n+# handle words = getSortedArray();\n+# handle firstWord = java.arrays:get(words, 0);\n+# ```\n #\n-# + array - the `handle` which referes to the Java array\n-# + index - the index of the element to be returned\n-# + return - the `handle` that refers to the element at the specified position in the Java array\n+# + array - The `handle` which referes to the Java array\n+# + index - The index of the element to be returned\n+# + return - The `handle` that refers to the element at the specified position in the Java array\n public function get(public handle array, public int index) returns handle = @java:Method {\n     class: \"java.lang.reflect.Array\"\n } external;\n \n \n-# Replaces the indexed element at the specified index in the given Java array with the specified element.\n-#\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if the handle does not refer to a Java array.\n+# Replaces the indexed element at the specified index in the given Java array with the specified element. This\n+# function completes abruptly with a `panic`, if the specified handle refers to a Java null, or if the handle does\n+# not refer to a Java array.\n+# ```ballerina\n+# handle strArray = getStringArray();\n+# java.arrays:set(strArray, 0, java:fromString(\"Ballerina\"));\n+# ```\n #\n-# + array - the `handle` which referes to the Java array\n-# + index - the index of the element to be replaced\n-# + element - the element to be stored at the specified index\n+# + array - The `handle` which referes to the Java array", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e7af6a53b04a40a30f4e5ebff0d3250c13b604a"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgzODY0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + array - The `handle` which referes to the Java array\n          \n          \n            \n            # + array - The `handle`, which refers to the Java array", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22560#discussion_r406838647", "createdAt": "2020-04-10T16:38:26Z", "author": {"login": "praneesha"}, "path": "stdlib/java.arrays/src/main/ballerina/src/java.arrays/java_array_utils.bal", "diffHunk": "@@ -16,48 +16,60 @@\n \n import ballerina/java;\n \n-# Returns a new Java array instance with the specified element type and dimensions.\n+# Returns a new Java array instance with the specified element type and dimensions. This function completes abruptly\n+# with a `panic`, if the specified handle refers to a Java null, or if zero dimensions have been provided.\n+# ```ballerina\n+# handle stringClass = check java:getClass(\"java.lang.String\");\n+# handle StrArray = java.arrays:newInstance(stringClass, 4);\n+# ```\n #\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if zero dimensions have been provided.\n-#\n-# + class - the element type of the array\n-# + dimensions - the dimentions of the array\n-# + return - the new Java array instance\n+# + class - The element type of the array\n+# + dimensions - The dimentions of the array\n+# + return - The new Java array instance\n public function newInstance(public handle class, int ...dimensions) returns handle = @java:Method {\n     class: \"java.lang.reflect.Array\",\n     paramTypes: [\"java.lang.Class\", {class: \"int\", dimensions:1}]\n } external;\n \n-# Returns a `handle` that refers to the element at the specified index in the given Java array.\n-#\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if the handle does not refer to a Java array.\n+# Returns a `handle` that refers to the element at the specified index in the given Java array. This function\n+# completes abruptly with a `panic`, if the specified handle refers to a Java null, or if the handle does not refer\n+# to a Java array.\n+# ```ballerina\n+# handle words = getSortedArray();\n+# handle firstWord = java.arrays:get(words, 0);\n+# ```\n #\n-# + array - the `handle` which referes to the Java array\n-# + index - the index of the element to be returned\n-# + return - the `handle` that refers to the element at the specified position in the Java array\n+# + array - The `handle` which referes to the Java array\n+# + index - The index of the element to be returned\n+# + return - The `handle` that refers to the element at the specified position in the Java array\n public function get(public handle array, public int index) returns handle = @java:Method {\n     class: \"java.lang.reflect.Array\"\n } external;\n \n \n-# Replaces the indexed element at the specified index in the given Java array with the specified element.\n-#\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if the handle does not refer to a Java array.\n+# Replaces the indexed element at the specified index in the given Java array with the specified element. This\n+# function completes abruptly with a `panic`, if the specified handle refers to a Java null, or if the handle does\n+# not refer to a Java array.\n+# ```ballerina\n+# handle strArray = getStringArray();\n+# java.arrays:set(strArray, 0, java:fromString(\"Ballerina\"));\n+# ```\n #\n-# + array - the `handle` which referes to the Java array\n-# + index - the index of the element to be replaced\n-# + element - the element to be stored at the specified index\n+# + array - The `handle` which referes to the Java array\n+# + index - The index of the element to be replaced\n+# + element - The element to be stored at the specified index\n public function set(public handle array, public int index, public handle element) = @java:Method {\n     class: \"java.lang.reflect.Array\"\n } external;\n \n # Returns the length of the given Java array.\n+# ```ballerina\n+# handle array = getArray();\n+# int length = java.arrays:getLength(array);\n+# ```\n #\n-# + array - the `handle` which referes to the Java array\n-# + return - the length of the given Java array\n+# + array - The `handle` which referes to the Java array", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e7af6a53b04a40a30f4e5ebff0d3250c13b604a"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzQwNDI4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22560#pullrequestreview-391740428", "createdAt": "2020-04-11T06:16:31Z", "commit": {"oid": "553a35fe95e11f92734638d993e4a4ca8f53c398"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjoxNjozMlrOGEKytA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjoxNzoxMVrOGEKy6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNDMwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For information on the operations, which you can perform with the java.arrays module, see the below **Functions**. For an example on the usage of the operations, see the [Java Arrays Example](https://ballerina.io/learn/by-example/java-arrays.html)\n          \n          \n            \n            For information on the operations, which you can perform with the java.arrays module, see the below **Functions**. For an example on the usage of the operations, see the [Java Arrays Example](https://ballerina.io/learn/by-example/java-arrays.html)\n          \n      \n    \n    \n  \n\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For information on the operations, which you can perform with the java.arrays module, see the below **Functions**. For an example on the usage of the operations, see the [Java Arrays Example](https://ballerina.io/learn/by-example/java-arrays.html)\n          \n          \n            \n            For information on the operations, which you can perform with the java.arrays module, see the below **Functions**. For an example on the usage of the operations, see the [Java Arrays Example](https://ballerina.io/learn/by-example/java-arrays.html).", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22560#discussion_r407024308", "createdAt": "2020-04-11T06:16:32Z", "author": {"login": "praneesha"}, "path": "stdlib/java.arrays/src/main/ballerina/src/java.arrays/Module.md", "diffHunk": "@@ -1,3 +1,3 @@\n-## Module overview\n+This module provides APIs to create new Java array instances, get elements from arrays, set elements, etc. \n \n-This module provides APIs to create new Java array instances, get elements from arrays, set elements, etc. \n\\ No newline at end of file\n+For information on the operations, which you can perform with the java.arrays module, see the below **Functions**. For an example on the usage of the operations, see the [Java Arrays Example](https://ballerina.io/learn/by-example/java-arrays.html)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "553a35fe95e11f92734638d993e4a4ca8f53c398"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNDM2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + dimensions - The dimentions of the array\n          \n          \n            \n            # + dimensions - The dimensions of the array", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22560#discussion_r407024360", "createdAt": "2020-04-11T06:17:11Z", "author": {"login": "praneesha"}, "path": "stdlib/java.arrays/src/main/ballerina/src/java.arrays/java_array_utils.bal", "diffHunk": "@@ -16,48 +16,60 @@\n \n import ballerina/java;\n \n-# Returns a new Java array instance with the specified element type and dimensions.\n+# Returns a new Java array instance with the specified element type and dimensions. This function completes abruptly\n+# with a `panic` if the specified handle refers to a Java null or if zero dimensions have been provided.\n+# ```ballerina\n+# handle stringClass = check java:getClass(\"java.lang.String\");\n+# handle StrArray = java.arrays:newInstance(stringClass, 4);\n+# ```\n #\n-# This function completes abruptly with a `panic`, if the specified handle refers to a Java null,\n-# or if zero dimensions have been provided.\n-#\n-# + class - the element type of the array\n-# + dimensions - the dimentions of the array\n-# + return - the new Java array instance\n+# + class - The element type of the array\n+# + dimensions - The dimentions of the array", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "553a35fe95e11f92734638d993e4a4ca8f53c398"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ede70e3ae27c4e1a028d48ecade74192e1f1e54", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9ede70e3ae27c4e1a028d48ecade74192e1f1e54", "committedDate": "2020-04-11T06:43:05Z", "message": "Fix review suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "553a35fe95e11f92734638d993e4a4ca8f53c398", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/553a35fe95e11f92734638d993e4a4ca8f53c398", "committedDate": "2020-04-11T06:11:01Z", "message": "Fix review suggestions"}, "afterCommit": {"oid": "9ede70e3ae27c4e1a028d48ecade74192e1f1e54", "author": {"user": {"login": "chamil321", "name": "Chamil Elladeniya"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9ede70e3ae27c4e1a028d48ecade74192e1f1e54", "committedDate": "2020-04-11T06:43:05Z", "message": "Fix review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzQyMTUy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22560#pullrequestreview-391742152", "createdAt": "2020-04-11T06:48:28Z", "commit": {"oid": "9ede70e3ae27c4e1a028d48ecade74192e1f1e54"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3879, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}