{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MTAwMDM0", "number": 21520, "title": "Add func pointer as defaultable param", "bodyText": "Purpose\n$subject. We should be able to add a default value to a function pointer when it works as a function parameter.\nFixes #21257\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-03-07T03:57:28Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520", "merged": true, "mergeCommit": {"oid": "7f3ce0f2854918e4bd386537ab8638f48bcd4062"}, "closed": true, "closedAt": "2020-03-11T10:04:52Z", "author": {"login": "KavinduZoysa"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLMCwLgH2gAyMzg1MTAwMDM0OmM3YjVjNTlmOWQ0NmIwZmUwYzM1MzhmOWNmMzM3MjY0MWYyZWQ5NWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMhxIHAH2gAyMzg1MTAwMDM0OjMwNzE4YzM2NjI2Y2Q3NzkxM2U2ZTlmZTc3YzdlOGI4ZTljMjE2M2Y=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c7b5c59f9d46b0fe0c3538f9cf3372641f2ed95b", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c7b5c59f9d46b0fe0c3538f9cf3372641f2ed95b", "committedDate": "2020-03-07T03:21:07Z", "message": "Add cachedEnv to lambda function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7d7c94628b70bdc9dc1b3b3b73b39cbb5b451ca", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f7d7c94628b70bdc9dc1b3b3b73b39cbb5b451ca", "committedDate": "2020-03-07T03:21:07Z", "message": "Add function pointer test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfc54734ecc2e7b69b428668d443728b9bd54d6c", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cfc54734ecc2e7b69b428668d443728b9bd54d6c", "committedDate": "2020-03-07T03:21:07Z", "message": "Add object init tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76d1105cd068dc326b2a3446c4901536534ba197", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/76d1105cd068dc326b2a3446c4901536534ba197", "committedDate": "2020-03-07T03:21:07Z", "message": "Handle object init"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f87f1d864823139afcfb04cd949412a5a3e12e59", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f87f1d864823139afcfb04cd949412a5a3e12e59", "committedDate": "2020-03-07T03:49:32Z", "message": "Refactor the closure env name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODA5NjUy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#pullrequestreview-370809652", "createdAt": "2020-03-08T07:22:59Z", "commit": {"oid": "f87f1d864823139afcfb04cd949412a5a3e12e59"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwNzoyMjo1OVrOFzTmcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwNzoyMjo1OVrOFzTmcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0MjgzNA==", "bodyText": "what about Lambda functions. ?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#discussion_r389342834", "createdAt": "2020-03-08T07:22:59Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -440,6 +438,21 @@ private void addRequiredParamsToGeneratedInitFunction(BLangFunction initFunction\n         }\n     }\n \n+    private BLangExpression createRequiredParamExpr(BLangExpression expr) {\n+        if (expr == null) {\n+            return null;\n+        }\n+        // Since the expression of the requiredParam of both init functions refer to same object,\n+        // expression should be cloned.\n+        BLangExpression expression = this.nodeCloner.clone(expr);\n+        if (expression.getKind() == NodeKind.ARROW_EXPR) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87f1d864823139afcfb04cd949412a5a3e12e59"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODA5Njcy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#pullrequestreview-370809672", "createdAt": "2020-03-08T07:23:35Z", "commit": {"oid": "f87f1d864823139afcfb04cd949412a5a3e12e59"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwNzoyMzozNVrOFzTmpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwNzoyMzozNVrOFzTmpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM0Mjg4NA==", "bodyText": "Shall we add an example, including lambda function as well.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#discussion_r389342884", "createdAt": "2020-03-08T07:23:35Z", "author": {"login": "hasithaa"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/object/ObjectProject/src/init/object-initializer.bal", "diffHunk": "@@ -562,3 +562,30 @@ function testConstRefsAsDefaultValue() returns (boolean) {\n     [string , int, TYPE, TYPE ] details = s.getDetails();\n     return details[0] == \"Andrew\" && details[1] == 11 && details[2] == \"John\" && details[3] == 11;\n }\n+\n+function getData(string n) returns string {\n+    return n;\n+}\n+\n+type Student11 object {\n+    string name;\n+    function __init(string n, function (string) returns string fn = (x) => \"John\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87f1d864823139afcfb04cd949412a5a3e12e59"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNjg1MTU5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#pullrequestreview-371685159", "createdAt": "2020-03-10T05:11:42Z", "commit": {"oid": "f87f1d864823139afcfb04cd949412a5a3e12e59"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNToxMTo0MlrOF0BtKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNToxMTo0MlrOF0BtKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA5ODIxOA==", "bodyText": "Shall we add a comment here explaining why we're simply assigning env instead of a clone?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#discussion_r390098218", "createdAt": "2020-03-10T05:11:42Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -4134,6 +4147,7 @@ public void visit(BLangArrowFunction bLangArrowFunction) {\n \n         lambdaFunction.function.pos = bLangArrowFunction.pos;\n         lambdaFunction.function.body.pos = bLangArrowFunction.pos;\n+        lambdaFunction.capturedClosureEnv = env;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87f1d864823139afcfb04cd949412a5a3e12e59"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNjg4MDU2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#pullrequestreview-371688056", "createdAt": "2020-03-10T05:23:10Z", "commit": {"oid": "f87f1d864823139afcfb04cd949412a5a3e12e59"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNToyMzoxMFrOF0B3dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNToyMzoxMFrOF0B3dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEwMDg1NQ==", "bodyText": "I think we don't need to clone the env here as well. But let's verify that later. Created #21547 to track this.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#discussion_r390100855", "createdAt": "2020-03-10T05:23:10Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -1043,9 +1056,9 @@ private BLangFunction desugarParticipantFunction(BLangFunction funcNode,\n         BLangLambdaFunction trxMainFunc\n                 = createLambdaFunction(funcNode.pos, \"$anonTrxParticipantFunc$\", Collections.emptyList(),\n                                        trxReturnNode, trxMainBody);\n-        trxMainWrapperFunc.cachedEnv = trxMainFunc.function.clonedEnv;\n-        commitFunc.cachedEnv = env.createClone();\n-        abortFunc.cachedEnv = env.createClone();\n+        trxMainWrapperFunc.capturedClosureEnv = trxMainFunc.function.clonedEnv;\n+        commitFunc.capturedClosureEnv = env.createClone();\n+        abortFunc.capturedClosureEnv = env.createClone();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87f1d864823139afcfb04cd949412a5a3e12e59"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNDczMDg2", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21520#pullrequestreview-372473086", "createdAt": "2020-03-11T04:44:21Z", "commit": {"oid": "f87f1d864823139afcfb04cd949412a5a3e12e59"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30718c36626cd77913e6e9fe77c7e8b8e9c2163f", "author": {"user": {"login": "KavinduZoysa", "name": null}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/30718c36626cd77913e6e9fe77c7e8b8e9c2163f", "committedDate": "2020-03-11T07:13:42Z", "message": "Support for lambda functions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3999, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}