{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NTI2MjU1", "number": 23624, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwNToyMjoxNVrOEBP39w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNjoyMjowNFrOEBm9zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NzQ0MTE5OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/CodeGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwNToyMjoxNVrOGc_CeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMDowMjo0N1rOGdFMkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA0NjEzNw==", "bodyText": "Shall we rename to baloGen or baloGenerated and remove is prefix to be consistent with other boolean variable names\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean isBaloGen;\n          \n          \n            \n                private boolean baloGen;", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23624#discussion_r433046137", "createdAt": "2020-06-01T05:22:15Z", "author": {"login": "riyafa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/CodeGenerator.java", "diffHunk": "@@ -52,18 +63,31 @@\n public class CodeGenerator {\n \n     private static final CompilerContext.Key<CodeGenerator> CODE_GEN = new CompilerContext.Key<>();\n-\n     private SymbolTable symbolTable;\n-\n-    private Map<String, BIRNode.BIRPackage> compiledPkgCache = new HashMap<>();\n-\n-    private JvmPackageGen jvmPackageGen;\n-\n-    private CodeGenerator(CompilerContext context) {\n-\n-        context.put(CODE_GEN, this);\n-        symbolTable = SymbolTable.getInstance(context);\n-        jvmPackageGen = JvmPackageGen.getInstance(context);\n+    private PackageCache packageCache;\n+    private BLangDiagnosticLogHelper dlog;\n+    private BIREmitter birEmitter;\n+    private boolean isBaloGen;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc056cdf0e7e869ebd22f8553c33f20c46c2978e"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE0NzAyNQ==", "bodyText": "ack", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23624#discussion_r433147025", "createdAt": "2020-06-01T10:02:47Z", "author": {"login": "Kishanthan"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/CodeGenerator.java", "diffHunk": "@@ -52,18 +63,31 @@\n public class CodeGenerator {\n \n     private static final CompilerContext.Key<CodeGenerator> CODE_GEN = new CompilerContext.Key<>();\n-\n     private SymbolTable symbolTable;\n-\n-    private Map<String, BIRNode.BIRPackage> compiledPkgCache = new HashMap<>();\n-\n-    private JvmPackageGen jvmPackageGen;\n-\n-    private CodeGenerator(CompilerContext context) {\n-\n-        context.put(CODE_GEN, this);\n-        symbolTable = SymbolTable.getInstance(context);\n-        jvmPackageGen = JvmPackageGen.getInstance(context);\n+    private PackageCache packageCache;\n+    private BLangDiagnosticLogHelper dlog;\n+    private BIREmitter birEmitter;\n+    private boolean isBaloGen;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA0NjEzNw=="}, "originalCommit": {"oid": "cc056cdf0e7e869ebd22f8553c33f20c46c2978e"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTIyNDQ0OnYy", "diffSide": "LEFT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/balo/imports/ImportsTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNjoyMjowNFrOGdjmCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNjo1MToyMFrOGdkTgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY0NTA2Nw==", "bodyText": "Why we need these changes in this test?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23624#discussion_r433645067", "createdAt": "2020-06-02T06:22:04Z", "author": {"login": "warunalakshitha"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/balo/imports/ImportsTests.java", "diffHunk": "@@ -43,42 +39,21 @@\n \n     private static final String USER_HOME = \"user.home\";\n     private String previousUserHome;\n-    private Path tempBir;\n     private Path imports;\n-    private Path homeBirCache;\n-    private Path birDir;\n-    private List<Path> birFiles;\n \n     @BeforeClass(description = \"Build the necessary modules.\")\n     public void setup() throws IOException {\n         Path tempDir = Files.createTempDirectory(\"temp-bal-home\");\n-\n-        tempBir = Paths.get(System.getProperty(\"user.dir\"), \"build\", \"test-bir-temp\");\n-\n         imports = Paths.get(\"test-src\", \"balo\", \"imports\");\n-\n-        homeBirCache = tempDir.resolve(Paths.get(\".ballerina\", \"bir_cache\" + \"-\" +\n-                RepoUtils.getBallerinaVersion()));\n-\n         previousUserHome = System.getProperty(USER_HOME);\n         System.setProperty(USER_HOME, tempDir.toString());\n-\n-        // Delete all existing bir files.\n-        BFileUtil.deleteAll(tempBir, \"testModule.bir\");\n     }\n \n     @Test(description = \"Get the version from the source file.\")\n-    public void testVersionSupportImportFromSourceFile() throws IOException {\n+    public void testVersionSupportImportFromSourceFile() {\n         BaloCreator.cleanCacheDirectories();\n         BaloCreator.createAndSetupBalo(imports.resolve(Paths.get(\"test_module1\", \"test_module\")).toString(),\n                 \"testOrg\", \"testModule\", \"1.1.0\");\n-        birFiles = Files.find(tempBir, Integer.MAX_VALUE, (path, attribute) ->\n-                path.toString().contains(\"testModule.bir\")\n-                        && !path.toString().contains(\"imports\")).collect(Collectors.toList());\n-        birDir = Files.createDirectories(homeBirCache.resolve(Paths.get(\"testOrg\", \"testModule\", \"1.1.0\")));\n-        BFileUtil.copy(birFiles.get(0), birDir.resolve(Paths.get(\"testModule.bir\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35af21b5874add9c7a8e52b71a5e4d9eec72c47a"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY1NjcwNQ==", "bodyText": "Because, in test, we don't write bir binaries anymore, with the new jBallerina java rewrite. So the above lines were not needed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23624#discussion_r433656705", "createdAt": "2020-06-02T06:51:20Z", "author": {"login": "Kishanthan"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/balo/imports/ImportsTests.java", "diffHunk": "@@ -43,42 +39,21 @@\n \n     private static final String USER_HOME = \"user.home\";\n     private String previousUserHome;\n-    private Path tempBir;\n     private Path imports;\n-    private Path homeBirCache;\n-    private Path birDir;\n-    private List<Path> birFiles;\n \n     @BeforeClass(description = \"Build the necessary modules.\")\n     public void setup() throws IOException {\n         Path tempDir = Files.createTempDirectory(\"temp-bal-home\");\n-\n-        tempBir = Paths.get(System.getProperty(\"user.dir\"), \"build\", \"test-bir-temp\");\n-\n         imports = Paths.get(\"test-src\", \"balo\", \"imports\");\n-\n-        homeBirCache = tempDir.resolve(Paths.get(\".ballerina\", \"bir_cache\" + \"-\" +\n-                RepoUtils.getBallerinaVersion()));\n-\n         previousUserHome = System.getProperty(USER_HOME);\n         System.setProperty(USER_HOME, tempDir.toString());\n-\n-        // Delete all existing bir files.\n-        BFileUtil.deleteAll(tempBir, \"testModule.bir\");\n     }\n \n     @Test(description = \"Get the version from the source file.\")\n-    public void testVersionSupportImportFromSourceFile() throws IOException {\n+    public void testVersionSupportImportFromSourceFile() {\n         BaloCreator.cleanCacheDirectories();\n         BaloCreator.createAndSetupBalo(imports.resolve(Paths.get(\"test_module1\", \"test_module\")).toString(),\n                 \"testOrg\", \"testModule\", \"1.1.0\");\n-        birFiles = Files.find(tempBir, Integer.MAX_VALUE, (path, attribute) ->\n-                path.toString().contains(\"testModule.bir\")\n-                        && !path.toString().contains(\"imports\")).collect(Collectors.toList());\n-        birDir = Files.createDirectories(homeBirCache.resolve(Paths.get(\"testOrg\", \"testModule\", \"1.1.0\")));\n-        BFileUtil.copy(birFiles.get(0), birDir.resolve(Paths.get(\"testModule.bir\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY0NTA2Nw=="}, "originalCommit": {"oid": "35af21b5874add9c7a8e52b71a5e4d9eec72c47a"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3531, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}