{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTAwMDcy", "number": 22791, "title": "Add types with a type-parameter", "bodyText": "Purpose\nAdd map, typedesc, future type descriptor support with recovery logic and test cases.\nFixes #22062\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-20T14:30:09Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22791", "merged": true, "mergeCommit": {"oid": "cd2a1a5f3512ca628745cfede49dc833f46f6140"}, "closed": true, "closedAt": "2020-04-28T01:34:39Z", "author": {"login": "rdulmina"}, "timelineItems": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZZt7hgH2gAyNDA2MTAwMDcyOjcwNWNiODhhMmU3ZjBkNDg4M2UyMTE5MDg2NjA1NGNmZjI2ZWNkNDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbxbBXAFqTQwMTA5NDYyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "705cb88a2e7f0d4883e21190866054cff26ecd44", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/705cb88a2e7f0d4883e21190866054cff26ecd44", "committedDate": "2020-04-20T07:11:59Z", "message": "Map type descriptor parser rule."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a3d78c272bac860b1d45b4886ea1aaaa5265283", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3a3d78c272bac860b1d45b4886ea1aaaa5265283", "committedDate": "2020-04-20T07:12:47Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into map-typedesc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5ff496a5919395cb27653b99b54467736735cd5", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d5ff496a5919395cb27653b99b54467736735cd5", "committedDate": "2020-04-20T07:26:26Z", "message": "Map type descriptor support."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e17cc4dbefbe947a39b28f7a59690f08c71c609", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5e17cc4dbefbe947a39b28f7a59690f08c71c609", "committedDate": "2020-04-20T08:03:30Z", "message": "Recovery logic for map type descriptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adb0197d349686ee4cca115bbf266cb5760fcedb", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/adb0197d349686ee4cca115bbf266cb5760fcedb", "committedDate": "2020-04-20T13:35:22Z", "message": "Test cases for map type descriptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e4290d0fc1e10a19bc4071e646e22ef2ff6d003", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1e4290d0fc1e10a19bc4071e646e22ef2ff6d003", "committedDate": "2020-04-20T13:37:34Z", "message": "Added missing files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f48ca16ffb5a7d9d6cd0d38af159fb2d71092de", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6f48ca16ffb5a7d9d6cd0d38af159fb2d71092de", "committedDate": "2020-04-20T14:09:19Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into map-typedesc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1928b33813a5ad95a2251c7a7f27279157d30b1b", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1928b33813a5ad95a2251c7a7f27279157d30b1b", "committedDate": "2020-04-21T17:17:30Z", "message": "Merge branch 'incremental-parser' of https://github.com/rdulmina/ballerina-lang into map-typedesc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d8ae5b5172a5c7bbb2eed3222cedc8746f3ae5e", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4d8ae5b5172a5c7bbb2eed3222cedc8746f3ae5e", "committedDate": "2020-04-21T17:18:30Z", "message": "Modified and added new test cases to map type desc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cea38f2af62d621dc1cfe21e68cc75503241214", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0cea38f2af62d621dc1cfe21e68cc75503241214", "committedDate": "2020-04-21T17:24:50Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into map-typedesc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f449d890e0a3fecabdef81c410d746863c69df8", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4f449d890e0a3fecabdef81c410d746863c69df8", "committedDate": "2020-04-21T17:34:09Z", "message": "Uncommented test cases.\n\nAdded missing new line and Uncommented some mistakenly commented test cases of array type and optional type."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ed88887e9ed65e00e1a3ebf5ce03da7d244f396", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2ed88887e9ed65e00e1a3ebf5ce03da7d244f396", "committedDate": "2020-04-22T08:51:57Z", "message": "Added map type desc to TYPE_DESCRIPTORS list."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90fa45d07dac74a783abfe87aa0dcd28f5619556", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/90fa45d07dac74a783abfe87aa0dcd28f5619556", "committedDate": "2020-04-22T10:12:05Z", "message": "Modified the recovery logic of array and optional type descriptor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4c23c6fbf380aa0f814c7d8cf6537b7cd8d6325", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f4c23c6fbf380aa0f814c7d8cf6537b7cd8d6325", "committedDate": "2020-04-22T11:12:38Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into map-typedesc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd9b6d3b3e3cb40693d791c1ee1c0d32f04ddcf7", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cd9b6d3b3e3cb40693d791c1ee1c0d32f04ddcf7", "committedDate": "2020-04-23T04:35:30Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into map-typedesc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64f47625c7356dc3bb2e137d4e88e30611adf068", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/64f47625c7356dc3bb2e137d4e88e30611adf068", "committedDate": "2020-04-23T10:16:10Z", "message": "Future and typedesc type descriptor support to new parser with test cases and recovery logic."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13599d4db2fff690a63661dfe3c8b156ef4a8287", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/13599d4db2fff690a63661dfe3c8b156ef4a8287", "committedDate": "2020-04-23T10:25:50Z", "message": "Undo change test1.bal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05c2f60887960f22119a18537f8fc68bb8b6ea6b", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/05c2f60887960f22119a18537f8fc68bb8b6ea6b", "committedDate": "2020-04-23T10:28:42Z", "message": "Removed extra new line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2631ba91abf42ddf5e83845f8ade748b66fde0c", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b2631ba91abf42ddf5e83845f8ade748b66fde0c", "committedDate": "2020-04-23T11:34:27Z", "message": "Removed unwanted if cases."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27cd8d59d7f7d94a8c5db1c10ee666af25d73225", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/27cd8d59d7f7d94a8c5db1c10ee666af25d73225", "committedDate": "2020-04-23T17:27:12Z", "message": "Changed the recovery logic of parameterized type desc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b88fd1c57e5491723338abe4e706b711e68a1fb4", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b88fd1c57e5491723338abe4e706b711e68a1fb4", "committedDate": "2020-04-23T17:32:52Z", "message": "Removed context type parameterized-type-desc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f495ea53bf081a936049d81dc6f8647d9abafe47", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f495ea53bf081a936049d81dc6f8647d9abafe47", "committedDate": "2020-04-23T17:39:44Z", "message": "Added missing cases to resumeParsing."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5ODYwMTc4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22791#pullrequestreview-399860178", "createdAt": "2020-04-24T11:22:44Z", "commit": {"oid": "f495ea53bf081a936049d81dc6f8647d9abafe47"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToyMjo0NFrOGLTDDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMTo1MDo0N1rOGLUAHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5OTU5Nw==", "bodyText": "unwanted/wrong doc comment", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22791#discussion_r414499597", "createdAt": "2020-04-24T11:22:44Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -5871,6 +5898,76 @@ private boolean isValidLHSExpression(SyntaxKind tokenKind) {\n     }\n \n     /**\n+     * Parse parameterized type descriptor.\n+     * parameterized-type-descriptor := map type-parameter | future type-parameter | typedesc type-parameter\n+     *\n+     * @return Parsed node\n+     */\n+    private STNode parseParameterizedTypeDescriptor() {\n+        STNode parameterizedTypeKeyword;\n+        STToken nextToken = peek();\n+\n+        switch(nextToken.kind) {\n+            case MAP_KEYWORD: // map type desc\n+                startContext(ParserRuleContext.MAP_TYPE_DESCRIPTOR);\n+                parameterizedTypeKeyword = consume();\n+                break;\n+            case FUTURE_KEYWORD: // future type desc\n+                startContext(ParserRuleContext.FUTURE_TYPE_DESCRIPTOR);\n+                parameterizedTypeKeyword = consume();\n+                break;\n+            default:// typedesc type desc\n+                startContext(ParserRuleContext.TYPEDESC_TYPE_DESCRIPTOR);\n+                if (nextToken.kind == SyntaxKind.TYPEDESC_KEYWORD) {\n+                    parameterizedTypeKeyword = consume();\n+                } else {\n+                    Solution sol = recover(nextToken, ParserRuleContext.TYPEDESC_KEYWORD);\n+                    parameterizedTypeKeyword =  sol.recoveredNode;\n+                }\n+        }\n+\n+        STNode ltToken = parseLTToken();\n+        STNode typeNode = parseTypeDescriptor();\n+        STNode gtToken = parseGTToken();\n+\n+        endContext();\n+        return STNodeFactory.createParameterizedTypeDescriptorNode(parameterizedTypeKeyword, ltToken, typeNode,\n+                gtToken);\n+    }\n+\n+\n+    /**\n+     * Parse <code> < </code> token.\n+     *\n+     * @return Parsed node\n+     */\n+    private STNode parseGTToken() {\n+        STToken nextToken = peek();\n+        if (nextToken.kind == SyntaxKind.GT_TOKEN) {\n+            return consume();\n+        } else {\n+            Solution sol = recover(nextToken, ParserRuleContext.GT);\n+            return sol.recoveredNode;\n+        }\n+    }\n+\n+    /**\n+     * Parse <code> > </code> token.\n+     *\n+     * @return Parsed node\n+     */\n+    private STNode parseLTToken() {\n+        STToken nextToken = peek();\n+        if (nextToken.kind == SyntaxKind.LT_TOKEN) {\n+            return consume();\n+        } else {\n+            Solution sol = recover(nextToken, ParserRuleContext.LT);\n+            return sol.recoveredNode;\n+        }\n+    }\n+\n+    /**\n+     * Parse null-keyword.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f495ea53bf081a936049d81dc6f8647d9abafe47"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMTA0MA==", "bodyText": "Can we live with one context?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22791#discussion_r414501040", "createdAt": "2020-04-24T11:25:18Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -5871,6 +5898,76 @@ private boolean isValidLHSExpression(SyntaxKind tokenKind) {\n     }\n \n     /**\n+     * Parse parameterized type descriptor.\n+     * parameterized-type-descriptor := map type-parameter | future type-parameter | typedesc type-parameter\n+     *\n+     * @return Parsed node\n+     */\n+    private STNode parseParameterizedTypeDescriptor() {\n+        STNode parameterizedTypeKeyword;\n+        STToken nextToken = peek();\n+\n+        switch(nextToken.kind) {\n+            case MAP_KEYWORD: // map type desc\n+                startContext(ParserRuleContext.MAP_TYPE_DESCRIPTOR);\n+                parameterizedTypeKeyword = consume();\n+                break;\n+            case FUTURE_KEYWORD: // future type desc\n+                startContext(ParserRuleContext.FUTURE_TYPE_DESCRIPTOR);\n+                parameterizedTypeKeyword = consume();\n+                break;\n+            default:// typedesc type desc\n+                startContext(ParserRuleContext.TYPEDESC_TYPE_DESCRIPTOR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f495ea53bf081a936049d81dc6f8647d9abafe47"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMzU3Mg==", "bodyText": "Can we live with one list?\nSo the issue here is the left-recursion?\nOne way to handle the left-recursion is, TYPE_DESCRIPTORS list only has non-recursive ones. But when we reach the end of type-desc (eg: getNextRuleForTypeDesc()), we have three alternative paths:\n\nNext rule for type desc, just like what we have now (lets say this is X).\nOptional type desc path, next rule is ?.\nArray type desc path. Next rule is [.\n\nThen we can check on the alternative paths [X, ?, [ ], like any other alternative path search.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22791#discussion_r414503572", "createdAt": "2020-04-24T11:29:53Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -122,7 +122,16 @@\n     // TODO: add other type descriptors\n     private static final ParserRuleContext[] TYPE_DESCRIPTORS =\n             { ParserRuleContext.SIMPLE_TYPE_DESCRIPTOR, ParserRuleContext.OBJECT_TYPE_DESCRIPTOR,\n-                    ParserRuleContext.RECORD_TYPE_DESCRIPTOR, ParserRuleContext.NIL_TYPE_DESCRIPTOR };\n+                    ParserRuleContext.RECORD_TYPE_DESCRIPTOR, ParserRuleContext.NIL_TYPE_DESCRIPTOR,\n+                    ParserRuleContext.MAP_TYPE_DESCRIPTOR, ParserRuleContext.FUTURE_TYPE_DESCRIPTOR,\n+                    ParserRuleContext.TYPEDESC_TYPE_DESCRIPTOR, ParserRuleContext.ARRAY_TYPE_DESCRIPTOR,\n+                    ParserRuleContext.OPTIONAL_TYPE_DESCRIPTOR};\n+\n+    private static final ParserRuleContext[] TYPE_DESCRIPTORS_WITHOUT_COMPLEX =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f495ea53bf081a936049d81dc6f8647d9abafe47"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxNTIyOA==", "bodyText": "we should not switch contexts other than in the getNextRule() method's switch case.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22791#discussion_r414515228", "createdAt": "2020-04-24T11:50:47Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParserErrorHandler.java", "diffHunk": "@@ -2388,21 +2450,22 @@ private ParserRuleContext getNextRuleForDot() {\n      *\n      * @return Next parser context\n      */\n-    private ParserRuleContext getNextRuleForQuestionMark() {\n+    private ParserRuleContext getNextRuleForQuestionMark(int nextLookahead) {\n         ParserRuleContext parentCtx = getParentContext();\n         switch (parentCtx) {\n             case OPTIONAL_TYPE_DESCRIPTOR:\n-                endContext();\n-                parentCtx = getParentContext();\n-                switch (parentCtx) {\n-                    case MODULE_TYPE_DEFINITION:\n-                        return ParserRuleContext.SEMICOLON;\n-                    case RETURN_TYPE_DESCRIPTOR:\n-                        return ParserRuleContext.FUNC_BODY;\n-                    default:\n-                        return ParserRuleContext.VARIABLE_NAME;\n+                STToken nextToken = this.tokenReader.peek(nextLookahead);\n+                //int?[] scenario\n+                if (nextToken.kind == SyntaxKind.OPEN_BRACKET_TOKEN) {\n+                    switchContext(ParserRuleContext.ARRAY_TYPE_DESCRIPTOR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f495ea53bf081a936049d81dc6f8647d9abafe47"}, "originalPosition": 167}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b045aed8400ad542b4ce9b0f6f3a830602c161bd", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b045aed8400ad542b4ce9b0f6f3a830602c161bd", "committedDate": "2020-04-24T18:07:22Z", "message": "Used single context to parameterized type descriptors."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNTAxOTY1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22791#pullrequestreview-400501965", "createdAt": "2020-04-26T13:01:22Z", "commit": {"oid": "f495ea53bf081a936049d81dc6f8647d9abafe47"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxMzowMToyMlrOGMEQHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxMzowMToyMlrOGMEQHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMwNTc1Nw==", "bodyText": "base should be TypeDescriptorNode... Its a newly added one with the tree-refactor", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22791#discussion_r415305757", "createdAt": "2020-04-26T13:01:22Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-treegen/src/main/resources/syntax_tree_descriptor.json", "diffHunk": "@@ -1526,6 +1526,29 @@\n                 }\n             ]\n         },\n+        {\n+            \"name\": \"ParameterizedTypeDescriptorNode\",\n+            \"base\": \"Node\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f495ea53bf081a936049d81dc6f8647d9abafe47"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5bc057c10e3cf60fc4aff29cd6e885430d6588d", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c5bc057c10e3cf60fc4aff29cd6e885430d6588d", "committedDate": "2020-04-27T06:55:51Z", "message": "Changed the recovery logic of array and optional type descriptor.\n\nUsed one list for type descriptors without recursive types. Added three alternative paths after a type descriptor. New ParserRuleContext for non recursive types."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "178e9088248670049d11b86090fbfee80f31dc09", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/178e9088248670049d11b86090fbfee80f31dc09", "committedDate": "2020-04-27T08:08:48Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into map-typedesc\n\nAdded extra test case to parameterized type desc\n# Conflicts:\n#\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java\n#\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/LexerTerminals.java\n#\tcompiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/syntax/tree/SyntaxKind.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c1f3eb7d4a8abf2d5e22570b1c7fc5a1b4cacf6", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5c1f3eb7d4a8abf2d5e22570b1c7fc5a1b4cacf6", "committedDate": "2020-04-27T08:16:10Z", "message": "Changed the base of ParameterizedTypeDescriptorNode."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33792f09fa228d940a9ec26c152cd6f3545c47eb", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/33792f09fa228d940a9ec26c152cd6f3545c47eb", "committedDate": "2020-04-27T08:21:08Z", "message": "Removed extra new lines"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39bedfc2411ad87e19e6a8e5b0f0226cffe49364", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/39bedfc2411ad87e19e6a8e5b0f0226cffe49364", "committedDate": "2020-04-27T11:18:01Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into map-typedesc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ac5f487e41002fa40fe9d32e45db34ca62795bd", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9ac5f487e41002fa40fe9d32e45db34ca62795bd", "committedDate": "2020-04-27T11:18:20Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into map-typedesc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "816f4d99f9a2af39d4e0f67bcdf233614b1b3760", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/816f4d99f9a2af39d4e0f67bcdf233614b1b3760", "committedDate": "2020-04-27T14:50:48Z", "message": "Changed the order of TYPE_OR_VAR_NAME list in errorhandler."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee3f475d20f6e4c34cf1ac4da23d7291488bf4f7", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ee3f475d20f6e4c34cf1ac4da23d7291488bf4f7", "committedDate": "2020-04-27T15:39:35Z", "message": "Merge branch 'incremental-parser' of https://github.com/ballerina-platform/ballerina-lang into map-typedesc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e048300a338cbbb9cf67bf82e58c64f0566890b0", "author": {"user": {"login": "rdulmina", "name": "Dulmina Renuke"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e048300a338cbbb9cf67bf82e58c64f0566890b0", "committedDate": "2020-04-27T15:47:57Z", "message": "Changed a wrong comment."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMDk0NjI4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22791#pullrequestreview-401094628", "createdAt": "2020-04-27T15:56:54Z", "commit": {"oid": "e048300a338cbbb9cf67bf82e58c64f0566890b0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3586, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}