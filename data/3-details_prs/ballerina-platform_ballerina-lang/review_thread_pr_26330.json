{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMTAyODgy", "number": 26330, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODoxNTo0MFrOEtXmYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODoxNzowOVrOEtXoig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDA4MDMzOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmMethodGen.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODoxNTo0MFrOHhHdbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMTo1NDoxMlrOHhPTsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4NzI3OQ==", "bodyText": "try to remove functionwrapper.\nUse only symbol.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26330#discussion_r504487279", "createdAt": "2020-10-14T08:15:40Z", "author": {"login": "HindujaB"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmMethodGen.java", "diffHunk": "@@ -1493,6 +1500,14 @@ void generateLambdaMethod(BIRInstruction ins, ClassWriter cw, String lambdaName)\n         mv.visitEnd();\n     }\n \n+    private List<BType> getInitialParamTypes(List<BType> paramTypes, int argsCount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e17a0b089584de7e6d997dcedf3019739946961"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYxNTg1Nw==", "bodyText": "we can't completely remove the function wrapper. Because, when building the pack, the langlib modules are not updated in the symbol maps until they are compiled. So only relying on symbols can cause errors", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26330#discussion_r504615857", "createdAt": "2020-10-14T11:54:12Z", "author": {"login": "HindujaB"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmMethodGen.java", "diffHunk": "@@ -1493,6 +1500,14 @@ void generateLambdaMethod(BIRInstruction ins, ClassWriter cw, String lambdaName)\n         mv.visitEnd();\n     }\n \n+    private List<BType> getInitialParamTypes(List<BType> paramTypes, int argsCount) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4NzI3OQ=="}, "originalCommit": {"oid": "9e17a0b089584de7e6d997dcedf3019739946961"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDA4NTg2OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/action/start/start_action.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODoxNzowOVrOHhHhAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODoxNzowOVrOHhHhAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ4ODE5Mw==", "bodyText": "add test for function from other pkg", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26330#discussion_r504488193", "createdAt": "2020-10-14T08:17:09Z", "author": {"login": "HindujaB"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/action/start/start_action.bal", "diffHunk": "@@ -61,3 +63,18 @@ function assert(anydata expected, anydata actual) {\n         panic error(\"{AssertionError}\", message = detail);\n     }\n }\n+\n+function testCast() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e17a0b089584de7e6d997dcedf3019739946961"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4717, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}