{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MTA3OTI0", "number": 22286, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTozNzowMVrODtBoIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTozNzowMVrODtBoIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTM5MTcxOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTozNzowMVrOF-NWpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwOTozNzowMVrOF-NWpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc3NDgyMw==", "bodyText": "Shall we replace this with a normal loop?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22286#discussion_r400774823", "createdAt": "2020-03-31T09:37:01Z", "author": {"login": "pubudu91"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TaintAnalyzer.java", "diffHunk": "@@ -2280,111 +2281,110 @@ private void analyzeInvocation(BLangInvocation invocationExpr) {\n                 }\n             }\n         }\n+\n         // Check tainted status of each argument. If argument is tainted, get the taint table when the given parameter\n         // is tainted and use it to update \"allParamsUntaintedRecord\". Do same for all parameters to identify the\n         // complete taint outcome of the current function.\n-        if (invocationExpr.argExprs != null) {\n-            int requiredParamCount = invokableSymbol.params.size();\n+        int requiredParamCount = invokableSymbol.params.size();\n \n-            int namedArgsCount = (int) invocationExpr.requiredArgs.stream()\n-                    .filter(a -> a.getKind() == NodeKind.NAMED_ARGS_EXPR).count();\n-            int requiredArgsCount = invocationExpr.requiredArgs.size() - namedArgsCount;\n-            int restArgsCount = invocationExpr.restArgs.size();\n+        int namedArgsCount = (int) invocationExpr.requiredArgs.stream()\n+                .filter(a -> a.getKind() == NodeKind.NAMED_ARGS_EXPR).count();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1162af60876eb546e5367a1b84828d811e1331fb"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4612, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}