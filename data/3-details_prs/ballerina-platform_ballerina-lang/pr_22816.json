{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NjU3OTY2", "number": 22816, "title": "Add type cast action and separate function/method calls and actions", "bodyText": "Purpose\n\nThis PR refactors how function/method calls and action invocations are modeled. Previously both these types were modeled using the BLangInvocation class. With this PR, this is separated in to two: BLangInvocation and BLangActionInvocation (a subclass of BLangInvocation). This PR also refactors how nested actions are validated. It also adds the type-cast action.\nFixes #17993\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-04-21T12:59:02Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816", "merged": true, "mergeCommit": {"oid": "efcb6883327c208920c7aee768495d5941d771b8"}, "closed": true, "closedAt": "2020-04-29T16:54:46Z", "author": {"login": "pubudu91"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaWzajgFqTM5ODc4OTgzNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABccZSgSAFqTQwMjcxODg4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4Nzg5ODM3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#pullrequestreview-398789837", "createdAt": "2020-04-23T06:22:10Z", "commit": {"oid": "53f3ab7779ecc575af947812020f9e8380eb57c6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNjoyMjoxMFrOGKYf2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNjoyMjoxMFrOGKYf2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU0MDMxNA==", "bodyText": "WDYT of using a method instead of all these. Looks a bit too verbose for this method for me :)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r413540314", "createdAt": "2020-04-23T06:22:10Z", "author": {"login": "dulvinw"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -1816,6 +1811,63 @@ public void visit(BLangInvocation iExpr) {\n         }\n     }\n \n+    public void visit(BLangInvocation.BLangActionInvocation aInv) {\n+        // For an action invocation, this will only be satisfied when it's an async call of a function.\n+        // e.g., start foo();\n+        if (aInv.expr == null) {\n+            checkFunctionInvocationExpr(aInv);\n+            return;\n+        }\n+\n+        // Module aliases cannot be used with remote method call actions\n+        if (!validateModuleAliasUsage(aInv)) {\n+            return;\n+        }\n+\n+        // Find the variable reference expression type\n+        BType exprType = checkExpr(aInv.expr, this.env, symTable.noType);\n+        BType actualType = symTable.semanticError;\n+        BLangVariableReference varRef = (BLangVariableReference) aInv.expr;\n+\n+        if (exprType == symTable.semanticError || exprType.tag != TypeTags.OBJECT ||\n+                ((varRef.symbol.tag & SymTag.ENDPOINT) != SymTag.ENDPOINT) && !aInv.async) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53f3ab7779ecc575af947812020f9e8380eb57c6"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NzkzMDEz", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#pullrequestreview-398793013", "createdAt": "2020-04-23T06:29:01Z", "commit": {"oid": "53f3ab7779ecc575af947812020f9e8380eb57c6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNjoyOTowMVrOGKYrgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNjoyOTowMVrOGKYrgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU0MzI5Ng==", "bodyText": "Wrong year?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r413543296", "createdAt": "2020-04-23T06:29:01Z", "author": {"login": "irshadnilam"}, "path": "compiler/ballerina-lang/src/main/java/org/ballerinalang/model/tree/ActionNode.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ *  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53f3ab7779ecc575af947812020f9e8380eb57c6"}, "originalPosition": 3}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6cc10d264f277a218ca7469f2aa99f38511a4a1f", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6cc10d264f277a218ca7469f2aa99f38511a4a1f", "committedDate": "2020-04-24T14:10:04Z", "message": "Allow async record field function pointer invocations"}, "afterCommit": {"oid": "ae2e123761b357260af4b9edeaf6da84ce644605", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ae2e123761b357260af4b9edeaf6da84ce644605", "committedDate": "2020-04-24T14:14:25Z", "message": "Allow async record field function pointer invocations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNTc0NzI1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#pullrequestreview-400574725", "createdAt": "2020-04-27T01:06:52Z", "commit": {"oid": "28cd437150535ae0b72602f492912aee4f571627"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMTowNjo1MlrOGMM2uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMToxNDoyM1rOGMM9cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ0NjcxMw==", "bodyText": "Shall we use\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void visit(BLangInvocation.BLangActionInvocation remoteMethodCallNode) {\n          \n          \n            \n                public void visit(BLangInvocation.BLangActionInvocation actionInvocation) {\n          \n      \n    \n    \n  \n\ninstead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r415446713", "createdAt": "2020-04-27T01:06:52Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/ConstantPropagation.java", "diffHunk": "@@ -274,6 +274,14 @@ public void visit(BLangInvocation bLangInvocationNode) {\n         result = bLangInvocationNode;\n     }\n \n+    @Override\n+    public void visit(BLangInvocation.BLangActionInvocation remoteMethodCallNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28cd437150535ae0b72602f492912aee4f571627"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ0NzM5Nw==", "bodyText": "Aren't we duplicating most of the logic from visit(BLangInvocation iExpr) here? Can't we use a common method instead?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r415447397", "createdAt": "2020-04-27T01:10:05Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -3615,6 +3614,58 @@ public void visit(BLangInvocation iExpr) {\n         fixTypeCastInTypeParamInvocation(iExpr, genIExpr);\n     }\n \n+    @Override\n+    public void visit(BLangInvocation.BLangActionInvocation actionInvocation) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28cd437150535ae0b72602f492912aee4f571627"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ0NzkyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                              boolean remoteMethodCall) {\n          \n          \n            \n                                              boolean actionInvocation) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r415447925", "createdAt": "2020-04-27T01:12:10Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangPackageBuilder.java", "diffHunk": "@@ -1654,8 +1655,16 @@ private void createSimpleVariableReference(DiagnosticPos pos, Set<Whitespace> ws\n         this.exprNodeStack.push(varRef);\n     }\n \n-    void createFunctionInvocation(DiagnosticPos pos, Set<Whitespace> ws, boolean argsAvailable) {\n-        BLangInvocation invocationNode = (BLangInvocation) TreeBuilder.createInvocationNode();\n+    void createFunctionInvocation(DiagnosticPos pos, Set<Whitespace> ws, boolean argsAvailable,\n+                                  boolean remoteMethodCall) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28cd437150535ae0b72602f492912aee4f571627"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ0ODQzNQ==", "bodyText": "Not sure if the changes to support multiple-receive-action will remove the key from normal worker receive. But shall we remove this and create an issue anyway?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#discussion_r415448435", "createdAt": "2020-04-27T01:14:23Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/parser/BLangPackageBuilder.java", "diffHunk": "@@ -3194,6 +3213,7 @@ void addWorkerReceiveExpr(DiagnosticPos pos, Set<Whitespace> ws, String workerNa\n         workerReceiveExpr.pos = pos;\n         workerReceiveExpr.addWS(ws);\n         //if there are two expressions, this is a channel receive and the top expression is the key\n+        // TODO: Not needed?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28cd437150535ae0b72602f492912aee4f571627"}, "originalPosition": 88}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28cd437150535ae0b72602f492912aee4f571627", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/28cd437150535ae0b72602f492912aee4f571627", "committedDate": "2020-04-24T18:21:14Z", "message": "Add test cases for start action"}, "afterCommit": {"oid": "f4ee1bd8603d72c3142ce028967640c4ed472514", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f4ee1bd8603d72c3142ce028967640c4ed472514", "committedDate": "2020-04-27T10:52:07Z", "message": "Improve type checking logic and error messages related to actions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e46f4344206ca5931e65530cb5686551f2ec670d", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e46f4344206ca5931e65530cb5686551f2ec670d", "committedDate": "2020-04-27T15:47:52Z", "message": "Separate function/method calls and actions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42e0b27a095bbfdd42e8d8d1e3397ad0936a738d", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/42e0b27a095bbfdd42e8d8d1e3397ad0936a738d", "committedDate": "2020-04-27T15:56:36Z", "message": "Separate async function calls from regular function calls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47d2c5dfe46dcc00beb5ea0eb824c42d23ee0e57", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/47d2c5dfe46dcc00beb5ea0eb824c42d23ee0e57", "committedDate": "2020-04-27T15:56:37Z", "message": "Refactor nested action validation logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3162235e2de6adbe8c6b7fc9ec47c72a5fa87041", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3162235e2de6adbe8c6b7fc9ec47c72a5fa87041", "committedDate": "2020-04-27T15:56:37Z", "message": "Fix broken tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c9eb77f757acd5b18fc7053e613ce1a9491c06c", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4c9eb77f757acd5b18fc7053e613ce1a9491c06c", "committedDate": "2020-04-27T15:56:37Z", "message": "Disallow async invocation of functional constructors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed36884f29ba659f73b9d58dbe79a5a80c7b78d8", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ed36884f29ba659f73b9d58dbe79a5a80c7b78d8", "committedDate": "2020-04-27T15:56:37Z", "message": "Remove isActionInvocation() method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6df36e3312306058aedd0664bb18f7b9dff07d5", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c6df36e3312306058aedd0664bb18f7b9dff07d5", "committedDate": "2020-04-27T15:56:37Z", "message": "Restrict ability to nest actions to align with the spec"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08a30223eec76825dbaa04053a87cd709b67afdd", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/08a30223eec76825dbaa04053a87cd709b67afdd", "committedDate": "2020-04-27T15:56:37Z", "message": "Add test cases for type cast action"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "838295e6760913608725f9c42b889690e83bc44e", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/838295e6760913608725f9c42b889690e83bc44e", "committedDate": "2020-04-27T15:56:38Z", "message": "Fix checkstyle issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2db27ffd0d349f3ef6de6dd5fa4c79555dfffdbd", "author": {"user": {"login": "nadeeshaan", "name": "Nadeeshaan Gunasinghe"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2db27ffd0d349f3ef6de6dd5fa4c79555dfffdbd", "committedDate": "2020-04-27T15:56:38Z", "message": "fix definition test failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bea542efcbaf76d6de348617931d3c88ad8d1d9e", "author": {"user": {"login": "gigara", "name": "Chamupathi Gigara Hettige"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bea542efcbaf76d6de348617931d3c88ad8d1d9e", "committedDate": "2020-04-27T15:56:38Z", "message": "Fix failing tests (#20)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a5025d97c12c3baef1431361f98138868561776", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5a5025d97c12c3baef1431361f98138868561776", "committedDate": "2020-04-27T15:56:38Z", "message": "Allow async record field function pointer invocations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca3d9fced304b9e3e8e243b3674e1a44761dc186", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ca3d9fced304b9e3e8e243b3674e1a44761dc186", "committedDate": "2020-04-27T15:56:38Z", "message": "Add test cases for start action"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "305359bafd7d27ce38b0389e68f5aa9e03d46fc3", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/305359bafd7d27ce38b0389e68f5aa9e03d46fc3", "committedDate": "2020-04-27T15:56:39Z", "message": "Move common code to a method for function and action invocations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "667f71a867ef8935572617dca2536786c5a185e1", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/667f71a867ef8935572617dca2536786c5a185e1", "committedDate": "2020-04-27T15:56:39Z", "message": "Improve type checking logic and error messages related to actions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d1401028e03c790f0de57fd2f2ba93ec5dd3185", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3d1401028e03c790f0de57fd2f2ba93ec5dd3185", "committedDate": "2020-04-27T15:56:39Z", "message": "Fix checkstyle issues"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4ee1bd8603d72c3142ce028967640c4ed472514", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f4ee1bd8603d72c3142ce028967640c4ed472514", "committedDate": "2020-04-27T10:52:07Z", "message": "Improve type checking logic and error messages related to actions"}, "afterCommit": {"oid": "3d1401028e03c790f0de57fd2f2ba93ec5dd3185", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3d1401028e03c790f0de57fd2f2ba93ec5dd3185", "committedDate": "2020-04-27T15:56:39Z", "message": "Fix checkstyle issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce084e7bd0167cb07a968d90f80959b908bd8809", "author": {"user": {"login": "pubudu91", "name": "Pubudu Fernando"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ce084e7bd0167cb07a968d90f80959b908bd8809", "committedDate": "2020-04-28T07:03:39Z", "message": "Fix test failures in bstring suite"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyNzE4ODgy", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22816#pullrequestreview-402718882", "createdAt": "2020-04-29T14:23:48Z", "commit": {"oid": "ce084e7bd0167cb07a968d90f80959b908bd8809"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3608, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}