{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNjM1MDc1", "number": 22189, "reviewThreads": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTowNDo0MVrODrQYLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjo1Nzo1M1rODroffA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjgzNjk0OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_filter.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTowNDo0MVrOF7fibg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTowNDo0MVrOF7fibg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkyNzAyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + scopes - Array of scopes\n          \n          \n            \n                # + scopes - Array of scopes or Array of arrays of scopes", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397927022", "createdAt": "2020-03-25T15:04:41Z", "author": {"login": "ldclakmal"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_filter.bal", "diffHunk": "@@ -23,6 +23,10 @@ public type AuthzFilter object {\n     public AuthzHandler authzHandler;\n     public Scopes? scopes;\n \n+    # Initializes the `AuthzFilter` object.\n+    #\n+    # + authzHandler - `AuthzHandler` instance for handling authorization\n+    # + scopes - Array of scopes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41ecda60d9c5ffd566b49de530a73373a1ee8d61"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2Njg0Mjk2OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/auth/basic_auth_handler.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTowNTo1OVrOF7fmTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTowNTo1OVrOF7fmTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkyODAxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + authProvider - The AuthProvider instance\n          \n          \n            \n                # + authProvider - The `InboundAuthProvider` instance or the `OutboundAuthProvider` instance", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397928015", "createdAt": "2020-03-25T15:05:59Z", "author": {"login": "ldclakmal"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/basic_auth_handler.bal", "diffHunk": "@@ -26,6 +26,9 @@ public type BasicAuthHandler object {\n \n     public auth:InboundAuthProvider|auth:OutboundAuthProvider authProvider;\n \n+    # Initializes the `BasicAuthHandler` object.\n+    #\n+    # + authProvider - The AuthProvider instance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41ecda60d9c5ffd566b49de530a73373a1ee8d61"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2Njg1MDAwOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/auth/authn_filter.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTowNzozMVrOF7fqyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTowNzozMVrOF7fqyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkyOTE2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + authHandlers - An array of authentication handlers\n          \n          \n            \n                # + authHandlers - An array of inbound authentication handlers", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397929161", "createdAt": "2020-03-25T15:07:31Z", "author": {"login": "ldclakmal"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/authn_filter.bal", "diffHunk": "@@ -21,6 +21,9 @@ public type AuthnFilter object {\n \n     public InboundAuthHandlers authHandlers;\n \n+    # Initializes the `AuthnFilter` object.\n+    #\n+    # + authHandlers - An array of authentication handlers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41ecda60d9c5ffd566b49de530a73373a1ee8d61"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzEyNzU5OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/auth/authn_filter.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowMzo1NlrOF7ic_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowMzo1NlrOF7ic_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3NDc4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Filter function implementation which tries to authenticate the response which is defined to achieve object\n          \n          \n            \n                # The `Filter` function implementation, which tries to authenticate the response, which is defined to achieve", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397974782", "createdAt": "2020-03-25T16:03:56Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/authn_filter.bal", "diffHunk": "@@ -44,6 +47,12 @@ public type AuthnFilter object {\n         return isAuthnSuccessful(caller, authenticated);\n     }\n \n+    # Filter function implementation which tries to authenticate the response which is defined to achieve object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzEzMDY2OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/auth/authn_filter.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNDozNVrOF7ie8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNDozNVrOF7ie8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3NTI4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # structural equility.\n          \n          \n            \n                # object-structural equality.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397975283", "createdAt": "2020-03-25T16:04:35Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/authn_filter.bal", "diffHunk": "@@ -44,6 +47,12 @@ public type AuthnFilter object {\n         return isAuthnSuccessful(caller, authenticated);\n     }\n \n+    # Filter function implementation which tries to authenticate the response which is defined to achieve object\n+    # structural equility.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzEzMjgwOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_filter.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNTowNVrOF7igXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNTowNVrOF7igXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3NTY0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + scopes - Array of scopes or Array of arrays of scopes\n          \n          \n            \n                # + scopes - Array of scopes or array of arrays of scopes", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397975647", "createdAt": "2020-03-25T16:05:05Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_filter.bal", "diffHunk": "@@ -23,6 +23,10 @@ public type AuthzFilter object {\n     public AuthzHandler authzHandler;\n     public Scopes? scopes;\n \n+    # Initializes the `AuthzFilter` object.\n+    #\n+    # + authzHandler - `AuthzHandler` instance for handling authorization\n+    # + scopes - Array of scopes or Array of arrays of scopes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzEzMzYyOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_filter.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNToxOVrOF7ig5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNToxOVrOF7ig5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3NTc4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Filter function implementation which tries to authorize the response which is defined to achieve object\n          \n          \n            \n                # Filter function implementation, which tries to authorize the response, which is defined to achieve", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397975782", "createdAt": "2020-03-25T16:05:19Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_filter.bal", "diffHunk": "@@ -56,6 +60,12 @@ public type AuthzFilter object {\n         return isAuthzSuccessful(caller, authorized);\n     }\n \n+    # Filter function implementation which tries to authorize the response which is defined to achieve object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzEzNDk5OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_filter.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNTozNFrOF7ihuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNTozNFrOF7ihuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3NTk5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # structural equility.\n          \n          \n            \n                # object-structural equality.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397975995", "createdAt": "2020-03-25T16:05:34Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_filter.bal", "diffHunk": "@@ -56,6 +60,12 @@ public type AuthzFilter object {\n         return isAuthzSuccessful(caller, authorized);\n     }\n \n+    # Filter function implementation which tries to authorize the response which is defined to achieve object\n+    # structural equility.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzEzNTc0OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_filter.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNTo0N1rOF7iiOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNTo0N1rOF7iiOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3NjEyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return - `true` as the functionality is not implemented\n          \n          \n            \n                # + return - Set to`true` as the functionality is not implemented", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397976120", "createdAt": "2020-03-25T16:05:47Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_filter.bal", "diffHunk": "@@ -56,6 +60,12 @@ public type AuthzFilter object {\n         return isAuthzSuccessful(caller, authorized);\n     }\n \n+    # Filter function implementation which tries to authorize the response which is defined to achieve object\n+    # structural equility.\n+    #\n+    # + response - `Response` instance\n+    # + context - `FilterContext` instance\n+    # + return - `true` as the functionality is not implemented", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzEzNzc4OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_handler.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNjoxNFrOF7ijiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDoyNDowMFrOF727rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3NjQ1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + positiveAuthzCache - `Cache` instance, which is cache positive authorizations\n          \n          \n            \n                # + positiveAuthzCache - `Cache` instance including positive authorizations", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397976459", "createdAt": "2020-03-25T16:06:14Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_handler.bal", "diffHunk": "@@ -28,6 +28,10 @@ public type AuthzHandler object {\n     public cache:Cache? positiveAuthzCache;\n     public cache:Cache? negativeAuthzCache;\n \n+    # Initializes the `AuthzHandler` object.\n+    #\n+    # + positiveAuthzCache - `Cache` instance, which is cache positive authorizations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMxMDMxNw==", "bodyText": "@praneesha, this comment, gives out the wrong meaning. We need to say something like, 'this is the cache, which keeps positive authorizations'.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r398310317", "createdAt": "2020-03-26T04:24:00Z", "author": {"login": "ldclakmal"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_handler.bal", "diffHunk": "@@ -28,6 +28,10 @@ public type AuthzHandler object {\n     public cache:Cache? positiveAuthzCache;\n     public cache:Cache? negativeAuthzCache;\n \n+    # Initializes the `AuthzHandler` object.\n+    #\n+    # + positiveAuthzCache - `Cache` instance, which is cache positive authorizations", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3NjQ1OQ=="}, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzEzOTY4OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_handler.bal", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNjozNlrOF7ikvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDoyNDoxM1rOF7276w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3Njc2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + negativeAuthzCache - `Cache` instance, which is cache negative authorizations\n          \n          \n            \n                # + negativeAuthzCache - `Cache` instance including negative authorizations", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397976767", "createdAt": "2020-03-25T16:06:36Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_handler.bal", "diffHunk": "@@ -28,6 +28,10 @@ public type AuthzHandler object {\n     public cache:Cache? positiveAuthzCache;\n     public cache:Cache? negativeAuthzCache;\n \n+    # Initializes the `AuthzHandler` object.\n+    #\n+    # + positiveAuthzCache - `Cache` instance, which is cache positive authorizations\n+    # + negativeAuthzCache - `Cache` instance, which is cache negative authorizations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMxMDM3OQ==", "bodyText": "@praneesha, this comment, gives out the wrong meaning. We need to say something like, 'this is the cache, which keeps negative authorizations'.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r398310379", "createdAt": "2020-03-26T04:24:13Z", "author": {"login": "ldclakmal"}, "path": "stdlib/http/src/main/ballerina/src/http/auth/authz_handler.bal", "diffHunk": "@@ -28,6 +28,10 @@ public type AuthzHandler object {\n     public cache:Cache? positiveAuthzCache;\n     public cache:Cache? negativeAuthzCache;\n \n+    # Initializes the `AuthzHandler` object.\n+    #\n+    # + positiveAuthzCache - `Cache` instance, which is cache positive authorizations\n+    # + negativeAuthzCache - `Cache` instance, which is cache negative authorizations", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3Njc2Nw=="}, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzE0MjI3OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNzowOFrOF7imYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNzowOFrOF7imYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3NzE4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # record is used to determine which type of additional behaviours are added to the endpoint (e.g., caching,\n          \n          \n            \n                # record is used to determine, which type of additional behaviours are added to the endpoint (e.g., caching,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397977187", "createdAt": "2020-03-25T16:07:08Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/client_endpoint.bal", "diffHunk": "@@ -38,13 +38,12 @@ public type Client client object {\n     public HttpClient httpClient;\n     public CookieStore? cookieStore = ();\n \n-    # Gets invoked to initialize the client. During initialization, the configurations provided through the `config`\n+    # Gets invoked to initialize the `client`. During initialization, the configurations provided through the `config`\n     # record is used to determine which type of additional behaviours are added to the endpoint (e.g., caching,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzE0MzU3OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/cookie/cookie.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNzoyNVrOF7inLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNzoyNVrOF7inLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3NzM5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return  - `false` if the cookie will be discarded at the end of the \"session\". Else, returns `true`\n          \n          \n            \n                # + return  - set to `false` if the cookie will be discarded at the end of the \"session\". Else, returns `true`.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397977390", "createdAt": "2020-03-25T16:07:25Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/cookie/cookie.bal", "diffHunk": "@@ -45,20 +45,28 @@ public type Cookie object {\n     public time:Time lastAccessedTime = time:currentTime();\n     public boolean hostOnly = false;\n \n+    # Initializes the `Cookie` object.\n+    #\n+    # + name - Name of the `Cookie`\n+    # + value - Value of the `Cookie`\n     public function __init(string name, string value) {\n         self.name = name;\n         self.value = value;\n     }\n \n-    // Returns false if the cookie will be discarded at the end of the \"session\"; true otherwise.\n+    # Checks the persistance of the cookie.\n+    #\n+    # + return  - `false` if the cookie will be discarded at the end of the \"session\". Else, returns `true`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzE0NDM4OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/cookie/cookie.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNzozN1rOF7invQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowNzozN1rOF7invQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3NzUzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Checks the validity of attributes of cookie.\n          \n          \n            \n                # Checks the validity of the attributes of the cookie.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397977533", "createdAt": "2020-03-25T16:07:37Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/cookie/cookie.bal", "diffHunk": "@@ -45,20 +45,28 @@ public type Cookie object {\n     public time:Time lastAccessedTime = time:currentTime();\n     public boolean hostOnly = false;\n \n+    # Initializes the `Cookie` object.\n+    #\n+    # + name - Name of the `Cookie`\n+    # + value - Value of the `Cookie`\n     public function __init(string name, string value) {\n         self.name = name;\n         self.value = value;\n     }\n \n-    // Returns false if the cookie will be discarded at the end of the \"session\"; true otherwise.\n+    # Checks the persistance of the cookie.\n+    #\n+    # + return  - `false` if the cookie will be discarded at the end of the \"session\". Else, returns `true`\n     public function isPersistent() returns boolean {\n         if (self.expires is () && self.maxAge == 0) {\n             return false;\n         }\n         return true;\n     }\n \n-    // Returns true if the attributes of the cookie are in the correct format or else error is returned.\n+    # Checks the validity of attributes of cookie.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzE0NjY0OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/cookie/cookie.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowODowNVrOF7ipMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowODowNVrOF7ipMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3NzkwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + return  - `true` if the attributes of the cookie are in the correct format, otherwise an `error`\n          \n          \n            \n                # + return  - set to `true` if the attributes of the cookie are in the correct format. Otherwise, returns an `error`.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397977904", "createdAt": "2020-03-25T16:08:05Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/cookie/cookie.bal", "diffHunk": "@@ -45,20 +45,28 @@ public type Cookie object {\n     public time:Time lastAccessedTime = time:currentTime();\n     public boolean hostOnly = false;\n \n+    # Initializes the `Cookie` object.\n+    #\n+    # + name - Name of the `Cookie`\n+    # + value - Value of the `Cookie`\n     public function __init(string name, string value) {\n         self.name = name;\n         self.value = value;\n     }\n \n-    // Returns false if the cookie will be discarded at the end of the \"session\"; true otherwise.\n+    # Checks the persistance of the cookie.\n+    #\n+    # + return  - `false` if the cookie will be discarded at the end of the \"session\". Else, returns `true`\n     public function isPersistent() returns boolean {\n         if (self.expires is () && self.maxAge == 0) {\n             return false;\n         }\n         return true;\n     }\n \n-    // Returns true if the attributes of the cookie are in the correct format or else error is returned.\n+    # Checks the validity of attributes of cookie.\n+    #\n+    # + return  - `true` if the attributes of the cookie are in the correct format, otherwise an `error`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzE0NzkxOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowODoxOVrOF7ip5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowODoxOVrOF7ip5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3ODA4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Gets invoked to initialize the native `client`. During initialization, the configurations provided through the\n          \n          \n            \n                # Gets invoked to initialize the native `client`. During initialization, the configurations are provided through the", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397978085", "createdAt": "2020-03-25T16:08:19Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_client.bal", "diffHunk": "@@ -27,6 +27,11 @@ public type HttpClient client object {\n     public ClientConfiguration config = {};\n     public string url;\n \n+    # Gets invoked to initialize the native `client`. During initialization, the configurations provided through the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzE0ODY3OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowODozMVrOF7iqbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowODozMVrOF7iqbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3ODIyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # `config`. `HttpClient` lies inside every type of clients in the chain holding the native client connector.\n          \n          \n            \n                # `config`. The `HttpClient` lies inside every type of clients in the chain holding the native client connector.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397978221", "createdAt": "2020-03-25T16:08:31Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_client.bal", "diffHunk": "@@ -27,6 +27,11 @@ public type HttpClient client object {\n     public ClientConfiguration config = {};\n     public string url;\n \n+    # Gets invoked to initialize the native `client`. During initialization, the configurations provided through the\n+    # `config`. `HttpClient` lies inside every type of clients in the chain holding the native client connector.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzE1MjQxOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_filter.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowOToxM1rOF7isvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowOToxM1rOF7isvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3ODgxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + serviceRef - The service that the filer applied\n          \n          \n            \n                # + serviceRef - The service applied applied by the filer", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397978813", "createdAt": "2020-03-25T16:09:13Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_filter.bal", "diffHunk": "@@ -53,20 +53,34 @@ public type FilterContext object {\n     private string resourceName = \"\";\n     public map<any> attributes = {};\n \n+    # Initializes the `FilterContext` object.\n+    #\n+    # + serviceRef - The service that the filer applied", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzE1MzQyOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_filter.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowOToyOVrOF7itbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjowOToyOVrOF7itbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3ODk5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Gets the service that the `FilerContext` is applied.\n          \n          \n            \n                # Gets the service to which the `FilerContext` is applied.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397978991", "createdAt": "2020-03-25T16:09:29Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_filter.bal", "diffHunk": "@@ -53,20 +53,34 @@ public type FilterContext object {\n     private string resourceName = \"\";\n     public map<any> attributes = {};\n \n+    # Initializes the `FilterContext` object.\n+    #\n+    # + serviceRef - The service that the filer applied\n+    # + serviceName - Name of the service\n+    # + resourceName - Name of the resource function\n     public function __init(service serviceRef, string serviceName, string resourceName) {\n         self.serviceRef = serviceRef;\n         self.serviceName = serviceName;\n         self.resourceName = resourceName;\n     }\n \n+    # Gets the service that the `FilerContext` is applied.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzE1NzQ0OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_filter.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoxMDoxOFrOF7iv5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoxMDoxOFrOF7iv5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3OTYyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Gets the service name that the `FilerContext` is applied.\n          \n          \n            \n                # Gets the service name to which the `FilerContext` is applied.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397979623", "createdAt": "2020-03-25T16:10:18Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_filter.bal", "diffHunk": "@@ -53,20 +53,34 @@ public type FilterContext object {\n     private string resourceName = \"\";\n     public map<any> attributes = {};\n \n+    # Initializes the `FilterContext` object.\n+    #\n+    # + serviceRef - The service that the filer applied\n+    # + serviceName - Name of the service\n+    # + resourceName - Name of the resource function\n     public function __init(service serviceRef, string serviceName, string resourceName) {\n         self.serviceRef = serviceRef;\n         self.serviceName = serviceName;\n         self.resourceName = resourceName;\n     }\n \n+    # Gets the service that the `FilerContext` is applied.\n+    #\n+    # + return  - `service` of the context\n     public function getService() returns service {\n         return self.serviceRef;\n     }\n \n+    # Gets the service name that the `FilerContext` is applied.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzE1ODc1OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_filter.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoxMDoyOVrOF7iwnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoxMDoyOVrOF7iwnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3OTgwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # Gets the resource function name that the `FilerContext` is applied.\n          \n          \n            \n                # Gets the resource function name to which the `FilerContext` is applied.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397979804", "createdAt": "2020-03-25T16:10:29Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_filter.bal", "diffHunk": "@@ -53,20 +53,34 @@ public type FilterContext object {\n     private string resourceName = \"\";\n     public map<any> attributes = {};\n \n+    # Initializes the `FilterContext` object.\n+    #\n+    # + serviceRef - The service that the filer applied\n+    # + serviceName - Name of the service\n+    # + resourceName - Name of the resource function\n     public function __init(service serviceRef, string serviceName, string resourceName) {\n         self.serviceRef = serviceRef;\n         self.serviceName = serviceName;\n         self.resourceName = resourceName;\n     }\n \n+    # Gets the service that the `FilerContext` is applied.\n+    #\n+    # + return  - `service` of the context\n     public function getService() returns service {\n         return self.serviceRef;\n     }\n \n+    # Gets the service name that the `FilerContext` is applied.\n+    #\n+    # + return  - name of the `service`\n     public function getServiceName() returns string {\n         return self.serviceName;\n     }\n \n+    # Gets the resource function name that the `FilerContext` is applied.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzE2MTU2OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/resiliency/failover_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoxMTowMFrOF7iyYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoxMTowMFrOF7iyYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4MDI1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents inferred failover configurations passed into the failover client.\n          \n          \n            \n            # Represents the inferred failover configurations passed into the failover client.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397980258", "createdAt": "2020-03-25T16:11:00Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/resiliency/failover_client_endpoint.bal", "diffHunk": "@@ -27,8 +27,7 @@ public type FailoverConfig record {|\n |};\n \n // TODO: This can be made package private\n-// Represents inferred failover configurations passed to Failover connector.\n-# Inferred failover configurations passed into the failover client.\n+# Represents inferred failover configurations passed into the failover client.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzE2MzA4OnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/resiliency/failover_client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoxMToxNVrOF7izQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoxMToxNVrOF7izQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4MDQ4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # + failoverClientConfig - The configurations of the client endpoint associated with this `Failover` instance\n          \n          \n            \n                # + failoverClientConfig - The configurations of the client endpoint associated with this `Failover` instance.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r397980481", "createdAt": "2020-03-25T16:11:15Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/resiliency/failover_client_endpoint.bal", "diffHunk": "@@ -52,7 +51,7 @@ public type FailoverClient client object {\n \n     # Failover caller actions which provides failover capabilities to an HTTP client endpoint.\n     #\n-    # + config - The configurations of the client endpoint associated with this `Failover` instance\n+    # + failoverClientConfig - The configurations of the client endpoint associated with this `Failover` instance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2f5e7eff45ab1bcdbbe075594efc1ce149fdd2"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDc4NTcwOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/client_endpoint.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjo1NzoxOVrOF8FlWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjo1NzoxOVrOF8FlWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU1MDM2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # record is used to determine, which type of additional behaviours are added to the endpoint (e.g., caching,\n          \n          \n            \n                # record is used to determine which type of additional behaviours are added to the endpoint (e.g., caching,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r398550363", "createdAt": "2020-03-26T12:57:19Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/client_endpoint.bal", "diffHunk": "@@ -38,13 +38,12 @@ public type Client client object {\n     public HttpClient httpClient;\n     public CookieStore? cookieStore = ();\n \n-    # Gets invoked to initialize the client. During initialization, the configurations provided through the `config`\n-    # record is used to determine which type of additional behaviours are added to the endpoint (e.g., caching,\n+    # Gets invoked to initialize the `client`. During initialization, the configurations provided through the `config`\n+    # record is used to determine, which type of additional behaviours are added to the endpoint (e.g., caching,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0043e181c58130ed5620bce9e59696674710aea"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDc4NzgwOnYy", "diffSide": "RIGHT", "path": "stdlib/http/src/main/ballerina/src/http/http_client.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjo1Nzo1M1rOF8FmwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjo1Nzo1M1rOF8FmwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU1MDcyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                # `config`. The `HttpClient` lies inside every type of clients in the chain holding the native client connector.\n          \n          \n            \n                # `config`. The `HttpClient` lies inside every type of client in the chain holding the native client connector.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22189#discussion_r398550721", "createdAt": "2020-03-26T12:57:53Z", "author": {"login": "praneesha"}, "path": "stdlib/http/src/main/ballerina/src/http/http_client.bal", "diffHunk": "@@ -27,6 +27,11 @@ public type HttpClient client object {\n     public ClientConfiguration config = {};\n     public string url;\n \n+    # Gets invoked to initialize the native `client`. During initialization, the configurations are provided through the\n+    # `config`. The `HttpClient` lies inside every type of clients in the chain holding the native client connector.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0043e181c58130ed5620bce9e59696674710aea"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4556, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}