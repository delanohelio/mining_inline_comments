{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1OTY3MDQ0", "number": 21555, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDowNDowOFrODmnUlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDowNDowOFrODmnUlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODE2NzI0OnYy", "diffSide": "RIGHT", "path": "stdlib/messaging/nats/src/main/java/org/ballerinalang/nats/basic/producer/CloseConnection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDowNDowOFrOF0IUnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMToyMjowNFrOF0KydA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwNjYyMw==", "bodyText": "Can we use a fine-grained method to construct a comma-separated URL from the connection object as this has similar occurrences?\n    private static String getCommaSeparatedUrl(ObjectValue connectionObject) {\n        return String.join(\",\", connectionObject.getArrayValue(Constants.URL).getStringArray());\n    }", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21555#discussion_r390206623", "createdAt": "2020-03-10T10:04:08Z", "author": {"login": "chamil321"}, "path": "stdlib/messaging/nats/src/main/java/org/ballerinalang/nats/basic/producer/CloseConnection.java", "diffHunk": "@@ -41,7 +41,8 @@ public static void closeConnection(ObjectValue producerObject) {\n         if (TypeChecker.getType(connection).getTag() == TypeTags.OBJECT_TYPE_TAG) {\n             ObjectValue connectionObject = (ObjectValue) connection;\n             ((AtomicInteger) connectionObject.getNativeData(Constants.CONNECTED_CLIENTS)).decrementAndGet();\n-            NatsMetricsUtil.reportProducerClose(connectionObject.getStringValue(Constants.URL));\n+            String[] urls = connectionObject.getArrayValue(Constants.URL).getStringArray();\n+            NatsMetricsUtil.reportProducerClose(String.join(\",\", urls));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c5ab184e91fb9ff5e4f205f46f98155588a5749"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI0NzAyOA==", "bodyText": "Fixed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21555#discussion_r390247028", "createdAt": "2020-03-10T11:22:04Z", "author": {"login": "aashikam"}, "path": "stdlib/messaging/nats/src/main/java/org/ballerinalang/nats/basic/producer/CloseConnection.java", "diffHunk": "@@ -41,7 +41,8 @@ public static void closeConnection(ObjectValue producerObject) {\n         if (TypeChecker.getType(connection).getTag() == TypeTags.OBJECT_TYPE_TAG) {\n             ObjectValue connectionObject = (ObjectValue) connection;\n             ((AtomicInteger) connectionObject.getNativeData(Constants.CONNECTED_CLIENTS)).decrementAndGet();\n-            NatsMetricsUtil.reportProducerClose(connectionObject.getStringValue(Constants.URL));\n+            String[] urls = connectionObject.getArrayValue(Constants.URL).getStringArray();\n+            NatsMetricsUtil.reportProducerClose(String.join(\",\", urls));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwNjYyMw=="}, "originalCommit": {"oid": "5c5ab184e91fb9ff5e4f205f46f98155588a5749"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 971, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}