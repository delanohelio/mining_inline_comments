{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNzQ0MTUy", "number": 23424, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNzo1Mzo0MlrOEBKcfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNDoyMzo0MlrOEBL06w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjU1MTY2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNzo1Mzo0MlrOGc3YLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzowMTozMlrOGdklHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyMDYyMw==", "bodyText": "When you replace, ArrayList with a HashSet, you lose the insertion order. That may cause intermittent test failures. Better option is to replace it with a LinkedHashSet.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23424#discussion_r432920623", "createdAt": "2020-05-31T07:53:42Z", "author": {"login": "hasithaa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -1431,7 +1432,7 @@ private void defineMembers(List<BLangTypeDefinition> typeDefNodes, SymbolEnv pkg\n                     defineNode(f, objMethodsEnv);\n                 });\n \n-                List<String> referencedFunctions = new ArrayList<>();\n+                Set<String> referencedFunctions = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25e97d2cb587ad136f09523d18d5a12e34890555"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk5MzA5OQ==", "bodyText": "This is only used to check duplicates and issue DiagnosticCode.REDECLARED_SYMBOL error message. [EDIT] I will rename this DS\n\n  \n    \n      ballerina-lang/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java\n    \n    \n         Line 1879\n      in\n      ac9058f\n    \n    \n    \n    \n\n        \n          \n           if (referencedFunctions.contains(referencedFuncName)) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23424#discussion_r432993099", "createdAt": "2020-05-31T22:58:23Z", "author": {"login": "KRVPerera"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -1431,7 +1432,7 @@ private void defineMembers(List<BLangTypeDefinition> typeDefNodes, SymbolEnv pkg\n                     defineNode(f, objMethodsEnv);\n                 });\n \n-                List<String> referencedFunctions = new ArrayList<>();\n+                Set<String> referencedFunctions = new HashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyMDYyMw=="}, "originalCommit": {"oid": "25e97d2cb587ad136f09523d18d5a12e34890555"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY2MTIxNQ==", "bodyText": "I renamed the DS to make sure it is not mistaken with referencedFunctions member field in BObjectTypeSymbol.\nCommit : 6e55b93", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23424#discussion_r433661215", "createdAt": "2020-06-02T07:01:32Z", "author": {"login": "KRVPerera"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SymbolEnter.java", "diffHunk": "@@ -1431,7 +1432,7 @@ private void defineMembers(List<BLangTypeDefinition> typeDefNodes, SymbolEnv pkg\n                     defineNode(f, objMethodsEnv);\n                 });\n \n-                List<String> referencedFunctions = new ArrayList<>();\n+                Set<String> referencedFunctions = new HashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyMDYyMw=="}, "originalCommit": {"oid": "25e97d2cb587ad136f09523d18d5a12e34890555"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjU2MjgwOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/balo/object/ObjectInBaloTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwODoxNjowN1rOGc3eMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNjo1OToxMFrOGdkhCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyMjE2Mg==", "bodyText": "We need to add a balo test case for this feature.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23424#discussion_r432922162", "createdAt": "2020-05-31T08:16:07Z", "author": {"login": "hasithaa"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/balo/object/ObjectInBaloTest.java", "diffHunk": "@@ -571,7 +571,9 @@ public void testObjectReferingTypeFromBaloNegative() {\n         int i = 0;\n         BAssertUtil.validateError(result, i++, \"undefined field 'name' in object 'Manager1'\", 25, 13);\n         BAssertUtil.validateError(result, i++, \"undefined field 'age' in object 'Manager1'\", 26, 13);\n-        BAssertUtil.validateError(result, i, \"incompatible types: 'foo:Manager1' is not an abstract object\", 38, 6);\n+        BAssertUtil.validateError(result, i,\n+                                  \"incompatible type reference 'foo:Manager1': a referenced object cannot have \" +\n+                                          \"non-public fields or methods\", 38, 6);\n     }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25e97d2cb587ad136f09523d18d5a12e34890555"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY2MDE3MQ==", "bodyText": "Added :\n\n8e86018\n95c235c", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23424#discussion_r433660171", "createdAt": "2020-06-02T06:59:10Z", "author": {"login": "KRVPerera"}, "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/balo/object/ObjectInBaloTest.java", "diffHunk": "@@ -571,7 +571,9 @@ public void testObjectReferingTypeFromBaloNegative() {\n         int i = 0;\n         BAssertUtil.validateError(result, i++, \"undefined field 'name' in object 'Manager1'\", 25, 13);\n         BAssertUtil.validateError(result, i++, \"undefined field 'age' in object 'Manager1'\", 26, 13);\n-        BAssertUtil.validateError(result, i, \"incompatible types: 'foo:Manager1' is not an abstract object\", 38, 6);\n+        BAssertUtil.validateError(result, i,\n+                                  \"incompatible type reference 'foo:Manager1': a referenced object cannot have \" +\n+                                          \"non-public fields or methods\", 38, 6);\n     }\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyMjE2Mg=="}, "originalCommit": {"oid": "25e97d2cb587ad136f09523d18d5a12e34890555"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Njc3ODAzOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-unit-test/src/test/resources/test-src/object/object-type-reference.bal", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNDoyMzo0MlrOGc5Tzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNjo1ODo0NlrOGdkgXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1MjI3MA==", "bodyText": "Why are we using testerina?\nWe don't usually import non-langlib modules for language tests, including testerina.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23424#discussion_r432952270", "createdAt": "2020-05-31T14:23:42Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/object/object-type-reference.bal", "diffHunk": "@@ -13,6 +13,7 @@\n // KIND, either express or implied.  See the License for the\n // specific language governing permissions and limitations\n // under the License.\n+import ballerina/test;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25e97d2cb587ad136f09523d18d5a12e34890555"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA2NTA5OQ==", "bodyText": "Will remove this.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23424#discussion_r433065099", "createdAt": "2020-06-01T06:36:07Z", "author": {"login": "KRVPerera"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/object/object-type-reference.bal", "diffHunk": "@@ -13,6 +13,7 @@\n // KIND, either express or implied.  See the License for the\n // specific language governing permissions and limitations\n // under the License.\n+import ballerina/test;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1MjI3MA=="}, "originalCommit": {"oid": "25e97d2cb587ad136f09523d18d5a12e34890555"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY1OTk5Nw==", "bodyText": "Done : f5f5a22", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23424#discussion_r433659997", "createdAt": "2020-06-02T06:58:46Z", "author": {"login": "KRVPerera"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/object/object-type-reference.bal", "diffHunk": "@@ -13,6 +13,7 @@\n // KIND, either express or implied.  See the License for the\n // specific language governing permissions and limitations\n // under the License.\n+import ballerina/test;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk1MjI3MA=="}, "originalCommit": {"oid": "25e97d2cb587ad136f09523d18d5a12e34890555"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3584, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}