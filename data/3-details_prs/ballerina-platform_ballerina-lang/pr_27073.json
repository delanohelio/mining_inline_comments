{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NTA0NTg5", "number": 27073, "title": "Fix decimal to anydata cast error when using cloneWithType", "bodyText": "Purpose\n\n$title. An error was generated.\n\nFixes #26624\nApproach\n\nresolveMatchingTypeForUnion method didn't have a check for decimal type. Added the check.\n\nSamples\n\n\ntype OpenRecord record {\n\n};\n\npublic function main() {\n    map<json> mp = {\n        name: \"foo\",\n        factor: 1.23d\n    };\n\n    var e = mp.cloneWithType(OpenRecord);\n\n    if (e is error) {\n       panic(\"cloneWithTypeFail\");\n    }\n}\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-11-23T07:02:02Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27073", "merged": true, "mergeCommit": {"oid": "e136c986b243b074dd2a279f4e38fddadd645313"}, "closed": true, "closedAt": "2020-11-23T17:17:56Z", "author": {"login": "dulvinw"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfPl4BAH2gAyNTI1NTA0NTg5OjBkNDE5NjhlNjliMGViNGYwMzU5MzVmY2JkNTcyODAxNDVkZGFlMzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfYb6lAFqTUzNjY4NTkzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0d41968e69b0eb4f035935fcbd57280145ddae32", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0d41968e69b0eb4f035935fcbd57280145ddae32", "committedDate": "2020-11-23T06:58:50Z", "message": "Fix TypeConverter\n\n`resolveMatchingTypeForUnion` method didnt have a check for decimal type.\nAdded the check."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NTEyMzY0", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27073#pullrequestreview-536512364", "createdAt": "2020-11-23T14:17:52Z", "commit": {"oid": "0d41968e69b0eb4f035935fcbd57280145ddae32"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNDoxNzo1MlrOH4PXEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNDoxODo1NFrOH4PZhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODczMzk3MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if(or is error) {\n          \n          \n            \n                if (or is error) {", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27073#discussion_r528733970", "createdAt": "2020-11-23T14:17:52Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/conversion/native-conversion-stampable-values.bal", "diffHunk": "@@ -66,3 +66,35 @@ function testConvertStampTupleToMap() returns [[string, Employee], [string, Empl\n     tupleValue[0] = \"Vinod\";\n     return [tupleValue, returnValue];\n }\n+\n+type OpenRecord record {\n+\n+};\n+\n+function testConvertMapJsonWithDecimalToOpenRecord() {\n+    map<json> mp = {\n+        name: \"foo\",\n+        factor: 1.23d\n+    };\n+\n+    var or = mp.cloneWithType(OpenRecord);\n+\n+    if(or is error) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d41968e69b0eb4f035935fcbd57280145ddae32"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODczNDU5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    error e = error(reason);\n          \n          \n            \n                    panic e;\n          \n          \n            \n                    panic error(reason);", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27073#discussion_r528734599", "createdAt": "2020-11-23T14:18:54Z", "author": {"login": "MaryamZi"}, "path": "tests/jballerina-unit-test/src/test/resources/test-src/expressions/conversion/native-conversion-stampable-values.bal", "diffHunk": "@@ -66,3 +66,35 @@ function testConvertStampTupleToMap() returns [[string, Employee], [string, Empl\n     tupleValue[0] = \"Vinod\";\n     return [tupleValue, returnValue];\n }\n+\n+type OpenRecord record {\n+\n+};\n+\n+function testConvertMapJsonWithDecimalToOpenRecord() {\n+    map<json> mp = {\n+        name: \"foo\",\n+        factor: 1.23d\n+    };\n+\n+    var or = mp.cloneWithType(OpenRecord);\n+\n+    if(or is error) {\n+        panic error(\"Invalid Response\", detail = \"Invalid type `error` recieved from cloneWithType\");\n+    }\n+\n+    OpenRecord castedValue = <OpenRecord>or;\n+    assert(castedValue[\"factor\"], mp[\"factor\"]);\n+    assert(castedValue[\"name\"], mp[\"name\"]);\n+}\n+\n+function assert(anydata actual, anydata expected) {\n+    if (expected != actual) {\n+        typedesc<anydata> expT = typeof expected;\n+        typedesc<anydata> actT = typeof actual;\n+        string reason = \"expected [\" + expected.toString() + \"] of type [\" + expT.toString()\n+                            + \"], but found [\" + actual.toString() + \"] of type [\" + actT.toString() + \"]\";\n+        error e = error(reason);\n+        panic e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d41968e69b0eb4f035935fcbd57280145ddae32"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "238303de327aa900336416731f0148dcb9b6aa78", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/238303de327aa900336416731f0148dcb9b6aa78", "committedDate": "2020-11-23T16:33:20Z", "message": "Add review suggestions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "38b421ee2b2488f5ab18eb356f7190cdc71ca2fc", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/38b421ee2b2488f5ab18eb356f7190cdc71ca2fc", "committedDate": "2020-11-23T16:07:20Z", "message": "Add review suggestions"}, "afterCommit": {"oid": "238303de327aa900336416731f0148dcb9b6aa78", "author": {"user": {"login": "dulvinw", "name": "Dulvin Witharane"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/238303de327aa900336416731f0148dcb9b6aa78", "committedDate": "2020-11-23T16:33:20Z", "message": "Add review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NjgxMDk3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27073#pullrequestreview-536681097", "createdAt": "2020-11-23T17:11:09Z", "commit": {"oid": "238303de327aa900336416731f0148dcb9b6aa78"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2Njg1OTM5", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27073#pullrequestreview-536685939", "createdAt": "2020-11-23T17:17:06Z", "commit": {"oid": "238303de327aa900336416731f0148dcb9b6aa78"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4944, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}