{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMzE1Nzg5", "number": 26683, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODoxMjoyMVrOE0sgeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODo0NToxN1rOE0tLVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjkwNjE2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODoxMjoyMVrOHsjsdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODoxMjoyMVrOHsjsdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ4NDIxMg==", "bodyText": "shall we make the value $0046 a constant as it is used in multiple locations.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26683#discussion_r516484212", "createdAt": "2020-11-03T08:12:21Z", "author": {"login": "riyafa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmPackageGen.java", "diffHunk": "@@ -225,7 +226,7 @@ private static boolean isLangModule(BIRPackage moduleId) {\n         if (!BALLERINA.equals(moduleId.org.value)) {\n             return false;\n         }\n-        return moduleId.name.value.indexOf(\"lang.\") == 0 || moduleId.name.equals(Names.JAVA);\n+        return moduleId.name.value.indexOf(\"lang$0046\") == 0 || moduleId.name.equals(Names.JAVA);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a1dc742500a8aa64d8bf89750dcf0c54b65a18"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjkzODgzOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/internal/FieldNameHashComparator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODoyMjo0MFrOHskANg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODoyMjo0MFrOHskANg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ4OTI3MA==", "bodyText": "can we change the since value?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26683#discussion_r516489270", "createdAt": "2020-11-03T08:22:40Z", "author": {"login": "riyafa"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/internal/FieldNameHashComparator.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.wso2.ballerinalang.compiler.bir.codegen.internal;\n+\n+import io.ballerina.runtime.IdentifierUtils;\n+import org.wso2.ballerinalang.compiler.semantics.model.types.NamedNode;\n+\n+import java.util.Comparator;\n+\n+/**\n+ * BIR Param name comparator to sort according its hash code.\n+ *\n+ * @since 1.2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a1dc742500a8aa64d8bf89750dcf0c54b65a18"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjk0NDE5OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/identifier/IdentifierLiteralTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODoyNDoyNVrOHskDkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODoyNDoyNVrOHskDkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ5MDEzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            package org.ballerinalang.test.identifier;\n          \n          \n            \n            package org.ballerinalang.test.identifier;", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26683#discussion_r516490130", "createdAt": "2020-11-03T08:24:25Z", "author": {"login": "riyafa"}, "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/identifier/IdentifierLiteralTest.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.test.identifier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a1dc742500a8aa64d8bf89750dcf0c54b65a18"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjk0NzQzOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/resources/identifier/ModuleNameClashProject/src/main/tests/test.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODoyNToyMFrOHskFfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODoyNToyMFrOHskFfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ5MDYyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // under the License.\n          \n          \n            \n            // under the License.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26683#discussion_r516490623", "createdAt": "2020-11-03T08:25:20Z", "author": {"login": "riyafa"}, "path": "tests/jballerina-integration-test/src/test/resources/identifier/ModuleNameClashProject/src/main/tests/test.bal", "diffHunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a1dc742500a8aa64d8bf89750dcf0c54b65a18"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjk0OTIwOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/resources/identifier/ModuleNameClashProject/src/pkg.test/structs.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODoyNTo0NVrOHskGeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODoyNTo0NVrOHskGeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ5MDg3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // under the License.\n          \n          \n            \n            // under the License.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26683#discussion_r516490874", "createdAt": "2020-11-03T08:25:45Z", "author": {"login": "riyafa"}, "path": "tests/jballerina-integration-test/src/test/resources/identifier/ModuleNameClashProject/src/pkg.test/structs.bal", "diffHunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a1dc742500a8aa64d8bf89750dcf0c54b65a18"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjk1MTEzOnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/resources/identifier/ModuleNameClashProject/src/pkg_test/structs.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODoyNjoyM1rOHskHrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODoyNjoyM1rOHskHrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ5MTE4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // under the License.\n          \n          \n            \n            // under the License.\n          \n          \n            \n            \n          \n      \n    \n    \n  \n\nIt is good to have a new line after the license header and before the code", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26683#discussion_r516491182", "createdAt": "2020-11-03T08:26:23Z", "author": {"login": "riyafa"}, "path": "tests/jballerina-integration-test/src/test/resources/identifier/ModuleNameClashProject/src/pkg_test/structs.bal", "diffHunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2020 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+//\n+// WSO2 Inc. licenses this file to you under the Apache License,\n+// Version 2.0 (the \"License\"); you may not use this file except\n+// in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a1dc742500a8aa64d8bf89750dcf0c54b65a18"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzAxNTg5OnYy", "diffSide": "RIGHT", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/identifier/IdentifierLiteralTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODo0NToxN1rOHskuZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMToxODozM1rOHsqVnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUwMTA5NQ==", "bodyText": "can we check whether this is needed. I think runMain will fail if the tests fails. Shall we  check if that is the case? Similar for the other test cases.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26683#discussion_r516501095", "createdAt": "2020-11-03T08:45:17Z", "author": {"login": "riyafa"}, "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/identifier/IdentifierLiteralTest.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.test.identifier;\n+\n+import org.ballerinalang.test.BaseTest;\n+import org.ballerinalang.test.context.BMainInstance;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.ballerinalang.test.context.LogLeecher;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.HashMap;\n+\n+/**\n+ * Test cases to verify name clashes between generated identifiers.\n+ *\n+ *  @since 2.0.0\n+ */\n+public class IdentifierLiteralTest  extends BaseTest {\n+\n+    private static final String testFileLocation = Paths.get(\"src\", \"test\", \"resources\", \"identifier\")\n+            .toAbsolutePath().toString();\n+    private BMainInstance bMainInstance;\n+\n+    @BeforeClass\n+    public void setup() throws BallerinaTestException {\n+        bMainInstance = new BMainInstance(balServer);\n+    }\n+\n+    @Test(description = \"Test clashes in module names contain '.' and '_'\")\n+    public void testModuleIdentifierClash() throws BallerinaTestException {\n+        Path projectPath = Paths.get(testFileLocation, \"ModuleNameClashProject\")\n+                .toAbsolutePath();\n+        LogLeecher runLeecher = new LogLeecher(\"1 passing\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a1dc742500a8aa64d8bf89750dcf0c54b65a18"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU5MzA1Mw==", "bodyText": "The runMain method does not fail for test failures. So we need to verify it externally.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26683#discussion_r516593053", "createdAt": "2020-11-03T11:18:33Z", "author": {"login": "HindujaB"}, "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/identifier/IdentifierLiteralTest.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.ballerinalang.test.identifier;\n+\n+import org.ballerinalang.test.BaseTest;\n+import org.ballerinalang.test.context.BMainInstance;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.ballerinalang.test.context.LogLeecher;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.HashMap;\n+\n+/**\n+ * Test cases to verify name clashes between generated identifiers.\n+ *\n+ *  @since 2.0.0\n+ */\n+public class IdentifierLiteralTest  extends BaseTest {\n+\n+    private static final String testFileLocation = Paths.get(\"src\", \"test\", \"resources\", \"identifier\")\n+            .toAbsolutePath().toString();\n+    private BMainInstance bMainInstance;\n+\n+    @BeforeClass\n+    public void setup() throws BallerinaTestException {\n+        bMainInstance = new BMainInstance(balServer);\n+    }\n+\n+    @Test(description = \"Test clashes in module names contain '.' and '_'\")\n+    public void testModuleIdentifierClash() throws BallerinaTestException {\n+        Path projectPath = Paths.get(testFileLocation, \"ModuleNameClashProject\")\n+                .toAbsolutePath();\n+        LogLeecher runLeecher = new LogLeecher(\"1 passing\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUwMTA5NQ=="}, "originalCommit": {"oid": "d8a1dc742500a8aa64d8bf89750dcf0c54b65a18"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4690, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}