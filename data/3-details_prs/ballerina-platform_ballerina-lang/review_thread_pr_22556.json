{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNTc5MjAz", "number": 22556, "reviewThreads": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozMzoyM1rODwrDCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODowNDoyNFrODx9bbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzYzNTI4OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/Module.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozMzoyM1rOGDzaEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjozMjoyMlrOGEK3rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MTE2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For information on the operations, which you can perform with the java module, see the below **Functions**. For examples on the usage of the operations, see [Create Java Objects](https://ballerina.io/v1-2/learn/by-example/create-java-objects.html), [Invoke Java Methods](https://ballerina.io/v1-2/learn/by-example/invoke-java-methods.html), [Access/Mutate Java Fields](https://ballerina.io/v1-2/learn/by-example/access-mutate-java-fields.html), [Java Varargs](https://ballerina.io/v1-2/learn/by-example/java-varargs.html), [Overloaded Methods/Constructors](https://ballerina.io/v1-2/learn/by-example/overloaded-methods-constructors.html), [Java Exceptions](https://ballerina.io/v1-2/learn/by-example/java-exceptions.html)\n          \n          \n            \n            For information on the operations, which you can perform with the java module, see the below **Functions**. For examples on the usage of the operations, see the [Create Java Objects Example](https://ballerina.io/learn/by-example/create-java-objects.html), [Invoke Java Methods Example](https://ballerina.io/learn/by-example/invoke-java-methods.html), [Access/Mutate Java Fields Example](https://ballerina.io/learn/by-example/access-mutate-java-fields.html), [Java Varargs Example](https://ballerina.io/learn/by-example/java-varargs.html), [Overloaded Methods/Constructors Example](https://ballerina.io/learn/by-example/overloaded-methods-constructors.html), [Java Exceptions Example](https://ballerina.io/learn/by-example/java-exceptions.html)\n          \n      \n    \n    \n  \n\nShall we add the BBE list in bullets for more clarity?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r406641169", "createdAt": "2020-04-10T07:33:23Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/Module.md", "diffHunk": "@@ -1,4 +1,3 @@\n-## Module overview\n-\n This module provides the API for Java interoperability in Ballerina. It includes a set of Ballerina annotations with which Java constructors, methods and fields can provide implementations to Ballerina functions with external function bodies.  \n \n+For information on the operations, which you can perform with the java module, see the below **Functions**. For examples on the usage of the operations, see [Create Java Objects](https://ballerina.io/v1-2/learn/by-example/create-java-objects.html), [Invoke Java Methods](https://ballerina.io/v1-2/learn/by-example/invoke-java-methods.html), [Access/Mutate Java Fields](https://ballerina.io/v1-2/learn/by-example/access-mutate-java-fields.html), [Java Varargs](https://ballerina.io/v1-2/learn/by-example/java-varargs.html), [Overloaded Methods/Constructors](https://ballerina.io/v1-2/learn/by-example/overloaded-methods-constructors.html), [Java Exceptions](https://ballerina.io/v1-2/learn/by-example/java-exceptions.html)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5918533655e6af46f83d8592535be7e7aa60436b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyMDY0Mg==", "bodyText": "I don't think bullets are needed and it breaks the consistency. Having such links are common so the user won't get confused", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407020642", "createdAt": "2020-04-11T05:28:24Z", "author": {"login": "chamil321"}, "path": "stdlib/java/src/main/ballerina/src/java/Module.md", "diffHunk": "@@ -1,4 +1,3 @@\n-## Module overview\n-\n This module provides the API for Java interoperability in Ballerina. It includes a set of Ballerina annotations with which Java constructors, methods and fields can provide implementations to Ballerina functions with external function bodies.  \n \n+For information on the operations, which you can perform with the java module, see the below **Functions**. For examples on the usage of the operations, see [Create Java Objects](https://ballerina.io/v1-2/learn/by-example/create-java-objects.html), [Invoke Java Methods](https://ballerina.io/v1-2/learn/by-example/invoke-java-methods.html), [Access/Mutate Java Fields](https://ballerina.io/v1-2/learn/by-example/access-mutate-java-fields.html), [Java Varargs](https://ballerina.io/v1-2/learn/by-example/java-varargs.html), [Overloaded Methods/Constructors](https://ballerina.io/v1-2/learn/by-example/overloaded-methods-constructors.html), [Java Exceptions](https://ballerina.io/v1-2/learn/by-example/java-exceptions.html)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MTE2OQ=="}, "originalCommit": {"oid": "5918533655e6af46f83d8592535be7e7aa60436b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNTU4Mg==", "bodyText": "The separation is not very clear. i think we need bullets since this list is big.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407025582", "createdAt": "2020-04-11T06:32:22Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/Module.md", "diffHunk": "@@ -1,4 +1,3 @@\n-## Module overview\n-\n This module provides the API for Java interoperability in Ballerina. It includes a set of Ballerina annotations with which Java constructors, methods and fields can provide implementations to Ballerina functions with external function bodies.  \n \n+For information on the operations, which you can perform with the java module, see the below **Functions**. For examples on the usage of the operations, see [Create Java Objects](https://ballerina.io/v1-2/learn/by-example/create-java-objects.html), [Invoke Java Methods](https://ballerina.io/v1-2/learn/by-example/invoke-java-methods.html), [Access/Mutate Java Fields](https://ballerina.io/v1-2/learn/by-example/access-mutate-java-fields.html), [Java Varargs](https://ballerina.io/v1-2/learn/by-example/java-varargs.html), [Overloaded Methods/Constructors](https://ballerina.io/v1-2/learn/by-example/overloaded-methods-constructors.html), [Java Exceptions](https://ballerina.io/v1-2/learn/by-example/java-exceptions.html)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MTE2OQ=="}, "originalCommit": {"oid": "5918533655e6af46f83d8592535be7e7aa60436b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzYzNTcxOnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozMzozNlrOGDzaUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozMzozNlrOGDzaUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MTIzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents a Java array type. It is used to specify parameter types in `java:Constructor` and `java:Method`\n          \n          \n            \n            # Represents a Java array type. It is used to specify parameter types in the `java:Constructor` and `java:Method`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r406641234", "createdAt": "2020-04-10T07:33:36Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "diffHunk": "@@ -14,14 +14,14 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# The `Class` type represents a Java class name.\n+# Represents a Java class name.\n public type Class string;\n \n-# The `Identifier` type represents a Java identifier.\n+# Represents a Java identifier.\n public type Identifier string;\n \n-# ArrayType represents a Java array type. It is used to specify parameter\n-# types in `Constructor` and `Method` annotations.\n+# Represents a Java array type. It is used to specify parameter types in `java:Constructor` and `java:Method`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5918533655e6af46f83d8592535be7e7aa60436b"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzYzNzEzOnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNDowN1rOGDzbGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNDowN1rOGDzbGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MTQzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Describes a Java constructor that provides an implementation of a Ballerina function whose body is marked as\n          \n          \n            \n            # Describes a Java constructor, which provides an implementation of a Ballerina function of which the body is marked as", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r406641435", "createdAt": "2020-04-10T07:34:07Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "diffHunk": "@@ -63,31 +63,26 @@ public type FieldData record {|\n     Class class;\n |};\n \n-# The `Constructor` annotation describes a Java constructor that provides an implementation of a Ballerina function\n-# whose body is marked as `external`. If the Ballerina function body is marked as `external`, it means that the\n-# implementation of the function is not provided in the Ballerina source module.\n+# Describes a Java constructor that provides an implementation of a Ballerina function whose body is marked as", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5918533655e6af46f83d8592535be7e7aa60436b"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzYzODg0OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNDo1NlrOGDzcHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNDo1NlrOGDzcHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MTY5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Describes a Java method that provides an implementation of a Ballerina function whose body is marked as `external`.\n          \n          \n            \n            # Describes a Java method, which provides an implementation of a Ballerina function of which the body is marked as `external`.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r406641695", "createdAt": "2020-04-10T07:34:56Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "diffHunk": "@@ -63,31 +63,26 @@ public type FieldData record {|\n     Class class;\n |};\n \n-# The `Constructor` annotation describes a Java constructor that provides an implementation of a Ballerina function\n-# whose body is marked as `external`. If the Ballerina function body is marked as `external`, it means that the\n-# implementation of the function is not provided in the Ballerina source module.\n+# Describes a Java constructor that provides an implementation of a Ballerina function whose body is marked as\n+# `external`. If the Ballerina function body is marked as `external`, it means that the implementation of the\n+# function is not provided in the Ballerina source module.\n #\n # The following code snippet shows an example usage of this annotation. Here, the `newJavaLinkedList` Ballerina function's\n # implementation is provided by the default constructor of the `java.util.LinkedList` class.\n # ```ballerina\n-# import ballerina/java;\n-#\n # function newJavaLinkedList() returns handle = @java:Constructor {\n #      class: \"java.util.LinkedList\"\n # } external;\n # ```\n-#\n public const annotation ConstructorData Constructor on source external;\n \n-# The `Method` annotation describes a Java method that provides an implementation of a Ballerina function\n-# whose body is marked as `external`. If the Ballerina function body is marked as `external`, it means that the\n-# implementation of the function is not provided in the Ballerina source module.\n+# Describes a Java method that provides an implementation of a Ballerina function whose body is marked as `external`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5918533655e6af46f83d8592535be7e7aa60436b"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzYzOTUxOnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNToyMFrOGDzclQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNToyMFrOGDzclQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MTgxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Describes a Java Field access that provides an implementation of a Ballerina function whose body is marked as\n          \n          \n            \n            # Describes a Java Field access, which provides an implementation of a Ballerina function of which the body is marked as", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r406641813", "createdAt": "2020-04-10T07:35:20Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "diffHunk": "@@ -97,11 +92,23 @@ public const annotation ConstructorData Constructor on source external;\n # from the Ballerina function.\n public const annotation MethodData Method on source external;\n \n-# The `FieldGet` annotation describes a Java Field access that provides an implementation of a Ballerina function\n-# whose body is marked as `external`.\n+# Describes a Java Field access that provides an implementation of a Ballerina function whose body is marked as", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5918533655e6af46f83d8592535be7e7aa60436b"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY0MDA2OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNTozNlrOGDzc4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNTozNlrOGDzc4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MTg4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Describes a Java Field mutate that provides an implementation of a Ballerina function whose body is marked as\n          \n          \n            \n            # Describes a Java Field mutate, which provides an implementation of a Ballerina function of which the body is marked as", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r406641888", "createdAt": "2020-04-10T07:35:36Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "diffHunk": "@@ -97,11 +92,23 @@ public const annotation ConstructorData Constructor on source external;\n # from the Ballerina function.\n public const annotation MethodData Method on source external;\n \n-# The `FieldGet` annotation describes a Java Field access that provides an implementation of a Ballerina function\n-# whose body is marked as `external`.\n+# Describes a Java Field access that provides an implementation of a Ballerina function whose body is marked as\n+# `external`.\n+# ```ballerina\n+# function getError() returns handle = @java:FieldGet {\n+#     name:\"err\",\n+#     class:\"java/lang/System\"\n+# } external;\n+# ```\n public const annotation FieldData FieldGet on source external;\n \n-# The `FieldSet` annotation describes a Java Field mutate that provides an implementation of a Ballerina function\n-# whose body is marked as `external`.\n+# Describes a Java Field mutate that provides an implementation of a Ballerina function whose body is marked as", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5918533655e6af46f83d8592535be7e7aa60436b"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY0MDc1OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNTo1NVrOGDzdRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNTo1NVrOGDzdRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MTk4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The `handle` that refers to the Java String representation of the Ballerina `string`\n          \n          \n            \n            # + return - The `handle`, which refers to the Java String representation of the Ballerina `string`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r406641989", "createdAt": "2020-04-10T07:35:55Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -15,46 +15,62 @@\n // under the License.\n \n # Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n+# ```ballerina\n+# handle header = java:fromString(\"Content-Type\");\n+# ```\n #\n-# + value - the Ballerina `string` with which the `handle` is created\n-# + return - the `handle` that refers to the Java String representation of the Ballerina `string`\n+# + value - The Ballerina `string` with which the `handle` is created\n+# + return - The `handle` that refers to the Java String representation of the Ballerina `string`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5918533655e6af46f83d8592535be7e7aa60436b"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY0MTE2OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNjowNVrOGDzdgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNjowNVrOGDzdgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjA1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + value - The `handle` whose referred value to be converted to Ballerina `string`\n          \n          \n            \n            # + value - The `handle` of which the referred value to be converted to Ballerina `string`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r406642051", "createdAt": "2020-04-10T07:36:05Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -15,46 +15,62 @@\n // under the License.\n \n # Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n+# ```ballerina\n+# handle header = java:fromString(\"Content-Type\");\n+# ```\n #\n-# + value - the Ballerina `string` with which the `handle` is created\n-# + return - the `handle` that refers to the Java String representation of the Ballerina `string`\n+# + value - The Ballerina `string` with which the `handle` is created\n+# + return - The `handle` that refers to the Java String representation of the Ballerina `string`\n public function fromString(string value) returns handle = external;\n \n # Returns a Ballerina `string` representation of the Java object referred by the `handle`.\n-#\n # If the `handle` refers to Java null, then this function returns a `nil` value.\n+# ```ballerina\n+# string? version = java:toString(versionProperty);\n+# ```\n #\n-# + value - the `handle` whose referred value to be converted to Ballerina `string`\n-# + return - the Ballerina `string` representation of the Java object referred by the `handle` or\n+# + value - The `handle` whose referred value to be converted to Ballerina `string`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5918533655e6af46f83d8592535be7e7aa60436b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY0MTc5OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNjoyN1rOGDzd5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNjoyN1rOGDzd5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjE0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + value - The `handle` whose referred value to be tested with Java null\n          \n          \n            \n            # + value - The `handle` of which the referred value to be tested with Java null", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r406642149", "createdAt": "2020-04-10T07:36:27Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -15,46 +15,62 @@\n // under the License.\n \n # Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n+# ```ballerina\n+# handle header = java:fromString(\"Content-Type\");\n+# ```\n #\n-# + value - the Ballerina `string` with which the `handle` is created\n-# + return - the `handle` that refers to the Java String representation of the Ballerina `string`\n+# + value - The Ballerina `string` with which the `handle` is created\n+# + return - The `handle` that refers to the Java String representation of the Ballerina `string`\n public function fromString(string value) returns handle = external;\n \n # Returns a Ballerina `string` representation of the Java object referred by the `handle`.\n-#\n # If the `handle` refers to Java null, then this function returns a `nil` value.\n+# ```ballerina\n+# string? version = java:toString(versionProperty);\n+# ```\n #\n-# + value - the `handle` whose referred value to be converted to Ballerina `string`\n-# + return - the Ballerina `string` representation of the Java object referred by the `handle` or\n+# + value - The `handle` whose referred value to be converted to Ballerina `string`\n+# + return - The Ballerina `string` representation of the Java object referred by the `handle` or\n #            returns `nil` of the `handle` refers to Java null\n public function toString(handle value) returns string? = external;\n \n # Returns `true` if this handle refers to Java null.\n+# ```ballerina\n+# boolean status = java:isNull(value);\n+# ```\n #\n-# + value - the `handle` whose referred value to be tested with Java null\n+# + value - The `handle` whose referred value to be tested with Java null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5918533655e6af46f83d8592535be7e7aa60436b"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY0MjE2OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNjozNVrOGDzeFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNjozNVrOGDzeFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjE5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + return - The `handle` that refers to Java null\n          \n          \n            \n            # + return - The `handle`, which refers to Java null", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r406642196", "createdAt": "2020-04-10T07:36:35Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -15,46 +15,62 @@\n // under the License.\n \n # Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n+# ```ballerina\n+# handle header = java:fromString(\"Content-Type\");\n+# ```\n #\n-# + value - the Ballerina `string` with which the `handle` is created\n-# + return - the `handle` that refers to the Java String representation of the Ballerina `string`\n+# + value - The Ballerina `string` with which the `handle` is created\n+# + return - The `handle` that refers to the Java String representation of the Ballerina `string`\n public function fromString(string value) returns handle = external;\n \n # Returns a Ballerina `string` representation of the Java object referred by the `handle`.\n-#\n # If the `handle` refers to Java null, then this function returns a `nil` value.\n+# ```ballerina\n+# string? version = java:toString(versionProperty);\n+# ```\n #\n-# + value - the `handle` whose referred value to be converted to Ballerina `string`\n-# + return - the Ballerina `string` representation of the Java object referred by the `handle` or\n+# + value - The `handle` whose referred value to be converted to Ballerina `string`\n+# + return - The Ballerina `string` representation of the Java object referred by the `handle` or\n #            returns `nil` of the `handle` refers to Java null\n public function toString(handle value) returns string? = external;\n \n # Returns `true` if this handle refers to Java null.\n+# ```ballerina\n+# boolean status = java:isNull(value);\n+# ```\n #\n-# + value - the `handle` whose referred value to be tested with Java null\n+# + value - The `handle` whose referred value to be tested with Java null\n # + return - `true` if this handle refers to Java null\n public function isNull(handle value) returns boolean = external;\n \n # Returns a `handle` that refers to Java null.\n+# ```ballerina\n+# handle nullHandle = java:createNull();\n+# ```\n #\n-# + return - the `handle` that refers to Java null\n+# + return - The `handle` that refers to Java null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5918533655e6af46f83d8592535be7e7aa60436b"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzY0MzIwOnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNzozNzowMVrOGDzerA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo0OToxMlrOGEK9NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjM0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # | double   |   Java Class instance representing the Java primitive type double  |\n          \n          \n            \n            # | double   |   Java Class instance representing the Java primitive type double  |\n          \n      \n    \n    \n  \n\nBuild locally and make sure the table format gets rendered and displayed properly.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r406642348", "createdAt": "2020-04-10T07:37:01Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -15,46 +15,62 @@\n // under the License.\n \n # Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n+# ```ballerina\n+# handle header = java:fromString(\"Content-Type\");\n+# ```\n #\n-# + value - the Ballerina `string` with which the `handle` is created\n-# + return - the `handle` that refers to the Java String representation of the Ballerina `string`\n+# + value - The Ballerina `string` with which the `handle` is created\n+# + return - The `handle` that refers to the Java String representation of the Ballerina `string`\n public function fromString(string value) returns handle = external;\n \n # Returns a Ballerina `string` representation of the Java object referred by the `handle`.\n-#\n # If the `handle` refers to Java null, then this function returns a `nil` value.\n+# ```ballerina\n+# string? version = java:toString(versionProperty);\n+# ```\n #\n-# + value - the `handle` whose referred value to be converted to Ballerina `string`\n-# + return - the Ballerina `string` representation of the Java object referred by the `handle` or\n+# + value - The `handle` whose referred value to be converted to Ballerina `string`\n+# + return - The Ballerina `string` representation of the Java object referred by the `handle` or\n #            returns `nil` of the `handle` refers to Java null\n public function toString(handle value) returns string? = external;\n \n # Returns `true` if this handle refers to Java null.\n+# ```ballerina\n+# boolean status = java:isNull(value);\n+# ```\n #\n-# + value - the `handle` whose referred value to be tested with Java null\n+# + value - The `handle` whose referred value to be tested with Java null\n # + return - `true` if this handle refers to Java null\n public function isNull(handle value) returns boolean = external;\n \n # Returns a `handle` that refers to Java null.\n+# ```ballerina\n+# handle nullHandle = java:createNull();\n+# ```\n #\n-# + return - the `handle` that refers to Java null\n+# + return - The `handle` that refers to Java null\n public function createNull() returns handle = external;\n \n # Returns a `handle` that refers to the Java Class object associated\n # with the class or interface with the given string name.\n+# ```ballerina\n+# handle|error intClass = java:getClass(\"int\");\n+# ```\n #\n # This function performs a Java `class.forName(name)` except for following cases:\n #\n-#   name        output\n-#   boolean     the Java Class instance representing the Java primitive type boolean\n-#   byte        the Java Class instance representing the Java primitive type byte\n-#   char        the Java Class instance representing the Java primitive type char\n-#   short       the Java Class instance representing the Java primitive type short\n-#   int         the Java Class instance representing the Java primitive type int\n-#   long        the Java Class instance representing the Java primitive type long\n-#   float       the Java Class instance representing the Java primitive type float\n-#   double      the Java Class instance representing the Java primitive type double\n-# + name - the name of the Java class\n-# + return - the Java Class object for the class with the given name.\n+# | Name     |   Output                                                           |\n+# |:--------:|:------------------------------------------------------------------:|\n+# | boolean  |   Java Class instance representing the Java primitive type boolean |\n+# | byte     |   Java Class instance representing the Java primitive type byte    |\n+# | char     |   Java Class instance representing the Java primitive type char    |\n+# | short    |   Java Class instance representing the Java primitive type short   |\n+# | int      |   Java Class instance representing the Java primitive type int     |\n+# | long     |   Java Class instance representing the Java primitive type long    |\n+# | float    |   Java Class instance representing the Java primitive type float   |\n+# | double   |   Java Class instance representing the Java primitive type double  |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5918533655e6af46f83d8592535be7e7aa60436b"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyMDUyNQ==", "bodyText": "The page which directs when you click on the function shows it properly (module/function.html)\n\nBut the module page, which shows module.md and other functions altogether does not seem to indent properly (module/index.html)", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407020525", "createdAt": "2020-04-11T05:26:52Z", "author": {"login": "chamil321"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -15,46 +15,62 @@\n // under the License.\n \n # Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n+# ```ballerina\n+# handle header = java:fromString(\"Content-Type\");\n+# ```\n #\n-# + value - the Ballerina `string` with which the `handle` is created\n-# + return - the `handle` that refers to the Java String representation of the Ballerina `string`\n+# + value - The Ballerina `string` with which the `handle` is created\n+# + return - The `handle` that refers to the Java String representation of the Ballerina `string`\n public function fromString(string value) returns handle = external;\n \n # Returns a Ballerina `string` representation of the Java object referred by the `handle`.\n-#\n # If the `handle` refers to Java null, then this function returns a `nil` value.\n+# ```ballerina\n+# string? version = java:toString(versionProperty);\n+# ```\n #\n-# + value - the `handle` whose referred value to be converted to Ballerina `string`\n-# + return - the Ballerina `string` representation of the Java object referred by the `handle` or\n+# + value - The `handle` whose referred value to be converted to Ballerina `string`\n+# + return - The Ballerina `string` representation of the Java object referred by the `handle` or\n #            returns `nil` of the `handle` refers to Java null\n public function toString(handle value) returns string? = external;\n \n # Returns `true` if this handle refers to Java null.\n+# ```ballerina\n+# boolean status = java:isNull(value);\n+# ```\n #\n-# + value - the `handle` whose referred value to be tested with Java null\n+# + value - The `handle` whose referred value to be tested with Java null\n # + return - `true` if this handle refers to Java null\n public function isNull(handle value) returns boolean = external;\n \n # Returns a `handle` that refers to Java null.\n+# ```ballerina\n+# handle nullHandle = java:createNull();\n+# ```\n #\n-# + return - the `handle` that refers to Java null\n+# + return - The `handle` that refers to Java null\n public function createNull() returns handle = external;\n \n # Returns a `handle` that refers to the Java Class object associated\n # with the class or interface with the given string name.\n+# ```ballerina\n+# handle|error intClass = java:getClass(\"int\");\n+# ```\n #\n # This function performs a Java `class.forName(name)` except for following cases:\n #\n-#   name        output\n-#   boolean     the Java Class instance representing the Java primitive type boolean\n-#   byte        the Java Class instance representing the Java primitive type byte\n-#   char        the Java Class instance representing the Java primitive type char\n-#   short       the Java Class instance representing the Java primitive type short\n-#   int         the Java Class instance representing the Java primitive type int\n-#   long        the Java Class instance representing the Java primitive type long\n-#   float       the Java Class instance representing the Java primitive type float\n-#   double      the Java Class instance representing the Java primitive type double\n-# + name - the name of the Java class\n-# + return - the Java Class object for the class with the given name.\n+# | Name     |   Output                                                           |\n+# |:--------:|:------------------------------------------------------------------:|\n+# | boolean  |   Java Class instance representing the Java primitive type boolean |\n+# | byte     |   Java Class instance representing the Java primitive type byte    |\n+# | char     |   Java Class instance representing the Java primitive type char    |\n+# | short    |   Java Class instance representing the Java primitive type short   |\n+# | int      |   Java Class instance representing the Java primitive type int     |\n+# | long     |   Java Class instance representing the Java primitive type long    |\n+# | float    |   Java Class instance representing the Java primitive type float   |\n+# | double   |   Java Class instance representing the Java primitive type double  |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjM0OA=="}, "originalCommit": {"oid": "5918533655e6af46f83d8592535be7e7aa60436b"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNjk5Ng==", "bodyText": "Please create an issue to report the rendering issue.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407026996", "createdAt": "2020-04-11T06:49:12Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -15,46 +15,62 @@\n // under the License.\n \n # Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n+# ```ballerina\n+# handle header = java:fromString(\"Content-Type\");\n+# ```\n #\n-# + value - the Ballerina `string` with which the `handle` is created\n-# + return - the `handle` that refers to the Java String representation of the Ballerina `string`\n+# + value - The Ballerina `string` with which the `handle` is created\n+# + return - The `handle` that refers to the Java String representation of the Ballerina `string`\n public function fromString(string value) returns handle = external;\n \n # Returns a Ballerina `string` representation of the Java object referred by the `handle`.\n-#\n # If the `handle` refers to Java null, then this function returns a `nil` value.\n+# ```ballerina\n+# string? version = java:toString(versionProperty);\n+# ```\n #\n-# + value - the `handle` whose referred value to be converted to Ballerina `string`\n-# + return - the Ballerina `string` representation of the Java object referred by the `handle` or\n+# + value - The `handle` whose referred value to be converted to Ballerina `string`\n+# + return - The Ballerina `string` representation of the Java object referred by the `handle` or\n #            returns `nil` of the `handle` refers to Java null\n public function toString(handle value) returns string? = external;\n \n # Returns `true` if this handle refers to Java null.\n+# ```ballerina\n+# boolean status = java:isNull(value);\n+# ```\n #\n-# + value - the `handle` whose referred value to be tested with Java null\n+# + value - The `handle` whose referred value to be tested with Java null\n # + return - `true` if this handle refers to Java null\n public function isNull(handle value) returns boolean = external;\n \n # Returns a `handle` that refers to Java null.\n+# ```ballerina\n+# handle nullHandle = java:createNull();\n+# ```\n #\n-# + return - the `handle` that refers to Java null\n+# + return - The `handle` that refers to Java null\n public function createNull() returns handle = external;\n \n # Returns a `handle` that refers to the Java Class object associated\n # with the class or interface with the given string name.\n+# ```ballerina\n+# handle|error intClass = java:getClass(\"int\");\n+# ```\n #\n # This function performs a Java `class.forName(name)` except for following cases:\n #\n-#   name        output\n-#   boolean     the Java Class instance representing the Java primitive type boolean\n-#   byte        the Java Class instance representing the Java primitive type byte\n-#   char        the Java Class instance representing the Java primitive type char\n-#   short       the Java Class instance representing the Java primitive type short\n-#   int         the Java Class instance representing the Java primitive type int\n-#   long        the Java Class instance representing the Java primitive type long\n-#   float       the Java Class instance representing the Java primitive type float\n-#   double      the Java Class instance representing the Java primitive type double\n-# + name - the name of the Java class\n-# + return - the Java Class object for the class with the given name.\n+# | Name     |   Output                                                           |\n+# |:--------:|:------------------------------------------------------------------:|\n+# | boolean  |   Java Class instance representing the Java primitive type boolean |\n+# | byte     |   Java Class instance representing the Java primitive type byte    |\n+# | char     |   Java Class instance representing the Java primitive type char    |\n+# | short    |   Java Class instance representing the Java primitive type short   |\n+# | int      |   Java Class instance representing the Java primitive type int     |\n+# | long     |   Java Class instance representing the Java primitive type long    |\n+# | float    |   Java Class instance representing the Java primitive type float   |\n+# | double   |   Java Class instance representing the Java primitive type double  |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY0MjM0OA=="}, "originalCommit": {"oid": "5918533655e6af46f83d8592535be7e7aa60436b"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjIxOTkxOnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo1MzowMlrOGEK-Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo1MzowMlrOGEK-Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNzI2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For information on the operations, which you can perform with the java module, see the below **Functions**. For examples on the usage of the operations, see\n          \n          \n            \n            For information on the operations, which you can perform with the java module, see the below **Functions**. For examples on the usage of the operations, see the following.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407027263", "createdAt": "2020-04-11T06:53:02Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/Module.md", "diffHunk": "@@ -1,4 +1,9 @@\n-## Module overview\n-\n This module provides the API for Java interoperability in Ballerina. It includes a set of Ballerina annotations with which Java constructors, methods and fields can provide implementations to Ballerina functions with external function bodies.  \n \n+For information on the operations, which you can perform with the java module, see the below **Functions**. For examples on the usage of the operations, see", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79a04e36e2ba69a4531e0c9f692db2826e994966"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjIyMzE0OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo1ODowNlrOGEK_xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo1ODowNlrOGEK_xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNzY1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n          \n          \n            \n            # Returns a `handle`, which refers to the Java string representation of the Ballerina `string`.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407027654", "createdAt": "2020-04-11T06:58:06Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -15,46 +15,62 @@\n // under the License.\n \n # Returns a `handle` that refers to the Java string representation of the Ballerina `string`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa6f573620e1718eb95d58b5a8e6bf7705247fa9"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjIyMzQ0OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo1ODozN1rOGEK_7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo1ODozN1rOGEK_7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNzY5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + value - The `handle` of which the referred value to be converted to Ballerina `string`\n          \n          \n            \n            # + value - The `handle` of which the referred value is to be converted to Ballerina `string`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407027692", "createdAt": "2020-04-11T06:58:37Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -15,46 +15,62 @@\n // under the License.\n \n # Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n+# ```ballerina\n+# handle header = java:fromString(\"Content-Type\");\n+# ```\n #\n-# + value - the Ballerina `string` with which the `handle` is created\n-# + return - the `handle` that refers to the Java String representation of the Ballerina `string`\n+# + value - The Ballerina `string` with which the `handle` is created\n+# + return - The `handle`, which refers to the Java String representation of the Ballerina `string`\n public function fromString(string value) returns handle = external;\n \n # Returns a Ballerina `string` representation of the Java object referred by the `handle`.\n-#\n # If the `handle` refers to Java null, then this function returns a `nil` value.\n+# ```ballerina\n+# string? version = java:toString(versionProperty);\n+# ```\n #\n-# + value - the `handle` whose referred value to be converted to Ballerina `string`\n-# + return - the Ballerina `string` representation of the Java object referred by the `handle` or\n+# + value - The `handle` of which the referred value to be converted to Ballerina `string`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa6f573620e1718eb95d58b5a8e6bf7705247fa9"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjIyNDE0OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo1OToxM1rOGELAOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo1OToxM1rOGELAOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNzc3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            returns `nil` of the `handle` refers to Java null\n          \n          \n            \n            #            else returns `nil` if the `handle` refers to Java null\n          \n      \n    \n    \n  \n\nReplace nil with ().", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407027770", "createdAt": "2020-04-11T06:59:13Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -15,46 +15,62 @@\n // under the License.\n \n # Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n+# ```ballerina\n+# handle header = java:fromString(\"Content-Type\");\n+# ```\n #\n-# + value - the Ballerina `string` with which the `handle` is created\n-# + return - the `handle` that refers to the Java String representation of the Ballerina `string`\n+# + value - The Ballerina `string` with which the `handle` is created\n+# + return - The `handle`, which refers to the Java String representation of the Ballerina `string`\n public function fromString(string value) returns handle = external;\n \n # Returns a Ballerina `string` representation of the Java object referred by the `handle`.\n-#\n # If the `handle` refers to Java null, then this function returns a `nil` value.\n+# ```ballerina\n+# string? version = java:toString(versionProperty);\n+# ```\n #\n-# + value - the `handle` whose referred value to be converted to Ballerina `string`\n-# + return - the Ballerina `string` representation of the Java object referred by the `handle` or\n+# + value - The `handle` of which the referred value to be converted to Ballerina `string`\n+# + return - The Ballerina `string` representation of the Java object referred by the `handle` or\n #            returns `nil` of the `handle` refers to Java null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa6f573620e1718eb95d58b5a8e6bf7705247fa9"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjIyNDI4OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo1OToyNlrOGELASg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo1OToyNlrOGELASg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNzc4Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + value - The `handle` of which the referred value to be tested with Java null\n          \n          \n            \n            # + value - The `handle` of which the referred value is to be tested with Java null", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407027786", "createdAt": "2020-04-11T06:59:26Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -15,46 +15,62 @@\n // under the License.\n \n # Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n+# ```ballerina\n+# handle header = java:fromString(\"Content-Type\");\n+# ```\n #\n-# + value - the Ballerina `string` with which the `handle` is created\n-# + return - the `handle` that refers to the Java String representation of the Ballerina `string`\n+# + value - The Ballerina `string` with which the `handle` is created\n+# + return - The `handle`, which refers to the Java String representation of the Ballerina `string`\n public function fromString(string value) returns handle = external;\n \n # Returns a Ballerina `string` representation of the Java object referred by the `handle`.\n-#\n # If the `handle` refers to Java null, then this function returns a `nil` value.\n+# ```ballerina\n+# string? version = java:toString(versionProperty);\n+# ```\n #\n-# + value - the `handle` whose referred value to be converted to Ballerina `string`\n-# + return - the Ballerina `string` representation of the Java object referred by the `handle` or\n+# + value - The `handle` of which the referred value to be converted to Ballerina `string`\n+# + return - The Ballerina `string` representation of the Java object referred by the `handle` or\n #            returns `nil` of the `handle` refers to Java null\n public function toString(handle value) returns string? = external;\n \n # Returns `true` if this handle refers to Java null.\n+# ```ballerina\n+# boolean status = java:isNull(value);\n+# ```\n #\n-# + value - the `handle` whose referred value to be tested with Java null\n+# + value - The `handle` of which the referred value to be tested with Java null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa6f573620e1718eb95d58b5a8e6bf7705247fa9"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjIyNDMyOnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo1OTozOVrOGELAUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo1OTozOVrOGELAUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNzc5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Returns a `handle` that refers to Java null.\n          \n          \n            \n            # Returns a `handle`, which refers to Java null.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407027794", "createdAt": "2020-04-11T06:59:39Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -15,46 +15,62 @@\n // under the License.\n \n # Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n+# ```ballerina\n+# handle header = java:fromString(\"Content-Type\");\n+# ```\n #\n-# + value - the Ballerina `string` with which the `handle` is created\n-# + return - the `handle` that refers to the Java String representation of the Ballerina `string`\n+# + value - The Ballerina `string` with which the `handle` is created\n+# + return - The `handle`, which refers to the Java String representation of the Ballerina `string`\n public function fromString(string value) returns handle = external;\n \n # Returns a Ballerina `string` representation of the Java object referred by the `handle`.\n-#\n # If the `handle` refers to Java null, then this function returns a `nil` value.\n+# ```ballerina\n+# string? version = java:toString(versionProperty);\n+# ```\n #\n-# + value - the `handle` whose referred value to be converted to Ballerina `string`\n-# + return - the Ballerina `string` representation of the Java object referred by the `handle` or\n+# + value - The `handle` of which the referred value to be converted to Ballerina `string`\n+# + return - The Ballerina `string` representation of the Java object referred by the `handle` or\n #            returns `nil` of the `handle` refers to Java null\n public function toString(handle value) returns string? = external;\n \n # Returns `true` if this handle refers to Java null.\n+# ```ballerina\n+# boolean status = java:isNull(value);\n+# ```\n #\n-# + value - the `handle` whose referred value to be tested with Java null\n+# + value - The `handle` of which the referred value to be tested with Java null\n # + return - `true` if this handle refers to Java null\n public function isNull(handle value) returns boolean = external;\n \n # Returns a `handle` that refers to Java null.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa6f573620e1718eb95d58b5a8e6bf7705247fa9"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjIyNDUwOnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo1OTo0OVrOGELAaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo1OTo0OVrOGELAaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNzgxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Returns a `handle` that refers to the Java Class object associated\n          \n          \n            \n            # Returns a `handle`, which refers to the Java Class object associated", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407027817", "createdAt": "2020-04-11T06:59:49Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -15,46 +15,62 @@\n // under the License.\n \n # Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n+# ```ballerina\n+# handle header = java:fromString(\"Content-Type\");\n+# ```\n #\n-# + value - the Ballerina `string` with which the `handle` is created\n-# + return - the `handle` that refers to the Java String representation of the Ballerina `string`\n+# + value - The Ballerina `string` with which the `handle` is created\n+# + return - The `handle`, which refers to the Java String representation of the Ballerina `string`\n public function fromString(string value) returns handle = external;\n \n # Returns a Ballerina `string` representation of the Java object referred by the `handle`.\n-#\n # If the `handle` refers to Java null, then this function returns a `nil` value.\n+# ```ballerina\n+# string? version = java:toString(versionProperty);\n+# ```\n #\n-# + value - the `handle` whose referred value to be converted to Ballerina `string`\n-# + return - the Ballerina `string` representation of the Java object referred by the `handle` or\n+# + value - The `handle` of which the referred value to be converted to Ballerina `string`\n+# + return - The Ballerina `string` representation of the Java object referred by the `handle` or\n #            returns `nil` of the `handle` refers to Java null\n public function toString(handle value) returns string? = external;\n \n # Returns `true` if this handle refers to Java null.\n+# ```ballerina\n+# boolean status = java:isNull(value);\n+# ```\n #\n-# + value - the `handle` whose referred value to be tested with Java null\n+# + value - The `handle` of which the referred value to be tested with Java null\n # + return - `true` if this handle refers to Java null\n public function isNull(handle value) returns boolean = external;\n \n # Returns a `handle` that refers to Java null.\n+# ```ballerina\n+# handle nullHandle = java:createNull();\n+# ```\n #\n-# + return - the `handle` that refers to Java null\n+# + return - The `handle`, which refers to Java null\n public function createNull() returns handle = external;\n \n # Returns a `handle` that refers to the Java Class object associated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa6f573620e1718eb95d58b5a8e6bf7705247fa9"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjIyNDY2OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzowMDowMlrOGELAeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzowMDowMlrOGELAeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNzgzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # This function performs a Java `class.forName(name)` except for following cases:\n          \n          \n            \n            # This function performs a Java `class.forName(name)` except for the following cases:", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407027834", "createdAt": "2020-04-11T07:00:02Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -15,46 +15,62 @@\n // under the License.\n \n # Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n+# ```ballerina\n+# handle header = java:fromString(\"Content-Type\");\n+# ```\n #\n-# + value - the Ballerina `string` with which the `handle` is created\n-# + return - the `handle` that refers to the Java String representation of the Ballerina `string`\n+# + value - The Ballerina `string` with which the `handle` is created\n+# + return - The `handle`, which refers to the Java String representation of the Ballerina `string`\n public function fromString(string value) returns handle = external;\n \n # Returns a Ballerina `string` representation of the Java object referred by the `handle`.\n-#\n # If the `handle` refers to Java null, then this function returns a `nil` value.\n+# ```ballerina\n+# string? version = java:toString(versionProperty);\n+# ```\n #\n-# + value - the `handle` whose referred value to be converted to Ballerina `string`\n-# + return - the Ballerina `string` representation of the Java object referred by the `handle` or\n+# + value - The `handle` of which the referred value to be converted to Ballerina `string`\n+# + return - The Ballerina `string` representation of the Java object referred by the `handle` or\n #            returns `nil` of the `handle` refers to Java null\n public function toString(handle value) returns string? = external;\n \n # Returns `true` if this handle refers to Java null.\n+# ```ballerina\n+# boolean status = java:isNull(value);\n+# ```\n #\n-# + value - the `handle` whose referred value to be tested with Java null\n+# + value - The `handle` of which the referred value to be tested with Java null\n # + return - `true` if this handle refers to Java null\n public function isNull(handle value) returns boolean = external;\n \n # Returns a `handle` that refers to Java null.\n+# ```ballerina\n+# handle nullHandle = java:createNull();\n+# ```\n #\n-# + return - the `handle` that refers to Java null\n+# + return - The `handle`, which refers to Java null\n public function createNull() returns handle = external;\n \n # Returns a `handle` that refers to the Java Class object associated\n # with the class or interface with the given string name.\n+# ```ballerina\n+# handle|error intClass = java:getClass(\"int\");\n+# ```\n #\n # This function performs a Java `class.forName(name)` except for following cases:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa6f573620e1718eb95d58b5a8e6bf7705247fa9"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjI1NzkyOnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzo0NToyNlrOGELPoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzo0NToyNlrOGELPoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMTcxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + name - An optional field that describes name of the Java method. If this field is not provided,\n          \n          \n            \n            # + name - An optional field, which describes the name of the Java method. If this field is not provided,", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407031713", "createdAt": "2020-04-11T07:45:26Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "diffHunk": "@@ -40,8 +40,8 @@ public type ConstructorData record {|\n     (Class | ArrayType)[] paramTypes?;\n |};\n \n-# The `MethodData` type describes a Java method. If the `paramTypes` field is not specified,\n-# then parameter types are inferred from the corresponding Ballerina function.\n+# Describes a Java method. If the `paramTypes` field is not specified, then parameter types are inferred from the\n+# corresponding Ballerina function.\n #\n # + name - An optional field that describes name of the Java method. If this field is not provided,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1f1f466e98253382fdd1c046fc440132fb2b1c"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjI1ODE5OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzo0NTo0NFrOGELPwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzo0NTo0NFrOGELPwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMTc0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This module provides the API for Java interoperability in Ballerina. It includes a set of Ballerina annotations with which Java constructors, methods and fields can provide implementations to Ballerina functions with external function bodies.  \n          \n          \n            \n            This module provides the API for Java interoperability in Ballerina. It includes a set of Ballerina annotations with which Java constructors, methods, and fields can provide implementations to Ballerina functions with external function bodies.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407031744", "createdAt": "2020-04-11T07:45:44Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/Module.md", "diffHunk": "@@ -1,4 +1,9 @@\n-## Module overview\n-\n This module provides the API for Java interoperability in Ballerina. It includes a set of Ballerina annotations with which Java constructors, methods and fields can provide implementations to Ballerina functions with external function bodies.  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1f1f466e98253382fdd1c046fc440132fb2b1c"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjI1ODU5OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzo0NjoxOFrOGELP7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzo0NjoxOFrOGELP7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMTc4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + paramTypes - An optional field that describes parameter types of the constructor\n          \n          \n            \n            # + paramTypes - An optional field, which describes parameter types of the constructor", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407031788", "createdAt": "2020-04-11T07:46:18Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "diffHunk": "@@ -30,8 +30,8 @@ public type ArrayType record {|\n     byte dimensions;\n |};\n \n-# The `ConstructorData` type describes a Java constructor. If the `paramTypes` field is not specified,\n-# then parameter types are inferred from the corresponding Ballerina function.\n+# Describes a Java constructor. If the `paramTypes` field is not specified, then parameter types are inferred from\n+# the corresponding Ballerina function.\n #\n # + class - The class in which the constructor exists\n # + paramTypes - An optional field that describes parameter types of the constructor", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1f1f466e98253382fdd1c046fc440132fb2b1c"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjI2MDA3OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzo0ODoxN1rOGELQnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzo0ODoxN1rOGELQnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMTk2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + value - The `handle` of which the referred value is to be converted to Ballerina `string`\n          \n          \n            \n            # + value - The `handle` of which the referred value is to be converted to a Ballerina `string`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r407031967", "createdAt": "2020-04-11T07:48:17Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -14,47 +14,63 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n+# Returns a `handle`, which refers to the Java string representation of the Ballerina `string`.\n+# ```ballerina\n+# handle header = java:fromString(\"Content-Type\");\n+# ```\n #\n-# + value - the Ballerina `string` with which the `handle` is created\n-# + return - the `handle` that refers to the Java String representation of the Ballerina `string`\n+# + value - The Ballerina `string` with which the `handle` is created\n+# + return - The `handle`, which refers to the Java String representation of the Ballerina `string`\n public function fromString(string value) returns handle = external;\n \n # Returns a Ballerina `string` representation of the Java object referred by the `handle`.\n-#\n # If the `handle` refers to Java null, then this function returns a `nil` value.\n+# ```ballerina\n+# string? version = java:toString(versionProperty);\n+# ```\n #\n-# + value - the `handle` whose referred value to be converted to Ballerina `string`\n-# + return - the Ballerina `string` representation of the Java object referred by the `handle` or\n-#            returns `nil` of the `handle` refers to Java null\n+# + value - The `handle` of which the referred value is to be converted to Ballerina `string`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1f1f466e98253382fdd1c046fc440132fb2b1c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjkyODU2OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzowNDowN1rOGFsY1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzowNDowN1rOGFsY1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyMzMxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This module provides the API for Java interoperability in Ballerina. It includes a set of Ballerina annotations with which Java constructors, methods, and fields can provide implementations to Ballerina functions with external function bodies.  \n          \n          \n            \n            This module provides the API for Java interoperability in Ballerina. It includes a set of Ballerina annotations with which Java constructors, methods, and fields can provide implementations of Ballerina functions with external function bodies.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r408623319", "createdAt": "2020-04-15T07:04:07Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/Module.md", "diffHunk": "@@ -1,4 +1,9 @@\n-## Module overview\n-\n-This module provides the API for Java interoperability in Ballerina. It includes a set of Ballerina annotations with which Java constructors, methods and fields can provide implementations to Ballerina functions with external function bodies.  \n+This module provides the API for Java interoperability in Ballerina. It includes a set of Ballerina annotations with which Java constructors, methods, and fields can provide implementations to Ballerina functions with external function bodies.  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99216517449e5c3ed1ca27a5c0770c304f85650d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjkzMDIzOnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzowNDo0NFrOGFsZ8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzowNDo0NFrOGFsZ8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyMzYwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + name - An optional field, which describes name of the Java method. If this field is not provided, then the name\n          \n          \n            \n            # + name - An optional field, which describes the name of the Java method. If this field is not provided, then the name", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r408623601", "createdAt": "2020-04-15T07:04:44Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "diffHunk": "@@ -30,64 +30,59 @@ public type ArrayType record {|\n     byte dimensions;\n |};\n \n-# The `ConstructorData` type describes a Java constructor. If the `paramTypes` field is not specified,\n-# then parameter types are inferred from the corresponding Ballerina function.\n+# Describes a Java constructor. If the `paramTypes` field is not specified, then parameter types are inferred from\n+# the corresponding Ballerina function.\n #\n # + class - The class in which the constructor exists\n-# + paramTypes - An optional field that describes parameter types of the constructor\n+# + paramTypes - An optional field, which describes parameter types of the constructor\n public type ConstructorData record {|\n     Class class;\n     (Class | ArrayType)[] paramTypes?;\n |};\n \n-# The `MethodData` type describes a Java method. If the `paramTypes` field is not specified,\n-# then parameter types are inferred from the corresponding Ballerina function.\n+# Describes a Java method. If the `paramTypes` field is not specified, then parameter types are inferred from the\n+# corresponding Ballerina function.\n #\n-# + name - An optional field that describes name of the Java method. If this field is not provided,\n-#          then the name is inferred from the Ballerina function name\n+# + name - An optional field, which describes name of the Java method. If this field is not provided, then the name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99216517449e5c3ed1ca27a5c0770c304f85650d"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjkzNDQ5OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzowNjoxOFrOGFscnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzowNjoxOFrOGFscnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyNDI4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #            returns `nil` if the `handle` refers to Java null\n          \n          \n            \n            #            returns `nil` if the `handle` refers to Java null\n          \n      \n    \n    \n  \n\nNil should be replaced. by ().", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r408624284", "createdAt": "2020-04-15T07:06:18Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/ballerina_values_to_Java.bal", "diffHunk": "@@ -14,47 +14,63 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# Returns a `handle` that refers to the Java string representation of the Ballerina `string`.\n+# Returns a `handle`, which refers to the Java string representation of the Ballerina `string`.\n+# ```ballerina\n+# handle header = java:fromString(\"Content-Type\");\n+# ```\n #\n-# + value - the Ballerina `string` with which the `handle` is created\n-# + return - the `handle` that refers to the Java String representation of the Ballerina `string`\n+# + value - The Ballerina `string` with which the `handle` is created\n+# + return - The `handle`, which refers to the Java String representation of the Ballerina `string`\n public function fromString(string value) returns handle = external;\n \n # Returns a Ballerina `string` representation of the Java object referred by the `handle`.\n-#\n # If the `handle` refers to Java null, then this function returns a `nil` value.\n+# ```ballerina\n+# string? version = java:toString(versionProperty);\n+# ```\n #\n-# + value - the `handle` whose referred value to be converted to Ballerina `string`\n-# + return - the Ballerina `string` representation of the Java object referred by the `handle` or\n-#            returns `nil` of the `handle` refers to Java null\n+# + value - The `handle` of which the referred value is to be converted to a Ballerina `string`\n+# + return - The Ballerina `string` representation of the Java object referred by the `handle` or else\n+#            returns `nil` if the `handle` refers to Java null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99216517449e5c3ed1ca27a5c0770c304f85650d"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzEyODcyOnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/Module.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODowMzoxOVrOGFuUlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODowMzoxOVrOGFuUlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1NDk5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For information on the operations, which you can perform with the java module, see the below **Functions**. For examples on the usage of the operations, see the following.\n          \n          \n            \n            For information on the operations, which you can perform with the Java module, see the below **Functions**. For examples on the usage of the operations, see the following.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r408654998", "createdAt": "2020-04-15T08:03:19Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/Module.md", "diffHunk": "@@ -1,4 +1,9 @@\n-## Module overview\n-\n-This module provides the API for Java interoperability in Ballerina. It includes a set of Ballerina annotations with which Java constructors, methods and fields can provide implementations to Ballerina functions with external function bodies.  \n+This module provides the API for Java interoperability in Ballerina. It includes a set of Ballerina annotations with which Java constructors, methods, and fields can provide implementations of Ballerina functions with external function bodies.  \n \n+For information on the operations, which you can perform with the java module, see the below **Functions**. For examples on the usage of the operations, see the following.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "934dbc9a4ac31a14a2d500e91abbab0eb0ed9fc8"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzEyOTY2OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODowMzozNFrOGFuVHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODowMzozNFrOGFuVHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1NTEzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents a Java array type. It is used to specify parameter types in the `java:Constructor` and `java:Method`\n          \n          \n            \n            # Represents a Java array type. It is used to specify the parameter types in the `java:Constructor` and `java:Method`", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r408655133", "createdAt": "2020-04-15T08:03:34Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "diffHunk": "@@ -14,14 +14,14 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-# The `Class` type represents a Java class name.\n+# Represents a Java class name.\n public type Class string;\n \n-# The `Identifier` type represents a Java identifier.\n+# Represents a Java identifier.\n public type Identifier string;\n \n-# ArrayType represents a Java array type. It is used to specify parameter\n-# types in `Constructor` and `Method` annotations.\n+# Represents a Java array type. It is used to specify parameter types in the `java:Constructor` and `java:Method`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "934dbc9a4ac31a14a2d500e91abbab0eb0ed9fc8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzEzMDM4OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODowMzo0NlrOGFuVhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODowMzo0NlrOGFuVhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1NTIzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Describes a Java constructor. If the `paramTypes` field is not specified, then parameter types are inferred from\n          \n          \n            \n            # Describes a Java constructor. If the `paramTypes` field is not specified, then the parameter types are inferred from", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r408655236", "createdAt": "2020-04-15T08:03:46Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "diffHunk": "@@ -30,64 +30,59 @@ public type ArrayType record {|\n     byte dimensions;\n |};\n \n-# The `ConstructorData` type describes a Java constructor. If the `paramTypes` field is not specified,\n-# then parameter types are inferred from the corresponding Ballerina function.\n+# Describes a Java constructor. If the `paramTypes` field is not specified, then parameter types are inferred from", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "934dbc9a4ac31a14a2d500e91abbab0eb0ed9fc8"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzEzMDk4OnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODowMzo1N1rOGFuV4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODowMzo1N1rOGFuV4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1NTMzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + paramTypes - An optional field, which describes parameter types of the constructor\n          \n          \n            \n            # + paramTypes - An optional field, which describes the parameter types of the constructor", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r408655331", "createdAt": "2020-04-15T08:03:57Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "diffHunk": "@@ -30,64 +30,59 @@ public type ArrayType record {|\n     byte dimensions;\n |};\n \n-# The `ConstructorData` type describes a Java constructor. If the `paramTypes` field is not specified,\n-# then parameter types are inferred from the corresponding Ballerina function.\n+# Describes a Java constructor. If the `paramTypes` field is not specified, then parameter types are inferred from\n+# the corresponding Ballerina function.\n #\n # + class - The class in which the constructor exists\n-# + paramTypes - An optional field that describes parameter types of the constructor\n+# + paramTypes - An optional field, which describes parameter types of the constructor", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "934dbc9a4ac31a14a2d500e91abbab0eb0ed9fc8"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzEzMjYwOnYy", "diffSide": "RIGHT", "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODowNDoyNFrOGFuW4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODowNDoyNFrOGFuW4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1NTU4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # + paramTypes - An optional field, which describes parameter types of the method\n          \n          \n            \n            # + paramTypes - An optional field, which describes the parameter types of the method", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22556#discussion_r408655587", "createdAt": "2020-04-15T08:04:24Z", "author": {"login": "praneesha"}, "path": "stdlib/java/src/main/ballerina/src/java/annotations.bal", "diffHunk": "@@ -30,64 +30,59 @@ public type ArrayType record {|\n     byte dimensions;\n |};\n \n-# The `ConstructorData` type describes a Java constructor. If the `paramTypes` field is not specified,\n-# then parameter types are inferred from the corresponding Ballerina function.\n+# Describes a Java constructor. If the `paramTypes` field is not specified, then parameter types are inferred from\n+# the corresponding Ballerina function.\n #\n # + class - The class in which the constructor exists\n-# + paramTypes - An optional field that describes parameter types of the constructor\n+# + paramTypes - An optional field, which describes parameter types of the constructor\n public type ConstructorData record {|\n     Class class;\n     (Class | ArrayType)[] paramTypes?;\n |};\n \n-# The `MethodData` type describes a Java method. If the `paramTypes` field is not specified,\n-# then parameter types are inferred from the corresponding Ballerina function.\n+# Describes a Java method. If the `paramTypes` field is not specified, then parameter types are inferred from the\n+# corresponding Ballerina function.\n #\n-# + name - An optional field that describes name of the Java method. If this field is not provided,\n-#          then the name is inferred from the Ballerina function name\n+# + name - An optional field, which describes the name of the Java method. If this field is not provided, then the name\n+#          is inferred from the Ballerina function name\n # + class - The class in which the method exists\n-# + paramTypes - An optional field that describes parameter types of the method\n+# + paramTypes - An optional field, which describes parameter types of the method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "934dbc9a4ac31a14a2d500e91abbab0eb0ed9fc8"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4159, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}