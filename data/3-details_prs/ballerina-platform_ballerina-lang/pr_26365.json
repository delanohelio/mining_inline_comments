{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzODI4MzY0", "number": 26365, "title": "Make LS Config-API extensible for extension devs", "bodyText": "Purpose\n\nMake LS Config-API extensible for extension devs.\n\nFixes #26318\nApproach\n\nLSClientConfigHolder now provides generics API public <T> T getConfigAs(Class<T> type){...} which you can transform the client config json into an extended client configuration. For the listener callbacks you can use didChangeJson() in the ConfigListener interface.\n(Changes are in RED)\n\n\nSamples\n\nFor instance; consider a scenario where you want to add dataMapper config into VSCode client config and read it from the language server config API;\n\n1. First, you need to write you own config class extending LSClientConfig.\npublic class YourExtendedConfig extends LSClientConfig {\n    private final DataMapperConfig dataMapper;\n\n    protected YourExtendedConfig() {\n        super();\n        this.dataMapper = new DataMapperConfig();\n    }\n\n    public DataMapperConfig getDataMapper() {\n        return dataMapper;\n    }\n}\n2. Now you can read the data mapper config as below;\nLSClientConfigHolder.getInstance().getConfigAs(YourExtendedConfig.class).getDataMapper();\nOr you can register a callback listener;\nLSClientConfigHolder.getInstance().register(new ClientConfigListener() {\n        @Override\n        public void didChangeJson(JsonElement oldConfigJson, JsonElement newConfigJson) {\n                \n        }\n    }\n);\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-10-15T05:41:33Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26365", "merged": true, "mergeCommit": {"oid": "91f5233604fcc57b2445bec39de6168291ddbe66"}, "closed": true, "closedAt": "2020-10-28T14:01:34Z", "author": {"login": "rasika"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWNWOwgH2gAyNTAzODI4MzY0OjgyM2JiNzg0YjMxNDU5MGYwODdjMzliYWNlM2YyYTBmOTFhZWZjYzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdW2jlxgFqTUxODMzMDMwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "823bb784b314590f087c39bace3f2a0f91aefcc5", "author": {"user": {"login": "rasika", "name": "Rasika Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/823bb784b314590f087c39bace3f2a0f91aefcc5", "committedDate": "2020-10-26T05:16:37Z", "message": "Make ls-config-api extensible\n\nSigned-off-by: Rasika <info.rasika@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8857843efdf2404121429d12512ecc18518010e", "author": {"user": {"login": "rasika", "name": "Rasika Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f8857843efdf2404121429d12512ecc18518010e", "committedDate": "2020-10-26T07:46:23Z", "message": "Fix check-style issues\n\nSigned-off-by: Rasika <info.rasika@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bfde3f7bf8faaa2eda7c882489b94b7492417e9d", "author": {"user": {"login": "rasika", "name": "Rasika Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bfde3f7bf8faaa2eda7c882489b94b7492417e9d", "committedDate": "2020-10-15T05:41:13Z", "message": "Make ls-config-api extensible\n\nSigned-off-by: Rasika <info.rasika@gmail.com>"}, "afterCommit": {"oid": "f8857843efdf2404121429d12512ecc18518010e", "author": {"user": {"login": "rasika", "name": "Rasika Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f8857843efdf2404121429d12512ecc18518010e", "committedDate": "2020-10-26T07:46:23Z", "message": "Fix check-style issues\n\nSigned-off-by: Rasika <info.rasika@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MzQyNjE4", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26365#pullrequestreview-517342618", "createdAt": "2020-10-27T04:37:27Z", "commit": {"oid": "f8857843efdf2404121429d12512ecc18518010e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNDozNzoyN1rOHorJFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNDozNzoyN1rOHorJFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQxMTkyNA==", "bodyText": "Can't we depend only on the didChangeConfig? If so we do not need to have two interfaces for ExtendedClientConfigListener and ClientConfigListener. Now the hierarchy have three interfaces.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26365#discussion_r512411924", "createdAt": "2020-10-27T04:37:27Z", "author": {"login": "nadeeshaan"}, "path": "language-server/modules/langserver-compiler/src/main/java/org/ballerinalang/langserver/compiler/config/ExtendedClientConfigListener.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.ballerinalang.langserver.compiler.config;\n+\n+import com.google.gson.JsonElement;\n+\n+/**\n+ * Represents a ballerina client config change listener.\n+ *\n+ * @since 2.0.0\n+ */\n+@FunctionalInterface\n+public interface ExtendedClientConfigListener extends BaseClientConfigListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8857843efdf2404121429d12512ecc18518010e"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b29d9939f5c874a508c677eb418bace71bf3cd75", "author": {"user": {"login": "rasika", "name": "Rasika Perera"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b29d9939f5c874a508c677eb418bace71bf3cd75", "committedDate": "2020-10-27T08:11:10Z", "message": "Remove multiple interfaces for config-listeners\n\nSigned-off-by: Rasika <info.rasika@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MzAxNTM3", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26365#pullrequestreview-518301537", "createdAt": "2020-10-28T03:36:39Z", "commit": {"oid": "b29d9939f5c874a508c677eb418bace71bf3cd75"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMzozNjozOVrOHpY0-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMzozNjozOVrOHpY0-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzE2MDQ0Mw==", "bodyText": "Shall we rename this to DatamapperClientConfig or similar one, without using the extended word?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26365#discussion_r513160443", "createdAt": "2020-10-28T03:36:39Z", "author": {"login": "nadeeshaan"}, "path": "misc/ballerinalang-data-mapper/src/main/java/org/ballerinalang/datamapper/config/LSClientExtendedConfig.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.ballerinalang.datamapper.config;\n+\n+import org.ballerinalang.langserver.compiler.config.LSClientConfig;\n+\n+/**\n+ * Extended Ballerina Client Configuration.\n+ *\n+ * @since 2.0.0\n+ */\n+public class LSClientExtendedConfig extends LSClientConfig {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b29d9939f5c874a508c677eb418bace71bf3cd75"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MzAxOTQw", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26365#pullrequestreview-518301940", "createdAt": "2020-10-28T03:38:03Z", "commit": {"oid": "b29d9939f5c874a508c677eb418bace71bf3cd75"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MzMwMzAx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26365#pullrequestreview-518330301", "createdAt": "2020-10-28T05:17:19Z", "commit": {"oid": "b29d9939f5c874a508c677eb418bace71bf3cd75"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4368, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}