{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NzE2NzU5", "number": 26274, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMzo1MVrOEshICA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODoxNDoxN1rOEshXSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTE1NTI4OnYy", "diffSide": "LEFT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/ServiceDesugar.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMzo1MVrOHfzXfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODo0NDoxN1rOHf04sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwOTUwMQ==", "bodyText": "Don't we need this anymore?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26274#discussion_r503109501", "createdAt": "2020-10-12T08:03:51Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/ServiceDesugar.java", "diffHunk": "@@ -197,7 +197,8 @@ void engageCustomServiceDesugar(BLangService service, SymbolEnv env) {\n     }\n \n     private void engageCustomResourceDesugar(BLangFunction functionNode, SymbolEnv env) {\n-        httpFiltersDesugar.addHttpFilterStatementsToResource(functionNode, env);\n-        httpFiltersDesugar.addCustomAnnotationToResource(functionNode, env);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84962484828e7ee6c9f181dd2184995b331967ae"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEzNDM4NQ==", "bodyText": "Custom Annotation removal is one of the main objectives of the PR", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26274#discussion_r503134385", "createdAt": "2020-10-12T08:44:17Z", "author": {"login": "chamil321"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/ServiceDesugar.java", "diffHunk": "@@ -197,7 +197,8 @@ void engageCustomServiceDesugar(BLangService service, SymbolEnv env) {\n     }\n \n     private void engageCustomResourceDesugar(BLangFunction functionNode, SymbolEnv env) {\n-        httpFiltersDesugar.addHttpFilterStatementsToResource(functionNode, env);\n-        httpFiltersDesugar.addCustomAnnotationToResource(functionNode, env);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwOTUwMQ=="}, "originalCommit": {"oid": "84962484828e7ee6c9f181dd2184995b331967ae"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTE1OTc5OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/HttpFiltersDesugar.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowNTowMlrOHfzaDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowNTowMlrOHfzaDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExMDE1Nw==", "bodyText": "The \"if it is http\" part is no longer relevant, right? Since we do the check before calling this method now?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param resourceNode The resource to apply filter on if it is http\n          \n          \n            \n                 * @param resourceNode The resource to apply filters on", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26274#discussion_r503110157", "createdAt": "2020-10-12T08:05:02Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/HttpFiltersDesugar.java", "diffHunk": "@@ -175,7 +146,13 @@ private boolean isHttpResource(BLangFunction resourceNode) {\n                 CALLER_TYPE_NAME.equals(tsymbol.name.value);\n     }\n \n-    private void addFilterStatements(BLangFunction resourceNode, SymbolEnv env) {\n+    /**\n+     * Apply filter statements.\n+     *\n+     * @param resourceNode The resource to apply filter on if it is http", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84962484828e7ee6c9f181dd2184995b331967ae"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTE2NzcwOnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/HttpFiltersDesugar.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowNzoxNFrOHfzesQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowNzoxNFrOHfzesQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExMTM0NQ==", "bodyText": "Shouldn't the docs for resourceNode be updated? Filters are not relevant for this check, right?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26274#discussion_r503111345", "createdAt": "2020-10-12T08:07:14Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/HttpFiltersDesugar.java", "diffHunk": "@@ -155,18 +132,12 @@ private HttpFiltersDesugar(CompilerContext context) {\n     }\n \n     /**\n-     * Check if the resource is an http resource and apply filter.\n+     * Check if the resource is an http resource.\n      *\n      * @param resourceNode The resource to apply filter on if it is http\n-     * @param env          the symbol environment\n+     * @return true if the resource is an http resource\n      */\n-    void addHttpFilterStatementsToResource(BLangFunction resourceNode, SymbolEnv env) {\n-        if (isHttpResource(resourceNode)) {\n-            addFilterStatements(resourceNode, env);\n-        }\n-    }\n-\n-    private boolean isHttpResource(BLangFunction resourceNode) {\n+    static boolean isHttpResource(BLangFunction resourceNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84962484828e7ee6c9f181dd2184995b331967ae"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTE5NDMzOnYy", "diffSide": "RIGHT", "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BFunctionType.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODoxNDoxN1rOHfzuZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOTowODozNFrOHgKIjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExNTM2NQ==", "bodyText": "Wondering if we should have a public method in AnnotatableType that returns all the annotations, and move this logic to wherever this specific set of keys is needed.\n@Kishanthan, thoughts please?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26274#discussion_r503115365", "createdAt": "2020-10-12T08:14:17Z", "author": {"login": "MaryamZi"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BFunctionType.java", "diffHunk": "@@ -135,4 +138,14 @@ public String getAnnotationKey() {\n     public boolean isReadOnly() {\n         return true;\n     }\n+\n+    public List<BString> getParamAnnotationKeys() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84962484828e7ee6c9f181dd2184995b331967ae"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NjA2Mg==", "bodyText": "At least a method to get all keys would be sufficient (getAnnotationKeys) if you think the function is quite specif.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26274#discussion_r503256062", "createdAt": "2020-10-12T12:18:57Z", "author": {"login": "chamil321"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BFunctionType.java", "diffHunk": "@@ -135,4 +138,14 @@ public String getAnnotationKey() {\n     public boolean isReadOnly() {\n         return true;\n     }\n+\n+    public List<BString> getParamAnnotationKeys() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExNTM2NQ=="}, "originalCommit": {"oid": "84962484828e7ee6c9f181dd2184995b331967ae"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQwODY2MA==", "bodyText": "Yes, lets add the new method to the AnnotatableType class as it is the common class for all the annotatable types.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26274#discussion_r503408660", "createdAt": "2020-10-12T16:32:27Z", "author": {"login": "Kishanthan"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BFunctionType.java", "diffHunk": "@@ -135,4 +138,14 @@ public String getAnnotationKey() {\n     public boolean isReadOnly() {\n         return true;\n     }\n+\n+    public List<BString> getParamAnnotationKeys() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExNTM2NQ=="}, "originalCommit": {"oid": "84962484828e7ee6c9f181dd2184995b331967ae"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ4MjUxMQ==", "bodyText": "Fixed via 3b23fbf", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26274#discussion_r503482511", "createdAt": "2020-10-12T19:08:34Z", "author": {"login": "chamil321"}, "path": "bvm/ballerina-runtime/src/main/java/org/ballerinalang/jvm/types/BFunctionType.java", "diffHunk": "@@ -135,4 +138,14 @@ public String getAnnotationKey() {\n     public boolean isReadOnly() {\n         return true;\n     }\n+\n+    public List<BString> getParamAnnotationKeys() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzExNTM2NQ=="}, "originalCommit": {"oid": "84962484828e7ee6c9f181dd2184995b331967ae"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4898, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}