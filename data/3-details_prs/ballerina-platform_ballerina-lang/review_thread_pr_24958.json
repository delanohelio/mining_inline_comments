{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MDkyOTQ4", "number": 24958, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMzozNDowOVrOESo0KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMzozNjo1NlrOESo1_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTc4NTM3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMzozNDowOVrOG37VNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNTozODozMFrOG39Wkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5Njk1MQ==", "bodyText": "we haven't used peek() inside the resumeParsing method. Let's stick to a single pattern.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24958#discussion_r461296951", "createdAt": "2020-07-28T03:34:09Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -618,12 +618,15 @@ public STNode resumeParsing(ParserRuleContext context, Object... args) {\n                 return parseArgsBindingPatternEnd();\n             case TABLE_ROW_END:\n                 return parseTableRowEnd();\n+            case LIST_BP_OR_LIST_CONSTRUCTOR_MEMBER:\n+                return parseListBindingPatternOrListConstructorMember(peek().kind);\n+            case TUPLE_TYPE_DESC_OR_LIST_CONST_MEMBER:\n+                return parseTupleTypeDescOrListConstructorMember(peek().kind, (STNode) args[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc8f8e6faab2e9b255f828d18e0d2a007ef41e79"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMzMDA2Ng==", "bodyText": "alright", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24958#discussion_r461330066", "createdAt": "2020-07-28T05:38:30Z", "author": {"login": "m36dot"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -618,12 +618,15 @@ public STNode resumeParsing(ParserRuleContext context, Object... args) {\n                 return parseArgsBindingPatternEnd();\n             case TABLE_ROW_END:\n                 return parseTableRowEnd();\n+            case LIST_BP_OR_LIST_CONSTRUCTOR_MEMBER:\n+                return parseListBindingPatternOrListConstructorMember(peek().kind);\n+            case TUPLE_TYPE_DESC_OR_LIST_CONST_MEMBER:\n+                return parseTupleTypeDescOrListConstructorMember(peek().kind, (STNode) args[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5Njk1MQ=="}, "originalCommit": {"oid": "cc8f8e6faab2e9b255f828d18e0d2a007ef41e79"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTc5MDA3OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMzozNjo1NlrOG37X3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOTozODo0M1rOG4E1_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5NzYzMA==", "bodyText": "Not related to your PR.. the method-called for re-parse the same rule after inserting a token seems wrong.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24958#discussion_r461297630", "createdAt": "2020-07-28T03:36:56Z", "author": {"login": "SupunS"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -15671,7 +15674,8 @@ private STNode parseTupleTypeDescOrListConstructorMember(SyntaxKind nextTokenKin\n                     return parseTypeDescriptor(ParserRuleContext.TYPE_DESC_IN_TUPLE);\n                 }\n \n-                Solution solution = recover(peek(), ParserRuleContext.TUPLE_TYPE_DESC_OR_LIST_CONST_MEMBER);\n+                Solution solution = recover(peek(), ParserRuleContext.TUPLE_TYPE_DESC_OR_LIST_CONST_MEMBER,\n+                        annots);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc8f8e6faab2e9b255f828d18e0d2a007ef41e79"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ1Mjc5OQ==", "bodyText": "fixed", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24958#discussion_r461452799", "createdAt": "2020-07-28T09:38:43Z", "author": {"login": "m36dot"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerinalang/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -15671,7 +15674,8 @@ private STNode parseTupleTypeDescOrListConstructorMember(SyntaxKind nextTokenKin\n                     return parseTypeDescriptor(ParserRuleContext.TYPE_DESC_IN_TUPLE);\n                 }\n \n-                Solution solution = recover(peek(), ParserRuleContext.TUPLE_TYPE_DESC_OR_LIST_CONST_MEMBER);\n+                Solution solution = recover(peek(), ParserRuleContext.TUPLE_TYPE_DESC_OR_LIST_CONST_MEMBER,\n+                        annots);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5NzYzMA=="}, "originalCommit": {"oid": "cc8f8e6faab2e9b255f828d18e0d2a007ef41e79"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 457, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}