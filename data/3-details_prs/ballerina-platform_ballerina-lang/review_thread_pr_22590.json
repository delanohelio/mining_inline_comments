{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMTQ3ODU5", "number": 22590, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjozNzoyMVrODw6wrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo0NzoxOFrODw6zLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjIwOTcyOnYy", "diffSide": "RIGHT", "path": "stdlib/jwt/src/main/ballerina/src/jwt/Module.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjozNzoyMVrOGEK5bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjozODo0MVrOGEK55w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNjAzMQ==", "bodyText": "Can we remove this extra line?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22590#discussion_r407026031", "createdAt": "2020-04-11T06:37:21Z", "author": {"login": "kalaiyarasiganeshalingam"}, "path": "stdlib/jwt/src/main/ballerina/src/jwt/Module.md", "diffHunk": "@@ -1,43 +1,7 @@\n This module provides an inbound and outbound JWT authentication provider, which can be used to authenticate using a JWT and the functionality related to issuing and validating JWT.\n \n-### Inbound JWT Auth Provider\n-\n-The `jwt:InboundJwtAuthProvider` is another implementation of the `auth:InboundAuthProvider` interface, which authenticates by validating a JWT.\n-\n-```ballerina\n-jwt:InboundJwtAuthProvider jwtAuthProvider = new({\n-    issuer: \"example\",\n-    audience: \"ballerina\",\n-    trustStoreConfig: {\n-        certificateAlias: \"ballerina\",\n-        trustStore: {\n-            path: \"${ballerina.home}/bre/security/ballerinaTruststore.p12\",\n-            password: \"ballerina\"\n-        }\n-    }\n-});\n-```\n-\n-### Outbound JWT Auth Provider\n-\n-The `jwt:OutboundJwtAuthProvider` is another implementation of the `auth:OutboundAuthProvider` interface, which used to authenticate with external endpoint by generating a JWT.\n-\n-```ballerina\n-jwt:OutboundJwtAuthProvider jwtAuthProvider = new({\n-    issuer: \"example\",\n-    audience: [\"ballerina\"],\n-    keyStoreConfig: {\n-        keyAlias: \"ballerina\",\n-        keyPassword: \"ballerina\",\n-        keyStore: {\n-            path: \"${ballerina.home}/bre/security/ballerinaKeystore.p12\",\n-            password: \"ballerina\"\n-        }\n-    }\n-});\n-```\n-\n For information on the operations, which you can perform with this module, see the below **Functions**. For examples on the usage of the operations, see the following.\n  * [JWT Token Validation Example](https://ballerina.io/learn/by-example/jwt-issue-validate.html)\n  * [Secured Client with JWT Auth Example](https://ballerina.io/learn/by-example/secured-client-with-jwt-auth.html)\n- * [Secured Service with JWT Auth Example](https://ballerina.io/learn/by-example/secured-service-with-jwt-auth.html).\n\\ No newline at end of file\n+ * [Secured Service with JWT Auth Example](https://ballerina.io/learn/by-example/secured-service-with-jwt-auth.html).\n+ ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3626e9170ac66f864448de5cad3ea1da8c86f0c1"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNjE1MQ==", "bodyText": "Fixed.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22590#discussion_r407026151", "createdAt": "2020-04-11T06:38:41Z", "author": {"login": "ldclakmal"}, "path": "stdlib/jwt/src/main/ballerina/src/jwt/Module.md", "diffHunk": "@@ -1,43 +1,7 @@\n This module provides an inbound and outbound JWT authentication provider, which can be used to authenticate using a JWT and the functionality related to issuing and validating JWT.\n \n-### Inbound JWT Auth Provider\n-\n-The `jwt:InboundJwtAuthProvider` is another implementation of the `auth:InboundAuthProvider` interface, which authenticates by validating a JWT.\n-\n-```ballerina\n-jwt:InboundJwtAuthProvider jwtAuthProvider = new({\n-    issuer: \"example\",\n-    audience: \"ballerina\",\n-    trustStoreConfig: {\n-        certificateAlias: \"ballerina\",\n-        trustStore: {\n-            path: \"${ballerina.home}/bre/security/ballerinaTruststore.p12\",\n-            password: \"ballerina\"\n-        }\n-    }\n-});\n-```\n-\n-### Outbound JWT Auth Provider\n-\n-The `jwt:OutboundJwtAuthProvider` is another implementation of the `auth:OutboundAuthProvider` interface, which used to authenticate with external endpoint by generating a JWT.\n-\n-```ballerina\n-jwt:OutboundJwtAuthProvider jwtAuthProvider = new({\n-    issuer: \"example\",\n-    audience: [\"ballerina\"],\n-    keyStoreConfig: {\n-        keyAlias: \"ballerina\",\n-        keyPassword: \"ballerina\",\n-        keyStore: {\n-            path: \"${ballerina.home}/bre/security/ballerinaKeystore.p12\",\n-            password: \"ballerina\"\n-        }\n-    }\n-});\n-```\n-\n For information on the operations, which you can perform with this module, see the below **Functions**. For examples on the usage of the operations, see the following.\n  * [JWT Token Validation Example](https://ballerina.io/learn/by-example/jwt-issue-validate.html)\n  * [Secured Client with JWT Auth Example](https://ballerina.io/learn/by-example/secured-client-with-jwt-auth.html)\n- * [Secured Service with JWT Auth Example](https://ballerina.io/learn/by-example/secured-service-with-jwt-auth.html).\n\\ No newline at end of file\n+ * [Secured Service with JWT Auth Example](https://ballerina.io/learn/by-example/secured-service-with-jwt-auth.html).\n+ ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNjAzMQ=="}, "originalCommit": {"oid": "3626e9170ac66f864448de5cad3ea1da8c86f0c1"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjIxNjEzOnYy", "diffSide": "RIGHT", "path": "stdlib/jwt/src/main/ballerina/src/jwt/outbound_jwt_auth_provider.bal", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo0NzoxOFrOGEK8dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNjo0NzoxOFrOGEK8dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAyNjgwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Represents outbound JWT auth provider, which is used to authenticate with external endpoint by generating a JWT.\n          \n          \n            \n            # Represents the outbound JWT auth provider, which is used to authenticate with an external endpoint by generating a JWT.", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/22590#discussion_r407026806", "createdAt": "2020-04-11T06:47:18Z", "author": {"login": "praneesha"}, "path": "stdlib/jwt/src/main/ballerina/src/jwt/outbound_jwt_auth_provider.bal", "diffHunk": "@@ -19,7 +19,22 @@ import ballerina/runtime;\n import ballerina/system;\n import ballerina/time;\n \n-# Represents outbound JWT authenticator.\n+# Represents outbound JWT auth provider, which is used to authenticate with external endpoint by generating a JWT.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a804215782a52a25e1d704973fb40456ec347d3"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4331, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}