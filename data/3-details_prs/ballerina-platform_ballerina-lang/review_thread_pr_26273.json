{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NzAwOTE4", "number": 26273, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODowNzoxMVrOErfshg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODowNzoxMVrOErfshg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDQzNTI2OnYy", "diffSide": "RIGHT", "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODowNzoxMVrOHeStQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMDo1NDozNlrOHeY_NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUyNTgyNg==", "bodyText": "since we check the kind can consume directly.\nAlso the method we are in is parseTypeDescOrExpr. Is it only called within a tuple?\nOtherwise will have to do an additional check?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26273#discussion_r501525826", "createdAt": "2020-10-08T08:07:11Z", "author": {"login": "lochana-chathura"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -12860,7 +12860,14 @@ private STNode parseTypeDescOrExpr() {\n                     return parseActionOrExpressionInLhs(STNodeFactory.createEmptyNodeList());\n                 }\n \n-                return parseTypeDescriptor(ParserRuleContext.TYPE_DESC_IN_TYPE_BINDING_PATTERN);\n+                STNode typedesc =  parseTypeDescriptor(ParserRuleContext.TYPE_DESC_IN_TYPE_BINDING_PATTERN);\n+                // Tuple type desc can contain rest descriptor which is not a regular type desc,\n+                // hence handle it separately.\n+                if (peek().kind == SyntaxKind.ELLIPSIS_TOKEN) {\n+                    STNode ellipsis = parseEllipsis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db800308e7b19307d37ff114683a197a86858c4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYyODcyNA==", "bodyText": "Updated, thanx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26273#discussion_r501628724", "createdAt": "2020-10-08T10:54:36Z", "author": {"login": "rdulmina"}, "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -12860,7 +12860,14 @@ private STNode parseTypeDescOrExpr() {\n                     return parseActionOrExpressionInLhs(STNodeFactory.createEmptyNodeList());\n                 }\n \n-                return parseTypeDescriptor(ParserRuleContext.TYPE_DESC_IN_TYPE_BINDING_PATTERN);\n+                STNode typedesc =  parseTypeDescriptor(ParserRuleContext.TYPE_DESC_IN_TYPE_BINDING_PATTERN);\n+                // Tuple type desc can contain rest descriptor which is not a regular type desc,\n+                // hence handle it separately.\n+                if (peek().kind == SyntaxKind.ELLIPSIS_TOKEN) {\n+                    STNode ellipsis = parseEllipsis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUyNTgyNg=="}, "originalCommit": {"oid": "3db800308e7b19307d37ff114683a197a86858c4"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4895, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}