{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MjYwNjQw", "number": 25184, "title": "Fix scoping issue with type narrowed symbols for arrow expressions", "bodyText": "Purpose\nCurrently, in a type narrowing situation, the narrowed symbols are visible inside the scope of arrow function. However, for any lambda, it was deciede not to type narrow and use the original symbol as it it.\nThe follwing will now fail with compilation error.\nfunction testArrowExpressionWithTypeNarrowing() {\n    string|int s = \"World\";\n    if (s is string) {\n        // should fail operator '+' not defined for 'string' and '(string|int)'\n        function() returns string a = () => \"Hello \" + s;\n    }\n}\nThis PR fixes the issue with arrow expresions. Lambda functions are working as expected.\nFixes #24956\nApproach\n\nDescribe how you are implementing the solutions along with the design details.\n\nSamples\n\nProvide high-level details about the samples related to this feature.\n\nRemarks\n\nList any other known issues, related PRs, TODO items, or any other notes related to the PR.\n\nCheck List\n\n Read the Contributing Guide\n Updated Change Log\n Checked Tooling Support (#)\n Added necessary tests\n\n Unit Tests\n Spec Conformance Tests\n Integration Tests\n Ballerina By Example Tests\n\n\n Increased Test Coverage\n Added necessary documentation\n\n API documentation\n Module documentation in Module.md files\n Ballerina By Examples", "createdAt": "2020-08-10T04:00:12Z", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25184", "merged": true, "mergeCommit": {"oid": "ba450c526cb6d4321c02699cc3926afea3f7c1f3"}, "closed": true, "closedAt": "2020-08-11T16:36:20Z", "author": {"login": "Kishanthan"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9Z-bwgH2gAyNDY1MjYwNjQwOjc4MWIzZjE5NTQzM2U2NWMxZTBmNzg2YTNiMTE0ZDA4MTE2OTNjMDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc95cbRAFqTQ2NTIzNTgxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "781b3f195433e65c1e0f786a3b114d0811693c03", "author": {"user": {"login": "Kishanthan", "name": "Kishanthan Thangarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/781b3f195433e65c1e0f786a3b114d0811693c03", "committedDate": "2020-08-10T03:51:17Z", "message": "Skip type narrowed symbols for arrow function scope\n\nWe should skip type narrowed symbols in the scope for arrow expr\nand the same it is done for lambda functions as well."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc8432fb8aff3d7733f9e8dec722924d87997a7c", "author": {"user": {"login": "Kishanthan", "name": "Kishanthan Thangarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bc8432fb8aff3d7733f9e8dec722924d87997a7c", "committedDate": "2020-08-10T03:53:47Z", "message": "Add test cases covering arrow expr type narrowing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "179a968ac6a61817b90bda742d1e3d8bf944e168", "author": {"user": {"login": "Kishanthan", "name": "Kishanthan Thangarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/179a968ac6a61817b90bda742d1e3d8bf944e168", "committedDate": "2020-08-10T03:54:13Z", "message": "Merge branch 'master' of into fix-24956"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NzkyMzQx", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25184#pullrequestreview-464792341", "createdAt": "2020-08-11T06:51:46Z", "commit": {"oid": "179a968ac6a61817b90bda742d1e3d8bf944e168"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNjo1MTo0NlrOG-qoOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNjo1MTo0NlrOG-qoOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM2MzMyMw==", "bodyText": "Should we try and extract this logic out to a separate method, since it seems to be used across multiple methods?", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25184#discussion_r468363323", "createdAt": "2020-08-11T06:51:46Z", "author": {"login": "MaryamZi"}, "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/model/SymbolEnv.java", "diffHunk": "@@ -181,8 +181,14 @@ public static SymbolEnv createResourceActionSymbolEnv(BLangInvokableNode node, S\n     }\n \n     public static SymbolEnv createArrowFunctionSymbolEnv(BLangArrowFunction node, SymbolEnv env) {\n-        SymbolEnv symbolEnv = new SymbolEnv(node, new Scope(env.scope.owner));\n-        symbolEnv.enclEnv = env;\n+        Scope scope = new Scope(env.scope.owner);\n+        env.scope.entries.entrySet().stream()\n+                // skip the type narrowed symbols when taking the snapshot for closures.\n+                .filter(entry -> (entry.getValue().symbol.tag & SymTag.VARIABLE) != SymTag.VARIABLE ||\n+                        ((BVarSymbol) entry.getValue().symbol).originalSymbol == null)\n+                .forEach(entry -> scope.entries.put(entry.getKey(), entry.getValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "179a968ac6a61817b90bda742d1e3d8bf944e168"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c76a4d4fc951a76c65935598df211545dfb3deb", "author": {"user": {"login": "Kishanthan", "name": "Kishanthan Thangarajah"}}, "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0c76a4d4fc951a76c65935598df211545dfb3deb", "committedDate": "2020-08-11T11:33:11Z", "message": "Refactor closure env cloning logic to seperate method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MjM1ODE1", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/25184#pullrequestreview-465235815", "createdAt": "2020-08-11T16:31:06Z", "commit": {"oid": "0c76a4d4fc951a76c65935598df211545dfb3deb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3623, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}