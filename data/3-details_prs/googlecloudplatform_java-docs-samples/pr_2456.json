{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNzc0MzM0", "number": 2456, "title": "Rename FhirResourceGetHistory -> FhirResourceListHistory, implement FhirResourceGetHistory.", "bodyText": "", "createdAt": "2020-03-20T23:06:37Z", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456", "merged": true, "mergeCommit": {"oid": "b7b68e35898b72e95f08988bd7adc6278ab97a6b"}, "closed": true, "closedAt": "2020-04-08T21:34:35Z", "author": {"login": "dzlier-gcp"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPpy1rgFqTM3ODg3MTIyOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVuoUlABqjMyMTU4OTUwNjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODcxMjI5", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#pullrequestreview-378871229", "createdAt": "2020-03-21T00:16:35Z", "commit": {"oid": "b095171872aadc912df2bd1dedc27ca0960e9926"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwMDoxNjozNVrOF5mP8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwMDoxNjozNVrOF5mP8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzOTgyNQ==", "bodyText": "Care to give an example?  (What does a Version-id look like)", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r395939825", "createdAt": "2020-03-21T00:16:35Z", "author": {"login": "lesv"}, "path": "healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceGetHistory.java", "diffHunk": "@@ -44,18 +44,19 @@\n   private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n   private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n \n-  public static void fhirResourceGetHistory(String resourceName)\n+  public static void fhirResourceGetHistory(String resourceName, String versionId)\n       throws IOException, URISyntaxException {\n     // String resourceName =\n     //    String.format(\n     //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n+    // String versionId = \"version-id\"\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b095171872aadc912df2bd1dedc27ca0960e9926"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODcxMzk5", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#pullrequestreview-378871399", "createdAt": "2020-03-21T00:17:36Z", "commit": {"oid": "b095171872aadc912df2bd1dedc27ca0960e9926"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwMDoxNzozN1rOF5mQmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwMDoxOTo1MVrOF5mR5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzOTk5Mw==", "bodyText": "Should this be public since it's guiding the input?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r395939993", "createdAt": "2020-03-21T00:17:37Z", "author": {"login": "lesv"}, "path": "healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_list_resource_history]\n+\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1beta1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1beta1.CloudHealthcareScopes;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.impl.client.HttpClients;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+\n+public class FhirResourceListHistory {\n+  private static final String FHIR_NAME = \"projects/%s/locations/%s/datasets/%s/fhirStores/%s\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b095171872aadc912df2bd1dedc27ca0960e9926"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk0MDE1MQ==", "bodyText": "Should the v1beta1 be defined near the top in all caps so users could easily change it?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r395940151", "createdAt": "2020-03-21T00:18:33Z", "author": {"login": "lesv"}, "path": "healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_list_resource_history]\n+\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1beta1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1beta1.CloudHealthcareScopes;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.impl.client.HttpClients;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+\n+public class FhirResourceListHistory {\n+  private static final String FHIR_NAME = \"projects/%s/locations/%s/datasets/%s/fhirStores/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceListHistory(String resourceName)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\n+        \"%sv1beta1/%s/_history\", client.getRootUrl(), resourceName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b095171872aadc912df2bd1dedc27ca0960e9926"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk0MDMwMQ==", "bodyText": "1 * 60 * 1000 might be clearer", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r395940301", "createdAt": "2020-03-21T00:19:39Z", "author": {"login": "lesv"}, "path": "healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_list_resource_history]\n+\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1beta1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1beta1.CloudHealthcareScopes;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.impl.client.HttpClients;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+\n+public class FhirResourceListHistory {\n+  private static final String FHIR_NAME = \"projects/%s/locations/%s/datasets/%s/fhirStores/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceListHistory(String resourceName)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\n+        \"%sv1beta1/%s/_history\", client.getRootUrl(), resourceName);\n+    URIBuilder uriBuilder = new URIBuilder(uri)\n+        .setParameter(\"access_token\", getAccessToken());\n+\n+    HttpUriRequest request = RequestBuilder\n+        .get()\n+        .setUri(uriBuilder.build())\n+        .addHeader(\"Content-Type\", \"application/fhir+json\")\n+        .addHeader(\"Accept-Charset\", \"utf-8\")\n+        .addHeader(\"Accept\", \"application/fhir+json; charset=utf-8\")\n+        .build();\n+\n+    // Execute the request and process the results.\n+    HttpResponse response = httpClient.execute(request);\n+    HttpEntity responseEntity = response.getEntity();\n+    if (response.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {\n+      System.err.print(String.format(\n+          \"Exception retrieving FHIR history: %s\\n\", response.getStatusLine().toString()));\n+      responseEntity.writeTo(System.err);\n+      throw new RuntimeException();\n+    }\n+    System.out.println(\"FHIR resource history retrieved: \");\n+    responseEntity.writeTo(System.out);\n+  }\n+\n+  private static CloudHealthcare createClient() throws IOException {\n+    // Use Application Default Credentials (ADC) to authenticate the requests\n+    // For more information see https://cloud.google.com/docs/authentication/production\n+    GoogleCredential credential =\n+        GoogleCredential.getApplicationDefault(HTTP_TRANSPORT, JSON_FACTORY)\n+            .createScoped(Collections.singleton(CloudHealthcareScopes.CLOUD_PLATFORM));\n+\n+    // Create a HttpRequestInitializer, which will provide a baseline configuration to all requests.\n+    HttpRequestInitializer requestInitializer =\n+        request -> {\n+          credential.initialize(request);\n+          request.setConnectTimeout(60000); // 1 minute connect timeout\n+          request.setReadTimeout(60000); // 1 minute read timeout", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b095171872aadc912df2bd1dedc27ca0960e9926"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk0MDMyNQ==", "bodyText": "Why do we need to set this?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r395940325", "createdAt": "2020-03-21T00:19:51Z", "author": {"login": "lesv"}, "path": "healthcare/v1beta1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceListHistory.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_list_resource_history]\n+\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1beta1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1beta1.CloudHealthcareScopes;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.impl.client.HttpClients;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+\n+public class FhirResourceListHistory {\n+  private static final String FHIR_NAME = \"projects/%s/locations/%s/datasets/%s/fhirStores/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceListHistory(String resourceName)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\n+        \"%sv1beta1/%s/_history\", client.getRootUrl(), resourceName);\n+    URIBuilder uriBuilder = new URIBuilder(uri)\n+        .setParameter(\"access_token\", getAccessToken());\n+\n+    HttpUriRequest request = RequestBuilder\n+        .get()\n+        .setUri(uriBuilder.build())\n+        .addHeader(\"Content-Type\", \"application/fhir+json\")\n+        .addHeader(\"Accept-Charset\", \"utf-8\")\n+        .addHeader(\"Accept\", \"application/fhir+json; charset=utf-8\")\n+        .build();\n+\n+    // Execute the request and process the results.\n+    HttpResponse response = httpClient.execute(request);\n+    HttpEntity responseEntity = response.getEntity();\n+    if (response.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {\n+      System.err.print(String.format(\n+          \"Exception retrieving FHIR history: %s\\n\", response.getStatusLine().toString()));\n+      responseEntity.writeTo(System.err);\n+      throw new RuntimeException();\n+    }\n+    System.out.println(\"FHIR resource history retrieved: \");\n+    responseEntity.writeTo(System.out);\n+  }\n+\n+  private static CloudHealthcare createClient() throws IOException {\n+    // Use Application Default Credentials (ADC) to authenticate the requests\n+    // For more information see https://cloud.google.com/docs/authentication/production\n+    GoogleCredential credential =\n+        GoogleCredential.getApplicationDefault(HTTP_TRANSPORT, JSON_FACTORY)\n+            .createScoped(Collections.singleton(CloudHealthcareScopes.CLOUD_PLATFORM));\n+\n+    // Create a HttpRequestInitializer, which will provide a baseline configuration to all requests.\n+    HttpRequestInitializer requestInitializer =\n+        request -> {\n+          credential.initialize(request);\n+          request.setConnectTimeout(60000); // 1 minute connect timeout\n+          request.setReadTimeout(60000); // 1 minute read timeout", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk0MDMwMQ=="}, "originalCommit": {"oid": "b095171872aadc912df2bd1dedc27ca0960e9926"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNDgyNzM0", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#pullrequestreview-380482734", "createdAt": "2020-03-24T16:26:14Z", "commit": {"oid": "b095171872aadc912df2bd1dedc27ca0960e9926"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b095171872aadc912df2bd1dedc27ca0960e9926", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/b095171872aadc912df2bd1dedc27ca0960e9926", "committedDate": "2020-03-20T23:04:57Z", "message": "Rename FhirResourceGetHistory -> FhirResourceListHistory, implement FhirResourceGetHistory."}, "afterCommit": {"oid": "27f9857f98535ee8ec698668a2e7ff53f25428d1", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/27f9857f98535ee8ec698668a2e7ff53f25428d1", "committedDate": "2020-04-06T21:23:49Z", "message": "Resolve #2456."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "27f9857f98535ee8ec698668a2e7ff53f25428d1", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/27f9857f98535ee8ec698668a2e7ff53f25428d1", "committedDate": "2020-04-06T21:23:49Z", "message": "Resolve #2456."}, "afterCommit": {"oid": "d4676645ee70a6c25481a47fa05d14fb4211ca11", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d4676645ee70a6c25481a47fa05d14fb4211ca11", "committedDate": "2020-04-08T18:11:35Z", "message": "Resolve #2456."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73951b15b68806b39dde645fdca2a24ed6468440", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/73951b15b68806b39dde645fdca2a24ed6468440", "committedDate": "2020-04-08T18:13:13Z", "message": "Rename FhirResourceGetHistory -> FhirResourceListHistory, implement FhirResourceGetHistory."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4676645ee70a6c25481a47fa05d14fb4211ca11", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d4676645ee70a6c25481a47fa05d14fb4211ca11", "committedDate": "2020-04-08T18:11:35Z", "message": "Resolve #2456."}, "afterCommit": {"oid": "4fe7615fc442435d49cdde9016dbbbaf9e1fefe3", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/4fe7615fc442435d49cdde9016dbbbaf9e1fefe3", "committedDate": "2020-04-08T18:13:13Z", "message": "Resolve #2456."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2679e1c4a40f62d9ef07c66dd6f6f55616e67af8", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/2679e1c4a40f62d9ef07c66dd6f6f55616e67af8", "committedDate": "2020-04-08T18:39:17Z", "message": "Resolve #2456."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4fe7615fc442435d49cdde9016dbbbaf9e1fefe3", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/4fe7615fc442435d49cdde9016dbbbaf9e1fefe3", "committedDate": "2020-04-08T18:13:13Z", "message": "Resolve #2456."}, "afterCommit": {"oid": "2679e1c4a40f62d9ef07c66dd6f6f55616e67af8", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/2679e1c4a40f62d9ef07c66dd6f6f55616e67af8", "committedDate": "2020-04-08T18:39:17Z", "message": "Resolve #2456."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjM4MjQ1", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#pullrequestreview-390238245", "createdAt": "2020-04-08T18:45:05Z", "commit": {"oid": "2679e1c4a40f62d9ef07c66dd6f6f55616e67af8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODo0NTowNlrOGC8R9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODo0NTowNlrOGC8R9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczNzk3NA==", "bodyText": "Shouldn't this be either 8 or 11?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r405737974", "createdAt": "2020-04-08T18:45:06Z", "author": {"login": "lesv"}, "path": "healthcare/v1beta1/pom.xml", "diffHunk": "@@ -6,6 +6,18 @@\n   <groupId>com.google.samples</groupId>\n   <artifactId>healthcare-samples</artifactId>\n   <version>1.0-SNAPSHOT</version>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <configuration>\n+          <source>10</source>\n+          <target>10</target>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2679e1c4a40f62d9ef07c66dd6f6f55616e67af8"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjQzMDcx", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#pullrequestreview-390243071", "createdAt": "2020-04-08T18:52:09Z", "commit": {"oid": "2679e1c4a40f62d9ef07c66dd6f6f55616e67af8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODo1MjowOVrOGC8hlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODo1MjowOVrOGC8hlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc0MTk3Mg==", "bodyText": "This is fine for tests, but in samples, I'd prefer we used json objects using Guava's GSON, Jackson, or org.json JAVA-Json", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#discussion_r405741972", "createdAt": "2020-04-08T18:52:09Z", "author": {"login": "lesv"}, "path": "healthcare/v1beta1/src/test/java/snippets/healthcare/FhirResourceTests.java", "diffHunk": "@@ -235,9 +236,25 @@ public void test_FhirResourceGetHistory() throws Exception {\n     FhirResourcePatch.fhirResourcePatch(\n         fhirResourceName,\n         \"[{\\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/active\\\", \\\"value\\\": false}]\");\n-    FhirResourceGetHistory.fhirResourceGetHistory(fhirResourceName);\n+    // Get versionId from results of fhirResourcePatch.\n+    String versionId;\n+    Matcher idMatcher = Pattern.compile(\"\\\"versionId\\\": \\\"(.*)\\\"\").matcher(bout.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2679e1c4a40f62d9ef07c66dd6f6f55616e67af8"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjQ0MzY5", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#pullrequestreview-390244369", "createdAt": "2020-04-08T18:54:04Z", "commit": {"oid": "2679e1c4a40f62d9ef07c66dd6f6f55616e67af8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7db7fc8c0eccd7366a5f92fe856d4da57c3025c3", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/7db7fc8c0eccd7366a5f92fe856d4da57c3025c3", "committedDate": "2020-04-08T19:01:33Z", "message": "Use Java 11, and GSON in FhirResourceTests."}, "afterCommit": {"oid": "a97abd63938329a06d31c5127354fded83568888", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/a97abd63938329a06d31c5127354fded83568888", "committedDate": "2020-04-08T20:05:51Z", "message": "Use Java 11, and GSON in FhirResourceTests."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a97abd63938329a06d31c5127354fded83568888", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/a97abd63938329a06d31c5127354fded83568888", "committedDate": "2020-04-08T20:05:51Z", "message": "Use Java 11, and GSON in FhirResourceTests."}, "afterCommit": {"oid": "d7bbeb709c45ea8533b7534c3bdf68b7daaeec89", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d7bbeb709c45ea8533b7534c3bdf68b7daaeec89", "committedDate": "2020-04-08T20:12:53Z", "message": "Use Java 11, and GSON in FhirResourceTests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMzExNDIw", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2456#pullrequestreview-390311420", "createdAt": "2020-04-08T20:35:04Z", "commit": {"oid": "d7bbeb709c45ea8533b7534c3bdf68b7daaeec89"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c70523e686245660dfc10430fba28d9b7fdb0dc8", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/c70523e686245660dfc10430fba28d9b7fdb0dc8", "committedDate": "2020-04-08T21:18:00Z", "message": "Use Java 11, and GSON in FhirResourceTests."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d7bbeb709c45ea8533b7534c3bdf68b7daaeec89", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d7bbeb709c45ea8533b7534c3bdf68b7daaeec89", "committedDate": "2020-04-08T20:12:53Z", "message": "Use Java 11, and GSON in FhirResourceTests."}, "afterCommit": {"oid": "c70523e686245660dfc10430fba28d9b7fdb0dc8", "author": {"user": {"login": "dzlier-gcp", "name": "Dane Zeke Liergaard"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/c70523e686245660dfc10430fba28d9b7fdb0dc8", "committedDate": "2020-04-08T21:18:00Z", "message": "Use Java 11, and GSON in FhirResourceTests."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 860, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}