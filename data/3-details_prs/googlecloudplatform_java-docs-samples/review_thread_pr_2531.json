{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1OTA5OTQ0", "number": 2531, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMToyNDozNVrODs2_dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMToyNDozNVrODs2_dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MzY0OTE3OnYy", "diffSide": "RIGHT", "path": "functions/snippets/src/main/java/com/example/functions/HelloGcsGeneric.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMToyNDozNVrOF98yMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMTo0MDoyOVrOF99Q1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUwMzM0NA==", "bodyText": "Ok, but one would imagine such a thing as doing a single string.Format() and log just once.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2531#discussion_r400503344", "createdAt": "2020-03-30T21:24:35Z", "author": {"login": "lesv"}, "path": "functions/snippets/src/main/java/com/example/functions/HelloGcsGeneric.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.functions;\n+\n+// [START functions_helloworld_storage_generic]\n+import com.google.cloud.functions.BackgroundFunction;\n+import com.google.cloud.functions.Context;\n+import java.util.logging.Logger;\n+\n+public class HelloGcsGeneric implements BackgroundFunction<GcsEvent> {\n+  private static final Logger LOGGER = Logger.getLogger(HelloGcs.class.getName());\n+\n+  @Override\n+  public void accept(GcsEvent event, Context context) {\n+    LOGGER.info(\"Event: \" + context.eventId());\n+    LOGGER.info(\"Event Type: \" + context.eventType());\n+    LOGGER.info(\"Bucket: \" + event.getBucket());\n+    LOGGER.info(\"File: \" + event.getName());\n+    LOGGER.info(\"Metageneration: \" + event.getMetageneration());\n+    LOGGER.info(\"Created: \" + event.getTimeCreated());\n+    LOGGER.info(\"Updated: \" + event.getUpdated());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "549b407782bead5e65eba2612f33e52ad04c8ca2"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUwNDAxNA==", "bodyText": "Even if it's across multiple lines? (Doable, but might not look the cleanest IMO)", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2531#discussion_r400504014", "createdAt": "2020-03-30T21:26:00Z", "author": {"login": "ace-n"}, "path": "functions/snippets/src/main/java/com/example/functions/HelloGcsGeneric.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.functions;\n+\n+// [START functions_helloworld_storage_generic]\n+import com.google.cloud.functions.BackgroundFunction;\n+import com.google.cloud.functions.Context;\n+import java.util.logging.Logger;\n+\n+public class HelloGcsGeneric implements BackgroundFunction<GcsEvent> {\n+  private static final Logger LOGGER = Logger.getLogger(HelloGcs.class.getName());\n+\n+  @Override\n+  public void accept(GcsEvent event, Context context) {\n+    LOGGER.info(\"Event: \" + context.eventId());\n+    LOGGER.info(\"Event Type: \" + context.eventType());\n+    LOGGER.info(\"Bucket: \" + event.getBucket());\n+    LOGGER.info(\"File: \" + event.getName());\n+    LOGGER.info(\"Metageneration: \" + event.getMetageneration());\n+    LOGGER.info(\"Created: \" + event.getTimeCreated());\n+    LOGGER.info(\"Updated: \" + event.getUpdated());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUwMzM0NA=="}, "originalCommit": {"oid": "549b407782bead5e65eba2612f33e52ad04c8ca2"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxMTE5MA==", "bodyText": "This is grouped data, you want it to appear in the log together.  It will on Functions, so it's probably Ok in this use case, but other use cases where things are multi-threaded and concurrent, not so much.  A simple string makes it be just a single log write, how it actually appears in the logs might not have the \\n's, but at least they would all be together.  There are other techniques to do this, but a single string is the easiest.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2531#discussion_r400511190", "createdAt": "2020-03-30T21:40:29Z", "author": {"login": "lesv"}, "path": "functions/snippets/src/main/java/com/example/functions/HelloGcsGeneric.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.functions;\n+\n+// [START functions_helloworld_storage_generic]\n+import com.google.cloud.functions.BackgroundFunction;\n+import com.google.cloud.functions.Context;\n+import java.util.logging.Logger;\n+\n+public class HelloGcsGeneric implements BackgroundFunction<GcsEvent> {\n+  private static final Logger LOGGER = Logger.getLogger(HelloGcs.class.getName());\n+\n+  @Override\n+  public void accept(GcsEvent event, Context context) {\n+    LOGGER.info(\"Event: \" + context.eventId());\n+    LOGGER.info(\"Event Type: \" + context.eventType());\n+    LOGGER.info(\"Bucket: \" + event.getBucket());\n+    LOGGER.info(\"File: \" + event.getName());\n+    LOGGER.info(\"Metageneration: \" + event.getMetageneration());\n+    LOGGER.info(\"Created: \" + event.getTimeCreated());\n+    LOGGER.info(\"Updated: \" + event.getUpdated());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUwMzM0NA=="}, "originalCommit": {"oid": "549b407782bead5e65eba2612f33e52ad04c8ca2"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 954, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}