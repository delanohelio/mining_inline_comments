{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NTEzMzU2", "number": 3049, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjoyODo1MVrOECo-KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjozMDoxNVrOECpAdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjAzODgxOnYy", "diffSide": "RIGHT", "path": "dlp/src/test/java/dlp/snippets/InspectTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjoyODo1MVrOGfOI3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjozODoxOVrOGfOf8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM5MDY4NA==", "bodyText": "It's actually best to throw the most specific exceptions so that users understand and can mitigate what's going on.  That said, in a test, this is less important.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3049#discussion_r435390684", "createdAt": "2020-06-04T16:28:51Z", "author": {"login": "lesv"}, "path": "dlp/src/test/java/dlp/snippets/InspectTests.java", "diffHunk": "@@ -124,60 +122,30 @@ public void testInspectImageFile() {\n   }\n \n   @Test\n-  public void testInspectGcsFile() throws InterruptedException, ExecutionException, IOException {\n-\n+  public void testInspectGcsFile() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f58e94bc1c87d79a0a3959ae90f689cfb218cac"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM5NjU5NQ==", "bodyText": "See below.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3049#discussion_r435396595", "createdAt": "2020-06-04T16:38:19Z", "author": {"login": "sushicw"}, "path": "dlp/src/test/java/dlp/snippets/InspectTests.java", "diffHunk": "@@ -124,60 +122,30 @@ public void testInspectImageFile() {\n   }\n \n   @Test\n-  public void testInspectGcsFile() throws InterruptedException, ExecutionException, IOException {\n-\n+  public void testInspectGcsFile() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM5MDY4NA=="}, "originalCommit": {"oid": "0f58e94bc1c87d79a0a3959ae90f689cfb218cac"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjA0NDY4OnYy", "diffSide": "RIGHT", "path": "dlp/src/test/java/dlp/snippets/InspectTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjozMDoxNVrOGfOMkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjozODoxMVrOGfOfjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM5MTYzMw==", "bodyText": "Why did you reduce the throws here?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3049#discussion_r435391633", "createdAt": "2020-06-04T16:30:15Z", "author": {"login": "lesv"}, "path": "dlp/src/test/java/dlp/snippets/InspectTests.java", "diffHunk": "@@ -124,60 +122,30 @@ public void testInspectImageFile() {\n   }\n \n   @Test\n-  public void testInspectGcsFile() throws InterruptedException, ExecutionException, IOException {\n-\n+  public void testInspectGcsFile() throws Exception {\n     InspectGcsFile.inspectGcsFile(PROJECT_ID, GCS_PATH, TOPIC_ID, SUBSCRIPTION_ID);\n-    // Await job creation\n-    TimeUnit.SECONDS.sleep(3);\n \n     String output = bout.toString();\n-    assertThat(output, containsString(\"Job created: \"));\n-\n-    // Cancelling the job early to conserve quota\n-    String jobId = output.split(\"Job created: \")[1].split(\"\\n\")[0];\n-    CancelDlpJobRequest request = CancelDlpJobRequest.newBuilder().setName(jobId).build();\n-    try (DlpServiceClient client = DlpServiceClient.create()) {\n-      client.cancelDlpJob(request);\n-    }\n+    assertThat(output, containsString(\"Job status: DONE\"));\n   }\n \n   @Test\n-  public void testInspectDatastoreEntity()\n-      throws InterruptedException, ExecutionException, IOException {\n+  public void testInspectDatastoreEntity() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f58e94bc1c87d79a0a3959ae90f689cfb218cac"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM5NjQ5Mg==", "bodyText": "It seemed unnecessarily verbose.\nI was trying to follow the guidance in https://engdoc.corp.google.com/eng/doc/devguide/java/practices/exceptions.md?cl=head#test_methods.\nTests are currently inconsistent in how they handle this but given the above, I wanted to move towards the simpler throws Exception.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3049#discussion_r435396492", "createdAt": "2020-06-04T16:38:11Z", "author": {"login": "sushicw"}, "path": "dlp/src/test/java/dlp/snippets/InspectTests.java", "diffHunk": "@@ -124,60 +122,30 @@ public void testInspectImageFile() {\n   }\n \n   @Test\n-  public void testInspectGcsFile() throws InterruptedException, ExecutionException, IOException {\n-\n+  public void testInspectGcsFile() throws Exception {\n     InspectGcsFile.inspectGcsFile(PROJECT_ID, GCS_PATH, TOPIC_ID, SUBSCRIPTION_ID);\n-    // Await job creation\n-    TimeUnit.SECONDS.sleep(3);\n \n     String output = bout.toString();\n-    assertThat(output, containsString(\"Job created: \"));\n-\n-    // Cancelling the job early to conserve quota\n-    String jobId = output.split(\"Job created: \")[1].split(\"\\n\")[0];\n-    CancelDlpJobRequest request = CancelDlpJobRequest.newBuilder().setName(jobId).build();\n-    try (DlpServiceClient client = DlpServiceClient.create()) {\n-      client.cancelDlpJob(request);\n-    }\n+    assertThat(output, containsString(\"Job status: DONE\"));\n   }\n \n   @Test\n-  public void testInspectDatastoreEntity()\n-      throws InterruptedException, ExecutionException, IOException {\n+  public void testInspectDatastoreEntity() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM5MTYzMw=="}, "originalCommit": {"oid": "0f58e94bc1c87d79a0a3959ae90f689cfb218cac"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 664, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}