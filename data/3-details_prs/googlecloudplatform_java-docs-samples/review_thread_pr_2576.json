{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5ODAwMjU4", "number": 2576, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo1NjoyMVrODvPd4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo1Njo0OVrODvPenA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODYzMDczOnYy", "diffSide": "RIGHT", "path": "dlp/src/test/java/dlp/snippets/TemplatesTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo1NjoyMVrOGBjZuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODoxNjozMVrOGBkH9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4MTc4NA==", "bodyText": "This might be a bit too aggressive as your deleting all existing templates, some might actually be in use by another test running at the same time.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2576#discussion_r404281784", "createdAt": "2020-04-06T17:56:21Z", "author": {"login": "lesv"}, "path": "dlp/src/test/java/dlp/snippets/TemplatesTests.java", "diffHunk": "@@ -88,6 +92,24 @@ public void setUp() {\n     System.setOut(new PrintStream(bout));\n   }\n \n+  @AfterClass\n+  public static void cleanupTemplates() throws IOException {\n+    try (DlpServiceClient dlpServiceClient = DlpServiceClient.create()) {\n+      ListInspectTemplatesRequest listInspectTemplatesRequest =\n+          ListInspectTemplatesRequest.newBuilder()\n+              .setParent(ProjectName.of(PROJECT_ID).toString())\n+              .setPageSize(1)\n+              .build();\n+      ListInspectTemplatesPagedResponse response = dlpServiceClient\n+          .listInspectTemplates(listInspectTemplatesRequest);\n+      for (InspectTemplate template : response.getPage().getResponse().getInspectTemplatesList()) {\n+        DeleteInspectTemplateRequest deleteInspectTemplateRequest =\n+            DeleteInspectTemplateRequest.newBuilder().setName(template.getName()).build();\n+        dlpServiceClient.deleteInspectTemplate(deleteInspectTemplateRequest);\n+      }\n+    }\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fada81b0fb4309760661e6d70b454f0e13d3c342"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5MzYyMg==", "bodyText": "changed in latest commit", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2576#discussion_r404293622", "createdAt": "2020-04-06T18:16:31Z", "author": {"login": "shubha-rajan"}, "path": "dlp/src/test/java/dlp/snippets/TemplatesTests.java", "diffHunk": "@@ -88,6 +92,24 @@ public void setUp() {\n     System.setOut(new PrintStream(bout));\n   }\n \n+  @AfterClass\n+  public static void cleanupTemplates() throws IOException {\n+    try (DlpServiceClient dlpServiceClient = DlpServiceClient.create()) {\n+      ListInspectTemplatesRequest listInspectTemplatesRequest =\n+          ListInspectTemplatesRequest.newBuilder()\n+              .setParent(ProjectName.of(PROJECT_ID).toString())\n+              .setPageSize(1)\n+              .build();\n+      ListInspectTemplatesPagedResponse response = dlpServiceClient\n+          .listInspectTemplates(listInspectTemplatesRequest);\n+      for (InspectTemplate template : response.getPage().getResponse().getInspectTemplatesList()) {\n+        DeleteInspectTemplateRequest deleteInspectTemplateRequest =\n+            DeleteInspectTemplateRequest.newBuilder().setName(template.getName()).build();\n+        dlpServiceClient.deleteInspectTemplate(deleteInspectTemplateRequest);\n+      }\n+    }\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4MTc4NA=="}, "originalCommit": {"oid": "fada81b0fb4309760661e6d70b454f0e13d3c342"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwODYzMjYwOnYy", "diffSide": "RIGHT", "path": "dlp/src/test/java/dlp/snippets/TriggersTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzo1Njo0OVrOGBja0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODoxNjoxOFrOGBkHew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4MjA2Nw==", "bodyText": "Ideally, you'll just clean up the ones you've created for testing.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2576#discussion_r404282067", "createdAt": "2020-04-06T17:56:49Z", "author": {"login": "lesv"}, "path": "dlp/src/test/java/dlp/snippets/TriggersTests.java", "diffHunk": "@@ -104,12 +107,34 @@ public void setUp() {\n     System.setOut(new PrintStream(bout));\n   }\n \n+  @AfterClass()\n+  public static void cleanupTriggers() throws IOException {\n+    try (DlpServiceClient dlpServiceClient = DlpServiceClient.create()) {\n+      // List all job triggers\n+      ListJobTriggersRequest listJobTriggersRequest =\n+          ListJobTriggersRequest.newBuilder()\n+              .setParent(ProjectName.of(PROJECT_ID).toString())\n+              .build();\n+      DlpServiceClient.ListJobTriggersPagedResponse response =\n+          dlpServiceClient.listJobTriggers(listJobTriggersRequest);\n+\n+      // Loop through the response and delete each trigger\n+      for (JobTrigger trigger : response.getPage().getValues()) {\n+        DeleteJobTriggerRequest deleteJobTriggerRequest =\n+            DeleteJobTriggerRequest.newBuilder().setName(trigger.getName()).build();\n+        dlpServiceClient.deleteJobTrigger(deleteJobTriggerRequest);\n+      }\n+    }\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fada81b0fb4309760661e6d70b454f0e13d3c342"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI5MzQ5OQ==", "bodyText": "changed in latest commit", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2576#discussion_r404293499", "createdAt": "2020-04-06T18:16:18Z", "author": {"login": "shubha-rajan"}, "path": "dlp/src/test/java/dlp/snippets/TriggersTests.java", "diffHunk": "@@ -104,12 +107,34 @@ public void setUp() {\n     System.setOut(new PrintStream(bout));\n   }\n \n+  @AfterClass()\n+  public static void cleanupTriggers() throws IOException {\n+    try (DlpServiceClient dlpServiceClient = DlpServiceClient.create()) {\n+      // List all job triggers\n+      ListJobTriggersRequest listJobTriggersRequest =\n+          ListJobTriggersRequest.newBuilder()\n+              .setParent(ProjectName.of(PROJECT_ID).toString())\n+              .build();\n+      DlpServiceClient.ListJobTriggersPagedResponse response =\n+          dlpServiceClient.listJobTriggers(listJobTriggersRequest);\n+\n+      // Loop through the response and delete each trigger\n+      for (JobTrigger trigger : response.getPage().getValues()) {\n+        DeleteJobTriggerRequest deleteJobTriggerRequest =\n+            DeleteJobTriggerRequest.newBuilder().setName(trigger.getName()).build();\n+        dlpServiceClient.deleteJobTrigger(deleteJobTriggerRequest);\n+      }\n+    }\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4MjA2Nw=="}, "originalCommit": {"oid": "fada81b0fb4309760661e6d70b454f0e13d3c342"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 966, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}