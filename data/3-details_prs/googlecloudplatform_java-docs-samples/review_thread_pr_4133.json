{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0ODY1NDQ5", "number": 4133, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNzo0MjoxNVrOE1VJKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNzo0NjowOVrOE1VOxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzU2MzkzOnYy", "diffSide": "RIGHT", "path": "spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNzo0MjoxNVrOHti7Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxOTowNjoxMlrOHtl4ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUyMDE2Nw==", "bodyText": "Can we reuse baseDbId here instead of the property again?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4133#discussion_r517520167", "createdAt": "2020-11-04T17:42:15Z", "author": {"login": "kurtisvg"}, "path": "spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java", "diffHunk": "@@ -69,9 +71,21 @@ public static void setUp() throws Exception {\n     spanner = options.getService();\n     dbClient = spanner.getDatabaseAdminClient();\n     dbId = DatabaseId.of(options.getProjectId(), instanceId, databaseId);\n-    dbClient.dropDatabase(dbId.getInstanceId().getInstance(), dbId.getDatabase());\n-    dbClient.dropDatabase(\n-        dbId.getInstanceId().getInstance(), SpannerSample.createRestoredSampleDbId(dbId));\n+    // Delete stale test databases that have been created earlier by this test, but not deleted.\n+    deleteStaleTestDatabases(instanceId, System.getProperty(\"spanner.sample.database\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0872b64bdb4da0dc1d9d1a435f8ba86313874dce"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2ODYzNQ==", "bodyText": "Good point, fixed.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4133#discussion_r517568635", "createdAt": "2020-11-04T19:06:12Z", "author": {"login": "olavloite"}, "path": "spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java", "diffHunk": "@@ -69,9 +71,21 @@ public static void setUp() throws Exception {\n     spanner = options.getService();\n     dbClient = spanner.getDatabaseAdminClient();\n     dbId = DatabaseId.of(options.getProjectId(), instanceId, databaseId);\n-    dbClient.dropDatabase(dbId.getInstanceId().getInstance(), dbId.getDatabase());\n-    dbClient.dropDatabase(\n-        dbId.getInstanceId().getInstance(), SpannerSample.createRestoredSampleDbId(dbId));\n+    // Delete stale test databases that have been created earlier by this test, but not deleted.\n+    deleteStaleTestDatabases(instanceId, System.getProperty(\"spanner.sample.database\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUyMDE2Nw=="}, "originalCommit": {"oid": "0872b64bdb4da0dc1d9d1a435f8ba86313874dce"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MzU3ODMxOnYy", "diffSide": "RIGHT", "path": "spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java", "isResolved": false, "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNzo0NjowOVrOHtjEUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMToxNjowOVrOHuqGnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUyMjUxNQ==", "bodyText": "Would it be less fragile to just use:\nif db.getId.getDatabase().startsWith(baseDbID)?\nOtherwise any adjustments to the formatForTest UUID will break this without any immediate feedback.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4133#discussion_r517522515", "createdAt": "2020-11-04T17:46:09Z", "author": {"login": "kurtisvg"}, "path": "spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java", "diffHunk": "@@ -69,9 +71,21 @@ public static void setUp() throws Exception {\n     spanner = options.getService();\n     dbClient = spanner.getDatabaseAdminClient();\n     dbId = DatabaseId.of(options.getProjectId(), instanceId, databaseId);\n-    dbClient.dropDatabase(dbId.getInstanceId().getInstance(), dbId.getDatabase());\n-    dbClient.dropDatabase(\n-        dbId.getInstanceId().getInstance(), SpannerSample.createRestoredSampleDbId(dbId));\n+    // Delete stale test databases that have been created earlier by this test, but not deleted.\n+    deleteStaleTestDatabases(instanceId, System.getProperty(\"spanner.sample.database\"));\n+  }\n+  \n+  static void deleteStaleTestDatabases(String instanceId, String baseDbId) {\n+    Timestamp now = Timestamp.now();\n+    Pattern pattern = getTestDbIdPattern(baseDbId);\n+    for (Database db : dbClient.listDatabases(instanceId).iterateAll()) {\n+      if (db.getCreateTime().getSeconds() > 0 && TimeUnit.HOURS\n+          .convert(now.getSeconds() - db.getCreateTime().getSeconds(), TimeUnit.SECONDS) > 24) {\n+        if (pattern.matcher(toComparableId(baseDbId, db.getId().getDatabase())).matches()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0872b64bdb4da0dc1d9d1a435f8ba86313874dce"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU3MTYyMA==", "bodyText": "Well, yes, that would be possible, but I do worry about doing that: The method will delete all databases on the instance that meet the criteria, so if someone were to execute these tests on a random instance and the spanner.sample.database happens to be set to a fairly generic value (something like 'test' or 'sample'), it could potentially delete more databases than it should.\nThis is also only intended to be a fallback in case of unexpected test failures. The databases that are created by the tests are automatically deleted at the end of the test run, unless the test run is killed.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4133#discussion_r517571620", "createdAt": "2020-11-04T19:11:36Z", "author": {"login": "olavloite"}, "path": "spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java", "diffHunk": "@@ -69,9 +71,21 @@ public static void setUp() throws Exception {\n     spanner = options.getService();\n     dbClient = spanner.getDatabaseAdminClient();\n     dbId = DatabaseId.of(options.getProjectId(), instanceId, databaseId);\n-    dbClient.dropDatabase(dbId.getInstanceId().getInstance(), dbId.getDatabase());\n-    dbClient.dropDatabase(\n-        dbId.getInstanceId().getInstance(), SpannerSample.createRestoredSampleDbId(dbId));\n+    // Delete stale test databases that have been created earlier by this test, but not deleted.\n+    deleteStaleTestDatabases(instanceId, System.getProperty(\"spanner.sample.database\"));\n+  }\n+  \n+  static void deleteStaleTestDatabases(String instanceId, String baseDbId) {\n+    Timestamp now = Timestamp.now();\n+    Pattern pattern = getTestDbIdPattern(baseDbId);\n+    for (Database db : dbClient.listDatabases(instanceId).iterateAll()) {\n+      if (db.getCreateTime().getSeconds() > 0 && TimeUnit.HOURS\n+          .convert(now.getSeconds() - db.getCreateTime().getSeconds(), TimeUnit.SECONDS) > 24) {\n+        if (pattern.matcher(toComparableId(baseDbId, db.getId().getDatabase())).matches()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUyMjUxNQ=="}, "originalCommit": {"oid": "0872b64bdb4da0dc1d9d1a435f8ba86313874dce"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk0OTUyMA==", "bodyText": "@kurtisvg Could you supply me with a list of the IDs of the databases that are currently present on the test instance? The build on Java 11 claims to be successful. I would have expected that to have deleted all stale test databases on the instance, but we are currently seeing a lot of build failures that seem to be caused by too many databases still being present on that instance. See for example #4175.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4133#discussion_r517949520", "createdAt": "2020-11-05T10:35:13Z", "author": {"login": "olavloite"}, "path": "spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java", "diffHunk": "@@ -69,9 +71,21 @@ public static void setUp() throws Exception {\n     spanner = options.getService();\n     dbClient = spanner.getDatabaseAdminClient();\n     dbId = DatabaseId.of(options.getProjectId(), instanceId, databaseId);\n-    dbClient.dropDatabase(dbId.getInstanceId().getInstance(), dbId.getDatabase());\n-    dbClient.dropDatabase(\n-        dbId.getInstanceId().getInstance(), SpannerSample.createRestoredSampleDbId(dbId));\n+    // Delete stale test databases that have been created earlier by this test, but not deleted.\n+    deleteStaleTestDatabases(instanceId, System.getProperty(\"spanner.sample.database\"));\n+  }\n+  \n+  static void deleteStaleTestDatabases(String instanceId, String baseDbId) {\n+    Timestamp now = Timestamp.now();\n+    Pattern pattern = getTestDbIdPattern(baseDbId);\n+    for (Database db : dbClient.listDatabases(instanceId).iterateAll()) {\n+      if (db.getCreateTime().getSeconds() > 0 && TimeUnit.HOURS\n+          .convert(now.getSeconds() - db.getCreateTime().getSeconds(), TimeUnit.SECONDS) > 24) {\n+        if (pattern.matcher(toComparableId(baseDbId, db.getId().getDatabase())).matches()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUyMjUxNQ=="}, "originalCommit": {"oid": "0872b64bdb4da0dc1d9d1a435f8ba86313874dce"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIxMzQ2OQ==", "bodyText": "Project: Java-docs-samples-testing\nRegion: us-central1\nID: default-instance  w/ 91 databases\n\n    bjfjf-e6ce3e71-2221-4000-a | 0.12% | 92.96 KB | \u00a0\n\u00a0 | df-spanner-read-it-292649216 | 0.21% | 0 B | \u00a0\n\u00a0 | jfodx-f432c184-5c6b-4d14-b | 0.16% | 80.46 KB | \u00a0\n\u00a0 | mysample-09631a0d-0107-4fc5-a | 0.09% | 1.81 KB | \u00a0\n\u00a0 | mysample-0b340a88-d096-4261-9 | 0.16% | 1.81 KB | \u00a0\n\u00a0 | mysample-13337208-538b-4392-b | 0.12% | 1.81 KB | \u00a0\n\u00a0 | mysample-14472e40-9349-4b8f-9 | 0.10% | 1.81 KB | \u00a0\n\u00a0 | mysample-17263438-c62c-4ef0-9 | 0.21% | 1.81 KB | \u00a0\n\u00a0 | mysample-17caeba3-ca10-4808-8 | 0.12% | 1.81 KB | \u00a0\n\u00a0 | mysample-1a13079a-c6d6-4694-a | 0.21% | 212 B | \u00a0\n\u00a0 | mysample-1d4c2207-f1aa-4556-a | 0.17% | 1.08 KB | \u00a0\n\u00a0 | mysample-2878ac26-95f0-4348-b | 0.19% | 1.1 KB | \u00a0\n\u00a0 | mysample-2b863578-1bab-410c-b | 0.10% | 1.81 KB | \u00a0\n\u00a0 | mysample-32dc29c8-f074-4bdb-9 | 0.15% | 1.81 KB | \u00a0\n\u00a0 | mysample-3d64a361-75da-4ea7-9 | 0.12% | 1.81 KB | \u00a0\n\u00a0 | mysample-439adf53-4419-46ae-9 | 0.13% | 1.81 KB | \u00a0\n\u00a0 | mysample-476db395-aa6e-4624-9 | 0.16% | 1.81 KB | \u00a0\n\u00a0 | mysample-486d8bac-4077-4c11-8 | 0.09% | 1.81 KB | \u00a0\n\u00a0 | mysample-4b940c0b-fffc-4caa-a | 0.17% | 1.81 KB | \u00a0\n\u00a0 | mysample-4ca24702-bd50-41a4-a | 0.13% | 474 B | \u00a0\n\u00a0 | mysample-4ceafb69-cd43-492a-b | 0.11% | 1.81 KB | \u00a0\n\u00a0 | mysample-50918327-f321-4516-8 | 0.17% | 762 B | \u00a0\n\u00a0 | mysample-6635ddaf-2bda-43ed-b | 0.11% | 1.81 KB | \u00a0\n\u00a0 | mysample-6f48aa6b-159a-4a7a-8 | 0.23% | 1.81 KB | \u00a0\n\u00a0 | mysample-70ea21c8-4a55-40d0-a | 0.10% | 732 B | \u00a0\n\u00a0 | mysample-73af71b0-b212-4794-b | 0.10% | 603 B | \u00a0\n\u00a0 | mysample-7819d309-ef65-4eab-a | 0.11% | 1.81 KB | \u00a0\n\u00a0 | mysample-7cbe0849-f091-437e-9 | 0.14% | 1.81 KB | \u00a0\n\u00a0 | mysample-7ead3ac1-f28a-43b5-8 | 0.18% | 729 B | \u00a0\n\u00a0 | mysample-807e0e6a-9afd-46da-b | 0.08% | 1.81 KB | \u00a0\n\u00a0 | mysample-82dc45c0-952d-467b-a | 0.10% | 1.81 KB | \u00a0\n\u00a0 | mysample-84e5b267-4ff7-409e-8 | 0.08% | 1.81 KB | \u00a0\n\u00a0 | mysample-860840f6-e13c-499d-a | 0.16% | 1.81 KB | \u00a0\n\u00a0 | mysample-8aabfc92-4838-479b-b | 0.18% | 0 B | \u00a0\n\u00a0 | mysample-90037d1b-cc70-4f75-b | 0.19% | 1.81 KB | \u00a0\n\u00a0 | mysample-9dbe20a4-d4a0-49a7-a | 0.14% | 1.43 KB | \u00a0\n\u00a0 | mysample-ad1162e9-205b-4274-8 | 0.13% | 550 B | \u00a0\n\u00a0 | mysample-af602369-6897-445e-9 | 0.12% | 651 B | \u00a0\n\u00a0 | mysample-b22cc310-fd3c-4db0-b | 0.12% | 1.4 KB | \u00a0\n\u00a0 | mysample-bb4fb4cd-7317-4b31-9 | 0.43% | 708 B | \u00a0\n\u00a0 | mysample-c22adce8-0466-4781-9 | 0.13% | 1.81 KB | \u00a0\n\u00a0 | mysample-c62bcee2-17b3-4423-9 | 0.08% | 1.81 KB | \u00a0\n\u00a0 | mysample-c8fdfb9b-021f-4ab1-8 | 0.11% | 1.81 KB | \u00a0\n\u00a0 | mysample-d744d126-1405-4a66-a | 0.12% | 1.81 KB | \u00a0\n\u00a0 | mysample-daf852ef-98f9-4d54-a | 0.19% | 815 B | \u00a0\n\u00a0 | mysample-def739ce-d1ce-4e5e-a | 0.10% | 1.81 KB | \u00a0\n\u00a0 | mysample-e185f237-e813-4cbf-b | 0.17% | 1.81 KB | \u00a0\n\u00a0 | mysample-ebd1c05e-8ddf-420b-b | 0.22% | 354 B | \u00a0\n\u00a0 | mysample-fce9edf0-0bb2-4d5c-b | 0.12% | 1.81 KB | \u00a0\n\u00a0 | occvu-0a80960f-697d-4609-b | 0.14% | 97.46 KB | \u00a0\n\u00a0 | quickstart-db | 0.14% | 89 B | \u00a0\n\u00a0 | restored-004abec7-52a9-4918-a | 0.12% | 1.86 KB | \u00a0\n\u00a0 | restored-0b340a88-d096-4261-9 | 0.12% | 1.81 KB | \u00a0\n\u00a0 | restored-12bd398b-0972-4ab4-b | 0.12% | 1.86 KB | \u00a0\n\u00a0 | restored-1d4c2207-f1aa-4556-a | 0.11% | 1.86 KB | \u00a0\n\u00a0 | restored-213afcab-89df-4219-a | 0.24% | 1.86 KB | \u00a0\n\u00a0 | restored-2878ac26-95f0-4348-b | 0.15% | 1.86 KB | \u00a0\n\u00a0 | restored-2aafc9b2-72ab-4aec-b | 0.19% | 1.86 KB | \u00a0\n\u00a0 | restored-2b863578-1bab-410c-b | 0.11% | 1.81 KB | \u00a0\n\u00a0 | restored-2f9a1547-fe1e-48f3-9 | 0.11% | 1.86 KB | \u00a0\n\u00a0 | restored-3060273a-5185-470a-8 | 0.08% | 1.86 KB | \u00a0\n\u00a0 | restored-3bb24fe6-7fb7-44af-b | 0.15% | 1.86 KB | \u00a0\n\u00a0 | restored-4b05449a-4c8f-4769-b | 0.16% | 1.86 KB | \u00a0\n\u00a0 | restored-4b2de289-6000-463d-8 | 0.07% | 1.86 KB | \u00a0\n\u00a0 | restored-50918327-f321-4516-8 | 0.24% | 1.86 KB | \u00a0\n\u00a0 | restored-55e86d1a-b7cd-4af2-b | 0.11% | 1.86 KB | \u00a0\n\u00a0 | restored-61a6eb6b-b9a6-4b65-a | 0.12% | 1.86 KB | \u00a0\n\u00a0 | restored-77c6e8b1-f5b3-4ca8-a | 0.12% | 1.86 KB | \u00a0\n\u00a0 | restored-790f8c0f-3106-4d53-8 | 0.13% | 1.86 KB | \u00a0\n\u00a0 | restored-79a3039b-9774-4ad3-a | 0.16% | 1.86 KB | \u00a0\n\u00a0 | restored-7cbe0849-f091-437e-9 | 0.09% | 1.81 KB | \u00a0\n\u00a0 | restored-7e1e2fdd-4e75-4c2c-8 | 0.12% | 1.86 KB | \u00a0\n\u00a0 | restored-7ead3ac1-f28a-43b5-8 | 0.32% | 1.86 KB | \u00a0\n\u00a0 | restored-8055ce7a-b316-4414-9 | 0.10% | 1.86 KB | \u00a0\n\u00a0 | restored-82dc45c0-952d-467b-a | 0.10% | 1.81 KB | \u00a0\n\u00a0 | restored-9dbe20a4-d4a0-49a7-a | 0.25% | 1.86 KB | \u00a0\n\u00a0 | restored-a90ec3d8-9d3e-4f89-b | 0.12% | 1.86 KB | \u00a0\n\u00a0 | restored-af602369-6897-445e-9 | 0.17% | 1.86 KB | \u00a0\n\u00a0 | restored-afcf21cf-e927-4c6b-9 | 0.15% | 1.86 KB | \u00a0\n\u00a0 | restored-bb4fb4cd-7317-4b31-9 | 0.09% | 1.86 KB | \u00a0\n\u00a0 | restored-c22adce8-0466-4781-9 | 0.14% | 1.81 KB | \u00a0\n\u00a0 | restored-c62bcee2-17b3-4423-9 | 0.11% | 1.81 KB | \u00a0\n\u00a0 | restored-c8fdfb9b-021f-4ab1-8 | 0.13% | 1.81 KB | \u00a0\n\u00a0 | restored-d744d126-1405-4a66-a | 0.11% | 1.81 KB | \u00a0\n\u00a0 | restored-daf852ef-98f9-4d54-a | 0.12% | 1.86 KB | \u00a0\n\u00a0 | restored-e185f237-e813-4cbf-b | 0.12% | 1.81 KB | \u00a0\n\u00a0 | restored-mysample-16ae8df9-7ec | 0.10% | 1.81 KB | \u00a0\n\u00a0 | sejzn-3d2384a5-1344-4bff-8 | 0.18% | 18.46 KB | \u00a0\n\u00a0 | vzdqp-da80840c-38c5-430b-a | 0.16% | 65.96 KB | \u00a0\n\u00a0 | wfwyd-f251339f-d247-4031-b | 0.14% | 24.46 KB | \u00a0\n\u00a0 | zfidi-cecbc595-7e56-4ee9-9 | 0.07% | 109.46 KB | \u00a0", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4133#discussion_r518213469", "createdAt": "2020-11-05T17:06:57Z", "author": {"login": "lesv"}, "path": "spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java", "diffHunk": "@@ -69,9 +71,21 @@ public static void setUp() throws Exception {\n     spanner = options.getService();\n     dbClient = spanner.getDatabaseAdminClient();\n     dbId = DatabaseId.of(options.getProjectId(), instanceId, databaseId);\n-    dbClient.dropDatabase(dbId.getInstanceId().getInstance(), dbId.getDatabase());\n-    dbClient.dropDatabase(\n-        dbId.getInstanceId().getInstance(), SpannerSample.createRestoredSampleDbId(dbId));\n+    // Delete stale test databases that have been created earlier by this test, but not deleted.\n+    deleteStaleTestDatabases(instanceId, System.getProperty(\"spanner.sample.database\"));\n+  }\n+  \n+  static void deleteStaleTestDatabases(String instanceId, String baseDbId) {\n+    Timestamp now = Timestamp.now();\n+    Pattern pattern = getTestDbIdPattern(baseDbId);\n+    for (Database db : dbClient.listDatabases(instanceId).iterateAll()) {\n+      if (db.getCreateTime().getSeconds() > 0 && TimeUnit.HOURS\n+          .convert(now.getSeconds() - db.getCreateTime().getSeconds(), TimeUnit.SECONDS) > 24) {\n+        if (pattern.matcher(toComparableId(baseDbId, db.getId().getDatabase())).matches()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUyMjUxNQ=="}, "originalCommit": {"oid": "0872b64bdb4da0dc1d9d1a435f8ba86313874dce"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIxNDcxOQ==", "bodyText": "There is also samples-926dcd35-e183-4b8c-a in asia w/ 0 databases.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4133#discussion_r518214719", "createdAt": "2020-11-05T17:08:43Z", "author": {"login": "lesv"}, "path": "spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java", "diffHunk": "@@ -69,9 +71,21 @@ public static void setUp() throws Exception {\n     spanner = options.getService();\n     dbClient = spanner.getDatabaseAdminClient();\n     dbId = DatabaseId.of(options.getProjectId(), instanceId, databaseId);\n-    dbClient.dropDatabase(dbId.getInstanceId().getInstance(), dbId.getDatabase());\n-    dbClient.dropDatabase(\n-        dbId.getInstanceId().getInstance(), SpannerSample.createRestoredSampleDbId(dbId));\n+    // Delete stale test databases that have been created earlier by this test, but not deleted.\n+    deleteStaleTestDatabases(instanceId, System.getProperty(\"spanner.sample.database\"));\n+  }\n+  \n+  static void deleteStaleTestDatabases(String instanceId, String baseDbId) {\n+    Timestamp now = Timestamp.now();\n+    Pattern pattern = getTestDbIdPattern(baseDbId);\n+    for (Database db : dbClient.listDatabases(instanceId).iterateAll()) {\n+      if (db.getCreateTime().getSeconds() > 0 && TimeUnit.HOURS\n+          .convert(now.getSeconds() - db.getCreateTime().getSeconds(), TimeUnit.SECONDS) > 24) {\n+        if (pattern.matcher(toComparableId(baseDbId, db.getId().getDatabase())).matches()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUyMjUxNQ=="}, "originalCommit": {"oid": "0872b64bdb4da0dc1d9d1a435f8ba86313874dce"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIxNTI0OA==", "bodyText": "mention me if you'd like me to do something - like delete them.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4133#discussion_r518215248", "createdAt": "2020-11-05T17:09:25Z", "author": {"login": "lesv"}, "path": "spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java", "diffHunk": "@@ -69,9 +71,21 @@ public static void setUp() throws Exception {\n     spanner = options.getService();\n     dbClient = spanner.getDatabaseAdminClient();\n     dbId = DatabaseId.of(options.getProjectId(), instanceId, databaseId);\n-    dbClient.dropDatabase(dbId.getInstanceId().getInstance(), dbId.getDatabase());\n-    dbClient.dropDatabase(\n-        dbId.getInstanceId().getInstance(), SpannerSample.createRestoredSampleDbId(dbId));\n+    // Delete stale test databases that have been created earlier by this test, but not deleted.\n+    deleteStaleTestDatabases(instanceId, System.getProperty(\"spanner.sample.database\"));\n+  }\n+  \n+  static void deleteStaleTestDatabases(String instanceId, String baseDbId) {\n+    Timestamp now = Timestamp.now();\n+    Pattern pattern = getTestDbIdPattern(baseDbId);\n+    for (Database db : dbClient.listDatabases(instanceId).iterateAll()) {\n+      if (db.getCreateTime().getSeconds() > 0 && TimeUnit.HOURS\n+          .convert(now.getSeconds() - db.getCreateTime().getSeconds(), TimeUnit.SECONDS) > 24) {\n+        if (pattern.matcher(toComparableId(baseDbId, db.getId().getDatabase())).matches()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUyMjUxNQ=="}, "originalCommit": {"oid": "0872b64bdb4da0dc1d9d1a435f8ba86313874dce"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIxNzA5OA==", "bodyText": "Maybe it would be better to remove this logic from the test all together, and instead just put it in a Cloud Function that runs periodically to clean up stale resources in the project.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4133#discussion_r518217098", "createdAt": "2020-11-05T17:12:05Z", "author": {"login": "kurtisvg"}, "path": "spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java", "diffHunk": "@@ -69,9 +71,21 @@ public static void setUp() throws Exception {\n     spanner = options.getService();\n     dbClient = spanner.getDatabaseAdminClient();\n     dbId = DatabaseId.of(options.getProjectId(), instanceId, databaseId);\n-    dbClient.dropDatabase(dbId.getInstanceId().getInstance(), dbId.getDatabase());\n-    dbClient.dropDatabase(\n-        dbId.getInstanceId().getInstance(), SpannerSample.createRestoredSampleDbId(dbId));\n+    // Delete stale test databases that have been created earlier by this test, but not deleted.\n+    deleteStaleTestDatabases(instanceId, System.getProperty(\"spanner.sample.database\"));\n+  }\n+  \n+  static void deleteStaleTestDatabases(String instanceId, String baseDbId) {\n+    Timestamp now = Timestamp.now();\n+    Pattern pattern = getTestDbIdPattern(baseDbId);\n+    for (Database db : dbClient.listDatabases(instanceId).iterateAll()) {\n+      if (db.getCreateTime().getSeconds() > 0 && TimeUnit.HOURS\n+          .convert(now.getSeconds() - db.getCreateTime().getSeconds(), TimeUnit.SECONDS) > 24) {\n+        if (pattern.matcher(toComparableId(baseDbId, db.getId().getDatabase())).matches()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUyMjUxNQ=="}, "originalCommit": {"oid": "0872b64bdb4da0dc1d9d1a435f8ba86313874dce"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUyODYzMg==", "bodyText": "@lesv could you delete the existing databases? We are seeing errors when running the samples test in our other repository as well (we are in the process of migrating the samples from this repository to the other one - https://github.com/googleapis/java-spanner/tree/master/samples)", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4133#discussion_r518528632", "createdAt": "2020-11-06T05:18:45Z", "author": {"login": "thiagotnunes"}, "path": "spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java", "diffHunk": "@@ -69,9 +71,21 @@ public static void setUp() throws Exception {\n     spanner = options.getService();\n     dbClient = spanner.getDatabaseAdminClient();\n     dbId = DatabaseId.of(options.getProjectId(), instanceId, databaseId);\n-    dbClient.dropDatabase(dbId.getInstanceId().getInstance(), dbId.getDatabase());\n-    dbClient.dropDatabase(\n-        dbId.getInstanceId().getInstance(), SpannerSample.createRestoredSampleDbId(dbId));\n+    // Delete stale test databases that have been created earlier by this test, but not deleted.\n+    deleteStaleTestDatabases(instanceId, System.getProperty(\"spanner.sample.database\"));\n+  }\n+  \n+  static void deleteStaleTestDatabases(String instanceId, String baseDbId) {\n+    Timestamp now = Timestamp.now();\n+    Pattern pattern = getTestDbIdPattern(baseDbId);\n+    for (Database db : dbClient.listDatabases(instanceId).iterateAll()) {\n+      if (db.getCreateTime().getSeconds() > 0 && TimeUnit.HOURS\n+          .convert(now.getSeconds() - db.getCreateTime().getSeconds(), TimeUnit.SECONDS) > 24) {\n+        if (pattern.matcher(toComparableId(baseDbId, db.getId().getDatabase())).matches()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUyMjUxNQ=="}, "originalCommit": {"oid": "0872b64bdb4da0dc1d9d1a435f8ba86313874dce"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY2ODMwOQ==", "bodyText": "There is also samples-926dcd35-e183-4b8c-a in asia w/ 0 databases.\n\nAs far as I'm concerned, that one may be deleted. I can't see that it is used by anything in the Java samples.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4133#discussion_r518668309", "createdAt": "2020-11-06T10:44:23Z", "author": {"login": "olavloite"}, "path": "spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java", "diffHunk": "@@ -69,9 +71,21 @@ public static void setUp() throws Exception {\n     spanner = options.getService();\n     dbClient = spanner.getDatabaseAdminClient();\n     dbId = DatabaseId.of(options.getProjectId(), instanceId, databaseId);\n-    dbClient.dropDatabase(dbId.getInstanceId().getInstance(), dbId.getDatabase());\n-    dbClient.dropDatabase(\n-        dbId.getInstanceId().getInstance(), SpannerSample.createRestoredSampleDbId(dbId));\n+    // Delete stale test databases that have been created earlier by this test, but not deleted.\n+    deleteStaleTestDatabases(instanceId, System.getProperty(\"spanner.sample.database\"));\n+  }\n+  \n+  static void deleteStaleTestDatabases(String instanceId, String baseDbId) {\n+    Timestamp now = Timestamp.now();\n+    Pattern pattern = getTestDbIdPattern(baseDbId);\n+    for (Database db : dbClient.listDatabases(instanceId).iterateAll()) {\n+      if (db.getCreateTime().getSeconds() > 0 && TimeUnit.HOURS\n+          .convert(now.getSeconds() - db.getCreateTime().getSeconds(), TimeUnit.SECONDS) > 24) {\n+        if (pattern.matcher(toComparableId(baseDbId, db.getId().getDatabase())).matches()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUyMjUxNQ=="}, "originalCommit": {"oid": "0872b64bdb4da0dc1d9d1a435f8ba86313874dce"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY4MjY2NQ==", "bodyText": "Thanks for the list of the existing databases. That helped a lot.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4133#discussion_r518682665", "createdAt": "2020-11-06T11:08:43Z", "author": {"login": "olavloite"}, "path": "spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java", "diffHunk": "@@ -69,9 +71,21 @@ public static void setUp() throws Exception {\n     spanner = options.getService();\n     dbClient = spanner.getDatabaseAdminClient();\n     dbId = DatabaseId.of(options.getProjectId(), instanceId, databaseId);\n-    dbClient.dropDatabase(dbId.getInstanceId().getInstance(), dbId.getDatabase());\n-    dbClient.dropDatabase(\n-        dbId.getInstanceId().getInstance(), SpannerSample.createRestoredSampleDbId(dbId));\n+    // Delete stale test databases that have been created earlier by this test, but not deleted.\n+    deleteStaleTestDatabases(instanceId, System.getProperty(\"spanner.sample.database\"));\n+  }\n+  \n+  static void deleteStaleTestDatabases(String instanceId, String baseDbId) {\n+    Timestamp now = Timestamp.now();\n+    Pattern pattern = getTestDbIdPattern(baseDbId);\n+    for (Database db : dbClient.listDatabases(instanceId).iterateAll()) {\n+      if (db.getCreateTime().getSeconds() > 0 && TimeUnit.HOURS\n+          .convert(now.getSeconds() - db.getCreateTime().getSeconds(), TimeUnit.SECONDS) > 24) {\n+        if (pattern.matcher(toComparableId(baseDbId, db.getId().getDatabase())).matches()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUyMjUxNQ=="}, "originalCommit": {"oid": "0872b64bdb4da0dc1d9d1a435f8ba86313874dce"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY4NjM2NQ==", "bodyText": "@kurtisvg PTAL", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4133#discussion_r518686365", "createdAt": "2020-11-06T11:16:09Z", "author": {"login": "olavloite"}, "path": "spanner/cloud-client/src/test/java/com/example/spanner/SpannerSampleIT.java", "diffHunk": "@@ -69,9 +71,21 @@ public static void setUp() throws Exception {\n     spanner = options.getService();\n     dbClient = spanner.getDatabaseAdminClient();\n     dbId = DatabaseId.of(options.getProjectId(), instanceId, databaseId);\n-    dbClient.dropDatabase(dbId.getInstanceId().getInstance(), dbId.getDatabase());\n-    dbClient.dropDatabase(\n-        dbId.getInstanceId().getInstance(), SpannerSample.createRestoredSampleDbId(dbId));\n+    // Delete stale test databases that have been created earlier by this test, but not deleted.\n+    deleteStaleTestDatabases(instanceId, System.getProperty(\"spanner.sample.database\"));\n+  }\n+  \n+  static void deleteStaleTestDatabases(String instanceId, String baseDbId) {\n+    Timestamp now = Timestamp.now();\n+    Pattern pattern = getTestDbIdPattern(baseDbId);\n+    for (Database db : dbClient.listDatabases(instanceId).iterateAll()) {\n+      if (db.getCreateTime().getSeconds() > 0 && TimeUnit.HOURS\n+          .convert(now.getSeconds() - db.getCreateTime().getSeconds(), TimeUnit.SECONDS) > 24) {\n+        if (pattern.matcher(toComparableId(baseDbId, db.getId().getDatabase())).matches()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUyMjUxNQ=="}, "originalCommit": {"oid": "0872b64bdb4da0dc1d9d1a435f8ba86313874dce"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 744, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}