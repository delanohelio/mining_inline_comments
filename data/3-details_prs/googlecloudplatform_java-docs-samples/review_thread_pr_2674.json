{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NTYzMjgy", "number": 2674, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzo1NzoxOFrODynRcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMjoxNTozNlrODysbkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0Mzk4ODM1OnYy", "diffSide": "RIGHT", "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/FhirStoreCreate.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzo1NzoxOFrOGGw4cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODozNjo0MlrOGGyS_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0NTUyMA==", "bodyText": "Should be the earliest one.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409745520", "createdAt": "2020-04-16T17:57:18Z", "author": {"login": "lesv"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/FhirStoreCreate.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2019-2020 Google LLC", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2ODcwMw==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409768703", "createdAt": "2020-04-16T18:36:42Z", "author": {"login": "noerog"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/FhirStoreCreate.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2019-2020 Google LLC", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0NTUyMA=="}, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDA0Njg1OnYy", "diffSide": "RIGHT", "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/FhirStoreExecuteBundle.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODoxMzoxNFrOGGxdKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODozNjo0NlrOGGyTHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc1NDkyMQ==", "bodyText": "Really should use GSON or JsonObject to create these.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409754921", "createdAt": "2020-04-16T18:13:14Z", "author": {"login": "lesv"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/FhirStoreExecuteBundle.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2019-2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir;\n+\n+// [START healthcare_fhir_execute_bundle]\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirStoreExecuteBundle {\n+  private static final String FHIR_NAME = \"projects/%s/locations/%s/datasets/%s/dicomStores/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirStoreExecuteBundle(String fhirStoreName, String data)\n+      throws IOException, URISyntaxException {\n+    // String fhirStoreName =\n+    //    String.format(\n+    //        FHIR_NAME, \"your-project-id\", \"your-region-id\", \"your-dataset-id\", \"your-fhir-id\");\n+    // String data = \"[{\\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/active\\\", \\\"value\\\": true}]\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2ODczMw==", "bodyText": "Created b/154240543.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409768733", "createdAt": "2020-04-16T18:36:46Z", "author": {"login": "noerog"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/FhirStoreExecuteBundle.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2019-2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir;\n+\n+// [START healthcare_fhir_execute_bundle]\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirStoreExecuteBundle {\n+  private static final String FHIR_NAME = \"projects/%s/locations/%s/datasets/%s/dicomStores/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirStoreExecuteBundle(String fhirStoreName, String data)\n+      throws IOException, URISyntaxException {\n+    // String fhirStoreName =\n+    //    String.format(\n+    //        FHIR_NAME, \"your-project-id\", \"your-region-id\", \"your-dataset-id\", \"your-fhir-id\");\n+    // String data = \"[{\\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/active\\\", \\\"value\\\": true}]\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc1NDkyMQ=="}, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDA0ODI4OnYy", "diffSide": "RIGHT", "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/FhirStoreExecuteBundle.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODoxMzozNlrOGGxeBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODozNjo0OVrOGGyTPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc1NTE0MQ==", "bodyText": "should this be v1?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409755141", "createdAt": "2020-04-16T18:13:36Z", "author": {"login": "lesv"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/FhirStoreExecuteBundle.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2019-2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir;\n+\n+// [START healthcare_fhir_execute_bundle]\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirStoreExecuteBundle {\n+  private static final String FHIR_NAME = \"projects/%s/locations/%s/datasets/%s/dicomStores/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirStoreExecuteBundle(String fhirStoreName, String data)\n+      throws IOException, URISyntaxException {\n+    // String fhirStoreName =\n+    //    String.format(\n+    //        FHIR_NAME, \"your-project-id\", \"your-region-id\", \"your-dataset-id\", \"your-fhir-id\");\n+    // String data = \"[{\\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/active\\\", \\\"value\\\": true}]\";\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String baseUri = String.format(\"%sv1beta1/%s/fhir\", client.getRootUrl(), fhirStoreName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2ODc2NA==", "bodyText": "Thanks for noticing these. Done.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409768764", "createdAt": "2020-04-16T18:36:49Z", "author": {"login": "noerog"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/FhirStoreExecuteBundle.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2019-2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir;\n+\n+// [START healthcare_fhir_execute_bundle]\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirStoreExecuteBundle {\n+  private static final String FHIR_NAME = \"projects/%s/locations/%s/datasets/%s/dicomStores/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirStoreExecuteBundle(String fhirStoreName, String data)\n+      throws IOException, URISyntaxException {\n+    // String fhirStoreName =\n+    //    String.format(\n+    //        FHIR_NAME, \"your-project-id\", \"your-region-id\", \"your-dataset-id\", \"your-fhir-id\");\n+    // String data = \"[{\\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/active\\\", \\\"value\\\": true}]\";\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String baseUri = String.format(\"%sv1beta1/%s/fhir\", client.getRootUrl(), fhirStoreName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc1NTE0MQ=="}, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDA1NjMwOnYy", "diffSide": "RIGHT", "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceCreate.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODoxNTo0MlrOGGxjBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODozNjo1MVrOGGyTUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc1NjQyMA==", "bodyText": "v1?  Not v1beta1", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409756420", "createdAt": "2020-04-16T18:15:42Z", "author": {"login": "lesv"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceCreate.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Copyright 2019-2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_create_resource]\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirResourceCreate {\n+  private static final String FHIR_NAME = \"projects/%s/locations/%s/datasets/%s/fhirStores/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceCreate(String fhirStoreName, String resourceType)\n+      throws IOException, URISyntaxException {\n+    // String fhirStoreName =\n+    //    String.format(\n+    //        FHIR_NAME, \"your-project-id\", \"your-region-id\", \"your-dataset-id\", \"your-fhir-id\");\n+    // String resourceType = \"Patient\";\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\n+        \"%sv1beta1/%s/fhir/%s\", client.getRootUrl(), fhirStoreName, resourceType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2ODc4Ng==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409768786", "createdAt": "2020-04-16T18:36:51Z", "author": {"login": "noerog"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceCreate.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Copyright 2019-2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_create_resource]\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirResourceCreate {\n+  private static final String FHIR_NAME = \"projects/%s/locations/%s/datasets/%s/fhirStores/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceCreate(String fhirStoreName, String resourceType)\n+      throws IOException, URISyntaxException {\n+    // String fhirStoreName =\n+    //    String.format(\n+    //        FHIR_NAME, \"your-project-id\", \"your-region-id\", \"your-dataset-id\", \"your-fhir-id\");\n+    // String resourceType = \"Patient\";\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\n+        \"%sv1beta1/%s/fhir/%s\", client.getRootUrl(), fhirStoreName, resourceType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc1NjQyMA=="}, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDA2NzQ5OnYy", "diffSide": "RIGHT", "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceGetHistory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODoxODo1MlrOGGxqTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODozNjo1NFrOGGyTcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc1ODI4Nw==", "bodyText": "v1, not v1beta1?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409758287", "createdAt": "2020-04-16T18:18:52Z", "author": {"login": "lesv"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceGetHistory.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2019-2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_get_resource_history]\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirResourceGetHistory {\n+  private static final String FHIR_NAME = \"projects/%s/locations/%s/datasets/%s/fhirStores/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceGetHistory(String resourceName, String versionId)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n+    // String versionId = \"version-uuid\"\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\n+        \"%sv1beta1/%s/_history/%s\", client.getRootUrl(), resourceName, versionId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2ODgxOQ==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409768819", "createdAt": "2020-04-16T18:36:54Z", "author": {"login": "noerog"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceGetHistory.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2019-2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_get_resource_history]\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirResourceGetHistory {\n+  private static final String FHIR_NAME = \"projects/%s/locations/%s/datasets/%s/fhirStores/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceGetHistory(String resourceName, String versionId)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n+    // String versionId = \"version-uuid\"\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\n+        \"%sv1beta1/%s/_history/%s\", client.getRootUrl(), resourceName, versionId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc1ODI4Nw=="}, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDA3MTg2OnYy", "diffSide": "RIGHT", "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceGetPatientEverything.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODoyMDowM1rOGGxtJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODozNjo1N1rOGGyTkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc1OTAxMw==", "bodyText": "s.b. v1 NOT v1beta1?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409759013", "createdAt": "2020-04-16T18:20:03Z", "author": {"login": "lesv"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceGetPatientEverything.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2019-2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_get_patient_everything]\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirResourceGetPatientEverything {\n+  private static final String FHIR_NAME =\n+      \"projects/%s/locations/%s/datasets/%s/fhirStores/%s/fhir/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceGetPatientEverything(String resourceName)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\n+        \"%sv1beta1/%s/$everything\", client.getRootUrl(), resourceName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2ODg0OQ==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409768849", "createdAt": "2020-04-16T18:36:57Z", "author": {"login": "noerog"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceGetPatientEverything.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2019-2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_get_patient_everything]\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirResourceGetPatientEverything {\n+  private static final String FHIR_NAME =\n+      \"projects/%s/locations/%s/datasets/%s/fhirStores/%s/fhir/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceGetPatientEverything(String resourceName)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\n+        \"%sv1beta1/%s/$everything\", client.getRootUrl(), resourceName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc1OTAxMw=="}, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDA3ODg2OnYy", "diffSide": "RIGHT", "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceSearchGet.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODoyMjowM1rOGGxxmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODozNzowMFrOGGyTtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2MDE1NQ==", "bodyText": "s.b. v1, not v1beta1", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409760155", "createdAt": "2020-04-16T18:22:03Z", "author": {"login": "lesv"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceSearchGet.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2019-2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_search_resources_get]\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirResourceSearchGet {\n+  private static final String FHIR_NAME =\n+      \"projects/%s/locations/%s/datasets/%s/fhirStores/%s/fhir/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceSearchGet(String resourceName)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\n+        \"%sv1beta1/%s\", client.getRootUrl(), resourceName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2ODg4Nw==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409768887", "createdAt": "2020-04-16T18:37:00Z", "author": {"login": "noerog"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceSearchGet.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2019-2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_search_resources_get]\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirResourceSearchGet {\n+  private static final String FHIR_NAME =\n+      \"projects/%s/locations/%s/datasets/%s/fhirStores/%s/fhir/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceSearchGet(String resourceName)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\n+        \"%sv1beta1/%s\", client.getRootUrl(), resourceName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2MDE1NQ=="}, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDA3OTk0OnYy", "diffSide": "RIGHT", "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceSearchPost.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODoyMjoyMFrOGGxyTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxODozNzowNVrOGGyT1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2MDMzMg==", "bodyText": "v1", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409760332", "createdAt": "2020-04-16T18:22:20Z", "author": {"login": "lesv"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceSearchPost.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2019-2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_search_resources_post]\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirResourceSearchPost {\n+  private static final String FHIR_NAME =\n+      \"projects/%s/locations/%s/datasets/%s/fhirStores/%s/fhir/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceSearchPost(String fhirStoreName, String resourceType)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n+    // String resourceType = \"Patient\";\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\n+        \"%sv1beta1/%s/fhir/%s/_search\", client.getRootUrl(), fhirStoreName, resourceType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2ODkxOA==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409768918", "createdAt": "2020-04-16T18:37:05Z", "author": {"login": "noerog"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceSearchPost.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2019-2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_search_resources_post]\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirResourceSearchPost {\n+  private static final String FHIR_NAME =\n+      \"projects/%s/locations/%s/datasets/%s/fhirStores/%s/fhir/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceSearchPost(String fhirStoreName, String resourceType)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"fhir-id\");\n+    // String resourceType = \"Patient\";\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\n+        \"%sv1beta1/%s/fhir/%s/_search\", client.getRootUrl(), fhirStoreName, resourceType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc2MDMzMg=="}, "originalCommit": {"oid": "e530fd85539318db77917dedf8b1a04b767721e6"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDgzMzQ3OnYy", "diffSide": "RIGHT", "path": "healthcare/v1/src/test/java/snippets/healthcare/FhirResourceTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMjoxNTozNlrOGG5F7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMjoxNTozNlrOGG5F7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg4MDA0NA==", "bodyText": "Ok for now, but at some point it would be good if you delete all the resources you create via these tests.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2674#discussion_r409880044", "createdAt": "2020-04-16T22:15:36Z", "author": {"login": "lesv"}, "path": "healthcare/v1/src/test/java/snippets/healthcare/FhirResourceTests.java", "diffHunk": "@@ -0,0 +1,261 @@\n+/*\n+ * Copyright 2019 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare;\n+\n+import static junit.framework.TestCase.assertNotNull;\n+import static org.hamcrest.CoreMatchers.containsString;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonPrimitive;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.net.URISyntaxException;\n+import java.util.UUID;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import org.junit.After;\n+import org.junit.AfterClass;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+import snippets.healthcare.datasets.DatasetCreate;\n+import snippets.healthcare.datasets.DatasetDelete;\n+import snippets.healthcare.fhir.FhirStoreCreate;\n+import snippets.healthcare.fhir.resources.FhirResourceCreate;\n+import snippets.healthcare.fhir.resources.FhirResourceDelete;\n+import snippets.healthcare.fhir.resources.FhirResourceDeletePurge;\n+import snippets.healthcare.fhir.resources.FhirResourceGet;\n+import snippets.healthcare.fhir.resources.FhirResourceGetHistory;\n+import snippets.healthcare.fhir.resources.FhirResourceGetMetadata;\n+import snippets.healthcare.fhir.resources.FhirResourceGetPatientEverything;\n+import snippets.healthcare.fhir.resources.FhirResourceListHistory;\n+import snippets.healthcare.fhir.resources.FhirResourcePatch;\n+import snippets.healthcare.fhir.resources.FhirResourceSearchGet;\n+import snippets.healthcare.fhir.resources.FhirResourceSearchPost;\n+\n+@RunWith(JUnit4.class)\n+public class FhirResourceTests {\n+  private static final String PROJECT_ID = System.getenv(\"GOOGLE_CLOUD_PROJECT\");\n+  private static final String REGION_ID = \"us-central1\";\n+  private static final Gson gson = new Gson();\n+\n+  private static String fhirStoreName;\n+  private static String datasetName;\n+\n+  private String fhirResourceId;\n+  private String fhirResourceName;\n+\n+  private static String patientType = \"Patient\";\n+\n+  private final PrintStream originalOut = System.out;\n+  private ByteArrayOutputStream bout;\n+\n+  private static void requireEnvVar(String varName) {\n+    assertNotNull(\n+        System.getenv(varName),\n+        String.format(\"Environment variable \\\"%s\\\" is required to perform these tests.\", varName));\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"GOOGLE_APPLICATION_CREDENTIALS\");\n+    requireEnvVar(\"GOOGLE_CLOUD_PROJECT\");\n+  }\n+\n+  @BeforeClass\n+  public static void setUp() throws IOException {\n+    String datasetId = \"dataset-\" + UUID.randomUUID().toString().replaceAll(\"-\", \"_\");\n+    datasetName = String.format(\n+        \"projects/%s/locations/%s/datasets/%s\",\n+        PROJECT_ID,\n+        REGION_ID,\n+        datasetId);\n+    DatasetCreate.datasetCreate(PROJECT_ID, REGION_ID, datasetId);\n+\n+    String fhirStoreId = \"fhir-\" + UUID.randomUUID().toString().replaceAll(\"-\", \"_\");\n+    fhirStoreName = String.format(\"%s/fhirStores/%s\", datasetName, fhirStoreId);\n+    FhirStoreCreate.fhirStoreCreate(datasetName, fhirStoreId);\n+  }\n+\n+  @AfterClass\n+  public static void deleteTempItems() throws IOException {\n+    DatasetDelete.datasetDelete(datasetName);\n+  }\n+\n+  @Before\n+  public void beforeTest() throws IOException, URISyntaxException {\n+    bout = new ByteArrayOutputStream();\n+    System.setOut(new PrintStream(bout));\n+\n+    FhirResourceCreate.fhirResourceCreate(fhirStoreName, patientType);\n+\n+    Matcher idMatcher = Pattern.compile(\"\\\"id\\\": \\\"([^\\\"]*)\\\",\").matcher(bout.toString());\n+    if (idMatcher.find()) {\n+      fhirResourceId = idMatcher.group(1);\n+      fhirResourceName = String.format(\"%s/fhir/%s/%s\", fhirStoreName, patientType, fhirResourceId);\n+    }\n+\n+    bout = new ByteArrayOutputStream();\n+    System.setOut(new PrintStream(bout));\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    System.setOut(originalOut);\n+    bout.reset();\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "183df8bdc34ff104c7c7fb9f27c5a029377a6a7c"}, "originalPosition": 129}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 907, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}