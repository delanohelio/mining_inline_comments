{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MzA1MDQ2", "number": 3697, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDo0MzowNlrOEiSPrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDoxNjo1NFrOEq5-jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Mzg1OTY0OnYy", "diffSide": "RIGHT", "path": "monitoring/v3/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDo0MzowN1rOHQFCsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDo0NToyNFrOHQFHRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyMTg3NA==", "bodyText": "Should we have a list of commands and potential args somewhere?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3697#discussion_r486621874", "createdAt": "2020-09-10T20:43:07Z", "author": {"login": "lesv"}, "path": "monitoring/v3/README.md", "diffHunk": "@@ -5,22 +5,25 @@ Monitoring API to retrieve and modify Alerts data.\n \n ## Prerequisites to run locally:\n \n-    * [Maven 3](https://maven.apache.org)\n-    * [GCloud CLI](https://cloud.google.com/sdk/gcloud/)\n-    * Create a Cloud project\n+* [Maven 3](https://maven.apache.org)\n+* [GCloud CLI](https://cloud.google.com/sdk/gcloud/)\n+* Create a Cloud project\n \n # Set Up Your Local Dev Environment\n \n Create local credentials by running the following command and following the oauth2 flow:\n \n-    gcloud beta auth application-default login\n+```bash\n+gcloud auth application-default login\n+```\n \n To run:\n \n-    * `mvn clean install`\n-    * `./manage_alerts_sample.sh <YOUR-PROJECT-ID> <command> <args>\n-\n-## Running on GCE, GAE, or other environments\n+```bash\n+mvn clean install  \n+./manage_alerts_sample.sh \"<command> <args>\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb7f9a9650459b78a7f40870fafbc0bf46207fe3"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyMzA0Ng==", "bodyText": "Will add this", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3697#discussion_r486623046", "createdAt": "2020-09-10T20:45:24Z", "author": {"login": "averikitsch"}, "path": "monitoring/v3/README.md", "diffHunk": "@@ -5,22 +5,25 @@ Monitoring API to retrieve and modify Alerts data.\n \n ## Prerequisites to run locally:\n \n-    * [Maven 3](https://maven.apache.org)\n-    * [GCloud CLI](https://cloud.google.com/sdk/gcloud/)\n-    * Create a Cloud project\n+* [Maven 3](https://maven.apache.org)\n+* [GCloud CLI](https://cloud.google.com/sdk/gcloud/)\n+* Create a Cloud project\n \n # Set Up Your Local Dev Environment\n \n Create local credentials by running the following command and following the oauth2 flow:\n \n-    gcloud beta auth application-default login\n+```bash\n+gcloud auth application-default login\n+```\n \n To run:\n \n-    * `mvn clean install`\n-    * `./manage_alerts_sample.sh <YOUR-PROJECT-ID> <command> <args>\n-\n-## Running on GCE, GAE, or other environments\n+```bash\n+mvn clean install  \n+./manage_alerts_sample.sh \"<command> <args>\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyMTg3NA=="}, "originalCommit": {"oid": "eb7f9a9650459b78a7f40870fafbc0bf46207fe3"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDI1NTUxOnYy", "diffSide": "RIGHT", "path": "monitoring/v3/src/test/java/com/example/AlertIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDoxNjo1NFrOHdYXaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDoxNjo1NFrOHdYXaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2OTk2Mw==", "bodyText": "Start at 1300 * a random value * factor <-- so that multiple tests running at the same time don't do this at the same time. (ie at least one will break free / round).\nhttps://cloud.google.com/storage/docs/exponential-backoff for more info", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3697#discussion_r500569963", "createdAt": "2020-10-06T20:16:54Z", "author": {"login": "lesv"}, "path": "monitoring/v3/src/test/java/com/example/AlertIT.java", "diffHunk": "@@ -94,24 +95,42 @@ public void testReplaceChannels() throws IOException {\n   }\n \n   @Test\n-  public void testDisableEnablePolicies() throws IOException {\n+  public void testDisableEnablePolicies() throws IOException, InterruptedException {\n     AlertSample.main(new String[] {\"enable\", \"-d\", \"display_name='test-policy'\"});\n-    \n+\n     // check the current state of policy to make sure\n     // not to enable the policy that is already enabled.\n     boolean isEnabled = bout.toString().contains(\"already\");\n-    if (isEnabled) {\n-      AlertSample.main(new String[] {\"disable\", \"-d\", \"display_name='test-policy'\"});\n-      assertTrue(bout.toString().contains(\"disabled\"));\n+    int maxAttempts = 10;\n+    int attempt = 0;\n+    int factor = 1;\n+    Boolean retry = true;\n+    while (retry) {\n+      try {\n+        if (isEnabled) {\n+          AlertSample.main(new String[] {\"disable\", \"-d\", \"display_name='test-policy'\"});\n+          assertTrue(bout.toString().contains(\"disabled\"));\n \n-      AlertSample.main(new String[] {\"enable\", \"-d\", \"display_name='test-policy'\"});\n-      assertTrue(bout.toString().contains(\"enabled\"));\n-    } else {\n-      AlertSample.main(new String[] {\"enable\", \"-d\", \"display_name='test-policy'\"});\n-      assertTrue(bout.toString().contains(\"enabled\"));\n+          AlertSample.main(new String[] {\"enable\", \"-d\", \"display_name='test-policy'\"});\n+          assertTrue(bout.toString().contains(\"enabled\"));\n+        } else {\n+          AlertSample.main(new String[] {\"enable\", \"-d\", \"display_name='test-policy'\"});\n+          assertTrue(bout.toString().contains(\"enabled\"));\n \n-      AlertSample.main(new String[] {\"disable\", \"-d\", \"display_name='test-policy'\"});\n-      assertTrue(bout.toString().contains(\"disabled\"));\n+          AlertSample.main(new String[] {\"disable\", \"-d\", \"display_name='test-policy'\"});\n+          assertTrue(bout.toString().contains(\"disabled\"));\n+        }\n+        retry = false;\n+      } catch (StatusRuntimeException e) {\n+        System.out.println(\"Error: \" + e.toString());\n+        System.out.println(\"Retrying...\");\n+        Thread.sleep(2300 * factor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e7d4af0712e1473793b1c4b1b1a20414553f5d9"}, "originalPosition": 79}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 754, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}