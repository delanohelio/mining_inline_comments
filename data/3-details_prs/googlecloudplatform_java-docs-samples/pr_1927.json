{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NzIzMjYx", "number": 1927, "title": "Update DLP de-identification samples. ", "bodyText": "", "createdAt": "2020-01-02T16:53:08Z", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/1927", "merged": true, "mergeCommit": {"oid": "905e5bc8ce3be661c252cdc75bc4fa89de4af915"}, "closed": true, "closedAt": "2020-01-07T20:28:23Z", "author": {"login": "kurtisvg"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2ctWdgBqjI5MTgyMjAwODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4GnC7AFqTMzOTQ4MTgzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "43c00f10a221c7094ba02203098918c66be870b4", "author": {"user": {"login": "kurtisvg", "name": "Kurtis Van Gent"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/43c00f10a221c7094ba02203098918c66be870b4", "committedDate": "2020-01-02T16:50:47Z", "message": "Update region tags and run formatter."}, "afterCommit": {"oid": "eee87718ec8aca0742ff7ea1bce43b9e046b76ae", "author": {"user": {"login": "kurtisvg", "name": "Kurtis Van Gent"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/eee87718ec8aca0742ff7ea1bce43b9e046b76ae", "committedDate": "2020-01-02T16:53:33Z", "message": "Update region tags and run formatter."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NDIzNjM1", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/1927#pullrequestreview-339423635", "createdAt": "2020-01-07T18:32:42Z", "commit": {"oid": "eee87718ec8aca0742ff7ea1bce43b9e046b76ae"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxODozMjo0M1rOFbB_iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxODozNzozN1rOFbCHVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg4ODUyMw==", "bodyText": "Why use this stream/list creation instead of adding the single info type like in the other examples?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/1927#discussion_r363888523", "createdAt": "2020-01-07T18:32:43Z", "author": {"login": "dzlier-gcp"}, "path": "dlp/src/main/java/dlp/snippets/DeIdentifyWithMasking.java", "diffHunk": "@@ -0,0 +1,88 @@\n+package dlp.snippets;\n+\n+// [START dlp_deidentify_masking]\n+\n+import com.google.cloud.dlp.v2.DlpServiceClient;\n+import com.google.privacy.dlp.v2.CharacterMaskConfig;\n+import com.google.privacy.dlp.v2.ContentItem;\n+import com.google.privacy.dlp.v2.DeidentifyConfig;\n+import com.google.privacy.dlp.v2.DeidentifyContentRequest;\n+import com.google.privacy.dlp.v2.DeidentifyContentResponse;\n+import com.google.privacy.dlp.v2.InfoType;\n+import com.google.privacy.dlp.v2.InfoTypeTransformations;\n+import com.google.privacy.dlp.v2.InfoTypeTransformations.InfoTypeTransformation;\n+import com.google.privacy.dlp.v2.InspectConfig;\n+import com.google.privacy.dlp.v2.PrimitiveTransformation;\n+import com.google.privacy.dlp.v2.ProjectName;\n+import com.google.privacy.dlp.v2.ReplaceWithInfoTypeConfig;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+public class DeIdentifyWithMasking {\n+\n+  public static void deIdentifyWithMasking() throws IOException {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"your-project-id\";\n+    String textToDeIdentify = \"My SSN is 372819127\";\n+    deIdentifyWithMasking(projectId, textToDeIdentify);\n+  }\n+\n+  public static void deIdentifyWithMasking(String projectId, String textToDeIdentify)\n+      throws IOException {\n+    // Initialize client that will be used to send requests. This client only needs to be created\n+    // once, and can be reused for multiple requests. After completing all of your requests, call\n+    // the \"close\" method on the client to safely clean up any remaining background resources.\n+    try (DlpServiceClient dlp = DlpServiceClient.create()) {\n+\n+      // Specify what content you want the service to DeIdentify\n+      ContentItem contentItem = ContentItem.newBuilder().setValue(textToDeIdentify).build();\n+\n+      // Specify the type of info the inspection will look for.\n+      // See https://cloud.google.com/dlp/docs/infotypes-reference for complete list of info types\n+      List<InfoType> infoTypes =\n+          Stream.of(\"US_SOCIAL_SECURITY_NUMBER\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eee87718ec8aca0742ff7ea1bce43b9e046b76ae"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg5MDUxNg==", "bodyText": "Are these specified in .kokoro test files?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/1927#discussion_r363890516", "createdAt": "2020-01-07T18:37:37Z", "author": {"login": "dzlier-gcp"}, "path": "dlp/src/test/java/dlp/snippets/DeIdentificationTests.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright 2019 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package dlp.snippets;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.core.StringContains.containsString;\n+import static org.junit.Assert.assertNotNull;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+@RunWith(JUnit4.class)\n+public class DeIdentificationTests {\n+\n+  private ByteArrayOutputStream bout;\n+\n+  private static final String PROJECT_ID = System.getenv(\"GOOGLE_CLOUD_PROJECT\");\n+\n+  // TODO: Update as ENV_VARs\n+  private static final String bucketName = PROJECT_ID + \"/dlp\";\n+\n+  private String wrappedKey = System.getenv(\"DLP_DEID_WRAPPED_KEY\");\n+  private String kmsKeyName = System.getenv(\"DLP_DEID_KEY_NAME\");\n+\n+  private static void requireEnvVar(String varName) {\n+    assertNotNull(\n+        String.format(\"Environment variable '%s' must be set to perform these tests.\", varName),\n+        System.getenv(varName));\n+  }\n+\n+  @Before\n+  public void checkRequirements() {\n+    requireEnvVar(\"GOOGLE_APPLICATION_CREDENTIALS\");\n+    requireEnvVar(\"GOOGLE_CLOUD_PROJECT\");\n+    requireEnvVar(\"DLP_DEID_WRAPPED_KEY\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eee87718ec8aca0742ff7ea1bce43b9e046b76ae"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "beefdd37acefc66974fc2e71d4cb5eb5a1569c4e", "author": {"user": {"login": "kurtisvg", "name": "Kurtis Van Gent"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/beefdd37acefc66974fc2e71d4cb5eb5a1569c4e", "committedDate": "2020-01-07T20:16:01Z", "message": "Cleanup deidentify with masking."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b87e45704bbb170e16e9a9c00a6b988813d5041b", "author": {"user": {"login": "kurtisvg", "name": "Kurtis Van Gent"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/b87e45704bbb170e16e9a9c00a6b988813d5041b", "committedDate": "2020-01-07T20:16:01Z", "message": "Cleanup Deidentify With FPE snippet."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a123d33162e38de6eaff6cada278a1144cf862ee", "author": {"user": {"login": "kurtisvg", "name": "Kurtis Van Gent"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/a123d33162e38de6eaff6cada278a1144cf862ee", "committedDate": "2020-01-07T20:16:02Z", "message": "Cleanup Reidentify samples."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cfe1ce2aa082e033292bceab9d6c3c4a330571a", "author": {"user": {"login": "kurtisvg", "name": "Kurtis Van Gent"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/1cfe1ce2aa082e033292bceab9d6c3c4a330571a", "committedDate": "2020-01-07T20:16:02Z", "message": "Update DeIdentiyWithDateShift."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bac1b52d0b7ac80f0c5f7074c19145197df259d1", "author": {"user": {"login": "kurtisvg", "name": "Kurtis Van Gent"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/bac1b52d0b7ac80f0c5f7074c19145197df259d1", "committedDate": "2020-01-07T20:16:02Z", "message": "Update region tags and run formatter."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e64662cabfa28060e14176be476c598d848d705", "author": {"user": {"login": "kurtisvg", "name": "Kurtis Van Gent"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/4e64662cabfa28060e14176be476c598d848d705", "committedDate": "2020-01-07T20:16:02Z", "message": "Refactor InfoType stream into a single builder."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4789714f2c4867e912bbff5495f325634849bb63", "author": {"user": {"login": "kurtisvg", "name": "Kurtis Van Gent"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/4789714f2c4867e912bbff5495f325634849bb63", "committedDate": "2020-01-07T20:15:07Z", "message": "Refactor InfoType stream into a single builder."}, "afterCommit": {"oid": "4e64662cabfa28060e14176be476c598d848d705", "author": {"user": {"login": "kurtisvg", "name": "Kurtis Van Gent"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/4e64662cabfa28060e14176be476c598d848d705", "committedDate": "2020-01-07T20:16:02Z", "message": "Refactor InfoType stream into a single builder."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NDgxODMx", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/1927#pullrequestreview-339481831", "createdAt": "2020-01-07T20:16:46Z", "commit": {"oid": "4e64662cabfa28060e14176be476c598d848d705"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 595, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}