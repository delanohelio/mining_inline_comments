{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMTAzMjY2", "number": 2630, "title": "GCF: misc. idiomatic fixes", "bodyText": "Note: I split up each fix into its own commit (to make this easier to review)\nh/t @saturnism for the suggestions.", "createdAt": "2020-04-10T23:25:34Z", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630", "merged": true, "mergeCommit": {"oid": "8371e0449196d6fbc033f2507c38b34e90d3051a"}, "closed": true, "closedAt": "2020-04-14T22:27:19Z", "author": {"login": "ace-n"}, "timelineItems": {"totalCount": 41, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWasjsgFqTM5MTcxNjE3Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXqbKGgBqjMyMzI5ODY2OTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzE2MTc2", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#pullrequestreview-391716176", "createdAt": "2020-04-11T00:25:02Z", "commit": {"oid": "53a83cb8f2aa2019d9689c887d55634c829d017f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwMDoyNTowMlrOGEI0rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwMDozNToyOVrOGEI6RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5MjA0Nw==", "bodyText": "nit: This says \"fileWideComputation\", but it's really \"perStartupComputation\". It's not done once per file, it's done once per class initialization.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r406992047", "createdAt": "2020-04-11T00:25:02Z", "author": {"login": "kurtisvg"}, "path": "functions/concepts/src/main/java/com/example/functions/concepts/LazyFields.java", "diffHunk": "@@ -30,20 +30,26 @@\n   // Always initialized (at cold-start)\n   // Warning: Class variables used in Servlet classes must be thread-safe,\n   // or else might introduce race conditions in your code.\n-  private static final int nonLazyGlobal = fileWideComputation();\n+  private static final int NON_LAZY_GLOBAL = fileWideComputation();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53a83cb8f2aa2019d9689c887d55634c829d017f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5MzA4Nw==", "bodyText": "nit: I thought we had settled on logging this over wrapping in RuntimeException (@lesv FYI)", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r406993087", "createdAt": "2020-04-11T00:32:58Z", "author": {"login": "kurtisvg"}, "path": "functions/firebase/src/main/java/com/example/functions/firebase/FirebaseFirestoreReactive.java", "diffHunk": "@@ -70,7 +70,7 @@ public void accept(String json, Context context) throws RuntimeException {\n \n     LOGGER.info(String.format(\"Replacing value: %s --> %s\", currentValue, newValue));\n     try {\n-      firestore.document(affectedDoc).set(newFields, SetOptions.merge()).get();\n+      FIRESTORE.document(affectedDoc).set(newFields, SetOptions.merge()).get();\n     } catch (ExecutionException | InterruptedException e) {\n       throw new RuntimeException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53a83cb8f2aa2019d9689c887d55634c829d017f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5MzQ3Nw==", "bodyText": "This isn't static, or final. (nit: Also I almost always see it called just gson)", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r406993477", "createdAt": "2020-04-11T00:35:29Z", "author": {"login": "kurtisvg"}, "path": "functions/firebase/src/main/java/com/example/functions/firebase/FirebaseFirestoreReactive.java", "diffHunk": "@@ -33,15 +33,15 @@\n public class FirebaseFirestoreReactive implements RawBackgroundFunction {\n \n   // Use GSON (https://github.com/google/gson) to parse JSON content.\n-  private Gson gsonParser = new Gson();\n+  private Gson GSON_PARSER = new Gson();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85005251198b123d927dc93be7417b1bab1f6a70"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjE5Mjcy", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#pullrequestreview-392219272", "createdAt": "2020-04-13T15:29:20Z", "commit": {"oid": "66b498aa14c96d184ffe6f84f774a203887f00ab"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNToyOToyMFrOGEqOEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTo0MjoxM1rOGEqnyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzUzOTIxNg==", "bodyText": "Consider using a PrintWriter, e.g.,\nPrintWriter writer = new PrintWriter(response.getWriter());\nwriter.println(...)", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407539216", "createdAt": "2020-04-13T15:29:20Z", "author": {"login": "saturnism"}, "path": "functions/concepts/src/main/java/com/example/functions/concepts/FileSystem.java", "diffHunk": "@@ -34,9 +34,9 @@ public void service(HttpRequest request, HttpResponse response)\n     File currentDirectory = new File(\".\");\n     File[] files = currentDirectory.listFiles();\n     BufferedWriter writer = response.getWriter();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66b498aa14c96d184ffe6f84f774a203887f00ab"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0MTIyMw==", "bodyText": "The common idiom is..\nprivate static class LazyGlobalHolder {\n  private LazyGlobalHolder() {} // remove the possibility to instantiate.\n  private static final Integer INSTANCE = ...;\n  private static Integer getInstance();\n}", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407541223", "createdAt": "2020-04-13T15:33:24Z", "author": {"login": "saturnism"}, "path": "functions/concepts/src/main/java/com/example/functions/concepts/LazyFields.java", "diffHunk": "@@ -30,20 +30,28 @@\n   // Always initialized (at cold-start)\n   // Warning: Class variables used in Servlet classes must be thread-safe,\n   // or else might introduce race conditions in your code.\n-  private static final int nonLazyGlobal = fileWideComputation();\n+  private static final int NON_LAZY_GLOBAL = fileWideComputation();\n+\n   // Declared at cold-start, but only initialized if/when the function executes\n-  private static Integer lazyGlobal = null;\n+  // Uses the \"initialization-on-demand holder\" idiom\n+  // More information: https://en.wikipedia.org/wiki/Initialization-on-demand_holder_idiom\n+  private static class LazyGlobalHolder {\n+    // This value is initialized only if (and when) the getLazyGlobal() function below is called\n+    private static final Integer LAZY_GLOBAL = functionSpecificComputation();\n+  }\n+\n+  private static Integer getLazyGlobal() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66b498aa14c96d184ffe6f84f774a203887f00ab"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0MTcxOA==", "bodyText": "this should go into the LazyGlobalHolder class", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407541718", "createdAt": "2020-04-13T15:34:18Z", "author": {"login": "saturnism"}, "path": "functions/concepts/src/main/java/com/example/functions/concepts/LazyFields.java", "diffHunk": "@@ -30,20 +30,28 @@\n   // Always initialized (at cold-start)\n   // Warning: Class variables used in Servlet classes must be thread-safe,\n   // or else might introduce race conditions in your code.\n-  private static final int nonLazyGlobal = fileWideComputation();\n+  private static final int NON_LAZY_GLOBAL = fileWideComputation();\n+\n   // Declared at cold-start, but only initialized if/when the function executes\n-  private static Integer lazyGlobal = null;\n+  // Uses the \"initialization-on-demand holder\" idiom\n+  // More information: https://en.wikipedia.org/wiki/Initialization-on-demand_holder_idiom\n+  private static class LazyGlobalHolder {\n+    // This value is initialized only if (and when) the getLazyGlobal() function below is called\n+    private static final Integer LAZY_GLOBAL = functionSpecificComputation();\n+  }\n+\n+  private static Integer getLazyGlobal() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66b498aa14c96d184ffe6f84f774a203887f00ab"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0MTgzNw==", "bodyText": "this should be LazyGlobalHolder.getInstance()", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407541837", "createdAt": "2020-04-13T15:34:33Z", "author": {"login": "saturnism"}, "path": "functions/concepts/src/main/java/com/example/functions/concepts/LazyFields.java", "diffHunk": "@@ -30,20 +30,28 @@\n   // Always initialized (at cold-start)\n   // Warning: Class variables used in Servlet classes must be thread-safe,\n   // or else might introduce race conditions in your code.\n-  private static final int nonLazyGlobal = fileWideComputation();\n+  private static final int NON_LAZY_GLOBAL = fileWideComputation();\n+\n   // Declared at cold-start, but only initialized if/when the function executes\n-  private static Integer lazyGlobal = null;\n+  // Uses the \"initialization-on-demand holder\" idiom\n+  // More information: https://en.wikipedia.org/wiki/Initialization-on-demand_holder_idiom\n+  private static class LazyGlobalHolder {\n+    // This value is initialized only if (and when) the getLazyGlobal() function below is called\n+    private static final Integer LAZY_GLOBAL = functionSpecificComputation();\n+  }\n+\n+  private static Integer getLazyGlobal() {\n+    return LazyGlobalHolder.LAZY_GLOBAL;\n+  }\n \n   @Override\n   public void service(HttpRequest request, HttpResponse response)\n       throws IOException {\n-    // This value is initialized only if (and when) the function is called\n-    if (lazyGlobal == null) {\n-      lazyGlobal = functionSpecificComputation();\n-    }\n+    Integer lazyGlobal = getLazyGlobal();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66b498aa14c96d184ffe6f84f774a203887f00ab"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0Mzg3Mg==", "bodyText": "what is this used for? in generally we should have no dependency on the servlet api", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407543872", "createdAt": "2020-04-13T15:38:28Z", "author": {"login": "saturnism"}, "path": "functions/http/pom.xml", "diffHunk": "@@ -61,11 +61,15 @@\n       <artifactId>gson</artifactId>\n       <version>2.8.6</version>\n     </dependency>\n+    <dependency>\n+      <groupId>javax.servlet</groupId>\n+      <artifactId>javax.servlet-api</artifactId>\n+      <version>4.0.1</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66b498aa14c96d184ffe6f84f774a203887f00ab"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0NTgwMA==", "bodyText": "good catch!", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407545800", "createdAt": "2020-04-13T15:42:13Z", "author": {"login": "saturnism"}, "path": "functions/slack/src/main/java/com/example/functions/slack/SlackSlashCommand.java", "diffHunk": "@@ -167,14 +162,14 @@ JsonObject searchKnowledgeGraph(String query) throws IOException {\n   public void service(HttpRequest request, HttpResponse response) throws IOException {\n \n     // Validate request\n-    if (request.getMethod() != \"POST\") {\n+    if (!\"POST\".equals(request.getMethod())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66b498aa14c96d184ffe6f84f774a203887f00ab"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjg2Njkz", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#pullrequestreview-392286693", "createdAt": "2020-04-13T17:12:06Z", "commit": {"oid": "66b498aa14c96d184ffe6f84f774a203887f00ab"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzoxMjowN1rOGEtnHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzoxNDo0NFrOGEtsrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5NDc4MA==", "bodyText": "Can you be more specific?\nIs there a form of mitigation?\nShould you even be catching this?  (rather than providing a warning it might happen and let it propagate)", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407594780", "createdAt": "2020-04-13T17:12:07Z", "author": {"login": "lesv"}, "path": "functions/imagemagick/src/main/java/com/example/functions/imagemagick/ImageMagick.java", "diffHunk": "@@ -86,7 +92,7 @@ public void accept(GcsEvent gcsEvent, Context context) {\n           LOGGER.info(String.format(\"Detected %s as OK.\", gcsEvent.getName()));\n         }\n       }\n-    } catch (Exception e) {\n+    } catch (IOException e) {\n       LOGGER.info(String.format(\"Error with Vision API: %s\", e.getMessage()));\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66b498aa14c96d184ffe6f84f774a203887f00ab"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5NjAwMw==", "bodyText": "This isn't needed and actually makes things difficult for us.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407596003", "createdAt": "2020-04-13T17:14:22Z", "author": {"login": "lesv"}, "path": "functions/pom.xml", "diffHunk": "@@ -0,0 +1,49 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66b498aa14c96d184ffe6f84f774a203887f00ab"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5NjIwNA==", "bodyText": "Should also be in README's.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407596204", "createdAt": "2020-04-13T17:14:44Z", "author": {"login": "lesv"}, "path": "functions/slack/pom.xml", "diffHunk": "@@ -155,6 +154,20 @@\n \n   <build>\n     <plugins>\n+      <plugin>\n+        <!--\n+          Google Cloud Functions Framework Maven plugin\n+\n+          This plugin allows you to run Cloud Functions Java code\n+          locally. Use the following terminal command to run a\n+          given function locally:\n+\n+          mvn function:run -Drun.functionTarget=your.package.yourFunction", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66b498aa14c96d184ffe6f84f774a203887f00ab"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNDAxNDcx", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#pullrequestreview-392401471", "createdAt": "2020-04-13T20:06:30Z", "commit": {"oid": "34e4dd76dab81f2302f4691698acb5b3f1678af7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDowNjozMFrOGEzZpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDowNjozMFrOGEzZpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY4OTYzNg==", "bodyText": "N.B: wrong commit name, should be [comments] use proper IDOH pattern", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407689636", "createdAt": "2020-04-13T20:06:30Z", "author": {"login": "ace-n"}, "path": "functions/concepts/src/main/java/com/example/functions/concepts/LazyFields.java", "diffHunk": "@@ -36,18 +36,21 @@\n   // Uses the \"initialization-on-demand holder\" idiom\n   // More information: https://en.wikipedia.org/wiki/Initialization-on-demand_holder_idiom\n   private static class LazyGlobalHolder {\n+    // Making the default constructor private prohibits instantiation of this class", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34e4dd76dab81f2302f4691698acb5b3f1678af7"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNDI2NjE5", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#pullrequestreview-392426619", "createdAt": "2020-04-13T20:45:57Z", "commit": {"oid": "8dead9fc0677f3b788963f7df1ee173988f31e1d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDo0NTo1N1rOGE0rJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDo1MDowOFrOGE00FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDUwMg==", "bodyText": "we typically don't need ending newline for log messages.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407710502", "createdAt": "2020-04-13T20:45:57Z", "author": {"login": "saturnism"}, "path": "functions/imagemagick/src/main/java/com/example/functions/imagemagick/ImageMagick.java", "diffHunk": "@@ -74,7 +81,7 @@ public void accept(GcsEvent gcsEvent, Context context) {\n       List<AnnotateImageResponse> responses = response.getResponsesList();\n       for (AnnotateImageResponse res : responses) {\n         if (res.hasError()) {\n-          LOGGER.info(String.format(\"Error: %s\\n\", res.getError().getMessage()));\n+          LOGGER.info(String.format(\"Error: %s%n\", res.getError().getMessage()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dead9fc0677f3b788963f7df1ee173988f31e1d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMDk3NA==", "bodyText": "nice use of optional!", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407710974", "createdAt": "2020-04-13T20:46:51Z", "author": {"login": "saturnism"}, "path": "functions/helloworld/src/main/java/com/example/functions/helloworld/HelloHttp.java", "diffHunk": "@@ -32,21 +32,18 @@\n public class HelloHttp implements HttpFunction {\n   private static final Logger LOGGER = Logger.getLogger(HelloHttp.class.getName());\n \n-  private Gson gsonParser = new Gson();\n+  private static final Gson gson = new Gson();\n \n   @Override\n   public void service(HttpRequest request, HttpResponse response)\n       throws IOException {\n-    String name = \"world\";\n-\n     // Check URL parameters for \"name\" field\n-    if (request.getFirstQueryParameter(\"name\").isPresent()) {\n-      name = request.getFirstQueryParameter(\"name\").get();\n-    }\n+    // \"world\" is the default value\n+    String name = request.getFirstQueryParameter(\"name\").orElse(\"world\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dead9fc0677f3b788963f7df1ee173988f31e1d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxMjc4OQ==", "bodyText": "maybe track for a future issue. getContentType returns an optional, so contentType may not be present.\nrequest.getContentType().ifPresent(contentType -> {\n});\nor\nString contentType = request.getContentType().orElseThrow(() -> new RuntimeException(\"content type not specified\"));", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407712789", "createdAt": "2020-04-13T20:50:08Z", "author": {"login": "saturnism"}, "path": "functions/http/src/main/java/com/example/functions/http/ParseContentType.java", "diffHunk": "@@ -26,44 +26,52 @@\n import java.io.BufferedWriter;\n import java.io.IOException;\n import java.net.HttpURLConnection;\n+import java.nio.charset.StandardCharsets;\n import java.util.Base64;\n+import java.util.Optional;\n \n public class ParseContentType implements HttpFunction {\n \n   // Use GSON (https://github.com/google/gson) to parse JSON content.\n-  private Gson gsonParser = new Gson();\n+  private static final Gson gson = new Gson();\n \n   // Responds to an HTTP request using data from the request body parsed according to the\n   // \"content-type\" header.\n   @Override\n   public void service(HttpRequest request, HttpResponse response)\n       throws IOException {\n-    String name = null;\n+    String name;\n     String contentType = request.getContentType().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dead9fc0677f3b788963f7df1ee173988f31e1d"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNDQ4ODIx", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#pullrequestreview-392448821", "createdAt": "2020-04-13T21:21:24Z", "commit": {"oid": "8dead9fc0677f3b788963f7df1ee173988f31e1d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMToyMToyNFrOGE1ysA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMToyMToyNFrOGE1ysA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyODgxNg==", "bodyText": "Why do we have this?  How does it help users?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407728816", "createdAt": "2020-04-13T21:21:24Z", "author": {"login": "lesv"}, "path": "functions/pom.xml", "diffHunk": "@@ -0,0 +1,47 @@\n+<!--\n+  Copyright 2020 Google LLC\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>com.example.cloud.functions</groupId>\n+  <artifactId>functions-snippets</artifactId>\n+  <version>1.0.0-SNAPSHOT</version>\n+\n+  <properties>\n+    <maven.compiler.target>11</maven.compiler.target>\n+    <maven.compiler.source>11</maven.compiler.source>\n+    <kokoro.skipTests>true</kokoro.skipTests> <!-- test children POMs instead -->\n+  </properties>\n+\n+  <!--\n+    List subfolders as separate modules, to enable top-level test runs\n+    This POM should *not* be inherited by the per-function POMs\n+  -->\n+  <packaging>pom</packaging>\n+  <modules>\n+    <module>helloworld</module>\n+    <module>http</module>\n+    <module>imagemagick</module>\n+    <module>slack</module>\n+    <module>concepts</module>\n+    <module>logging</module>\n+    <module>firebase</module>\n+    <module>ocr</module>\n+  </modules>\n+</project>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dead9fc0677f3b788963f7df1ee173988f31e1d"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNDk3NDky", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#pullrequestreview-392497492", "createdAt": "2020-04-13T23:06:50Z", "commit": {"oid": "9be4e4d0de95f74a5b237d6de498cb579fc3f762"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMzowNjo1MFrOGE4Tdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMzoxMzowM1rOGE4bWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc2OTk3NQ==", "bodyText": "I don't think you want to remove this.\n@lesv had a comment on a line like this, but I think it was RE: Parent pom and not RE:xml header.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407769975", "createdAt": "2020-04-13T23:06:50Z", "author": {"login": "kurtisvg"}, "path": "functions/concepts/pom.xml", "diffHunk": "@@ -1,5 +1,3 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9be4e4d0de95f74a5b237d6de498cb579fc3f762"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzc3MTk5Mg==", "bodyText": "@ace-n  I supper appreciate you taking the time to comment these well. These are great.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#discussion_r407771992", "createdAt": "2020-04-13T23:13:03Z", "author": {"login": "kurtisvg"}, "path": "functions/concepts/src/main/java/com/example/functions/concepts/LazyFields.java", "diffHunk": "@@ -36,18 +36,21 @@\n   // Uses the \"initialization-on-demand holder\" idiom\n   // More information: https://en.wikipedia.org/wiki/Initialization-on-demand_holder_idiom\n   private static class LazyGlobalHolder {\n+    // Making the default constructor private prohibits instantiation of this class", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY4OTYzNg=="}, "originalCommit": {"oid": "34e4dd76dab81f2302f4691698acb5b3f1678af7"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dcb4b52868d08608eeafbb2c0ff2beafd94bb7f3", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/dcb4b52868d08608eeafbb2c0ff2beafd94bb7f3", "committedDate": "2020-04-14T03:38:31Z", "message": "Merge branch 'saturnism-fixes' of http://github.com/GoogleCloudPlatform/java-docs-samples into saturnism-fixes"}, "afterCommit": {"oid": "26ed7a574cc83ab9b8f2d01ea6e05f7810ac29dc", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/26ed7a574cc83ab9b8f2d01ea6e05f7810ac29dc", "committedDate": "2020-04-14T02:32:07Z", "message": "[comments 2] add xml lines back to POMs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMjA3ODk4", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#pullrequestreview-393207898", "createdAt": "2020-04-14T18:55:59Z", "commit": {"oid": "26ed7a574cc83ab9b8f2d01ea6e05f7810ac29dc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzEwOTM4", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2630#pullrequestreview-393310938", "createdAt": "2020-04-14T21:31:36Z", "commit": {"oid": "0be1dbdefab2af4b069adbe68896d065176e0022"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59e37e63eef9bac2365572f53808580c306bf634", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/59e37e63eef9bac2365572f53808580c306bf634", "committedDate": "2020-04-14T21:31:45Z", "message": "Remove snippets directory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67e1bfffc225a6a4d6cca832c2ab63e8c2e68f5d", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/67e1bfffc225a6a4d6cca832c2ab63e8c2e68f5d", "committedDate": "2020-04-14T21:31:45Z", "message": "Use CONSTANT_CASE for all p-s-f vars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e2cefe1b3792ffb5955aec0771fb3ace0649cdf", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/7e2cefe1b3792ffb5955aec0771fb3ace0649cdf", "committedDate": "2020-04-14T21:31:45Z", "message": "Remove extraneous <type> param"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba4c41fdf3fc012d5bb3c8d8bbf9ff71b558623c", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/ba4c41fdf3fc012d5bb3c8d8bbf9ff71b558623c", "committedDate": "2020-04-14T21:31:45Z", "message": "Add GCF maven plugin to all pom's"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e83d8b91126978b1e2091bdeeff5d991ee7c79d", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/7e83d8b91126978b1e2091bdeeff5d991ee7c79d", "committedDate": "2020-04-14T21:31:45Z", "message": "Use IODH pattern"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86301e1aa30caac696a91fe9240f98084d6c2785", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/86301e1aa30caac696a91fe9240f98084d6c2785", "committedDate": "2020-04-14T21:31:45Z", "message": "Fix test failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecb4d312b75dae1fb57c72dca20f72d12e87f796", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/ecb4d312b75dae1fb57c72dca20f72d12e87f796", "committedDate": "2020-04-14T21:31:45Z", "message": "Add top-level pom for testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ad9651d4f35d085dc040871209086c938407bad", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/5ad9651d4f35d085dc040871209086c938407bad", "committedDate": "2020-04-14T21:31:45Z", "message": "Fix lint errors raised by top-level POM"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43a70aa6048e698dba770a8be5b5866988f659b7", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/43a70aa6048e698dba770a8be5b5866988f659b7", "committedDate": "2020-04-14T21:31:45Z", "message": "[spotbugs] helloworld: swap if-else for get().orElse()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "460fd7ca9291ba4092aa84433a767d48b5a6aa27", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/460fd7ca9291ba4092aa84433a767d48b5a6aa27", "committedDate": "2020-04-14T21:31:45Z", "message": "[spotbugs] parseContentType: if-else --> switch-case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0e20947e412e475cd9e91f3ef1beabde7427f02", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/e0e20947e412e475cd9e91f3ef1beabde7427f02", "committedDate": "2020-04-14T21:31:45Z", "message": "[spotbugs] put back strangely-missing line in imagemagick sample"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3dfca3769bbb147374ad6e867fa676838ebbf18", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d3dfca3769bbb147374ad6e867fa676838ebbf18", "committedDate": "2020-04-14T21:31:45Z", "message": "[spotbugs] misc imagemagick fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57c0370cab5330db2bf6a7a20dc3c3fb9220f99d", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/57c0370cab5330db2bf6a7a20dc3c3fb9220f99d", "committedDate": "2020-04-14T21:31:45Z", "message": "rename InfiniteRetryPubsub to RetryTimeout + fix spotbugs errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "680f71b1b0b86a970b89ea23e0a1a33a8e7a74a8", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/680f71b1b0b86a970b89ea23e0a1a33a8e7a74a8", "committedDate": "2020-04-14T21:31:45Z", "message": "[spotbugs] fix slack errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fe7830559834a6b81ae2a80b3b061aea0a82400", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/3fe7830559834a6b81ae2a80b3b061aea0a82400", "committedDate": "2020-04-14T21:31:45Z", "message": "[spotbugs] fix minor errors in logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3810a68bd4cef48a9a287502bc7fe82207b05c04", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/3810a68bd4cef48a9a287502bc7fe82207b05c04", "committedDate": "2020-04-14T21:31:45Z", "message": "[spotbugs] firebase misc fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f61a5689fe367d9d04543bf81225ad5046aca478", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/f61a5689fe367d9d04543bf81225ad5046aca478", "committedDate": "2020-04-14T21:31:45Z", "message": "[spotbugs] ocr misc fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa88153cf2ec45830889429f5b4176b9e8b989a1", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/aa88153cf2ec45830889429f5b4176b9e8b989a1", "committedDate": "2020-04-14T21:31:45Z", "message": "Make gson declaration consistent + remove extra env-var mocking"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6ddd76cb7c8da62dfea609f73f1703c9dbb5e4e", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/c6ddd76cb7c8da62dfea609f73f1703c9dbb5e4e", "committedDate": "2020-04-14T21:31:45Z", "message": "[spotbugs] fix http bugs + checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a0d44e33d5a1eea089d48c93c47ff8d72d56e44", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/1a0d44e33d5a1eea089d48c93c47ff8d72d56e44", "committedDate": "2020-04-14T21:31:46Z", "message": "Disable parent pom testing, take 1: remove shared config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27269e37c4dfd807c76a28b497072bed639be65d", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/27269e37c4dfd807c76a28b497072bed639be65d", "committedDate": "2020-04-14T21:31:46Z", "message": "Disable tests, take 2: add kokoro.skipTests POM property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90e532cc9624c58908cab2f40457aa06f7c07e7a", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/90e532cc9624c58908cab2f40457aa06f7c07e7a", "committedDate": "2020-04-14T21:31:46Z", "message": "Make eventpojos fields private"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17d99f2739abeadd837b8e669d9c2ad05f4c2775", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/17d99f2739abeadd837b8e669d9c2ad05f4c2775", "committedDate": "2020-04-14T21:31:46Z", "message": "[comments] http: remove excess deps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c67915fbce35fd5781b62b95fc19de08dd656e31", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/c67915fbce35fd5781b62b95fc19de08dd656e31", "committedDate": "2020-04-14T21:31:46Z", "message": "[comments] Remove xml tag from POMs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3dd530d1f472b8eca588ee7215459cd266303790", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/3dd530d1f472b8eca588ee7215459cd266303790", "committedDate": "2020-04-14T21:31:46Z", "message": "[comments] update README"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fb00874f9e7f96066d40c80e5fe300a7937b4f1", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/9fb00874f9e7f96066d40c80e5fe300a7937b4f1", "committedDate": "2020-04-14T21:31:46Z", "message": "[comments] update README"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72be82c11582c2cf0cb41bf4644ad5b13d2cae4e", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/72be82c11582c2cf0cb41bf4644ad5b13d2cae4e", "committedDate": "2020-04-14T21:31:46Z", "message": "[comments] use more verbose logging for exceptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "070d798c0f6857dd3114e5dfea90ac91cedeb6ca", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/070d798c0f6857dd3114e5dfea90ac91cedeb6ca", "committedDate": "2020-04-14T21:31:46Z", "message": "Address Ray's comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9471b20d1c4e5b15cdd84b31f796acbe23fb5fe8", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/9471b20d1c4e5b15cdd84b31f796acbe23fb5fe8", "committedDate": "2020-04-14T21:31:46Z", "message": "[comments 2] add xml lines back to POMs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87a65b6f40d954c0381909ce759aa8c34cf377cd", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/87a65b6f40d954c0381909ce759aa8c34cf377cd", "committedDate": "2020-04-14T21:31:46Z", "message": "Remove parent pom + add bash cmd to run all tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0be1dbdefab2af4b069adbe68896d065176e0022", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/0be1dbdefab2af4b069adbe68896d065176e0022", "committedDate": "2020-04-14T21:29:04Z", "message": "Remove parent pom + add bash cmd to run all tests"}, "afterCommit": {"oid": "87a65b6f40d954c0381909ce759aa8c34cf377cd", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/87a65b6f40d954c0381909ce759aa8c34cf377cd", "committedDate": "2020-04-14T21:31:46Z", "message": "Remove parent pom + add bash cmd to run all tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 809, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}