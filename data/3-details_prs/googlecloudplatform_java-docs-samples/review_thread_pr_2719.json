{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2OTM3NzM4", "number": 2719, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjoxOTozOFrOD0dohg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjoxOTozOFrOD0dohg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzM4MDU0OnYy", "diffSide": "RIGHT", "path": "automl/cloud-client/src/main/java/com/example/automl/ImportDataset.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjoxOTozOFrOGJa4dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNDo0Njo0M1rOGJ6cWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUzMDgwNg==", "bodyText": "@lesv, I wanted to make a note for the timeout that even though there is a timeout exception, the operation is still running in the background. But I still end up throwing the error.\nWhat's the best practice here?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2719#discussion_r412530806", "createdAt": "2020-04-21T22:19:38Z", "author": {"login": "nnegrey"}, "path": "automl/cloud-client/src/main/java/com/example/automl/ImportDataset.java", "diffHunk": "@@ -55,8 +59,22 @@ static void importDataset(String projectId, String datasetId, String path)\n       InputConfig inputConfig = InputConfig.newBuilder().setGcsSource(gcsSource).build();\n       System.out.println(\"Processing import...\");\n \n-      Empty response = client.importDataAsync(datasetFullId, inputConfig).get();\n-      System.out.format(\"Dataset imported. %s\\n\", response);\n+      // Start the import job\n+      OperationFuture<Empty, OperationMetadata> operation =\n+          client.importDataAsync(datasetFullId, inputConfig);\n+\n+      System.out.format(\"Operation name: %s%n\", operation.getName());\n+\n+      // If you want to wait for the operation to finish, adjust the timeout appropriately. The\n+      // operation will still run if you choose not to wait for it to complete. You can check the\n+      // status of your operation using the operation's name.\n+      Empty response = operation.get(30, TimeUnit.MINUTES);\n+      System.out.format(\"Dataset imported. %s%n\", response);\n+    } catch (TimeoutException e) {\n+      System.out.println(\"The operation's polling period was not long enough.\");\n+      System.out.println(\"You can use the Operation's name to get the current status.\");\n+      System.out.println(\"The import job will still complete as expected.\");\n+      throw e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65fccd99b576122cc0e46b712f3a10fbac47d4bd"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjU1Mzc3NQ==", "bodyText": "I'm good w/ this.  I'd prefer to see comments, but this is ok.\nThat said, you might be very clear by changing to:\nThe import job is still running and will complete as expected.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2719#discussion_r412553775", "createdAt": "2020-04-21T23:11:54Z", "author": {"login": "lesv"}, "path": "automl/cloud-client/src/main/java/com/example/automl/ImportDataset.java", "diffHunk": "@@ -55,8 +59,22 @@ static void importDataset(String projectId, String datasetId, String path)\n       InputConfig inputConfig = InputConfig.newBuilder().setGcsSource(gcsSource).build();\n       System.out.println(\"Processing import...\");\n \n-      Empty response = client.importDataAsync(datasetFullId, inputConfig).get();\n-      System.out.format(\"Dataset imported. %s\\n\", response);\n+      // Start the import job\n+      OperationFuture<Empty, OperationMetadata> operation =\n+          client.importDataAsync(datasetFullId, inputConfig);\n+\n+      System.out.format(\"Operation name: %s%n\", operation.getName());\n+\n+      // If you want to wait for the operation to finish, adjust the timeout appropriately. The\n+      // operation will still run if you choose not to wait for it to complete. You can check the\n+      // status of your operation using the operation's name.\n+      Empty response = operation.get(30, TimeUnit.MINUTES);\n+      System.out.format(\"Dataset imported. %s%n\", response);\n+    } catch (TimeoutException e) {\n+      System.out.println(\"The operation's polling period was not long enough.\");\n+      System.out.println(\"You can use the Operation's name to get the current status.\");\n+      System.out.println(\"The import job will still complete as expected.\");\n+      throw e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUzMDgwNg=="}, "originalCommit": {"oid": "65fccd99b576122cc0e46b712f3a10fbac47d4bd"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA0Nzg5Nw==", "bodyText": "Yea, I'll switch to that.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2719#discussion_r413047897", "createdAt": "2020-04-22T14:46:43Z", "author": {"login": "nnegrey"}, "path": "automl/cloud-client/src/main/java/com/example/automl/ImportDataset.java", "diffHunk": "@@ -55,8 +59,22 @@ static void importDataset(String projectId, String datasetId, String path)\n       InputConfig inputConfig = InputConfig.newBuilder().setGcsSource(gcsSource).build();\n       System.out.println(\"Processing import...\");\n \n-      Empty response = client.importDataAsync(datasetFullId, inputConfig).get();\n-      System.out.format(\"Dataset imported. %s\\n\", response);\n+      // Start the import job\n+      OperationFuture<Empty, OperationMetadata> operation =\n+          client.importDataAsync(datasetFullId, inputConfig);\n+\n+      System.out.format(\"Operation name: %s%n\", operation.getName());\n+\n+      // If you want to wait for the operation to finish, adjust the timeout appropriately. The\n+      // operation will still run if you choose not to wait for it to complete. You can check the\n+      // status of your operation using the operation's name.\n+      Empty response = operation.get(30, TimeUnit.MINUTES);\n+      System.out.format(\"Dataset imported. %s%n\", response);\n+    } catch (TimeoutException e) {\n+      System.out.println(\"The operation's polling period was not long enough.\");\n+      System.out.println(\"You can use the Operation's name to get the current status.\");\n+      System.out.println(\"The import job will still complete as expected.\");\n+      throw e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUzMDgwNg=="}, "originalCommit": {"oid": "65fccd99b576122cc0e46b712f3a10fbac47d4bd"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 827, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}