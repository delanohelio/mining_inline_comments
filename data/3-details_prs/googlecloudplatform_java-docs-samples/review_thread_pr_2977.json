{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNTkxNDAx", "number": 2977, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxOTo1MTowN1rOEAQL-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxOTo1MTozOFrOEAQMnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzAwNjY2OnYy", "diffSide": "RIGHT", "path": "jobs/v4/src/main/java/com/example/jobs/JobSearchCreateJob.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxOTo1MTowN1rOGba0MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzo1NjozNVrOGbhJ0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQwNDA4MA==", "bodyText": "This wouldn't be my first choice.  https://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html would be better.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2977#discussion_r431404080", "createdAt": "2020-05-27T19:51:07Z", "author": {"login": "lesv"}, "path": "jobs/v4/src/main/java/com/example/jobs/JobSearchCreateJob.java", "diffHunk": "@@ -22,6 +22,8 @@\n import com.google.cloud.talent.v4beta1.Job;\n import com.google.cloud.talent.v4beta1.JobServiceClient;\n import com.google.cloud.talent.v4beta1.TenantName;\n+import com.google.protobuf.Timestamp;\n+import com.google.protobuf.util.Timestamps;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "633879703926e5ce8c991604c0b445109272398a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQzOTI0OA==", "bodyText": "Okay I will change it to sql Timestamp", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2977#discussion_r431439248", "createdAt": "2020-05-27T21:00:39Z", "author": {"login": "munkhuushmgl"}, "path": "jobs/v4/src/main/java/com/example/jobs/JobSearchCreateJob.java", "diffHunk": "@@ -22,6 +22,8 @@\n import com.google.cloud.talent.v4beta1.Job;\n import com.google.cloud.talent.v4beta1.JobServiceClient;\n import com.google.cloud.talent.v4beta1.TenantName;\n+import com.google.protobuf.Timestamp;\n+import com.google.protobuf.util.Timestamps;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQwNDA4MA=="}, "originalCommit": {"oid": "633879703926e5ce8c991604c0b445109272398a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUwNzkyMA==", "bodyText": "Looks like method that sets expiration date specifically takes this Timestamp:\nsetPostingExpireTime(com.google.protobuf.Timestamp)\n\nSince it is discouraged, I will take this out and just comment it about 30 days expiration. Also, it is also mentioned in the docs, https://cloud.google.com/talent-solution/job-search/docs/jobs", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2977#discussion_r431507920", "createdAt": "2020-05-27T23:56:35Z", "author": {"login": "munkhuushmgl"}, "path": "jobs/v4/src/main/java/com/example/jobs/JobSearchCreateJob.java", "diffHunk": "@@ -22,6 +22,8 @@\n import com.google.cloud.talent.v4beta1.Job;\n import com.google.cloud.talent.v4beta1.JobServiceClient;\n import com.google.cloud.talent.v4beta1.TenantName;\n+import com.google.protobuf.Timestamp;\n+import com.google.protobuf.util.Timestamps;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQwNDA4MA=="}, "originalCommit": {"oid": "633879703926e5ce8c991604c0b445109272398a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzAwODI4OnYy", "diffSide": "RIGHT", "path": "jobs/v4/src/main/java/com/example/jobs/JobSearchCreateJob.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxOTo1MTozOFrOGba1MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzozNTowMFrOGbgvww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQwNDMzNg==", "bodyText": "https://docs.oracle.com/javase/8/docs/api/java/sql/Timestamp.html <== Is protobuf timestamp leaked to users?  Is this really a good idea?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2977#discussion_r431404336", "createdAt": "2020-05-27T19:51:38Z", "author": {"login": "lesv"}, "path": "jobs/v4/src/main/java/com/example/jobs/JobSearchCreateJob.java", "diffHunk": "@@ -46,14 +48,27 @@ public static void createJob(\n       String requisitionId,\n       String jobApplicationUrl)\n       throws IOException {\n+    // Initialize client that will be used to send requests. This client only needs to be created\n+    // once, and can be reused for multiple requests. After completing all of your requests, call\n+    // the \"close\" method on the client to safely clean up any remaining background resources.\n     try (JobServiceClient jobServiceClient = JobServiceClient.create()) {\n       TenantName parent = TenantName.of(projectId, tenantId);\n       Job.ApplicationInfo applicationInfo =\n           Job.ApplicationInfo.newBuilder().addUris(jobApplicationUrl).build();\n \n-      List<String> addresses = Arrays.asList(\"1600 Amphitheatre Parkway, Mountain View, CA 94043\",\n+      List<String> addresses =\n+          Arrays.asList(\n+              \"1600 Amphitheatre Parkway, Mountain View, CA 94043\",\n               \"111 8th Avenue, New York, NY 10011\");\n \n+      // if exp date is not set, by default it will expire in 30 days.\n+      Timestamp expirationDate =\n+          Timestamps.add(\n+              Timestamps.fromMillis(System.currentTimeMillis()),\n+              com.google.protobuf.Duration.newBuilder()\n+                  .setSeconds(60L * 60L * 24L * 30L) //  30 days ago\n+                  .build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "633879703926e5ce8c991604c0b445109272398a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ1MDEzOQ==", "bodyText": "I may have copied the wrong one.  I think LocalDate https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html is the Java 8 hotness. (if it works)", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2977#discussion_r431450139", "createdAt": "2020-05-27T21:22:37Z", "author": {"login": "lesv"}, "path": "jobs/v4/src/main/java/com/example/jobs/JobSearchCreateJob.java", "diffHunk": "@@ -46,14 +48,27 @@ public static void createJob(\n       String requisitionId,\n       String jobApplicationUrl)\n       throws IOException {\n+    // Initialize client that will be used to send requests. This client only needs to be created\n+    // once, and can be reused for multiple requests. After completing all of your requests, call\n+    // the \"close\" method on the client to safely clean up any remaining background resources.\n     try (JobServiceClient jobServiceClient = JobServiceClient.create()) {\n       TenantName parent = TenantName.of(projectId, tenantId);\n       Job.ApplicationInfo applicationInfo =\n           Job.ApplicationInfo.newBuilder().addUris(jobApplicationUrl).build();\n \n-      List<String> addresses = Arrays.asList(\"1600 Amphitheatre Parkway, Mountain View, CA 94043\",\n+      List<String> addresses =\n+          Arrays.asList(\n+              \"1600 Amphitheatre Parkway, Mountain View, CA 94043\",\n               \"111 8th Avenue, New York, NY 10011\");\n \n+      // if exp date is not set, by default it will expire in 30 days.\n+      Timestamp expirationDate =\n+          Timestamps.add(\n+              Timestamps.fromMillis(System.currentTimeMillis()),\n+              com.google.protobuf.Duration.newBuilder()\n+                  .setSeconds(60L * 60L * 24L * 30L) //  30 days ago\n+                  .build());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQwNDMzNg=="}, "originalCommit": {"oid": "633879703926e5ce8c991604c0b445109272398a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ1MDkyMg==", "bodyText": "And LocalDateTime https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2977#discussion_r431450922", "createdAt": "2020-05-27T21:24:08Z", "author": {"login": "lesv"}, "path": "jobs/v4/src/main/java/com/example/jobs/JobSearchCreateJob.java", "diffHunk": "@@ -46,14 +48,27 @@ public static void createJob(\n       String requisitionId,\n       String jobApplicationUrl)\n       throws IOException {\n+    // Initialize client that will be used to send requests. This client only needs to be created\n+    // once, and can be reused for multiple requests. After completing all of your requests, call\n+    // the \"close\" method on the client to safely clean up any remaining background resources.\n     try (JobServiceClient jobServiceClient = JobServiceClient.create()) {\n       TenantName parent = TenantName.of(projectId, tenantId);\n       Job.ApplicationInfo applicationInfo =\n           Job.ApplicationInfo.newBuilder().addUris(jobApplicationUrl).build();\n \n-      List<String> addresses = Arrays.asList(\"1600 Amphitheatre Parkway, Mountain View, CA 94043\",\n+      List<String> addresses =\n+          Arrays.asList(\n+              \"1600 Amphitheatre Parkway, Mountain View, CA 94043\",\n               \"111 8th Avenue, New York, NY 10011\");\n \n+      // if exp date is not set, by default it will expire in 30 days.\n+      Timestamp expirationDate =\n+          Timestamps.add(\n+              Timestamps.fromMillis(System.currentTimeMillis()),\n+              com.google.protobuf.Duration.newBuilder()\n+                  .setSeconds(60L * 60L * 24L * 30L) //  30 days ago\n+                  .build());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQwNDMzNg=="}, "originalCommit": {"oid": "633879703926e5ce8c991604c0b445109272398a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUwMTI1MQ==", "bodyText": "I referenced from appengine Java 8\n\n  \n    \n      java-docs-samples/appengine-java8/bigquery/src/main/java/com/example/appengine/bigquerylogging/BigQueryRunner.java\n    \n    \n         Line 199\n      in\n      caebd85\n    \n    \n    \n    \n\n        \n          \n           Timestamps.subtract(", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2977#discussion_r431501251", "createdAt": "2020-05-27T23:35:00Z", "author": {"login": "munkhuushmgl"}, "path": "jobs/v4/src/main/java/com/example/jobs/JobSearchCreateJob.java", "diffHunk": "@@ -46,14 +48,27 @@ public static void createJob(\n       String requisitionId,\n       String jobApplicationUrl)\n       throws IOException {\n+    // Initialize client that will be used to send requests. This client only needs to be created\n+    // once, and can be reused for multiple requests. After completing all of your requests, call\n+    // the \"close\" method on the client to safely clean up any remaining background resources.\n     try (JobServiceClient jobServiceClient = JobServiceClient.create()) {\n       TenantName parent = TenantName.of(projectId, tenantId);\n       Job.ApplicationInfo applicationInfo =\n           Job.ApplicationInfo.newBuilder().addUris(jobApplicationUrl).build();\n \n-      List<String> addresses = Arrays.asList(\"1600 Amphitheatre Parkway, Mountain View, CA 94043\",\n+      List<String> addresses =\n+          Arrays.asList(\n+              \"1600 Amphitheatre Parkway, Mountain View, CA 94043\",\n               \"111 8th Avenue, New York, NY 10011\");\n \n+      // if exp date is not set, by default it will expire in 30 days.\n+      Timestamp expirationDate =\n+          Timestamps.add(\n+              Timestamps.fromMillis(System.currentTimeMillis()),\n+              com.google.protobuf.Duration.newBuilder()\n+                  .setSeconds(60L * 60L * 24L * 30L) //  30 days ago\n+                  .build());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQwNDMzNg=="}, "originalCommit": {"oid": "633879703926e5ce8c991604c0b445109272398a"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 688, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}