{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MDc1MTAy", "number": 1930, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QxODo1OTo0OVrODVumHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QyMzowOTowNlrODVxPhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MTEwMTA4OnYy", "diffSide": "LEFT", "path": "automl/cloud-client/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QxODo1OTo0OVrOFaHBpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QyMzoxODozNVrOFaLRiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyMjQwNA==", "bodyText": "Is the new version not in the BOM? If so do we know when it will be released?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/1930#discussion_r362922404", "createdAt": "2020-01-03T18:59:49Z", "author": {"login": "averikitsch"}, "path": "automl/cloud-client/pom.xml", "diffHunk": "@@ -27,30 +27,17 @@\n   </parent>\n \n   <properties>\n-    <maven.compiler.target>1.11</maven.compiler.target>\n-    <maven.compiler.source>1.11</maven.compiler.source>\n+    <maven.compiler.target>11</maven.compiler.target>\n+    <maven.compiler.source>11</maven.compiler.source>\n     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n   </properties>\n \n-  <!-- [START automl_java_dependencies] -->\n-  <!--  Using libraries-bom to manage versions.\n-  See https://github.com/GoogleCloudPlatform/cloud-opensource-java/wiki/The-Google-Cloud-Platform-Libraries-BOM -->\n-  <dependencyManagement>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccdd2c3421738f2ba50faaa0abe8d4c79c892771"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk5MjAxMQ==", "bodyText": "No, not yet.\nIt is pushed to java-cloud-bom: https://github.com/googleapis/java-cloud-bom/blob/master/pom.xml#L207\nWhich is also in cloud-opensource-java: https://github.com/GoogleCloudPlatform/cloud-opensource-java/blob/ca1dede295e2db75fc7a8148fddadbbf102af80c/boms/cloud-oss-bom/pom.xml#L48\nBut not sure of their release process. But 3.3.0 did not contain it.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/1930#discussion_r362992011", "createdAt": "2020-01-03T23:18:35Z", "author": {"login": "nnegrey"}, "path": "automl/cloud-client/pom.xml", "diffHunk": "@@ -27,30 +27,17 @@\n   </parent>\n \n   <properties>\n-    <maven.compiler.target>1.11</maven.compiler.target>\n-    <maven.compiler.source>1.11</maven.compiler.source>\n+    <maven.compiler.target>11</maven.compiler.target>\n+    <maven.compiler.source>11</maven.compiler.source>\n     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n   </properties>\n \n-  <!-- [START automl_java_dependencies] -->\n-  <!--  Using libraries-bom to manage versions.\n-  See https://github.com/GoogleCloudPlatform/cloud-opensource-java/wiki/The-Google-Cloud-Platform-Libraries-BOM -->\n-  <dependencyManagement>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyMjQwNA=="}, "originalCommit": {"oid": "ccdd2c3421738f2ba50faaa0abe8d4c79c892771"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MTUzMTQzOnYy", "diffSide": "RIGHT", "path": "automl/cloud-client/src/test/java/com/example/automl/LanguageEntityExtractionCreateDatasetTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QyMzowNjowN1rOFaLJIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QyMzoxODo1OFrOFaLRzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4OTg1OA==", "bodyText": "Is there a purpose for getting the datasetId?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/1930#discussion_r362989858", "createdAt": "2020-01-03T23:06:07Z", "author": {"login": "averikitsch"}, "path": "automl/cloud-client/src/test/java/com/example/automl/LanguageEntityExtractionCreateDatasetTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2019 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.automl;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.util.UUID;\n+import java.util.concurrent.ExecutionException;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+@RunWith(JUnit4.class)\n+@SuppressWarnings(\"checkstyle:abbreviationaswordinname\")\n+public class LanguageEntityExtractionCreateDatasetTest {\n+\n+  private static final String PROJECT_ID = System.getenv(\"GOOGLE_CLOUD_PROJECT\");\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+  private String datasetId;\n+\n+  private static void requireEnvVar(String varName) {\n+    assertNotNull(\n+        System.getenv(varName),\n+        \"Environment variable '%s' is required to perform these tests.\".format(varName));\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"GOOGLE_APPLICATION_CREDENTIALS\");\n+    requireEnvVar(\"GOOGLE_CLOUD_PROJECT\");\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() throws InterruptedException, ExecutionException, IOException {\n+    // Delete the created dataset\n+    DeleteDataset.deleteDataset(PROJECT_ID, datasetId);\n+    System.setOut(null);\n+  }\n+\n+  @Test\n+  public void testCreateDataset() throws IOException, ExecutionException, InterruptedException {\n+    // Create a random dataset name with a length of 32 characters (max allowed by AutoML)\n+    // To prevent name collisions when running tests in multiple java versions at once.\n+    // AutoML doesn't allow \"-\", but accepts \"_\"\n+    String datasetName =\n+        String.format(\"test_%s\", UUID.randomUUID().toString().replace(\"-\", \"_\").substring(0, 26));\n+    LanguageEntityExtractionCreateDataset.createDataset(PROJECT_ID, datasetName);\n+\n+    String got = bout.toString();\n+    assertThat(got).contains(\"Dataset id:\");\n+    datasetId = got.split(\"Dataset id: \")[1].split(\"\\n\")[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccdd2c3421738f2ba50faaa0abe8d4c79c892771"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk5MjA3OQ==", "bodyText": "To delete it in the teardown.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/1930#discussion_r362992079", "createdAt": "2020-01-03T23:18:58Z", "author": {"login": "nnegrey"}, "path": "automl/cloud-client/src/test/java/com/example/automl/LanguageEntityExtractionCreateDatasetTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2019 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.automl;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.util.UUID;\n+import java.util.concurrent.ExecutionException;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+@RunWith(JUnit4.class)\n+@SuppressWarnings(\"checkstyle:abbreviationaswordinname\")\n+public class LanguageEntityExtractionCreateDatasetTest {\n+\n+  private static final String PROJECT_ID = System.getenv(\"GOOGLE_CLOUD_PROJECT\");\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+  private String datasetId;\n+\n+  private static void requireEnvVar(String varName) {\n+    assertNotNull(\n+        System.getenv(varName),\n+        \"Environment variable '%s' is required to perform these tests.\".format(varName));\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"GOOGLE_APPLICATION_CREDENTIALS\");\n+    requireEnvVar(\"GOOGLE_CLOUD_PROJECT\");\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() throws InterruptedException, ExecutionException, IOException {\n+    // Delete the created dataset\n+    DeleteDataset.deleteDataset(PROJECT_ID, datasetId);\n+    System.setOut(null);\n+  }\n+\n+  @Test\n+  public void testCreateDataset() throws IOException, ExecutionException, InterruptedException {\n+    // Create a random dataset name with a length of 32 characters (max allowed by AutoML)\n+    // To prevent name collisions when running tests in multiple java versions at once.\n+    // AutoML doesn't allow \"-\", but accepts \"_\"\n+    String datasetName =\n+        String.format(\"test_%s\", UUID.randomUUID().toString().replace(\"-\", \"_\").substring(0, 26));\n+    LanguageEntityExtractionCreateDataset.createDataset(PROJECT_ID, datasetName);\n+\n+    String got = bout.toString();\n+    assertThat(got).contains(\"Dataset id:\");\n+    datasetId = got.split(\"Dataset id: \")[1].split(\"\\n\")[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4OTg1OA=="}, "originalCommit": {"oid": "ccdd2c3421738f2ba50faaa0abe8d4c79c892771"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MTUzMzM4OnYy", "diffSide": "RIGHT", "path": "automl/cloud-client/src/test/java/com/example/automl/ListDatasetsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QyMzowNzo1M1rOFaLKVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QyMzowNzo1M1rOFaLKVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk5MDE2Ng==", "bodyText": "nit: remove or add more specific comment", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/1930#discussion_r362990166", "createdAt": "2020-01-03T23:07:53Z", "author": {"login": "averikitsch"}, "path": "automl/cloud-client/src/test/java/com/example/automl/ListDatasetsTest.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.automl;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+@RunWith(JUnit4.class)\n+@SuppressWarnings(\"checkstyle:abbreviationaswordinname\")\n+public class ListDatasetsTest {\n+\n+  private static final String PROJECT_ID = System.getenv(\"GOOGLE_CLOUD_PROJECT\");\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  private static void requireEnvVar(String varName) {\n+    assertNotNull(\n+        System.getenv(varName),\n+        \"Environment variable '%s' is required to perform these tests.\".format(varName));\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"GOOGLE_APPLICATION_CREDENTIALS\");\n+    requireEnvVar(\"GOOGLE_CLOUD_PROJECT\");\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    System.setOut(null);\n+  }\n+\n+  @Test\n+  public void testListDataset() throws IOException {\n+    // Act", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccdd2c3421738f2ba50faaa0abe8d4c79c892771"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MTUzNDc3OnYy", "diffSide": "RIGHT", "path": "automl/cloud-client/src/test/java/com/example/automl/VisionClassificationCreateDatasetTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QyMzowOTowNlrOFaLLLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QyMzowOTowNlrOFaLLLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk5MDM4Mg==", "bodyText": "2020?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/1930#discussion_r362990382", "createdAt": "2020-01-03T23:09:06Z", "author": {"login": "averikitsch"}, "path": "automl/cloud-client/src/test/java/com/example/automl/VisionClassificationCreateDatasetTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2019 Google LLC", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccdd2c3421738f2ba50faaa0abe8d4c79c892771"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 595, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}