{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MjYxODA5", "number": 2200, "title": "docs: Add SecurityCenter Notification snippets", "bodyText": "Fixes #2199", "createdAt": "2020-02-24T22:23:04Z", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2200", "merged": true, "mergeCommit": {"oid": "43b2cbb54c92253e274674085e75d8c291916503"}, "closed": true, "closedAt": "2020-02-25T22:41:44Z", "author": {"login": "tdh911"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHlJBxAH2gAyMzc5MjYxODA5OjFmNzQ3ZGYzM2EzMzU0YmMzNTNhY2JkYTE0MTM1NmMyNzc5ZTk1MmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH5Os-AH2gAyMzc5MjYxODA5OjZmZTlkZjBkNTUyYTYxMzI4OTNmNTRjZjA5MDlhMTQzYjg1NTQ2NGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1f747df33a3354bc353acbda141356c2779e952e", "author": {"user": {"login": "tdh911", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/1f747df33a3354bc353acbda141356c2779e952e", "committedDate": "2020-02-24T22:19:54Z", "message": "docs: Add SecurityCenter Notification snippets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b52073c8c96cbe200dae2d1a76893677392d197", "author": {"user": {"login": "tdh911", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/7b52073c8c96cbe200dae2d1a76893677392d197", "committedDate": "2020-02-24T22:23:21Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MzU1MDYy", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2200#pullrequestreview-364355062", "createdAt": "2020-02-25T18:40:32Z", "commit": {"oid": "7b52073c8c96cbe200dae2d1a76893677392d197"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODo0MDozMlrOFuQnQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxODo0Njo0NFrOFuQ0kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA1MTAwOA==", "bodyText": "Imports should be in the snippet tag.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2200#discussion_r384051008", "createdAt": "2020-02-25T18:40:32Z", "author": {"login": "lesv"}, "path": "securitycenter/src/main/java/com/google/cloud/examples/securitycenter/snippets/NotificationConfigSnippets.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.examples.securitycenter.snippets;\n+\n+import com.google.cloud.securitycenter.v1p1beta1.CreateNotificationConfigRequest;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfig;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfig.EventType;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfig.StreamingConfig;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfigName;\n+import com.google.cloud.securitycenter.v1p1beta1.OrganizationName;\n+import com.google.cloud.securitycenter.v1p1beta1.SecurityCenterClient;\n+import com.google.cloud.securitycenter.v1p1beta1.SecurityCenterClient.ListNotificationConfigsPagedResponse;\n+import com.google.common.collect.ImmutableList;\n+import com.google.protobuf.FieldMask;\n+import java.io.IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b52073c8c96cbe200dae2d1a76893677392d197"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA1MjQ3NQ==", "bodyText": "better to do the concatenate in code directly rather than passing it like this.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2200#discussion_r384052475", "createdAt": "2020-02-25T18:43:20Z", "author": {"login": "lesv"}, "path": "securitycenter/src/main/java/com/google/cloud/examples/securitycenter/snippets/NotificationConfigSnippets.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.examples.securitycenter.snippets;\n+\n+import com.google.cloud.securitycenter.v1p1beta1.CreateNotificationConfigRequest;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfig;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfig.EventType;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfig.StreamingConfig;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfigName;\n+import com.google.cloud.securitycenter.v1p1beta1.OrganizationName;\n+import com.google.cloud.securitycenter.v1p1beta1.SecurityCenterClient;\n+import com.google.cloud.securitycenter.v1p1beta1.SecurityCenterClient.ListNotificationConfigsPagedResponse;\n+import com.google.common.collect.ImmutableList;\n+import com.google.protobuf.FieldMask;\n+import java.io.IOException;\n+\n+/** Snippets for how to work with Notifications in Cloud SCC. */\n+final class NotificationConfigSnippets {\n+  private NotificationConfigSnippets() {}\n+\n+  public static NotificationConfig createNotificationConfig(\n+      String organizationId, String pubsubTopic, String notificationConfigId) throws IOException {\n+\n+    // [START scc_create_notification_config]\n+    // String organizationId = \"{your-org-id}\";\n+    // String notificationConfigId = \"config-id\";\n+    // String pubsubTopic = \"projects/{your-project}/topics/{your-topic}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b52073c8c96cbe200dae2d1a76893677392d197"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA1MjY2MQ==", "bodyText": "Good to tell folks about this.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2200#discussion_r384052661", "createdAt": "2020-02-25T18:43:40Z", "author": {"login": "lesv"}, "path": "securitycenter/src/main/java/com/google/cloud/examples/securitycenter/snippets/NotificationConfigSnippets.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.examples.securitycenter.snippets;\n+\n+import com.google.cloud.securitycenter.v1p1beta1.CreateNotificationConfigRequest;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfig;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfig.EventType;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfig.StreamingConfig;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfigName;\n+import com.google.cloud.securitycenter.v1p1beta1.OrganizationName;\n+import com.google.cloud.securitycenter.v1p1beta1.SecurityCenterClient;\n+import com.google.cloud.securitycenter.v1p1beta1.SecurityCenterClient.ListNotificationConfigsPagedResponse;\n+import com.google.common.collect.ImmutableList;\n+import com.google.protobuf.FieldMask;\n+import java.io.IOException;\n+\n+/** Snippets for how to work with Notifications in Cloud SCC. */\n+final class NotificationConfigSnippets {\n+  private NotificationConfigSnippets() {}\n+\n+  public static NotificationConfig createNotificationConfig(\n+      String organizationId, String pubsubTopic, String notificationConfigId) throws IOException {\n+\n+    // [START scc_create_notification_config]\n+    // String organizationId = \"{your-org-id}\";\n+    // String notificationConfigId = \"config-id\";\n+    // String pubsubTopic = \"projects/{your-project}/topics/{your-topic}\";\n+    // Ensure this ServiceAccount has the \"pubsub.topics.setIamPolicy\" permission on the topic.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b52073c8c96cbe200dae2d1a76893677392d197"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA1NDAzOA==", "bodyText": "Where do I get this?  does it have a special format?   Should it be unique / what?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2200#discussion_r384054038", "createdAt": "2020-02-25T18:46:03Z", "author": {"login": "lesv"}, "path": "securitycenter/src/main/java/com/google/cloud/examples/securitycenter/snippets/NotificationConfigSnippets.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.examples.securitycenter.snippets;\n+\n+import com.google.cloud.securitycenter.v1p1beta1.CreateNotificationConfigRequest;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfig;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfig.EventType;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfig.StreamingConfig;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfigName;\n+import com.google.cloud.securitycenter.v1p1beta1.OrganizationName;\n+import com.google.cloud.securitycenter.v1p1beta1.SecurityCenterClient;\n+import com.google.cloud.securitycenter.v1p1beta1.SecurityCenterClient.ListNotificationConfigsPagedResponse;\n+import com.google.common.collect.ImmutableList;\n+import com.google.protobuf.FieldMask;\n+import java.io.IOException;\n+\n+/** Snippets for how to work with Notifications in Cloud SCC. */\n+final class NotificationConfigSnippets {\n+  private NotificationConfigSnippets() {}\n+\n+  public static NotificationConfig createNotificationConfig(\n+      String organizationId, String pubsubTopic, String notificationConfigId) throws IOException {\n+\n+    // [START scc_create_notification_config]\n+    // String organizationId = \"{your-org-id}\";\n+    // String notificationConfigId = \"config-id\";\n+    // String pubsubTopic = \"projects/{your-project}/topics/{your-topic}\";\n+    // Ensure this ServiceAccount has the \"pubsub.topics.setIamPolicy\" permission on the topic.\n+\n+    String orgName = String.format(\"organizations/%s\", organizationId);\n+\n+    try (SecurityCenterClient client = SecurityCenterClient.create()) {\n+      CreateNotificationConfigRequest request =\n+          CreateNotificationConfigRequest.newBuilder()\n+              .setParent(orgName)\n+              .setConfigId(notificationConfigId)\n+              .setNotificationConfig(\n+                  NotificationConfig.newBuilder()\n+                      .setDescription(\"Java notification config\")\n+                      .setPubsubTopic(pubsubTopic)\n+                      .setEventType(EventType.FINDING)\n+                      .setStreamingConfig(\n+                          StreamingConfig.newBuilder().setFilter(\"state = \\\"ACTIVE\\\"\").build())\n+                      .build())\n+              .build();\n+\n+      NotificationConfig response = client.createNotificationConfig(request);\n+      System.out.println(String.format(\"Notification config was created: %s\", response));\n+      return response;\n+    }\n+    // [END scc_create_notification_config]\n+  }\n+\n+  public static boolean deleteNotificationConfig(String organizationId, String notificationConfigId)\n+      throws IOException {\n+\n+    // [START scc_delete_notification_config]\n+    // String organizationId = \"{your-org-id}\";\n+    // String notificationConfigId = \"config-id\";\n+\n+    NotificationConfigName notificationConfigName =\n+        NotificationConfigName.newBuilder()\n+            .setOrganization(organizationId)\n+            .setNotificationConfig(notificationConfigId)\n+            .build();\n+\n+    try (SecurityCenterClient client = SecurityCenterClient.create()) {\n+      client.deleteNotificationConfig(notificationConfigName);\n+\n+      System.out.println(String.format(\"Deleted Notification config: %s\", notificationConfigName));\n+    }\n+    // [END scc_delete_notification_config]\n+\n+    return true;\n+  }\n+\n+  public static NotificationConfig getNotificationConfig(\n+      String organizationId, String notificationConfigId) throws IOException {\n+\n+    // [START scc_get_notification_config]\n+    // String organizationId = \"{your-org-id}\";\n+    // String notificationConfigId = \"config-id\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b52073c8c96cbe200dae2d1a76893677392d197"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA1NDQxNw==", "bodyText": "We should format things for them so they just provide the projectID and topic name.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2200#discussion_r384054417", "createdAt": "2020-02-25T18:46:44Z", "author": {"login": "lesv"}, "path": "securitycenter/src/main/java/com/google/cloud/examples/securitycenter/snippets/NotificationConfigSnippets.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.examples.securitycenter.snippets;\n+\n+import com.google.cloud.securitycenter.v1p1beta1.CreateNotificationConfigRequest;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfig;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfig.EventType;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfig.StreamingConfig;\n+import com.google.cloud.securitycenter.v1p1beta1.NotificationConfigName;\n+import com.google.cloud.securitycenter.v1p1beta1.OrganizationName;\n+import com.google.cloud.securitycenter.v1p1beta1.SecurityCenterClient;\n+import com.google.cloud.securitycenter.v1p1beta1.SecurityCenterClient.ListNotificationConfigsPagedResponse;\n+import com.google.common.collect.ImmutableList;\n+import com.google.protobuf.FieldMask;\n+import java.io.IOException;\n+\n+/** Snippets for how to work with Notifications in Cloud SCC. */\n+final class NotificationConfigSnippets {\n+  private NotificationConfigSnippets() {}\n+\n+  public static NotificationConfig createNotificationConfig(\n+      String organizationId, String pubsubTopic, String notificationConfigId) throws IOException {\n+\n+    // [START scc_create_notification_config]\n+    // String organizationId = \"{your-org-id}\";\n+    // String notificationConfigId = \"config-id\";\n+    // String pubsubTopic = \"projects/{your-project}/topics/{your-topic}\";\n+    // Ensure this ServiceAccount has the \"pubsub.topics.setIamPolicy\" permission on the topic.\n+\n+    String orgName = String.format(\"organizations/%s\", organizationId);\n+\n+    try (SecurityCenterClient client = SecurityCenterClient.create()) {\n+      CreateNotificationConfigRequest request =\n+          CreateNotificationConfigRequest.newBuilder()\n+              .setParent(orgName)\n+              .setConfigId(notificationConfigId)\n+              .setNotificationConfig(\n+                  NotificationConfig.newBuilder()\n+                      .setDescription(\"Java notification config\")\n+                      .setPubsubTopic(pubsubTopic)\n+                      .setEventType(EventType.FINDING)\n+                      .setStreamingConfig(\n+                          StreamingConfig.newBuilder().setFilter(\"state = \\\"ACTIVE\\\"\").build())\n+                      .build())\n+              .build();\n+\n+      NotificationConfig response = client.createNotificationConfig(request);\n+      System.out.println(String.format(\"Notification config was created: %s\", response));\n+      return response;\n+    }\n+    // [END scc_create_notification_config]\n+  }\n+\n+  public static boolean deleteNotificationConfig(String organizationId, String notificationConfigId)\n+      throws IOException {\n+\n+    // [START scc_delete_notification_config]\n+    // String organizationId = \"{your-org-id}\";\n+    // String notificationConfigId = \"config-id\";\n+\n+    NotificationConfigName notificationConfigName =\n+        NotificationConfigName.newBuilder()\n+            .setOrganization(organizationId)\n+            .setNotificationConfig(notificationConfigId)\n+            .build();\n+\n+    try (SecurityCenterClient client = SecurityCenterClient.create()) {\n+      client.deleteNotificationConfig(notificationConfigName);\n+\n+      System.out.println(String.format(\"Deleted Notification config: %s\", notificationConfigName));\n+    }\n+    // [END scc_delete_notification_config]\n+\n+    return true;\n+  }\n+\n+  public static NotificationConfig getNotificationConfig(\n+      String organizationId, String notificationConfigId) throws IOException {\n+\n+    // [START scc_get_notification_config]\n+    // String organizationId = \"{your-org-id}\";\n+    // String notificationConfigId = \"config-id\";\n+\n+    try (SecurityCenterClient client = SecurityCenterClient.create()) {\n+      NotificationConfig response =\n+          client.getNotificationConfig(\n+              NotificationConfigName.newBuilder()\n+                  .setOrganization(organizationId)\n+                  .setNotificationConfig(notificationConfigId)\n+                  .build());\n+\n+      System.out.println(String.format(\"Notification config: %s\", response));\n+      return response;\n+    }\n+    // [END scc_get_notification_config]\n+  }\n+\n+  public static ImmutableList<NotificationConfig> listNotificationConfigs(String organizationId)\n+      throws IOException {\n+    // [START scc_list_notification_configs]\n+    // String organizationId = \"{your-org-id}\";\n+\n+    OrganizationName orgName =\n+        OrganizationName.newBuilder().setOrganization(organizationId).build();\n+\n+    try (SecurityCenterClient client = SecurityCenterClient.create()) {\n+      ListNotificationConfigsPagedResponse response = client.listNotificationConfigs(orgName);\n+\n+      ImmutableList<NotificationConfig> notificationConfigs =\n+          ImmutableList.copyOf(response.iterateAll());\n+      System.out.println(\n+          String.format(\"List notifications response: %s\", response.getPage().getValues()));\n+      return notificationConfigs;\n+    }\n+    // [END scc_list_notification_configs]\n+  }\n+\n+  public static NotificationConfig updateNotificationConfig(\n+      String organizationId, String notificationConfigId, String pubsubTopic) throws IOException {\n+    // [START scc_update_notification_config]\n+    // String organizationId = \"{your-org-id}\";\n+    // String notificationConfigId = \"{your-config-id}\";\n+    String notificationConfigName =\n+        String.format(\n+            \"organizations/%s/notificationConfigs/%s\", organizationId, notificationConfigId);\n+\n+    // String pubsubTopic = \"projects/{your-project}/topics/{your-new-topic}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b52073c8c96cbe200dae2d1a76893677392d197"}, "originalPosition": 141}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a78817beb23678389007298e1ba80d90f488d51f", "author": {"user": {"login": "tdh911", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/a78817beb23678389007298e1ba80d90f488d51f", "committedDate": "2020-02-25T19:27:42Z", "message": "docs: Split snippets into their own files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7d77f5b135408d8213c8119d45fbf2aca511d7d", "author": {"user": {"login": "tdh911", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d7d77f5b135408d8213c8119d45fbf2aca511d7d", "committedDate": "2020-02-25T19:47:23Z", "message": "docs: Update orgId"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b371b20be633cdfeadd67145657996c6bb10f71", "author": {"user": {"login": "tdh911", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/4b371b20be633cdfeadd67145657996c6bb10f71", "committedDate": "2020-02-25T19:56:22Z", "message": "docs: Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02c8f8936e63e36d3f3cd85337cf7940167ce199", "author": {"user": {"login": "tdh911", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/02c8f8936e63e36d3f3cd85337cf7940167ce199", "committedDate": "2020-02-25T21:00:21Z", "message": "docs: Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fa6364f3f08e83518549bce82ba6f678748cf8d", "author": {"user": {"login": "tdh911", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/8fa6364f3f08e83518549bce82ba6f678748cf8d", "committedDate": "2020-02-25T21:09:08Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "334f90456e4e2a90225b5005f92779c99b565124", "author": {"user": {"login": "tdh911", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/334f90456e4e2a90225b5005f92779c99b565124", "committedDate": "2020-02-25T21:12:07Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDUyODQ1", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2200#pullrequestreview-364452845", "createdAt": "2020-02-25T21:14:54Z", "commit": {"oid": "334f90456e4e2a90225b5005f92779c99b565124"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NDUzMjE5", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2200#pullrequestreview-364453219", "createdAt": "2020-02-25T21:15:31Z", "commit": {"oid": "334f90456e4e2a90225b5005f92779c99b565124"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d5e745eaac9261f3b6582aa7f7954a8401a2919", "author": {"user": {"login": "tdh911", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/1d5e745eaac9261f3b6582aa7f7954a8401a2919", "committedDate": "2020-02-25T21:20:56Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fe9df0d552a6132893f54cf0909a143b855464a", "author": {"user": {"login": "tdh911", "name": null}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/6fe9df0d552a6132893f54cf0909a143b855464a", "committedDate": "2020-02-25T21:44:12Z", "message": "Merge branch 'master' into master"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 971, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}