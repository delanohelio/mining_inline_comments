{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MjU1NjU4", "number": 2775, "title": "GCF: add storage system tests", "bodyText": "", "createdAt": "2020-04-23T23:46:41Z", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2775", "merged": true, "mergeCommit": {"oid": "62ac107dcded5da41b099aa63552e8f0635a6b03"}, "closed": true, "closedAt": "2020-04-24T01:28:22Z", "author": {"login": "ace-n"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcalo1QAH2gAyNDA4MjU1NjU4OjBiNjNmMjAyYjMwNWVhN2QyYTc5NGM2MmM4ZDI3NDRhNjY3NTVkMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcanDj5AH2gAyNDA4MjU1NjU4OjgwODc1MTZjYjQ4MDg0MDUzMWYyOTg4NGJjZDhmNzE3NTdhMjk0ZmE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0b63f202b305ea7d2a794c62c8d2744a66755d05", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/0b63f202b305ea7d2a794c62c8d2744a66755d05", "committedDate": "2020-04-23T23:39:12Z", "message": "Add storage system tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NTY4ODM3", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2775#pullrequestreview-399568837", "createdAt": "2020-04-24T00:40:36Z", "commit": {"oid": "0b63f202b305ea7d2a794c62c8d2744a66755d05"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMDo0MDozN1rOGLBvNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMDo0MDozN1rOGLBvNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIxNTk4OQ==", "bodyText": "Please use a more specific exception(s) than Exception", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2775#discussion_r414215989", "createdAt": "2020-04-24T00:40:37Z", "author": {"login": "kurtisvg"}, "path": "functions/helloworld/hello-gcs/src/test/java/functions/ExampleSystemTest.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package functions;\n+\n+// [START functions_storage_system_test]\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.logging.LogEntry;\n+import com.google.cloud.logging.Logging;\n+import com.google.cloud.logging.LoggingOptions;\n+import com.google.cloud.storage.BlobId;\n+import com.google.cloud.storage.BlobInfo;\n+import com.google.cloud.storage.Storage;\n+import com.google.cloud.storage.StorageOptions;\n+import io.github.resilience4j.core.IntervalFunction;\n+import io.github.resilience4j.retry.Retry;\n+import io.github.resilience4j.retry.RetryConfig;\n+import io.github.resilience4j.retry.RetryRegistry;\n+import java.io.IOException;\n+import java.time.Duration;\n+import java.time.Instant;\n+import java.time.format.DateTimeFormatter;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ExampleSystemTest {\n+\n+  // TODO<developer>: set these values (as environment variables)\n+  private static final String PROJECT_ID = System.getenv(\"GCP_PROJECT\");\n+  private static final String FUNCTIONS_BUCKET = System.getenv(\"FUNCTIONS_BUCKET\");\n+  private static final String FUNCTION_DEPLOYED_NAME = \"HelloGcs\";\n+  private static final Storage STORAGE = StorageOptions.getDefaultInstance().getService();\n+\n+  private static Logging loggingClient;\n+\n+  private HelloGcs sampleUnderTest;\n+\n+  @BeforeClass\n+  public static void setUp() throws IOException {\n+    loggingClient = LoggingOptions.getDefaultInstance().getService();\n+  }\n+\n+  private static String getLogEntriesAsString(String startTimestamp) {\n+    // Construct Stackdriver logging filter\n+    // See this page for more info: https://cloud.google.com/logging/docs/view/advanced-queries\n+    String filter = \"resource.type=\\\"cloud_function\\\"\"\n+        + \" AND severity=INFO\"\n+        + \" AND resource.labels.function_name=\" + FUNCTION_DEPLOYED_NAME\n+        + String.format(\" AND timestamp>=\\\"%s\\\"\", startTimestamp);\n+\n+    // Get Stackdriver logging entries\n+    Page<LogEntry> logEntries =\n+        loggingClient.listLogEntries(\n+            Logging.EntryListOption.filter(filter),\n+            Logging.EntryListOption.sortOrder(Logging.SortingField.TIMESTAMP, Logging.SortingOrder.DESCENDING)\n+        );\n+\n+    // Serialize Stackdriver logging entries + collect them into a single string\n+    String logsConcat = StreamSupport.stream(logEntries.getValues().spliterator(), false)\n+        .map((x) -> x.toString())\n+        .collect(Collectors.joining(\"%n\"));\n+\n+    return logsConcat;\n+  }\n+\n+  @Test\n+  public void helloGcs_shouldRunOnGcf() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b63f202b305ea7d2a794c62c8d2744a66755d05"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d55e59fb0b7c2405f527590b9e35c52e562bf1c9", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d55e59fb0b7c2405f527590b9e35c52e562bf1c9", "committedDate": "2020-04-24T00:44:10Z", "message": "Fix nit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14c5ccf859a769111c75b77452dcca9b071b5762", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/14c5ccf859a769111c75b77452dcca9b071b5762", "committedDate": "2020-04-24T01:08:06Z", "message": "Presumptive checkstyle fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8087516cb480840531f29884bcd8f71757a294fa", "author": {"user": {"login": "ace-n", "name": "Ace Nassri"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/8087516cb480840531f29884bcd8f71757a294fa", "committedDate": "2020-04-24T01:18:18Z", "message": "Fix checkstyle nit"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 775, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}