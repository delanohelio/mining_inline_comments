{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2ODA5MDMx", "number": 4304, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMzoyMzoyNVrOE8_h3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMDoyNDowNVrOFCqdxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzkwODc3OnYy", "diffSide": "LEFT", "path": "storage/storage-transfer/src/test/java/com/google/cloud/storage/storagetransfer/samples/test/TransferJobUtilsTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMzoyMzoyNVrOH5cgIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODowNDozN1rOH9nm_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk5Nzg1OQ==", "bodyText": "Is this utility class still needed?\nIf removed, you can close out: #3706", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4304#discussion_r529997859", "createdAt": "2020-11-24T23:23:25Z", "author": {"login": "frankyn"}, "path": "storage/storage-transfer/src/test/java/com/google/cloud/storage/storagetransfer/samples/test/TransferJobUtilsTest.java", "diffHunk": "@@ -21,11 +21,9 @@\n import com.google.api.services.storagetransfer.v1.model.Date;\n import com.google.api.services.storagetransfer.v1.model.TimeOfDay;\n import com.google.cloud.storage.storagetransfer.samples.TransferJobUtils;\n-import java.util.Random;\n import org.junit.Test;\n \n public class TransferJobUtilsTest {\n-  private Random rand = new Random();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67a7fcd179f0cab841dd98930779eb263076b788"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAwNDgyMQ==", "bodyText": "It's not used by the samples, but I decided to keep it in just in case anyone has a dependency on this package and was using the utils in their code", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4304#discussion_r530004821", "createdAt": "2020-11-24T23:30:29Z", "author": {"login": "JesseLovelace"}, "path": "storage/storage-transfer/src/test/java/com/google/cloud/storage/storagetransfer/samples/test/TransferJobUtilsTest.java", "diffHunk": "@@ -21,11 +21,9 @@\n import com.google.api.services.storagetransfer.v1.model.Date;\n import com.google.api.services.storagetransfer.v1.model.TimeOfDay;\n import com.google.cloud.storage.storagetransfer.samples.TransferJobUtils;\n-import java.util.Random;\n import org.junit.Test;\n \n public class TransferJobUtilsTest {\n-  private Random rand = new Random();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk5Nzg1OQ=="}, "originalCommit": {"oid": "67a7fcd179f0cab841dd98930779eb263076b788"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM3NDE0Mw==", "bodyText": "This package is never released AFAIU, do you mean in other samples?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4304#discussion_r534374143", "createdAt": "2020-12-02T18:04:37Z", "author": {"login": "frankyn"}, "path": "storage/storage-transfer/src/test/java/com/google/cloud/storage/storagetransfer/samples/test/TransferJobUtilsTest.java", "diffHunk": "@@ -21,11 +21,9 @@\n import com.google.api.services.storagetransfer.v1.model.Date;\n import com.google.api.services.storagetransfer.v1.model.TimeOfDay;\n import com.google.cloud.storage.storagetransfer.samples.TransferJobUtils;\n-import java.util.Random;\n import org.junit.Test;\n \n public class TransferJobUtilsTest {\n-  private Random rand = new Random();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk5Nzg1OQ=="}, "originalCommit": {"oid": "67a7fcd179f0cab841dd98930779eb263076b788"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzkzMjIxOnYy", "diffSide": "RIGHT", "path": "storage/storage-transfer/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMzoyNzoxN1rOH5cvCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMzoyNzoxN1rOH5cvCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAwMTY3Mw==", "bodyText": "This PR will fix: #4018", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4304#discussion_r530001673", "createdAt": "2020-11-24T23:27:17Z", "author": {"login": "frankyn"}, "path": "storage/storage-transfer/pom.xml", "diffHunk": "@@ -43,7 +43,7 @@\n     <dependency>\n       <groupId>com.google.apis</groupId>\n       <artifactId>google-api-services-storagetransfer</artifactId>\n-      <version>v1-rev20200924-1.30.10</version>\n+      <version>v1-rev20201027-1.30.10</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67a7fcd179f0cab841dd98930779eb263076b788"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MzM3MjIzOnYy", "diffSide": "RIGHT", "path": "storage/storage-transfer/src/main/java/com/google/cloud/storage/storagetransfer/samples/TransferToNearline.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMDoyNDowNVrOIB8dQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMDoyNDowNVrOIB8dQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODkxMDAxOQ==", "bodyText": "Newline", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4304#discussion_r538910019", "createdAt": "2020-12-09T00:24:05Z", "author": {"login": "frankyn"}, "path": "storage/storage-transfer/src/main/java/com/google/cloud/storage/storagetransfer/samples/TransferToNearline.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.cloud.storage.storagetransfer.samples;\n+\n+// [START storagetransfer_transfer_to_nearline]\n+import com.google.api.client.googleapis.util.Utils;\n+import com.google.api.services.storagetransfer.v1.Storagetransfer;\n+import com.google.api.services.storagetransfer.v1.StoragetransferScopes;\n+import com.google.api.services.storagetransfer.v1.model.Date;\n+import com.google.api.services.storagetransfer.v1.model.GcsData;\n+import com.google.api.services.storagetransfer.v1.model.ObjectConditions;\n+import com.google.api.services.storagetransfer.v1.model.Schedule;\n+import com.google.api.services.storagetransfer.v1.model.TimeOfDay;\n+import com.google.api.services.storagetransfer.v1.model.TransferJob;\n+import com.google.api.services.storagetransfer.v1.model.TransferOptions;\n+import com.google.api.services.storagetransfer.v1.model.TransferSpec;\n+import com.google.auth.http.HttpCredentialsAdapter;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import java.io.IOException;\n+import java.util.Calendar;\n+\n+public class TransferToNearline {\n+  /** Creates a one-off transfer job that transfers objects in a standard GCS bucket that are more\n+   *  than 30 days old to a Nearline GCS bucket.\n+   */\n+  public static void transferToNearline(String projectId,\n+      String jobDescription,\n+      String gcsSourceBucket,\n+      String gcsNearlineSinkBucket,\n+      long startDateTime) throws IOException {\n+\n+    // Your Google Cloud Project ID\n+    // String projectId = \"your-project-id\";\n+\n+    // A short description of this job\n+    // String jobDescription = \"Sample transfer job of old objects to a Nearline GCS bucket.\";\n+\n+    // The name of the source GCS bucket to transfer data from\n+    // String gcsSourceBucket = \"your-gcs-source-bucket\";\n+\n+    // The name of the Nearline GCS bucket to transfer old objects to\n+    // String gcsSinkBucket = \"your-nearline-gcs-bucket\";\n+\n+    // What day and time in UTC to start the transfer, expressed as an epoch date timestamp.\n+    // If this is in the past relative to when the job is created, it will run the next day.\n+    // long startDateTime =\n+    //     new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(\"2000-01-01 00:00:00\").getTime();\n+\n+    // Parse epoch timestamp into the model classes\n+    Calendar startCalendar = Calendar.getInstance();\n+    startCalendar.setTimeInMillis(startDateTime);\n+    // Note that this is a Date from the model class package, not a java.util.Date\n+    Date date = new Date()\n+        .setYear(startCalendar.get(Calendar.YEAR))\n+        .setMonth(startCalendar.get(Calendar.MONTH) + 1)\n+        .setDay(startCalendar.get(Calendar.DAY_OF_MONTH));\n+    TimeOfDay time = new TimeOfDay()\n+        .setHours(startCalendar.get(Calendar.HOUR_OF_DAY))\n+        .setMinutes(startCalendar.get(Calendar.MINUTE))\n+        .setSeconds(startCalendar.get(Calendar.SECOND));\n+\n+    TransferJob transferJob =\n+        new TransferJob()\n+            .setDescription(jobDescription)\n+            .setProjectId(projectId)\n+            .setTransferSpec(\n+                new TransferSpec()\n+                    .setGcsDataSource(new GcsData().setBucketName(gcsSourceBucket))\n+                    .setGcsDataSink(new GcsData().setBucketName(gcsNearlineSinkBucket))\n+                    .setObjectConditions(\n+                        new ObjectConditions()\n+                            .setMinTimeElapsedSinceLastModification(\"2592000s\" /* 30 days */))\n+                    .setTransferOptions(\n+                        new TransferOptions().setDeleteObjectsFromSourceAfterTransfer(true)))\n+            .setSchedule(new Schedule().setScheduleStartDate(date).setStartTimeOfDay(time))\n+            .setStatus(\"ENABLED\");\n+\n+    // Create a Transfer Service client\n+    GoogleCredentials credential = GoogleCredentials.getApplicationDefault();\n+    if (credential.createScopedRequired()) {\n+      credential = credential.createScoped(StoragetransferScopes.all());\n+    }\n+    Storagetransfer storageTransfer = new Storagetransfer.Builder(Utils.getDefaultTransport(),\n+        Utils.getDefaultJsonFactory(), new HttpCredentialsAdapter(credential))\n+        .build();\n+\n+    // Create the transfer job\n+    TransferJob response = storageTransfer.transferJobs().create(transferJob).execute();\n+\n+    System.out.println(\"Created transfer job from standard bucket to Nearline bucket:\");\n+    System.out.println(response.toPrettyString());\n+  }\n+}\n+// [END storagetransfer_transfer_to_nearline]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc54f459a56e7d9bbfcca98a22ec50e4bca90b70"}, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 715, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}