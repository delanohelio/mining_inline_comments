{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2OTc2NDkw", "number": 2027, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzoxNDozNVrODa9OIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzoxNTowMFrODa9Omg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTkyNjA5OnYy", "diffSide": "RIGHT", "path": "run/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzoxNDozNlrOFiKrVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzozMTowOVrOFiLNHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM3MDgzOQ==", "bodyText": "nit: Is this supposed to be 9090?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2027#discussion_r371370839", "createdAt": "2020-01-27T17:14:36Z", "author": {"login": "kurtisvg"}, "path": "run/README.md", "diffHunk": "@@ -9,71 +9,73 @@ This directory contains samples for [Google Cloud Run](https://cloud.run). [Clou\n \n ## Samples\n \n-|           Sample                |        Description       |     Deploy    |\n-| ------------------------------- | ------------------------ | ------------- |\n-|[Hello World][helloworld] | Quickstart | [<img src=\"https://storage.googleapis.com/cloudrun/button.svg\" alt=\"Run on Google Cloud\" height=\"30\">][run_button_helloworld] |\n-|[Cloud Pub/Sub](pubsub/) | Handling Pub/Sub push messages | [<img src=\"https://storage.googleapis.com/cloudrun/button.svg\" alt=\"Run on Google Cloud\" height=\"30\">][run_button_pubsub] |\n-|[System Packages](system-package/) | Using system packages with containers | [<img src=\"https://storage.googleapis.com/cloudrun/button.svg\" alt=\"Run on Google Cloud\" height=\"30\">][run_button_sys_package] |\n-|[Image Magick](image-processing/) | Event-driven image analysis & transformation | [<img src=\"https://storage.googleapis.com/cloudrun/button.svg\" alt=\"Run on Google Cloud\" height=\"30\">][run_button_image] |\n-|[Manual Logging](logging-manual/) | Structured logging for Stackdriver | [<img src=\"https://storage.googleapis.com/cloudrun/button.svg\" alt=\"Run on Google Cloud\" height=\"30\">][run_button_log] |\n-|[Local Troubleshooting](hello-broken/) | Broken services for local troubleshooting tutorial | [<img src=\"https://storage.googleapis.com/cloudrun/button.svg\" alt=\"Run on Google Cloud\" height=\"30\">][run_button_broken] |\n-|[Cloud SQL (MySQL)][mysql]        | Use MySQL with Cloud Run | [<img src=\"https://storage.googleapis.com/cloudrun/button.svg\" alt=\"Run on Google Cloud\" height=\"30\">][run_button_sql] |\n+|           Sample                |        Description       |\n+| ------------------------------- | ------------------------ |\n+|[Hello World][helloworld]        | Quickstart |\n+|[Cloud Pub/Sub](pubsub/)         | Handling Pub/Sub push messages |\n+|[System Packages](system-package/)| Using system packages with containers |\n+|[Image Magick](image-processing/) | Event-driven image analysis & transformation |\n+|[Manual Logging](logging-manual/) | Structured logging for Stackdriver |\n+|[Local Troubleshooting](hello-broken/) | Broken services for local troubleshooting tutorial |\n+|[Cloud SQL (MySQL)][mysql]        | Use MySQL with Cloud Run |\n \n For more Cloud Run samples beyond Java, see the main list in the [Cloud Run Samples repository](https://github.com/GoogleCloudPlatform/cloud-run-samples).\n \n ## Setup\n \n 1. [Set up for Cloud Run development](https://cloud.google.com/run/docs/setup)\n \n-2. Clone this repository:\n+1. Clone this repository:\n \n     ```\n     git clone https://github.com/GoogleCloudPlatform/java-docs-samples.git\n     ```\n \n-    Note: Some samples in the list above are hosted in other repositories. They are noted with the symbol \"&#10149;\".\n-\n+1. In the samples's `pom.xml`, update the image field for the `jib-maven-plugin`\n+with your Google Cloud Project Id:\n+\n+    ```XML\n+    <plugin>\n+      <groupId>com.google.cloud.tools</groupId>\n+      <artifactId>jib-maven-plugin</artifactId>\n+      <version>1.8.0</version>\n+      <configuration>\n+        <to>\n+          <image>gcr.io/PROJECT_ID/SAMPLE_NAME</image>\n+        </to>\n+      </configuration>\n+    </plugin>\n+    ```\n \n ## How to run a sample locally\n \n-1. [Install docker locally](https://docs.docker.com/install/)\n-\n-2. [Build the sample container](https://cloud.google.com/run/docs/building/containers#building_locally_and_pushing_using_docker):\n+1. [Build the sample container using Jib](https://github.com/GoogleContainerTools/jib):\n \n-    ```\n-    export SAMPLE=<SAMPLE_NAME>\n-    cd $SAMPLE\n-    docker build --tag $SAMPLE .\n+    ```Bash\n+    mvn jib:build\n     ```\n \n-3. [Run containers locally](https://cloud.google.com/run/docs/testing/local)\n+1. [Run containers locally](https://cloud.google.com/run/docs/testing/local) by\n+replacing `PROJECT_ID` and `SAMPLE_NAME` with your values.\n \n     With the built container:\n \n-    ```\n-    PORT=8080 && docker run --rm -p 8080:${PORT} -e PORT=${PORT} $SAMPLE\n-    ```\n-\n-    Overriding the built container with local code:\n-\n-    ```\n-    PORT=8080 && docker run --rm \\\n-        -p 8080:${PORT} -e PORT=${PORT} \\\n-        -v $PWD:/app $SAMPLE\n+    ```Bash\n+    PORT=8080 && docker run --rm -p 8080:${PORT} -e PORT=${PORT} gcr.io/PROJECT_ID/SAMPLE_NAME\n     ```\n \n     Injecting your service account key for access to GCP services:\n \n-    ```\n-    # Set the name of the service account key within the container\n-    export SA_KEY_NAME=my-key-name-123\n-\n-    PORT=8080 && docker run --rm \\\n-        -p 8080:${PORT} \\\n-        -e PORT=${PORT} \\\n-        -e GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/${SA_KEY_NAME}.json \\\n-        -v $GOOGLE_APPLICATION_CREDENTIALS:/tmp/keys/${SA_KEY_NAME}.json:ro \\\n-        -v $PWD:/app $SAMPLE\n+    ```Bash\n+    PORT=8080 && docker run \\\n+       -p 9090:${PORT} \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a29ff39d4e9e21cb402b13ade91da24531b19483"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM3OTQ4NA==", "bodyText": "Yes, based on https://cloud.google.com/run/docs/testing/local. I've added a note to clarify", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2027#discussion_r371379484", "createdAt": "2020-01-27T17:31:09Z", "author": {"login": "averikitsch"}, "path": "run/README.md", "diffHunk": "@@ -9,71 +9,73 @@ This directory contains samples for [Google Cloud Run](https://cloud.run). [Clou\n \n ## Samples\n \n-|           Sample                |        Description       |     Deploy    |\n-| ------------------------------- | ------------------------ | ------------- |\n-|[Hello World][helloworld] | Quickstart | [<img src=\"https://storage.googleapis.com/cloudrun/button.svg\" alt=\"Run on Google Cloud\" height=\"30\">][run_button_helloworld] |\n-|[Cloud Pub/Sub](pubsub/) | Handling Pub/Sub push messages | [<img src=\"https://storage.googleapis.com/cloudrun/button.svg\" alt=\"Run on Google Cloud\" height=\"30\">][run_button_pubsub] |\n-|[System Packages](system-package/) | Using system packages with containers | [<img src=\"https://storage.googleapis.com/cloudrun/button.svg\" alt=\"Run on Google Cloud\" height=\"30\">][run_button_sys_package] |\n-|[Image Magick](image-processing/) | Event-driven image analysis & transformation | [<img src=\"https://storage.googleapis.com/cloudrun/button.svg\" alt=\"Run on Google Cloud\" height=\"30\">][run_button_image] |\n-|[Manual Logging](logging-manual/) | Structured logging for Stackdriver | [<img src=\"https://storage.googleapis.com/cloudrun/button.svg\" alt=\"Run on Google Cloud\" height=\"30\">][run_button_log] |\n-|[Local Troubleshooting](hello-broken/) | Broken services for local troubleshooting tutorial | [<img src=\"https://storage.googleapis.com/cloudrun/button.svg\" alt=\"Run on Google Cloud\" height=\"30\">][run_button_broken] |\n-|[Cloud SQL (MySQL)][mysql]        | Use MySQL with Cloud Run | [<img src=\"https://storage.googleapis.com/cloudrun/button.svg\" alt=\"Run on Google Cloud\" height=\"30\">][run_button_sql] |\n+|           Sample                |        Description       |\n+| ------------------------------- | ------------------------ |\n+|[Hello World][helloworld]        | Quickstart |\n+|[Cloud Pub/Sub](pubsub/)         | Handling Pub/Sub push messages |\n+|[System Packages](system-package/)| Using system packages with containers |\n+|[Image Magick](image-processing/) | Event-driven image analysis & transformation |\n+|[Manual Logging](logging-manual/) | Structured logging for Stackdriver |\n+|[Local Troubleshooting](hello-broken/) | Broken services for local troubleshooting tutorial |\n+|[Cloud SQL (MySQL)][mysql]        | Use MySQL with Cloud Run |\n \n For more Cloud Run samples beyond Java, see the main list in the [Cloud Run Samples repository](https://github.com/GoogleCloudPlatform/cloud-run-samples).\n \n ## Setup\n \n 1. [Set up for Cloud Run development](https://cloud.google.com/run/docs/setup)\n \n-2. Clone this repository:\n+1. Clone this repository:\n \n     ```\n     git clone https://github.com/GoogleCloudPlatform/java-docs-samples.git\n     ```\n \n-    Note: Some samples in the list above are hosted in other repositories. They are noted with the symbol \"&#10149;\".\n-\n+1. In the samples's `pom.xml`, update the image field for the `jib-maven-plugin`\n+with your Google Cloud Project Id:\n+\n+    ```XML\n+    <plugin>\n+      <groupId>com.google.cloud.tools</groupId>\n+      <artifactId>jib-maven-plugin</artifactId>\n+      <version>1.8.0</version>\n+      <configuration>\n+        <to>\n+          <image>gcr.io/PROJECT_ID/SAMPLE_NAME</image>\n+        </to>\n+      </configuration>\n+    </plugin>\n+    ```\n \n ## How to run a sample locally\n \n-1. [Install docker locally](https://docs.docker.com/install/)\n-\n-2. [Build the sample container](https://cloud.google.com/run/docs/building/containers#building_locally_and_pushing_using_docker):\n+1. [Build the sample container using Jib](https://github.com/GoogleContainerTools/jib):\n \n-    ```\n-    export SAMPLE=<SAMPLE_NAME>\n-    cd $SAMPLE\n-    docker build --tag $SAMPLE .\n+    ```Bash\n+    mvn jib:build\n     ```\n \n-3. [Run containers locally](https://cloud.google.com/run/docs/testing/local)\n+1. [Run containers locally](https://cloud.google.com/run/docs/testing/local) by\n+replacing `PROJECT_ID` and `SAMPLE_NAME` with your values.\n \n     With the built container:\n \n-    ```\n-    PORT=8080 && docker run --rm -p 8080:${PORT} -e PORT=${PORT} $SAMPLE\n-    ```\n-\n-    Overriding the built container with local code:\n-\n-    ```\n-    PORT=8080 && docker run --rm \\\n-        -p 8080:${PORT} -e PORT=${PORT} \\\n-        -v $PWD:/app $SAMPLE\n+    ```Bash\n+    PORT=8080 && docker run --rm -p 8080:${PORT} -e PORT=${PORT} gcr.io/PROJECT_ID/SAMPLE_NAME\n     ```\n \n     Injecting your service account key for access to GCP services:\n \n-    ```\n-    # Set the name of the service account key within the container\n-    export SA_KEY_NAME=my-key-name-123\n-\n-    PORT=8080 && docker run --rm \\\n-        -p 8080:${PORT} \\\n-        -e PORT=${PORT} \\\n-        -e GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/${SA_KEY_NAME}.json \\\n-        -v $GOOGLE_APPLICATION_CREDENTIALS:/tmp/keys/${SA_KEY_NAME}.json:ro \\\n-        -v $PWD:/app $SAMPLE\n+    ```Bash\n+    PORT=8080 && docker run \\\n+       -p 9090:${PORT} \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM3MDgzOQ=="}, "originalCommit": {"oid": "a29ff39d4e9e21cb402b13ade91da24531b19483"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTkyNzMwOnYy", "diffSide": "RIGHT", "path": "run/hello-broken/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzoxNTowMFrOFiKsGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzozMjoxNFrOFiLPbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM3MTAzNQ==", "bodyText": "What is this comment for? Can we either add more context, or remove it?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2027#discussion_r371371035", "createdAt": "2020-01-27T17:15:00Z", "author": {"login": "kurtisvg"}, "path": "run/hello-broken/pom.xml", "diffHunk": "@@ -70,24 +70,18 @@ limitations under the License.\n   <build>\r\n     <plugins>\r\n       <plugin>\r\n-        <artifactId>maven-compiler-plugin</artifactId>\r\n-        <version>3.8.0</version>\r\n+        <groupId>com.google.cloud.tools</groupId>\r\n+        <artifactId>jib-maven-plugin</artifactId>\r\n+        <version>1.8.0</version>\r\n         <configuration>\r\n-          <source>11</source>\r\n-          <target>11</target>\r\n-        </configuration>\r\n-      </plugin>\r\n-      <plugin>\r\n-        <artifactId>maven-assembly-plugin</artifactId>\r\n-        <configuration>\r\n-          <archive>\r\n-            <manifest>\r\n-              <mainClass>com.example.cloudrun.App</mainClass>\r\n-            </manifest>\r\n-          </archive>\r\n-          <descriptorRefs>\r\n-            <descriptorRef>jar-with-dependencies</descriptorRef>\r\n-          </descriptorRefs>\r\n+          <to>\r\n+            <image>gcr.io/PROJECT_ID/hello-broken</image>\r\n+          </to>\r\n+    <!-- <container>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a29ff39d4e9e21cb402b13ade91da24531b19483"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM4MDA3Nw==", "bodyText": "comment added.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2027#discussion_r371380077", "createdAt": "2020-01-27T17:32:14Z", "author": {"login": "averikitsch"}, "path": "run/hello-broken/pom.xml", "diffHunk": "@@ -70,24 +70,18 @@ limitations under the License.\n   <build>\r\n     <plugins>\r\n       <plugin>\r\n-        <artifactId>maven-compiler-plugin</artifactId>\r\n-        <version>3.8.0</version>\r\n+        <groupId>com.google.cloud.tools</groupId>\r\n+        <artifactId>jib-maven-plugin</artifactId>\r\n+        <version>1.8.0</version>\r\n         <configuration>\r\n-          <source>11</source>\r\n-          <target>11</target>\r\n-        </configuration>\r\n-      </plugin>\r\n-      <plugin>\r\n-        <artifactId>maven-assembly-plugin</artifactId>\r\n-        <configuration>\r\n-          <archive>\r\n-            <manifest>\r\n-              <mainClass>com.example.cloudrun.App</mainClass>\r\n-            </manifest>\r\n-          </archive>\r\n-          <descriptorRefs>\r\n-            <descriptorRef>jar-with-dependencies</descriptorRef>\r\n-          </descriptorRefs>\r\n+          <to>\r\n+            <image>gcr.io/PROJECT_ID/hello-broken</image>\r\n+          </to>\r\n+    <!-- <container>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM3MTAzNQ=="}, "originalCommit": {"oid": "a29ff39d4e9e21cb402b13ade91da24531b19483"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 560, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}