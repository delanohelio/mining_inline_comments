{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNzkyMDY3", "number": 3588, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxOTozOTo0N1rOEbFzCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxOTozOTo0N1rOEbFzCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2ODQxOTkyOnYy", "diffSide": "RIGHT", "path": "automl/cloud-client/src/test/java/com/example/automl/GetOperationStatusTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxOTozOTo0N1rOHE5r9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxOTo1ODo1MVrOHE6oqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkwMTQ5Mg==", "bodyText": "Should this have a counter of some kind to limit to 3-5m?  It should finish, but just in case?", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3588#discussion_r474901492", "createdAt": "2020-08-21T19:39:47Z", "author": {"login": "lesv"}, "path": "automl/cloud-client/src/test/java/com/example/automl/GetOperationStatusTest.java", "diffHunk": "@@ -49,29 +64,50 @@ public static void checkRequirements() {\n   }\n \n   @Before\n-  public void setUp() throws IOException {\n+  public void setUp() throws IOException, ExecutionException, InterruptedException {\n     bout = new ByteArrayOutputStream();\n     out = new PrintStream(bout);\n     System.setOut(out);\n \n-    ListOperationStatus.listOperationStatus(PROJECT_ID);\n-    String got = bout.toString();\n-    operationId = got.split(\"\\n\")[1].split(\":\")[1].trim();\n-    assertThat(got).contains(\"Operation details:\");\n+    // start a export data into dataset and cancel it before it finishes.\n+    try (AutoMlClient client = AutoMlClient.create()) {\n+      // Get the complete path of the dataset.\n+      DatasetName datasetFullId = DatasetName.of(PROJECT_ID, \"us-central1\", DATASET_ID);\n+\n+      GcsDestination gcsSource =\n+          GcsDestination.newBuilder().setOutputUriPrefix(GCS_OUTPUT_PREFIX).build();\n+\n+      OutputConfig outputConfig = OutputConfig.newBuilder().setGcsDestination(gcsSource).build();\n+\n+      // Start the export job\n+      OperationFuture<Empty, OperationMetadata> operation =\n+          client.exportDataAsync(datasetFullId, outputConfig);\n+\n+      operationFullName = operation.getName();\n+    }\n \n     bout = new ByteArrayOutputStream();\n     out = new PrintStream(bout);\n     System.setOut(out);\n   }\n \n   @After\n-  public void tearDown() {\n+  public void tearDown() throws IOException, InterruptedException {\n+    // delete the cancelled operation\n+    try (AutoMlClient client = AutoMlClient.create()) {\n+      // wait for the operation to be cancelled\n+      while (!client.getOperationsClient().getOperation(operationFullName).getDone()) {\n+        Thread.sleep(1000);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f465c6e4c98f9aeafd9b59889728932c03d608e"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkxNzAzMw==", "bodyText": "I see, that is a good idea, i will add that.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/3588#discussion_r474917033", "createdAt": "2020-08-21T19:58:51Z", "author": {"login": "munkhuushmgl"}, "path": "automl/cloud-client/src/test/java/com/example/automl/GetOperationStatusTest.java", "diffHunk": "@@ -49,29 +64,50 @@ public static void checkRequirements() {\n   }\n \n   @Before\n-  public void setUp() throws IOException {\n+  public void setUp() throws IOException, ExecutionException, InterruptedException {\n     bout = new ByteArrayOutputStream();\n     out = new PrintStream(bout);\n     System.setOut(out);\n \n-    ListOperationStatus.listOperationStatus(PROJECT_ID);\n-    String got = bout.toString();\n-    operationId = got.split(\"\\n\")[1].split(\":\")[1].trim();\n-    assertThat(got).contains(\"Operation details:\");\n+    // start a export data into dataset and cancel it before it finishes.\n+    try (AutoMlClient client = AutoMlClient.create()) {\n+      // Get the complete path of the dataset.\n+      DatasetName datasetFullId = DatasetName.of(PROJECT_ID, \"us-central1\", DATASET_ID);\n+\n+      GcsDestination gcsSource =\n+          GcsDestination.newBuilder().setOutputUriPrefix(GCS_OUTPUT_PREFIX).build();\n+\n+      OutputConfig outputConfig = OutputConfig.newBuilder().setGcsDestination(gcsSource).build();\n+\n+      // Start the export job\n+      OperationFuture<Empty, OperationMetadata> operation =\n+          client.exportDataAsync(datasetFullId, outputConfig);\n+\n+      operationFullName = operation.getName();\n+    }\n \n     bout = new ByteArrayOutputStream();\n     out = new PrintStream(bout);\n     System.setOut(out);\n   }\n \n   @After\n-  public void tearDown() {\n+  public void tearDown() throws IOException, InterruptedException {\n+    // delete the cancelled operation\n+    try (AutoMlClient client = AutoMlClient.create()) {\n+      // wait for the operation to be cancelled\n+      while (!client.getOperationsClient().getOperation(operationFullName).getDone()) {\n+        Thread.sleep(1000);\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkwMTQ5Mg=="}, "originalCommit": {"oid": "8f465c6e4c98f9aeafd9b59889728932c03d608e"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 784, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}