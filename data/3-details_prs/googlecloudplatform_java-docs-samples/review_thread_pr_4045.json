{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MjQ5MTE3", "number": 4045, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNTozOTozMVrOEwUOyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNjo1MDozNFrOExSMMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MDk4NTcwOnYy", "diffSide": "RIGHT", "path": "eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNTozOTozMVrOHly-mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTowNzoyNVrOHl_Suw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NDU4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String msg = String.format(\"Detected change in GCS bucket: %s.\", ceSubject);\n          \n          \n            \n                String msg = \"Detected change in GCS bucket: \" + ceSubject;\n          \n      \n    \n    \n  \n\nString.format has poor performance", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509394585", "createdAt": "2020-10-21T15:39:31Z", "author": {"login": "averikitsch"}, "path": "eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java", "diffHunk": "@@ -53,7 +52,7 @@\n     }\n \n     String ceSubject = headers.get(\"ce-subject\");\n-    String msg = String.format(\"GCS CloudEvent type: %s.\", ceSubject);\n+    String msg = String.format(\"Detected change in GCS bucket: %s.\", ceSubject);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU5NjM0Nw==", "bodyText": "Fixed, thanks.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509596347", "createdAt": "2020-10-21T19:07:25Z", "author": {"login": "grant"}, "path": "eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java", "diffHunk": "@@ -53,7 +52,7 @@\n     }\n \n     String ceSubject = headers.get(\"ce-subject\");\n-    String msg = String.format(\"GCS CloudEvent type: %s.\", ceSubject);\n+    String msg = String.format(\"Detected change in GCS bucket: %s.\", ceSubject);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NDU4NQ=="}, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MDk5MDI4OnYy", "diffSide": "RIGHT", "path": "eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNTo0MDoyNlrOHlzBYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNjoxMzo0MlrOHm_4FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NTI5Nw==", "bodyText": "Even though this isn't the point of the sample, removing PubSubBody feels like it makes this sample not useful for continued learning and building.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509395297", "createdAt": "2020-10-21T15:40:26Z", "author": {"login": "averikitsch"}, "path": "eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java", "diffHunk": "@@ -37,7 +36,7 @@\n \n   @RequestMapping(value = \"/\", method = RequestMethod.POST)\n   public ResponseEntity<String> receiveMessage(\n-      @RequestBody PubSubBody body, @RequestHeader Map<String, String> headers) {\n+      @RequestBody Object body, @RequestHeader Map<String, String> headers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU5NjExMw==", "bodyText": "This sample literally does not receive Pub/Sub requests. It receives Cloud Audit Log requests. In this case, the audit log is for a Cloud Storage event.\nThus, it's incorrect to have Pub/Sub in this sample. The sample does not use this body, so the tests have always passed. If we wanted a different POJO, we cannot include a LogEntryData POJO until that library is finished and published.\nWe have a Pub/Sub sample for Pub/Sub events.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509596113", "createdAt": "2020-10-21T19:07:07Z", "author": {"login": "grant"}, "path": "eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java", "diffHunk": "@@ -37,7 +36,7 @@\n \n   @RequestMapping(value = \"/\", method = RequestMethod.POST)\n   public ResponseEntity<String> receiveMessage(\n-      @RequestBody PubSubBody body, @RequestHeader Map<String, String> headers) {\n+      @RequestBody Object body, @RequestHeader Map<String, String> headers) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NTI5Nw=="}, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwMDAzNA==", "bodyText": "You could build your own POJO for the time being like Pub/Sub.  From this code, I have no idea what it accepts so if possible at least add a content type. We shouldn't use \"Object\", Map<String, String> would at least be useable.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r510400034", "createdAt": "2020-10-22T19:19:21Z", "author": {"login": "averikitsch"}, "path": "eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java", "diffHunk": "@@ -37,7 +36,7 @@\n \n   @RequestMapping(value = \"/\", method = RequestMethod.POST)\n   public ResponseEntity<String> receiveMessage(\n-      @RequestBody PubSubBody body, @RequestHeader Map<String, String> headers) {\n+      @RequestBody Object body, @RequestHeader Map<String, String> headers) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NTI5Nw=="}, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY1NDQ4NA==", "bodyText": "I've changed the type to a Map per suggestion.\n\nThe JSON payload is large for an Audit Log. The POJO would have 14 classes (see link above), unless we construct a custom POJO for this type.\nThe actual contents of an Audit Log is very strange, hard to use, and is not useful for this sample of an audit log for a Cloud Storage event.\nI don't think there's value in adding/maintaining a POJO in Java for this specific event type during public preview and would rather have a generic type until we publish https://github.com/googleapis/google-cloudevents-java/tree/master/google-cloudevent-types/src/main/java/com/google/events/cloud/audit/v1", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r510654484", "createdAt": "2020-10-23T06:13:42Z", "author": {"login": "grant"}, "path": "eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java", "diffHunk": "@@ -37,7 +36,7 @@\n \n   @RequestMapping(value = \"/\", method = RequestMethod.POST)\n   public ResponseEntity<String> receiveMessage(\n-      @RequestBody PubSubBody body, @RequestHeader Map<String, String> headers) {\n+      @RequestBody Object body, @RequestHeader Map<String, String> headers) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NTI5Nw=="}, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MDk5MzQyOnYy", "diffSide": "RIGHT", "path": "eventarc/generic/Dockerfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNTo0MTowOFrOHlzDcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOToxMDozM1rOHl_cQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NTgyNw==", "bodyText": "Is this for a quickstart? I don't want us to keep using Dockerfiles for these samples", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509395827", "createdAt": "2020-10-21T15:41:08Z", "author": {"login": "averikitsch"}, "path": "eventarc/generic/Dockerfile", "diffHunk": "@@ -0,0 +1,41 @@\n+# Copyright 2020 Google LLC\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     https://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+# [START eventarc_generic_dockerfile]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU5ODc4NQ==", "bodyText": "Removed as we're using Jib.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509598785", "createdAt": "2020-10-21T19:10:33Z", "author": {"login": "grant"}, "path": "eventarc/generic/Dockerfile", "diffHunk": "@@ -0,0 +1,41 @@\n+# Copyright 2020 Google LLC\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     https://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+# [START eventarc_generic_dockerfile]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NTgyNw=="}, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MTAwMzczOnYy", "diffSide": "RIGHT", "path": "eventarc/generic/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNTo0MzowM1rOHlzJvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOToxODowOFrOHl_tLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NzQzOQ==", "bodyText": "Doesn't look like this is used.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509397439", "createdAt": "2020-10-21T15:43:03Z", "author": {"login": "averikitsch"}, "path": "eventarc/generic/pom.xml", "diffHunk": "@@ -0,0 +1,107 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<!--\r\n+Copyright 2020 Google LLC\r\n+Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+you may not use this file except in compliance with the License.\r\n+You may obtain a copy of the License at\r\n+http://www.apache.org/licenses/LICENSE-2.0\r\n+Unless required by applicable law or agreed to in writing, software\r\n+distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+See the License for the specific language governing permissions and\r\n+limitations under the License.\r\n+-->\r\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n+  <modelVersion>4.0.0</modelVersion>\r\n+  <groupId>com.example.cloudrun</groupId>\r\n+  <artifactId>eventarc-generic</artifactId>\r\n+  <version>0.0.1-SNAPSHOT</version>\r\n+  <!--  The parent pom defines common style checks and testing strategies for our samples.\r\n+\tRemoving or replacing it should not affect the execution of the samples in anyway.  -->\r\n+  <parent>\r\n+    <groupId>com.google.cloud.samples</groupId>\r\n+    <artifactId>shared-configuration</artifactId>\r\n+    <version>1.0.21</version>\r\n+  </parent>\r\n+\r\n+  <properties>\r\n+    <maven.compiler.target>11</maven.compiler.target>\r\n+    <maven.compiler.source>11</maven.compiler.source>\r\n+  </properties>\r\n+\r\n+  <dependencyManagement>\r\n+    <dependencies>\r\n+      <dependency>\r\n+        <!-- Import dependency management from Spring Boot -->\r\n+        <groupId>org.springframework.boot</groupId>\r\n+        <artifactId>spring-boot-dependencies</artifactId>\r\n+        <version>2.3.4.RELEASE</version>\r\n+        <type>pom</type>\r\n+        <scope>import</scope>\r\n+      </dependency>\r\n+      <dependency>\r\n+        <groupId>org.springframework.cloud</groupId>\r\n+        <artifactId>spring-cloud-dependencies</artifactId>\r\n+        <version>Hoxton.SR8</version>\r\n+        <type>pom</type>\r\n+        <scope>import</scope>\r\n+      </dependency>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYwMzExOA==", "bodyText": "Removed.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509603118", "createdAt": "2020-10-21T19:18:08Z", "author": {"login": "grant"}, "path": "eventarc/generic/pom.xml", "diffHunk": "@@ -0,0 +1,107 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<!--\r\n+Copyright 2020 Google LLC\r\n+Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+you may not use this file except in compliance with the License.\r\n+You may obtain a copy of the License at\r\n+http://www.apache.org/licenses/LICENSE-2.0\r\n+Unless required by applicable law or agreed to in writing, software\r\n+distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+See the License for the specific language governing permissions and\r\n+limitations under the License.\r\n+-->\r\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n+  <modelVersion>4.0.0</modelVersion>\r\n+  <groupId>com.example.cloudrun</groupId>\r\n+  <artifactId>eventarc-generic</artifactId>\r\n+  <version>0.0.1-SNAPSHOT</version>\r\n+  <!--  The parent pom defines common style checks and testing strategies for our samples.\r\n+\tRemoving or replacing it should not affect the execution of the samples in anyway.  -->\r\n+  <parent>\r\n+    <groupId>com.google.cloud.samples</groupId>\r\n+    <artifactId>shared-configuration</artifactId>\r\n+    <version>1.0.21</version>\r\n+  </parent>\r\n+\r\n+  <properties>\r\n+    <maven.compiler.target>11</maven.compiler.target>\r\n+    <maven.compiler.source>11</maven.compiler.source>\r\n+  </properties>\r\n+\r\n+  <dependencyManagement>\r\n+    <dependencies>\r\n+      <dependency>\r\n+        <!-- Import dependency management from Spring Boot -->\r\n+        <groupId>org.springframework.boot</groupId>\r\n+        <artifactId>spring-boot-dependencies</artifactId>\r\n+        <version>2.3.4.RELEASE</version>\r\n+        <type>pom</type>\r\n+        <scope>import</scope>\r\n+      </dependency>\r\n+      <dependency>\r\n+        <groupId>org.springframework.cloud</groupId>\r\n+        <artifactId>spring-cloud-dependencies</artifactId>\r\n+        <version>Hoxton.SR8</version>\r\n+        <type>pom</type>\r\n+        <scope>import</scope>\r\n+      </dependency>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM5NzQzOQ=="}, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MTAyNzg4OnYy", "diffSide": "RIGHT", "path": "eventarc/generic/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNTo0ODoxOVrOHlzZFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOToxMjo0MVrOHl_gyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQwMTM2Ng==", "bodyText": "Users may confused what a CloudEvent is here. Maybe add a link or more explanation.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509401366", "createdAt": "2020-10-21T15:48:19Z", "author": {"login": "averikitsch"}, "path": "eventarc/generic/README.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Cloud Eventarc - Generic tutorial\n+\n+This sample shows how to create a service that processes generic CloudEvents.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU5OTk0NA==", "bodyText": "Added a link.\nIn general, we're trying to reduce the amount of duplicate instructions between CloudSite and the docs, so we might remove this README in the future like we do with functions/.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509599944", "createdAt": "2020-10-21T19:12:41Z", "author": {"login": "grant"}, "path": "eventarc/generic/README.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Cloud Eventarc - Generic tutorial\n+\n+This sample shows how to create a service that processes generic CloudEvents.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQwMTM2Ng=="}, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MTAzMDg5OnYy", "diffSide": "RIGHT", "path": "eventarc/generic/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNTo0OTowMlrOHlzbKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOToxNjozOFrOHl_pxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQwMTg5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You may observe the Run service receiving an event in Cloud Logging.\n          \n          \n            \n            You may observe the Cloud Run service receiving an event in Cloud Logging.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509401896", "createdAt": "2020-10-21T15:49:02Z", "author": {"login": "averikitsch"}, "path": "eventarc/generic/README.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Cloud Eventarc - Generic tutorial\n+\n+This sample shows how to create a service that processes generic CloudEvents.\n+\n+For more details on how to work with this sample read the [Google Cloud Run Java Samples README](https://github.com/GoogleCloudPlatform/java-docs-samples/tree/master/run).\n+\n+[![Run in Google Cloud][run_img]][run_link]\n+\n+[run_img]: https://storage.googleapis.com/cloudrun/button.svg\n+[run_link]: https://deploy.cloud.run/?git_repo=https://github.com/GoogleCloudPlatform/java-docs-samples&dir=run/events-generic\n+\n+\n+## Dependencies\n+\n+* **Spring Boot**: Web server framework.\n+* **Jib**: Container build tool.\n+* **Junit + SpringBootTest**: [development] Test running framework.\n+* **MockMVC**: [development] Integration testing support framework.\n+\n+## Quickstart\n+\n+Use the [Jib Maven Plugin](https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin) to build and push your container image:\n+\n+```sh\n+mvn jib:build -Dimage gcr.io/$(gcloud config get-value project)/eventarc-generic\n+```\n+\n+Deploy your Cloud Run service:\n+\n+```sh\n+gcloud run deploy eventarc-generic \\\n+--image gcr.io/$(gcloud config get-value project)/eventarc-generic\n+```\n+\n+## Test\n+\n+Test your Cloud Run service by sending CloudEvents: \n+\n+```sh\n+curl -XPOST $CLOUD_RUN_URL \\\n+-H \"Content-Type: application/json\" \\\n+-H \"ce-id: 1413058901901494\" \\\n+-H \"ce-source: //books.googleapis.com/book/MY-BOOK\" \\\n+-H \"ce-specversion: 1.0\" \\\n+-H \"ce-type: my-type\" \\\n+-d '{\"key\": \"value\"}'\n+```\n+\n+You may observe the Run service receiving an event in Cloud Logging.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYwMjI0Nw==", "bodyText": "Fix applied.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509602247", "createdAt": "2020-10-21T19:16:38Z", "author": {"login": "grant"}, "path": "eventarc/generic/README.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Cloud Eventarc - Generic tutorial\n+\n+This sample shows how to create a service that processes generic CloudEvents.\n+\n+For more details on how to work with this sample read the [Google Cloud Run Java Samples README](https://github.com/GoogleCloudPlatform/java-docs-samples/tree/master/run).\n+\n+[![Run in Google Cloud][run_img]][run_link]\n+\n+[run_img]: https://storage.googleapis.com/cloudrun/button.svg\n+[run_link]: https://deploy.cloud.run/?git_repo=https://github.com/GoogleCloudPlatform/java-docs-samples&dir=run/events-generic\n+\n+\n+## Dependencies\n+\n+* **Spring Boot**: Web server framework.\n+* **Jib**: Container build tool.\n+* **Junit + SpringBootTest**: [development] Test running framework.\n+* **MockMVC**: [development] Integration testing support framework.\n+\n+## Quickstart\n+\n+Use the [Jib Maven Plugin](https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin) to build and push your container image:\n+\n+```sh\n+mvn jib:build -Dimage gcr.io/$(gcloud config get-value project)/eventarc-generic\n+```\n+\n+Deploy your Cloud Run service:\n+\n+```sh\n+gcloud run deploy eventarc-generic \\\n+--image gcr.io/$(gcloud config get-value project)/eventarc-generic\n+```\n+\n+## Test\n+\n+Test your Cloud Run service by sending CloudEvents: \n+\n+```sh\n+curl -XPOST $CLOUD_RUN_URL \\\n+-H \"Content-Type: application/json\" \\\n+-H \"ce-id: 1413058901901494\" \\\n+-H \"ce-source: //books.googleapis.com/book/MY-BOOK\" \\\n+-H \"ce-specversion: 1.0\" \\\n+-H \"ce-type: my-type\" \\\n+-d '{\"key\": \"value\"}'\n+```\n+\n+You may observe the Run service receiving an event in Cloud Logging.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQwMTg5Ng=="}, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MTAzMjkwOnYy", "diffSide": "RIGHT", "path": "eventarc/generic/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNTo0OToyMVrOHlzcUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOToxNTozOVrOHl_nig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQwMjE5NA==", "bodyText": "Need to note what $CLOUD_RUN_URL is.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509402194", "createdAt": "2020-10-21T15:49:21Z", "author": {"login": "averikitsch"}, "path": "eventarc/generic/README.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Cloud Eventarc - Generic tutorial\n+\n+This sample shows how to create a service that processes generic CloudEvents.\n+\n+For more details on how to work with this sample read the [Google Cloud Run Java Samples README](https://github.com/GoogleCloudPlatform/java-docs-samples/tree/master/run).\n+\n+[![Run in Google Cloud][run_img]][run_link]\n+\n+[run_img]: https://storage.googleapis.com/cloudrun/button.svg\n+[run_link]: https://deploy.cloud.run/?git_repo=https://github.com/GoogleCloudPlatform/java-docs-samples&dir=run/events-generic\n+\n+\n+## Dependencies\n+\n+* **Spring Boot**: Web server framework.\n+* **Jib**: Container build tool.\n+* **Junit + SpringBootTest**: [development] Test running framework.\n+* **MockMVC**: [development] Integration testing support framework.\n+\n+## Quickstart\n+\n+Use the [Jib Maven Plugin](https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin) to build and push your container image:\n+\n+```sh\n+mvn jib:build -Dimage gcr.io/$(gcloud config get-value project)/eventarc-generic\n+```\n+\n+Deploy your Cloud Run service:\n+\n+```sh\n+gcloud run deploy eventarc-generic \\\n+--image gcr.io/$(gcloud config get-value project)/eventarc-generic\n+```\n+\n+## Test\n+\n+Test your Cloud Run service by sending CloudEvents: \n+\n+```sh\n+curl -XPOST $CLOUD_RUN_URL \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYwMTY3NA==", "bodyText": "Added.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r509601674", "createdAt": "2020-10-21T19:15:39Z", "author": {"login": "grant"}, "path": "eventarc/generic/README.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# Cloud Eventarc - Generic tutorial\n+\n+This sample shows how to create a service that processes generic CloudEvents.\n+\n+For more details on how to work with this sample read the [Google Cloud Run Java Samples README](https://github.com/GoogleCloudPlatform/java-docs-samples/tree/master/run).\n+\n+[![Run in Google Cloud][run_img]][run_link]\n+\n+[run_img]: https://storage.googleapis.com/cloudrun/button.svg\n+[run_link]: https://deploy.cloud.run/?git_repo=https://github.com/GoogleCloudPlatform/java-docs-samples&dir=run/events-generic\n+\n+\n+## Dependencies\n+\n+* **Spring Boot**: Web server framework.\n+* **Jib**: Container build tool.\n+* **Junit + SpringBootTest**: [development] Test running framework.\n+* **MockMVC**: [development] Integration testing support framework.\n+\n+## Quickstart\n+\n+Use the [Jib Maven Plugin](https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin) to build and push your container image:\n+\n+```sh\n+mvn jib:build -Dimage gcr.io/$(gcloud config get-value project)/eventarc-generic\n+```\n+\n+Deploy your Cloud Run service:\n+\n+```sh\n+gcloud run deploy eventarc-generic \\\n+--image gcr.io/$(gcloud config get-value project)/eventarc-generic\n+```\n+\n+## Test\n+\n+Test your Cloud Run service by sending CloudEvents: \n+\n+```sh\n+curl -XPOST $CLOUD_RUN_URL \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQwMjE5NA=="}, "originalCommit": {"oid": "7336d434cc2b50459dff1a60f2bf3bd15e076a3b"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTEzNzE1OnYy", "diffSide": "RIGHT", "path": "eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNjo1MDozNFrOHnVxng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNjo1OToxM1rOHnWDNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAxMzI3OA==", "bodyText": "I forgot the fields aren't necessary strings, so this should be <String, Object> for the unmarshalling. Will approve for this simple change.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r511013278", "createdAt": "2020-10-23T16:50:34Z", "author": {"login": "averikitsch"}, "path": "eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java", "diffHunk": "@@ -37,7 +36,7 @@\n \n   @RequestMapping(value = \"/\", method = RequestMethod.POST)\n   public ResponseEntity<String> receiveMessage(\n-      @RequestBody PubSubBody body, @RequestHeader Map<String, String> headers) {\n+      @RequestBody Map<String, String> body, @RequestHeader Map<String, String> headers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ff57f9dacfeb51268d85b361f1b0092b2cac0a5"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAxNzc4Mw==", "bodyText": "Changed to Object.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4045#discussion_r511017783", "createdAt": "2020-10-23T16:59:13Z", "author": {"login": "grant"}, "path": "eventarc/audit-storage/src/main/java/com/example/cloudrun/EventController.java", "diffHunk": "@@ -37,7 +36,7 @@\n \n   @RequestMapping(value = \"/\", method = RequestMethod.POST)\n   public ResponseEntity<String> receiveMessage(\n-      @RequestBody PubSubBody body, @RequestHeader Map<String, String> headers) {\n+      @RequestBody Map<String, String> body, @RequestHeader Map<String, String> headers) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAxMzI3OA=="}, "originalCommit": {"oid": "8ff57f9dacfeb51268d85b361f1b0092b2cac0a5"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 737, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}