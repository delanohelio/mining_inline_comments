{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NTM4OTYy", "number": 4074, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTowNjowN1rOEw8bpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTowNzowMVrOEw8c9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzU3MjIzOnYy", "diffSide": "RIGHT", "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceUpdate.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTowNjowN1rOHmz04w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMjoxNzowNVrOHm1zkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1NzA1OQ==", "bodyText": "I hate this, but can't think of a decent suggestion on fixing.  Not sure why you hardcode v1 in this instance either, well, I can guess.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4074#discussion_r510457059", "createdAt": "2020-10-22T21:06:07Z", "author": {"login": "lesv"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceUpdate.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_update_resource]\n+\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import com.google.auth.http.HttpCredentialsAdapter;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirResourceUpdate {\n+  private static final String FHIR_NAME =\n+      \"projects/%s/locations/%s/datasets/%s/fhirStores/%s/fhir/%s/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceUpdate(String resourceName, String data)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"resource-type\",\n+    // \"resource-id\");\n+    // The following data works with a Patient resource and is not intended to work with\n+    // other types of FHIR resources. If necessary, supply new values for data that\n+    // correspond to the FHIR resource you are patching.\n+    // String data = \"[{\\\"op\\\": \\\"replace\\\", \\\"path\\\": \\\"/active\\\", \\\"value\\\": false}]\";\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\"%sv1/%s\", client.getRootUrl(), resourceName);\n+    URIBuilder uriBuilder = new URIBuilder(uri).setParameter(\"access_token\", getAccessToken());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e705ca7d07572fe9d62509abf5fd5219b08be64b"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4OTQ4OA==", "bodyText": "Copied from FhirResourcePatch lol. I can make improvements though.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4074#discussion_r510489488", "createdAt": "2020-10-22T22:17:05Z", "author": {"login": "dzlier-gcp"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceUpdate.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_update_resource]\n+\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import com.google.auth.http.HttpCredentialsAdapter;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirResourceUpdate {\n+  private static final String FHIR_NAME =\n+      \"projects/%s/locations/%s/datasets/%s/fhirStores/%s/fhir/%s/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceUpdate(String resourceName, String data)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"resource-type\",\n+    // \"resource-id\");\n+    // The following data works with a Patient resource and is not intended to work with\n+    // other types of FHIR resources. If necessary, supply new values for data that\n+    // correspond to the FHIR resource you are patching.\n+    // String data = \"[{\\\"op\\\": \\\"replace\\\", \\\"path\\\": \\\"/active\\\", \\\"value\\\": false}]\";\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\"%sv1/%s\", client.getRootUrl(), resourceName);\n+    URIBuilder uriBuilder = new URIBuilder(uri).setParameter(\"access_token\", getAccessToken());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1NzA1OQ=="}, "originalCommit": {"oid": "e705ca7d07572fe9d62509abf5fd5219b08be64b"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzU3NTU2OnYy", "diffSide": "RIGHT", "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceUpdate.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTowNzowMVrOHmz22A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTowNzowMVrOHmz22A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1NzU2MA==", "bodyText": "Seems like all of these should be constants in the client library.", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/4074#discussion_r510457560", "createdAt": "2020-10-22T21:07:01Z", "author": {"login": "lesv"}, "path": "healthcare/v1/src/main/java/snippets/healthcare/fhir/resources/FhirResourceUpdate.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package snippets.healthcare.fhir.resources;\n+\n+// [START healthcare_update_resource]\n+\n+import com.google.api.client.http.HttpRequestInitializer;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.services.healthcare.v1.CloudHealthcare;\n+import com.google.api.services.healthcare.v1.CloudHealthcareScopes;\n+import com.google.auth.http.HttpCredentialsAdapter;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.util.Collections;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.HttpClients;\n+\n+public class FhirResourceUpdate {\n+  private static final String FHIR_NAME =\n+      \"projects/%s/locations/%s/datasets/%s/fhirStores/%s/fhir/%s/%s\";\n+  private static final JsonFactory JSON_FACTORY = new JacksonFactory();\n+  private static final NetHttpTransport HTTP_TRANSPORT = new NetHttpTransport();\n+\n+  public static void fhirResourceUpdate(String resourceName, String data)\n+      throws IOException, URISyntaxException {\n+    // String resourceName =\n+    //    String.format(\n+    //        FHIR_NAME, \"project-id\", \"region-id\", \"dataset-id\", \"store-id\", \"resource-type\",\n+    // \"resource-id\");\n+    // The following data works with a Patient resource and is not intended to work with\n+    // other types of FHIR resources. If necessary, supply new values for data that\n+    // correspond to the FHIR resource you are patching.\n+    // String data = \"[{\\\"op\\\": \\\"replace\\\", \\\"path\\\": \\\"/active\\\", \\\"value\\\": false}]\";\n+\n+    // Initialize the client, which will be used to interact with the service.\n+    CloudHealthcare client = createClient();\n+\n+    HttpClient httpClient = HttpClients.createDefault();\n+    String uri = String.format(\"%sv1/%s\", client.getRootUrl(), resourceName);\n+    URIBuilder uriBuilder = new URIBuilder(uri).setParameter(\"access_token\", getAccessToken());\n+    StringEntity requestEntity = new StringEntity(data);\n+\n+    HttpUriRequest request =\n+        RequestBuilder.put(uriBuilder.build())\n+            .setEntity(requestEntity)\n+            .addHeader(\"Content-Type\", \"application/fhir+json;charset=utf-8\")\n+            .addHeader(\"Accept-Charset\", \"utf-8\")\n+            .addHeader(\"Accept\", \"application/fhir+json; charset=utf-8\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e705ca7d07572fe9d62509abf5fd5219b08be64b"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 739, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}