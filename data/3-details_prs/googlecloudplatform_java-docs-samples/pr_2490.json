{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzODQwOTE4", "number": 2490, "title": "Update Bigtable+Beam hello world examples and move them into java-docs-samples", "bodyText": "Existing samples are here: https://github.com/GoogleCloudPlatform/cloud-bigtable-examples/tree/master/java/dataflow-connector-examples/src/main/java/com/google/cloud/bigtable/dataflow/example", "createdAt": "2020-03-25T21:38:03Z", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2490", "merged": true, "mergeCommit": {"oid": "5fdd41805a230dd0d3f0da21332710cfcda97973"}, "closed": true, "closedAt": "2020-03-26T16:28:58Z", "author": {"login": "billyjacobson"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRNvuEgH2gAyMzkzODQwOTE4OjkwY2RhYTgxMGM1MWQ1YzA0NGI1OTkxYWJjYmU1NTgzYzVhNTBlMzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRet6rAFqTM4MjE4NzMyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "90cdaa810c51d5c044b5991abcbe5583c5a50e36", "author": {"user": {"login": "billyjacobson", "name": "Billy Jacobson"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/90cdaa810c51d5c044b5991abcbe5583c5a50e36", "committedDate": "2020-03-25T20:43:41Z", "message": "Hello world reads and writes for beam, tests working"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8620f1f8fc241447ec23f784ed0981764926620", "author": {"user": {"login": "billyjacobson", "name": "Billy Jacobson"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/b8620f1f8fc241447ec23f784ed0981764926620", "committedDate": "2020-03-25T21:35:45Z", "message": "Add region tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c2e707e0ff370504a5936335bb6ef247178203d", "author": {"user": {"login": "billyjacobson", "name": "Billy Jacobson"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/9c2e707e0ff370504a5936335bb6ef247178203d", "committedDate": "2020-03-25T21:38:11Z", "message": "Merge branch 'master' into beam-hello"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4448a4679c034b764acfd68cb74c348d4a8d9a8", "author": {"user": {"login": "billyjacobson", "name": "Billy Jacobson"}}, "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/commit/d4448a4679c034b764acfd68cb74c348d4a8d9a8", "committedDate": "2020-03-25T21:45:22Z", "message": "Merge branch 'master' into beam-hello"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMTg2ODA0", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2490#pullrequestreview-382186804", "createdAt": "2020-03-26T16:29:35Z", "commit": {"oid": "d4448a4679c034b764acfd68cb74c348d4a8d9a8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMTg3MzI5", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2490#pullrequestreview-382187329", "createdAt": "2020-03-26T16:30:05Z", "commit": {"oid": "d4448a4679c034b764acfd68cb74c348d4a8d9a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjozMDowNVrOF8Picw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjozMDowNVrOF8Picw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcxMzQ1OQ==", "bodyText": "Should be end, sorry to hit merge", "url": "https://github.com/GoogleCloudPlatform/java-docs-samples/pull/2490#discussion_r398713459", "createdAt": "2020-03-26T16:30:05Z", "author": {"login": "lesv"}, "path": "bigtable/beam/helloworld/src/main/java/HelloWorldWrite.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+// [START bigtable_beam_helloworld_write]\n+import com.google.cloud.bigtable.beam.CloudBigtableIO;\n+import com.google.cloud.bigtable.beam.CloudBigtableTableConfiguration;\n+import org.apache.beam.runners.dataflow.options.DataflowPipelineOptions;\n+import org.apache.beam.sdk.Pipeline;\n+import org.apache.beam.sdk.options.Default;\n+import org.apache.beam.sdk.options.Description;\n+import org.apache.beam.sdk.options.PipelineOptionsFactory;\n+import org.apache.beam.sdk.transforms.Create;\n+import org.apache.beam.sdk.transforms.DoFn;\n+import org.apache.beam.sdk.transforms.ParDo;\n+import org.apache.hadoop.hbase.client.Mutation;\n+import org.apache.hadoop.hbase.client.Put;\n+import org.apache.hadoop.hbase.util.Bytes;\n+\n+public class HelloWorldWrite {\n+  public static void main(String[] args) {\n+    // [START bigtable_beam_helloworld_create_pipeline]\n+    BigtableOptions options =\n+        PipelineOptionsFactory.fromArgs(args).withValidation().as(BigtableOptions.class);\n+    Pipeline p = Pipeline.create(options);\n+    // [END bigtable_beam_helloworld_create_pipeline]\n+\n+    // [START bigtable_beam_helloworld_write_config]\n+    CloudBigtableTableConfiguration bigtableTableConfig =\n+        new CloudBigtableTableConfiguration.Builder()\n+            .withProjectId(options.getBigtableProjectId())\n+            .withInstanceId(options.getBigtableInstanceId())\n+            .withTableId(options.getBigtableTableId())\n+            .build();\n+    // [END bigtable_beam_helloworld_write_config]\n+\n+    // [START bigtable_beam_helloworld_write_transforms]\n+    p.apply(Create.of(\"phone#4c410523#20190501\", \"phone#4c410523#20190502\"))\n+        .apply(\n+            ParDo.of(\n+                new DoFn<String, Mutation>() {\n+                  @ProcessElement\n+                  public void processElement(@Element String rowkey, OutputReceiver<Mutation> out) {\n+                    long timestamp = System.currentTimeMillis();\n+                    Put row = new Put(Bytes.toBytes(rowkey));\n+\n+                    row.addColumn(\n+                        Bytes.toBytes(\"stats_summary\"),\n+                        Bytes.toBytes(\"os_build\"),\n+                        timestamp,\n+                        Bytes.toBytes(\"android\"));\n+                    out.output(row);\n+                  }\n+                }))\n+        .apply(CloudBigtableIO.writeToTable(bigtableTableConfig));\n+    // [START bigtable_beam_helloworld_write_transforms]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4448a4679c034b764acfd68cb74c348d4a8d9a8"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 870, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}