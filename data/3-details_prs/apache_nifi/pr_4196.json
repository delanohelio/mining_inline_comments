{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwOTgwOTc5", "number": 4196, "title": "NIFI-7341 Updated certificate commands and source code formatting in \u2026", "bodyText": "\u2026Toolkit Guide.\nThank you for submitting a contribution to Apache NiFi.\nPlease provide a short description of the PR here:\nDescription of PR\nImproved documentation.\nIn order to streamline the review of the contribution we ask you\nto ensure the following steps have been taken:\nFor all changes:\n\n\n Is there a JIRA ticket associated with this PR? Is it referenced\nin the commit message?\n\n\n Does your PR title start with NIFI-XXXX where XXXX is the JIRA number you are trying to resolve? Pay particular attention to the hyphen \"-\" character.\n\n\n Has your PR been rebased against the latest commit within the target branch (typically master)?\n\n\n Is your initial contribution a single, squashed commit? Additional commits in response to PR reviewer feedback should be made on this branch and pushed to allow change tracking. Do not squash or use --force when pushing to allow for clean monitoring of changes.\n\n\nFor code changes:\n\n Have you ensured that the full suite of tests is executed via mvn -Pcontrib-check clean install at the root nifi folder?\n Have you written or updated unit tests to verify your changes?\n Have you verified that the full build is successful on both JDK 8 and JDK 11?\n If adding new dependencies to the code, are these dependencies licensed in a way that is compatible for inclusion under ASF 2.0?\n If applicable, have you updated the LICENSE file, including the main LICENSE file under nifi-assembly?\n If applicable, have you updated the NOTICE file, including the main NOTICE file found under nifi-assembly?\n If adding new Properties, have you added .displayName in addition to .name (programmatic access) for each of the new properties?\n\nFor documentation related changes:\n\n Have you ensured that format looks appropriate for the output in which it is rendered?\n\nNote:\nPlease ensure that once the PR is submitted, you check travis-ci for build issues and submit an update to your PR as soon as possible.", "createdAt": "2020-04-08T17:27:31Z", "url": "https://github.com/apache/nifi/pull/4196", "merged": true, "mergeCommit": {"oid": "1ec7e31f11698a9d40986c517384777ec8b3aa24"}, "closed": true, "closedAt": "2020-04-09T17:13:54Z", "author": {"login": "alopresto"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVrUcCAH2gAyNDAwOTgwOTc5OmQ0ZTYwNmM4OWY0YjBhZGExNTU4ODBlNGFjZjgwNjRhM2UwNjU4Zjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcV-nWNgFqTM5MDkyMjA2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d4e606c89f4b0ada155880e4acf8064a3e0658f7", "author": {"user": {"login": "alopresto", "name": "Andy LoPresto"}}, "url": "https://github.com/apache/nifi/commit/d4e606c89f4b0ada155880e4acf8064a3e0658f7", "committedDate": "2020-04-08T17:26:44Z", "message": "NIFI-7341 Updated certificate commands and source code formatting in Toolkit Guide."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwOTIyMDY4", "url": "https://github.com/apache/nifi/pull/4196#pullrequestreview-390922068", "createdAt": "2020-04-09T15:55:35Z", "commit": {"oid": "d4e606c89f4b0ada155880e4acf8064a3e0658f7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTo1NTozNVrOGDe_ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTo1NTozNVrOGDe_ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMwNjY4Mw==", "bodyText": "Did you want to remove this \"Follow the steps above\" line as well for consistency?", "url": "https://github.com/apache/nifi/pull/4196#discussion_r406306683", "createdAt": "2020-04-09T15:55:35Z", "author": {"login": "andrewmlim"}, "path": "nifi-docs/src/main/asciidoc/toolkit-guide.adoc", "diffHunk": "@@ -1175,9 +1188,8 @@ $ ./bin/tls-toolkit.sh standalone -n 'node1.nifi.apache.org' \\\n   * If the DER file only contains the public certificate, use this command:\n   ** `openssl x509 -inform der -in cert.der -out cert.pem`\n . To convert from a PKCS12 keystore (`keystore.p12`) containing both the public certificate and private key into PEM encoded files (`$PASSWORD` is the keystore password):\n-  * `openssl pkcs12 -in keystore.p12 -out cert.der -nodes -password \"pass:$PASSWORD\"`\n+  * `openssl pkcs12 -in keystore.p12 -nodes -clcerts -nokeys -out cert.pem  -password \"pass:$PASSWORD\"`\n   * `openssl pkcs12 -in keystore.p12 -nodes -nocerts -out key.key -password \"pass:$PASSWORD\"`\n-  * Follow the steps above to convert `cert.der` to `cert.pem`\n . To convert from a Java Keystore (`keystore.jks`) containing private key into PEM encoded files (`$P12_PASSWORD` is the PKCS12 keystore password, `$JKS_PASSWORD` is the Java keystore password you want to set, and `$ALIAS` can be any value -- the NiFi default is `nifi-key`):\n   * `keytool -importkeystore -srckeystore keystore.jks -destkeystore keystore.p12 -srcstoretype JKS -deststoretype PKCS12 -destkeypass \"$P12_PASSWORD\" -deststorepass \"$P12_PASSWORD\" -srcstorepass \"$JKS_PASSWORD\" -srcalias \"$ALIAS\" -destalias \"$ALIAS\"`\n   * Follow the steps above to convert from `keystore.p12` to `cert.pem` and `key.key`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4e606c89f4b0ada155880e4acf8064a3e0658f7"}, "originalPosition": 227}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1772, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}