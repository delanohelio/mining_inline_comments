{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwOTgwOTc5", "number": 4196, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTo1NTozNVrODwdxng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTo1NTozNVrODwdxng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTQ2MDc4OnYy", "diffSide": "RIGHT", "path": "nifi-docs/src/main/asciidoc/toolkit-guide.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTo1NTozNVrOGDe_ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNzoxMzoxMlrOGDh1Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMwNjY4Mw==", "bodyText": "Did you want to remove this \"Follow the steps above\" line as well for consistency?", "url": "https://github.com/apache/nifi/pull/4196#discussion_r406306683", "createdAt": "2020-04-09T15:55:35Z", "author": {"login": "andrewmlim"}, "path": "nifi-docs/src/main/asciidoc/toolkit-guide.adoc", "diffHunk": "@@ -1175,9 +1188,8 @@ $ ./bin/tls-toolkit.sh standalone -n 'node1.nifi.apache.org' \\\n   * If the DER file only contains the public certificate, use this command:\n   ** `openssl x509 -inform der -in cert.der -out cert.pem`\n . To convert from a PKCS12 keystore (`keystore.p12`) containing both the public certificate and private key into PEM encoded files (`$PASSWORD` is the keystore password):\n-  * `openssl pkcs12 -in keystore.p12 -out cert.der -nodes -password \"pass:$PASSWORD\"`\n+  * `openssl pkcs12 -in keystore.p12 -nodes -clcerts -nokeys -out cert.pem  -password \"pass:$PASSWORD\"`\n   * `openssl pkcs12 -in keystore.p12 -nodes -nocerts -out key.key -password \"pass:$PASSWORD\"`\n-  * Follow the steps above to convert `cert.der` to `cert.pem`\n . To convert from a Java Keystore (`keystore.jks`) containing private key into PEM encoded files (`$P12_PASSWORD` is the PKCS12 keystore password, `$JKS_PASSWORD` is the Java keystore password you want to set, and `$ALIAS` can be any value -- the NiFi default is `nifi-key`):\n   * `keytool -importkeystore -srckeystore keystore.jks -destkeystore keystore.p12 -srcstoretype JKS -deststoretype PKCS12 -destkeypass \"$P12_PASSWORD\" -deststorepass \"$P12_PASSWORD\" -srcstorepass \"$JKS_PASSWORD\" -srcalias \"$ALIAS\" -destalias \"$ALIAS\"`\n   * Follow the steps above to convert from `keystore.p12` to `cert.pem` and `key.key`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4e606c89f4b0ada155880e4acf8064a3e0658f7"}, "originalPosition": 227}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1MzE2Mg==", "bodyText": "No, the command I updated above removes the need for the follow-on conversion, but this command still results in a PKCS12 keystore, which would need to be converted to the component PEM files using those steps. Thanks.", "url": "https://github.com/apache/nifi/pull/4196#discussion_r406353162", "createdAt": "2020-04-09T17:13:12Z", "author": {"login": "alopresto"}, "path": "nifi-docs/src/main/asciidoc/toolkit-guide.adoc", "diffHunk": "@@ -1175,9 +1188,8 @@ $ ./bin/tls-toolkit.sh standalone -n 'node1.nifi.apache.org' \\\n   * If the DER file only contains the public certificate, use this command:\n   ** `openssl x509 -inform der -in cert.der -out cert.pem`\n . To convert from a PKCS12 keystore (`keystore.p12`) containing both the public certificate and private key into PEM encoded files (`$PASSWORD` is the keystore password):\n-  * `openssl pkcs12 -in keystore.p12 -out cert.der -nodes -password \"pass:$PASSWORD\"`\n+  * `openssl pkcs12 -in keystore.p12 -nodes -clcerts -nokeys -out cert.pem  -password \"pass:$PASSWORD\"`\n   * `openssl pkcs12 -in keystore.p12 -nodes -nocerts -out key.key -password \"pass:$PASSWORD\"`\n-  * Follow the steps above to convert `cert.der` to `cert.pem`\n . To convert from a Java Keystore (`keystore.jks`) containing private key into PEM encoded files (`$P12_PASSWORD` is the PKCS12 keystore password, `$JKS_PASSWORD` is the Java keystore password you want to set, and `$ALIAS` can be any value -- the NiFi default is `nifi-key`):\n   * `keytool -importkeystore -srckeystore keystore.jks -destkeystore keystore.p12 -srcstoretype JKS -deststoretype PKCS12 -destkeypass \"$P12_PASSWORD\" -deststorepass \"$P12_PASSWORD\" -srcstorepass \"$JKS_PASSWORD\" -srcalias \"$ALIAS\" -destalias \"$ALIAS\"`\n   * Follow the steps above to convert from `keystore.p12` to `cert.pem` and `key.key`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMwNjY4Mw=="}, "originalCommit": {"oid": "d4e606c89f4b0ada155880e4acf8064a3e0658f7"}, "originalPosition": 227}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 175, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}