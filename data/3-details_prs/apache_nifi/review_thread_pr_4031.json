{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NzkzNzU3", "number": 4031, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTo0NjowMlrODd11-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QyMDowMzozNlrODiLOtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNjE3NDY3OnYy", "diffSide": "RIGHT", "path": "nifi-commons/nifi-expression-language/src/main/java/org/apache/nifi/attribute/expression/language/evaluation/functions/Uuid3Evaluator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTo0NjowMlrOFmrTjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMzowODo1OVrOFmxH2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5OTcyNw==", "bodyText": "I think this is throwing a NullRef when the attribute referenced doesn't exist", "url": "https://github.com/apache/nifi/pull/4031#discussion_r376099727", "createdAt": "2020-02-06T21:46:02Z", "author": {"login": "shayneburgess"}, "path": "nifi-commons/nifi-expression-language/src/main/java/org/apache/nifi/attribute/expression/language/evaluation/functions/Uuid3Evaluator.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.nifi.attribute.expression.language.evaluation.functions;\n+\n+import org.apache.nifi.attribute.expression.language.EvaluationContext;\n+import org.apache.nifi.attribute.expression.language.evaluation.Evaluator;\n+import org.apache.nifi.attribute.expression.language.evaluation.QueryResult;\n+import org.apache.nifi.attribute.expression.language.evaluation.StringEvaluator;\n+import org.apache.nifi.attribute.expression.language.evaluation.StringQueryResult;\n+\n+import java.nio.ByteBuffer;\n+import java.util.Objects;\n+import java.util.UUID;\n+import org.apache.commons.lang3.ArrayUtils;\n+\n+public class Uuid3Evaluator extends StringEvaluator {\n+\n+    private final Evaluator<String> subject;\n+    private final Evaluator<String> namespace;\n+\n+    public Uuid3Evaluator(final Evaluator<String> subject, final Evaluator<String> namespace) {\n+        this.subject = subject;\n+        this.namespace = namespace;\n+    }\n+\n+    @Override\n+    public QueryResult<String> evaluate(final EvaluationContext evaluationContext) {\n+        final String subjectValue = subject.evaluate(evaluationContext).getValue();\n+        final String nsValue = namespace.evaluate(evaluationContext).getValue();\n+        final UUID nsUUID = UUID.fromString(Objects.requireNonNull(nsValue));\n+\n+        final byte[] nsBytes =\n+            ByteBuffer.wrap(new byte[16])\n+                .putLong(nsUUID.getMostSignificantBits())\n+                .putLong(nsUUID.getLeastSignificantBits())\n+                .array();\n+\n+        final byte[] subjectBytes = Objects.requireNonNull(subjectValue).getBytes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0245a2ffb33d0d51a29aa9a6a7a2e30cc43ee2e3"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE5NTAzNQ==", "bodyText": "Fixed. Returns new StringQueryResult(null) now if the subject is null.", "url": "https://github.com/apache/nifi/pull/4031#discussion_r376195035", "createdAt": "2020-02-07T03:08:59Z", "author": {"login": "jfrazee"}, "path": "nifi-commons/nifi-expression-language/src/main/java/org/apache/nifi/attribute/expression/language/evaluation/functions/Uuid3Evaluator.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.nifi.attribute.expression.language.evaluation.functions;\n+\n+import org.apache.nifi.attribute.expression.language.EvaluationContext;\n+import org.apache.nifi.attribute.expression.language.evaluation.Evaluator;\n+import org.apache.nifi.attribute.expression.language.evaluation.QueryResult;\n+import org.apache.nifi.attribute.expression.language.evaluation.StringEvaluator;\n+import org.apache.nifi.attribute.expression.language.evaluation.StringQueryResult;\n+\n+import java.nio.ByteBuffer;\n+import java.util.Objects;\n+import java.util.UUID;\n+import org.apache.commons.lang3.ArrayUtils;\n+\n+public class Uuid3Evaluator extends StringEvaluator {\n+\n+    private final Evaluator<String> subject;\n+    private final Evaluator<String> namespace;\n+\n+    public Uuid3Evaluator(final Evaluator<String> subject, final Evaluator<String> namespace) {\n+        this.subject = subject;\n+        this.namespace = namespace;\n+    }\n+\n+    @Override\n+    public QueryResult<String> evaluate(final EvaluationContext evaluationContext) {\n+        final String subjectValue = subject.evaluate(evaluationContext).getValue();\n+        final String nsValue = namespace.evaluate(evaluationContext).getValue();\n+        final UUID nsUUID = UUID.fromString(Objects.requireNonNull(nsValue));\n+\n+        final byte[] nsBytes =\n+            ByteBuffer.wrap(new byte[16])\n+                .putLong(nsUUID.getMostSignificantBits())\n+                .putLong(nsUUID.getLeastSignificantBits())\n+                .array();\n+\n+        final byte[] subjectBytes = Objects.requireNonNull(subjectValue).getBytes();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5OTcyNw=="}, "originalCommit": {"oid": "0245a2ffb33d0d51a29aa9a6a7a2e30cc43ee2e3"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MTYyMTYxOnYy", "diffSide": "RIGHT", "path": "nifi-commons/nifi-expression-language/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QyMDowMzoyOFrOFtSinQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxNTowNVrOFvjH3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAzNDAxMw==", "bodyText": "can we go to 3.9", "url": "https://github.com/apache/nifi/pull/4031#discussion_r383034013", "createdAt": "2020-02-23T20:03:28Z", "author": {"login": "joewitt"}, "path": "nifi-commons/nifi-expression-language/pom.xml", "diffHunk": "@@ -93,5 +93,15 @@\n             <artifactId>commons-text</artifactId>\n             <version>1.8</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.commons</groupId>\n+            <artifactId>commons-lang3</artifactId>\n+            <version>3.8.1</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2d2b317bcf84acdfb013a60dce69dc4d319cda8"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMjg0Ng==", "bodyText": "Bumped and re-tested. AFAICT nothing in the commons-lang3 release notes suggest a problem.", "url": "https://github.com/apache/nifi/pull/4031#discussion_r385402846", "createdAt": "2020-02-27T22:15:05Z", "author": {"login": "jfrazee"}, "path": "nifi-commons/nifi-expression-language/pom.xml", "diffHunk": "@@ -93,5 +93,15 @@\n             <artifactId>commons-text</artifactId>\n             <version>1.8</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.commons</groupId>\n+            <artifactId>commons-lang3</artifactId>\n+            <version>3.8.1</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAzNDAxMw=="}, "originalCommit": {"oid": "b2d2b317bcf84acdfb013a60dce69dc4d319cda8"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MTYyMTY3OnYy", "diffSide": "RIGHT", "path": "nifi-commons/nifi-expression-language/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QyMDowMzozNlrOFtSipA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxNTo0NlrOFvjJJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAzNDAyMA==", "bodyText": "can we go to 1.14", "url": "https://github.com/apache/nifi/pull/4031#discussion_r383034020", "createdAt": "2020-02-23T20:03:36Z", "author": {"login": "joewitt"}, "path": "nifi-commons/nifi-expression-language/pom.xml", "diffHunk": "@@ -93,5 +93,15 @@\n             <artifactId>commons-text</artifactId>\n             <version>1.8</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.commons</groupId>\n+            <artifactId>commons-lang3</artifactId>\n+            <version>3.8.1</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>commons-codec</groupId>\n+            <artifactId>commons-codec</artifactId>\n+            <version>1.13</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2d2b317bcf84acdfb013a60dce69dc4d319cda8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMzE3NA==", "bodyText": "Bumped and re-tested. Similarly, AFAICT nothing in the commons-codec release notes suggest a problem.", "url": "https://github.com/apache/nifi/pull/4031#discussion_r385403174", "createdAt": "2020-02-27T22:15:46Z", "author": {"login": "jfrazee"}, "path": "nifi-commons/nifi-expression-language/pom.xml", "diffHunk": "@@ -93,5 +93,15 @@\n             <artifactId>commons-text</artifactId>\n             <version>1.8</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.commons</groupId>\n+            <artifactId>commons-lang3</artifactId>\n+            <version>3.8.1</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>commons-codec</groupId>\n+            <artifactId>commons-codec</artifactId>\n+            <version>1.13</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAzNDAyMA=="}, "originalCommit": {"oid": "b2d2b317bcf84acdfb013a60dce69dc4d319cda8"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 193, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}