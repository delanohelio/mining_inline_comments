{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExODExNDE5", "number": 4629, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDoyNjozOFrOEzUrgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNDoxMjowN1rOE00vfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjUxNjUxOnYy", "diffSide": "RIGHT", "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDoyNjozOFrOHqeZ3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo0NjoyNFrOHsE-Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwMDM4Mw==", "bodyText": "In my opinion passing in a UserGroupProvider instance instead of the ugiProvider would make no difference from the functionality point of view but it'd simplify the usage/improve the readability.\nAs for the second parameter I'm not fully sure why we need the CallableThrowingException class. For me simple Callable seems to be ok too, even though it doesn't specify its exception type, but I don't see the need for that.", "url": "https://github.com/apache/nifi/pull/4629#discussion_r514300383", "createdAt": "2020-10-29T14:26:38Z", "author": {"login": "adenes"}, "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "diffHunk": "@@ -141,4 +143,37 @@ public static boolean isSecurityEnabled(final Configuration config) {\n         Validate.notNull(config);\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n+\n+    public static <T> T callWithUgi(CallableThrowingException<UserGroupInformation, IOException> ugiProvider, CallableThrowingException<T, IOException> function) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43e66082c31f09c8ed761c18e32a3ffba2115d6f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwNzM5NA==", "bodyText": "wow, the first point from this comment has been fixed even before I submitted the comment :) Thanks @tpalfy", "url": "https://github.com/apache/nifi/pull/4629#discussion_r514307394", "createdAt": "2020-10-29T14:35:21Z", "author": {"login": "adenes"}, "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "diffHunk": "@@ -141,4 +143,37 @@ public static boolean isSecurityEnabled(final Configuration config) {\n         Validate.notNull(config);\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n+\n+    public static <T> T callWithUgi(CallableThrowingException<UserGroupInformation, IOException> ugiProvider, CallableThrowingException<T, IOException> function) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwMDM4Mw=="}, "originalCommit": {"oid": "43e66082c31f09c8ed761c18e32a3ffba2115d6f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMzODAzMQ==", "bodyText": "I haven't looked too closely, but I was also wondering about the need for CallableThrowingException , isn't it basically providing the same thing as PrivilegedExceptionAction ?\nI would think the code inside the client services could just be:\ngetUgi().doAs((PrivilegedExceptionAction<Object>)() -> {\n  ...\n}", "url": "https://github.com/apache/nifi/pull/4629#discussion_r514338031", "createdAt": "2020-10-29T15:13:29Z", "author": {"login": "bbende"}, "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "diffHunk": "@@ -141,4 +143,37 @@ public static boolean isSecurityEnabled(final Configuration config) {\n         Validate.notNull(config);\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n+\n+    public static <T> T callWithUgi(CallableThrowingException<UserGroupInformation, IOException> ugiProvider, CallableThrowingException<T, IOException> function) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwMDM4Mw=="}, "originalCommit": {"oid": "43e66082c31f09c8ed761c18e32a3ffba2115d6f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4MDgyNw==", "bodyText": "Yeah, that would work. I overcomplicated it a little it seems. Updated.", "url": "https://github.com/apache/nifi/pull/4629#discussion_r515980827", "createdAt": "2020-11-02T13:46:24Z", "author": {"login": "tpalfy"}, "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "diffHunk": "@@ -141,4 +143,37 @@ public static boolean isSecurityEnabled(final Configuration config) {\n         Validate.notNull(config);\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n+\n+    public static <T> T callWithUgi(CallableThrowingException<UserGroupInformation, IOException> ugiProvider, CallableThrowingException<T, IOException> function) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwMDM4Mw=="}, "originalCommit": {"oid": "43e66082c31f09c8ed761c18e32a3ffba2115d6f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjUyMDMzOnYy", "diffSide": "RIGHT", "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDoyNzoyMlrOHqecNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDoyNzoyMlrOHqecNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMwMDk4MA==", "bodyText": "minor nit: () -> function.call() could be replaced with method reference, i.e. function::call", "url": "https://github.com/apache/nifi/pull/4629#discussion_r514300980", "createdAt": "2020-10-29T14:27:22Z", "author": {"login": "adenes"}, "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "diffHunk": "@@ -141,4 +143,37 @@ public static boolean isSecurityEnabled(final Configuration config) {\n         Validate.notNull(config);\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n+\n+    public static <T> T callWithUgi(CallableThrowingException<UserGroupInformation, IOException> ugiProvider, CallableThrowingException<T, IOException> function) throws IOException {\n+        try {\n+            return ugiProvider.call().doAs((PrivilegedExceptionAction<T>)() -> function.call());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43e66082c31f09c8ed761c18e32a3ffba2115d6f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODIxNTcxOnYy", "diffSide": "RIGHT", "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/CallableThrowingException.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNDowNDowNlrOHswKbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMToyNDoxMlrOHuqVyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4ODQ5NQ==", "bodyText": "This can be removed now that it is not used right?", "url": "https://github.com/apache/nifi/pull/4629#discussion_r516688495", "createdAt": "2020-11-03T14:04:06Z", "author": {"login": "bbende"}, "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/CallableThrowingException.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.nifi.hadoop;\n+\n+@FunctionalInterface\n+public interface CallableThrowingException<T, E extends Exception> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f060300a2c5f25d0c8f66a94cb1cb0f763f5054"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY5MDI1MQ==", "bodyText": "Yes, deleting it.", "url": "https://github.com/apache/nifi/pull/4629#discussion_r518690251", "createdAt": "2020-11-06T11:24:12Z", "author": {"login": "tpalfy"}, "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/CallableThrowingException.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.nifi.hadoop;\n+\n+@FunctionalInterface\n+public interface CallableThrowingException<T, E extends Exception> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4ODQ5NQ=="}, "originalCommit": {"oid": "2f060300a2c5f25d0c8f66a94cb1cb0f763f5054"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODIyNDkzOnYy", "diffSide": "RIGHT", "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNDowNjoxMVrOHswP_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMToyNDozMlrOHuqWhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4OTkxNw==", "bodyText": "It looks like only the method below that takes log and kerberosUser is used, can we remove this one if it is unused?", "url": "https://github.com/apache/nifi/pull/4629#discussion_r516689917", "createdAt": "2020-11-03T14:06:11Z", "author": {"login": "bbende"}, "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "diffHunk": "@@ -141,4 +143,37 @@ public static boolean isSecurityEnabled(final Configuration config) {\n         Validate.notNull(config);\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n+\n+    public static <T> T callWithUgi(UserGroupInformation ugi, PrivilegedExceptionAction<T> action) throws IOException {\n+        try {\n+            return ugi.doAs(action);\n+        } catch (InterruptedException e) {\n+            throw new IOException(e);\n+        }\n+    }\n+\n+    public static void checkTGTAndRelogin(ComponentLog log, KerberosUser kerberosUser, UserGroupInformation ugi) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f060300a2c5f25d0c8f66a94cb1cb0f763f5054"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY5MDQzNg==", "bodyText": "Indeed, removing it.", "url": "https://github.com/apache/nifi/pull/4629#discussion_r518690436", "createdAt": "2020-11-06T11:24:32Z", "author": {"login": "tpalfy"}, "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "diffHunk": "@@ -141,4 +143,37 @@ public static boolean isSecurityEnabled(final Configuration config) {\n         Validate.notNull(config);\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n+\n+    public static <T> T callWithUgi(UserGroupInformation ugi, PrivilegedExceptionAction<T> action) throws IOException {\n+        try {\n+            return ugi.doAs(action);\n+        } catch (InterruptedException e) {\n+            throw new IOException(e);\n+        }\n+    }\n+\n+    public static void checkTGTAndRelogin(ComponentLog log, KerberosUser kerberosUser, UserGroupInformation ugi) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4OTkxNw=="}, "originalCommit": {"oid": "2f060300a2c5f25d0c8f66a94cb1cb0f763f5054"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODI1NTMzOnYy", "diffSide": "RIGHT", "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNDoxMjowN1rOHswhsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMzo1ODowNlrOHvwFWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY5NDQ1MA==", "bodyText": "It doesn't seem like we really need a utility method here just to call one line return ugi.doAs(action); , I think it would be simpler to just call ugi.doAs from all the places where this method is being called", "url": "https://github.com/apache/nifi/pull/4629#discussion_r516694450", "createdAt": "2020-11-03T14:12:07Z", "author": {"login": "bbende"}, "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "diffHunk": "@@ -141,4 +143,37 @@ public static boolean isSecurityEnabled(final Configuration config) {\n         Validate.notNull(config);\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n+\n+    public static <T> T callWithUgi(UserGroupInformation ugi, PrivilegedExceptionAction<T> action) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f060300a2c5f25d0c8f66a94cb1cb0f763f5054"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY5MjMyMw==", "bodyText": "It handles the InterruptedException. Most of the callers only declare IOException. This is a general pattern which could use a utility method in my opinion. Just in this case the wrapping would need to be replicated in 15 places or so.", "url": "https://github.com/apache/nifi/pull/4629#discussion_r518692323", "createdAt": "2020-11-06T11:28:27Z", "author": {"login": "tpalfy"}, "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "diffHunk": "@@ -141,4 +143,37 @@ public static boolean isSecurityEnabled(final Configuration config) {\n         Validate.notNull(config);\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n+\n+    public static <T> T callWithUgi(UserGroupInformation ugi, PrivilegedExceptionAction<T> action) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY5NDQ1MA=="}, "originalCommit": {"oid": "2f060300a2c5f25d0c8f66a94cb1cb0f763f5054"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgzMjkyMA==", "bodyText": "Ok fair enough", "url": "https://github.com/apache/nifi/pull/4629#discussion_r519832920", "createdAt": "2020-11-09T13:58:06Z", "author": {"login": "bbende"}, "path": "nifi-nar-bundles/nifi-extension-utils/nifi-hadoop-utils/src/main/java/org/apache/nifi/hadoop/SecurityUtil.java", "diffHunk": "@@ -141,4 +143,37 @@ public static boolean isSecurityEnabled(final Configuration config) {\n         Validate.notNull(config);\n         return KERBEROS.equalsIgnoreCase(config.get(HADOOP_SECURITY_AUTHENTICATION));\n     }\n+\n+    public static <T> T callWithUgi(UserGroupInformation ugi, PrivilegedExceptionAction<T> action) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY5NDQ1MA=="}, "originalCommit": {"oid": "2f060300a2c5f25d0c8f66a94cb1cb0f763f5054"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 142, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}