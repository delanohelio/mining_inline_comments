{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MjQzNzgy", "number": 787, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxODo1OToxMFrODuFq7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjo0NzoyNFrODwe9zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjUzOTk4OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxODo1OToxMFrOF_5QbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxODo1OToxMFrOF_5QbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0MjcwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              - Honor Retry-After header if present by waiting for the time specified in the header before retrying\n          \n          \n            \n              - Honor Retry-After header, if present, by waiting for the time specified in the header before retrying", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r402542701", "createdAt": "2020-04-02T18:59:10Z", "author": {"login": "PJSimon"}, "path": "CHANGELOG.md", "diffHunk": "@@ -5,6 +5,10 @@\n - Add metadata to each item returned by a metadata query\n - Check that part was successfully uploaded for large file uploads before retrying for 500 errors ([#781](https://github.com/box/box-java-sdk/pull/781))\n - Add preflight check before chunked uploads ([#782](https://github.com/box/box-java-sdk/pull/782))\n+- Fix retry logic ([#787](https://github.com/box/box-java-sdk/pull/787))\n+  - Retry for 400 `invalid_grant` error in authentication requests (Clock Skew)\n+  - Honor Retry-After header if present by waiting for the time specified in the header before retrying", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04c255ce058c246ff6bab0f2379dc5768aa4f446"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjY1ODAwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/box/sdk/BoxAPIRequest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOTozMzo1NlrOF_6cug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMTo1NDozNlrOGCXkcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2MjIzNA==", "bodyText": "Can we add a check for \"invalid_grant,\" as in python: https://github.com/box/box-python-sdk/blob/594df43e1f5eec1b9fc714a58f03fd0756d1776b/boxsdk/auth/jwt_auth.py#L313", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r402562234", "createdAt": "2020-04-02T19:33:56Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/BoxAPIRequest.java", "diffHunk": "@@ -756,10 +764,13 @@ void shouldAuthenticate(boolean shouldAuthenticate) {\n     /**\n      *\n      * @param  responseCode HTTP error code of the response\n+     * @param  apiException BoxAPIException thrown\n      * @return true if the response is one that should be retried, otherwise false\n      */\n-    public static boolean isResponseRetryable(int responseCode) {\n-        return (responseCode >= 500 || responseCode == 429);\n+    public static boolean isResponseRetryable(int responseCode, BoxAPIException apiException) {\n+        String message = apiException.getMessage();\n+        Boolean isClockSkewError =  responseCode == 400 && message.contains(\"exp\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04c255ce058c246ff6bab0f2379dc5768aa4f446"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkzMjg5NQ==", "bodyText": "Going to fix this once we decide whether to rollback the Max Request Attempts commit or not.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r404932895", "createdAt": "2020-04-07T16:10:06Z", "author": {"login": "sujaygarlanka"}, "path": "src/main/java/com/box/sdk/BoxAPIRequest.java", "diffHunk": "@@ -756,10 +764,13 @@ void shouldAuthenticate(boolean shouldAuthenticate) {\n     /**\n      *\n      * @param  responseCode HTTP error code of the response\n+     * @param  apiException BoxAPIException thrown\n      * @return true if the response is one that should be retried, otherwise false\n      */\n-    public static boolean isResponseRetryable(int responseCode) {\n-        return (responseCode >= 500 || responseCode == 429);\n+    public static boolean isResponseRetryable(int responseCode, BoxAPIException apiException) {\n+        String message = apiException.getMessage();\n+        Boolean isClockSkewError =  responseCode == 400 && message.contains(\"exp\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2MjIzNA=="}, "originalCommit": {"oid": "04c255ce058c246ff6bab0f2379dc5768aa4f446"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEzNjQ5OQ==", "bodyText": "OK, lemme know when it's ready for final review.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r405136499", "createdAt": "2020-04-07T21:54:36Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/BoxAPIRequest.java", "diffHunk": "@@ -756,10 +764,13 @@ void shouldAuthenticate(boolean shouldAuthenticate) {\n     /**\n      *\n      * @param  responseCode HTTP error code of the response\n+     * @param  apiException BoxAPIException thrown\n      * @return true if the response is one that should be retried, otherwise false\n      */\n-    public static boolean isResponseRetryable(int responseCode) {\n-        return (responseCode >= 500 || responseCode == 429);\n+    public static boolean isResponseRetryable(int responseCode, BoxAPIException apiException) {\n+        String message = apiException.getMessage();\n+        Boolean isClockSkewError =  responseCode == 400 && message.contains(\"exp\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2MjIzNA=="}, "originalCommit": {"oid": "04c255ce058c246ff6bab0f2379dc5768aa4f446"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDM3MDgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/box/sdk/BoxAPIConnection.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNTo1ODo0NFrOGBz-nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzoxNjo0NVrOGDEOWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU1MzM3Mw==", "bodyText": "Setting it to 5 makes the max total attempts 6, which is in line with the box-python-sdk (https://github.com/box/box-python-sdk/blob/9cdebdde39e68e735069dd97e0a459e09382455d/boxsdk/session/session.py#L341)", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r404553373", "createdAt": "2020-04-07T05:58:44Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/BoxAPIConnection.java", "diffHunk": "@@ -22,9 +22,9 @@\n  */\n public class BoxAPIConnection {\n     /**\n-     * The default maximum number of times an API request will be tried when an error occurs.\n+     * The default maximum number of times an API request will be retried after an error occurs.\n      */\n-    public static final int DEFAULT_MAX_ATTEMPTS = 5;\n+    public static final int DEFAULT_MAX_RETRIES = 5;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a734a649f88a50182a7679db0ac1ad38cd33c5bf"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkyODYyMA==", "bodyText": "I like the idea of renaming this, but I think changing this value DEFAULT_MAX_RETRIES may be a breaking change. We are changing public values like the the functions to set and get the value. So if we are okay with our next release being a major release, then I am fine with this.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r404928620", "createdAt": "2020-04-07T16:04:04Z", "author": {"login": "sujaygarlanka"}, "path": "src/main/java/com/box/sdk/BoxAPIConnection.java", "diffHunk": "@@ -22,9 +22,9 @@\n  */\n public class BoxAPIConnection {\n     /**\n-     * The default maximum number of times an API request will be tried when an error occurs.\n+     * The default maximum number of times an API request will be retried after an error occurs.\n      */\n-    public static final int DEFAULT_MAX_ATTEMPTS = 5;\n+    public static final int DEFAULT_MAX_RETRIES = 5;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU1MzM3Mw=="}, "originalCommit": {"oid": "a734a649f88a50182a7679db0ac1ad38cd33c5bf"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEwODYxNQ==", "bodyText": "Agreed.  I would think the chances someone is using that variable outside the SDK are very low, but if we deprecate it, then we can prevent the breaking change.  See next commit...", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r405108615", "createdAt": "2020-04-07T20:58:20Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/BoxAPIConnection.java", "diffHunk": "@@ -22,9 +22,9 @@\n  */\n public class BoxAPIConnection {\n     /**\n-     * The default maximum number of times an API request will be tried when an error occurs.\n+     * The default maximum number of times an API request will be retried after an error occurs.\n      */\n-    public static final int DEFAULT_MAX_ATTEMPTS = 5;\n+    public static final int DEFAULT_MAX_RETRIES = 5;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU1MzM3Mw=="}, "originalCommit": {"oid": "a734a649f88a50182a7679db0ac1ad38cd33c5bf"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTExNTE0Nw==", "bodyText": "Makes sense. I think we also need to deprecate getMaxRequestAttempts and setMaxRequestAttempts in BoxAPIConnection and BoxGlobalSettings as well. If we do this, it should be fine. The only other possible issue is the restore method in BoxAPIConnection. It takes in an object and restores settings. If someone is storing an object before this change, then when they restore with that object there will be an issue. The old object will have the key maxRequestAttempts, but our new restore will only look for maxRetryAttempts. I don't think this will be a big issue, but not sure. We could put logic in to check for both. I think it may make sense to wait until we have a breaking change, to make this change. What do you think?", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r405115147", "createdAt": "2020-04-07T21:10:26Z", "author": {"login": "sujaygarlanka"}, "path": "src/main/java/com/box/sdk/BoxAPIConnection.java", "diffHunk": "@@ -22,9 +22,9 @@\n  */\n public class BoxAPIConnection {\n     /**\n-     * The default maximum number of times an API request will be tried when an error occurs.\n+     * The default maximum number of times an API request will be retried after an error occurs.\n      */\n-    public static final int DEFAULT_MAX_ATTEMPTS = 5;\n+    public static final int DEFAULT_MAX_RETRIES = 5;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU1MzM3Mw=="}, "originalCommit": {"oid": "a734a649f88a50182a7679db0ac1ad38cd33c5bf"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2ODEyMQ==", "bodyText": "Did the other method deprecations you mentioned.\nAlso added a test to ensure restore works with \"old\" state strings.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r405868121", "createdAt": "2020-04-08T23:16:45Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/BoxAPIConnection.java", "diffHunk": "@@ -22,9 +22,9 @@\n  */\n public class BoxAPIConnection {\n     /**\n-     * The default maximum number of times an API request will be tried when an error occurs.\n+     * The default maximum number of times an API request will be retried after an error occurs.\n      */\n-    public static final int DEFAULT_MAX_ATTEMPTS = 5;\n+    public static final int DEFAULT_MAX_RETRIES = 5;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU1MzM3Mw=="}, "originalCommit": {"oid": "a734a649f88a50182a7679db0ac1ad38cd33c5bf"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDM3Njc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/box/sdk/BoxAPIRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNjowMToxNlrOGB0CSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNjowMToxNlrOGB0CSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU1NDMxNA==", "bodyText": "Adding + 1 is the way to go, other wise we'd have to modify BackoffCounter.decrement() which seems too far.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r404554314", "createdAt": "2020-04-07T06:01:16Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/BoxAPIRequest.java", "diffHunk": "@@ -371,9 +371,9 @@ public BoxAPIResponse send() {\n      */\n     public BoxAPIResponse send(ProgressListener listener) {\n         if (this.api == null) {\n-            this.backoffCounter.reset(BoxGlobalSettings.getMaxRequestAttempts() + 1);\n+            this.backoffCounter.reset(BoxGlobalSettings.getMaxRetryAttempts() + 1);\n         } else {\n-            this.backoffCounter.reset(this.api.getMaxRequestAttempts() + 1);\n+            this.backoffCounter.reset(this.api.getMaxRetryAttempts() + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a734a649f88a50182a7679db0ac1ad38cd33c5bf"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDIyNDQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/box/sdk/BoxAPIRequest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMzoxMzo1N1rOGCZdfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDoyMDo1OVrOGCau1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE2NzQ4NA==", "bodyText": "I believe in Java, it's better to check for existence of \"code\" than to rely on the overhead of throwing an exception, if it doesn't exist.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r405167484", "createdAt": "2020-04-07T23:13:57Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/BoxAPIRequest.java", "diffHunk": "@@ -769,7 +769,15 @@ void shouldAuthenticate(boolean shouldAuthenticate) {\n      */\n     public static boolean isResponseRetryable(int responseCode, BoxAPIException apiException) {\n         String message = apiException.getMessage();\n-        Boolean isClockSkewError =  responseCode == 400 && message.contains(\"exp\");\n+        String errorCode = \"\";\n+        try {\n+            JsonObject responseBody = JsonObject.readFrom(apiException.getResponse());\n+            errorCode = responseBody.get(\"code\").toString();\n+        } catch (Exception e) { }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "451e8788648bdf667f70d827992185c45fd5a2e0"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3MjkyMA==", "bodyText": "Do you still need the try \u2026 catch now?", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r405172920", "createdAt": "2020-04-07T23:30:33Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/BoxAPIRequest.java", "diffHunk": "@@ -769,7 +769,15 @@ void shouldAuthenticate(boolean shouldAuthenticate) {\n      */\n     public static boolean isResponseRetryable(int responseCode, BoxAPIException apiException) {\n         String message = apiException.getMessage();\n-        Boolean isClockSkewError =  responseCode == 400 && message.contains(\"exp\");\n+        String errorCode = \"\";\n+        try {\n+            JsonObject responseBody = JsonObject.readFrom(apiException.getResponse());\n+            errorCode = responseBody.get(\"code\").toString();\n+        } catch (Exception e) { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE2NzQ4NA=="}, "originalCommit": {"oid": "451e8788648bdf667f70d827992185c45fd5a2e0"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3NDUwNw==", "bodyText": "What if the readFrom fails, such as when the body is null on a 500 error?", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r405174507", "createdAt": "2020-04-07T23:35:31Z", "author": {"login": "sujaygarlanka"}, "path": "src/main/java/com/box/sdk/BoxAPIRequest.java", "diffHunk": "@@ -769,7 +769,15 @@ void shouldAuthenticate(boolean shouldAuthenticate) {\n      */\n     public static boolean isResponseRetryable(int responseCode, BoxAPIException apiException) {\n         String message = apiException.getMessage();\n-        Boolean isClockSkewError =  responseCode == 400 && message.contains(\"exp\");\n+        String errorCode = \"\";\n+        try {\n+            JsonObject responseBody = JsonObject.readFrom(apiException.getResponse());\n+            errorCode = responseBody.get(\"code\").toString();\n+        } catch (Exception e) { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE2NzQ4NA=="}, "originalCommit": {"oid": "451e8788648bdf667f70d827992185c45fd5a2e0"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3NDc0NQ==", "bodyText": "We should check for that case, as well, then, for the same reason as above.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r405174745", "createdAt": "2020-04-07T23:36:20Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/BoxAPIRequest.java", "diffHunk": "@@ -769,7 +769,15 @@ void shouldAuthenticate(boolean shouldAuthenticate) {\n      */\n     public static boolean isResponseRetryable(int responseCode, BoxAPIException apiException) {\n         String message = apiException.getMessage();\n-        Boolean isClockSkewError =  responseCode == 400 && message.contains(\"exp\");\n+        String errorCode = \"\";\n+        try {\n+            JsonObject responseBody = JsonObject.readFrom(apiException.getResponse());\n+            errorCode = responseBody.get(\"code\").toString();\n+        } catch (Exception e) { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE2NzQ4NA=="}, "originalCommit": {"oid": "451e8788648bdf667f70d827992185c45fd5a2e0"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4ODMxMA==", "bodyText": "Have to put the try catch back again because of a test case that wasn't passing here. Apparently, an html body can be returned. In this case, I don't know how to do a check that the body is not HTML other than the try catch.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r405188310", "createdAt": "2020-04-08T00:20:59Z", "author": {"login": "sujaygarlanka"}, "path": "src/main/java/com/box/sdk/BoxAPIRequest.java", "diffHunk": "@@ -769,7 +769,15 @@ void shouldAuthenticate(boolean shouldAuthenticate) {\n      */\n     public static boolean isResponseRetryable(int responseCode, BoxAPIException apiException) {\n         String message = apiException.getMessage();\n-        Boolean isClockSkewError =  responseCode == 400 && message.contains(\"exp\");\n+        String errorCode = \"\";\n+        try {\n+            JsonObject responseBody = JsonObject.readFrom(apiException.getResponse());\n+            errorCode = responseBody.get(\"code\").toString();\n+        } catch (Exception e) { }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE2NzQ4NA=="}, "originalCommit": {"oid": "451e8788648bdf667f70d827992185c45fd5a2e0"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODY2ODk2OnYy", "diffSide": "RIGHT", "path": "src/test/Fixtures/BoxAPIConnection/State.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzoxNzo0N1rOGDEPpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzoxNzo0N1rOGDEPpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2ODQ1Mw==", "bodyText": "This un-prettied format is the result of the call to save the state, so I preserved it in this test fixture.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r405868453", "createdAt": "2020-04-08T23:17:47Z", "author": {"login": "PJSimon"}, "path": "src/test/Fixtures/BoxAPIConnection/State.json", "diffHunk": "@@ -0,0 +1 @@\n+{\"accessToken\":\"iKqkOC4FWkd1kG1HV9P17s5N7mqJBC2N\",\"refreshToken\":\"QALVa7gLVz8bYf4B5wDYoXfhmR7746c4\",\"lastRefresh\":0,\"expires\":0,\"userAgent\":\"Box Java SDK v2.45.0 (Java 1.8.0_131)\",\"tokenURL\":\"https://api.box.com/oauth2/token\",\"baseURL\":\"https://api.box.com/2.0/\",\"baseUploadURL\":\"https://upload.box.com/api/2.0/\",\"autoRefresh\":true,\"maxRetryAttempts\":1}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "994d9c16ab37217e51fb889cbf2b29680385bc88"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODY3MDMyOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/box/sdk/BoxAPIConnectionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzoxODoyMlrOGDEQaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQyMzoxODoyMlrOGDEQaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg2ODY1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void shouldUseGlobalMaxRequests() {\n          \n          \n            \n                public void shouldUseGlobalMaxRetries() {", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r405868651", "createdAt": "2020-04-08T23:18:22Z", "author": {"login": "PJSimon"}, "path": "src/test/java/com/box/sdk/BoxAPIConnectionTest.java", "diffHunk": "@@ -841,15 +859,15 @@ public String getJSON() {\n     @Category(UnitTest.class)\n     public void shouldUseGlobalMaxRequests() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "994d9c16ab37217e51fb889cbf2b29680385bc88"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTMzNTE5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/box/sdk/SharedLinkAPIConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNToyNToxOVrOGDdu2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNToyNToxOVrOGDdu2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI4NjA0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.wrappedConnection.setMaxRetryAttempts(attempts);\n          \n          \n            \n                    this.wrappedConnection.setMaxRequestAttempts(attempts);", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r406286042", "createdAt": "2020-04-09T15:25:19Z", "author": {"login": "sujaygarlanka"}, "path": "src/main/java/com/box/sdk/SharedLinkAPIConnection.java", "diffHunk": "@@ -93,14 +93,50 @@ public boolean getAutoRefresh() {\n         return this.wrappedConnection.getAutoRefresh();\n     }\n \n+    /**\n+     * Sets the total maximum number of times an API request will be tried when error responses\n+     * are received.\n+     * @return the maximum number of request attempts.\n+     * @deprecated getMaxRetryAttempts is preferred because it more clearly gets the number\n+     * of times a request should be retried after an error response is received.\n+     */\n+    @Deprecated\n     @Override\n     public int getMaxRequestAttempts() {\n-        return this.wrappedConnection.getMaxRequestAttempts();\n+        return this.wrappedConnection.getMaxRetryAttempts();\n     }\n \n+    /**\n+     * Sets the total maximum number of times an API request will be tried when error responses\n+     * are received.\n+     * @param attempts the maximum number of request attempts.\n+     * @deprecated setMaxRetryAttempts is preferred because it more clearly sets the number\n+     * of times a request should be retried after an error response is received.\n+     */\n+    @Deprecated\n     @Override\n     public void setMaxRequestAttempts(int attempts) {\n-        this.wrappedConnection.setMaxRequestAttempts(attempts);\n+        this.wrappedConnection.setMaxRetryAttempts(attempts);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e466b6c40c038b4f9abb201a100c9a4d8a0b8529"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTMzNzMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/box/sdk/SharedLinkAPIConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNToyNTo0MVrOGDdwJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNToyNTo0MVrOGDdwJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI4NjM3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return this.wrappedConnection.getMaxRetryAttempts();\n          \n          \n            \n                    return this.wrappedConnection.getMaxRequestAttempts();", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r406286373", "createdAt": "2020-04-09T15:25:41Z", "author": {"login": "sujaygarlanka"}, "path": "src/main/java/com/box/sdk/SharedLinkAPIConnection.java", "diffHunk": "@@ -93,14 +93,50 @@ public boolean getAutoRefresh() {\n         return this.wrappedConnection.getAutoRefresh();\n     }\n \n+    /**\n+     * Sets the total maximum number of times an API request will be tried when error responses\n+     * are received.\n+     * @return the maximum number of request attempts.\n+     * @deprecated getMaxRetryAttempts is preferred because it more clearly gets the number\n+     * of times a request should be retried after an error response is received.\n+     */\n+    @Deprecated\n     @Override\n     public int getMaxRequestAttempts() {\n-        return this.wrappedConnection.getMaxRequestAttempts();\n+        return this.wrappedConnection.getMaxRetryAttempts();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e466b6c40c038b4f9abb201a100c9a4d8a0b8529"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTMzODk4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/box/sdk/BoxGlobalSettings.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNToyNjowNlrOGDdxPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNToyNjowNlrOGDdxPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI4NjY1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BoxGlobalSettings.maxRetryAttempts = attempts;\n          \n          \n            \n                    BoxGlobalSettings.maxRetryAttempts = attempts - 1;", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r406286654", "createdAt": "2020-04-09T15:26:06Z", "author": {"login": "sujaygarlanka"}, "path": "src/main/java/com/box/sdk/BoxGlobalSettings.java", "diffHunk": "@@ -44,18 +44,44 @@ public static void setReadTimeout(int readTimeout) {\n     }\n \n     /**\n-     * Returns the global maximum number of request attempts.\n+     * Returns the global total maximum number of times an API request will be tried when error responses\n+     * are received.\n      * @return max number of request attempts\n+     * @deprecated getMaxRetryAttempts is preferred because it more clearly gets the number\n+     * of times a request should be retried after an error response is received.\n      */\n+    @Deprecated\n     public static int getMaxRequestAttempts() {\n-        return maxRequestAttempts;\n+        return maxRetryAttempts;\n     }\n \n     /**\n-     * Sets the global default maximum number of request attempts.\n-     * @param maxRequestAttempts maximum number of request attempts\n+     * Sets the global total maximum number of times an API request will be tried when error responses\n+     * are received.\n+     * @param attempts maximum number of request attempts\n+     * @deprecated setMaxRetryAttempts is preferred because it more clearly sets the number\n+     * of times a request should be retried after an error response is received.\n      */\n-    public static void setMaxRequestAttempts(int maxRequestAttempts) {\n-        BoxGlobalSettings.maxRequestAttempts = maxRequestAttempts;\n+    @Deprecated\n+    public static void setMaxRequestAttempts(int attempts) {\n+        BoxGlobalSettings.maxRetryAttempts = attempts;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e466b6c40c038b4f9abb201a100c9a4d8a0b8529"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTM2MDQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/box/sdk/BoxAPIConnection.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTozMDozNFrOGDd-jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjozMzowOFrOGDgaPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI5MDA2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return this.maxRetryAttempts + 1;\n          \n          \n            \n                    return this.maxRetryAttempts;", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r406290063", "createdAt": "2020-04-09T15:30:34Z", "author": {"login": "sujaygarlanka"}, "path": "src/main/java/com/box/sdk/BoxAPIConnection.java", "diffHunk": "@@ -419,19 +429,45 @@ public boolean getAutoRefresh() {\n     }\n \n     /**\n-     * Gets the maximum number of times an API request will be tried when an error occurs.\n+     * Sets the total maximum number of times an API request will be tried when error responses\n+     * are received.\n      * @return the maximum number of request attempts.\n+     * @deprecated getMaxRetryAttempts is preferred because it more clearly gets the number\n+     * of times a request should be retried after an error response is received.\n      */\n+    @Deprecated\n     public int getMaxRequestAttempts() {\n-        return this.maxRequestAttempts;\n+        return this.maxRetryAttempts + 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e466b6c40c038b4f9abb201a100c9a4d8a0b8529"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI5NjUyNA==", "bodyText": "The + 1 should be removed because when our retry logic calls this method, it should return the number of retries. It will add 1 to the number of retries when it executes.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r406296524", "createdAt": "2020-04-09T15:40:20Z", "author": {"login": "sujaygarlanka"}, "path": "src/main/java/com/box/sdk/BoxAPIConnection.java", "diffHunk": "@@ -419,19 +429,45 @@ public boolean getAutoRefresh() {\n     }\n \n     /**\n-     * Gets the maximum number of times an API request will be tried when an error occurs.\n+     * Sets the total maximum number of times an API request will be tried when error responses\n+     * are received.\n      * @return the maximum number of request attempts.\n+     * @deprecated getMaxRetryAttempts is preferred because it more clearly gets the number\n+     * of times a request should be retried after an error response is received.\n      */\n+    @Deprecated\n     public int getMaxRequestAttempts() {\n-        return this.maxRequestAttempts;\n+        return this.maxRetryAttempts + 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI5MDA2Mw=="}, "originalCommit": {"oid": "e466b6c40c038b4f9abb201a100c9a4d8a0b8529"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMyOTkxOA==", "bodyText": "This method is deprecated, so the SDK doesn't call it anymore. It's just preserved for client apps that may have been calling it.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r406329918", "createdAt": "2020-04-09T16:33:08Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/BoxAPIConnection.java", "diffHunk": "@@ -419,19 +429,45 @@ public boolean getAutoRefresh() {\n     }\n \n     /**\n-     * Gets the maximum number of times an API request will be tried when an error occurs.\n+     * Sets the total maximum number of times an API request will be tried when error responses\n+     * are received.\n      * @return the maximum number of request attempts.\n+     * @deprecated getMaxRetryAttempts is preferred because it more clearly gets the number\n+     * of times a request should be retried after an error response is received.\n      */\n+    @Deprecated\n     public int getMaxRequestAttempts() {\n-        return this.maxRequestAttempts;\n+        return this.maxRetryAttempts + 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI5MDA2Mw=="}, "originalCommit": {"oid": "e466b6c40c038b4f9abb201a100c9a4d8a0b8529"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTM3MjAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/box/sdk/BoxAPIConnection.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTozMzozMVrOGDeGHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNzozMTozOFrOGDielw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI5MTk5Nw==", "bodyText": "Leaving this in doesn't do anything because we don't use this anywhere. By deprecating it, we allow them to set it, but it doesn't affect functionality. So in the end, it is a breaking change unless we find a way to read this value and DEFAULT_MAX_RETRIES.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r406291997", "createdAt": "2020-04-09T15:33:31Z", "author": {"login": "sujaygarlanka"}, "path": "src/main/java/com/box/sdk/BoxAPIConnection.java", "diffHunk": "@@ -22,10 +22,20 @@\n  */\n public class BoxAPIConnection {\n     /**\n-     * The default maximum number of times an API request will be tried when an error occurs.\n+     * The default total maximum number of times an API request will be tried when error responses\n+     * are received.\n+     * @deprecated DEFAULT_MAX_RETRIES is preferred because it more clearly sets the number\n+     * of times a request should be retried after an error response is received.\n      */\n+    @Deprecated\n     public static final int DEFAULT_MAX_ATTEMPTS = 5;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e466b6c40c038b4f9abb201a100c9a4d8a0b8529"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzNjM1OQ==", "bodyText": "Correct, it's no longer used in the SDK.  It's deprecated because it's public, so it's possible that there are client apps out there reading this value from the SDK, for use in their client code.\nI don't understand your last sentence.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r406336359", "createdAt": "2020-04-09T16:43:53Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/BoxAPIConnection.java", "diffHunk": "@@ -22,10 +22,20 @@\n  */\n public class BoxAPIConnection {\n     /**\n-     * The default maximum number of times an API request will be tried when an error occurs.\n+     * The default total maximum number of times an API request will be tried when error responses\n+     * are received.\n+     * @deprecated DEFAULT_MAX_RETRIES is preferred because it more clearly sets the number\n+     * of times a request should be retried after an error response is received.\n      */\n+    @Deprecated\n     public static final int DEFAULT_MAX_ATTEMPTS = 5;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI5MTk5Nw=="}, "originalCommit": {"oid": "e466b6c40c038b4f9abb201a100c9a4d8a0b8529"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2Mzc5OQ==", "bodyText": "You're right. Forgot it's static and can't be set.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r406363799", "createdAt": "2020-04-09T17:31:38Z", "author": {"login": "sujaygarlanka"}, "path": "src/main/java/com/box/sdk/BoxAPIConnection.java", "diffHunk": "@@ -22,10 +22,20 @@\n  */\n public class BoxAPIConnection {\n     /**\n-     * The default maximum number of times an API request will be tried when an error occurs.\n+     * The default total maximum number of times an API request will be tried when error responses\n+     * are received.\n+     * @deprecated DEFAULT_MAX_RETRIES is preferred because it more clearly sets the number\n+     * of times a request should be retried after an error response is received.\n      */\n+    @Deprecated\n     public static final int DEFAULT_MAX_ATTEMPTS = 5;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI5MTk5Nw=="}, "originalCommit": {"oid": "e466b6c40c038b4f9abb201a100c9a4d8a0b8529"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTYxNjM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/box/sdk/BoxGlobalSettings.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjozNjoyN1rOGDgiHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjozNjoyN1rOGDgiHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzMTkzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return maxRetryAttempts;\n          \n          \n            \n                    return maxRetryAttempts + 1;", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r406331932", "createdAt": "2020-04-09T16:36:27Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/BoxGlobalSettings.java", "diffHunk": "@@ -44,18 +44,44 @@ public static void setReadTimeout(int readTimeout) {\n     }\n \n     /**\n-     * Returns the global maximum number of request attempts.\n+     * Returns the global total maximum number of times an API request will be tried when error responses\n+     * are received.\n      * @return max number of request attempts\n+     * @deprecated getMaxRetryAttempts is preferred because it more clearly gets the number\n+     * of times a request should be retried after an error response is received.\n      */\n+    @Deprecated\n     public static int getMaxRequestAttempts() {\n-        return maxRequestAttempts;\n+        return maxRetryAttempts;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e466b6c40c038b4f9abb201a100c9a4d8a0b8529"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTYzNjY0OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjo0MTo1M1rOGDgu7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjo0MTo1M1rOGDgu7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzNTIxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - Number of request retries after the initial request is now equal to the `DEFAULT_MAX_ATTEMPTS` config value\n          \n          \n            \n            - The concept of setting / getting \"Maximum API Requests\" has been deprecated in favor of \"Maximum API Retries\" to more clearly show the number of times a request will be retried after an error response is received.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r406335213", "createdAt": "2020-04-09T16:41:53Z", "author": {"login": "PJSimon"}, "path": "CHANGELOG.md", "diffHunk": "@@ -2,6 +2,10 @@\n \n \n ## Next Release\n+- Fix retry logic ([#787](https://github.com/box/box-java-sdk/pull/787))\n+- Retry for 400 `invalid_grant` error in authentication requests (Clock Skew)\n+- Honor Retry-After header, if present, by waiting for the time specified in the header before retrying\n+- Number of request retries after the initial request is now equal to the `DEFAULT_MAX_ATTEMPTS` config value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "767b1c8e0127659d2e17d83b42f8bae506429d55"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTY1MTEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/box/sdk/SharedLinkAPIConnection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjo0NjowMlrOGDg4Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjo0Njo1MlrOGDg6FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzNzYxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return this.wrappedConnection.getMaxRetryAttempts();\n          \n          \n            \n                    return this.wrappedConnection.getMaxRetryAttempts() + 1;", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r406337610", "createdAt": "2020-04-09T16:46:02Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/SharedLinkAPIConnection.java", "diffHunk": "@@ -93,14 +93,50 @@ public boolean getAutoRefresh() {\n         return this.wrappedConnection.getAutoRefresh();\n     }\n \n+    /**\n+     * Sets the total maximum number of times an API request will be tried when error responses\n+     * are received.\n+     * @return the maximum number of request attempts.\n+     * @deprecated getMaxRetryAttempts is preferred because it more clearly gets the number\n+     * of times a request should be retried after an error response is received.\n+     */\n+    @Deprecated\n     @Override\n     public int getMaxRequestAttempts() {\n-        return this.wrappedConnection.getMaxRequestAttempts();\n+        return this.wrappedConnection.getMaxRetryAttempts();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "767b1c8e0127659d2e17d83b42f8bae506429d55"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzODA2OA==", "bodyText": "Good point, but adding plus one to getMaxRetryAttempts is better because getMaxRequestAttempts is deprecated, now.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r406338068", "createdAt": "2020-04-09T16:46:52Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/SharedLinkAPIConnection.java", "diffHunk": "@@ -93,14 +93,50 @@ public boolean getAutoRefresh() {\n         return this.wrappedConnection.getAutoRefresh();\n     }\n \n+    /**\n+     * Sets the total maximum number of times an API request will be tried when error responses\n+     * are received.\n+     * @return the maximum number of request attempts.\n+     * @deprecated getMaxRetryAttempts is preferred because it more clearly gets the number\n+     * of times a request should be retried after an error response is received.\n+     */\n+    @Deprecated\n     @Override\n     public int getMaxRequestAttempts() {\n-        return this.wrappedConnection.getMaxRequestAttempts();\n+        return this.wrappedConnection.getMaxRetryAttempts();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzNzYxMA=="}, "originalCommit": {"oid": "767b1c8e0127659d2e17d83b42f8bae506429d55"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTY1NTgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/box/sdk/SharedLinkAPIConnection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjo0NzoyNFrOGDg7Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjo0Nzo0MVrOGDg8BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzODM4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.wrappedConnection.setMaxRetryAttempts(attempts);\n          \n          \n            \n                    this.wrappedConnection.setMaxRetryAttempts(attempts - 1);", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r406338382", "createdAt": "2020-04-09T16:47:24Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/SharedLinkAPIConnection.java", "diffHunk": "@@ -93,14 +93,50 @@ public boolean getAutoRefresh() {\n         return this.wrappedConnection.getAutoRefresh();\n     }\n \n+    /**\n+     * Sets the total maximum number of times an API request will be tried when error responses\n+     * are received.\n+     * @return the maximum number of request attempts.\n+     * @deprecated getMaxRetryAttempts is preferred because it more clearly gets the number\n+     * of times a request should be retried after an error response is received.\n+     */\n+    @Deprecated\n     @Override\n     public int getMaxRequestAttempts() {\n-        return this.wrappedConnection.getMaxRequestAttempts();\n+        return this.wrappedConnection.getMaxRetryAttempts();\n     }\n \n+    /**\n+     * Sets the total maximum number of times an API request will be tried when error responses\n+     * are received.\n+     * @param attempts the maximum number of request attempts.\n+     * @deprecated setMaxRetryAttempts is preferred because it more clearly sets the number\n+     * of times a request should be retried after an error response is received.\n+     */\n+    @Deprecated\n     @Override\n     public void setMaxRequestAttempts(int attempts) {\n-        this.wrappedConnection.setMaxRequestAttempts(attempts);\n+        this.wrappedConnection.setMaxRetryAttempts(attempts);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "767b1c8e0127659d2e17d83b42f8bae506429d55"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzODU2NA==", "bodyText": "Good point, but subtracting one is better because getMaxRequestAttempts is deprecated, now.", "url": "https://github.com/box/box-java-sdk/pull/787#discussion_r406338564", "createdAt": "2020-04-09T16:47:41Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/SharedLinkAPIConnection.java", "diffHunk": "@@ -93,14 +93,50 @@ public boolean getAutoRefresh() {\n         return this.wrappedConnection.getAutoRefresh();\n     }\n \n+    /**\n+     * Sets the total maximum number of times an API request will be tried when error responses\n+     * are received.\n+     * @return the maximum number of request attempts.\n+     * @deprecated getMaxRetryAttempts is preferred because it more clearly gets the number\n+     * of times a request should be retried after an error response is received.\n+     */\n+    @Deprecated\n     @Override\n     public int getMaxRequestAttempts() {\n-        return this.wrappedConnection.getMaxRequestAttempts();\n+        return this.wrappedConnection.getMaxRetryAttempts();\n     }\n \n+    /**\n+     * Sets the total maximum number of times an API request will be tried when error responses\n+     * are received.\n+     * @param attempts the maximum number of request attempts.\n+     * @deprecated setMaxRetryAttempts is preferred because it more clearly sets the number\n+     * of times a request should be retried after an error response is received.\n+     */\n+    @Deprecated\n     @Override\n     public void setMaxRequestAttempts(int attempts) {\n-        this.wrappedConnection.setMaxRequestAttempts(attempts);\n+        this.wrappedConnection.setMaxRetryAttempts(attempts);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzODM4Mg=="}, "originalCommit": {"oid": "767b1c8e0127659d2e17d83b42f8bae506429d55"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1237, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}