{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNDgwMTI3", "number": 810, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyNDowNlrOD-vPWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyNDowNlrOD-vPWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTEyMjgyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/box/sdk/BoxFile.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyNDowNlrOGZBlnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyNDo0OFrOGZBnQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5MzU5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param modified        the date that the new version was modified.\n          \n          \n            \n                 * @param fileSize        the size of the file used for determining the progress of the upload.\n          \n          \n            \n                 * @param listener        a listener for monitoring the upload's progress.\n          \n          \n            \n                 * @param name            the new name for the file\n          \n          \n            \n                 * @return the uploaded file version.\n          \n          \n            \n                 */\n          \n          \n            \n                public BoxFile.Info uploadNewVersion(InputStream fileContent, String fileContentSHA1, Date modified, long fileSize,\n          \n          \n            \n                                          ProgressListener listener, String name) {\n          \n          \n            \n                 * @param modified        the date that the new version was modified.\n          \n          \n            \n                 * @param name            the new name for the file\n          \n          \n            \n                 * @param fileSize        the size of the file used for determining the progress of the upload.\n          \n          \n            \n                 * @param listener        a listener for monitoring the upload's progress.\n          \n          \n            \n                 * @return the uploaded file version.\n          \n          \n            \n                 */\n          \n          \n            \n                public BoxFile.Info uploadNewVersion(InputStream fileContent, String fileContentSHA1, Date modified, String name,\n          \n          \n            \n                                          long fileSize, ProgressListener listener) {", "url": "https://github.com/box/box-java-sdk/pull/810#discussion_r428893596", "createdAt": "2020-05-21T20:24:06Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/BoxFile.java", "diffHunk": "@@ -875,6 +889,24 @@ public void uploadVersion(InputStream fileContent, String fileContentSHA1, Date\n      */\n     public BoxFile.Info uploadNewVersion(InputStream fileContent, String fileContentSHA1, Date modified, long fileSize,\n                               ProgressListener listener) {\n+        return this.uploadNewVersion(fileContent, fileContentSHA1, modified, fileSize, listener, null);\n+    }\n+\n+    /**\n+     * Uploads a new version of this file, replacing the current version, while reporting the progress to a\n+     * ProgressListener. Note that only users with premium accounts will be able to view and recover previous versions\n+     * of the file.\n+     *\n+     * @param fileContent     a stream containing the new file contents.\n+     * @param fileContentSHA1 the SHA1 hash of the file contents. will be sent along in the Content-MD5 header\n+     * @param modified        the date that the new version was modified.\n+     * @param fileSize        the size of the file used for determining the progress of the upload.\n+     * @param listener        a listener for monitoring the upload's progress.\n+     * @param name            the new name for the file\n+     * @return the uploaded file version.\n+     */\n+    public BoxFile.Info uploadNewVersion(InputStream fileContent, String fileContentSHA1, Date modified, long fileSize,\n+                              ProgressListener listener, String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84d69aca12e0ea6b186ccfbd913e0f54c51d6724"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5NDAxOA==", "bodyText": "I feel like the listener should always be last, no?", "url": "https://github.com/box/box-java-sdk/pull/810#discussion_r428894018", "createdAt": "2020-05-21T20:24:48Z", "author": {"login": "PJSimon"}, "path": "src/main/java/com/box/sdk/BoxFile.java", "diffHunk": "@@ -875,6 +889,24 @@ public void uploadVersion(InputStream fileContent, String fileContentSHA1, Date\n      */\n     public BoxFile.Info uploadNewVersion(InputStream fileContent, String fileContentSHA1, Date modified, long fileSize,\n                               ProgressListener listener) {\n+        return this.uploadNewVersion(fileContent, fileContentSHA1, modified, fileSize, listener, null);\n+    }\n+\n+    /**\n+     * Uploads a new version of this file, replacing the current version, while reporting the progress to a\n+     * ProgressListener. Note that only users with premium accounts will be able to view and recover previous versions\n+     * of the file.\n+     *\n+     * @param fileContent     a stream containing the new file contents.\n+     * @param fileContentSHA1 the SHA1 hash of the file contents. will be sent along in the Content-MD5 header\n+     * @param modified        the date that the new version was modified.\n+     * @param fileSize        the size of the file used for determining the progress of the upload.\n+     * @param listener        a listener for monitoring the upload's progress.\n+     * @param name            the new name for the file\n+     * @return the uploaded file version.\n+     */\n+    public BoxFile.Info uploadNewVersion(InputStream fileContent, String fileContentSHA1, Date modified, long fileSize,\n+                              ProgressListener listener, String name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5MzU5Ng=="}, "originalCommit": {"oid": "84d69aca12e0ea6b186ccfbd913e0f54c51d6724"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1254, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}