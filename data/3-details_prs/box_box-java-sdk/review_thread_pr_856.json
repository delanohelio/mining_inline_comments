{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwOTI4NzIw", "number": 856, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMzo1Nzo0NFrOE5yLCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQwMDowNDozN1rOE7wEnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDI2MzE0OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/box/sdk/BoxFolderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMzo1Nzo0NFrOH0d4Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDowMDo0NFrOH0eD5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc3NzU1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    JsonObject body = new JsonObject();\n          \n          \n            \n                    body.add(\"folder\", folderObject);\n          \n          \n            \n                    body.add(\"locked_operations\", lockedOperations);", "url": "https://github.com/box/box-java-sdk/pull/856#discussion_r524777559", "createdAt": "2020-11-16T23:57:44Z", "author": {"login": "PJSimon"}, "path": "src/test/java/com/box/sdk/BoxFolderTest.java", "diffHunk": "@@ -1961,6 +1961,82 @@ private void getUploadSessionStatus(BoxFileUploadSession session) {\n         Assert.assertNotNull(sessionInfo.getPartsProcessed());\n     }\n \n+    @Test\n+    @Category(UnitTest.class)\n+    public void createFolderLockSucceeds() throws IOException {\n+        String result = \"\";\n+        final String folderID = \"12345678\";\n+        final String folderLockURL = \"/folder_locks\";\n+\n+        JsonObject folderObject = new JsonObject();\n+        folderObject.add(\"type\", \"folder\");\n+        folderObject.add(\"id\", folderID);\n+\n+        JsonObject lockedOperations = new JsonObject();\n+        lockedOperations.add(\"move\", true);\n+        lockedOperations.add(\"delete\", true);\n+\n+        JsonObject body = new JsonObject();\n+        body.add(\"folder\", folderObject);\n+        body.add(\"locked_operations\", lockedOperations);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dccb57f8079dc5964d4f925e07d060de08b2e9c0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc4MDUxOA==", "bodyText": "body is not used.", "url": "https://github.com/box/box-java-sdk/pull/856#discussion_r524780518", "createdAt": "2020-11-17T00:00:44Z", "author": {"login": "PJSimon"}, "path": "src/test/java/com/box/sdk/BoxFolderTest.java", "diffHunk": "@@ -1961,6 +1961,82 @@ private void getUploadSessionStatus(BoxFileUploadSession session) {\n         Assert.assertNotNull(sessionInfo.getPartsProcessed());\n     }\n \n+    @Test\n+    @Category(UnitTest.class)\n+    public void createFolderLockSucceeds() throws IOException {\n+        String result = \"\";\n+        final String folderID = \"12345678\";\n+        final String folderLockURL = \"/folder_locks\";\n+\n+        JsonObject folderObject = new JsonObject();\n+        folderObject.add(\"type\", \"folder\");\n+        folderObject.add(\"id\", folderID);\n+\n+        JsonObject lockedOperations = new JsonObject();\n+        lockedOperations.add(\"move\", true);\n+        lockedOperations.add(\"delete\", true);\n+\n+        JsonObject body = new JsonObject();\n+        body.add(\"folder\", folderObject);\n+        body.add(\"locked_operations\", lockedOperations);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc3NzU1OQ=="}, "originalCommit": {"oid": "dccb57f8079dc5964d4f925e07d060de08b2e9c0"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMDg5MDUyOnYy", "diffSide": "RIGHT", "path": "doc/folders.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQwMDowNDozN1rOH3kirw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQwMDowNDozN1rOH3kirw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAzMjQzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To delete a lock on a folder, call [`delete()`][delete-lock] on a folder lock. This cannot be called on a folder.\n          \n          \n            \n            To delete a lock on a folder, call [`delete()`][delete-lock] on a BoxFolderLock object. This cannot be called on a BoxFolder object.", "url": "https://github.com/box/box-java-sdk/pull/856#discussion_r528032431", "createdAt": "2020-11-21T00:04:37Z", "author": {"login": "PJSimon"}, "path": "doc/folders.md", "diffHunk": "@@ -687,3 +690,41 @@ policyToDelete.delete();\n \n [delete-cascade-policy]: http://opensource.box.com/box-java-sdk/javadoc/com/box/sdk/BoxMetadataCascadePolicy.html#delete--\n \n+Lock a Folder\n+-----------------------------\n+\n+To lock a folder and prevent it from being moved and/or deleted, call [`lock()`][lock] on a folder.\n+\n+```java\n+BoxFolder folder = new BoxFolder(api, \"id\");\n+FolderLock.Info folderLock = folder.lock();\n+```\n+\n+[lock]: http://opensource.box.com/box-java-sdk/javadoc/com/box/sdk/BoxFolder.html#lock--\n+\n+Get All Locks on a Folder\n+-----------------------------\n+\n+To get all locks on a folder, call [`getlock()`][get-locks] on folder.\n+\n+```java\n+BoxFolder folder = new BoxFolder(this.api, \"id\");\n+Iterable<BoxFolderLock.Info> locks = folder.getLocks();\n+for (BoxFolderLock.Info lockInfo : locks) {\n+    // Do something with each lockInfo here\n+}\n+```\n+\n+[get-locks]: http://opensource.box.com/box-java-sdk/javadoc/com/box/sdk/BoxFolder.html#getLocks--\n+\n+Delete a Lock on a Folder\n+-----------------------------\n+\n+To delete a lock on a folder, call [`delete()`][delete-lock] on a folder lock. This cannot be called on a folder.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "655a1e7ac33c631d28cc6fb1081b51191e6f0c7a"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1295, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}