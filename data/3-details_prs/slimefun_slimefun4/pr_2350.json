{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNjIxMjg1", "number": 2350, "title": "Separate player-only and no-permission messages", "bodyText": "Description\nAll other commands have a separate message for player-only and no-permission messages, while backpackcommand instead just sent a no-permission message for both cases. I have split it so it sends the appropriate message for the appropriate case.\nChanges\nSplit checks in BackpackCommand.java for no-permission and player-only messages\nRelated Issues\nN/A\nChecklist\n\n I have fully tested the proposed changes and promise that they will not break everything into chaos.\n I have also tested the proposed changes in combination with various popular addons and can confirm my changes do not break them.\n I followed the existing code standards and didn't mess up the formatting.\n I did my best to add documentation to any public classes or methods I added.\n I have added Nonnull and Nullable annotations to my methods to indicate their behaviour for null values\n I added sufficient Unit Tests to cover my code.", "createdAt": "2020-09-26T19:58:17Z", "url": "https://github.com/Slimefun/Slimefun4/pull/2350", "merged": true, "mergeCommit": {"oid": "dc551907d2c29efe887c8bba177a3fd4366406a2"}, "closed": true, "closedAt": "2020-09-26T22:00:12Z", "author": {"login": "TheSilentPro"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMv58IgH2gAyNDkzNjIxMjg1OjQ5NjZkM2FkNGNiNjVmODhhZWM1NmZiYzJhMmM1YTQ1MjAzY2I1MmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMxf0pAFqTQ5NzAzMjc3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4966d3ad4cb65f88aec56fbc2a2c5a45203cb52e", "author": {"user": {"login": "UnlimitedNinjas", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/4966d3ad4cb65f88aec56fbc2a2c5a45203cb52e", "committedDate": "2020-09-26T19:53:09Z", "message": "Separate player-only and no-permission messages"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDI3ODQ2", "url": "https://github.com/Slimefun/Slimefun4/pull/2350#pullrequestreview-497027846", "createdAt": "2020-09-26T20:02:02Z", "commit": {"oid": "4966d3ad4cb65f88aec56fbc2a2c5a45203cb52e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQyMDowMjowM1rOHYiVOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQyMDowMjowM1rOHYiVOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ5MDM2MA==", "bodyText": "else on a new line please, like everywhere else", "url": "https://github.com/Slimefun/Slimefun4/pull/2350#discussion_r495490360", "createdAt": "2020-09-26T20:02:03Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/BackpackCommand.java", "diffHunk": "@@ -26,43 +26,47 @@ protected String getDescription() {\n \n     @Override\n     public void onExecute(CommandSender sender, String[] args) {\n-        if (!(sender instanceof Player) || !sender.hasPermission(\"slimefun.command.backpack\")) {\n-            SlimefunPlugin.getLocalization().sendMessage(sender, \"messages.no-permission\", true);\n-            return;\n-        }\n+        if (sender instanceof Player) {\n+            if (sender.hasPermission(\"slimefun.command.backpack\")) {\n+                if (args.length != 3) {\n+                    SlimefunPlugin.getLocalization().sendMessage(sender, \"messages.usage\", true, msg -> msg.replace(\"%usage%\", \"/sf backpack <Player> <ID>\"));\n+                    return;\n+                }\n \n-        if (args.length != 3) {\n-            SlimefunPlugin.getLocalization().sendMessage(sender, \"messages.usage\", true, msg -> msg.replace(\"%usage%\", \"/sf backpack <Player> <ID>\"));\n-            return;\n-        }\n+                if (!PatternUtils.NUMERIC.matcher(args[2]).matches()) {\n+                    SlimefunPlugin.getLocalization().sendMessage(sender, \"commands.backpack.invalid-id\");\n+                    return;\n+                }\n \n-        if (!PatternUtils.NUMERIC.matcher(args[2]).matches()) {\n-            SlimefunPlugin.getLocalization().sendMessage(sender, \"commands.backpack.invalid-id\");\n-            return;\n-        }\n+                @SuppressWarnings(\"deprecation\")\n+                OfflinePlayer backpackOwner = Bukkit.getOfflinePlayer(args[1]);\n \n-        @SuppressWarnings(\"deprecation\")\n-        OfflinePlayer backpackOwner = Bukkit.getOfflinePlayer(args[1]);\n+                if (!(backpackOwner instanceof Player) && !backpackOwner.hasPlayedBefore()) {\n+                    SlimefunPlugin.getLocalization().sendMessage(sender, \"commands.backpack.player-never-joined\");\n+                    return;\n+                }\n \n-        if (!(backpackOwner instanceof Player) && !backpackOwner.hasPlayedBefore()) {\n-            SlimefunPlugin.getLocalization().sendMessage(sender, \"commands.backpack.player-never-joined\");\n-            return;\n-        }\n+                int id = Integer.parseInt(args[2]);\n \n-        int id = Integer.parseInt(args[2]);\n+                PlayerProfile.get(backpackOwner, profile -> {\n+                    if (!profile.getBackpack(id).isPresent()) {\n+                        SlimefunPlugin.getLocalization().sendMessage(sender, \"commands.backpack.backpack-does-not-exist\");\n+                        return;\n+                    }\n \n-        PlayerProfile.get(backpackOwner, profile -> {\n-            if (!profile.getBackpack(id).isPresent()) {\n-                SlimefunPlugin.getLocalization().sendMessage(sender, \"commands.backpack.backpack-does-not-exist\");\n-                return;\n+                    SlimefunPlugin.runSync(() -> {\n+                        ItemStack item = SlimefunItems.RESTORED_BACKPACK.clone();\n+                        SlimefunPlugin.getBackpackListener().setBackpackId(backpackOwner, item, 2, id);\n+                        ((Player) sender).getInventory().addItem(item);\n+                        SlimefunPlugin.getLocalization().sendMessage(sender, \"commands.backpack.restored-backpack-given\");\n+                    });\n+                });\n+            } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4966d3ad4cb65f88aec56fbc2a2c5a45203cb52e"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b41c60934e182ae01b0aab57d4c85ec0438b722a", "author": {"user": {"login": "UnlimitedNinjas", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b41c60934e182ae01b0aab57d4c85ec0438b722a", "committedDate": "2020-09-26T20:06:23Z", "message": "Fix code consistency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDI4MzIz", "url": "https://github.com/Slimefun/Slimefun4/pull/2350#pullrequestreview-497028323", "createdAt": "2020-09-26T20:12:06Z", "commit": {"oid": "b41c60934e182ae01b0aab57d4c85ec0438b722a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDMyNzcx", "url": "https://github.com/Slimefun/Slimefun4/pull/2350#pullrequestreview-497032771", "createdAt": "2020-09-26T21:44:26Z", "commit": {"oid": "b41c60934e182ae01b0aab57d4c85ec0438b722a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2329, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}