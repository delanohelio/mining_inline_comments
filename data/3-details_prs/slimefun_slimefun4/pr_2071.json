{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MjMyOTA4", "number": 2071, "title": "Added Chance Drop for MOB_DROP recipe items. References #980", "bodyText": "Description\nThis was in reference to pull request #980 I finally got around to making the requested changes\nChanges\nAdded interface for ChanceDrop items\nAdded a check for chance drop items in the EntityDeathListener\nAdjusted the basic circuit board from 100% chance down to 75%\nRelated Issues\n#980\nChecklist\n\n\n\n I have fully tested the proposed changes and promise that they will not break everything into chaos.\n I have also tested the proposed changes in combination with various popular addons and can confirm my changes do not break them.\n I followed the existing code standards and didn't mess up the formatting.\n I did my best to add documentation to any public classes or methods I added.\n I added sufficient Unit Tests to cover my code.", "createdAt": "2020-07-04T03:23:17Z", "url": "https://github.com/Slimefun/Slimefun4/pull/2071", "merged": true, "mergeCommit": {"oid": "f304406aa845da442ead95c2b7717b06e28c7b87"}, "closed": true, "closedAt": "2020-07-07T08:28:52Z", "author": {"login": "dniym"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxfV3tgH2gAyNDQ0MjMyOTA4OjFkZGQ3NjNkYmYxYTRkYjk0NzAwZmEzM2Y2YTBjOTVkZWZhMDgwMDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyfqhiAFqTQ0MzU4OTMyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1ddd763dbf1a4db94700fa33f6a0c95defa08004", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/1ddd763dbf1a4db94700fa33f6a0c95defa08004", "committedDate": "2020-07-04T03:19:19Z", "message": "Added Chance Drop for MOB_DROP recipe items. References #980\n\nAdded interface for ChanceDrop items\n\nAdded a check for chance drop items in the EntityDeathListener\n\nAdjusted circuit board to have a 75% chance rather than 100% chance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNTkyOTM4", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#pullrequestreview-442592938", "createdAt": "2020-07-04T07:13:20Z", "commit": {"oid": "1ddd763dbf1a4db94700fa33f6a0c95defa08004"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwNzoxMzoyMFrOGs6b_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwNzoxNTo0M1rOGs6chg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc0Nzk2Ng==", "bodyText": "Should make a variable for the random since it could be called multiple times and this isn't exactly the least expensive thing in the world", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449747966", "createdAt": "2020-07-04T07:13:20Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MobDropListener.java", "diffHunk": "@@ -34,7 +36,17 @@ public void onEntityKill(EntityDeathEvent e) {\n \n             Set<ItemStack> customDrops = SlimefunPlugin.getRegistry().getMobDrops(e.getEntityType());\n             if (customDrops != null && !customDrops.isEmpty()) {\n-                addDrops(p, customDrops, e.getDrops());\n+            \tfor(ItemStack is:customDrops)\n+            \t{\n+            \t\tSlimefunItem sfi = SlimefunItem.getByItem(is);\n+            \t\tif(sfi != null && sfi instanceof ChanceDrop) {\n+            \t\t\tif(((ChanceDrop)sfi).getChance() <= ThreadLocalRandom.current().nextInt(0,100)) ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ddd763dbf1a4db94700fa33f6a0c95defa08004"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc0Nzk5Ng==", "bodyText": "No need to specify the 0 as origin", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449747996", "createdAt": "2020-07-04T07:14:11Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MobDropListener.java", "diffHunk": "@@ -34,7 +36,17 @@ public void onEntityKill(EntityDeathEvent e) {\n \n             Set<ItemStack> customDrops = SlimefunPlugin.getRegistry().getMobDrops(e.getEntityType());\n             if (customDrops != null && !customDrops.isEmpty()) {\n-                addDrops(p, customDrops, e.getDrops());\n+            \tfor(ItemStack is:customDrops)\n+            \t{\n+            \t\tSlimefunItem sfi = SlimefunItem.getByItem(is);\n+            \t\tif(sfi != null && sfi instanceof ChanceDrop) {\n+            \t\t\tif(((ChanceDrop)sfi).getChance() <= ThreadLocalRandom.current().nextInt(0,100)) ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc0Nzk2Ng=="}, "originalCommit": {"oid": "1ddd763dbf1a4db94700fa33f6a0c95defa08004"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc0ODAxMw==", "bodyText": "Useless continue, there's no other logic in this for loop", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449748013", "createdAt": "2020-07-04T07:14:35Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MobDropListener.java", "diffHunk": "@@ -34,7 +36,17 @@ public void onEntityKill(EntityDeathEvent e) {\n \n             Set<ItemStack> customDrops = SlimefunPlugin.getRegistry().getMobDrops(e.getEntityType());\n             if (customDrops != null && !customDrops.isEmpty()) {\n-                addDrops(p, customDrops, e.getDrops());\n+            \tfor(ItemStack is:customDrops)\n+            \t{\n+            \t\tSlimefunItem sfi = SlimefunItem.getByItem(is);\n+            \t\tif(sfi != null && sfi instanceof ChanceDrop) {\n+            \t\t\tif(((ChanceDrop)sfi).getChance() <= ThreadLocalRandom.current().nextInt(0,100)) \n+                \t\t\tcontinue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ddd763dbf1a4db94700fa33f6a0c95defa08004"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc0ODA5NQ==", "bodyText": "The entire point of this class is to have a chance. Why would there be a default for it?\nRemove the constant and make this a standard non-default, interface method", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449748095", "createdAt": "2020-07-04T07:15:32Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/interfaces/ChanceDrop.java", "diffHunk": "@@ -0,0 +1,16 @@\n+package me.mrCookieSlime.Slimefun.Objects.SlimefunItem.interfaces;\r\n+\r\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ItemAttribute;\r\n+\r\n+\r\n+public interface ChanceDrop extends ItemAttribute {\r\n+\r\n+    /**\r\n+     * This field sets the % chance for an item to drop when a creature is killed.\r\n+     */\r\n+    int chance = 100;  \r\n+\r\n+    public default int getChance() {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ddd763dbf1a4db94700fa33f6a0c95defa08004"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc0ODEwMg==", "bodyText": "Missing @OverRide", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449748102", "createdAt": "2020-07-04T07:15:43Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/BasicCircuitBoard.java", "diffHunk": "@@ -9,18 +9,24 @@\n import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n import me.mrCookieSlime.Slimefun.Objects.Category;\n import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.interfaces.ChanceDrop;\n import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n \n-public class BasicCircuitBoard extends SimpleSlimefunItem<ItemUseHandler> implements NotPlaceable {\n+public class BasicCircuitBoard extends SimpleSlimefunItem<ItemUseHandler> implements NotPlaceable, ChanceDrop {\n \n     private final ItemSetting<Boolean> dropSetting = new ItemSetting<>(\"drop-from-golems\", true);\n-\n+    private final ItemSetting<Integer> chance = new ItemSetting<> (\"golem-drop-chance\", 75);\n+    \n     public BasicCircuitBoard(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n         super(category, item, recipeType, recipe);\n \n         addItemSetting(dropSetting);\n+        addItemSetting(chance);\n     }\n \n+    public int getChance() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ddd763dbf1a4db94700fa33f6a0c95defa08004"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f80bada54b184db71077a5d7bb6c53f8ed70287c", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/f80bada54b184db71077a5d7bb6c53f8ed70287c", "committedDate": "2020-07-04T13:36:29Z", "message": "Made Requested Changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aca5b6efc5ce5c7536647bc2c5c72bb767cd87e5", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/aca5b6efc5ce5c7536647bc2c5c72bb767cd87e5", "committedDate": "2020-07-04T13:39:13Z", "message": "Removed unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27149ee5143f9857805cae025f5e29ef5b2da188", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/27149ee5143f9857805cae025f5e29ef5b2da188", "committedDate": "2020-07-04T13:42:17Z", "message": "Fixed formatting error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNjE2NTE3", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#pullrequestreview-442616517", "createdAt": "2020-07-04T15:42:06Z", "commit": {"oid": "27149ee5143f9857805cae025f5e29ef5b2da188"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNTo0MjowNlrOGs8klg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNTo0MzoyMVrOGs8lAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4MjkzNA==", "bodyText": "Always use ThreadLocalRandom", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449782934", "createdAt": "2020-07-04T15:42:06Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MobDropListener.java", "diffHunk": "@@ -31,11 +33,18 @@ public void onEntityKill(EntityDeathEvent e) {\n         if (e.getEntity().getKiller() != null) {\n             Player p = e.getEntity().getKiller();\n             ItemStack item = p.getInventory().getItemInMainHand();\n-\n+            Random rnd = new Random();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27149ee5143f9857805cae025f5e29ef5b2da188"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4Mjk0Mw==", "bodyText": "On the line above", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449782943", "createdAt": "2020-07-04T15:42:17Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MobDropListener.java", "diffHunk": "@@ -31,11 +33,18 @@ public void onEntityKill(EntityDeathEvent e) {\n         if (e.getEntity().getKiller() != null) {\n             Player p = e.getEntity().getKiller();\n             ItemStack item = p.getInventory().getItemInMainHand();\n-\n+            Random rnd = new Random();\n+            \n             Set<ItemStack> customDrops = SlimefunPlugin.getRegistry().getMobDrops(e.getEntityType());\n-            if (customDrops != null && !customDrops.isEmpty()) {\n-                addDrops(p, customDrops, e.getDrops());\n-            }\n+            if (customDrops != null && !customDrops.isEmpty()) \n+            \tfor(ItemStack is:customDrops)\n+            \t{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27149ee5143f9857805cae025f5e29ef5b2da188"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4Mjk2OA==", "bodyText": "Spacing between is the colon and custom drops", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449782968", "createdAt": "2020-07-04T15:42:33Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MobDropListener.java", "diffHunk": "@@ -31,11 +33,18 @@ public void onEntityKill(EntityDeathEvent e) {\n         if (e.getEntity().getKiller() != null) {\n             Player p = e.getEntity().getKiller();\n             ItemStack item = p.getInventory().getItemInMainHand();\n-\n+            Random rnd = new Random();\n+            \n             Set<ItemStack> customDrops = SlimefunPlugin.getRegistry().getMobDrops(e.getEntityType());\n-            if (customDrops != null && !customDrops.isEmpty()) {\n-                addDrops(p, customDrops, e.getDrops());\n-            }\n+            if (customDrops != null && !customDrops.isEmpty()) \n+            \tfor(ItemStack is:customDrops)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27149ee5143f9857805cae025f5e29ef5b2da188"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4MzAwNg==", "bodyText": "Space after if and below too", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449783006", "createdAt": "2020-07-04T15:42:48Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MobDropListener.java", "diffHunk": "@@ -31,11 +33,18 @@ public void onEntityKill(EntityDeathEvent e) {\n         if (e.getEntity().getKiller() != null) {\n             Player p = e.getEntity().getKiller();\n             ItemStack item = p.getInventory().getItemInMainHand();\n-\n+            Random rnd = new Random();\n+            \n             Set<ItemStack> customDrops = SlimefunPlugin.getRegistry().getMobDrops(e.getEntityType());\n-            if (customDrops != null && !customDrops.isEmpty()) {\n-                addDrops(p, customDrops, e.getDrops());\n-            }\n+            if (customDrops != null && !customDrops.isEmpty()) \n+            \tfor(ItemStack is:customDrops)\n+            \t{\n+            \t\tSlimefunItem sfi = SlimefunItem.getByItem(is);\n+            \t\tif(sfi != null && sfi instanceof ChanceDrop) ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27149ee5143f9857805cae025f5e29ef5b2da188"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4MzA0Mg==", "bodyText": "Remove the space before the semicolon.", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449783042", "createdAt": "2020-07-04T15:43:21Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/interfaces/ChanceDrop.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package me.mrCookieSlime.Slimefun.Objects.SlimefunItem.interfaces;\r\n+\r\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ItemAttribute;\r\n+\r\n+\r\n+public interface ChanceDrop extends ItemAttribute {\r\n+\t\r\n+    /**\r\n+     * This method returns the % chance for an item to drop when a creature is killed.\r\n+     */\r\n+    public int getChance() ;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27149ee5143f9857805cae025f5e29ef5b2da188"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNjMzNTcz", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#pullrequestreview-442633573", "createdAt": "2020-07-04T22:06:13Z", "commit": {"oid": "27149ee5143f9857805cae025f5e29ef5b2da188"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQyMjowNjoxM1rOGs-KdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQyMjowNzo0N1rOGs-Kzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwOTAxMw==", "bodyText": "Also: Missing documentation and @author tag.\nShould probably also mark this as a @FunctionalInterface too.", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449809013", "createdAt": "2020-07-04T22:06:13Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/interfaces/ChanceDrop.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package me.mrCookieSlime.Slimefun.Objects.SlimefunItem.interfaces;\r\n+\r\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ItemAttribute;\r\n+\r\n+\r\n+public interface ChanceDrop extends ItemAttribute {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27149ee5143f9857805cae025f5e29ef5b2da188"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwOTA1Ng==", "bodyText": "I think you can merge these two statements.", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449809056", "createdAt": "2020-07-04T22:06:59Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MobDropListener.java", "diffHunk": "@@ -31,11 +33,18 @@ public void onEntityKill(EntityDeathEvent e) {\n         if (e.getEntity().getKiller() != null) {\n             Player p = e.getEntity().getKiller();\n             ItemStack item = p.getInventory().getItemInMainHand();\n-\n+            Random rnd = new Random();\n+            \n             Set<ItemStack> customDrops = SlimefunPlugin.getRegistry().getMobDrops(e.getEntityType());\n-            if (customDrops != null && !customDrops.isEmpty()) {\n-                addDrops(p, customDrops, e.getDrops());\n-            }\n+            if (customDrops != null && !customDrops.isEmpty()) \n+            \tfor(ItemStack is:customDrops)\n+            \t{\n+            \t\tSlimefunItem sfi = SlimefunItem.getByItem(is);\n+            \t\tif(sfi != null && sfi instanceof ChanceDrop) \n+            \t\t\tif(((ChanceDrop)sfi).getChance() >= rnd.nextInt(100)) ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27149ee5143f9857805cae025f5e29ef5b2da188"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwOTA5NQ==", "bodyText": "Also: An instanceof check always returns false for null, so the null check is redundant here.", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449809095", "createdAt": "2020-07-04T22:07:32Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MobDropListener.java", "diffHunk": "@@ -31,11 +33,18 @@ public void onEntityKill(EntityDeathEvent e) {\n         if (e.getEntity().getKiller() != null) {\n             Player p = e.getEntity().getKiller();\n             ItemStack item = p.getInventory().getItemInMainHand();\n-\n+            Random rnd = new Random();\n+            \n             Set<ItemStack> customDrops = SlimefunPlugin.getRegistry().getMobDrops(e.getEntityType());\n-            if (customDrops != null && !customDrops.isEmpty()) {\n-                addDrops(p, customDrops, e.getDrops());\n-            }\n+            if (customDrops != null && !customDrops.isEmpty()) \n+            \tfor(ItemStack is:customDrops)\n+            \t{\n+            \t\tSlimefunItem sfi = SlimefunItem.getByItem(is);\n+            \t\tif(sfi != null && sfi instanceof ChanceDrop) ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27149ee5143f9857805cae025f5e29ef5b2da188"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwOTEwMg==", "bodyText": "ThreadLocalRandom", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449809102", "createdAt": "2020-07-04T22:07:47Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MobDropListener.java", "diffHunk": "@@ -31,11 +33,18 @@ public void onEntityKill(EntityDeathEvent e) {\n         if (e.getEntity().getKiller() != null) {\n             Player p = e.getEntity().getKiller();\n             ItemStack item = p.getInventory().getItemInMainHand();\n-\n+            Random rnd = new Random();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27149ee5143f9857805cae025f5e29ef5b2da188"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "645d73d0efde581faf1e7b9ef076d311a692d49c", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/645d73d0efde581faf1e7b9ef076d311a692d49c", "committedDate": "2020-07-05T14:40:07Z", "message": "Made requested changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3f801d84e5292c65b6ec85fb2942abb3d27ae4e", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b3f801d84e5292c65b6ec85fb2942abb3d27ae4e", "committedDate": "2020-07-05T16:35:40Z", "message": "Made requested changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNjkyOTM2", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#pullrequestreview-442692936", "createdAt": "2020-07-05T17:13:43Z", "commit": {"oid": "b3f801d84e5292c65b6ec85fb2942abb3d27ae4e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNzoxMzo0NFrOGtDp-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxNzoxMzo1MVrOGtDqAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5OTAwMQ==", "bodyText": "Many spaces on this line", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449899001", "createdAt": "2020-07-05T17:13:44Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MobDropListener.java", "diffHunk": "@@ -31,11 +33,16 @@ public void onEntityKill(EntityDeathEvent e) {\n         if (e.getEntity().getKiller() != null) {\n             Player p = e.getEntity().getKiller();\n             ItemStack item = p.getInventory().getItemInMainHand();\n-\n+            int random = ThreadLocalRandom.current().nextInt(100);\n+            \n             Set<ItemStack> customDrops = SlimefunPlugin.getRegistry().getMobDrops(e.getEntityType());\n-            if (customDrops != null && !customDrops.isEmpty()) {\n-                addDrops(p, customDrops, e.getDrops());\n-            }\n+            if (customDrops != null && !customDrops.isEmpty()) \n+            \tfor(ItemStack is : customDrops) {\n+            \t\tSlimefunItem sfi = SlimefunItem.getByItem(is);\n+            \t\tif (sfi instanceof ChanceDrop && ((ChanceDrop)sfi).getChance() >= random) \n+            \t\t\t\taddDrops(p, customDrops, e.getDrops());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3f801d84e5292c65b6ec85fb2942abb3d27ae4e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5OTAwOQ==", "bodyText": "Space after for", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449899009", "createdAt": "2020-07-05T17:13:51Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MobDropListener.java", "diffHunk": "@@ -31,11 +33,16 @@ public void onEntityKill(EntityDeathEvent e) {\n         if (e.getEntity().getKiller() != null) {\n             Player p = e.getEntity().getKiller();\n             ItemStack item = p.getInventory().getItemInMainHand();\n-\n+            int random = ThreadLocalRandom.current().nextInt(100);\n+            \n             Set<ItemStack> customDrops = SlimefunPlugin.getRegistry().getMobDrops(e.getEntityType());\n-            if (customDrops != null && !customDrops.isEmpty()) {\n-                addDrops(p, customDrops, e.getDrops());\n-            }\n+            if (customDrops != null && !customDrops.isEmpty()) \n+            \tfor(ItemStack is : customDrops) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3f801d84e5292c65b6ec85fb2942abb3d27ae4e"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNjMzNjc0", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#pullrequestreview-442633674", "createdAt": "2020-07-04T22:09:08Z", "commit": {"oid": "27149ee5143f9857805cae025f5e29ef5b2da188"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQyMjowOTowOFrOGs-LEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQxODo1NDo1M1rOGtEL3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwOTE2OA==", "bodyText": "Also I'd rather rename this to something like \"RandomMobDrop\" and the method to \"getDropChance()\".", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449809168", "createdAt": "2020-07-04T22:09:08Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/interfaces/ChanceDrop.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package me.mrCookieSlime.Slimefun.Objects.SlimefunItem.interfaces;\r\n+\r\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ItemAttribute;\r\n+\r\n+\r\n+public interface ChanceDrop extends ItemAttribute {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27149ee5143f9857805cae025f5e29ef5b2da188"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkwNzU1Nw==", "bodyText": "There is an @ see which you should use here.", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449907557", "createdAt": "2020-07-05T18:53:18Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/interfaces/ChanceDrop.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package me.mrCookieSlime.Slimefun.Objects.SlimefunItem.interfaces;\r\n+\r\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ItemAttribute;\r\n+\r\n+/**\r\n+ * This interface, when attached to a {@link SlimefunItem}, provides an easy method for adding \r\n+ * a % chance to drop for an {@link SlimefunItem} on {@link entityDeathEvent}, this chance is 0-100\r\n+ * and used in conjunction with the MOB_DROP {@link RecipeType}. \r\n+ * see {@link BasicCircuitBoard} and {@link MobDropListener}.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3f801d84e5292c65b6ec85fb2942abb3d27ae4e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkwNzY3OQ==", "bodyText": "Also, since this is in a for loop... wouldn't this add the entire drops list multiple times instead of the items one by one?", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449907679", "createdAt": "2020-07-05T18:54:53Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MobDropListener.java", "diffHunk": "@@ -31,11 +33,16 @@ public void onEntityKill(EntityDeathEvent e) {\n         if (e.getEntity().getKiller() != null) {\n             Player p = e.getEntity().getKiller();\n             ItemStack item = p.getInventory().getItemInMainHand();\n-\n+            int random = ThreadLocalRandom.current().nextInt(100);\n+            \n             Set<ItemStack> customDrops = SlimefunPlugin.getRegistry().getMobDrops(e.getEntityType());\n-            if (customDrops != null && !customDrops.isEmpty()) {\n-                addDrops(p, customDrops, e.getDrops());\n-            }\n+            if (customDrops != null && !customDrops.isEmpty()) \n+            \tfor(ItemStack is : customDrops) {\n+            \t\tSlimefunItem sfi = SlimefunItem.getByItem(is);\n+            \t\tif (sfi instanceof ChanceDrop && ((ChanceDrop)sfi).getChance() >= random) \n+            \t\t\t\taddDrops(p, customDrops, e.getDrops());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3f801d84e5292c65b6ec85fb2942abb3d27ae4e"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96b4394d7f1819ffacec2afeba3c5220d02afb7e", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/96b4394d7f1819ffacec2afeba3c5220d02afb7e", "committedDate": "2020-07-05T20:45:08Z", "message": "Made requested changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNzA1Mjgz", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#pullrequestreview-442705283", "createdAt": "2020-07-05T20:47:04Z", "commit": {"oid": "96b4394d7f1819ffacec2afeba3c5220d02afb7e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQyMDo0NzowNFrOGtEwtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQyMDo0NzozOFrOGtEw3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNzExMQ==", "bodyText": "No need to even have this CircuitBoard variable at this point anymore. You can just check if sfi is an instance of your Circuit Board, would be much better performance wise since you already done these operations earlier.", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449917111", "createdAt": "2020-07-05T20:47:04Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MobDropListener.java", "diffHunk": "@@ -48,14 +50,20 @@ public void onEntityKill(EntityDeathEvent e) {\n     }\n \n     private void addDrops(Player p, Set<ItemStack> customDrops, List<ItemStack> drops) {\n+    \tint random = ThreadLocalRandom.current().nextInt(100);\n+    \t\n         for (ItemStack drop : customDrops) {\n             if (Slimefun.hasUnlocked(p, drop, true)) {\n-                if (circuitBoard != null && circuitBoard.isItem(drop) && !circuitBoard.isDroppedFromGolems()) {\n+            \tSlimefunItem sfi = SlimefunItem.getByItem(drop);\n+            \tif (sfi instanceof RandomMobDrop && ((RandomMobDrop)sfi).getDropChance() <= random) \n+            \t\tcontinue;\n+            \t\n+                if (circuitBoard != null && circuitBoard.isItem(drop) && !circuitBoard.isDroppedFromGolems()) ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96b4394d7f1819ffacec2afeba3c5220d02afb7e"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNzE1MQ==", "bodyText": "No \"and\" here. The syntax is as follow:\n@ see x\n@ see y\nAnd we usually place it below the @ author tag.", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449917151", "createdAt": "2020-07-05T20:47:38Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/interfaces/RandomMobDrop.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package me.mrCookieSlime.Slimefun.Objects.SlimefunItem.interfaces;\r\n+\r\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ItemAttribute;\r\n+\r\n+/**\r\n+ * This interface, when attached to a {@link SlimefunItem}, provides an easy method for adding \r\n+ * a % chance to drop for an {@link SlimefunItem} on {@link entityDeathEvent}, this chance is 0-100\r\n+ * and used in conjunction with the MOB_DROP {@link RecipeType}. \r\n+ * @see BasicCircuitBoard and @see MobDropListener.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96b4394d7f1819ffacec2afeba3c5220d02afb7e"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43b48b4b3d9b2a2a57009ef5741d40aae4a0bd65", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/43b48b4b3d9b2a2a57009ef5741d40aae4a0bd65", "committedDate": "2020-07-05T20:54:27Z", "message": "Made Requested Changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNzA4MzMw", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#pullrequestreview-442708330", "createdAt": "2020-07-05T21:38:42Z", "commit": {"oid": "43b48b4b3d9b2a2a57009ef5741d40aae4a0bd65"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNzA4NzM4", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#pullrequestreview-442708738", "createdAt": "2020-07-05T21:46:12Z", "commit": {"oid": "43b48b4b3d9b2a2a57009ef5741d40aae4a0bd65"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQyMTo0NjoxMlrOGtFD7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQyMTo0NjoxMlrOGtFD7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkyMjAzMQ==", "bodyText": "Why is this being continued? We want this to drop. You need to negate the isDropped...", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#discussion_r449922031", "createdAt": "2020-07-05T21:46:12Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/MobDropListener.java", "diffHunk": "@@ -48,14 +47,20 @@ public void onEntityKill(EntityDeathEvent e) {\n     }\n \n     private void addDrops(Player p, Set<ItemStack> customDrops, List<ItemStack> drops) {\n+    \tint random = ThreadLocalRandom.current().nextInt(100);\n+    \t\n         for (ItemStack drop : customDrops) {\n             if (Slimefun.hasUnlocked(p, drop, true)) {\n-                if (circuitBoard != null && circuitBoard.isItem(drop) && !circuitBoard.isDroppedFromGolems()) {\n+            \tSlimefunItem sfi = SlimefunItem.getByItem(drop);\n+            \tif (sfi instanceof RandomMobDrop && ((RandomMobDrop)sfi).getDropChance() <= random) \n+            \t\tcontinue;\n+            \t\n+                if (sfi instanceof BasicCircuitBoard  && ((BasicCircuitBoard)sfi).isDroppedFromGolems()) \n                     continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43b48b4b3d9b2a2a57009ef5741d40aae4a0bd65"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "371b283d21ed39648a21cf34aa1a9ac97f186652", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/371b283d21ed39648a21cf34aa1a9ac97f186652", "committedDate": "2020-07-06T23:19:13Z", "message": "Replaced Tabs with Spaces as requested"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "367dd8c9141a874e4b99cabd0b17b14bf3f7dd65", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/367dd8c9141a874e4b99cabd0b17b14bf3f7dd65", "committedDate": "2020-07-07T02:28:41Z", "message": "Negated isDroppedFromGolems"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTg5MzIx", "url": "https://github.com/Slimefun/Slimefun4/pull/2071#pullrequestreview-443589321", "createdAt": "2020-07-07T06:15:48Z", "commit": {"oid": "367dd8c9141a874e4b99cabd0b17b14bf3f7dd65"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2509, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}