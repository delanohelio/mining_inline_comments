{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MzMxNjY0", "number": 2383, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDoyMjoyOFrOEqCkwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMjowMzoyNFrOEqC5EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTE3ODI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/SlimefunGuideListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDoyMjoyOFrOHcDeAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDoyMjoyOFrOHcDeAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3OTAxMA==", "bodyText": "tryOpenGuide sounds a bit better in my opinion.", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499179010", "createdAt": "2020-10-03T20:22:28Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/SlimefunGuideListener.java", "diffHunk": "@@ -72,16 +74,24 @@ else if (openGuide(e, SlimefunGuideLayout.CHEAT_SHEET) == Result.ALLOW) {\n             }\n         }\n     }\n+    \n+    @ParametersAreNonnullByDefault\n+    private void openGuide(Player p, PlayerRightClickEvent e, SlimefunGuideLayout layout) {\n+        GuideOpenEvent event = new GuideOpenEvent(p, e.getItem()) ;\n+        Bukkit.getPluginManager().callEvent(event);\n+        \n+        if (!event.isCancelled()) {\n+            e.cancel();\n+            SlimefunGuide.openGuide(p, layout);\n+        } \n+    } \n \n     @Nonnull\n     @ParametersAreNonnullByDefault\n-    private Result openGuide(PlayerRightClickEvent e, SlimefunGuideLayout layout) {\n-        Player p = e.getPlayer();\n+    private Result tryGuide(Player p, PlayerRightClickEvent e, SlimefunGuideLayout layout) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e038d1cc8191b1b3009d86ec7a6d896c3757606"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTE3ODQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/GuideOpenEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDoyMjo0MlrOHcDeEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDoyMjo0MlrOHcDeEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3OTAyNw==", "bodyText": "SlimefunGuideOpenEvent maybe?", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499179027", "createdAt": "2020-10-03T20:22:42Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/GuideOpenEvent.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\r\n+\r\n+import javax.annotation.Nonnull;\r\n+\r\n+import org.apache.commons.lang.Validate;\r\n+import org.bukkit.entity.Player;\r\n+import org.bukkit.event.Cancellable;\r\n+import org.bukkit.event.Event;\r\n+import org.bukkit.event.HandlerList;\r\n+import org.bukkit.inventory.ItemStack;\r\n+\r\n+/**\r\n+ * This {@link Event} is called whenever a {@link Player} tries to open the Slimefun Guide book. \r\n+ * \r\n+ * @author Linox\r\n+ *\r\n+ */\r\n+public class GuideOpenEvent extends Event implements Cancellable {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e038d1cc8191b1b3009d86ec7a6d896c3757606"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTE3ODU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/GuideOpenEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDoyMzoxMVrOHcDeLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDoyMzoxMVrOHcDeLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3OTA1Mw==", "bodyText": "Some docs comments for these two methods would be nice.", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499179053", "createdAt": "2020-10-03T20:23:11Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/GuideOpenEvent.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\r\n+\r\n+import javax.annotation.Nonnull;\r\n+\r\n+import org.apache.commons.lang.Validate;\r\n+import org.bukkit.entity.Player;\r\n+import org.bukkit.event.Cancellable;\r\n+import org.bukkit.event.Event;\r\n+import org.bukkit.event.HandlerList;\r\n+import org.bukkit.inventory.ItemStack;\r\n+\r\n+/**\r\n+ * This {@link Event} is called whenever a {@link Player} tries to open the Slimefun Guide book. \r\n+ * \r\n+ * @author Linox\r\n+ *\r\n+ */\r\n+public class GuideOpenEvent extends Event implements Cancellable {\r\n+\r\n+    private static final HandlerList handlers = new HandlerList();\r\n+\r\n+    private final Player player;\r\n+    private final ItemStack guide;\r\n+    private boolean cancelled;\r\n+\r\n+    public GuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide) {\r\n+        Validate.notNull(p, \"The Player cannot be null\");\r\n+        Validate.notNull(guide, \"Guide cannot be null\");\r\n+        this.player = p;\r\n+        this.guide = guide;\r\n+    }\r\n+\r\n+    @Nonnull\r\n+    public Player getPlayer() {\r\n+        return player;\r\n+    }\r\n+\r\n+    @Nonnull\r\n+    public ItemStack getGuide() {\r\n+        return guide;\r\n+    }\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e038d1cc8191b1b3009d86ec7a6d896c3757606"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTE3ODg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/GuideOpenEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDoyMzozMlrOHcDeUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDoyMzozMlrOHcDeUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE3OTA4OQ==", "bodyText": "I think a SlimefunGuideLayout with respective getters/setters would be great too", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499179089", "createdAt": "2020-10-03T20:23:32Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/GuideOpenEvent.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\r\n+\r\n+import javax.annotation.Nonnull;\r\n+\r\n+import org.apache.commons.lang.Validate;\r\n+import org.bukkit.entity.Player;\r\n+import org.bukkit.event.Cancellable;\r\n+import org.bukkit.event.Event;\r\n+import org.bukkit.event.HandlerList;\r\n+import org.bukkit.inventory.ItemStack;\r\n+\r\n+/**\r\n+ * This {@link Event} is called whenever a {@link Player} tries to open the Slimefun Guide book. \r\n+ * \r\n+ * @author Linox\r\n+ *\r\n+ */\r\n+public class GuideOpenEvent extends Event implements Cancellable {\r\n+\r\n+    private static final HandlerList handlers = new HandlerList();\r\n+\r\n+    private final Player player;\r\n+    private final ItemStack guide;\r\n+    private boolean cancelled;\r\n+\r\n+    public GuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e038d1cc8191b1b3009d86ec7a6d896c3757606"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTE5ODAwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/SlimefunGuideOpenEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDo1ODo0OFrOHcDnlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDo1ODo0OFrOHcDnlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTQ2Mw==", "bodyText": "Missing @return tag", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499181463", "createdAt": "2020-10-03T20:58:48Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/SlimefunGuideOpenEvent.java", "diffHunk": "@@ -9,36 +9,59 @@\n import org.bukkit.event.HandlerList;\r\n import org.bukkit.inventory.ItemStack;\r\n \r\n+import io.github.thebusybiscuit.slimefun4.core.guide.SlimefunGuideLayout;\r\n+\r\n /**\r\n  * This {@link Event} is called whenever a {@link Player} tries to open the Slimefun Guide book. \r\n  * \r\n  * @author Linox\r\n  *\r\n+ * @see SlimefunGuideLayout\r\n  */\r\n-public class GuideOpenEvent extends Event implements Cancellable {\r\n+public class SlimefunGuideOpenEvent extends Event implements Cancellable {\r\n \r\n     private static final HandlerList handlers = new HandlerList();\r\n \r\n     private final Player player;\r\n     private final ItemStack guide;\r\n+    private final SlimefunGuideLayout layout;\r\n     private boolean cancelled;\r\n \r\n-    public GuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide) {\r\n+    public SlimefunGuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide, @Nonnull SlimefunGuideLayout layout) {\r\n         Validate.notNull(p, \"The Player cannot be null\");\r\n         Validate.notNull(guide, \"Guide cannot be null\");\r\n+        Validate.notNull(layout, \"Layout cannot be null\");\r\n         this.player = p;\r\n         this.guide = guide;\r\n+        this.layout = layout;\r\n     }\r\n \r\n+    /**\r\n+     * This returns the {@link Player} that tries to open \r\n+     * the Slimefun Guide.\r\n+     */\r\n     @Nonnull\r\n     public Player getPlayer() {\r\n         return player;\r\n     }\r\n \r\n+    /**\r\n+     * This returns the {@link ItemStack} that {@link Player} \r\n+     * tries to open the Slimefun Guide with.\r\n+     */\r\n     @Nonnull\r\n     public ItemStack getGuide() {\r\n         return guide;\r\n     }\r\n+    \r\n+    /**\r\n+     * This returns the {@link SlimefunGuideLayout} of the Slimefun Guide\r\n+     * that {@link Player} tries to open.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41fc987083d4dae8c171282518832fd26a2d5349"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTE5ODAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/SlimefunGuideOpenEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDo1ODo1MVrOHcDnmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDo1ODo1MVrOHcDnmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTQ2Ng==", "bodyText": "Missing @return tag", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499181466", "createdAt": "2020-10-03T20:58:51Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/SlimefunGuideOpenEvent.java", "diffHunk": "@@ -9,36 +9,59 @@\n import org.bukkit.event.HandlerList;\r\n import org.bukkit.inventory.ItemStack;\r\n \r\n+import io.github.thebusybiscuit.slimefun4.core.guide.SlimefunGuideLayout;\r\n+\r\n /**\r\n  * This {@link Event} is called whenever a {@link Player} tries to open the Slimefun Guide book. \r\n  * \r\n  * @author Linox\r\n  *\r\n+ * @see SlimefunGuideLayout\r\n  */\r\n-public class GuideOpenEvent extends Event implements Cancellable {\r\n+public class SlimefunGuideOpenEvent extends Event implements Cancellable {\r\n \r\n     private static final HandlerList handlers = new HandlerList();\r\n \r\n     private final Player player;\r\n     private final ItemStack guide;\r\n+    private final SlimefunGuideLayout layout;\r\n     private boolean cancelled;\r\n \r\n-    public GuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide) {\r\n+    public SlimefunGuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide, @Nonnull SlimefunGuideLayout layout) {\r\n         Validate.notNull(p, \"The Player cannot be null\");\r\n         Validate.notNull(guide, \"Guide cannot be null\");\r\n+        Validate.notNull(layout, \"Layout cannot be null\");\r\n         this.player = p;\r\n         this.guide = guide;\r\n+        this.layout = layout;\r\n     }\r\n \r\n+    /**\r\n+     * This returns the {@link Player} that tries to open \r\n+     * the Slimefun Guide.\r\n+     */\r\n     @Nonnull\r\n     public Player getPlayer() {\r\n         return player;\r\n     }\r\n \r\n+    /**\r\n+     * This returns the {@link ItemStack} that {@link Player} \r\n+     * tries to open the Slimefun Guide with.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41fc987083d4dae8c171282518832fd26a2d5349"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTE5ODA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/SlimefunGuideOpenEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDo1ODo1NVrOHcDnnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDo1ODo1NVrOHcDnnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTQ3MQ==", "bodyText": "Missing @return tag", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499181471", "createdAt": "2020-10-03T20:58:55Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/SlimefunGuideOpenEvent.java", "diffHunk": "@@ -9,36 +9,59 @@\n import org.bukkit.event.HandlerList;\r\n import org.bukkit.inventory.ItemStack;\r\n \r\n+import io.github.thebusybiscuit.slimefun4.core.guide.SlimefunGuideLayout;\r\n+\r\n /**\r\n  * This {@link Event} is called whenever a {@link Player} tries to open the Slimefun Guide book. \r\n  * \r\n  * @author Linox\r\n  *\r\n+ * @see SlimefunGuideLayout\r\n  */\r\n-public class GuideOpenEvent extends Event implements Cancellable {\r\n+public class SlimefunGuideOpenEvent extends Event implements Cancellable {\r\n \r\n     private static final HandlerList handlers = new HandlerList();\r\n \r\n     private final Player player;\r\n     private final ItemStack guide;\r\n+    private final SlimefunGuideLayout layout;\r\n     private boolean cancelled;\r\n \r\n-    public GuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide) {\r\n+    public SlimefunGuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide, @Nonnull SlimefunGuideLayout layout) {\r\n         Validate.notNull(p, \"The Player cannot be null\");\r\n         Validate.notNull(guide, \"Guide cannot be null\");\r\n+        Validate.notNull(layout, \"Layout cannot be null\");\r\n         this.player = p;\r\n         this.guide = guide;\r\n+        this.layout = layout;\r\n     }\r\n \r\n+    /**\r\n+     * This returns the {@link Player} that tries to open \r\n+     * the Slimefun Guide.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41fc987083d4dae8c171282518832fd26a2d5349"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTIwMDYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/SlimefunGuideListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMTowNDozNFrOHcDo2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMTowNDozNFrOHcDo2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTc4NQ==", "bodyText": "Haha, build is failing.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    GuideOpenEvent event = new GuideOpenEvent(p, e.getItem(), layout) ;\n          \n          \n            \n                    SlimefunGuideOpenEvent event = new SlimefunGuideOpenEvent(p, e.getItem(), layout);", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499181785", "createdAt": "2020-10-03T21:04:34Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/SlimefunGuideListener.java", "diffHunk": "@@ -72,16 +74,24 @@ else if (openGuide(e, SlimefunGuideLayout.CHEAT_SHEET) == Result.ALLOW) {\n             }\n         }\n     }\n+    \n+    @ParametersAreNonnullByDefault\n+    private void openGuide(Player p, PlayerRightClickEvent e, SlimefunGuideLayout layout) {\n+        GuideOpenEvent event = new GuideOpenEvent(p, e.getItem(), layout) ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc999ae60d928569af82045be75e1bb07cf2b23b"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTIwMDY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/SlimefunGuideListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMTowNDo1M1rOHcDo5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMTowNDo1M1rOHcDo5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTc5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import io.github.thebusybiscuit.slimefun4.api.events.GuideOpenEvent;\n          \n          \n            \n            import io.github.thebusybiscuit.slimefun4.api.events.SlimefunGuideOpenEvent;", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499181798", "createdAt": "2020-10-03T21:04:53Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/SlimefunGuideListener.java", "diffHunk": "@@ -11,6 +12,7 @@\n import org.bukkit.event.player.PlayerJoinEvent;\n import org.bukkit.inventory.ItemStack;\n \n+import io.github.thebusybiscuit.slimefun4.api.events.GuideOpenEvent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc999ae60d928569af82045be75e1bb07cf2b23b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTIzMDI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/SlimefunGuideOpenEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMjowMzoyNFrOHcD3Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMjowMzoyNFrOHcD3Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4NTQ1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.layout = layout;\n          \n          \n            \n                    Validate.notNull(layout, \"You must specify a layout that is not-null!\");\n          \n          \n            \n                    this.layout = layout;", "url": "https://github.com/Slimefun/Slimefun4/pull/2383#discussion_r499185454", "createdAt": "2020-10-03T22:03:24Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/SlimefunGuideOpenEvent.java", "diffHunk": "@@ -0,0 +1,103 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\r\n+\r\n+import javax.annotation.Nonnull;\r\n+\r\n+import org.apache.commons.lang.Validate;\r\n+import org.bukkit.entity.Player;\r\n+import org.bukkit.event.Cancellable;\r\n+import org.bukkit.event.Event;\r\n+import org.bukkit.event.HandlerList;\r\n+import org.bukkit.inventory.ItemStack;\r\n+\r\n+import io.github.thebusybiscuit.slimefun4.core.guide.SlimefunGuideLayout;\r\n+\r\n+/**\r\n+ * This {@link Event} is called whenever a {@link Player} tries to open the Slimefun Guide book. \r\n+ * \r\n+ * @author Linox\r\n+ *\r\n+ * @see SlimefunGuideLayout\r\n+ */\r\n+public class SlimefunGuideOpenEvent extends Event implements Cancellable {\r\n+\r\n+    private static final HandlerList handlers = new HandlerList();\r\n+\r\n+    private final Player player;\r\n+    private final ItemStack guide;\r\n+    private SlimefunGuideLayout layout;\r\n+    private boolean cancelled;\r\n+\r\n+    public SlimefunGuideOpenEvent(@Nonnull Player p, @Nonnull ItemStack guide, @Nonnull SlimefunGuideLayout layout) {\r\n+        Validate.notNull(p, \"The Player cannot be null\");\r\n+        Validate.notNull(guide, \"Guide cannot be null\");\r\n+        Validate.notNull(layout, \"Layout cannot be null\");\r\n+        this.player = p;\r\n+        this.guide = guide;\r\n+        this.layout = layout;\r\n+    }\r\n+\r\n+    /**\r\n+     * This returns the {@link Player} that tries to open \r\n+     * the Slimefun Guide.\r\n+     *\r\n+     * @return The {@link Player}\r\n+     */\r\n+    @Nonnull\r\n+    public Player getPlayer() {\r\n+        return player;\r\n+    }\r\n+\r\n+    /**\r\n+     * This returns the {@link ItemStack} that {@link Player} \r\n+     * tries to open the Slimefun Guide with.\r\n+     *\r\n+     * @return The {@link ItemStack}\r\n+     */\r\n+    @Nonnull\r\n+    public ItemStack getGuide() {\r\n+        return guide;\r\n+    }\r\n+    \r\n+    /**\r\n+     * This returns the {@link SlimefunGuideLayout} of the Slimefun Guide\r\n+     * that {@link Player} tries to open.\r\n+     *\r\n+     * @return The {@link SlimefunGuideLayout}\r\n+     */\r\n+    @Nonnull\r\n+    public SlimefunGuideLayout getGuideLayout() {\r\n+        return layout;\r\n+    }\r\n+    \r\n+    /**\r\n+     * Changes the {@link SlimefunGuideLayout} that was tried to be opened with.\r\n+     *\r\n+     * @param layout\r\n+     *                   The new {@link SlimefunGuideLayout}\r\n+     */\r\n+    public void setGuideLayout(@Nonnull SlimefunGuideLayout layout) {\r\n+        this.layout = layout;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca76411c403ec4ee9d6a314b8871a538b8236b4a"}, "originalPosition": 79}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 201, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}