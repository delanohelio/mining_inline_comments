{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2MzM3Mzk3", "number": 2270, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTowODowOVrOEeWOEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNjowMDowMFrOEeXmjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjU2Nzg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTowODowOVrOHJ8ufg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTowODowOVrOHJ8ufg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NDE3NA==", "bodyText": "Please give this variable a more meaningful name. nextBlock maybe?", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480194174", "createdAt": "2020-08-31T15:08:09Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -127,31 +127,39 @@ protected void tick(Block b) {\n                     if (!menu.fits(bucket.get(), getOutputSlots())) {\n                         return;\n                     }\n-\n+                    \n+                    Block consume = findFluid(fluid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjU2OTA4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTowODozMVrOHJ8vVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTowODozMVrOHJ8vVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NDM4OA==", "bodyText": "findNextFluid might be better here", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480194388", "createdAt": "2020-08-31T15:08:31Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -127,31 +127,39 @@ protected void tick(Block b) {\n                     if (!menu.fits(bucket.get(), getOutputSlots())) {\n                         return;\n                     }\n-\n+                    \n+                    Block consume = findFluid(fluid);\n+                    if (consume == null) return;\n+              \n                     removeCharge(b.getLocation(), ENERGY_CONSUMPTION);\n                     menu.consumeItem(slot);\n                     menu.pushItem(bucket.get().clone(), getOutputSlots());\n-                    consumeFluid(fluid);\n-\n+                    consume.setType(Material.AIR);\n                     return;\n                 }\n             }\n         }\n     }\n \n-    private void consumeFluid(Block fluid) {\n-        if (fluid.isLiquid()) {\n-            if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n-                // With water we can be sure to find an infinite source whenever we go\n-                // further than 2 blocks, so we can just remove the water here and save\n-                // outselves all of that computing...\n-                fluid.setType(Material.AIR);\n-            }\n-            else {\n-                List<Block> list = Vein.find(fluid, RANGE, block -> isLiquid(block) && block.getType() == fluid.getType());\n-                list.get(list.size() - 1).setType(Material.AIR);\n+    private Block findFluid(Block fluid) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjU3NjAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNToxMDoxNFrOHJ8zhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNToxMDoxNFrOHJ8zhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NTQ2Mw==", "bodyText": "We should probably also do an isSource check for fluid here now that I think about it...\nOtherwise people will have infinite water sources, even if the water source isn't infinite.\nSimply checking whether the block below (fluid) is a source block should be fine though.", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480195463", "createdAt": "2020-08-31T15:10:14Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -127,31 +127,39 @@ protected void tick(Block b) {\n                     if (!menu.fits(bucket.get(), getOutputSlots())) {\n                         return;\n                     }\n-\n+                    \n+                    Block consume = findFluid(fluid);\n+                    if (consume == null) return;\n+              \n                     removeCharge(b.getLocation(), ENERGY_CONSUMPTION);\n                     menu.consumeItem(slot);\n                     menu.pushItem(bucket.get().clone(), getOutputSlots());\n-                    consumeFluid(fluid);\n-\n+                    consume.setType(Material.AIR);\n                     return;\n                 }\n             }\n         }\n     }\n \n-    private void consumeFluid(Block fluid) {\n-        if (fluid.isLiquid()) {\n-            if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n-                // With water we can be sure to find an infinite source whenever we go\n-                // further than 2 blocks, so we can just remove the water here and save\n-                // outselves all of that computing...\n-                fluid.setType(Material.AIR);\n-            }\n-            else {\n-                List<Block> list = Vein.find(fluid, RANGE, block -> isLiquid(block) && block.getType() == fluid.getType());\n-                list.get(list.size() - 1).setType(Material.AIR);\n+    private Block findFluid(Block fluid) {\n+        if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n+            // With water we can be sure to find an infinite source whenever we go\n+            // further than 2 blocks, so we can just remove the water here and save\n+            // ourselves all of that computing...\n+            return fluid;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjU3NjgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNToxMDoyNlrOHJ80CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNToxMDoyNlrOHJ80CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NTU5Mw==", "bodyText": "else if", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480195593", "createdAt": "2020-08-31T15:10:26Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -127,31 +127,39 @@ protected void tick(Block b) {\n                     if (!menu.fits(bucket.get(), getOutputSlots())) {\n                         return;\n                     }\n-\n+                    \n+                    Block consume = findFluid(fluid);\n+                    if (consume == null) return;\n+              \n                     removeCharge(b.getLocation(), ENERGY_CONSUMPTION);\n                     menu.consumeItem(slot);\n                     menu.pushItem(bucket.get().clone(), getOutputSlots());\n-                    consumeFluid(fluid);\n-\n+                    consume.setType(Material.AIR);\n                     return;\n                 }\n             }\n         }\n     }\n \n-    private void consumeFluid(Block fluid) {\n-        if (fluid.isLiquid()) {\n-            if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n-                // With water we can be sure to find an infinite source whenever we go\n-                // further than 2 blocks, so we can just remove the water here and save\n-                // outselves all of that computing...\n-                fluid.setType(Material.AIR);\n-            }\n-            else {\n-                List<Block> list = Vein.find(fluid, RANGE, block -> isLiquid(block) && block.getType() == fluid.getType());\n-                list.get(list.size() - 1).setType(Material.AIR);\n+    private Block findFluid(Block fluid) {\n+        if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n+            // With water we can be sure to find an infinite source whenever we go\n+            // further than 2 blocks, so we can just remove the water here and save\n+            // ourselves all of that computing...\n+            return fluid;\n+        }\n+        \n+        if (fluid.getType() == Material.LAVA) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjU4MDA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNToxMToxMVrOHJ81-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNjowODo1NFrOHJ_I-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NjA4OA==", "bodyText": "Why not Block#isLiquid() ?", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480196088", "createdAt": "2020-08-31T15:11:11Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -166,21 +174,21 @@ else if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE\n         }\n     }\n \n-    private boolean isLiquid(Block block) {\n-        if (block.isLiquid()) {\n+    private boolean isSource(Block block) {\n+        if (isLiquid(block.getType())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIyMDA3Nw==", "bodyText": "That only returns true to lava and water. But we also want true for bubble columns.", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480220077", "createdAt": "2020-08-31T15:45:52Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -166,21 +174,21 @@ else if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE\n         }\n     }\n \n-    private boolean isLiquid(Block block) {\n-        if (block.isLiquid()) {\n+    private boolean isSource(Block block) {\n+        if (isLiquid(block.getType())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NjA4OA=="}, "originalCommit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIyODIxOQ==", "bodyText": "Block#isLiquid() returns true for WATER, LAVA and BUBBLE_COLUMN.\nIt does the exact same like your method, only that it is a wrapper for NMS code which checks a flag. But that flag is set to true for all three.", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480228219", "createdAt": "2020-08-31T15:59:28Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -166,21 +174,21 @@ else if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE\n         }\n     }\n \n-    private boolean isLiquid(Block block) {\n-        if (block.isLiquid()) {\n+    private boolean isSource(Block block) {\n+        if (isLiquid(block.getType())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NjA4OA=="}, "originalCommit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIzMjAzNQ==", "bodyText": "Well then spigot javadocs aren't complete...", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480232035", "createdAt": "2020-08-31T16:05:58Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -166,21 +174,21 @@ else if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE\n         }\n     }\n \n-    private boolean isLiquid(Block block) {\n-        if (block.isLiquid()) {\n+    private boolean isSource(Block block) {\n+        if (isLiquid(block.getType())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NjA4OA=="}, "originalCommit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIzMzcyMA==", "bodyText": "To be honest... Does that really surprise you? :LUL:", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480233720", "createdAt": "2020-08-31T16:08:54Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -166,21 +174,21 @@ else if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE\n         }\n     }\n \n-    private boolean isLiquid(Block block) {\n-        if (block.isLiquid()) {\n+    private boolean isSource(Block block) {\n+        if (isLiquid(block.getType())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NjA4OA=="}, "originalCommit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjc5NDM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNjowMDowMFrOHJ-02Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNjowMjozMVrOHJ-6lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIyODU2OQ==", "bodyText": "Please follow the existing formatting, the else if should go on the next line.", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480228569", "createdAt": "2020-08-31T16:00:00Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -127,31 +127,40 @@ protected void tick(Block b) {\n                     if (!menu.fits(bucket.get(), getOutputSlots())) {\n                         return;\n                     }\n-\n+                    \n+                    Block nextFluid = findNextFluid(fluid);\n+                    if (nextFluid == null) return;\n+              \n                     removeCharge(b.getLocation(), ENERGY_CONSUMPTION);\n                     menu.consumeItem(slot);\n                     menu.pushItem(bucket.get().clone(), getOutputSlots());\n-                    consumeFluid(fluid);\n-\n+                    nextFluid.setType(Material.AIR);\n                     return;\n                 }\n             }\n         }\n     }\n \n-    private void consumeFluid(Block fluid) {\n-        if (fluid.isLiquid()) {\n-            if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n-                // With water we can be sure to find an infinite source whenever we go\n-                // further than 2 blocks, so we can just remove the water here and save\n-                // outselves all of that computing...\n-                fluid.setType(Material.AIR);\n+    private Block findNextFluid(Block fluid) {\n+        if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n+            // With water we can be sure to find an infinite source whenever we go\n+            // further than 2 blocks, so we can just remove the water here and save\n+            // ourselves all of that computing...\n+            if (isSource(fluid)) {\n+                return fluid;\n             }\n-            else {\n-                List<Block> list = Vein.find(fluid, RANGE, block -> isLiquid(block) && block.getType() == fluid.getType());\n-                list.get(list.size() - 1).setType(Material.AIR);\n+            \n+        } else if (fluid.getType() == Material.LAVA) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4346d374d8ac51fc96baa5f1dd6d6406672b2ecf"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIzMDAzNg==", "bodyText": "Ugh none of the changes I contributed to the plugin had else's in next lines lol But sure.", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480230036", "createdAt": "2020-08-31T16:02:31Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -127,31 +127,40 @@ protected void tick(Block b) {\n                     if (!menu.fits(bucket.get(), getOutputSlots())) {\n                         return;\n                     }\n-\n+                    \n+                    Block nextFluid = findNextFluid(fluid);\n+                    if (nextFluid == null) return;\n+              \n                     removeCharge(b.getLocation(), ENERGY_CONSUMPTION);\n                     menu.consumeItem(slot);\n                     menu.pushItem(bucket.get().clone(), getOutputSlots());\n-                    consumeFluid(fluid);\n-\n+                    nextFluid.setType(Material.AIR);\n                     return;\n                 }\n             }\n         }\n     }\n \n-    private void consumeFluid(Block fluid) {\n-        if (fluid.isLiquid()) {\n-            if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n-                // With water we can be sure to find an infinite source whenever we go\n-                // further than 2 blocks, so we can just remove the water here and save\n-                // outselves all of that computing...\n-                fluid.setType(Material.AIR);\n+    private Block findNextFluid(Block fluid) {\n+        if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n+            // With water we can be sure to find an infinite source whenever we go\n+            // further than 2 blocks, so we can just remove the water here and save\n+            // ourselves all of that computing...\n+            if (isSource(fluid)) {\n+                return fluid;\n             }\n-            else {\n-                List<Block> list = Vein.find(fluid, RANGE, block -> isLiquid(block) && block.getType() == fluid.getType());\n-                list.get(list.size() - 1).setType(Material.AIR);\n+            \n+        } else if (fluid.getType() == Material.LAVA) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIyODU2OQ=="}, "originalCommit": {"oid": "4346d374d8ac51fc96baa5f1dd6d6406672b2ecf"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 321, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}