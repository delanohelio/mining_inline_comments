{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0ODQ2NTg1", "number": 2648, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDoyMTo1MlrOFIl4jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzo1NjoyMFrOFIqSVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTUzNjEzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDoyMTo1MlrOIKmJow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDozMDo1MFrOIKmaPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4MTczMQ==", "bodyText": "I think this unholy abomination of new lines justifies to have its own dedicated method.", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r547981731", "createdAt": "2020-12-23T14:21:52Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -47,7 +47,12 @@ public void stomp(EntityDamageEvent fallDamageEvent) {\n         p.setVelocity(new Vector(0, 0.7, 0));\n \n         for (Entity n : p.getNearbyEntities(4, 4, 4)) {\n-            if (n instanceof LivingEntity && n.isValid() && !n.getUniqueId().equals(p.getUniqueId())) {\n+            if (n instanceof LivingEntity\n+                && n.isValid()\n+                && !n.getUniqueId().equals(p.getUniqueId())\n+                && ((LivingEntity) n).isCollidable()\n+                && n.hasGravity()\n+            ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2872cf8a2e832267f6a7f1deed1c580940af790b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4MjQzMA==", "bodyText": "\"abomination\"\nyou seen a few lines down? 181 chars on a line monkaS", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r547982430", "createdAt": "2020-12-23T14:23:23Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -47,7 +47,12 @@ public void stomp(EntityDamageEvent fallDamageEvent) {\n         p.setVelocity(new Vector(0, 0.7, 0));\n \n         for (Entity n : p.getNearbyEntities(4, 4, 4)) {\n-            if (n instanceof LivingEntity && n.isValid() && !n.getUniqueId().equals(p.getUniqueId())) {\n+            if (n instanceof LivingEntity\n+                && n.isValid()\n+                && !n.getUniqueId().equals(p.getUniqueId())\n+                && ((LivingEntity) n).isCollidable()\n+                && n.hasGravity()\n+            ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4MTczMQ=="}, "originalCommit": {"oid": "2872cf8a2e832267f6a7f1deed1c580940af790b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4NTk4Mg==", "bodyText": "Still, putting this statement into its own method would also allow for flexibility in case a sub implementation wants to add additional checks.", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r547985982", "createdAt": "2020-12-23T14:30:50Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -47,7 +47,12 @@ public void stomp(EntityDamageEvent fallDamageEvent) {\n         p.setVelocity(new Vector(0, 0.7, 0));\n \n         for (Entity n : p.getNearbyEntities(4, 4, 4)) {\n-            if (n instanceof LivingEntity && n.isValid() && !n.getUniqueId().equals(p.getUniqueId())) {\n+            if (n instanceof LivingEntity\n+                && n.isValid()\n+                && !n.getUniqueId().equals(p.getUniqueId())\n+                && ((LivingEntity) n).isCollidable()\n+                && n.hasGravity()\n+            ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4MTczMQ=="}, "originalCommit": {"oid": "2872cf8a2e832267f6a7f1deed1c580940af790b"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTU3ODY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDozNToyOFrOIKmiNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDo0MzoxMVrOIKmvWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4ODAyMg==", "bodyText": "changes p to player but b not to block?", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r547988022", "createdAt": "2020-12-23T14:35:28Z", "author": {"login": "J3fftw1"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -37,54 +39,49 @@ public StomperBoots(Category category, SlimefunItemStack item, RecipeType recipe\n \n     /**\n      * This will apply the \"stomp\" effect to the given {@link EntityDamageEvent}.\n-     * \n+     *\n      * @param fallDamageEvent\n      *            The {@link EntityDamageEvent} in which the {@link Player} has taken fall damage\n      */\n     public void stomp(EntityDamageEvent fallDamageEvent) {\n-        Player p = (Player) fallDamageEvent.getEntity();\n-        p.getWorld().playSound(p.getLocation(), Sound.ENTITY_ZOMBIE_BREAK_WOODEN_DOOR, 1F, 2F);\n-        p.setVelocity(new Vector(0, 0.7, 0));\n+        Player player = (Player) fallDamageEvent.getEntity();\n+        player.getWorld().playSound(player.getLocation(), Sound.ENTITY_ZOMBIE_BREAK_WOODEN_DOOR, 1F, 2F);\n+        player.setVelocity(new Vector(0, 0.7, 0));\n \n-        for (Entity n : p.getNearbyEntities(4, 4, 4)) {\n-            if (n instanceof LivingEntity\n-                && n.isValid()\n-                && !n.getUniqueId().equals(p.getUniqueId())\n-                && ((LivingEntity) n).isCollidable()\n-                && n.hasGravity()\n-            ) {\n-                Vector velocity = getShockwave(p.getLocation(), n.getLocation());\n-                n.setVelocity(velocity);\n+        for (Entity entity : player.getNearbyEntities(4, 4, 4)) {\n+            if (entity instanceof LivingEntity && canMoveEntity((LivingEntity) entity, player)) {\n+                Vector velocity = getShockwave(player.getLocation(), entity.getLocation());\n+                entity.setVelocity(velocity);\n \n                 // Check if it's not a Player or if PvP is enabled\n-                if (!(n instanceof Player) || (p.getWorld().getPVP() && SlimefunPlugin.getProtectionManager().hasPermission(p, n.getLocation(), ProtectableAction.ATTACK_PLAYER))) {\n-                    EntityDamageByEntityEvent event = new EntityDamageByEntityEvent(p, n, DamageCause.ENTITY_ATTACK, fallDamageEvent.getDamage() / 2);\n+                if (!(entity instanceof Player) || (player.getWorld().getPVP() && SlimefunPlugin.getProtectionManager().hasPermission(player, entity.getLocation(), ProtectableAction.ATTACK_PLAYER))) {\n+                    EntityDamageByEntityEvent event = new EntityDamageByEntityEvent(player, entity, DamageCause.ENTITY_ATTACK, fallDamageEvent.getDamage() / 2);\n                     Bukkit.getPluginManager().callEvent(event);\n \n                     if (!event.isCancelled()) {\n-                        ((LivingEntity) n).damage(event.getDamage());\n+                        ((LivingEntity) entity).damage(event.getDamage());\n                     }\n                 }\n             }\n         }\n \n         for (BlockFace face : BlockFace.values()) {\n-            Block b = p.getLocation().getBlock().getRelative(BlockFace.DOWN).getRelative(face);\n-            p.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, b.getType());\n+            Block b = player.getLocation().getBlock().getRelative(BlockFace.DOWN).getRelative(face);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00c233dee59d1160e60513bea50439502eeb7818"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4ODMyNg==", "bodyText": "reeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee leave me alone. Was just changing the shit associated with my method. Also b is a bit clearer than n or p", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r547988326", "createdAt": "2020-12-23T14:36:10Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -37,54 +39,49 @@ public StomperBoots(Category category, SlimefunItemStack item, RecipeType recipe\n \n     /**\n      * This will apply the \"stomp\" effect to the given {@link EntityDamageEvent}.\n-     * \n+     *\n      * @param fallDamageEvent\n      *            The {@link EntityDamageEvent} in which the {@link Player} has taken fall damage\n      */\n     public void stomp(EntityDamageEvent fallDamageEvent) {\n-        Player p = (Player) fallDamageEvent.getEntity();\n-        p.getWorld().playSound(p.getLocation(), Sound.ENTITY_ZOMBIE_BREAK_WOODEN_DOOR, 1F, 2F);\n-        p.setVelocity(new Vector(0, 0.7, 0));\n+        Player player = (Player) fallDamageEvent.getEntity();\n+        player.getWorld().playSound(player.getLocation(), Sound.ENTITY_ZOMBIE_BREAK_WOODEN_DOOR, 1F, 2F);\n+        player.setVelocity(new Vector(0, 0.7, 0));\n \n-        for (Entity n : p.getNearbyEntities(4, 4, 4)) {\n-            if (n instanceof LivingEntity\n-                && n.isValid()\n-                && !n.getUniqueId().equals(p.getUniqueId())\n-                && ((LivingEntity) n).isCollidable()\n-                && n.hasGravity()\n-            ) {\n-                Vector velocity = getShockwave(p.getLocation(), n.getLocation());\n-                n.setVelocity(velocity);\n+        for (Entity entity : player.getNearbyEntities(4, 4, 4)) {\n+            if (entity instanceof LivingEntity && canMoveEntity((LivingEntity) entity, player)) {\n+                Vector velocity = getShockwave(player.getLocation(), entity.getLocation());\n+                entity.setVelocity(velocity);\n \n                 // Check if it's not a Player or if PvP is enabled\n-                if (!(n instanceof Player) || (p.getWorld().getPVP() && SlimefunPlugin.getProtectionManager().hasPermission(p, n.getLocation(), ProtectableAction.ATTACK_PLAYER))) {\n-                    EntityDamageByEntityEvent event = new EntityDamageByEntityEvent(p, n, DamageCause.ENTITY_ATTACK, fallDamageEvent.getDamage() / 2);\n+                if (!(entity instanceof Player) || (player.getWorld().getPVP() && SlimefunPlugin.getProtectionManager().hasPermission(player, entity.getLocation(), ProtectableAction.ATTACK_PLAYER))) {\n+                    EntityDamageByEntityEvent event = new EntityDamageByEntityEvent(player, entity, DamageCause.ENTITY_ATTACK, fallDamageEvent.getDamage() / 2);\n                     Bukkit.getPluginManager().callEvent(event);\n \n                     if (!event.isCancelled()) {\n-                        ((LivingEntity) n).damage(event.getDamage());\n+                        ((LivingEntity) entity).damage(event.getDamage());\n                     }\n                 }\n             }\n         }\n \n         for (BlockFace face : BlockFace.values()) {\n-            Block b = p.getLocation().getBlock().getRelative(BlockFace.DOWN).getRelative(face);\n-            p.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, b.getType());\n+            Block b = player.getLocation().getBlock().getRelative(BlockFace.DOWN).getRelative(face);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4ODAyMg=="}, "originalCommit": {"oid": "00c233dee59d1160e60513bea50439502eeb7818"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk5MTM4Nw==", "bodyText": "i mean b is as clear as p in this case i agree n is weird but b and p are both really clear in this case so i would say make them all full name or 1 letter be consistent", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r547991387", "createdAt": "2020-12-23T14:43:11Z", "author": {"login": "J3fftw1"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -37,54 +39,49 @@ public StomperBoots(Category category, SlimefunItemStack item, RecipeType recipe\n \n     /**\n      * This will apply the \"stomp\" effect to the given {@link EntityDamageEvent}.\n-     * \n+     *\n      * @param fallDamageEvent\n      *            The {@link EntityDamageEvent} in which the {@link Player} has taken fall damage\n      */\n     public void stomp(EntityDamageEvent fallDamageEvent) {\n-        Player p = (Player) fallDamageEvent.getEntity();\n-        p.getWorld().playSound(p.getLocation(), Sound.ENTITY_ZOMBIE_BREAK_WOODEN_DOOR, 1F, 2F);\n-        p.setVelocity(new Vector(0, 0.7, 0));\n+        Player player = (Player) fallDamageEvent.getEntity();\n+        player.getWorld().playSound(player.getLocation(), Sound.ENTITY_ZOMBIE_BREAK_WOODEN_DOOR, 1F, 2F);\n+        player.setVelocity(new Vector(0, 0.7, 0));\n \n-        for (Entity n : p.getNearbyEntities(4, 4, 4)) {\n-            if (n instanceof LivingEntity\n-                && n.isValid()\n-                && !n.getUniqueId().equals(p.getUniqueId())\n-                && ((LivingEntity) n).isCollidable()\n-                && n.hasGravity()\n-            ) {\n-                Vector velocity = getShockwave(p.getLocation(), n.getLocation());\n-                n.setVelocity(velocity);\n+        for (Entity entity : player.getNearbyEntities(4, 4, 4)) {\n+            if (entity instanceof LivingEntity && canMoveEntity((LivingEntity) entity, player)) {\n+                Vector velocity = getShockwave(player.getLocation(), entity.getLocation());\n+                entity.setVelocity(velocity);\n \n                 // Check if it's not a Player or if PvP is enabled\n-                if (!(n instanceof Player) || (p.getWorld().getPVP() && SlimefunPlugin.getProtectionManager().hasPermission(p, n.getLocation(), ProtectableAction.ATTACK_PLAYER))) {\n-                    EntityDamageByEntityEvent event = new EntityDamageByEntityEvent(p, n, DamageCause.ENTITY_ATTACK, fallDamageEvent.getDamage() / 2);\n+                if (!(entity instanceof Player) || (player.getWorld().getPVP() && SlimefunPlugin.getProtectionManager().hasPermission(player, entity.getLocation(), ProtectableAction.ATTACK_PLAYER))) {\n+                    EntityDamageByEntityEvent event = new EntityDamageByEntityEvent(player, entity, DamageCause.ENTITY_ATTACK, fallDamageEvent.getDamage() / 2);\n                     Bukkit.getPluginManager().callEvent(event);\n \n                     if (!event.isCancelled()) {\n-                        ((LivingEntity) n).damage(event.getDamage());\n+                        ((LivingEntity) entity).damage(event.getDamage());\n                     }\n                 }\n             }\n         }\n \n         for (BlockFace face : BlockFace.values()) {\n-            Block b = p.getLocation().getBlock().getRelative(BlockFace.DOWN).getRelative(face);\n-            p.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, b.getType());\n+            Block b = player.getLocation().getBlock().getRelative(BlockFace.DOWN).getRelative(face);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4ODAyMg=="}, "originalCommit": {"oid": "00c233dee59d1160e60513bea50439502eeb7818"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NjIzNDEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzo1MTo1M1rOIKssng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMjoxNDoxMFrOIK4uHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA4ODk5MA==", "bodyText": "Why are you using @code instead of @link here?", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r548088990", "createdAt": "2020-12-23T17:51:53Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -89,4 +91,20 @@ private Vector getShockwave(Location origin, Location target) {\n         }\n     }\n \n+    /**\n+     * Checks if the stomper boots can move an entity and is not the player who is using the boots.\n+     * <br><b>For developers:</b> If you're spawning an immovable NPC, you should be denying\n+     * collision with {@code LivingEntity#setCollidable(false)} or\n+     * gravity with {@code LivingEntity#setGravity(false)}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cf2051e604499c78e8f40c0be1bea463f8b4331"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI4NTk4MQ==", "bodyText": "Just for the sake of adding false to be clear what people should do. I can change it", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r548285981", "createdAt": "2020-12-23T22:14:10Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -89,4 +91,20 @@ private Vector getShockwave(Location origin, Location target) {\n         }\n     }\n \n+    /**\n+     * Checks if the stomper boots can move an entity and is not the player who is using the boots.\n+     * <br><b>For developers:</b> If you're spawning an immovable NPC, you should be denying\n+     * collision with {@code LivingEntity#setCollidable(false)} or\n+     * gravity with {@code LivingEntity#setGravity(false)}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA4ODk5MA=="}, "originalCommit": {"oid": "6cf2051e604499c78e8f40c0be1bea463f8b4331"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NjI0NTMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzo1NDowM1rOIKszug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzo1NDowM1rOIKszug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA5MDgxMA==", "bodyText": "I would suggest to swap the order of parameters here and rename the method.\nThe current order is unintuitive in my opinion or at least in a grammatical sense. If the method was called \"canBePushedBy\" then the current order would make more sense. So I am in favour of swapping these here.\nAlso if you want this to be overridden, then it should be at least protected.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean canMoveEntity(@Nonnull LivingEntity entity, @Nonnull Player player) {\n          \n          \n            \n                protected boolean canPush(@Nonnull Player player, @Nonnull LivingEntity entity) {", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r548090810", "createdAt": "2020-12-23T17:54:03Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -89,4 +91,20 @@ private Vector getShockwave(Location origin, Location target) {\n         }\n     }\n \n+    /**\n+     * Checks if the stomper boots can move an entity and is not the player who is using the boots.\n+     * <br><b>For developers:</b> If you're spawning an immovable NPC, you should be denying\n+     * collision with {@code LivingEntity#setCollidable(false)} or\n+     * gravity with {@code LivingEntity#setGravity(false)}.\n+     *\n+     * @param entity\n+     *            The {@link LivingEntity} to check.\n+     * @param player\n+     *            The {@link Player} using the {@link StomperBoots}.\n+     * @return If the entity can move.\n+     */\n+    private boolean canMoveEntity(@Nonnull LivingEntity entity, @Nonnull Player player) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cf2051e604499c78e8f40c0be1bea463f8b4331"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NjI0OTcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzo1NDo1NFrOIKs2sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMjoxNDozMlrOIK4vAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA5MTU3MA==", "bodyText": "According to the javadocs convention <br> should not be used. Instead <p> should be used to start a new paragraph.\nAlthough you will see the line break quite often in this codebase already because I didn't know that until recently either.", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r548091570", "createdAt": "2020-12-23T17:54:54Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -89,4 +91,20 @@ private Vector getShockwave(Location origin, Location target) {\n         }\n     }\n \n+    /**\n+     * Checks if the stomper boots can move an entity and is not the player who is using the boots.\n+     * <br><b>For developers:</b> If you're spawning an immovable NPC, you should be denying", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cf2051e604499c78e8f40c0be1bea463f8b4331"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI4NjIwOA==", "bodyText": "Was doing it for consistency but sute", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r548286208", "createdAt": "2020-12-23T22:14:32Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -89,4 +91,20 @@ private Vector getShockwave(Location origin, Location target) {\n         }\n     }\n \n+    /**\n+     * Checks if the stomper boots can move an entity and is not the player who is using the boots.\n+     * <br><b>For developers:</b> If you're spawning an immovable NPC, you should be denying", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA5MTU3MA=="}, "originalCommit": {"oid": "6cf2051e604499c78e8f40c0be1bea463f8b4331"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NjI1NzUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzo1NjoyMFrOIKs7pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMTo1MzowNFrOIK31PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA5MjgzOA==", "bodyText": "I don't really see much of a problem with the naming of p, n and b but sure.", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r548092838", "createdAt": "2020-12-23T17:56:20Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -37,49 +39,49 @@ public StomperBoots(Category category, SlimefunItemStack item, RecipeType recipe\n \n     /**\n      * This will apply the \"stomp\" effect to the given {@link EntityDamageEvent}.\n-     * \n+     *\n      * @param fallDamageEvent\n      *            The {@link EntityDamageEvent} in which the {@link Player} has taken fall damage\n      */\n     public void stomp(EntityDamageEvent fallDamageEvent) {\n-        Player p = (Player) fallDamageEvent.getEntity();\n-        p.getWorld().playSound(p.getLocation(), Sound.ENTITY_ZOMBIE_BREAK_WOODEN_DOOR, 1F, 2F);\n-        p.setVelocity(new Vector(0, 0.7, 0));\n+        Player player = (Player) fallDamageEvent.getEntity();\n+        player.getWorld().playSound(player.getLocation(), Sound.ENTITY_ZOMBIE_BREAK_WOODEN_DOOR, 1F, 2F);\n+        player.setVelocity(new Vector(0, 0.7, 0));\n \n-        for (Entity n : p.getNearbyEntities(4, 4, 4)) {\n-            if (n instanceof LivingEntity && n.isValid() && !n.getUniqueId().equals(p.getUniqueId())) {\n-                Vector velocity = getShockwave(p.getLocation(), n.getLocation());\n-                n.setVelocity(velocity);\n+        for (Entity entity : player.getNearbyEntities(4, 4, 4)) {\n+            if (entity instanceof LivingEntity && canMoveEntity((LivingEntity) entity, player)) {\n+                Vector velocity = getShockwave(player.getLocation(), entity.getLocation());\n+                entity.setVelocity(velocity);\n \n                 // Check if it's not a Player or if PvP is enabled\n-                if (!(n instanceof Player) || (p.getWorld().getPVP() && SlimefunPlugin.getProtectionManager().hasPermission(p, n.getLocation(), ProtectableAction.ATTACK_PLAYER))) {\n-                    EntityDamageByEntityEvent event = new EntityDamageByEntityEvent(p, n, DamageCause.ENTITY_ATTACK, fallDamageEvent.getDamage() / 2);\n+                if (!(entity instanceof Player) || (player.getWorld().getPVP() && SlimefunPlugin.getProtectionManager().hasPermission(player, entity.getLocation(), ProtectableAction.ATTACK_PLAYER))) {\n+                    EntityDamageByEntityEvent event = new EntityDamageByEntityEvent(player, entity, DamageCause.ENTITY_ATTACK, fallDamageEvent.getDamage() / 2);\n                     Bukkit.getPluginManager().callEvent(event);\n \n                     if (!event.isCancelled()) {\n-                        ((LivingEntity) n).damage(event.getDamage());\n+                        ((LivingEntity) entity).damage(event.getDamage());\n                     }\n                 }\n             }\n         }\n \n         for (BlockFace face : BlockFace.values()) {\n-            Block b = p.getLocation().getBlock().getRelative(BlockFace.DOWN).getRelative(face);\n-            p.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, b.getType());\n+            Block block = player.getLocation().getBlock().getRelative(BlockFace.DOWN).getRelative(face);\n+            player.getWorld().playEffect(block.getLocation(), Effect.STEP_SOUND, block.getType());\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cf2051e604499c78e8f40c0be1bea463f8b4331"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI3MTQyMQ==", "bodyText": "p and b could be used fine like that but n for entity is a bit odd here, and besides I think using full names is cleaner and more easily readable", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r548271421", "createdAt": "2020-12-23T21:53:04Z", "author": {"login": "svr333"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -37,49 +39,49 @@ public StomperBoots(Category category, SlimefunItemStack item, RecipeType recipe\n \n     /**\n      * This will apply the \"stomp\" effect to the given {@link EntityDamageEvent}.\n-     * \n+     *\n      * @param fallDamageEvent\n      *            The {@link EntityDamageEvent} in which the {@link Player} has taken fall damage\n      */\n     public void stomp(EntityDamageEvent fallDamageEvent) {\n-        Player p = (Player) fallDamageEvent.getEntity();\n-        p.getWorld().playSound(p.getLocation(), Sound.ENTITY_ZOMBIE_BREAK_WOODEN_DOOR, 1F, 2F);\n-        p.setVelocity(new Vector(0, 0.7, 0));\n+        Player player = (Player) fallDamageEvent.getEntity();\n+        player.getWorld().playSound(player.getLocation(), Sound.ENTITY_ZOMBIE_BREAK_WOODEN_DOOR, 1F, 2F);\n+        player.setVelocity(new Vector(0, 0.7, 0));\n \n-        for (Entity n : p.getNearbyEntities(4, 4, 4)) {\n-            if (n instanceof LivingEntity && n.isValid() && !n.getUniqueId().equals(p.getUniqueId())) {\n-                Vector velocity = getShockwave(p.getLocation(), n.getLocation());\n-                n.setVelocity(velocity);\n+        for (Entity entity : player.getNearbyEntities(4, 4, 4)) {\n+            if (entity instanceof LivingEntity && canMoveEntity((LivingEntity) entity, player)) {\n+                Vector velocity = getShockwave(player.getLocation(), entity.getLocation());\n+                entity.setVelocity(velocity);\n \n                 // Check if it's not a Player or if PvP is enabled\n-                if (!(n instanceof Player) || (p.getWorld().getPVP() && SlimefunPlugin.getProtectionManager().hasPermission(p, n.getLocation(), ProtectableAction.ATTACK_PLAYER))) {\n-                    EntityDamageByEntityEvent event = new EntityDamageByEntityEvent(p, n, DamageCause.ENTITY_ATTACK, fallDamageEvent.getDamage() / 2);\n+                if (!(entity instanceof Player) || (player.getWorld().getPVP() && SlimefunPlugin.getProtectionManager().hasPermission(player, entity.getLocation(), ProtectableAction.ATTACK_PLAYER))) {\n+                    EntityDamageByEntityEvent event = new EntityDamageByEntityEvent(player, entity, DamageCause.ENTITY_ATTACK, fallDamageEvent.getDamage() / 2);\n                     Bukkit.getPluginManager().callEvent(event);\n \n                     if (!event.isCancelled()) {\n-                        ((LivingEntity) n).damage(event.getDamage());\n+                        ((LivingEntity) entity).damage(event.getDamage());\n                     }\n                 }\n             }\n         }\n \n         for (BlockFace face : BlockFace.values()) {\n-            Block b = p.getLocation().getBlock().getRelative(BlockFace.DOWN).getRelative(face);\n-            p.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, b.getType());\n+            Block block = player.getLocation().getBlock().getRelative(BlockFace.DOWN).getRelative(face);\n+            player.getWorld().playEffect(block.getLocation(), Effect.STEP_SOUND, block.getType());\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA5MjgzOA=="}, "originalCommit": {"oid": "6cf2051e604499c78e8f40c0be1bea463f8b4331"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 143, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}