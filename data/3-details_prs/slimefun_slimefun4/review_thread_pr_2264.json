{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1OTIxNTMy", "number": 2264, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNTowMDo0MVrOEeE7mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNTozMTo0MlrOEeFFYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTczNTMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CoolerListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNTowMDo0MVrOHJjePA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNTowMDo0MVrOHJjePA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc4MDQxMg==", "bodyText": "You can remove the \"EntityDamageEvent\" here, it's already imported.", "url": "https://github.com/Slimefun/Slimefun4/pull/2264#discussion_r479780412", "createdAt": "2020-08-30T15:00:41Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CoolerListener.java", "diffHunk": "@@ -47,14 +49,29 @@ public void onHungerLoss(FoodLevelChangeEvent e) {\n         Player p = (Player) e.getEntity();\n \n         if (e.getFoodLevel() < p.getFoodLevel()) {\n-            for (ItemStack item : p.getInventory().getContents()) {\n-                if (cooler.isItem(item)) {\n-                    if (Slimefun.hasUnlocked(p, cooler, true)) {\n-                        takeJuiceFromCooler(p, item);\n-                    }\n-                    else {\n-                        return;\n-                    }\n+            checkAndConsume(p);\n+        }\n+    }\n+    \n+    @EventHandler\n+    public void onHungerDamage(EntityDamageEvent e) {\n+        if (cooler == null || cooler.isDisabled()) {\n+            return;\n+        }\n+        \n+        if (e.getCause() == EntityDamageEvent.DamageCause.STARVATION) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0914af6d9c7d1372b659b18ef1d5762ab011338"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTczNTUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CoolerListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNTowMDo1OFrOHJjeVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNTowMDo1OFrOHJjeVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc4MDQzNw==", "bodyText": "You will need to check whether the Entity is actually a Player first before casting.", "url": "https://github.com/Slimefun/Slimefun4/pull/2264#discussion_r479780437", "createdAt": "2020-08-30T15:00:58Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CoolerListener.java", "diffHunk": "@@ -47,14 +49,29 @@ public void onHungerLoss(FoodLevelChangeEvent e) {\n         Player p = (Player) e.getEntity();\n \n         if (e.getFoodLevel() < p.getFoodLevel()) {\n-            for (ItemStack item : p.getInventory().getContents()) {\n-                if (cooler.isItem(item)) {\n-                    if (Slimefun.hasUnlocked(p, cooler, true)) {\n-                        takeJuiceFromCooler(p, item);\n-                    }\n-                    else {\n-                        return;\n-                    }\n+            checkAndConsume(p);\n+        }\n+    }\n+    \n+    @EventHandler\n+    public void onHungerDamage(EntityDamageEvent e) {\n+        if (cooler == null || cooler.isDisabled()) {\n+            return;\n+        }\n+        \n+        if (e.getCause() == EntityDamageEvent.DamageCause.STARVATION) {\n+            checkAndConsume((Player) e.getEntity());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0914af6d9c7d1372b659b18ef1d5762ab011338"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTc0OTI4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/WindStaff.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToxNzo0NFrOHJjlFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToxNzo0NFrOHJjlFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc4MjE2NA==", "bodyText": "I don't think we should send a message here, if the FoodLevelChangeEvent was cancelled, then we should simply not consume any hunger points. The wind staff itself did not fail, if the event was cancelled, this is most likely because that server doesn't use the hunger system...", "url": "https://github.com/Slimefun/Slimefun4/pull/2264#discussion_r479782164", "createdAt": "2020-08-30T15:17:44Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/WindStaff.java", "diffHunk": "@@ -31,6 +31,11 @@ public ItemUseHandler getItemHandler() {\n                 if (p.getInventory().getItemInMainHand().getType() != Material.SHEARS && p.getGameMode() != GameMode.CREATIVE) {\n                     FoodLevelChangeEvent event = new FoodLevelChangeEvent(p, p.getFoodLevel() - 2);\n                     Bukkit.getPluginManager().callEvent(event);\n+                    \n+                    if (event.isCancelled()) {\n+                        SlimefunPlugin.getLocalization().sendMessage(p, \"messages.wind-staff-fail\", true);\n+                        return;\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8498f8c0c3daf85b84906cb841a6d56eabec72e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTc2MDMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CoolerListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNTozMTo0MlrOHJjqaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNTozMTo0MlrOHJjqaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc4MzUyOQ==", "bodyText": "\"or an\", not \"and a\"", "url": "https://github.com/Slimefun/Slimefun4/pull/2264#discussion_r479783529", "createdAt": "2020-08-30T15:31:42Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CoolerListener.java", "diffHunk": "@@ -19,10 +21,11 @@\n import me.mrCookieSlime.Slimefun.api.Slimefun;\n \n /**\n- * This {@link Listener} listens for a {@link FoodLevelChangeEvent} and consumes a {@link Juice}\n- * from any {@link Cooler} that can be found in the {@link Inventory} of the given {@link Player}.\n+ * This {@link Listener} listens for a {@link FoodLevelChangeEvent} and a {@link EntityDamageEvent} for starvation damage", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfc84d03b27169f8fd7e4411e60d2ef75904be1b"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 316, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}