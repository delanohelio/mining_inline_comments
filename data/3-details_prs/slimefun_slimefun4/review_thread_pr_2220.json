{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NDM3OTQ3", "number": 2220, "reviewThreads": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoxOToxNlrOEXkH-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDoyNDowNVrOEZEWHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTQ0NTcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/ResearchSetup.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoxOToxNlrOG_bFYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDowNTowMlrOG_wj0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE1NzIxNw==", "bodyText": "Your Nether Goo should probably also be added to this research", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469157217", "createdAt": "2020-08-12T10:19:16Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/ResearchSetup.java", "diffHunk": "@@ -271,6 +271,7 @@ public static void setupResearches() {\n         register(\"lead_clothing\", 260, \"Lead Clothing\", 14, SlimefunItems.REINFORCED_CLOTH);\n         register(\"tape_measure\", 261, \"Tape Measure\", 7, SlimefunItems.TAPE_MEASURE);\n         register(\"iron_golem_assembler\", 262, \"Automated Iron Golems\", 30, SlimefunItems.IRON_GOLEM_ASSEMBLER);\n+        register(\"unemployment_rune\", 263, \"Reset Villager Trades\", 29, SlimefunItems.UNEMPLOYMENT_RUNE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27059240b6305e89bb058fdce15b62ba4d08019"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUwOTA3NA==", "bodyText": "done", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469509074", "createdAt": "2020-08-12T20:05:02Z", "author": {"login": "dniym"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/ResearchSetup.java", "diffHunk": "@@ -271,6 +271,7 @@ public static void setupResearches() {\n         register(\"lead_clothing\", 260, \"Lead Clothing\", 14, SlimefunItems.REINFORCED_CLOTH);\n         register(\"tape_measure\", 261, \"Tape Measure\", 7, SlimefunItems.TAPE_MEASURE);\n         register(\"iron_golem_assembler\", 262, \"Automated Iron Golems\", 30, SlimefunItems.IRON_GOLEM_ASSEMBLER);\n+        register(\"unemployment_rune\", 263, \"Reset Villager Trades\", 29, SlimefunItems.UNEMPLOYMENT_RUNE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE1NzIxNw=="}, "originalCommit": {"oid": "b27059240b6305e89bb058fdce15b62ba4d08019"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTQ0NzcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoxOTo1M1rOG_bGsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoxOTo1M1rOG_bGsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE1NzU1Mg==", "bodyText": "Don't define the texture here, add them to the HeadTexture enum instead.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469157552", "createdAt": "2020-08-12T10:19:53Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -388,6 +390,10 @@ public static void setup(SlimefunPlugin plugin) {\n \t\tnew ItemStack[] {null, null, null, null, new CustomItem(SlimefunUtils.getCustomHead(\"89091d79ea0f59ef7ef94d7bba6e5f17f2f7d4572c44f90f76c4819a714\"), \"&aIron Golem\"), null, null, null, null})\n \t\t.register(plugin);\n \n+\t\tnew OrganicNetherGoo(categories.resources, SlimefunItems.ORGANIC_NETHER_GOO, RecipeType.BARTER_DROP,\n+\t\tnew ItemStack[] {null, null, null, null, new CustomItem(SlimefunUtils.getCustomHead(\"2882af1294a74023e6919a31d1a027310f2e142afb4667d230d155e7f21dbb41\"), \"&aPiglins\"), null, null, null, null})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27059240b6305e89bb058fdce15b62ba4d08019"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTQ1MDE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoyMDozNFrOG_bIMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDowNToyMFrOG_wkaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE1NzkzOA==", "bodyText": "This recipe has a rather weird and asymmetric shape", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469157938", "createdAt": "2020-08-12T10:20:34Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -2466,7 +2472,11 @@ public int getTier() {\n \t\tnew EnchantmentRune(categories.magicalResources, SlimefunItems.ENCHANTMENT_RUNE, RecipeType.ANCIENT_ALTAR,\n \t\tnew ItemStack[] {SlimefunItems.MAGIC_LUMP_3, SlimefunItems.MAGICAL_GLASS, SlimefunItems.MAGIC_LUMP_3, SlimefunItems.MAGICAL_GLASS, SlimefunItems.LIGHTNING_RUNE, SlimefunItems.MAGICAL_GLASS, SlimefunItems.MAGIC_LUMP_3, SlimefunItems.MAGICAL_GLASS, SlimefunItems.MAGIC_LUMP_3})\n \t\t.register(plugin);\n-\n+\t\t\n+\t\tnew RuneOfUnemployment(categories.magicalResources, SlimefunItems.UNEMPLOYMENT_RUNE, RecipeType.ANCIENT_ALTAR,\n+\t\tnew ItemStack[] {SlimefunItems.MAGIC_LUMP_3, SlimefunItems.MAGICAL_BOOK_COVER, SlimefunItems.ENDER_LUMP_3, SlimefunItems.ORGANIC_NETHER_GOO, SlimefunItems.MAGIC_LUMP_2, new ItemStack(Material.CRYING_OBSIDIAN), SlimefunItems.MAGICAL_GLASS, SlimefunItems.ORGANIC_NETHER_GOO, SlimefunItems.FLASK_OF_KNOWLEDGE})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27059240b6305e89bb058fdce15b62ba4d08019"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUwOTIyNQ==", "bodyText": "modified a bit to be more symmetric", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469509225", "createdAt": "2020-08-12T20:05:20Z", "author": {"login": "dniym"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -2466,7 +2472,11 @@ public int getTier() {\n \t\tnew EnchantmentRune(categories.magicalResources, SlimefunItems.ENCHANTMENT_RUNE, RecipeType.ANCIENT_ALTAR,\n \t\tnew ItemStack[] {SlimefunItems.MAGIC_LUMP_3, SlimefunItems.MAGICAL_GLASS, SlimefunItems.MAGIC_LUMP_3, SlimefunItems.MAGICAL_GLASS, SlimefunItems.LIGHTNING_RUNE, SlimefunItems.MAGICAL_GLASS, SlimefunItems.MAGIC_LUMP_3, SlimefunItems.MAGICAL_GLASS, SlimefunItems.MAGIC_LUMP_3})\n \t\t.register(plugin);\n-\n+\t\t\n+\t\tnew RuneOfUnemployment(categories.magicalResources, SlimefunItems.UNEMPLOYMENT_RUNE, RecipeType.ANCIENT_ALTAR,\n+\t\tnew ItemStack[] {SlimefunItems.MAGIC_LUMP_3, SlimefunItems.MAGICAL_BOOK_COVER, SlimefunItems.ENDER_LUMP_3, SlimefunItems.ORGANIC_NETHER_GOO, SlimefunItems.MAGIC_LUMP_2, new ItemStack(Material.CRYING_OBSIDIAN), SlimefunItems.MAGICAL_GLASS, SlimefunItems.ORGANIC_NETHER_GOO, SlimefunItems.FLASK_OF_KNOWLEDGE})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE1NzkzOA=="}, "originalCommit": {"oid": "b27059240b6305e89bb058fdce15b62ba4d08019"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTQ1MTczOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/resources/OrganicNetherGoo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoyMTowM1rOG_bJMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoyMTowM1rOG_bJMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE1ODE5NA==", "bodyText": "Both return statements have completely different indentation.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469158194", "createdAt": "2020-08-12T10:21:03Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/resources/OrganicNetherGoo.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.resources;\n+import org.bukkit.inventory.ItemStack;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.api.items.ItemSetting;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.NotPlaceable;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.PiglinBarterDrop;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+public class OrganicNetherGoo extends SimpleSlimefunItem<ItemUseHandler> implements NotPlaceable, PiglinBarterDrop {\n+\n+        private final ItemSetting<Integer> chance = new ItemSetting<>(\"barter-chance\", 3);\n+    \n+        public OrganicNetherGoo(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+            super(category, item, recipeType, recipe);\n+            \n+            addItemSetting(chance);\n+        }\n+        \n+        @Override\n+        public ItemUseHandler getItemHandler() {\n+                return PlayerRightClickEvent::cancel;\n+        }\n+\n+        @Override\n+        public int getBarteringLootChance() {\n+            return chance.getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27059240b6305e89bb058fdce15b62ba4d08019"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTQ1MjIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/resources/OrganicNetherGoo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoyMToxMVrOG_bJgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDowNjowNFrOG_wl1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE1ODI3Mg==", "bodyText": "Missing documentation", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469158272", "createdAt": "2020-08-12T10:21:11Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/resources/OrganicNetherGoo.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.resources;\n+import org.bukkit.inventory.ItemStack;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.api.items.ItemSetting;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.NotPlaceable;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.PiglinBarterDrop;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+public class OrganicNetherGoo extends SimpleSlimefunItem<ItemUseHandler> implements NotPlaceable, PiglinBarterDrop {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27059240b6305e89bb058fdce15b62ba4d08019"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUwOTU4OQ==", "bodyText": "just turned this into a slimefun item, no need for an item use handler now right?  Unless it needs to be blocked in crafting recipes? (is that even a thing) ?", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469509589", "createdAt": "2020-08-12T20:06:04Z", "author": {"login": "dniym"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/resources/OrganicNetherGoo.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.resources;\n+import org.bukkit.inventory.ItemStack;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.api.items.ItemSetting;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.NotPlaceable;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.PiglinBarterDrop;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+public class OrganicNetherGoo extends SimpleSlimefunItem<ItemUseHandler> implements NotPlaceable, PiglinBarterDrop {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE1ODI3Mg=="}, "originalCommit": {"oid": "b27059240b6305e89bb058fdce15b62ba4d08019"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTQ1MzgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/resources/OrganicNetherGoo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoyMTo0NVrOG_bKjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoyMTo0NVrOG_bKjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE1ODU0Mg==", "bodyText": "Why is this even marked as NotPlaceable here? Brown dye cannot be placed anyway.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469158542", "createdAt": "2020-08-12T10:21:45Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/resources/OrganicNetherGoo.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.resources;\n+import org.bukkit.inventory.ItemStack;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.api.items.ItemSetting;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.NotPlaceable;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.PiglinBarterDrop;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+public class OrganicNetherGoo extends SimpleSlimefunItem<ItemUseHandler> implements NotPlaceable, PiglinBarterDrop {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27059240b6305e89bb058fdce15b62ba4d08019"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTQ1ODA4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoyMzoxNFrOG_bNKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDowODo0NFrOG_wqtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE1OTIwOQ==", "bodyText": "Why not do (entity instance of Villager) instead of this weird double-check.\nShould Mojang decide to add more types of Merchants, it would break too. So a Villager instanceof check is most appropriate here.\nEspecially if you are casting this to Villager anyway, since that would otherwise result in unexpected class casting exceptions.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469159209", "createdAt": "2020-08-12T10:23:14Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler\n+ *\n+ */\n+public class RuneOfUnemployment extends SimpleSlimefunItem<EntityInteractHandler> {\n+\n+    public RuneOfUnemployment(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+ \n+    @Override\n+    public EntityInteractHandler getItemHandler() {\n+        return (p, entity, item, offhand) -> {\n+            if (!(entity instanceof WanderingTrader) && entity instanceof Merchant) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27059240b6305e89bb058fdce15b62ba4d08019"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4NzUxMA==", "bodyText": "Hmmm I was pretty sure I did this for a reason since the merchant/villager api is so flaky.  Maybe it was that I checked to merchant because a regular villager will pass the villager instanceof check but not have any trades or a job.    A merchant object however will have a job but wandering traders can\u2019t change profession because they\u2019re not villagers.  Anyways I suppose I could just check to make sure they have a job before resetting.     I\u2019ll do some testing to make sure it won\u2019t cause issues!", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469187510", "createdAt": "2020-08-12T11:23:06Z", "author": {"login": "dniym"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler\n+ *\n+ */\n+public class RuneOfUnemployment extends SimpleSlimefunItem<EntityInteractHandler> {\n+\n+    public RuneOfUnemployment(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+ \n+    @Override\n+    public EntityInteractHandler getItemHandler() {\n+        return (p, entity, item, offhand) -> {\n+            if (!(entity instanceof WanderingTrader) && entity instanceof Merchant) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE1OTIwOQ=="}, "originalCommit": {"oid": "b27059240b6305e89bb058fdce15b62ba4d08019"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUxMDgzNg==", "bodyText": "upon further testing it appears to be fine with wandering traders.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469510836", "createdAt": "2020-08-12T20:08:44Z", "author": {"login": "dniym"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler\n+ *\n+ */\n+public class RuneOfUnemployment extends SimpleSlimefunItem<EntityInteractHandler> {\n+\n+    public RuneOfUnemployment(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+ \n+    @Override\n+    public EntityInteractHandler getItemHandler() {\n+        return (p, entity, item, offhand) -> {\n+            if (!(entity instanceof WanderingTrader) && entity instanceof Merchant) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE1OTIwOQ=="}, "originalCommit": {"oid": "b27059240b6305e89bb058fdce15b62ba4d08019"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTQ2MTMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoyNDoxOFrOG_bPOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoyNDoxOFrOG_bPOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE1OTczOQ==", "bodyText": "You can also just specify a count when spawning particles, I see no reason for this loop here.\nAlso the formatting is completely off.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469159739", "createdAt": "2020-08-12T10:24:18Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler\n+ *\n+ */\n+public class RuneOfUnemployment extends SimpleSlimefunItem<EntityInteractHandler> {\n+\n+    public RuneOfUnemployment(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+ \n+    @Override\n+    public EntityInteractHandler getItemHandler() {\n+        return (p, entity, item, offhand) -> {\n+            if (!(entity instanceof WanderingTrader) && entity instanceof Merchant) {\n+\n+                if (p.getGameMode() != GameMode.CREATIVE) {\n+                    ItemUtils.consumeItem(item, false);\n+                }\n+                \n+                \n+                Villager v = (Villager) entity;\n+                v.setVillagerExperience(0);\n+                v.setProfession(Profession.NONE);\n+                Location l = v.getLocation().clone();\n+                Double offset = ThreadLocalRandom.current().nextDouble(0, 0.5);\n+                boolean flip = false;\n+                double o1 = 0;\n+                double o2 = offset / 2;\n+                double o3 = 0;\n+                \n+                for(int i = 0; i < 10; i++) {\n+                    flip = !flip;\n+                    if(flip) {\n+                        o1 = offset;\n+                        o3 = offset * -1;\n+                    } else {\n+                        o1 = offset * -1;\n+                        o3 = offset;\n+                    }\n+                v.getWorld().spawnParticle(Particle.CRIMSON_SPORE, l, 3, o1, o2, o3,0.0d);\n+                if(i == 1 || i ==5)\n+                    v.getWorld().spawnParticle(Particle.ENCHANTMENT_TABLE, l, 3, 0.04d, 1d, 0.04d);    \n+                \n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27059240b6305e89bb058fdce15b62ba4d08019"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTQ2MjU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoyNDo0NVrOG_bQBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoyNDo0NVrOG_bQBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE1OTk0Mg==", "bodyText": "Two brackets with the same level of indentation :NotLikeThis:\nThis is how you make code confusing.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469159942", "createdAt": "2020-08-12T10:24:45Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler\n+ *\n+ */\n+public class RuneOfUnemployment extends SimpleSlimefunItem<EntityInteractHandler> {\n+\n+    public RuneOfUnemployment(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+ \n+    @Override\n+    public EntityInteractHandler getItemHandler() {\n+        return (p, entity, item, offhand) -> {\n+            if (!(entity instanceof WanderingTrader) && entity instanceof Merchant) {\n+\n+                if (p.getGameMode() != GameMode.CREATIVE) {\n+                    ItemUtils.consumeItem(item, false);\n+                }\n+                \n+                \n+                Villager v = (Villager) entity;\n+                v.setVillagerExperience(0);\n+                v.setProfession(Profession.NONE);\n+                Location l = v.getLocation().clone();\n+                Double offset = ThreadLocalRandom.current().nextDouble(0, 0.5);\n+                boolean flip = false;\n+                double o1 = 0;\n+                double o2 = offset / 2;\n+                double o3 = 0;\n+                \n+                for(int i = 0; i < 10; i++) {\n+                    flip = !flip;\n+                    if(flip) {\n+                        o1 = offset;\n+                        o3 = offset * -1;\n+                    } else {\n+                        o1 = offset * -1;\n+                        o3 = offset;\n+                    }\n+                v.getWorld().spawnParticle(Particle.CRIMSON_SPORE, l, 3, o1, o2, o3,0.0d);\n+                if(i == 1 || i ==5)\n+                    v.getWorld().spawnParticle(Particle.ENCHANTMENT_TABLE, l, 3, 0.04d, 1d, 0.04d);    \n+                \n+            }\n+        }\n+        };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27059240b6305e89bb058fdce15b62ba4d08019"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMTQ2MzQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoyNDo1N1rOG_bQfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxMDoyNDo1N1rOG_bQfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE2MDA2MQ==", "bodyText": "Why have all these empty lines here...?", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469160061", "createdAt": "2020-08-12T10:24:57Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler\n+ *\n+ */\n+public class RuneOfUnemployment extends SimpleSlimefunItem<EntityInteractHandler> {\n+\n+    public RuneOfUnemployment(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+ \n+    @Override\n+    public EntityInteractHandler getItemHandler() {\n+        return (p, entity, item, offhand) -> {\n+            if (!(entity instanceof WanderingTrader) && entity instanceof Merchant) {\n+\n+                if (p.getGameMode() != GameMode.CREATIVE) {\n+                    ItemUtils.consumeItem(item, false);\n+                }\n+                \n+                \n+                Villager v = (Villager) entity;\n+                v.setVillagerExperience(0);\n+                v.setProfession(Profession.NONE);\n+                Location l = v.getLocation().clone();\n+                Double offset = ThreadLocalRandom.current().nextDouble(0, 0.5);\n+                boolean flip = false;\n+                double o1 = 0;\n+                double o2 = offset / 2;\n+                double o3 = 0;\n+                \n+                for(int i = 0; i < 10; i++) {\n+                    flip = !flip;\n+                    if(flip) {\n+                        o1 = offset;\n+                        o3 = offset * -1;\n+                    } else {\n+                        o1 = offset * -1;\n+                        o3 = offset;\n+                    }\n+                v.getWorld().spawnParticle(Particle.CRIMSON_SPORE, l, 3, o1, o2, o3,0.0d);\n+                if(i == 1 || i ==5)\n+                    v.getWorld().spawnParticle(Particle.ENCHANTMENT_TABLE, l, 3, 0.04d, 1d, 0.04d);    \n+                \n+            }\n+        }\n+        };\n+    }\n+\n+\n+\n+ \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27059240b6305e89bb058fdce15b62ba4d08019"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTYwMjAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/resources/OrganicNetherGoo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwODo1Njo0NVrOHACbXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwODo1Njo0NVrOHACbXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwMTgyMw==", "bodyText": "This empty line can be removed.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469801823", "createdAt": "2020-08-13T08:56:45Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/resources/OrganicNetherGoo.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.resources;\n+import org.bukkit.inventory.ItemStack;\n+\n+import io.github.thebusybiscuit.slimefun4.api.items.ItemSetting;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.PiglinBarterDrop;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} can only be obtained via bartering with a {@link Piglin}. \n+ *\n+ * @author dNiym\n+ *\n+ * @see PiglinBarterDrop\n+ *\n+ */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a33cfdb12df9e1e37140c80aab659db4ffbfdfb9"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTYwNDIzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/resources/OrganicNetherGoo.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwODo1NzoxOFrOHACcsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTo0NTo1OFrOHARiYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwMjE2Mw==", "bodyText": "Should probably also add a \"validateInput\" method to make sure it's between 1-99.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469802163", "createdAt": "2020-08-13T08:57:18Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/resources/OrganicNetherGoo.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.resources;\n+import org.bukkit.inventory.ItemStack;\n+\n+import io.github.thebusybiscuit.slimefun4.api.items.ItemSetting;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.PiglinBarterDrop;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} can only be obtained via bartering with a {@link Piglin}. \n+ *\n+ * @author dNiym\n+ *\n+ * @see PiglinBarterDrop\n+ *\n+ */\n+\n+public class OrganicNetherGoo extends SlimefunItem implements PiglinBarterDrop {\n+\n+    private final ItemSetting<Integer> chance = new ItemSetting<>(\"barter-chance\", 3);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a33cfdb12df9e1e37140c80aab659db4ffbfdfb9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MDY5NQ==", "bodyText": "There is a line that checks this in the piglin listener.. do you think it should be done on a per item basis? Or on maybe the barter drop interface instead?\nhttps://github.com/TheBusyBiscuit/Slimefun4/pull/2220/files/b27059240b6305e89bb058fdce15b62ba4d08019#diff-030aa5ca3b19598a3acad3d2ccc70609", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469880695", "createdAt": "2020-08-13T11:22:53Z", "author": {"login": "dniym"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/resources/OrganicNetherGoo.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.resources;\n+import org.bukkit.inventory.ItemStack;\n+\n+import io.github.thebusybiscuit.slimefun4.api.items.ItemSetting;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.PiglinBarterDrop;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} can only be obtained via bartering with a {@link Piglin}. \n+ *\n+ * @author dNiym\n+ *\n+ * @see PiglinBarterDrop\n+ *\n+ */\n+\n+public class OrganicNetherGoo extends SlimefunItem implements PiglinBarterDrop {\n+\n+    private final ItemSetting<Integer> chance = new ItemSetting<>(\"barter-chance\", 3);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwMjE2Mw=="}, "originalCommit": {"oid": "a33cfdb12df9e1e37140c80aab659db4ffbfdfb9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0OTM3Nw==", "bodyText": "know that it is checked there.\nBut you should validate inputs like that on the ItemSetting level too, so that server owners will be notified that their settings are misconfigured.\nIn general, illegal values should be checked on all levels of implementation.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r470049377", "createdAt": "2020-08-13T15:45:58Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/resources/OrganicNetherGoo.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.resources;\n+import org.bukkit.inventory.ItemStack;\n+\n+import io.github.thebusybiscuit.slimefun4.api.items.ItemSetting;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.PiglinBarterDrop;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} can only be obtained via bartering with a {@link Piglin}. \n+ *\n+ * @author dNiym\n+ *\n+ * @see PiglinBarterDrop\n+ *\n+ */\n+\n+public class OrganicNetherGoo extends SlimefunItem implements PiglinBarterDrop {\n+\n+    private final ItemSetting<Integer> chance = new ItemSetting<>(\"barter-chance\", 3);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwMjE2Mw=="}, "originalCommit": {"oid": "a33cfdb12df9e1e37140c80aab659db4ffbfdfb9"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTYwNjIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/ResearchSetup.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwODo1Nzo0OVrOHACd7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDoyMTo0MVrOHAcQ3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwMjQ3Nw==", "bodyText": "I don't really see why we would need a new research for this.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469802477", "createdAt": "2020-08-13T08:57:49Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/ResearchSetup.java", "diffHunk": "@@ -271,6 +271,9 @@ public static void setupResearches() {\n         register(\"lead_clothing\", 260, \"Lead Clothing\", 14, SlimefunItems.REINFORCED_CLOTH);\n         register(\"tape_measure\", 261, \"Tape Measure\", 7, SlimefunItems.TAPE_MEASURE);\n         register(\"iron_golem_assembler\", 262, \"Automated Iron Golems\", 30, SlimefunItems.IRON_GOLEM_ASSEMBLER);\n+        register(\"unemployment_rune\", 263, \"Reset Villager Trades\", 29, SlimefunItems.UNEMPLOYMENT_RUNE);\n+        register(\"organic_nether_goo\", 264, \"Organic Nether Goo\", 14,SlimefunItems.ORGANIC_NETHER_GOO);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a33cfdb12df9e1e37140c80aab659db4ffbfdfb9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg3OTE5MQ==", "bodyText": "Didn\u2019t you suggest that I should add the research on the last set of changes?\n\u201c dniym  Hide conversation\n@TheBusyBiscuit\nTheBusyBiscuit yesterday  Owner\nYour Nether Goo should probably also be added to this research\u201d", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469879191", "createdAt": "2020-08-13T11:19:42Z", "author": {"login": "dniym"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/ResearchSetup.java", "diffHunk": "@@ -271,6 +271,9 @@ public static void setupResearches() {\n         register(\"lead_clothing\", 260, \"Lead Clothing\", 14, SlimefunItems.REINFORCED_CLOTH);\n         register(\"tape_measure\", 261, \"Tape Measure\", 7, SlimefunItems.TAPE_MEASURE);\n         register(\"iron_golem_assembler\", 262, \"Automated Iron Golems\", 30, SlimefunItems.IRON_GOLEM_ASSEMBLER);\n+        register(\"unemployment_rune\", 263, \"Reset Villager Trades\", 29, SlimefunItems.UNEMPLOYMENT_RUNE);\n+        register(\"organic_nether_goo\", 264, \"Organic Nether Goo\", 14,SlimefunItems.ORGANIC_NETHER_GOO);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwMjQ3Nw=="}, "originalCommit": {"oid": "a33cfdb12df9e1e37140c80aab659db4ffbfdfb9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MDM3MA==", "bodyText": "As I said...\nYour Nether Goo should probably also be added to this research.\nThis research, not a new one.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469880370", "createdAt": "2020-08-13T11:22:11Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/ResearchSetup.java", "diffHunk": "@@ -271,6 +271,9 @@ public static void setupResearches() {\n         register(\"lead_clothing\", 260, \"Lead Clothing\", 14, SlimefunItems.REINFORCED_CLOTH);\n         register(\"tape_measure\", 261, \"Tape Measure\", 7, SlimefunItems.TAPE_MEASURE);\n         register(\"iron_golem_assembler\", 262, \"Automated Iron Golems\", 30, SlimefunItems.IRON_GOLEM_ASSEMBLER);\n+        register(\"unemployment_rune\", 263, \"Reset Villager Trades\", 29, SlimefunItems.UNEMPLOYMENT_RUNE);\n+        register(\"organic_nether_goo\", 264, \"Organic Nether Goo\", 14,SlimefunItems.ORGANIC_NETHER_GOO);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwMjQ3Nw=="}, "originalCommit": {"oid": "a33cfdb12df9e1e37140c80aab659db4ffbfdfb9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIyNTExNw==", "bodyText": "got it", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r470225117", "createdAt": "2020-08-13T20:21:41Z", "author": {"login": "dniym"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/ResearchSetup.java", "diffHunk": "@@ -271,6 +271,9 @@ public static void setupResearches() {\n         register(\"lead_clothing\", 260, \"Lead Clothing\", 14, SlimefunItems.REINFORCED_CLOTH);\n         register(\"tape_measure\", 261, \"Tape Measure\", 7, SlimefunItems.TAPE_MEASURE);\n         register(\"iron_golem_assembler\", 262, \"Automated Iron Golems\", 30, SlimefunItems.IRON_GOLEM_ASSEMBLER);\n+        register(\"unemployment_rune\", 263, \"Reset Villager Trades\", 29, SlimefunItems.UNEMPLOYMENT_RUNE);\n+        register(\"organic_nether_goo\", 264, \"Organic Nether Goo\", 14,SlimefunItems.ORGANIC_NETHER_GOO);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwMjQ3Nw=="}, "originalCommit": {"oid": "a33cfdb12df9e1e37140c80aab659db4ffbfdfb9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTYwNzg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/HeadTexture.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwODo1ODoxOVrOHACfBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwODo1ODoxOVrOHACfBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwMjc1Ng==", "bodyText": "Please add an empty line after this", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469802756", "createdAt": "2020-08-13T08:58:19Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/HeadTexture.java", "diffHunk": "@@ -96,8 +96,8 @@\n     NETHER_STAR_REACTOR(\"a11ed1d1b25b624665ecdddc3d3a5dff0b9f35e3de77a12f516e60fe8501cc8d\"),\n     UNKNOWN(\"46ba63344f49dd1c4f5488e926bf3d9e2b29916a6c50d610bb40a5273dc8c82\"),\n     MISSING_TEXTURE(\"e9eb9da26cf2d3341397a7f4913ba3d37d1ad10eae30ab25fa39ceb84bc\"),\n-    MINECRAFT_CHUNK(\"8449b9318e33158e64a46ab0de121c3d40000e3332c1574932b3c849d8fa0dc2\");\n-\n+    MINECRAFT_CHUNK(\"8449b9318e33158e64a46ab0de121c3d40000e3332c1574932b3c849d8fa0dc2\"),\n+    PIGLIN_HEAD(\"2882af1294a74023e6919a31d1a027310f2e142afb4667d230d155e7f21dbb41\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a33cfdb12df9e1e37140c80aab659db4ffbfdfb9"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTYxMDc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/resources/OrganicNetherGoo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwODo1OToxMlrOHACg6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwODo1OToxMlrOHACg6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwMzI0MA==", "bodyText": "This description does no cover anything about what this class (Organic Goo) is.\nIt is too generic.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469803240", "createdAt": "2020-08-13T08:59:12Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/resources/OrganicNetherGoo.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.resources;\n+import org.bukkit.inventory.ItemStack;\n+\n+import io.github.thebusybiscuit.slimefun4.api.items.ItemSetting;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.PiglinBarterDrop;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} can only be obtained via bartering with a {@link Piglin}. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a33cfdb12df9e1e37140c80aab659db4ffbfdfb9"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTYxMzg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwODo1OTo1OVrOHACi0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMDoyMTo1N1rOHAcRdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwMzcyOQ==", "bodyText": "No need to define o1 and o3 here if they are both 0...\nJust use 0.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r469803729", "createdAt": "2020-08-13T08:59:59Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler\n+ *\n+ */\n+public class RuneOfUnemployment extends SimpleSlimefunItem<EntityInteractHandler> {\n+\n+    public RuneOfUnemployment(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+\n+    @Override\n+    public EntityInteractHandler getItemHandler() {\n+        return (p, entity, item, offhand) -> {\n+            if (entity instanceof Villager) {\n+                Villager v = (Villager) entity;\n+                \n+                if(v.getProfession() == Profession.NONE || v.getProfession() == Profession.NITWIT)\n+                    return;\n+                \n+                if (p.getGameMode() != GameMode.CREATIVE) {\n+                    ItemUtils.consumeItem(item, false);\n+                }\n+                \n+                v.setVillagerExperience(0);\n+                v.setProfession(Profession.NONE);\n+                \n+                Double offset = ThreadLocalRandom.current().nextDouble(0, 0.5);\n+                double o1 = 0;\n+                double o2 = offset / 2;\n+                double o3 = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a33cfdb12df9e1e37140c80aab659db4ffbfdfb9"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIyNTI3MA==", "bodyText": "fixed", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r470225270", "createdAt": "2020-08-13T20:21:57Z", "author": {"login": "dniym"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler\n+ *\n+ */\n+public class RuneOfUnemployment extends SimpleSlimefunItem<EntityInteractHandler> {\n+\n+    public RuneOfUnemployment(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+\n+    @Override\n+    public EntityInteractHandler getItemHandler() {\n+        return (p, entity, item, offhand) -> {\n+            if (entity instanceof Villager) {\n+                Villager v = (Villager) entity;\n+                \n+                if(v.getProfession() == Profession.NONE || v.getProfession() == Profession.NITWIT)\n+                    return;\n+                \n+                if (p.getGameMode() != GameMode.CREATIVE) {\n+                    ItemUtils.consumeItem(item, false);\n+                }\n+                \n+                v.setVillagerExperience(0);\n+                v.setProfession(Profession.NONE);\n+                \n+                Double offset = ThreadLocalRandom.current().nextDouble(0, 0.5);\n+                double o1 = 0;\n+                double o2 = offset / 2;\n+                double o3 = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwMzcyOQ=="}, "originalCommit": {"oid": "a33cfdb12df9e1e37140c80aab659db4ffbfdfb9"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0Mzg4MzYyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/languages/researches_en.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQyMzo1ODoyM1rOHBOWiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQyMzo1ODoyM1rOHBOWiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA0NTc3MQ==", "bodyText": "This string can be removed now", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r471045771", "createdAt": "2020-08-15T23:58:23Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/resources/languages/researches_en.yml", "diffHunk": "@@ -236,6 +236,8 @@ slimefun:\n   magical_zombie_pills: De-Zombification\n   auto_brewer: Industrial Brewery\n   enchantment_rune: Ancient Enchanting\n+  unemployment_rune: Reset Villager Trades\n+  organic_nether_goo: Organic Nether Goo", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644878c534df66b83109d3fdbca408bca2ab92ba"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0Mzg4NDEzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQyMzo1OTowOVrOHBOWxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQyMzo1OTowOVrOHBOWxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA0NTgyOQ==", "bodyText": "Use the primitive type double here instead of the nullable boxed version.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r471045829", "createdAt": "2020-08-15T23:59:09Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler\n+ *\n+ */\n+public class RuneOfUnemployment extends SimpleSlimefunItem<EntityInteractHandler> {\n+\n+    public RuneOfUnemployment(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+\n+    @Override\n+    public EntityInteractHandler getItemHandler() {\n+        return (p, entity, item, offhand) -> {\n+            if (entity instanceof Villager) {\n+                Villager v = (Villager) entity;\n+                \n+                if(v.getProfession() == Profession.NONE || v.getProfession() == Profession.NITWIT)\n+                    return;\n+                \n+                if (p.getGameMode() != GameMode.CREATIVE) \n+                    ItemUtils.consumeItem(item, false);\n+                \n+                v.setVillagerExperience(0);\n+                v.setProfession(Profession.NONE);\n+                \n+                Double offset = ThreadLocalRandom.current().nextDouble(0, 0.5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644878c534df66b83109d3fdbca408bca2ab92ba"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0Mzg4NDQyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQyMzo1OTo0MVrOHBOW5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQyMzo1OTo0MVrOHBOW5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA0NTg2Mg==", "bodyText": "Also I am seeing not really much of a need for this seperate variable, you can also just make offset be divided by 2 already.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r471045862", "createdAt": "2020-08-15T23:59:41Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler\n+ *\n+ */\n+public class RuneOfUnemployment extends SimpleSlimefunItem<EntityInteractHandler> {\n+\n+    public RuneOfUnemployment(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+\n+    @Override\n+    public EntityInteractHandler getItemHandler() {\n+        return (p, entity, item, offhand) -> {\n+            if (entity instanceof Villager) {\n+                Villager v = (Villager) entity;\n+                \n+                if(v.getProfession() == Profession.NONE || v.getProfession() == Profession.NITWIT)\n+                    return;\n+                \n+                if (p.getGameMode() != GameMode.CREATIVE) \n+                    ItemUtils.consumeItem(item, false);\n+                \n+                v.setVillagerExperience(0);\n+                v.setProfession(Profession.NONE);\n+                \n+                Double offset = ThreadLocalRandom.current().nextDouble(0, 0.5);\n+                \n+                double o2 = offset / 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644878c534df66b83109d3fdbca408bca2ab92ba"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0Mzg4NDgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQwMDowMDoxMVrOHBOXDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQwMDowMDoxMVrOHBOXDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA0NTkwMg==", "bodyText": "I think the lore should probably be split into two lines, it's kinda long.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r471045902", "createdAt": "2020-08-16T00:00:11Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "diffHunk": "@@ -632,6 +633,7 @@ private SlimefunItems() {}\n     public static final SlimefunItemStack LIGHTNING_RUNE = new SlimefunItemStack(\"ANCIENT_RUNE_LIGHTNING\", new ColoredFireworkStar(Color.fromRGB(255, 255, 95), \"&7Ancient Rune &8&l[&e&lLightning&8&l]\"));\n     public static final SlimefunItemStack SOULBOUND_RUNE = new SlimefunItemStack(\"ANCIENT_RUNE_SOULBOUND\", new ColoredFireworkStar(Color.fromRGB(47, 0, 117), \"&7Ancient Rune &8&l[&5&lSoulbound&8&l]\", \"&eDrop this rune onto a dropped item to\", \"&5bind &ethat item to your soul.\", \" \", \"&eIt is advised that you only use this rune\", \"&eon &6important &eitems.\", \" \", \"&eItems bound to your soul won't drop on death.\"));\n     public static final SlimefunItemStack ENCHANTMENT_RUNE = new SlimefunItemStack(\"ANCIENT_RUNE_ENCHANTMENT\", new ColoredFireworkStar(Color.fromRGB(255, 217, 25), \"&7Ancient Rune &8&l[&6&lEnchantment&8&l]\", \"&eDrop this rune onto a dropped item to\", \"&6enchant &ethat item with a random enchantment.\"));\n+    public static final SlimefunItemStack UNEMPLOYMENT_RUNE = new SlimefunItemStack(\"ANCIENT_RUNE_UNEMPLOYMENT\", new ColoredFireworkStar(Color.fromRGB(25, 27, 5), \"&7Ancient Rune &8&l[&4&lUnemployment&8&l]\", \"&eRight click an employed villager to clear their current job and trades.\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644878c534df66b83109d3fdbca408bca2ab92ba"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTkwNjIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwODoxNTozMVrOHBezSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwODoxNTozMVrOHBezSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMxNTI3Mw==", "bodyText": "this can just be nextDouble(0.5)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            double offset = ThreadLocalRandom.current().nextDouble(0, 0.5);\n          \n          \n            \n                            double offset = ThreadLocalRandom.current().nextDouble(0.5);", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r471315273", "createdAt": "2020-08-17T08:15:31Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler\n+ *\n+ */\n+public class RuneOfUnemployment extends SimpleSlimefunItem<EntityInteractHandler> {\n+\n+    public RuneOfUnemployment(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+\n+    @Override\n+    public EntityInteractHandler getItemHandler() {\n+        return (p, entity, item, offhand) -> {\n+            if (entity instanceof Villager) {\n+                Villager v = (Villager) entity;\n+                \n+                if(v.getProfession() == Profession.NONE || v.getProfession() == Profession.NITWIT)\n+                    return;\n+                \n+                if (p.getGameMode() != GameMode.CREATIVE) \n+                    ItemUtils.consumeItem(item, false);\n+                \n+                v.setVillagerExperience(0);\n+                v.setProfession(Profession.NONE);\n+                \n+                double offset = ThreadLocalRandom.current().nextDouble(0, 0.5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98fe74ea9fb49a1edb6cea3d11ff07e3ff2fa3c"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTkxMDExOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwODoxNjoyOFrOHBe1cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwODoxNjoyOFrOHBe1cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMxNTgyNA==", "bodyText": "Add braces around the body, one line with braces is consistent with rest of code\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (p.getGameMode() != GameMode.CREATIVE) \n          \n          \n            \n                                ItemUtils.consumeItem(item, false);\n          \n          \n            \n                            \n          \n          \n            \n                            if (p.getGameMode() != GameMode.CREATIVE) {\n          \n          \n            \n                                ItemUtils.consumeItem(item, false);\n          \n          \n            \n                            }", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r471315824", "createdAt": "2020-08-17T08:16:28Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler\n+ *\n+ */\n+public class RuneOfUnemployment extends SimpleSlimefunItem<EntityInteractHandler> {\n+\n+    public RuneOfUnemployment(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+\n+    @Override\n+    public EntityInteractHandler getItemHandler() {\n+        return (p, entity, item, offhand) -> {\n+            if (entity instanceof Villager) {\n+                Villager v = (Villager) entity;\n+                \n+                if(v.getProfession() == Profession.NONE || v.getProfession() == Profession.NITWIT)\n+                    return;\n+                \n+                if (p.getGameMode() != GameMode.CREATIVE) \n+                    ItemUtils.consumeItem(item, false);\n+                ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98fe74ea9fb49a1edb6cea3d11ff07e3ff2fa3c"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTkxMTUzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwODoxNjo0OVrOHBe2OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwODoxNjo0OVrOHBe2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMxNjAyNQ==", "bodyText": "Inconsistent formatting, space after if and braces for the body\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if(v.getProfession() == Profession.NONE || v.getProfession() == Profession.NITWIT)\n          \n          \n            \n                                return;\n          \n          \n            \n                            \n          \n          \n            \n                            if (v.getProfession() == Profession.NONE || v.getProfession() == Profession.NITWIT) {\n          \n          \n            \n                                return;\n          \n          \n            \n                            }", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r471316025", "createdAt": "2020-08-17T08:16:49Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler\n+ *\n+ */\n+public class RuneOfUnemployment extends SimpleSlimefunItem<EntityInteractHandler> {\n+\n+    public RuneOfUnemployment(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+\n+    @Override\n+    public EntityInteractHandler getItemHandler() {\n+        return (p, entity, item, offhand) -> {\n+            if (entity instanceof Villager) {\n+                Villager v = (Villager) entity;\n+                \n+                if(v.getProfession() == Profession.NONE || v.getProfession() == Profession.NITWIT)\n+                    return;\n+                ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98fe74ea9fb49a1edb6cea3d11ff07e3ff2fa3c"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NjA0NzczOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwODo1NDowNlrOHBgGPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwODo1NDowNlrOHBgGPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzNjUxMQ==", "bodyText": "Invalid parameters here. Should use something like this:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (p, entity, item, offhand) -> {\n          \n          \n            \n                        if (entity instanceof Villager) {\n          \n          \n            \n                            Villager v = (Villager) entity;\n          \n          \n            \n                    return (e, item, offhand) -> {\n          \n          \n            \n                        if (e.getRightClicked() instanceof Villager) {\n          \n          \n            \n                            Villager v = (Villager) e.getRightClicked();", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r471336511", "createdAt": "2020-08-17T08:54:06Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler\n+ *\n+ */\n+public class RuneOfUnemployment extends SimpleSlimefunItem<EntityInteractHandler> {\n+\n+    public RuneOfUnemployment(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+\n+    @Override\n+    public EntityInteractHandler getItemHandler() {\n+        return (p, entity, item, offhand) -> {\n+            if (entity instanceof Villager) {\n+                Villager v = (Villager) entity;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98fe74ea9fb49a1edb6cea3d11ff07e3ff2fa3c"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NjU4MDA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMTozMTo1MlrOHBlBBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTozMDoyMlrOHCi5jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxNzA5NQ==", "bodyText": "Why would you reference \"ItemHandler\" here?", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r471417095", "createdAt": "2020-08-17T11:31:52Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a10813036bd57b2da1a3c8e8ce8b14c359558fa9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgxOTkxMQ==", "bodyText": "I am not entirely sure, I based this off of the RandomMobDrop item that I had already done and it did use the ItemHandler, probably leftover from the NotPlacable reference.   Would a @see EntityInteractHandler be more appropriate?", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r471819911", "createdAt": "2020-08-17T23:00:38Z", "author": {"login": "dniym"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxNzA5NQ=="}, "originalCommit": {"oid": "a10813036bd57b2da1a3c8e8ce8b14c359558fa9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgyMDIxMg==", "bodyText": "er or maybe I did it because of the -> getItemHandler() call", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r471820212", "createdAt": "2020-08-17T23:01:29Z", "author": {"login": "dniym"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxNzA5NQ=="}, "originalCommit": {"oid": "a10813036bd57b2da1a3c8e8ce8b14c359558fa9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjAzOTQwOA==", "bodyText": "EntityInteractHandler would probably be more appropriate.\nNot sure if we really need any see tag here though in the first place.", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r472039408", "createdAt": "2020-08-18T09:20:39Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxNzA5NQ=="}, "originalCommit": {"oid": "a10813036bd57b2da1a3c8e8ce8b14c359558fa9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQzMDk5MA==", "bodyText": "done", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r472430990", "createdAt": "2020-08-18T19:30:22Z", "author": {"login": "dniym"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxNzA5NQ=="}, "originalCommit": {"oid": "a10813036bd57b2da1a3c8e8ce8b14c359558fa9"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzIxMDU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDoyNDowNVrOHBq9rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDoyNDowNVrOHBq9rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUxNDU0Mg==", "bodyText": "Also\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (p.getGameMode() != GameMode.CREATIVE) {\n          \n          \n            \n                            if (e.getPlayer().getGameMode() != GameMode.CREATIVE) {", "url": "https://github.com/Slimefun/Slimefun4/pull/2220#discussion_r471514542", "createdAt": "2020-08-17T14:24:05Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/RuneOfUnemployment.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical;\n+\n+import java.util.concurrent.ThreadLocalRandom;\n+\n+import org.bukkit.GameMode;\n+import org.bukkit.Location;\n+import org.bukkit.Particle;\n+import org.bukkit.entity.Villager;\n+import org.bukkit.entity.Villager.Profession;\n+import org.bukkit.entity.WanderingTrader;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.Merchant;\n+import io.github.thebusybiscuit.cscorelib2.inventory.ItemUtils;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.EntityInteractHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.Objects.handlers.ItemHandler;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} allows you to reset a {@link Villager} profession. \n+ * Useful to reset a villager who does not have desirable trades.\n+ *\n+ * @author dNiym\n+ *\n+ * @see ItemHandler\n+ *\n+ */\n+public class RuneOfUnemployment extends SimpleSlimefunItem<EntityInteractHandler> {\n+\n+    public RuneOfUnemployment(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+\n+    @Override\n+    public EntityInteractHandler getItemHandler() {\n+        return (e, item, offhand) -> {\n+            if (e.getRightClicked() instanceof Villager) {\n+                Villager v = (Villager) e.getRightClicked();\n+                \n+                if (v.getProfession() == Profession.NONE || v.getProfession() == Profession.NITWIT) {\n+                    return;\n+                }\n+\n+                if (p.getGameMode() != GameMode.CREATIVE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a10813036bd57b2da1a3c8e8ce8b14c359558fa9"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 306, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}