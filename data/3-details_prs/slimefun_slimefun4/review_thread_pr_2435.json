{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxMDA2MDY0", "number": 2435, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNzoyMTo0MVrOEsTPXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMDozMjozN1rOEsXmyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODg4MDI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNzoyMTo0MVrOHfhN9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNzoyMTo0MVrOHfhN9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMjE0OA==", "bodyText": "You can also just make this a SimpleSlimefunItem<ItemUseHandler> to avoid the class casting.", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502812148", "createdAt": "2020-10-10T17:21:41Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting and, it's\n+ * used for various food recipes recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SlimefunItem {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0f7c37e08acaf07a5062d48a9d8349039bddae"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODg4MDUzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNzoyMTo1MlrOHfhODQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNzo0MjoyNFrOHfhVQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMjE3Mw==", "bodyText": "ParamsAreNonnullByDefault", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502812173", "createdAt": "2020-10-10T17:21:52Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting and, it's\n+ * used for various food recipes recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SlimefunItem {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0f7c37e08acaf07a5062d48a9d8349039bddae"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMzEyMw==", "bodyText": "Add it to the class? (And both classes or just this one)\nMay you tell me what that does, haven't really seen it in other sf classes?", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502813123", "createdAt": "2020-10-10T17:32:00Z", "author": {"login": "TheSilentPro"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting and, it's\n+ * used for various food recipes recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SlimefunItem {\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMjE3Mw=="}, "originalCommit": {"oid": "cf0f7c37e08acaf07a5062d48a9d8349039bddae"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxNDAxOQ==", "bodyText": "To the constructor, it marks the parameters to be \"non-null\".\nIt is used for most of our constructors and methods.\nI see the preview being a bit inaccurate there...\nI marked the line above the constructor but forgot that it doesn't show the constructor below in the preview :/", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502814019", "createdAt": "2020-10-10T17:42:24Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting and, it's\n+ * used for various food recipes recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SlimefunItem {\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMjE3Mw=="}, "originalCommit": {"oid": "cf0f7c37e08acaf07a5062d48a9d8349039bddae"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODg4MTc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNzoyMzo0NlrOHfhOmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNzoyMzo0NlrOHfhOmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMjMxNA==", "bodyText": "Again, SimpleSlimefunItem and probably only cancel it for signs", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502812314", "createdAt": "2020-10-10T17:23:46Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +39,9 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Override\n+    public void preRegister() {\n+        addItemHandler((ItemUseHandler) PlayerRightClickEvent::cancel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0f7c37e08acaf07a5062d48a9d8349039bddae"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODkyODU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxODoyNToyMFrOHfhk1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxOTo1ODo0N1rOHfiGPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxODAwNA==", "bodyText": "Use tags.", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502818004", "createdAt": "2020-10-10T18:25:20Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +43,18 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (e.getClickedBlock().get().getType().name().contains(\"SIGN\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9928e5e109bdb57b02db1ba755cfad8e701251b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgyMDE1MA==", "bodyText": "Tag.SIGNS please", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502820150", "createdAt": "2020-10-10T18:47:36Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +43,18 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (e.getClickedBlock().get().getType().name().contains(\"SIGN\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxODAwNA=="}, "originalCommit": {"oid": "f9928e5e109bdb57b02db1ba755cfad8e701251b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgyNjU1Nw==", "bodyText": "Didn't know that was a thing, i will get on it sorry.", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502826557", "createdAt": "2020-10-10T19:58:47Z", "author": {"login": "TheSilentPro"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +43,18 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (e.getClickedBlock().get().getType().name().contains(\"SIGN\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxODAwNA=="}, "originalCommit": {"oid": "f9928e5e109bdb57b02db1ba755cfad8e701251b"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTE0ODc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMzozMjozNlrOHfjKIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMzozMjozNlrOHfjKIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0MzkzOA==", "bodyText": "First off: This should NOT be public.\nAlso a missing nullability annotation.\nBut most importantly, there is no need for this method, this can all easily be done as a lambda expression.", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502843938", "createdAt": "2020-10-10T23:32:36Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting, it's\n+ * used for various foods and recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SimpleSlimefunItem<ItemUseHandler> {\n+\n+    @ParametersAreNonnullByDefault\n+    public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, ItemStack recipeOutput) {\n+        super(category, item, recipeType, recipe, recipeOutput);\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTE0OTA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMzozMjo1NlrOHfjKPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMDowODoyOVrOHfmPKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0Mzk2Ng==", "bodyText": "Formatting\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    else {\n          \n          \n            \n                    } else {", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502843966", "createdAt": "2020-10-10T23:32:56Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting, it's\n+ * used for various foods and recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SimpleSlimefunItem<ItemUseHandler> {\n+\n+    @ParametersAreNonnullByDefault\n+    public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, ItemStack recipeOutput) {\n+        super(category, item, recipeType, recipe, recipeOutput);\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (!e.getClickedBlock().get().getType().isInteractable()) {\n+                e.cancel();\n+            }\n+        }\n+        else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5Mjc5NA==", "bodyText": "Last time i had it like that and you said to put it in the next line", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502892794", "createdAt": "2020-10-11T09:53:19Z", "author": {"login": "TheSilentPro"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting, it's\n+ * used for various foods and recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SimpleSlimefunItem<ItemUseHandler> {\n+\n+    @ParametersAreNonnullByDefault\n+    public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, ItemStack recipeOutput) {\n+        super(category, item, recipeType, recipe, recipeOutput);\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (!e.getClickedBlock().get().getType().isInteractable()) {\n+                e.cancel();\n+            }\n+        }\n+        else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0Mzk2Ng=="}, "originalCommit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5NDM3OQ==", "bodyText": "I know, but since many seemed to prefer the other style, we have revised our styling guidelines to now go with what the majority seems to prefer.", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502894379", "createdAt": "2020-10-11T10:08:29Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting, it's\n+ * used for various foods and recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SimpleSlimefunItem<ItemUseHandler> {\n+\n+    @ParametersAreNonnullByDefault\n+    public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, ItemStack recipeOutput) {\n+        super(category, item, recipeType, recipe, recipeOutput);\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (!e.getClickedBlock().get().getType().isInteractable()) {\n+                e.cancel();\n+            }\n+        }\n+        else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0Mzk2Ng=="}, "originalCommit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTE0OTE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMzozMzoxNVrOHfjKUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMzozMzoxNVrOHfjKUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0Mzk4NA==", "bodyText": "First off: This should NOT be public.\nAlso a missing nullability annotation.\nBut most importantly, there is no need for this method, this can all easily be done as a lambda expression.", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502843984", "createdAt": "2020-10-10T23:33:15Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +44,18 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTE0OTM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMzozMzozOFrOHfjKaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMzozMzozOFrOHfjKaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0NDAwOA==", "bodyText": "You can merge these two statements using &&", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502844008", "createdAt": "2020-10-10T23:33:38Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +44,18 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (Tag.SIGNS.isTagged(e.getClickedBlock().get().getType())) {\n+                e.cancel();\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTE0OTU2OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMzozNDowNVrOHfjKgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMzozNDowNVrOHfjKgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0NDAzMg==", "bodyText": "Calling the method twice is a bit non-optimal, you should store the Optional as a variable and use that.", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502844032", "createdAt": "2020-10-10T23:34:05Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +44,18 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (Tag.SIGNS.isTagged(e.getClickedBlock().get().getType())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTE0OTY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMzozNDoxMFrOHfjKjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMzozNDoxMFrOHfjKjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0NDA0NA==", "bodyText": "Calling the method twice is a bit non-optimal, you should store the Optional as a variable and use that.", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502844044", "createdAt": "2020-10-10T23:34:10Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting, it's\n+ * used for various foods and recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SimpleSlimefunItem<ItemUseHandler> {\n+\n+    @ParametersAreNonnullByDefault\n+    public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, ItemStack recipeOutput) {\n+        super(category, item, recipeType, recipe, recipeOutput);\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (!e.getClickedBlock().get().getType().isInteractable()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTU4MTUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMDoxNjoyNVrOHfmSVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMDoyOTozNVrOHfmXsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5NTE5MA==", "bodyText": "I don't think i can use && here due to that else statement, correct me if i'm wrong though", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502895190", "createdAt": "2020-10-11T10:16:25Z", "author": {"login": "TheSilentPro"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -28,18 +29,16 @@ public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeTy\n     @Nonnull\n     @Override\n     public ItemUseHandler getItemHandler() {\n-        return this::use;\n-    }\n-\n-    public void use(PlayerRightClickEvent e) {\n-        if (e.getClickedBlock().isPresent()) {\n-            if (!e.getClickedBlock().get().getType().isInteractable()) {\n+        return e -> {\n+            Optional<Block> block = e.getClickedBlock();\n+            if (block.isPresent()) {\n+                if (!block.get().getType().isInteractable()) {\n+                    e.cancel();\n+                }\n+            } else {\n                 e.cancel();\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2902f74d10bf547fb92615d284b3c1cbd80d2608"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5NjU2MA==", "bodyText": "Correct.", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502896560", "createdAt": "2020-10-11T10:29:35Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -28,18 +29,16 @@ public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeTy\n     @Nonnull\n     @Override\n     public ItemUseHandler getItemHandler() {\n-        return this::use;\n-    }\n-\n-    public void use(PlayerRightClickEvent e) {\n-        if (e.getClickedBlock().isPresent()) {\n-            if (!e.getClickedBlock().get().getType().isInteractable()) {\n+        return e -> {\n+            Optional<Block> block = e.getClickedBlock();\n+            if (block.isPresent()) {\n+                if (!block.get().getType().isInteractable()) {\n+                    e.cancel();\n+                }\n+            } else {\n                 e.cancel();\n             }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5NTE5MA=="}, "originalCommit": {"oid": "2902f74d10bf547fb92615d284b3c1cbd80d2608"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTU5NTQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMDozMjoxN1rOHfmZPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMDozMjoxN1rOHfmZPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5Njk1OQ==", "bodyText": "I don't think i can use && here due to that else statement, correct me if i'm wrong though\n\nYes buuuuuut what cou could do is the following.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return e -> {\n          \n          \n            \n                        Optional<Block> block = e.getClickedBlock();\n          \n          \n            \n                        if (block.isPresent()) {\n          \n          \n            \n                            if (!block.get().getType().isInteractable()) {\n          \n          \n            \n                                e.cancel();\n          \n          \n            \n                            }\n          \n          \n            \n                        } else {\n          \n          \n            \n                            e.cancel();\n          \n          \n            \n                        }\n          \n          \n            \n                    return e -> {\n          \n          \n            \n                        Optional<Block> block = e.getClickedBlock();\n          \n          \n            \n            \n          \n          \n            \n                        if (!block.isPresent() || !block.get().getType().isInteractable()) {\n          \n          \n            \n                            e.cancel();\n          \n          \n            \n                        }", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502896959", "createdAt": "2020-10-11T10:32:17Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -28,18 +29,16 @@ public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeTy\n     @Nonnull\n     @Override\n     public ItemUseHandler getItemHandler() {\n-        return this::use;\n-    }\n-\n-    public void use(PlayerRightClickEvent e) {\n-        if (e.getClickedBlock().isPresent()) {\n-            if (!e.getClickedBlock().get().getType().isInteractable()) {\n+        return e -> {\n+            Optional<Block> block = e.getClickedBlock();\n+            if (block.isPresent()) {\n+                if (!block.get().getType().isInteractable()) {\n+                    e.cancel();\n+                }\n+            } else {\n                 e.cancel();\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2902f74d10bf547fb92615d284b3c1cbd80d2608"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTU5NTYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMDozMjozN1rOHfmZXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMDozMjozN1rOHfmZXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5Njk5MQ==", "bodyText": "An empty line before the if always looks a bit nicer\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Optional<Block> block = e.getClickedBlock();\n          \n          \n            \n                        if (block.isPresent() && Tag.SIGNS.isTagged(block.get().getType())) {\n          \n          \n            \n                        Optional<Block> block = e.getClickedBlock();\n          \n          \n            \n            \n          \n          \n            \n                        if (block.isPresent() && Tag.SIGNS.isTagged(block.get().getType())) {", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502896991", "createdAt": "2020-10-11T10:32:37Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -47,15 +47,12 @@ public int getBarteringLootChance() {\n     @Nonnull\n     @Override\n     public ItemUseHandler getItemHandler() {\n-        return this::use;\n-    }\n-\n-    public void use(PlayerRightClickEvent e) {\n-        if (e.getClickedBlock().isPresent()) {\n-            if (Tag.SIGNS.isTagged(e.getClickedBlock().get().getType())) {\n+        return e -> {\n+            Optional<Block> block = e.getClickedBlock();\n+            if (block.isPresent() && Tag.SIGNS.isTagged(block.get().getType())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2902f74d10bf547fb92615d284b3c1cbd80d2608"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 240, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}