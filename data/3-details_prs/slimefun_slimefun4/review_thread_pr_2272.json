{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NTMxNDk4", "number": 2272, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1NzoxMVrOEeeFXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMTowMDoyNVrOEeeJ3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzg1NjI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1NzoxMVrOHKI9nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1NzoxMVrOHKI9nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5NDY1NQ==", "bodyText": "No need to mark these as final here.", "url": "https://github.com/Slimefun/Slimefun4/pull/2272#discussion_r480394655", "createdAt": "2020-08-31T20:57:11Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.github.thebusybiscuit.slimefun4.core.commands.subcommands;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.Rechargeable;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SlimefunCommand;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SubCommand;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.entity.Player;\n+import org.bukkit.inventory.ItemStack;\n+\n+class ChargeCommand extends SubCommand {\n+\n+    ChargeCommand(SlimefunPlugin plugin, SlimefunCommand cmd) {\n+        super(plugin, cmd, \"charge\", false);\n+    }\n+\n+    protected String getDescription() {\n+        return \"commands.charge.description\";\n+    }\n+\n+    @Override\n+    public void onExecute(CommandSender sender, String[] args) {\n+        if (sender instanceof Player) {\n+            if (sender.hasPermission(\"slimefun.charge.command\")) {\n+                Player p = ((Player) sender).getPlayer();\n+                final ItemStack item = p.getInventory().getItemInMainHand();\n+                final SlimefunItem slimefunItem = SlimefunItem.getByItem(item);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "125c3fe60d5c4dbf10795551972c6e20a251435e"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzg1NzI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1NzoyN1rOHKI-PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1NzoyN1rOHKI-PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5NDgxMw==", "bodyText": "Missing Override annotation.", "url": "https://github.com/Slimefun/Slimefun4/pull/2272#discussion_r480394813", "createdAt": "2020-08-31T20:57:27Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.github.thebusybiscuit.slimefun4.core.commands.subcommands;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.Rechargeable;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SlimefunCommand;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SubCommand;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.entity.Player;\n+import org.bukkit.inventory.ItemStack;\n+\n+class ChargeCommand extends SubCommand {\n+\n+    ChargeCommand(SlimefunPlugin plugin, SlimefunCommand cmd) {\n+        super(plugin, cmd, \"charge\", false);\n+    }\n+\n+    protected String getDescription() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "125c3fe60d5c4dbf10795551972c6e20a251435e"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzg1Nzg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1NzozN1rOHKI-jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1NzozN1rOHKI-jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5NDg5NQ==", "bodyText": "Missing javadocs and author tag.", "url": "https://github.com/Slimefun/Slimefun4/pull/2272#discussion_r480394895", "createdAt": "2020-08-31T20:57:37Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.github.thebusybiscuit.slimefun4.core.commands.subcommands;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.Rechargeable;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SlimefunCommand;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SubCommand;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.entity.Player;\n+import org.bukkit.inventory.ItemStack;\n+\n+class ChargeCommand extends SubCommand {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "125c3fe60d5c4dbf10795551972c6e20a251435e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzg2MTU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1ODo0MFrOHKJAqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1ODo0MFrOHKJAqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5NTQzMw==", "bodyText": "space before the bracket {", "url": "https://github.com/Slimefun/Slimefun4/pull/2272#discussion_r480395433", "createdAt": "2020-08-31T20:58:40Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.github.thebusybiscuit.slimefun4.core.commands.subcommands;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.Rechargeable;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SlimefunCommand;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SubCommand;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.entity.Player;\n+import org.bukkit.inventory.ItemStack;\n+\n+class ChargeCommand extends SubCommand {\n+\n+    ChargeCommand(SlimefunPlugin plugin, SlimefunCommand cmd) {\n+        super(plugin, cmd, \"charge\", false);\n+    }\n+\n+    protected String getDescription() {\n+        return \"commands.charge.description\";\n+    }\n+\n+    @Override\n+    public void onExecute(CommandSender sender, String[] args) {\n+        if (sender instanceof Player) {\n+            if (sender.hasPermission(\"slimefun.charge.command\")) {\n+                Player p = ((Player) sender).getPlayer();\n+                final ItemStack item = p.getInventory().getItemInMainHand();\n+                final SlimefunItem slimefunItem = SlimefunItem.getByItem(item);\n+                if (slimefunItem instanceof Rechargeable){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "125c3fe60d5c4dbf10795551972c6e20a251435e"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzg2Mjc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1ODo1OFrOHKJBXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1ODo1OFrOHKJBXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5NTYxNA==", "bodyText": "You should create a variable for Rechargeable here rather than casting it twice.", "url": "https://github.com/Slimefun/Slimefun4/pull/2272#discussion_r480395614", "createdAt": "2020-08-31T20:58:58Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.github.thebusybiscuit.slimefun4.core.commands.subcommands;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.Rechargeable;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SlimefunCommand;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SubCommand;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.entity.Player;\n+import org.bukkit.inventory.ItemStack;\n+\n+class ChargeCommand extends SubCommand {\n+\n+    ChargeCommand(SlimefunPlugin plugin, SlimefunCommand cmd) {\n+        super(plugin, cmd, \"charge\", false);\n+    }\n+\n+    protected String getDescription() {\n+        return \"commands.charge.description\";\n+    }\n+\n+    @Override\n+    public void onExecute(CommandSender sender, String[] args) {\n+        if (sender instanceof Player) {\n+            if (sender.hasPermission(\"slimefun.charge.command\")) {\n+                Player p = ((Player) sender).getPlayer();\n+                final ItemStack item = p.getInventory().getItemInMainHand();\n+                final SlimefunItem slimefunItem = SlimefunItem.getByItem(item);\n+                if (slimefunItem instanceof Rechargeable){\n+                    ((Rechargeable) slimefunItem).addItemCharge(item, ((Rechargeable) slimefunItem).getMaxItemCharge(item));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "125c3fe60d5c4dbf10795551972c6e20a251435e"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzg2NTU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1OTo0OFrOHKJDDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1OTo0OFrOHKJDDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5NjA0NA==", "bodyText": "setItemCharge would be much more appropriate here since you want to set the charge, not add to it.", "url": "https://github.com/Slimefun/Slimefun4/pull/2272#discussion_r480396044", "createdAt": "2020-08-31T20:59:48Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.github.thebusybiscuit.slimefun4.core.commands.subcommands;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.Rechargeable;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SlimefunCommand;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SubCommand;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.entity.Player;\n+import org.bukkit.inventory.ItemStack;\n+\n+class ChargeCommand extends SubCommand {\n+\n+    ChargeCommand(SlimefunPlugin plugin, SlimefunCommand cmd) {\n+        super(plugin, cmd, \"charge\", false);\n+    }\n+\n+    protected String getDescription() {\n+        return \"commands.charge.description\";\n+    }\n+\n+    @Override\n+    public void onExecute(CommandSender sender, String[] args) {\n+        if (sender instanceof Player) {\n+            if (sender.hasPermission(\"slimefun.charge.command\")) {\n+                Player p = ((Player) sender).getPlayer();\n+                final ItemStack item = p.getInventory().getItemInMainHand();\n+                final SlimefunItem slimefunItem = SlimefunItem.getByItem(item);\n+                if (slimefunItem instanceof Rechargeable){\n+                    ((Rechargeable) slimefunItem).addItemCharge(item, ((Rechargeable) slimefunItem).getMaxItemCharge(item));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "125c3fe60d5c4dbf10795551972c6e20a251435e"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzg2NjQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1OTo1OVrOHKJDgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMDo1OTo1OVrOHKJDgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5NjE2MQ==", "bodyText": "The else should go on the next line here like the rest.", "url": "https://github.com/Slimefun/Slimefun4/pull/2272#discussion_r480396161", "createdAt": "2020-08-31T20:59:59Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.github.thebusybiscuit.slimefun4.core.commands.subcommands;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.Rechargeable;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SlimefunCommand;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SubCommand;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.entity.Player;\n+import org.bukkit.inventory.ItemStack;\n+\n+class ChargeCommand extends SubCommand {\n+\n+    ChargeCommand(SlimefunPlugin plugin, SlimefunCommand cmd) {\n+        super(plugin, cmd, \"charge\", false);\n+    }\n+\n+    protected String getDescription() {\n+        return \"commands.charge.description\";\n+    }\n+\n+    @Override\n+    public void onExecute(CommandSender sender, String[] args) {\n+        if (sender instanceof Player) {\n+            if (sender.hasPermission(\"slimefun.charge.command\")) {\n+                Player p = ((Player) sender).getPlayer();\n+                final ItemStack item = p.getInventory().getItemInMainHand();\n+                final SlimefunItem slimefunItem = SlimefunItem.getByItem(item);\n+                if (slimefunItem instanceof Rechargeable){\n+                    ((Rechargeable) slimefunItem).addItemCharge(item, ((Rechargeable) slimefunItem).getMaxItemCharge(item));\n+                    SlimefunPlugin.getLocalization().sendMessage(sender, \"commands.charge.charge-success\", true);\n+                } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "125c3fe60d5c4dbf10795551972c6e20a251435e"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzg2NzgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMTowMDoyNVrOHKJEVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMTowMDoyNVrOHKJEVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5NjM3NQ==", "bodyText": "Player#getPlayer() is very redundant, you already cast sender to a Player.", "url": "https://github.com/Slimefun/Slimefun4/pull/2272#discussion_r480396375", "createdAt": "2020-08-31T21:00:25Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/commands/subcommands/ChargeCommand.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.github.thebusybiscuit.slimefun4.core.commands.subcommands;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.Rechargeable;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SlimefunCommand;\n+import io.github.thebusybiscuit.slimefun4.core.commands.SubCommand;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.command.CommandSender;\n+import org.bukkit.entity.Player;\n+import org.bukkit.inventory.ItemStack;\n+\n+class ChargeCommand extends SubCommand {\n+\n+    ChargeCommand(SlimefunPlugin plugin, SlimefunCommand cmd) {\n+        super(plugin, cmd, \"charge\", false);\n+    }\n+\n+    protected String getDescription() {\n+        return \"commands.charge.description\";\n+    }\n+\n+    @Override\n+    public void onExecute(CommandSender sender, String[] args) {\n+        if (sender instanceof Player) {\n+            if (sender.hasPermission(\"slimefun.charge.command\")) {\n+                Player p = ((Player) sender).getPlayer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "125c3fe60d5c4dbf10795551972c6e20a251435e"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 324, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}