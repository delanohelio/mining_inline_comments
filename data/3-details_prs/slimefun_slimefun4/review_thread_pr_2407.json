{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MzI5MTQ2", "number": 2407, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToyMzowNlrOErO5BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToyNToyM1rOErO9jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzY4MTk2OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToyMzowNlrOHd40tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTozMDowM1rOHd5KAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwMTc0OQ==", "bodyText": "Should also tell from which api/package.", "url": "https://github.com/Slimefun/Slimefun4/pull/2407#discussion_r501101749", "createdAt": "2020-10-07T15:23:06Z", "author": {"login": "LinoxGH"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -94,3 +94,48 @@ Then you should be able build it via Maven using the goals `clean package`.\n \n If you have any further questions, then please join our [Discord Support Server](https://discord.gg/slimefun) and ask your questions in the `#programming-help` channel.<br>\n **Note that we will not accept any bug reports from custom-compiled versions of Slimefun**.\n+\n+## :black_nib: Code Style guidelines\n+The general gist when it comes to code style: **Try to be consistent!**.<br>\n+Try to stay inline with the code that surrounds you, having an entire package or even a single file that's filled with plenty of different and inconsistent code styles is just hard to read or maintain. That's why we wanna make sure everyone follows these simple principles:\n+\n+1. Imports\n+* Don't use wildcard (`*`) imports!\n+* Don't import unused classes!\n+* Don't use static imports!\n+2. Annotations\n+* Methods and parameters should be annotated with `@Nullable` or `@Nonnull`!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbb2a78a4ca8558002a5b5e5f25d5c942cf90964"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwNzIwMA==", "bodyText": "Yes!", "url": "https://github.com/Slimefun/Slimefun4/pull/2407#discussion_r501107200", "createdAt": "2020-10-07T15:30:03Z", "author": {"login": "TheBusyBiscuit"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -94,3 +94,48 @@ Then you should be able build it via Maven using the goals `clean package`.\n \n If you have any further questions, then please join our [Discord Support Server](https://discord.gg/slimefun) and ask your questions in the `#programming-help` channel.<br>\n **Note that we will not accept any bug reports from custom-compiled versions of Slimefun**.\n+\n+## :black_nib: Code Style guidelines\n+The general gist when it comes to code style: **Try to be consistent!**.<br>\n+Try to stay inline with the code that surrounds you, having an entire package or even a single file that's filled with plenty of different and inconsistent code styles is just hard to read or maintain. That's why we wanna make sure everyone follows these simple principles:\n+\n+1. Imports\n+* Don't use wildcard (`*`) imports!\n+* Don't import unused classes!\n+* Don't use static imports!\n+2. Annotations\n+* Methods and parameters should be annotated with `@Nullable` or `@Nonnull`!", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwMTc0OQ=="}, "originalCommit": {"oid": "bbb2a78a4ca8558002a5b5e5f25d5c942cf90964"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzY5MzU2OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToyNToyM1rOHd470g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTozMDoyOVrOHd5LYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwMzU3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Classes should have an `@author` tag.\n          \n          \n            \n            * Classes should have an `@author` tag.\n          \n          \n            \n            * Classes should have `@see` tags pinpointing the apis used in the class.", "url": "https://github.com/Slimefun/Slimefun4/pull/2407#discussion_r501103570", "createdAt": "2020-10-07T15:25:23Z", "author": {"login": "LinoxGH"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -94,3 +94,48 @@ Then you should be able build it via Maven using the goals `clean package`.\n \n If you have any further questions, then please join our [Discord Support Server](https://discord.gg/slimefun) and ask your questions in the `#programming-help` channel.<br>\n **Note that we will not accept any bug reports from custom-compiled versions of Slimefun**.\n+\n+## :black_nib: Code Style guidelines\n+The general gist when it comes to code style: **Try to be consistent!**.<br>\n+Try to stay inline with the code that surrounds you, having an entire package or even a single file that's filled with plenty of different and inconsistent code styles is just hard to read or maintain. That's why we wanna make sure everyone follows these simple principles:\n+\n+#### 1. Imports\n+* Don't use wildcard (`*`) imports!\n+* Don't import unused classes!\n+* Don't use static imports!\n+#### 2. Annotations\n+* Methods and parameters should be annotated with `@Nullable` or `@Nonnull`!\n+* Methods that override a method must be annotated with `@Override`!\n+* Interfaces with only one method should be annotated using `@FunctionalInterface`!\n+* If you deprecate a method, add an `@deprecated` section to the javadocs explaining why you did it.\n+#### 3. Documentation\n+* Every class and every public method should have a Javadocs section assigned to it.\n+* New packages should have a `package-info.java` file with documentation about the package.\n+* Classes should have an `@author` tag.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "816c0a4e494feab4f34da151730e487dcade56c1"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwNzU1Mw==", "bodyText": "Hmm, I will include this suggestion but I'll probably rephrase it a little.", "url": "https://github.com/Slimefun/Slimefun4/pull/2407#discussion_r501107553", "createdAt": "2020-10-07T15:30:29Z", "author": {"login": "TheBusyBiscuit"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -94,3 +94,48 @@ Then you should be able build it via Maven using the goals `clean package`.\n \n If you have any further questions, then please join our [Discord Support Server](https://discord.gg/slimefun) and ask your questions in the `#programming-help` channel.<br>\n **Note that we will not accept any bug reports from custom-compiled versions of Slimefun**.\n+\n+## :black_nib: Code Style guidelines\n+The general gist when it comes to code style: **Try to be consistent!**.<br>\n+Try to stay inline with the code that surrounds you, having an entire package or even a single file that's filled with plenty of different and inconsistent code styles is just hard to read or maintain. That's why we wanna make sure everyone follows these simple principles:\n+\n+#### 1. Imports\n+* Don't use wildcard (`*`) imports!\n+* Don't import unused classes!\n+* Don't use static imports!\n+#### 2. Annotations\n+* Methods and parameters should be annotated with `@Nullable` or `@Nonnull`!\n+* Methods that override a method must be annotated with `@Override`!\n+* Interfaces with only one method should be annotated using `@FunctionalInterface`!\n+* If you deprecate a method, add an `@deprecated` section to the javadocs explaining why you did it.\n+#### 3. Documentation\n+* Every class and every public method should have a Javadocs section assigned to it.\n+* New packages should have a `package-info.java` file with documentation about the package.\n+* Classes should have an `@author` tag.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwMzU3MA=="}, "originalCommit": {"oid": "816c0a4e494feab4f34da151730e487dcade56c1"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 235, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}