{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MzM2NDI3", "number": 2384, "title": "Added Elytra Cap", "bodyText": "Description\nAdded the crash helmet which can protect you from flying into walls while using elytra.\nChanges\nAdded crash helmet\nRelated Issues\n\n\nNone but Discord approved suggestion.\nChecklist\n\n\n\n I have fully tested the proposed changes and promise that they will not break everything into chaos.\n I have also tested the proposed changes in combination with various popular addons and can confirm my changes do not break them.\n I followed the existing code standards and didn't mess up the formatting.\n I did my best to add documentation to any public classes or methods I added.\n I have added Nonnull and Nullable annotations to my methods to indicate their behaviour for null values\n I added sufficient Unit Tests to cover my code.", "createdAt": "2020-10-03T20:48:57Z", "url": "https://github.com/Slimefun/Slimefun4/pull/2384", "merged": true, "mergeCommit": {"oid": "80c4242dd73c1ae3e6fd1aaadb61c1277f739a2e"}, "closed": true, "closedAt": "2020-10-07T14:01:46Z", "author": {"login": "Seggan"}, "timelineItems": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPAgjDgH2gAyNDk3MzM2NDI3OjllMDQ4NWU1MjZlMDI0NDZlMzM0ZjA0MTZkZDhhMjI0YjljMTA0N2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdP-B3VgFqTUwMzMxNDQ1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9e0485e526e02446e334f0416dd8a224b9c1047b", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/9e0485e526e02446e334f0416dd8a224b9c1047b", "committedDate": "2020-10-03T20:21:39Z", "message": "Added crash helmet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/23efd62c4961c498cb083786cb6060fff56e60cc", "committedDate": "2020-10-03T20:31:27Z", "message": "Added crash helmet listener and research"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTczNjE3", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-501573617", "createdAt": "2020-10-03T20:54:24Z", "commit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDo1NDoyNFrOHcDmbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDo1NDoyNFrOHcDmbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTE2NA==", "bodyText": "No star imports, please.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499181164", "createdAt": "2020-10-03T20:54:24Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -13,6 +13,7 @@\n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTczOTU0", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-501573954", "createdAt": "2020-10-03T21:01:46Z", "commit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMTowMTo0N1rOHcDoQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMTowMTo0N1rOHcDoQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTYzMw==", "bodyText": "I think the player check should be the first here.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499181633", "createdAt": "2020-10-03T21:01:47Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL) || !(e.getEntity() instanceof Player)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTc0MjQ5", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-501574249", "createdAt": "2020-10-03T21:09:00Z", "commit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMTowOTowMFrOHcDp-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMTowOTowMFrOHcDp-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjA3NQ==", "bodyText": "I would rather declare this near the other armor stuff.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499182075", "createdAt": "2020-10-03T21:09:00Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "diffHunk": "@@ -838,6 +838,8 @@ private SlimefunItems() {}\n     public static final SlimefunItemStack MAGNESIUM_SALT = new SlimefunItemStack(\"MAGNESIUM_SALT\", Material.SUGAR, \"&cMagnesium Salt\", \"\", \"&7A special type of fuel that can be\", \"&7used in a Magnesium-powered Generator\");\n     public static final SlimefunItemStack MAGNESIUM_GENERATOR = new SlimefunItemStack(\"MAGNESIUM_GENERATOR\", HeadTexture.GENERATOR, \"&cMagnesium-powered Generator\", \"\", LoreBuilder.machine(MachineTier.MEDIUM, MachineType.GENERATOR), LoreBuilder.powerBuffer(128), LoreBuilder.powerPerSecond(36));\n \n+    public static final SlimefunItemStack CRASH_HELMET = new SlimefunItemStack(\"CRASH_HELMET\", Material.IRON_HELMET, \"&5Crash Helmet\", \"\", \"&7This helmet will protect you from\", \"&7crashing while flying elytra.\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b540bc05bc96b1a9b925514ec61bb02cb64b8fbc", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b540bc05bc96b1a9b925514ec61bb02cb64b8fbc", "committedDate": "2020-10-03T21:20:29Z", "message": "Crash helmet now works"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTc0NzQ5", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-501574749", "createdAt": "2020-10-03T21:18:52Z", "commit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMToxODo1MlrOHcDsOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMToyMDo0NlrOHcDspw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjY0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!(e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL) || !(e.getEntity() instanceof Player)) {\n          \n          \n            \n                    if (e.getCause() != EntityDamageEvent.DamageCause.FLY_INTO_WALL || !(e.getEntity() instanceof Player)) {", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499182649", "createdAt": "2020-10-03T21:18:52Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL) || !(e.getEntity() instanceof Player)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4Mjc1OQ==", "bodyText": "I'd have switched places of slime balls and iron ingots.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499182759", "createdAt": "2020-10-03T21:20:46Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -1016,6 +1016,10 @@ public static void setup(@Nonnull SlimefunPlugin plugin) {\n         new PotionEffect[] {new PotionEffect(PotionEffectType.NIGHT_VISION, 600, 20)})\n         .register(plugin);\n \n+        new SlimefunItem(categories.technicalGadgets, SlimefunItems.CRASH_HELMET, RecipeType.ARMOR_FORGE,\n+        new ItemStack[]{new ItemStack(Material.IRON_INGOT), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.SLIME_BALL), new ItemStack(Material.SLIME_BALL), new ItemStack(Material.SLIME_BALL), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.LEATHER_HELMET), new ItemStack(Material.IRON_INGOT)})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99e0c542aede9f7e8b225a1e67f377f254d7d090", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/99e0c542aede9f7e8b225a1e67f377f254d7d090", "committedDate": "2020-10-03T21:22:03Z", "message": "Moved crash helmet item declaration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10", "committedDate": "2020-10-03T21:27:22Z", "message": "Changed recipe"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTc1ODA1", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-501575805", "createdAt": "2020-10-03T21:41:38Z", "commit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMTo0MTozOFrOHcDxtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMTo0MTozOFrOHcDxtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4NDA1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n          \n          \n            \n                        e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n          \n          \n            \n                    if (e.getCause() != EntityDamageEvent.DamageCause.FALL &&\n          \n          \n            \n                        e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL) return;", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499184052", "createdAt": "2020-10-03T21:41:38Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjIwNjA2", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-501620606", "createdAt": "2020-10-04T12:49:39Z", "commit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjM5OTY0", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-501639964", "createdAt": "2020-10-04T16:45:51Z", "commit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjQwNTg4", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-501640588", "createdAt": "2020-10-04T16:54:36Z", "commit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNjo1NDozNlrOHcIyrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNjo1Nzo0N1rOHcIzyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjIyMA==", "bodyText": "No need for a hardcoded id, you should probably create a class for this item and do an instanceof check here instead.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499266220", "createdAt": "2020-10-04T16:54:36Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if ((item != null) && (item.getID().equals(\"CRASH_HELMET\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjI4OQ==", "bodyText": "Setting the damage is not really good practice, you should rather cancel the event instead (and maybe play a sound effect too?).", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499266289", "createdAt": "2020-10-04T16:55:15Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if ((item != null) && (item.getID().equals(\"CRASH_HELMET\"))) {\n+                e.setDamage(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjM3NQ==", "bodyText": "You forgot to check if they researched the item. Slimefun.hasUnlocked(p, SlimefunItem, true)", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499266375", "createdAt": "2020-10-04T16:56:22Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if ((item != null) && (item.getID().equals(\"CRASH_HELMET\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjQwNw==", "bodyText": "Missing javadocs and @author tag.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499266407", "createdAt": "2020-10-04T16:56:44Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjUwNg==", "bodyText": "I don't know :/ I'm not the greatest fan of the name \"Crash Helmet\" but I also can't think of a better one, any ideas?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499266506", "createdAt": "2020-10-04T16:57:47Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "diffHunk": "@@ -56,6 +56,7 @@ private SlimefunItems() {}\n     public static final SlimefunItemStack REINFORCED_CLOTH = new SlimefunItemStack(\"REINFORCED_CLOTH\", Material.PAPER, \"&bReinforced Cloth\", \"\", \"&fThis cloth has been reinforced\", \"&fwith &bLead &fto protect against\", \"&fradioactive substances\");\n     public static final SlimefunItemStack TIN_CAN = new SlimefunItemStack(\"CAN\", HeadTexture.TIN_CAN, \"&fTin Can\");\n     public static final SlimefunItemStack NIGHT_VISION_GOGGLES = new SlimefunItemStack(\"NIGHT_VISION_GOGGLES\", Material.LEATHER_HELMET, Color.BLACK, \"&aNight Vision Goggles\", \"\", \"&9+ Night Vision\");\n+    public static final SlimefunItemStack CRASH_HELMET = new SlimefunItemStack(\"CRASH_HELMET\", Material.IRON_HELMET, \"&5Crash Helmet\", \"\", \"&7This helmet will protect you from\", \"&7crashing while flying elytra.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70be1c38d0c79d82f1e1879a51aef15c7ec26149", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/70be1c38d0c79d82f1e1879a51aef15c7ec26149", "committedDate": "2020-10-04T18:42:50Z", "message": "Did requested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dbdd077ec3c4c8d2bf85d28fb8825872320e3b5", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/1dbdd077ec3c4c8d2bf85d28fb8825872320e3b5", "committedDate": "2020-10-04T18:43:30Z", "message": "Updated recipe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "107125802cc7ea75b1bdd1e242b786d29dff0a1c", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/107125802cc7ea75b1bdd1e242b786d29dff0a1c", "committedDate": "2020-10-04T19:02:21Z", "message": "Forgot to change id. Reverted back to setDamage()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f87a1d3660f03de84949f0787976ccf6e5d7649f", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/f87a1d3660f03de84949f0787976ccf6e5d7649f", "committedDate": "2020-10-04T19:07:11Z", "message": "Added research check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjUwNTAw", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-501650500", "createdAt": "2020-10-04T19:06:23Z", "commit": {"oid": "107125802cc7ea75b1bdd1e242b786d29dff0a1c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTowNjoyM1rOHcJhvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTowOTo0MFrOHcJi_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODI3MQ==", "bodyText": "Please don't just move around imports.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499278271", "createdAt": "2020-10-04T19:06:23Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -13,6 +13,42 @@\n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.BackpackListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.BeeListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.BlockListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.BlockPhysicsListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.CargoNodeListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.CoolerListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.ElytraCapListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.DeathpointListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.DebugFishListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.DispenserListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.EnhancedFurnaceListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.EntityInteractionListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.ExplosionsListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.FireworksListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.GadgetsListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.GrapplingHookListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.IronGolemListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.ItemPickupListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MultiBlockListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.PiglinListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.PlayerProfileListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SeismicAxeListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunBootsListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunBowListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunGuideListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunItemConsumeListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunItemListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SoulboundListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.TalismanListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.VampireBladeListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.VanillaMachinesListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.VillagerTradingListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.WitherListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.WorldListener;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107125802cc7ea75b1bdd1e242b786d29dff0a1c"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODI4NQ==", "bodyText": "Those imports should have been here.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499278285", "createdAt": "2020-10-04T19:06:41Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -56,41 +92,6 @@\n import io.github.thebusybiscuit.slimefun4.implementation.items.tools.GrapplingHook;\n import io.github.thebusybiscuit.slimefun4.implementation.items.weapons.SeismicAxe;\n import io.github.thebusybiscuit.slimefun4.implementation.items.weapons.VampireBlade;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BackpackListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BeeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BlockListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BlockPhysicsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.CargoNodeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.CoolerListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.DeathpointListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.DebugFishListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.DispenserListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.EnhancedFurnaceListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.EntityInteractionListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.ExplosionsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.FireworksListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.GadgetsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.GrapplingHookListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.IronGolemListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.ItemPickupListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.MultiBlockListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.PiglinListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.PlayerProfileListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SeismicAxeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunBootsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunBowListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunGuideListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunItemConsumeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunItemListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SoulboundListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.TalismanListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.VampireBladeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.VanillaMachinesListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.VillagerTradingListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.WitherListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.WorldListener;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107125802cc7ea75b1bdd1e242b786d29dff0a1c"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODM2Nw==", "bodyText": "An explanation of what the item does would be nice.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499278367", "createdAt": "2020-10-04T19:07:29Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * A class for the Elytra Cap.\n+ *\n+ * @author Seggan\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87a1d3660f03de84949f0787976ccf6e5d7649f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODQxMQ==", "bodyText": "Also you could try to use the SlimefunArmorPiece instead.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499278411", "createdAt": "2020-10-04T19:07:52Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * A class for the Elytra Cap.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCap extends SlimefunItem {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87a1d3660f03de84949f0787976ccf6e5d7649f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODU5MA==", "bodyText": "Maybe make the crashing damage the helmet? This would be nice to add.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499278590", "createdAt": "2020-10-04T19:09:40Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            if (!Slimefun.hasUnlocked(p, stack, true)) return;\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (item instanceof ElytraCap) {\n+                e.setDamage(0);\n+                p.playSound(p.getLocation(), Sound.BLOCK_STONE_HIT, 20, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87a1d3660f03de84949f0787976ccf6e5d7649f"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8", "committedDate": "2020-10-04T20:08:42Z", "message": "Did some requested changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjYwOTM0", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-501660934", "createdAt": "2020-10-04T21:27:42Z", "commit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMToyNzo0MlrOHcKR8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMToyODoyN1rOHcKSHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MDYwOA==", "bodyText": "This is now redundant.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499290608", "createdAt": "2020-10-04T21:27:42Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.Damageable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MDY1NQ==", "bodyText": "Why is this item in Technical Gadgets category? Is it random?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499290655", "createdAt": "2020-10-04T21:28:27Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -1016,6 +1017,10 @@ public static void setup(@Nonnull SlimefunPlugin plugin) {\n         new PotionEffect[] {new PotionEffect(PotionEffectType.NIGHT_VISION, 600, 20)})\n         .register(plugin);\n \n+        new ElytraCap(categories.technicalGadgets, SlimefunItems.ELYTRA_CAP, RecipeType.ARMOR_FORGE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjYzMTI3", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-501663127", "createdAt": "2020-10-04T22:01:02Z", "commit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowMTowM1rOHcKc-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowNzowNlrOHcKe5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzQzMw==", "bodyText": "*flying with an Elytra", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293433", "createdAt": "2020-10-04T22:01:03Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "diffHunk": "@@ -56,6 +56,7 @@ private SlimefunItems() {}\n     public static final SlimefunItemStack REINFORCED_CLOTH = new SlimefunItemStack(\"REINFORCED_CLOTH\", Material.PAPER, \"&bReinforced Cloth\", \"\", \"&fThis cloth has been reinforced\", \"&fwith &bLead &fto protect against\", \"&fradioactive substances\");\n     public static final SlimefunItemStack TIN_CAN = new SlimefunItemStack(\"CAN\", HeadTexture.TIN_CAN, \"&fTin Can\");\n     public static final SlimefunItemStack NIGHT_VISION_GOGGLES = new SlimefunItemStack(\"NIGHT_VISION_GOGGLES\", Material.LEATHER_HELMET, Color.BLACK, \"&aNight Vision Goggles\", \"\", \"&9+ Night Vision\");\n+    public static final SlimefunItemStack ELYTRA_CAP = new SlimefunItemStack(\"ELYTRA_CAP\", Material.LEATHER_HELMET, Color.PURPLE, \"&5Elytra Cap\", \"\", \"&7This helmet will protect you from\", \"&7crashing while flying elytra.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzQ2OQ==", "bodyText": "*an Elytra", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293469", "createdAt": "2020-10-04T22:01:32Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.potion.PotionEffect;\n+\n+/**\n+ * The {@link ElytraCap} negates damage taken when crashing into a wall using elytra.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzY0OQ==", "bodyText": "You should add a parameter nonnull default annotation here", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293649", "createdAt": "2020-10-04T22:03:52Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.potion.PotionEffect;\n+\n+/**\n+ * The {@link ElytraCap} negates damage taken when crashing into a wall using elytra.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCap extends SlimefunArmorPiece implements DamageableItem {\n+\n+    public ElytraCap(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, PotionEffect[] effects) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzY5MA==", "bodyText": "Also since this isn't gonna have potion effects you could remove the last parameter here, why does this extend SlimefunArmorPiece anyway?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293690", "createdAt": "2020-10-04T22:04:22Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.potion.PotionEffect;\n+\n+/**\n+ * The {@link ElytraCap} negates damage taken when crashing into a wall using elytra.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCap extends SlimefunArmorPiece implements DamageableItem {\n+\n+    public ElytraCap(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, PotionEffect[] effects) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzczNA==", "bodyText": "The key should be renamed.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293734", "createdAt": "2020-10-04T22:04:57Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/ResearchSetup.java", "diffHunk": "@@ -276,6 +276,7 @@ public static void setupResearches() {\n         register(\"climbing_pick\", 265, \"Block Raider\", 20, SlimefunItems.CLIMBING_PICK);\n         register(\"even_higher_tier_capacitors\", 266, \"Tier 3 Capacitors\", 40, SlimefunItems.ENERGIZED_CAPACITOR);\n         register(\"caveman_talisman\", 267, \"Talisman of the Caveman\", 20, SlimefunItems.TALISMAN_CAVEMAN);\n+        register(\"crash_helmet\", 268, \"Crash Gear\", 20, SlimefunItems.ELYTRA_CAP);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5Mzc3OQ==", "bodyText": "This is more like a magical gadget now", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293779", "createdAt": "2020-10-04T22:05:12Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -1016,6 +1017,10 @@ public static void setup(@Nonnull SlimefunPlugin plugin) {\n         new PotionEffect[] {new PotionEffect(PotionEffectType.NIGHT_VISION, 600, 20)})\n         .register(plugin);\n \n+        new ElytraCap(categories.technicalGadgets, SlimefunItems.ELYTRA_CAP, RecipeType.ARMOR_FORGE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5Mzc5MQ==", "bodyText": "Update the key (and maybe the name)", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293791", "createdAt": "2020-10-04T22:05:23Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/resources/languages/researches_en.yml", "diffHunk": "@@ -244,3 +244,4 @@ slimefun:\n   tape_measure: Tape Measure\n   iron_golem_assembler: Automated Iron Golems\n   villager_rune: Reset Villager Trades\n+  crash_helmet: Crash Gear", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5Mzg0MA==", "bodyText": "DON'T.\nI explicitly told you to use the one where you pass the SlimefunItem because now you're just doing SlimefunItem.getByItem(stack); twice...", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293840", "createdAt": "2020-10-04T22:06:08Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.Damageable;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            if (!Slimefun.hasUnlocked(p, stack, true)) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5Mzg4Ng==", "bodyText": "Why 20?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293886", "createdAt": "2020-10-04T22:06:41Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.Damageable;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            if (!Slimefun.hasUnlocked(p, stack, true)) return;\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (item instanceof ElytraCap) {\n+                e.setDamage(0);\n+                p.playSound(p.getLocation(), Sound.BLOCK_STONE_HIT, 20, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzkyNg==", "bodyText": "You could override the damageItem method and put this check there", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293926", "createdAt": "2020-10-04T22:07:06Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.Damageable;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            if (!Slimefun.hasUnlocked(p, stack, true)) return;\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (item instanceof ElytraCap) {\n+                e.setDamage(0);\n+                p.playSound(p.getLocation(), Sound.BLOCK_STONE_HIT, 20, 1);\n+                if (p.getGameMode() != GameMode.CREATIVE) {\n+                    ((ElytraCap) item).damageItem(p, stack);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6df2ea00c9074b5361c60081998e87c1490b24b", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/d6df2ea00c9074b5361c60081998e87c1490b24b", "committedDate": "2020-10-05T01:59:10Z", "message": "Added crash protection type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3dcd5942aaa3be9a75747cdca1d5ce738646f1d0", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/3dcd5942aaa3be9a75747cdca1d5ce738646f1d0", "committedDate": "2020-10-05T02:03:48Z", "message": "Changed some linguistic things (Biscuit needs to be an English professor)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f1bddb7590e2edb6d09d120cb538d7412216335", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/7f1bddb7590e2edb6d09d120cb538d7412216335", "committedDate": "2020-10-05T02:05:22Z", "message": "Merge branch 'text_revisions'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxODkwMTA4", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-501890108", "createdAt": "2020-10-05T09:46:59Z", "commit": {"oid": "7f1bddb7590e2edb6d09d120cb538d7412216335"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOTo0Njo1OVrOHcVfWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOTo0NzozM1rOHcVgkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3NDI2NQ==", "bodyText": "No no no no, there is a method like ProtectiveArmor#hasProtectionAgainst() or so this should be used.\nAnd please stop with this excessive use of return; statements and inverse conditions, that's not clean at all.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499474265", "createdAt": "2020-10-05T09:46:59Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (!Slimefun.hasUnlocked(p, item, true)) return;\n+            if (item instanceof ProtectiveArmor) {\n+                if (!Arrays.asList(((ProtectiveArmor) item).getProtectionTypes())\n+                    .contains(ProtectionType.FLYING_INTO_WALL)) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f1bddb7590e2edb6d09d120cb538d7412216335"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3NDU3OQ==", "bodyText": "Still should be in magical gadgets.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499474579", "createdAt": "2020-10-05T09:47:33Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -1016,6 +1017,10 @@ public static void setup(@Nonnull SlimefunPlugin plugin) {\n         new PotionEffect[] {new PotionEffect(PotionEffectType.NIGHT_VISION, 600, 20)})\n         .register(plugin);\n \n+        new ElytraCap(categories.technicalGadgets, SlimefunItems.ELYTRA_CAP, RecipeType.ARMOR_FORGE,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5Mzc3OQ=="}, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51dd53cae193bb8db8be4da7ed3d314cf101cd31", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/51dd53cae193bb8db8be4da7ed3d314cf101cd31", "committedDate": "2020-10-05T14:01:38Z", "message": "Moved elytra cap to magical gadgets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb24bdd8375a18ff67c1e961379269c335dc19b4", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/bb24bdd8375a18ff67c1e961379269c335dc19b4", "committedDate": "2020-10-05T14:55:26Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58e2b9ab3b694f1e750fafc911ab6ea5e4ff33c4", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/58e2b9ab3b694f1e750fafc911ab6ea5e4ff33c4", "committedDate": "2020-10-05T15:01:58Z", "message": "Added default annonation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjk0MjMw", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-502294230", "createdAt": "2020-10-05T18:01:35Z", "commit": {"oid": "58e2b9ab3b694f1e750fafc911ab6ea5e4ff33c4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODowMTozNlrOHcn8WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODowMTozNlrOHcn8WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3NjYwMQ==", "bodyText": "We don't want to mix imports with different purposes.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499776601", "createdAt": "2020-10-05T18:01:36Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -12,7 +12,6 @@\n \n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e2b9ab3b694f1e750fafc911ab6ea5e4ff33c4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDEzNDQ1", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-502413445", "createdAt": "2020-10-05T20:55:12Z", "commit": {"oid": "58e2b9ab3b694f1e750fafc911ab6ea5e4ff33c4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo1NToxMlrOHctdIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo1NTo0NlrOHcteQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg2NjkxMg==", "bodyText": "This can/should be final.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499866912", "createdAt": "2020-10-05T20:55:12Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * The {@link ElytraCap} negates damage taken when crashing into a wall using an elytra.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCap extends SlimefunArmorPiece implements DamageableItem, ProtectiveArmor {\n+\n+    private NamespacedKey key;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e2b9ab3b694f1e750fafc911ab6ea5e4ff33c4"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg2NzIwMQ==", "bodyText": "You could add an @see ElytraCapListener here to link to it", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499867201", "createdAt": "2020-10-05T20:55:46Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * The {@link ElytraCap} negates damage taken when crashing into a wall using an elytra.\n+ *\n+ * @author Seggan", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e2b9ab3b694f1e750fafc911ab6ea5e4ff33c4"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b3e31a8c7b03c91cbd984143841779d269bd2af", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/4b3e31a8c7b03c91cbd984143841779d269bd2af", "committedDate": "2020-10-05T20:56:25Z", "message": "Renamed listener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4dc1428bc5bc52362c95ac3049079cbe12d977d", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/a4dc1428bc5bc52362c95ac3049079cbe12d977d", "committedDate": "2020-10-05T21:02:09Z", "message": "Changed protection check (untested)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db6295616e9e7ef3ed891c41ea0b2b9d57765ed5", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/db6295616e9e7ef3ed891c41ea0b2b9d57765ed5", "committedDate": "2020-10-05T21:05:05Z", "message": "Did more requested changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDMwNDcx", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-502430471", "createdAt": "2020-10-05T21:22:20Z", "commit": {"oid": "db6295616e9e7ef3ed891c41ea0b2b9d57765ed5"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDQ1ODA3", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-502445807", "createdAt": "2020-10-05T21:49:45Z", "commit": {"oid": "db6295616e9e7ef3ed891c41ea0b2b9d57765ed5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMTo0OTo0NlrOHcu-YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjoyNjoyM1rOHcv1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg5MTgwOA==", "bodyText": "You should just import this instead", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499891808", "createdAt": "2020-10-05T21:49:46Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * The {@link ElytraCap} negates damage taken when crashing into a wall using an elytra.\n+ *\n+ * @author Seggan\n+ *\n+ * @see io.github.thebusybiscuit.slimefun4.implementation.listeners.ElytraCrashListener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db6295616e9e7ef3ed891c41ea0b2b9d57765ed5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNTg0MQ==", "bodyText": "These three lines should be moved further down, the PlayerProfile caches the armor too, so you can directly access the item that way and save a ton of performance too.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499905841", "createdAt": "2020-10-05T22:26:23Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+import java.util.Optional;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCrashListener implements Listener {\n+\n+    public ElytraCrashListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (!Slimefun.hasUnlocked(p, item, true)) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db6295616e9e7ef3ed891c41ea0b2b9d57765ed5"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1ede58f85ad6d51d2229418f859c432eaf90fa4", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/d1ede58f85ad6d51d2229418f859c432eaf90fa4", "committedDate": "2020-10-06T19:12:35Z", "message": "More requested changes..."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMjg1NjYz", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-503285663", "createdAt": "2020-10-06T19:21:14Z", "commit": {"oid": "d1ede58f85ad6d51d2229418f859c432eaf90fa4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOToyMToxNFrOHdWjfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOToyMzo1NlrOHdWo8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MDI4NQ==", "bodyText": "Why is this import up here btw and not with the rest?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r500540285", "createdAt": "2020-10-06T19:21:14Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -5,6 +5,7 @@\n \n import javax.annotation.Nonnull;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1ede58f85ad6d51d2229418f859c432eaf90fa4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MTI0NA==", "bodyText": "This line is redundant, it's already done in #hashasFullProtectionAgainst", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r500541244", "createdAt": "2020-10-06T19:23:01Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.api.items.HashedArmorpiece;\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+import java.util.Optional;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCrashListener implements Listener {\n+\n+    public ElytraCrashListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            Optional<PlayerProfile> optional = PlayerProfile.find(p);\n+            if (!optional.isPresent()) {\n+                PlayerProfile.request(p);\n+                return;\n+            }\n+            PlayerProfile profile = optional.get();\n+            HashedArmorpiece helmet = profile.getArmor()[0];\n+            SlimefunItem item;\n+            if (helmet.getItem().isPresent()) {\n+                item = helmet.getItem().get();\n+            } else {\n+                return;\n+            }\n+            if (Slimefun.hasUnlocked(p, item, true)) {\n+                if (item instanceof ProtectiveArmor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1ede58f85ad6d51d2229418f859c432eaf90fa4"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MTU2NA==", "bodyText": "That's just really ugly, simply do an if statement and put the rest inside the brackets of that if statement.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r500541564", "createdAt": "2020-10-06T19:23:41Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.api.items.HashedArmorpiece;\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+import java.util.Optional;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCrashListener implements Listener {\n+\n+    public ElytraCrashListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            Optional<PlayerProfile> optional = PlayerProfile.find(p);\n+            if (!optional.isPresent()) {\n+                PlayerProfile.request(p);\n+                return;\n+            }\n+            PlayerProfile profile = optional.get();\n+            HashedArmorpiece helmet = profile.getArmor()[0];\n+            SlimefunItem item;\n+            if (helmet.getItem().isPresent()) {\n+                item = helmet.getItem().get();\n+            } else {\n+                return;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1ede58f85ad6d51d2229418f859c432eaf90fa4"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MTY4Mw==", "bodyText": "Also you can merge these statements with &&", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r500541683", "createdAt": "2020-10-06T19:23:56Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.api.items.HashedArmorpiece;\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+import java.util.Optional;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCrashListener implements Listener {\n+\n+    public ElytraCrashListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            Optional<PlayerProfile> optional = PlayerProfile.find(p);\n+            if (!optional.isPresent()) {\n+                PlayerProfile.request(p);\n+                return;\n+            }\n+            PlayerProfile profile = optional.get();\n+            HashedArmorpiece helmet = profile.getArmor()[0];\n+            SlimefunItem item;\n+            if (helmet.getItem().isPresent()) {\n+                item = helmet.getItem().get();\n+            } else {\n+                return;\n+            }\n+            if (Slimefun.hasUnlocked(p, item, true)) {\n+                if (item instanceof ProtectiveArmor) {\n+                    if (profile.hasFullProtectionAgainst(ProtectionType.FLYING_INTO_WALL)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1ede58f85ad6d51d2229418f859c432eaf90fa4"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20aa5d49dc327745f65c5db9a3079a830f522b76", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/20aa5d49dc327745f65c5db9a3079a830f522b76", "committedDate": "2020-10-06T19:34:37Z", "message": "Merged ifs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMjk3ODE0", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-503297814", "createdAt": "2020-10-06T19:38:42Z", "commit": {"oid": "20aa5d49dc327745f65c5db9a3079a830f522b76"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTozODo0MlrOHdXHpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTozODo1OVrOHdXIPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0OTU0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        SlimefunItem item;\n          \n          \n            \n                        if (helmet.getItem().isPresent()) {\n          \n          \n            \n                            item = helmet.getItem().get();\n          \n          \n            \n            \n          \n          \n            \n                        if (helmet.getItem().isPresent()) {\n          \n          \n            \n                            SlimefunItem item = helmet.getItem().get();", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r500549543", "createdAt": "2020-10-06T19:38:42Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.api.items.HashedArmorpiece;\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+import java.util.Optional;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCrashListener implements Listener {\n+\n+    public ElytraCrashListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            Optional<PlayerProfile> optional = PlayerProfile.find(p);\n+            if (!optional.isPresent()) {\n+                PlayerProfile.request(p);\n+                return;\n+            }\n+            PlayerProfile profile = optional.get();\n+            HashedArmorpiece helmet = profile.getArmor()[0];\n+            SlimefunItem item;\n+            if (helmet.getItem().isPresent()) {\n+                item = helmet.getItem().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20aa5d49dc327745f65c5db9a3079a830f522b76"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0OTY5NA==", "bodyText": "Then move it back down to the rest?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r500549694", "createdAt": "2020-10-06T19:38:59Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -5,6 +5,7 @@\n \n import javax.annotation.Nonnull;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MDI4NQ=="}, "originalCommit": {"oid": "d1ede58f85ad6d51d2229418f859c432eaf90fa4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "960d53840a8b4f3b30f654cd71931627b5cde6e1", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/960d53840a8b4f3b30f654cd71931627b5cde6e1", "committedDate": "2020-10-06T19:39:15Z", "message": "Moved import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ccd4c14ac0dd6b4c9e2d87e92f3c14ae0911c0f", "author": {"user": {"login": "Seggan", "name": "Seggan"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/1ccd4c14ac0dd6b4c9e2d87e92f3c14ae0911c0f", "committedDate": "2020-10-06T19:41:14Z", "message": "More changes..."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMzAwMzI4", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-503300328", "createdAt": "2020-10-06T19:42:18Z", "commit": {"oid": "1ccd4c14ac0dd6b4c9e2d87e92f3c14ae0911c0f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMzEyOTIz", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-503312923", "createdAt": "2020-10-06T20:00:15Z", "commit": {"oid": "1ccd4c14ac0dd6b4c9e2d87e92f3c14ae0911c0f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMzE0NDUy", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#pullrequestreview-503314452", "createdAt": "2020-10-06T20:02:15Z", "commit": {"oid": "1ccd4c14ac0dd6b4c9e2d87e92f3c14ae0911c0f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2355, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}