{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0MzkyMDMy", "number": 2645, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNjowNDo1OFrOFLxt1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNjowNzoyNVrOFLx0Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3ODkzMjA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNjowNDo1OFrOIPJBaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNjowNDo1OFrOIPJBaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjc0NzM2OQ==", "bodyText": "I would recommend just changing this. You can use BlockPosition and just store the long.", "url": "https://github.com/Slimefun/Slimefun4/pull/2645#discussion_r552747369", "createdAt": "2021-01-06T16:04:58Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,106 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import java.util.UUID;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import com.google.gson.JsonObject;\n+\n+import io.github.thebusybiscuit.cscorelib2.data.PersistentJsonDataType;\n+import io.github.thebusybiscuit.cscorelib2.protection.ProtectableAction;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void and teleports to a safe location.\n+ * This location is determined as follows: Talisman NBT-saved location -> Bed spawn -> World spawn\n+ *\n+ * @author svr333\n+ *\n+ */\n+\n+public class ResurrectedTalisman extends Talisman {\n+\n+    private final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");\n+\n+    public ResurrectedTalisman(SlimefunItemStack item, ItemStack[] recipe) {\n+        super(item, recipe, true, true, \"resurrected\", new PotionEffect(PotionEffectType.GLOWING, 400, 0), new PotionEffect(PotionEffectType.ABSORPTION, 400, 4), new PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, 200, 20));\n+\n+        addItemHandler(getItemHandler());\n+    }\n+\n+    @Nonnull\n+    public ItemUseHandler getItemHandler() {\n+        return e -> {\n+            Location currentLoc = e.getPlayer().getLocation();\n+            JsonObject json = createJsonFromLocation(currentLoc);\n+            ItemStack item = e.getItem();\n+\n+            if (SlimefunPlugin.getProtectionManager().hasPermission(e.getPlayer(), currentLoc, ProtectableAction.PLACE_BLOCK) && item.hasItemMeta()) {\n+                ItemMeta itemMeta = item.getItemMeta();\n+                \n+                itemMeta.getPersistentDataContainer().set(locationKey, PersistentJsonDataType.JSON_OBJECT, json);\n+                item.setItemMeta(itemMeta);\n+    \n+                SlimefunPlugin.getLocalization().sendMessage(e.getPlayer(), \"messages.talisman.resurrected-location\", true);\n+                return;\n+            }\n+\n+            SlimefunPlugin.getLocalization().sendMessage(e.getPlayer(), \"messages.talisman.resurrected-location-failed\", true);\n+        };\n+    }\n+\n+    @Nullable\n+    public Location getSavedLocation(@Nonnull ItemStack item) {\n+        PersistentDataContainer pdc = item.getItemMeta().getPersistentDataContainer();\n+        JsonObject json = pdc.get(locationKey, PersistentJsonDataType.JSON_OBJECT);\n+\n+        if (json != null) {\n+            return parseLocationFromJsonObject(json);\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    @Nonnull\n+    private JsonObject createJsonFromLocation(@Nonnull Location loc) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c32089eeb9a0839b2ae705635a83a88b50bd2e1"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3ODk0ODQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNjowNzoyNVrOIPJMDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNjowNzoyNVrOIPJMDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjc1MDA5NA==", "bodyText": "Any reason you delay this 2 ticks? This event will keep firing as the player is on half a heart and keeps getting damage from the void.", "url": "https://github.com/Slimefun/Slimefun4/pull/2645#discussion_r552750094", "createdAt": "2021-01-06T16:07:25Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -291,10 +303,47 @@ public void onBlockDropItems(BlockDropItemEvent e) {\n     @EventHandler\n     public void onBlockBreak(BlockBreakEvent e) {\n         if (SlimefunTag.CAVEMAN_TALISMAN_TRIGGERS.isTagged(e.getBlock().getType())) {\n-            Talisman.checkFor(e, SlimefunItems.TALISMAN_CAVEMAN);\n+            Talisman.tryActivate(e, SlimefunItems.TALISMAN_CAVEMAN);\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() > 0 && Talisman.tryActivate(e, SlimefunItems.TALISMAN_WISE)) {\n+            e.setAmount(e.getAmount() * 2);\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onPlayerDeath(PlayerDeathEvent e) {\n+        Player player = e.getEntity();\n+        DamageCause dmgCause = player.getLastDamageCause().getCause();\n+        ItemStack talisman = Talisman.tryActivateAndGet(e, SlimefunItems.TALISMAN_RESURRECTED);\n+\n+        if (dmgCause == DamageCause.VOID && talisman != null) {\n+            // This event is cancelled by the Talisman, so they don't actually die, we just teleport them after 2 ticks.\n+            SlimefunPlugin.runSync(() -> PaperLib.teleportAsync(player, getSafeRespawnLocation(talisman, player)), 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c32089eeb9a0839b2ae705635a83a88b50bd2e1"}, "originalPosition": 170}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 141, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}