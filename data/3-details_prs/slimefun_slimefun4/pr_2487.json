{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MDc4MTYz", "number": 2487, "title": "Furnace based machines could no longer be used as vanilla furnace with the hoppers.", "bodyText": "Description\n\nAdded HopperListener and an interface NotHopperable\nChanges\n\n\nAdded EventHandler onHopperInsert to cancel InventoryMoveItemEvent from hopper to issue specific Furnace/Smoker based Slimefun machines.\nElectricFurnace, AutoBrewer, AutoDrier, ElectricOreGrinder, ElectricIngotPulverizer & ElectricSmeltery now implements NotHopperable.\n\nRelated Issues\n\n\nResolves #2449\nResolves #2511\nChecklist\n\n\n\n I have fully tested the proposed changes and promise that they will not break everything into chaos.\n I have also tested the proposed changes in combination with various popular addons and can confirm my changes do not break them.\n I followed the existing code standards and didn't mess up the formatting.\n I did my best to add documentation to any public classes or methods I added.\n I have added Nonnull and Nullable annotations to my methods to indicate their behaviour for null values\n I added sufficient Unit Tests to cover my code.", "createdAt": "2020-10-19T15:36:05Z", "url": "https://github.com/Slimefun/Slimefun4/pull/2487", "merged": true, "mergeCommit": {"oid": "2f08066449dd6f91759c0228bbea10b1d98890bf"}, "closed": true, "closedAt": "2021-01-13T18:46:14Z", "author": {"login": "CURVX"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUGCszAFqTUxMTg5ODE5Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdv0RfxgFqTU2NzUxODgyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODk4MTk2", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#pullrequestreview-511898196", "createdAt": "2020-10-19T15:38:06Z", "commit": {"oid": "bfed1f938606608f9580ca90346172197cb680ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNTozODowNlrOHkU4JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNTozODowNlrOHkU4JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg1MjgzNg==", "bodyText": "never ever static import", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r507852836", "createdAt": "2020-10-19T15:38:06Z", "author": {"login": "J3fftw1"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -13,6 +13,7 @@\n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfed1f938606608f9580ca90346172197cb680ed"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExOTA4NDcx", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#pullrequestreview-511908471", "createdAt": "2020-10-19T15:47:37Z", "commit": {"oid": "bfed1f938606608f9580ca90346172197cb680ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNTo0NzozOFrOHkVYEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNTo0NzozOFrOHkVYEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg2MTAwOA==", "bodyText": "not sure if this adds all furnace type machines but for slimefun it self you forgot Electric furnace and Electric Smeltery\nit would be nice if this blocks it for all Furnace type machines even for addons.", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r507861008", "createdAt": "2020-10-19T15:47:38Z", "author": {"login": "J3fftw1"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ItemMoveListener.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunItems;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.BlockStorage;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.inventory.InventoryMoveItemEvent;\n+\n+import javax.annotation.Nonnull;\n+\n+import java.util.logging.Level;\n+\n+public class ItemMoveListener implements Listener {\n+\n+    public ItemMoveListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onItemMove(InventoryMoveItemEvent e) {\n+        Location loc = e.getDestination().getLocation();\n+        if (loc != null && BlockStorage.hasBlockInfo(loc)) {\n+            if (BlockStorage.check(loc, SlimefunItems.ELECTRIC_ORE_GRINDER.getItemId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfed1f938606608f9580ca90346172197cb680ed"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bfed1f938606608f9580ca90346172197cb680ed", "author": {"user": {"login": "CURVX", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/bfed1f938606608f9580ca90346172197cb680ed", "committedDate": "2020-10-19T15:26:10Z", "message": "WIP Fix#2449"}, "afterCommit": {"oid": "c4f248ae55720623c632f7463a29846bd9d1f33b", "author": {"user": {"login": "CURVX", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/c4f248ae55720623c632f7463a29846bd9d1f33b", "committedDate": "2020-10-25T06:10:41Z", "message": "FurnaceListener"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NzAxNjEw", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#pullrequestreview-517701610", "createdAt": "2020-10-27T13:28:56Z", "commit": {"oid": "7c6f159f3e89df8dd035d213751e6273822cb657"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMzoyODo1N1rOHo8KoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMzoyODo1N1rOHo8KoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY5MDg0OQ==", "bodyText": "Yes thjs would work but wouldn't it be really tedious to keep adding machines to this that are also furnaces i think the best way to do this is to check if its a furnace and it has an id then cancel the event", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r512690849", "createdAt": "2020-10-27T13:28:57Z", "author": {"login": "J3fftw1"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/crafting/FurnaceListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners.crafting;\n+\n+import javax.annotation.Nonnull;\n+\n+import org.bukkit.Location;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.inventory.InventoryMoveItemEvent;\n+import org.bukkit.event.inventory.InventoryType;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunItems;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.BlockStorage;\n+\n+public class FurnaceListener implements SlimefunCraftingListener {\n+\n+    public FurnaceListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onFurnace(InventoryMoveItemEvent e) {\n+        Location loc = e.getDestination().getLocation();\n+        if (loc != null && BlockStorage.hasBlockInfo(loc) && e.getSource().getType() == InventoryType.HOPPER) {\n+            boolean isElectricOreGrinder = BlockStorage.check(loc, SlimefunItems.ELECTRIC_ORE_GRINDER.getItemId()) || BlockStorage.check(loc, SlimefunItems.ELECTRIC_ORE_GRINDER_2.getItemId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c6f159f3e89df8dd035d213751e6273822cb657"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd461a6f88af840768886173e86346a73b4ba781", "author": {"user": {"login": "CURVX", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/bd461a6f88af840768886173e86346a73b4ba781", "committedDate": "2020-11-12T12:40:00Z", "message": "Merge pull request #5 from Slimefun/master\n\n[CI skip] Update fork"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "527dfb2b796504b770413ff07f6fbff7107feacd", "author": {"user": {"login": "CURVX", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/527dfb2b796504b770413ff07f6fbff7107feacd", "committedDate": "2020-11-12T16:50:36Z", "message": "Been a while"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c6f159f3e89df8dd035d213751e6273822cb657", "author": {"user": {"login": "CURVX", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/7c6f159f3e89df8dd035d213751e6273822cb657", "committedDate": "2020-10-27T11:45:24Z", "message": "listener go brrr"}, "afterCommit": {"oid": "527dfb2b796504b770413ff07f6fbff7107feacd", "author": {"user": {"login": "CURVX", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/527dfb2b796504b770413ff07f6fbff7107feacd", "committedDate": "2020-11-12T16:50:36Z", "message": "Been a while"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1ODUwOTIz", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#pullrequestreview-535850923", "createdAt": "2020-11-21T00:03:22Z", "commit": {"oid": "527dfb2b796504b770413ff07f6fbff7107feacd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQwMDowMzoyMlrOH3khXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQwMDowNTo1N1rOH3kkAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAzMjA5Mg==", "bodyText": "Remove this empty line.", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r528032092", "createdAt": "2020-11-21T00:03:22Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/crafting/HopperListener.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners.crafting;\n+\n+import javax.annotation.Nonnull;\n+\n+import org.bukkit.Location;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.inventory.InventoryMoveItemEvent;\n+import org.bukkit.event.inventory.InventoryType;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.abstractItems.VanillaContainer;\n+import me.mrCookieSlime.Slimefun.api.BlockStorage;\n+\n+/**\n+ * This {@link Listener} prevents item from being transferred to a\n+ * {@link VanillaContainer} using a hopper.\n+ *\n+ */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "527dfb2b796504b770413ff07f6fbff7107feacd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAzMjExOA==", "bodyText": "Missing @author tag.", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r528032118", "createdAt": "2020-11-21T00:03:31Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/crafting/HopperListener.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners.crafting;\n+\n+import javax.annotation.Nonnull;\n+\n+import org.bukkit.Location;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.inventory.InventoryMoveItemEvent;\n+import org.bukkit.event.inventory.InventoryType;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.abstractItems.VanillaContainer;\n+import me.mrCookieSlime.Slimefun.api.BlockStorage;\n+\n+/**\n+ * This {@link Listener} prevents item from being transferred to a\n+ * {@link VanillaContainer} using a hopper.\n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "527dfb2b796504b770413ff07f6fbff7107feacd"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAzMjQ4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (e.getSource().getType() == InventoryType.HOPPER && loc != null && BlockStorage.hasBlockInfo(loc)) {\n          \n          \n            \n                        if (BlockStorage.check(loc.getBlock()) instanceof VanillaContainer) {\n          \n          \n            \n                    if (e.getSource().getType() == InventoryType.HOPPER && loc != null && BlockStorage.hasBlockInfo(loc)) {\n          \n          \n            \n                        if (BlockStorage.check(loc.getBlock()) instanceof VanillaContainer) {\n          \n      \n    \n    \n  \n\nNo need to nest this here, connect the two with &&.\nAlso, it would be redundant to do hasBlockInfo and check().\nThe check value on its own will work already since it would be null otherwise.", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r528032486", "createdAt": "2020-11-21T00:04:48Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/crafting/HopperListener.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners.crafting;\n+\n+import javax.annotation.Nonnull;\n+\n+import org.bukkit.Location;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.inventory.InventoryMoveItemEvent;\n+import org.bukkit.event.inventory.InventoryType;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.abstractItems.VanillaContainer;\n+import me.mrCookieSlime.Slimefun.api.BlockStorage;\n+\n+/**\n+ * This {@link Listener} prevents item from being transferred to a\n+ * {@link VanillaContainer} using a hopper.\n+ *\n+ */\n+\n+public class HopperListener implements SlimefunCraftingListener {\n+\n+    public HopperListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void fromHopper(InventoryMoveItemEvent e) {\n+        Location loc = e.getDestination().getLocation();\n+        if (e.getSource().getType() == InventoryType.HOPPER && loc != null && BlockStorage.hasBlockInfo(loc)) {\n+            if (BlockStorage.check(loc.getBlock()) instanceof VanillaContainer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "527dfb2b796504b770413ff07f6fbff7107feacd"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAzMjU4Nw==", "bodyText": "Please follow the method naming convention, onHopperInsert for example.", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r528032587", "createdAt": "2020-11-21T00:05:13Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/crafting/HopperListener.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners.crafting;\n+\n+import javax.annotation.Nonnull;\n+\n+import org.bukkit.Location;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.inventory.InventoryMoveItemEvent;\n+import org.bukkit.event.inventory.InventoryType;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.abstractItems.VanillaContainer;\n+import me.mrCookieSlime.Slimefun.api.BlockStorage;\n+\n+/**\n+ * This {@link Listener} prevents item from being transferred to a\n+ * {@link VanillaContainer} using a hopper.\n+ *\n+ */\n+\n+public class HopperListener implements SlimefunCraftingListener {\n+\n+    public HopperListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void fromHopper(InventoryMoveItemEvent e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "527dfb2b796504b770413ff07f6fbff7107feacd"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAzMjY1OA==", "bodyText": "Do not use this package.", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r528032658", "createdAt": "2020-11-21T00:05:26Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/abstractItems/VanillaContainer.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package me.mrCookieSlime.Slimefun.Objects.SlimefunItem.abstractItems;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "527dfb2b796504b770413ff07f6fbff7107feacd"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAzMjc2OA==", "bodyText": "Missing javadocs, also not the best name. The name could imply different stuff and it's even worse without the docs.", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r528032768", "createdAt": "2020-11-21T00:05:57Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/abstractItems/VanillaContainer.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package me.mrCookieSlime.Slimefun.Objects.SlimefunItem.abstractItems;\n+\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+import org.bukkit.inventory.ItemStack;\n+\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+public abstract class VanillaContainer extends AContainer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "527dfb2b796504b770413ff07f6fbff7107feacd"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f385cdc8d7c7202dbd9aa0fa2b8d3aa26695083", "author": {"user": {"login": "CURVX", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/7f385cdc8d7c7202dbd9aa0fa2b8d3aa26695083", "committedDate": "2020-11-21T16:47:55Z", "message": "Formatting changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e0e9d54901ffe3f25a87f343fea201b5ac583cb", "author": {"user": {"login": "CURVX", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/5e0e9d54901ffe3f25a87f343fea201b5ac583cb", "committedDate": "2020-11-21T16:51:34Z", "message": "Merge branch 'master' into fix/sf-machine-hopper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef09b03af4a0da9a7336870a90c9b8fcd9464c4f", "author": {"user": {"login": "CURVX", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/ef09b03af4a0da9a7336870a90c9b8fcd9464c4f", "committedDate": "2020-11-21T17:21:14Z", "message": "Blank line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c1485aa7c48f1f94973c898f9116df6bd0539d9", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/0c1485aa7c48f1f94973c898f9116df6bd0539d9", "committedDate": "2020-12-09T17:42:42Z", "message": "Merge branch 'master' into fix/sf-machine-hopper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac09d96b409d32aaab40351f7256601c6f5fcca7", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/ac09d96b409d32aaab40351f7256601c6f5fcca7", "committedDate": "2020-12-22T21:02:20Z", "message": "Merge branch 'master' into fix/sf-machine-hopper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTY3Njcy", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#pullrequestreview-562967672", "createdAt": "2021-01-06T19:03:50Z", "commit": {"oid": "ac09d96b409d32aaab40351f7256601c6f5fcca7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxOTowMzo1MFrOIPSwmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxOTowNjowOVrOIPS1Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjkwNjkwNA==", "bodyText": "Why does this implement the SlimefunCraftingListener...?\nIt doesn't have anything to do with crafting...?", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r552906904", "createdAt": "2021-01-06T19:03:50Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/crafting/HopperListener.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners.crafting;\n+\n+import javax.annotation.Nonnull;\n+\n+import io.github.thebusybiscuit.slimefun4.api.inventory.AbstractVanillaBlockInventory;\n+import org.bukkit.Location;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.inventory.InventoryMoveItemEvent;\n+import org.bukkit.event.inventory.InventoryType;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.BlockStorage;\n+\n+/**\n+ * This {@link Listener} prevents item from being transferred to a\n+ * {@link AbstractVanillaBlockInventory} using a hopper.\n+ *\n+ * @author CURVX\n+ *\n+ */\n+public class HopperListener implements SlimefunCraftingListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac09d96b409d32aaab40351f7256601c6f5fcca7"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjkwNjk1NQ==", "bodyText": "indentation", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r552906955", "createdAt": "2021-01-06T19:03:56Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/crafting/HopperListener.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners.crafting;\n+\n+import javax.annotation.Nonnull;\n+\n+import io.github.thebusybiscuit.slimefun4.api.inventory.AbstractVanillaBlockInventory;\n+import org.bukkit.Location;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.inventory.InventoryMoveItemEvent;\n+import org.bukkit.event.inventory.InventoryType;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.BlockStorage;\n+\n+/**\n+ * This {@link Listener} prevents item from being transferred to a\n+ * {@link AbstractVanillaBlockInventory} using a hopper.\n+ *\n+ * @author CURVX\n+ *\n+ */\n+public class HopperListener implements SlimefunCraftingListener {\n+\n+    public HopperListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onHopperInsert(InventoryMoveItemEvent e) {\n+        Location loc = e.getDestination().getLocation();\n+        if (e.getSource().getType() == InventoryType.HOPPER && loc != null && BlockStorage.check(loc.getBlock()) instanceof AbstractVanillaBlockInventory) {\n+                e.setCancelled(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac09d96b409d32aaab40351f7256601c6f5fcca7"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjkwNzAzNQ==", "bodyText": "Why the crafting package?", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r552907035", "createdAt": "2021-01-06T19:04:06Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/crafting/HopperListener.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners.crafting;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac09d96b409d32aaab40351f7256601c6f5fcca7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjkwNzY2OA==", "bodyText": "There is no reason for this to be an actual class, this could be handled via an interface. Then again, why do we need to differentiate here anyway? We could use any AContainer for this, couldn't we?", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r552907668", "createdAt": "2021-01-06T19:05:21Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/inventory/AbstractVanillaBlockInventory.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.github.thebusybiscuit.slimefun4.api.inventory;\n+\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+import org.bukkit.inventory.ItemStack;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.AutoBrewer;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.AutoDrier;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.ElectricFurnace;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.ElectricIngotPulverizer;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.ElectricOreGrinder;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.ElectricSmeltery;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.abstractItems.AContainer;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+\n+/**\n+ * The {@link AbstractVanillaBlockInventory} is an\n+ * implementation of {@link AContainer} for machines that use\n+ * a vanilla block inventory holder.\n+ *\n+ * @author CURVX\n+ *\n+ * @see AutoBrewer\n+ * @see AutoDrier\n+ * @see ElectricFurnace\n+ * @see ElectricIngotPulverizer\n+ * @see ElectricOreGrinder\n+ * @see ElectricSmeltery\n+ *\n+ */\n+public abstract class AbstractVanillaBlockInventory extends AContainer {\n+\n+    @ParametersAreNonnullByDefault\n+    public AbstractVanillaBlockInventory(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {\n+        super(category, item, recipeType, recipe);\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac09d96b409d32aaab40351f7256601c6f5fcca7"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjkwODAzOQ==", "bodyText": "What about the other direction? Pulling from such an inventory", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r552908039", "createdAt": "2021-01-06T19:06:09Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/crafting/HopperListener.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners.crafting;\n+\n+import javax.annotation.Nonnull;\n+\n+import io.github.thebusybiscuit.slimefun4.api.inventory.AbstractVanillaBlockInventory;\n+import org.bukkit.Location;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.inventory.InventoryMoveItemEvent;\n+import org.bukkit.event.inventory.InventoryType;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.BlockStorage;\n+\n+/**\n+ * This {@link Listener} prevents item from being transferred to a\n+ * {@link AbstractVanillaBlockInventory} using a hopper.\n+ *\n+ * @author CURVX\n+ *\n+ */\n+public class HopperListener implements SlimefunCraftingListener {\n+\n+    public HopperListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onHopperInsert(InventoryMoveItemEvent e) {\n+        Location loc = e.getDestination().getLocation();\n+        if (e.getSource().getType() == InventoryType.HOPPER && loc != null && BlockStorage.check(loc.getBlock()) instanceof AbstractVanillaBlockInventory) {\n+                e.setCancelled(true);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac09d96b409d32aaab40351f7256601c6f5fcca7"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "105a57fb37d1ddb50c465d602c99ad657713e998", "author": {"user": {"login": "CURVX", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/105a57fb37d1ddb50c465d602c99ad657713e998", "committedDate": "2021-01-12T16:07:20Z", "message": "Merge pull request #6 from Slimefun/master\n\n[CI skip] Update fork"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3b7a22ee93730348d2b485f13a0c658543d8afb", "author": {"user": {"login": "CURVX", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b3b7a22ee93730348d2b485f13a0c658543d8afb", "committedDate": "2021-01-12T16:12:53Z", "message": "Changes req. by TTB"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19e2f37ac6cc49e2ab53908572954ce729a7d9b9", "author": {"user": {"login": "CURVX", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/19e2f37ac6cc49e2ab53908572954ce729a7d9b9", "committedDate": "2021-01-12T16:21:31Z", "message": "Resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0e891134bc027e0f8ee6af557f68d0da33f878b", "author": {"user": {"login": "CURVX", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/f0e891134bc027e0f8ee6af557f68d0da33f878b", "committedDate": "2021-01-12T17:47:23Z", "message": "Cleaned imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0ab148a65c227a2ca81466e44b42b7179b1799d", "author": {"user": {"login": "CURVX", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/a0ab148a65c227a2ca81466e44b42b7179b1799d", "committedDate": "2021-01-12T18:12:19Z", "message": "Cleaned imports pt.2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2NTUxMjk1", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#pullrequestreview-566551295", "createdAt": "2021-01-12T18:24:08Z", "commit": {"oid": "a0ab148a65c227a2ca81466e44b42b7179b1799d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxODoyNDowOFrOISOhTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxODoyNToyM1rOISOkPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTk4MzE4Mw==", "bodyText": "Needs to extend ItemAttribute", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r555983183", "createdAt": "2021-01-12T18:24:08Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/NotHopperable.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package io.github.thebusybiscuit.slimefun4.core.attributes;\n+\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.abstractItems.AContainer;\n+\n+/**\n+ * Implement this interface for any {@link AContainer} to prevent\n+ * that {@link AContainer} from being hopperable.\n+ *\n+ * @author CURVX\n+ *\n+ */\n+public interface NotHopperable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0ab148a65c227a2ca81466e44b42b7179b1799d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTk4MzkzMg==", "bodyText": "Should only be @see NotHopperable", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r555983932", "createdAt": "2021-01-12T18:25:23Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/HopperListener.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import javax.annotation.Nonnull;\n+\n+import org.bukkit.Location;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.inventory.InventoryMoveItemEvent;\n+import org.bukkit.event.inventory.InventoryType;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.NotHopperable;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.AutoBrewer;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.AutoDrier;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.ElectricFurnace;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.ElectricIngotPulverizer;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.ElectricOreGrinder;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.ElectricSmeltery;\n+import me.mrCookieSlime.Slimefun.api.BlockStorage;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.abstractItems.AContainer;\n+\n+/**\n+ * This {@link Listener} prevents item from being transferred to\n+ * and from {@link AContainer} using a hopper.\n+ *\n+ * @author CURVX\n+ *\n+ * @see AutoBrewer\n+ * @see AutoDrier\n+ * @see ElectricFurnace\n+ * @see ElectricIngotPulverizer\n+ * @see ElectricOreGrinder\n+ * @see ElectricSmeltery", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0ab148a65c227a2ca81466e44b42b7179b1799d"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "889ffe48720365f37516f81493dfa0dfd30eb50e", "author": {"user": {"login": "CURVX", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/889ffe48720365f37516f81493dfa0dfd30eb50e", "committedDate": "2021-01-13T05:01:45Z", "message": "Few minor changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3MzIwNTc0", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#pullrequestreview-567320574", "createdAt": "2021-01-13T15:13:08Z", "commit": {"oid": "889ffe48720365f37516f81493dfa0dfd30eb50e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNToxMzowOFrOISzx6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNToxMzowOFrOISzx6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU5MzY0Mw==", "bodyText": "Will this destination inv ever be non-null and an SF item? Custom inventories have getLocation() returning null. You're expecting destination to be an SF block however I don't believe that can ever be the case.\nEdit: Nevermind, this is true do to it being a furnace (or other). Yep cool", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#discussion_r556593643", "createdAt": "2021-01-13T15:13:08Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/HopperListener.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import javax.annotation.Nonnull;\n+\n+import org.bukkit.Location;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.inventory.InventoryMoveItemEvent;\n+import org.bukkit.event.inventory.InventoryType;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.NotHopperable;\n+import me.mrCookieSlime.Slimefun.api.BlockStorage;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.abstractItems.AContainer;\n+\n+/**\n+ * This {@link Listener} prevents item from being transferred to\n+ * and from {@link AContainer} using a hopper.\n+ *\n+ * @author CURVX\n+ *\n+ * @see NotHopperable\n+ *\n+ */\n+public class HopperListener implements Listener {\n+\n+    public HopperListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onHopperInsert(InventoryMoveItemEvent e) {\n+        Location loc = e.getDestination().getLocation();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "889ffe48720365f37516f81493dfa0dfd30eb50e"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3NTEwNjQ4", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#pullrequestreview-567510648", "createdAt": "2021-01-13T18:34:59Z", "commit": {"oid": "889ffe48720365f37516f81493dfa0dfd30eb50e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3NTE4ODI5", "url": "https://github.com/Slimefun/Slimefun4/pull/2487#pullrequestreview-567518829", "createdAt": "2021-01-13T18:45:51Z", "commit": {"oid": "889ffe48720365f37516f81493dfa0dfd30eb50e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2411, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}