{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxMDA2MDY0", "number": 2435, "title": "Stop unwanted actions from StrangeNetherGoo and Heavy Cream", "bodyText": "Description\nModified StrangeNetherGoo to disable rightclick action (Prevents the dying of signs)\nAdded HeavyCream class to disable rightclick action (Prevents throwing of the snowball)\nChanges\nAdded ItemUseHandler to StrangeNetherGoo\nCreated HeavyCream.java with ItemUseHandler\nRelated Issues\nResolves #2420\nResolves #2422\nChecklist\n\n I have fully tested the proposed changes and promise that they will not break everything into chaos.\n I have also tested the proposed changes in combination with various popular addons and can confirm my changes do not break them.\n I followed the existing code standards and didn't mess up the formatting.\n I did my best to add documentation to any public classes or methods I added.\n I have added Nonnull and Nullable annotations to my methods to indicate their behaviour for null values\n I added sufficient Unit Tests to cover my code.", "createdAt": "2020-10-10T16:57:41Z", "url": "https://github.com/Slimefun/Slimefun4/pull/2435", "merged": true, "mergeCommit": {"oid": "15884c65aa9c49e5e2d6225e3bca01e948a64fe6"}, "closed": true, "closedAt": "2020-10-11T11:46:42Z", "author": {"login": "TheSilentPro"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRNr6ugH2gAyNTAxMDA2MDY0OjA1ODBhODczZWMyMDRmMzM3MmRjYTg3ZTIzM2MyOWM2NzMxZmNmMzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdRdoq2gFqTUwNjE2OTkzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0580a873ec204f3372dca87e233c29c6731fcf34", "author": {"user": {"login": "UnlimitedNinjas", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/0580a873ec204f3372dca87e233c29c6731fcf34", "committedDate": "2020-10-10T16:50:41Z", "message": "Stop unwanted actions with StrangeNetherGoo and HeavyCream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf0f7c37e08acaf07a5062d48a9d8349039bddae", "author": {"user": {"login": "UnlimitedNinjas", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/cf0f7c37e08acaf07a5062d48a9d8349039bddae", "committedDate": "2020-10-10T16:50:49Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTEzMDUx", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#pullrequestreview-506113051", "createdAt": "2020-10-10T17:21:41Z", "commit": {"oid": "cf0f7c37e08acaf07a5062d48a9d8349039bddae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNzoyMTo0MVrOHfhN9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxNzoyMzo0NlrOHfhOmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMjE0OA==", "bodyText": "You can also just make this a SimpleSlimefunItem<ItemUseHandler> to avoid the class casting.", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502812148", "createdAt": "2020-10-10T17:21:41Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting and, it's\n+ * used for various food recipes recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SlimefunItem {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0f7c37e08acaf07a5062d48a9d8349039bddae"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMjE3Mw==", "bodyText": "ParamsAreNonnullByDefault", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502812173", "createdAt": "2020-10-10T17:21:52Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting and, it's\n+ * used for various food recipes recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SlimefunItem {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0f7c37e08acaf07a5062d48a9d8349039bddae"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMjMxNA==", "bodyText": "Again, SimpleSlimefunItem and probably only cancel it for signs", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502812314", "createdAt": "2020-10-10T17:23:46Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +39,9 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Override\n+    public void preRegister() {\n+        addItemHandler((ItemUseHandler) PlayerRightClickEvent::cancel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf0f7c37e08acaf07a5062d48a9d8349039bddae"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9928e5e109bdb57b02db1ba755cfad8e701251b", "author": {"user": {"login": "UnlimitedNinjas", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/f9928e5e109bdb57b02db1ba755cfad8e701251b", "committedDate": "2020-10-10T18:20:08Z", "message": "Add requested changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTE3MjA0", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#pullrequestreview-506117204", "createdAt": "2020-10-10T18:25:19Z", "commit": {"oid": "f9928e5e109bdb57b02db1ba755cfad8e701251b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxODoyNToyMFrOHfhk1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQxODoyNToyMFrOHfhk1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxODAwNA==", "bodyText": "Use tags.", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502818004", "createdAt": "2020-10-10T18:25:20Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +43,18 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (e.getClickedBlock().get().getType().name().contains(\"SIGN\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9928e5e109bdb57b02db1ba755cfad8e701251b"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447", "author": {"user": {"login": "UnlimitedNinjas", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/dfe33b35346c24552ed949b4d1756b43c7bfd447", "committedDate": "2020-10-10T20:05:50Z", "message": "Didn't know this existed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTMyNjEy", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#pullrequestreview-506132612", "createdAt": "2020-10-10T23:32:36Z", "commit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMzozMjozNlrOHfjKIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMzozNDoxMFrOHfjKjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0MzkzOA==", "bodyText": "First off: This should NOT be public.\nAlso a missing nullability annotation.\nBut most importantly, there is no need for this method, this can all easily be done as a lambda expression.", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502843938", "createdAt": "2020-10-10T23:32:36Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting, it's\n+ * used for various foods and recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SimpleSlimefunItem<ItemUseHandler> {\n+\n+    @ParametersAreNonnullByDefault\n+    public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, ItemStack recipeOutput) {\n+        super(category, item, recipeType, recipe, recipeOutput);\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0Mzk2Ng==", "bodyText": "Formatting\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    else {\n          \n          \n            \n                    } else {", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502843966", "createdAt": "2020-10-10T23:32:56Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting, it's\n+ * used for various foods and recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SimpleSlimefunItem<ItemUseHandler> {\n+\n+    @ParametersAreNonnullByDefault\n+    public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, ItemStack recipeOutput) {\n+        super(category, item, recipeType, recipe, recipeOutput);\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (!e.getClickedBlock().get().getType().isInteractable()) {\n+                e.cancel();\n+            }\n+        }\n+        else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0Mzk4NA==", "bodyText": "First off: This should NOT be public.\nAlso a missing nullability annotation.\nBut most importantly, there is no need for this method, this can all easily be done as a lambda expression.", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502843984", "createdAt": "2020-10-10T23:33:15Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +44,18 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0NDAwOA==", "bodyText": "You can merge these two statements using &&", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502844008", "createdAt": "2020-10-10T23:33:38Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +44,18 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (Tag.SIGNS.isTagged(e.getClickedBlock().get().getType())) {\n+                e.cancel();\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0NDAzMg==", "bodyText": "Calling the method twice is a bit non-optimal, you should store the Optional as a variable and use that.", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502844032", "createdAt": "2020-10-10T23:34:05Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +44,18 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (Tag.SIGNS.isTagged(e.getClickedBlock().get().getType())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0NDA0NA==", "bodyText": "Calling the method twice is a bit non-optimal, you should store the Optional as a variable and use that.", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502844044", "createdAt": "2020-10-10T23:34:10Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting, it's\n+ * used for various foods and recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SimpleSlimefunItem<ItemUseHandler> {\n+\n+    @ParametersAreNonnullByDefault\n+    public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, ItemStack recipeOutput) {\n+        super(category, item, recipeType, recipe, recipeOutput);\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (!e.getClickedBlock().get().getType().isInteractable()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2902f74d10bf547fb92615d284b3c1cbd80d2608", "author": {"user": {"login": "UnlimitedNinjas", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/2902f74d10bf547fb92615d284b3c1cbd80d2608", "committedDate": "2020-10-11T10:14:58Z", "message": "Changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTY0NjA5", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#pullrequestreview-506164609", "createdAt": "2020-10-11T10:16:24Z", "commit": {"oid": "2902f74d10bf547fb92615d284b3c1cbd80d2608"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMDoxNjoyNVrOHfmSVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMDoxNjoyNVrOHfmSVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5NTE5MA==", "bodyText": "I don't think i can use && here due to that else statement, correct me if i'm wrong though", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502895190", "createdAt": "2020-10-11T10:16:25Z", "author": {"login": "TheSilentPro"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -28,18 +29,16 @@ public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeTy\n     @Nonnull\n     @Override\n     public ItemUseHandler getItemHandler() {\n-        return this::use;\n-    }\n-\n-    public void use(PlayerRightClickEvent e) {\n-        if (e.getClickedBlock().isPresent()) {\n-            if (!e.getClickedBlock().get().getType().isInteractable()) {\n+        return e -> {\n+            Optional<Block> block = e.getClickedBlock();\n+            if (block.isPresent()) {\n+                if (!block.get().getType().isInteractable()) {\n+                    e.cancel();\n+                }\n+            } else {\n                 e.cancel();\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2902f74d10bf547fb92615d284b3c1cbd80d2608"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTY1OTEw", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#pullrequestreview-506165910", "createdAt": "2020-10-11T10:32:17Z", "commit": {"oid": "2902f74d10bf547fb92615d284b3c1cbd80d2608"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMDozMjoxN1rOHfmZPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxMDozMjozN1rOHfmZXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5Njk1OQ==", "bodyText": "I don't think i can use && here due to that else statement, correct me if i'm wrong though\n\nYes buuuuuut what cou could do is the following.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return e -> {\n          \n          \n            \n                        Optional<Block> block = e.getClickedBlock();\n          \n          \n            \n                        if (block.isPresent()) {\n          \n          \n            \n                            if (!block.get().getType().isInteractable()) {\n          \n          \n            \n                                e.cancel();\n          \n          \n            \n                            }\n          \n          \n            \n                        } else {\n          \n          \n            \n                            e.cancel();\n          \n          \n            \n                        }\n          \n          \n            \n                    return e -> {\n          \n          \n            \n                        Optional<Block> block = e.getClickedBlock();\n          \n          \n            \n            \n          \n          \n            \n                        if (!block.isPresent() || !block.get().getType().isInteractable()) {\n          \n          \n            \n                            e.cancel();\n          \n          \n            \n                        }", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502896959", "createdAt": "2020-10-11T10:32:17Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -28,18 +29,16 @@ public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeTy\n     @Nonnull\n     @Override\n     public ItemUseHandler getItemHandler() {\n-        return this::use;\n-    }\n-\n-    public void use(PlayerRightClickEvent e) {\n-        if (e.getClickedBlock().isPresent()) {\n-            if (!e.getClickedBlock().get().getType().isInteractable()) {\n+        return e -> {\n+            Optional<Block> block = e.getClickedBlock();\n+            if (block.isPresent()) {\n+                if (!block.get().getType().isInteractable()) {\n+                    e.cancel();\n+                }\n+            } else {\n                 e.cancel();\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2902f74d10bf547fb92615d284b3c1cbd80d2608"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5Njk5MQ==", "bodyText": "An empty line before the if always looks a bit nicer\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Optional<Block> block = e.getClickedBlock();\n          \n          \n            \n                        if (block.isPresent() && Tag.SIGNS.isTagged(block.get().getType())) {\n          \n          \n            \n                        Optional<Block> block = e.getClickedBlock();\n          \n          \n            \n            \n          \n          \n            \n                        if (block.isPresent() && Tag.SIGNS.isTagged(block.get().getType())) {", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502896991", "createdAt": "2020-10-11T10:32:37Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -47,15 +47,12 @@ public int getBarteringLootChance() {\n     @Nonnull\n     @Override\n     public ItemUseHandler getItemHandler() {\n-        return this::use;\n-    }\n-\n-    public void use(PlayerRightClickEvent e) {\n-        if (e.getClickedBlock().isPresent()) {\n-            if (Tag.SIGNS.isTagged(e.getClickedBlock().get().getType())) {\n+        return e -> {\n+            Optional<Block> block = e.getClickedBlock();\n+            if (block.isPresent() && Tag.SIGNS.isTagged(block.get().getType())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2902f74d10bf547fb92615d284b3c1cbd80d2608"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7177946aaef78cb0ac0de5371ceac09a4047bdb7", "author": {"user": {"login": "UnlimitedNinjas", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/7177946aaef78cb0ac0de5371ceac09a4047bdb7", "committedDate": "2020-10-11T10:44:15Z", "message": "Changes pt2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTY3MDQ2", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#pullrequestreview-506167046", "createdAt": "2020-10-11T10:47:23Z", "commit": {"oid": "7177946aaef78cb0ac0de5371ceac09a4047bdb7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTY5OTMx", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#pullrequestreview-506169931", "createdAt": "2020-10-11T11:25:37Z", "commit": {"oid": "7177946aaef78cb0ac0de5371ceac09a4047bdb7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2392, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}