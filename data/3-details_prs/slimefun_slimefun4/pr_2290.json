{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwNTQ0MTQ5", "number": 2290, "title": "Performance improvements on TickerTask <Tested>", "bodyText": "Description\n\nA slimefun tick is now processed in seperate game ticks. This way lag spikes will be way less common but instead the lag will we spread out to several ticks/seconds.\nChanges\n\nMany improvements in TickerTask.\nRelated Issues\n\n\nN/A\nChecklist\n\n\n\n I have fully tested the proposed changes and promise that they will not break everything into chaos.\n I have also tested the proposed changes in combination with various popular addons and can confirm my changes do not break them.\n I followed the existing code standards and didn't mess up the formatting.\n I did my best to add documentation to any public classes or methods I added.\n I have added Nonnull and Nullable annotations to my methods to indicate their behaviour for null values\n I added sufficient Unit Tests to cover my code.", "createdAt": "2020-09-05T16:21:00Z", "url": "https://github.com/Slimefun/Slimefun4/pull/2290", "merged": true, "mergeCommit": {"oid": "de46e4fff179ca8ad455269bc9639d3eed59c6c9"}, "closed": true, "closedAt": "2021-04-27T14:23:04Z", "author": {"login": "LinoxGH"}, "timelineItems": {"totalCount": 42, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdF8PGLgH2gAyNDgwNTQ0MTQ5Ojc2NmZiNzVkNjI1MzIzMWIwOWJjYWJiZmJiYzAxNjhmOWI5OWEyMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABeRO2CsAFqTY0NTkyMTA2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "766fb75d6253231b09bcabbfbbc0168f9b99a205", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/766fb75d6253231b09bcabbfbbc0168f9b99a205", "committedDate": "2020-09-05T16:17:39Z", "message": "Performance improvements on TickerTask"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e04bce24f1f62e34d990f394a20fd94f05e51133", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/e04bce24f1f62e34d990f394a20fd94f05e51133", "committedDate": "2020-09-05T16:24:44Z", "message": "Added my friend whom helped me as author"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e682760c87cba8a9f7d5f478bdadddde6d81c918", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/e682760c87cba8a9f7d5f478bdadddde6d81c918", "committedDate": "2020-09-05T20:06:37Z", "message": "Update CHANGELOG.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMDc2Mzk2", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#pullrequestreview-483076396", "createdAt": "2020-09-05T20:10:28Z", "commit": {"oid": "e682760c87cba8a9f7d5f478bdadddde6d81c918"}, "state": "DISMISSED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQyMDoxMDoyOFrOHNkCVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQyMDoxMzo0OVrOHNkDWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk4Mzk1OQ==", "bodyText": "Please remove this from the change log.\nThere is no way such a drastic change, especially when it's about threading and concurrency... will make it into the next RC.", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#discussion_r483983959", "createdAt": "2020-09-05T20:10:28Z", "author": {"login": "TheBusyBiscuit"}, "path": "CHANGELOG.md", "diffHunk": "@@ -62,6 +62,7 @@\n * Small performance improvements for radiation\n * Small performance improvements for Auto Disenchanters\n * Magnesium Salt in Magnesium-Salt generators now lasts longer\n+* Performance improvements for TickerTask(Slimefun ticking)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e682760c87cba8a9f7d5f478bdadddde6d81c918"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk4NDAxMg==", "bodyText": "No need to mark this parameter as final really.", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#discussion_r483984012", "createdAt": "2020-09-05T20:11:08Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/TickerTask.java", "diffHunk": "@@ -57,66 +74,169 @@\n      *            The instance of our {@link SlimefunPlugin}\n      */\n     public void start(@Nonnull SlimefunPlugin plugin) {\n+\n         this.tickRate = SlimefunPlugin.getCfg().getInt(\"URID.custom-ticker-delay\");\n \n         BukkitScheduler scheduler = plugin.getServer().getScheduler();\n-        scheduler.runTaskTimerAsynchronously(plugin, this, 100L, tickRate);\n+        scheduler.runTaskLater(plugin, this, 100L);\n     }\n \n-    /**\n-     * This method resets this {@link TickerTask} to run again.\n-     */\n-    public void reset() {\n-        running = false;\n+    @Override \n+    public final void run() {\n+\n+        // This should not happen. Only case where this may happen is if this task is scheduled or started multiple times.\n+        if (running) {\n+            return;\n+        }\n+        if (!Bukkit.isPrimaryThread()) {\n+            return;\n+        }\n+\n+        // Don't overload the Bukkit scheduler with a thousand runnables. It doesn't like that. This way, we can spread the\n+        // time cost over several game ticks and adapt ticker rate to server performance.\n+        final ArrayBlockingQueue<Runnable> syncTasks = new ArrayBlockingQueue<>(32);\n+\n+        // Iterate over the ticker tasks. Process the asynchronous ones on the Bukkit async task thread, and queue the sync\n+        // tasks to the queue.\n+        Bukkit.getScheduler().runTaskAsynchronously(\n+                SlimefunPlugin.instance(),\n+                () -> this.tick(syncTasks)\n+        );\n+\n+        // Process the synchronous ticker tasks on the main thread.\n+        processSyncTasks(syncTasks);\n     }\n \n-    @Override\n-    public void run() {\n+    private void processSyncTasks(final @Nonnull BlockingQueue<Runnable> tasks) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e682760c87cba8a9f7d5f478bdadddde6d81c918"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk4NDA1Mw==", "bodyText": "This magic number should definitely be a static final constant for easier tweaking.", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#discussion_r483984053", "createdAt": "2020-09-05T20:11:35Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/TickerTask.java", "diffHunk": "@@ -57,66 +74,169 @@\n      *            The instance of our {@link SlimefunPlugin}\n      */\n     public void start(@Nonnull SlimefunPlugin plugin) {\n+\n         this.tickRate = SlimefunPlugin.getCfg().getInt(\"URID.custom-ticker-delay\");\n \n         BukkitScheduler scheduler = plugin.getServer().getScheduler();\n-        scheduler.runTaskTimerAsynchronously(plugin, this, 100L, tickRate);\n+        scheduler.runTaskLater(plugin, this, 100L);\n     }\n \n-    /**\n-     * This method resets this {@link TickerTask} to run again.\n-     */\n-    public void reset() {\n-        running = false;\n+    @Override \n+    public final void run() {\n+\n+        // This should not happen. Only case where this may happen is if this task is scheduled or started multiple times.\n+        if (running) {\n+            return;\n+        }\n+        if (!Bukkit.isPrimaryThread()) {\n+            return;\n+        }\n+\n+        // Don't overload the Bukkit scheduler with a thousand runnables. It doesn't like that. This way, we can spread the\n+        // time cost over several game ticks and adapt ticker rate to server performance.\n+        final ArrayBlockingQueue<Runnable> syncTasks = new ArrayBlockingQueue<>(32);\n+\n+        // Iterate over the ticker tasks. Process the asynchronous ones on the Bukkit async task thread, and queue the sync\n+        // tasks to the queue.\n+        Bukkit.getScheduler().runTaskAsynchronously(\n+                SlimefunPlugin.instance(),\n+                () -> this.tick(syncTasks)\n+        );\n+\n+        // Process the synchronous ticker tasks on the main thread.\n+        processSyncTasks(syncTasks);\n     }\n \n-    @Override\n-    public void run() {\n+    private void processSyncTasks(final @Nonnull BlockingQueue<Runnable> tasks) {\n+\n+        if (!Bukkit.isPrimaryThread()) {\n+            return;\n+        }\n+\n+        // Let's not lag the main thread. Spikes suck. Steady time usage is much better.\n+        long endNs = System.nanoTime() + 1_500_000L;\n+\n         try {\n-            // If this method is actually still running... DON'T\n-            if (running) {\n-                return;\n+            while (endNs > System.nanoTime()) {\n+\n+                // Don't wait on an empty queue for too long.\n+                long s = System.nanoTime();\n+                Runnable r = tasks.poll(250_000L, TimeUnit.NANOSECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e682760c87cba8a9f7d5f478bdadddde6d81c918"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk4NDA4NA==", "bodyText": "Please give your variable a more meaningful name.", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#discussion_r483984084", "createdAt": "2020-09-05T20:11:48Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/TickerTask.java", "diffHunk": "@@ -57,66 +74,169 @@\n      *            The instance of our {@link SlimefunPlugin}\n      */\n     public void start(@Nonnull SlimefunPlugin plugin) {\n+\n         this.tickRate = SlimefunPlugin.getCfg().getInt(\"URID.custom-ticker-delay\");\n \n         BukkitScheduler scheduler = plugin.getServer().getScheduler();\n-        scheduler.runTaskTimerAsynchronously(plugin, this, 100L, tickRate);\n+        scheduler.runTaskLater(plugin, this, 100L);\n     }\n \n-    /**\n-     * This method resets this {@link TickerTask} to run again.\n-     */\n-    public void reset() {\n-        running = false;\n+    @Override \n+    public final void run() {\n+\n+        // This should not happen. Only case where this may happen is if this task is scheduled or started multiple times.\n+        if (running) {\n+            return;\n+        }\n+        if (!Bukkit.isPrimaryThread()) {\n+            return;\n+        }\n+\n+        // Don't overload the Bukkit scheduler with a thousand runnables. It doesn't like that. This way, we can spread the\n+        // time cost over several game ticks and adapt ticker rate to server performance.\n+        final ArrayBlockingQueue<Runnable> syncTasks = new ArrayBlockingQueue<>(32);\n+\n+        // Iterate over the ticker tasks. Process the asynchronous ones on the Bukkit async task thread, and queue the sync\n+        // tasks to the queue.\n+        Bukkit.getScheduler().runTaskAsynchronously(\n+                SlimefunPlugin.instance(),\n+                () -> this.tick(syncTasks)\n+        );\n+\n+        // Process the synchronous ticker tasks on the main thread.\n+        processSyncTasks(syncTasks);\n     }\n \n-    @Override\n-    public void run() {\n+    private void processSyncTasks(final @Nonnull BlockingQueue<Runnable> tasks) {\n+\n+        if (!Bukkit.isPrimaryThread()) {\n+            return;\n+        }\n+\n+        // Let's not lag the main thread. Spikes suck. Steady time usage is much better.\n+        long endNs = System.nanoTime() + 1_500_000L;\n+\n         try {\n-            // If this method is actually still running... DON'T\n-            if (running) {\n-                return;\n+            while (endNs > System.nanoTime()) {\n+\n+                // Don't wait on an empty queue for too long.\n+                long s = System.nanoTime();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e682760c87cba8a9f7d5f478bdadddde6d81c918"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk4NDA5OQ==", "bodyText": "Please give your variable a more meaningful name.", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#discussion_r483984099", "createdAt": "2020-09-05T20:11:57Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/TickerTask.java", "diffHunk": "@@ -57,66 +74,169 @@\n      *            The instance of our {@link SlimefunPlugin}\n      */\n     public void start(@Nonnull SlimefunPlugin plugin) {\n+\n         this.tickRate = SlimefunPlugin.getCfg().getInt(\"URID.custom-ticker-delay\");\n \n         BukkitScheduler scheduler = plugin.getServer().getScheduler();\n-        scheduler.runTaskTimerAsynchronously(plugin, this, 100L, tickRate);\n+        scheduler.runTaskLater(plugin, this, 100L);\n     }\n \n-    /**\n-     * This method resets this {@link TickerTask} to run again.\n-     */\n-    public void reset() {\n-        running = false;\n+    @Override \n+    public final void run() {\n+\n+        // This should not happen. Only case where this may happen is if this task is scheduled or started multiple times.\n+        if (running) {\n+            return;\n+        }\n+        if (!Bukkit.isPrimaryThread()) {\n+            return;\n+        }\n+\n+        // Don't overload the Bukkit scheduler with a thousand runnables. It doesn't like that. This way, we can spread the\n+        // time cost over several game ticks and adapt ticker rate to server performance.\n+        final ArrayBlockingQueue<Runnable> syncTasks = new ArrayBlockingQueue<>(32);\n+\n+        // Iterate over the ticker tasks. Process the asynchronous ones on the Bukkit async task thread, and queue the sync\n+        // tasks to the queue.\n+        Bukkit.getScheduler().runTaskAsynchronously(\n+                SlimefunPlugin.instance(),\n+                () -> this.tick(syncTasks)\n+        );\n+\n+        // Process the synchronous ticker tasks on the main thread.\n+        processSyncTasks(syncTasks);\n     }\n \n-    @Override\n-    public void run() {\n+    private void processSyncTasks(final @Nonnull BlockingQueue<Runnable> tasks) {\n+\n+        if (!Bukkit.isPrimaryThread()) {\n+            return;\n+        }\n+\n+        // Let's not lag the main thread. Spikes suck. Steady time usage is much better.\n+        long endNs = System.nanoTime() + 1_500_000L;\n+\n         try {\n-            // If this method is actually still running... DON'T\n-            if (running) {\n-                return;\n+            while (endNs > System.nanoTime()) {\n+\n+                // Don't wait on an empty queue for too long.\n+                long s = System.nanoTime();\n+                Runnable r = tasks.poll(250_000L, TimeUnit.NANOSECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e682760c87cba8a9f7d5f478bdadddde6d81c918"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk4NDE0OA==", "bodyText": "What's with the two empty lines here...?", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#discussion_r483984148", "createdAt": "2020-09-05T20:12:38Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/TickerTask.java", "diffHunk": "@@ -136,7 +256,9 @@ private void tickChunk(@Nonnull Set<BlockTicker> tickers, @Nonnull String chunk)\n         }\n     }\n \n-    private void tickLocation(@Nonnull Set<BlockTicker> tickers, @Nonnull Location l) {\n+    private void tickLocation(@Nonnull List<BlockTicker> tickers, @Nonnull Location l, @Nonnull BlockingQueue<Runnable> syncTasks) {\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e682760c87cba8a9f7d5f478bdadddde6d81c918"}, "originalPosition": 273}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk4NDE4MQ==", "bodyText": "Why are you printing a stacktrace here...?", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#discussion_r483984181", "createdAt": "2020-09-05T20:12:57Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/TickerTask.java", "diffHunk": "@@ -215,12 +341,28 @@ public void halt() {\n \n     @ParametersAreNonnullByDefault\n     public void queueMove(Location from, Location to) {\n-        movingQueue.put(from, to);\n+        // This collection is iterated over in a different thread. Need to lock it.\n+        new Throwable().printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e682760c87cba8a9f7d5f478bdadddde6d81c918"}, "originalPosition": 336}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk4NDE4NQ==", "bodyText": "Why are you printing a stacktrace here...?", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#discussion_r483984185", "createdAt": "2020-09-05T20:13:01Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/TickerTask.java", "diffHunk": "@@ -215,12 +341,28 @@ public void halt() {\n \n     @ParametersAreNonnullByDefault\n     public void queueMove(Location from, Location to) {\n-        movingQueue.put(from, to);\n+        // This collection is iterated over in a different thread. Need to lock it.\n+        new Throwable().printStackTrace();\n+        queueLock.readLock().lock();\n+        try {\n+            movingQueue.put(from, to);\n+        }\n+        finally {\n+            queueLock.readLock().unlock();\n+        }\n     }\n \n     @ParametersAreNonnullByDefault\n     public void queueDelete(Location l, boolean destroy) {\n-        deletionQueue.put(l, destroy);\n+        // This collection is iterated over in a different thread. Need to lock it.\n+        new Throwable().printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e682760c87cba8a9f7d5f478bdadddde6d81c918"}, "originalPosition": 350}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk4NDIxOQ==", "bodyText": "Also is it really sensible to re-use the same lock for moving and deleting operations?", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#discussion_r483984219", "createdAt": "2020-09-05T20:13:49Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/TickerTask.java", "diffHunk": "@@ -215,12 +341,28 @@ public void halt() {\n \n     @ParametersAreNonnullByDefault\n     public void queueMove(Location from, Location to) {\n-        movingQueue.put(from, to);\n+        // This collection is iterated over in a different thread. Need to lock it.\n+        new Throwable().printStackTrace();\n+        queueLock.readLock().lock();\n+        try {\n+            movingQueue.put(from, to);\n+        }\n+        finally {\n+            queueLock.readLock().unlock();\n+        }\n     }\n \n     @ParametersAreNonnullByDefault\n     public void queueDelete(Location l, boolean destroy) {\n-        deletionQueue.put(l, destroy);\n+        // This collection is iterated over in a different thread. Need to lock it.\n+        new Throwable().printStackTrace();\n+        queueLock.readLock().lock();\n+        try {\n+            deletionQueue.put(l, destroy);\n+        }\n+        finally {\n+            queueLock.readLock().unlock();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e682760c87cba8a9f7d5f478bdadddde6d81c918"}, "originalPosition": 356}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e151997012265d38eca125055e36cb1399c37ca8", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/e151997012265d38eca125055e36cb1399c37ca8", "committedDate": "2020-09-05T21:15:44Z", "message": "Did the requested changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcecc2b989babcb8b7767f080825c26c7703e866", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/bcecc2b989babcb8b7767f080825c26c7703e866", "committedDate": "2020-09-05T21:17:10Z", "message": "Downdate CHANGELOG.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4e6a0c66c4c83a109ad953ff44ade511db344d3", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/d4e6a0c66c4c83a109ad953ff44ade511db344d3", "committedDate": "2020-09-05T21:50:45Z", "message": "Add files via upload"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbefef85dedd188e96788e7dad3dc435c8fe4788", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/dbefef85dedd188e96788e7dad3dc435c8fe4788", "committedDate": "2020-09-06T12:04:12Z", "message": "Did another requested change."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27ed3dd737368044545f4cae4f0c59ce150ea56d", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/27ed3dd737368044545f4cae4f0c59ce150ea56d", "committedDate": "2020-09-09T13:51:06Z", "message": "Merge pull request #2 from LinoxGH/patch-3\n\nPatch 3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c481bce699d77d820dadd4c139abdad40bff6b19", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/c481bce699d77d820dadd4c139abdad40bff6b19", "committedDate": "2020-09-09T13:55:59Z", "message": "Fixed a typo."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4f3390f2205d010b53ad68187a8337275bd604c", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/c4f3390f2205d010b53ad68187a8337275bd604c", "committedDate": "2020-09-11T19:54:45Z", "message": "Fixed an error occuring on disable."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MDkyMzQ1", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#pullrequestreview-487092345", "createdAt": "2020-09-11T20:07:01Z", "commit": {"oid": "c4f3390f2205d010b53ad68187a8337275bd604c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMDowNzowMlrOHQsUgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMDowNzowMlrOHQsUgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI2NTQxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!SlimefunPlugin.isEnabled()) {\n          \n          \n            \n                    if (!SlimefunPlugin.instance().isEnabled()) {", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#discussion_r487265411", "createdAt": "2020-09-11T20:07:02Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/TickerTask.java", "diffHunk": "@@ -92,6 +92,10 @@ public final void run() {\n         if (!Bukkit.isPrimaryThread()) {\n             return;\n         }\n+        \n+        if (!SlimefunPlugin.isEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4f3390f2205d010b53ad68187a8337275bd604c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "657242081b7073b972ba2e9b80a37d80b0a3e17a", "author": {"user": {"login": "poma123", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/657242081b7073b972ba2e9b80a37d80b0a3e17a", "committedDate": "2020-09-11T20:22:39Z", "message": "Fixed build failing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2e6fc4b6b62ced6944588799f6acdc36bcce718", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/a2e6fc4b6b62ced6944588799f6acdc36bcce718", "committedDate": "2020-09-11T21:32:27Z", "message": "Better handling of tickertask on plugin disable."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7c21a147a9eba66697eebb24f124ffc9205c9d5", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/f7c21a147a9eba66697eebb24f124ffc9205c9d5", "committedDate": "2020-09-11T21:38:45Z", "message": "Oops isEnabled() isn't static."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00312855651830f3ed317a97355114b29cc588e7", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/00312855651830f3ed317a97355114b29cc588e7", "committedDate": "2020-09-20T15:12:30Z", "message": "Merge pull request #5 from Slimefun/master\n\nUpdate code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c648d421685b1def8df05cd762961acb476a01c1", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/c648d421685b1def8df05cd762961acb476a01c1", "committedDate": "2020-09-20T15:22:42Z", "message": "Merge branch 'master' into TickerTask"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "506a9870114687c83489d64660850102603db017", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/506a9870114687c83489d64660850102603db017", "committedDate": "2020-09-20T15:27:25Z", "message": "Fixed a failed merge conflict resolving."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c7dd45e57790caab14ba165987515f275bebe51", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/7c7dd45e57790caab14ba165987515f275bebe51", "committedDate": "2020-09-20T15:31:39Z", "message": "This isn't supposed to be here..."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ec37a3c33fab299420ab644c2e743420ba626f8", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/9ec37a3c33fab299420ab644c2e743420ba626f8", "committedDate": "2020-09-22T20:20:11Z", "message": "Merge branch 'master' into TickerTask"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d22ef76479ea6af4473a5480359c81a77df5ff21", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/d22ef76479ea6af4473a5480359c81a77df5ff21", "committedDate": "2020-09-29T19:19:22Z", "message": "Merge branch 'master' into TickerTask"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f77d40bec8ed64f96b87d09a40f67aa4b7a1867", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/4f77d40bec8ed64f96b87d09a40f67aa4b7a1867", "committedDate": "2020-10-08T12:58:41Z", "message": "Merge branch 'master' into TickerTask"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36fd40b7016f49897b05e074de2726eb9d1cd7b4", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/36fd40b7016f49897b05e074de2726eb9d1cd7b4", "committedDate": "2020-10-08T13:42:49Z", "message": "Fixed build errors."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "833859a796cc1702ec38666b5b4c1425c35f403f", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/833859a796cc1702ec38666b5b4c1425c35f403f", "committedDate": "2020-10-11T05:53:08Z", "message": "Some refactoring."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e46260d0ead3c409d82bf254346e7433959a267", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/8e46260d0ead3c409d82bf254346e7433959a267", "committedDate": "2020-10-18T02:07:00Z", "message": "Merge branch 'master' into TickerTask"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b87a2c7ad989e94d0d05949e1ce74ff4b96c365", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/3b87a2c7ad989e94d0d05949e1ce74ff4b96c365", "committedDate": "2020-11-30T20:57:58Z", "message": "Merge branch 'master' into TickerTask"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bbca8641d7a1e6acefa631331d89603486b809b", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/9bbca8641d7a1e6acefa631331d89603486b809b", "committedDate": "2020-12-14T21:44:12Z", "message": "Fixed compilation errors? I sincerely hope so..."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92adef1840394850bf009512b307cdb68d76cb49", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/92adef1840394850bf009512b307cdb68d76cb49", "committedDate": "2020-12-14T21:55:45Z", "message": "Reverted the changes of last couple commits."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e013ae6631b9f86873e0006c87e59eda1d4c947", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/8e013ae6631b9f86873e0006c87e59eda1d4c947", "committedDate": "2020-12-14T22:25:16Z", "message": "Added enable/disable ticker methods."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f7c3f5e61283fdca13c066c4af0eb8248b7ef52", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/8f7c3f5e61283fdca13c066c4af0eb8248b7ef52", "committedDate": "2020-12-14T22:27:45Z", "message": "Added back isReserved method."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxOTQ4NjIw", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#pullrequestreview-551948620", "createdAt": "2020-12-14T22:30:46Z", "commit": {"oid": "8f7c3f5e61283fdca13c066c4af0eb8248b7ef52"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMjozMDo0NlrOIFuh0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMjozMDo0NlrOIFuh0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjg3NjExNA==", "bodyText": ":NotLikeThis:", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#discussion_r542876114", "createdAt": "2020-12-14T22:30:46Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/TickerTask.java", "diffHunk": "@@ -333,8 +424,8 @@ public void enableTicker(@Nonnull Location l) {\n     public void disableTicker(@Nonnull Location l) {\n         Validate.notNull(l, \"Location cannot be null!\");\n \n-        ChunkPosition chunk = new ChunkPosition(l.getWorld(), l.getBlockX() >> 4, l.getBlockZ() >> 4);\n-        Set<Location> locations = tickingLocations.get(chunk);\n+        String chunk = l.getWorld().getName() + \";\" + l.getChunk().getX() + \";\" + l.getChunk().getZ();\n+        Set<Location> locations = activeTickers.get(chunk);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f7c3f5e61283fdca13c066c4af0eb8248b7ef52"}, "originalPosition": 505}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b80222b6f53801a72d24469309ec1c82406dc22e", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b80222b6f53801a72d24469309ec1c82406dc22e", "committedDate": "2020-12-14T22:39:09Z", "message": "Fixed compilation errors."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb4ee72d802fa8c8069f89013dadbeefe39491b4", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/fb4ee72d802fa8c8069f89013dadbeefe39491b4", "committedDate": "2021-01-24T18:02:17Z", "message": "Merge branch 'master' into TickerTask"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adcac17e7ba142873d261107a79851ae1ba3d8f2", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/adcac17e7ba142873d261107a79851ae1ba3d8f2", "committedDate": "2021-04-27T10:40:50Z", "message": "Fixed TickerTask implementation and re-implemented Position based logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ba4fcf0d5e554f18d56af9173301f3a847dae10", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/0ba4fcf0d5e554f18d56af9173301f3a847dae10", "committedDate": "2021-04-27T10:42:17Z", "message": "Re-added missing method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f78f7e2f0694b3e5df16ff177bd8c4dec5dc4b95", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/f78f7e2f0694b3e5df16ff177bd8c4dec5dc4b95", "committedDate": "2021-04-27T11:15:28Z", "message": "Merge branch 'master' of https://github.com/Slimefun/Slimefun4 into TickerTask"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb3f552eaf4cd2ebe9e4558bd5761b0a2a084601", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/fb3f552eaf4cd2ebe9e4558bd5761b0a2a084601", "committedDate": "2021-04-27T11:16:02Z", "message": "Updated changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a78e88a991180ad8073bfe39b3adcadded470da", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/9a78e88a991180ad8073bfe39b3adcadded470da", "committedDate": "2021-04-27T11:17:49Z", "message": "Re-added missing Validate checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23ce90ac3a24cd977fdac7106ee64829209b1d36", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/23ce90ac3a24cd977fdac7106ee64829209b1d36", "committedDate": "2021-04-27T11:35:12Z", "message": "Refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ1NzU4Njgz", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#pullrequestreview-645758683", "createdAt": "2021-04-27T11:49:32Z", "commit": {"oid": "23ce90ac3a24cd977fdac7106ee64829209b1d36"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0yN1QxMTo0OTozMlrOJQW6cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0yN1QxMTo0OTozMlrOJQW6cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMTEzMjQwMg==", "bodyText": "cant these if's be combined with &&", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#discussion_r621132402", "createdAt": "2021-04-27T11:49:32Z", "author": {"login": "J3fftw1"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/TickerTask.java", "diffHunk": "@@ -68,76 +128,162 @@ public void start(@Nonnull SlimefunPlugin plugin) {\n         this.tickRate = SlimefunPlugin.getCfg().getInt(\"URID.custom-ticker-delay\");\n \n         BukkitScheduler scheduler = plugin.getServer().getScheduler();\n-        scheduler.runTaskTimerAsynchronously(plugin, this, 100L, tickRate);\n+        scheduler.runTaskLater(plugin, this, 100L);\n     }\n \n-    /**\n-     * This method resets this {@link TickerTask} to run again.\n-     */\n-    private void reset() {\n-        running = false;\n+    @Override\n+    public final void run() {\n+        /*\n+         * This should only happen when the plugin gets disabled and the\n+         * task is already running.\n+         * Process all sync tasks before returning, blocking the main thread until\n+         * the task is complete.\n+         */\n+        if (running) {\n+            processSyncTasks();\n+            return;\n+        }\n+\n+        if (!Bukkit.isPrimaryThread()) {\n+            return;\n+        }\n+\n+        /*\n+         * Iterate over the ticker tasks.\n+         * Process the asynchronous ones on the new thread\n+         * and queue the sync tasks to the queue.\n+         */\n+        new Thread(this::tick, \"Slimefun Async Ticker Thread\").start();\n+\n+        // Process the synchronous ticker tasks on the main thread.\n+        processSyncTasks();\n     }\n \n-    @Override\n-    public void run() {\n+    private void processSyncTasks() {\n+        if (!Bukkit.isPrimaryThread()) {\n+            return;\n+        }\n+\n+        // Let's not lag the main thread. Spikes suck. Steady time usage is much better.\n+        long endNs = System.nanoTime() + MAX_TICK_NS;\n+\n         try {\n-            // If this method is actually still running... DON'T\n-            if (running) {\n-                return;\n+            while (endNs > System.nanoTime() || !SlimefunPlugin.instance().isEnabled()) {\n+                // Don't wait on an empty queue for too long.\n+                Runnable task = syncTasks.poll(MAX_POLL_NS, TimeUnit.NANOSECONDS);\n+\n+                if (task == null) {\n+                    if (SlimefunPlugin.instance().isEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23ce90ac3a24cd977fdac7106ee64829209b1d36"}, "originalPosition": 181}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58fc013f4af4a1c4f1462ef89d0200ffac48ab40", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/58fc013f4af4a1c4f1462ef89d0200ffac48ab40", "committedDate": "2021-04-27T12:22:27Z", "message": "Added a re-useable Executor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ1OTIxMDYz", "url": "https://github.com/Slimefun/Slimefun4/pull/2290#pullrequestreview-645921063", "createdAt": "2021-04-27T14:22:48Z", "commit": {"oid": "58fc013f4af4a1c4f1462ef89d0200ffac48ab40"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2452, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}