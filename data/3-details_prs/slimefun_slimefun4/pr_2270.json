{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2MzM3Mzk3", "number": 2270, "title": "Fixes #2265 <Tested>", "bodyText": "Description\n\nFixed all problems regarding Fluid Pump. But this time I also tested it.\nChanges\n\nMade the check for source block before consuming energy and creating bucket.\nRelated Issues\n\n\nFixes #2265\nChecklist\n\n\n\n I have fully tested the proposed changes and promise that they will not break everything into chaos.\n I have also tested the proposed changes in combination with various popular addons and can confirm my changes do not break them.\n I followed the existing code standards and didn't mess up the formatting.\n I did my best to add documentation to any public classes or methods I added.\n I added sufficient Unit Tests to cover my code.", "createdAt": "2020-08-31T14:31:52Z", "url": "https://github.com/Slimefun/Slimefun4/pull/2270", "merged": true, "mergeCommit": {"oid": "3d22e42bef02ebdd227bde46a1efe9e2393857f3"}, "closed": true, "closedAt": "2020-08-31T17:56:06Z", "author": {"login": "LinoxGH"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdETrTxAH2gAyNDc2MzM3Mzk3OmUyYzkzYzU0ZTVkMGFiYzQ1Njg1YzRkYzVmMGRlY2ZiMGExZDExODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEWo2oAFqTQ3ODgyMjEzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188", "committedDate": "2020-08-31T14:28:26Z", "message": "Fixes #2265 <Tested>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4Njk4OTA3", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#pullrequestreview-478698907", "createdAt": "2020-08-31T15:08:09Z", "commit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTowODowOVrOHJ8ufg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNToxMToxMVrOHJ81-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NDE3NA==", "bodyText": "Please give this variable a more meaningful name. nextBlock maybe?", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480194174", "createdAt": "2020-08-31T15:08:09Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -127,31 +127,39 @@ protected void tick(Block b) {\n                     if (!menu.fits(bucket.get(), getOutputSlots())) {\n                         return;\n                     }\n-\n+                    \n+                    Block consume = findFluid(fluid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NDM4OA==", "bodyText": "findNextFluid might be better here", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480194388", "createdAt": "2020-08-31T15:08:31Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -127,31 +127,39 @@ protected void tick(Block b) {\n                     if (!menu.fits(bucket.get(), getOutputSlots())) {\n                         return;\n                     }\n-\n+                    \n+                    Block consume = findFluid(fluid);\n+                    if (consume == null) return;\n+              \n                     removeCharge(b.getLocation(), ENERGY_CONSUMPTION);\n                     menu.consumeItem(slot);\n                     menu.pushItem(bucket.get().clone(), getOutputSlots());\n-                    consumeFluid(fluid);\n-\n+                    consume.setType(Material.AIR);\n                     return;\n                 }\n             }\n         }\n     }\n \n-    private void consumeFluid(Block fluid) {\n-        if (fluid.isLiquid()) {\n-            if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n-                // With water we can be sure to find an infinite source whenever we go\n-                // further than 2 blocks, so we can just remove the water here and save\n-                // outselves all of that computing...\n-                fluid.setType(Material.AIR);\n-            }\n-            else {\n-                List<Block> list = Vein.find(fluid, RANGE, block -> isLiquid(block) && block.getType() == fluid.getType());\n-                list.get(list.size() - 1).setType(Material.AIR);\n+    private Block findFluid(Block fluid) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NTQ2Mw==", "bodyText": "We should probably also do an isSource check for fluid here now that I think about it...\nOtherwise people will have infinite water sources, even if the water source isn't infinite.\nSimply checking whether the block below (fluid) is a source block should be fine though.", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480195463", "createdAt": "2020-08-31T15:10:14Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -127,31 +127,39 @@ protected void tick(Block b) {\n                     if (!menu.fits(bucket.get(), getOutputSlots())) {\n                         return;\n                     }\n-\n+                    \n+                    Block consume = findFluid(fluid);\n+                    if (consume == null) return;\n+              \n                     removeCharge(b.getLocation(), ENERGY_CONSUMPTION);\n                     menu.consumeItem(slot);\n                     menu.pushItem(bucket.get().clone(), getOutputSlots());\n-                    consumeFluid(fluid);\n-\n+                    consume.setType(Material.AIR);\n                     return;\n                 }\n             }\n         }\n     }\n \n-    private void consumeFluid(Block fluid) {\n-        if (fluid.isLiquid()) {\n-            if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n-                // With water we can be sure to find an infinite source whenever we go\n-                // further than 2 blocks, so we can just remove the water here and save\n-                // outselves all of that computing...\n-                fluid.setType(Material.AIR);\n-            }\n-            else {\n-                List<Block> list = Vein.find(fluid, RANGE, block -> isLiquid(block) && block.getType() == fluid.getType());\n-                list.get(list.size() - 1).setType(Material.AIR);\n+    private Block findFluid(Block fluid) {\n+        if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n+            // With water we can be sure to find an infinite source whenever we go\n+            // further than 2 blocks, so we can just remove the water here and save\n+            // ourselves all of that computing...\n+            return fluid;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NTU5Mw==", "bodyText": "else if", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480195593", "createdAt": "2020-08-31T15:10:26Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -127,31 +127,39 @@ protected void tick(Block b) {\n                     if (!menu.fits(bucket.get(), getOutputSlots())) {\n                         return;\n                     }\n-\n+                    \n+                    Block consume = findFluid(fluid);\n+                    if (consume == null) return;\n+              \n                     removeCharge(b.getLocation(), ENERGY_CONSUMPTION);\n                     menu.consumeItem(slot);\n                     menu.pushItem(bucket.get().clone(), getOutputSlots());\n-                    consumeFluid(fluid);\n-\n+                    consume.setType(Material.AIR);\n                     return;\n                 }\n             }\n         }\n     }\n \n-    private void consumeFluid(Block fluid) {\n-        if (fluid.isLiquid()) {\n-            if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n-                // With water we can be sure to find an infinite source whenever we go\n-                // further than 2 blocks, so we can just remove the water here and save\n-                // outselves all of that computing...\n-                fluid.setType(Material.AIR);\n-            }\n-            else {\n-                List<Block> list = Vein.find(fluid, RANGE, block -> isLiquid(block) && block.getType() == fluid.getType());\n-                list.get(list.size() - 1).setType(Material.AIR);\n+    private Block findFluid(Block fluid) {\n+        if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n+            // With water we can be sure to find an infinite source whenever we go\n+            // further than 2 blocks, so we can just remove the water here and save\n+            // ourselves all of that computing...\n+            return fluid;\n+        }\n+        \n+        if (fluid.getType() == Material.LAVA) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5NjA4OA==", "bodyText": "Why not Block#isLiquid() ?", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480196088", "createdAt": "2020-08-31T15:11:11Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -166,21 +174,21 @@ else if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE\n         }\n     }\n \n-    private boolean isLiquid(Block block) {\n-        if (block.isLiquid()) {\n+    private boolean isSource(Block block) {\n+        if (isLiquid(block.getType())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c93c54e5d0abc45685c4dc5f0decfb0a1d1188"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa01e8217931f62f6b8d7887ae2ea34797146940", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/fa01e8217931f62f6b8d7887ae2ea34797146940", "committedDate": "2020-08-31T15:51:21Z", "message": "Did the requested changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4346d374d8ac51fc96baa5f1dd6d6406672b2ecf", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/4346d374d8ac51fc96baa5f1dd6d6406672b2ecf", "committedDate": "2020-08-31T15:57:06Z", "message": "Update CHANGELOG.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NzQxOTky", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#pullrequestreview-478741992", "createdAt": "2020-08-31T16:00:00Z", "commit": {"oid": "4346d374d8ac51fc96baa5f1dd6d6406672b2ecf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNjowMDowMFrOHJ-02Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNjowMDowMFrOHJ-02Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIyODU2OQ==", "bodyText": "Please follow the existing formatting, the else if should go on the next line.", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#discussion_r480228569", "createdAt": "2020-08-31T16:00:00Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/electric/machines/FluidPump.java", "diffHunk": "@@ -127,31 +127,40 @@ protected void tick(Block b) {\n                     if (!menu.fits(bucket.get(), getOutputSlots())) {\n                         return;\n                     }\n-\n+                    \n+                    Block nextFluid = findNextFluid(fluid);\n+                    if (nextFluid == null) return;\n+              \n                     removeCharge(b.getLocation(), ENERGY_CONSUMPTION);\n                     menu.consumeItem(slot);\n                     menu.pushItem(bucket.get().clone(), getOutputSlots());\n-                    consumeFluid(fluid);\n-\n+                    nextFluid.setType(Material.AIR);\n                     return;\n                 }\n             }\n         }\n     }\n \n-    private void consumeFluid(Block fluid) {\n-        if (fluid.isLiquid()) {\n-            if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n-                // With water we can be sure to find an infinite source whenever we go\n-                // further than 2 blocks, so we can just remove the water here and save\n-                // outselves all of that computing...\n-                fluid.setType(Material.AIR);\n+    private Block findNextFluid(Block fluid) {\n+        if (fluid.getType() == Material.WATER || fluid.getType() == Material.BUBBLE_COLUMN) {\n+            // With water we can be sure to find an infinite source whenever we go\n+            // further than 2 blocks, so we can just remove the water here and save\n+            // ourselves all of that computing...\n+            if (isSource(fluid)) {\n+                return fluid;\n             }\n-            else {\n-                List<Block> list = Vein.find(fluid, RANGE, block -> isLiquid(block) && block.getType() == fluid.getType());\n-                list.get(list.size() - 1).setType(Material.AIR);\n+            \n+        } else if (fluid.getType() == Material.LAVA) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4346d374d8ac51fc96baa5f1dd6d6406672b2ecf"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f740cc7850c6eeeed5ebe089ab7500786c01eadb", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/f740cc7850c6eeeed5ebe089ab7500786c01eadb", "committedDate": "2020-08-31T16:04:23Z", "message": "Did the requested change."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d95049db275421676a2791be50769d57ae399a7b", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/d95049db275421676a2791be50769d57ae399a7b", "committedDate": "2020-08-31T16:13:23Z", "message": "Did the requested change."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dba662d4b5161ca7cf60f040902343d1c5e8427", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/6dba662d4b5161ca7cf60f040902343d1c5e8427", "committedDate": "2020-08-31T17:34:15Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4ODIyMTM0", "url": "https://github.com/Slimefun/Slimefun4/pull/2270#pullrequestreview-478822134", "createdAt": "2020-08-31T17:55:28Z", "commit": {"oid": "6dba662d4b5161ca7cf60f040902343d1c5e8427"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2445, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}