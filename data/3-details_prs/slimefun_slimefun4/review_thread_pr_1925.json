{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNzI5NDg2", "number": 1925, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODo1NDowMFrOD-4MHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODo1NToyNVrOD-4Nsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjU4OTExOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/networks/cargo/CargoUtils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODo1NDowMFrOGZPvPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDowNTo1MlrOGZRygg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTQzOQ==", "bodyText": "getSlots() seem rather un-intuitive. Think that name could be improved.", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429125439", "createdAt": "2020-05-22T08:54:00Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/networks/cargo/CargoUtils.java", "diffHunk": "@@ -374,4 +374,13 @@ static boolean matchesFilter(Block block, ItemStack item, int index) {\n         }\n     }\n \n+    /**\n+     * Get the whitelist/blacklist slots in a Cargo Input Node. If you wish to access the items\n+     * in the cargo (without hardcoding the slots in case of change) then you can use this method.\n+     *\n+     * @return The slot indexes for the whutelist/blacklist section.\n+     */\n+    public static int[] getSlots() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMTQxNg==", "bodyText": "getWhitelistBlacklistSlots? It's always awkward to name", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429131416", "createdAt": "2020-05-22T09:06:55Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/networks/cargo/CargoUtils.java", "diffHunk": "@@ -374,4 +374,13 @@ static boolean matchesFilter(Block block, ItemStack item, int index) {\n         }\n     }\n \n+    /**\n+     * Get the whitelist/blacklist slots in a Cargo Input Node. If you wish to access the items\n+     * in the cargo (without hardcoding the slots in case of change) then you can use this method.\n+     *\n+     * @return The slot indexes for the whutelist/blacklist section.\n+     */\n+    public static int[] getSlots() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTQzOQ=="}, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1OTA0Mg==", "bodyText": "I know, but getSlots() is rather misleading. getNodeConfigArea() maybe?", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429159042", "createdAt": "2020-05-22T10:05:52Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/networks/cargo/CargoUtils.java", "diffHunk": "@@ -374,4 +374,13 @@ static boolean matchesFilter(Block block, ItemStack item, int index) {\n         }\n     }\n \n+    /**\n+     * Get the whitelist/blacklist slots in a Cargo Input Node. If you wish to access the items\n+     * in the cargo (without hardcoding the slots in case of change) then you can use this method.\n+     *\n+     * @return The slot indexes for the whutelist/blacklist section.\n+     */\n+    public static int[] getSlots() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTQzOQ=="}, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjU5MDQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODo1NDoyOVrOGZPwCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDoxNjo1OFrOGZSE7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ==", "bodyText": "Can also just do updater#getVersion() instead all of this.", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429125641", "createdAt": "2020-05-22T08:54:29Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java", "diffHunk": "@@ -24,11 +25,12 @@\n     private final SlimefunPlugin plugin;\n     private final Updater updater;\n     private final SlimefunBranch branch;\n+    private final int buildNum;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMTU3MQ==", "bodyText": "Doesn't that just return the entire thing... I want specifically the build number", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429131571", "createdAt": "2020-05-22T09:07:16Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java", "diffHunk": "@@ -24,11 +25,12 @@\n     private final SlimefunPlugin plugin;\n     private final Updater updater;\n     private final SlimefunBranch branch;\n+    private final int buildNum;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ=="}, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1ODQ5OQ==", "bodyText": "No it returns the build number...", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429158499", "createdAt": "2020-05-22T10:04:40Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java", "diffHunk": "@@ -24,11 +25,12 @@\n     private final SlimefunPlugin plugin;\n     private final Updater updater;\n     private final SlimefunBranch branch;\n+    private final int buildNum;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ=="}, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1ODgzOQ==", "bodyText": "https://github.com/TheBusyBiscuit/CS-CoreLib2/blob/master/src/main/java/io/github/thebusybiscuit/cscorelib2/updater/GitHubBuildsUpdater.java#L59", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429158839", "createdAt": "2020-05-22T10:05:25Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java", "diffHunk": "@@ -24,11 +25,12 @@\n     private final SlimefunPlugin plugin;\n     private final Updater updater;\n     private final SlimefunBranch branch;\n+    private final int buildNum;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ=="}, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1OTc0Mw==", "bodyText": "My code is still better and returns int... just merge :^) <3\nI want to sleep", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429159743", "createdAt": "2020-05-22T10:07:33Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java", "diffHunk": "@@ -24,11 +25,12 @@\n     private final SlimefunPlugin plugin;\n     private final Updater updater;\n     private final SlimefunBranch branch;\n+    private final int buildNum;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ=="}, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2MTQ2MA==", "bodyText": "Definitely not better, it's just redundant. Heck it doesn't even compile >.>", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429161460", "createdAt": "2020-05-22T10:11:36Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java", "diffHunk": "@@ -24,11 +25,12 @@\n     private final SlimefunPlugin plugin;\n     private final Updater updater;\n     private final SlimefunBranch branch;\n+    private final int buildNum;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ=="}, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2MTg2Mw==", "bodyText": "it does compile, it's stupid tests failing", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429161863", "createdAt": "2020-05-22T10:12:25Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java", "diffHunk": "@@ -24,11 +25,12 @@\n     private final SlimefunPlugin plugin;\n     private final Updater updater;\n     private final SlimefunBranch branch;\n+    private final int buildNum;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ=="}, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2Mzc1Nw==", "bodyText": "Still, you should definitely fix this before it's gonna be merged...", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429163757", "createdAt": "2020-05-22T10:16:58Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java", "diffHunk": "@@ -24,11 +25,12 @@\n     private final SlimefunPlugin plugin;\n     private final Updater updater;\n     private final SlimefunBranch branch;\n+    private final int buildNum;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTY0MQ=="}, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjU5MTEwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODo1NDo0M1rOGZPweg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTowNzozM1rOGZQHtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTc1NA==", "bodyText": "Number please, not just Num.", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429125754", "createdAt": "2020-05-22T08:54:43Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java", "diffHunk": "@@ -78,13 +84,24 @@ else if (version.startsWith(\"RC - \")) {\n      * This method returns the branch the current build of Slimefun is running on.\n      * This can be used to determine whether we are dealing with an official build\n      * or a build that was unofficially modified.\n-     * \n+     *\n      * @return The branch this build of Slimefun is on.\n      */\n     public SlimefunBranch getBranch() {\n         return branch;\n     }\n \n+    /**\n+     * This method returns the build number that this is running on (or -1 if unofficial).\n+     * You should combine the usage with {@link #getBranch()} in order to properly see if this is\n+     * a development or stable build number.\n+     *\n+     * @return The build number of this Slimefun.\n+     */\n+    public int getBuildNum() {\n+        return buildNum;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMTcwMw==", "bodyText": "So picky", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429131703", "createdAt": "2020-05-22T09:07:33Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/services/UpdaterService.java", "diffHunk": "@@ -78,13 +84,24 @@ else if (version.startsWith(\"RC - \")) {\n      * This method returns the branch the current build of Slimefun is running on.\n      * This can be used to determine whether we are dealing with an official build\n      * or a build that was unofficially modified.\n-     * \n+     *\n      * @return The branch this build of Slimefun is on.\n      */\n     public SlimefunBranch getBranch() {\n         return branch;\n     }\n \n+    /**\n+     * This method returns the build number that this is running on (or -1 if unofficial).\n+     * You should combine the usage with {@link #getBranch()} in order to properly see if this is\n+     * a development or stable build number.\n+     *\n+     * @return The build number of this Slimefun.\n+     */\n+    public int getBuildNum() {\n+        return buildNum;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTc1NA=="}, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjU5MjcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/NumberUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODo1NToxNlrOGZPxdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTowNzo1MlrOGZQIVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNjAwNQ==", "bodyText": "ewwww, abusing try/catch for this is really unideal... We have a Pattern for Numerics you know?", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429126005", "createdAt": "2020-05-22T08:55:16Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/NumberUtils.java", "diffHunk": "@@ -57,4 +57,11 @@ public static String getTimeLeft(int seconds) {\n         return timeleft + seconds + \"s\";\n     }\n \n+    public static int getInt(String str, int defaultVal) {\n+        try {\n+            return Integer.parseInt(str);\n+        } catch (NumberFormatException e) {\n+            return defaultVal;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzMTg2Mw==", "bodyText": "roll eyes", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429131863", "createdAt": "2020-05-22T09:07:52Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/NumberUtils.java", "diffHunk": "@@ -57,4 +57,11 @@ public static String getTimeLeft(int seconds) {\n         return timeleft + seconds + \"s\";\n     }\n \n+    public static int getInt(String str, int defaultVal) {\n+        try {\n+            return Integer.parseInt(str);\n+        } catch (NumberFormatException e) {\n+            return defaultVal;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNjAwNQ=="}, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjU5MzE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/me/mrCookieSlime/Slimefun/api/inventory/BlockMenu.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODo1NToyNVrOGZPxxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODo1NToyNVrOGZPxxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNjA4Ng==", "bodyText": "docs", "url": "https://github.com/Slimefun/Slimefun4/pull/1925#discussion_r429126086", "createdAt": "2020-05-22T08:55:25Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/me/mrCookieSlime/Slimefun/api/inventory/BlockMenu.java", "diffHunk": "@@ -72,6 +72,10 @@ public void move(Location l) {\n         this.save(l);\n     }\n \n+    public void reload() {\n+        this.preset.clone(this);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3048f0f6a03bc18b974df587a3bd79b4bf5d0b3b"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 454, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}