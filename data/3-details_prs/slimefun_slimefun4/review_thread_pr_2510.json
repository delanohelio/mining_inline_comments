{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NzM5MjY1", "number": 2510, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMTowNTozNFrOEx2fnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMzo1MjowNFrOEyXMzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzA4NTExOnYy", "diffSide": "RIGHT", "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/abstractItems/AContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMTowNTozNFrOHoKo0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMTowNTozNFrOHoKo0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg3OTM3OQ==", "bodyText": "No need for this much nesting and unnecessary guard blocks.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } else {\n          \n          \n            \n                            if (!takeCharge(b.getLocation())) {\n          \n          \n            \n                                return;\n          \n          \n            \n                            }\n          \n          \n            \n                        } else if (takeCharge(b.getLocation())) {", "url": "https://github.com/Slimefun/Slimefun4/pull/2510#discussion_r511879379", "createdAt": "2020-10-26T11:05:34Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/abstractItems/AContainer.java", "diffHunk": "@@ -243,15 +244,16 @@ protected void tick(Block b) {\n             if (timeleft > 0) {\n                 ChestMenuUtils.updateProgressbar(inv, 22, timeleft, processing.get(b).getTicks(), getProgressBar());\n \n-                if (isChargeable()) {\n-                    if (getCharge(b.getLocation()) < getEnergyConsumption()) {\n-                        return;\n-                    }\n-\n-                    removeCharge(b.getLocation(), getEnergyConsumption());\n+                if (!takeCharge(b.getLocation())) {\n+                    return;\n                 }\n+\n                 progress.put(b, timeleft - 1);\n             } else {\n+                if (!takeCharge(b.getLocation())) {\n+                    return;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8608b9223d204ed96809b3c304328be702c897c9"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzA4NTk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/abstractItems/AContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMTowNTo1MlrOHoKpUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMTowNTo1MlrOHoKpUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg3OTUwNw==", "bodyText": "Missing annotation for the parameter.\nAlso missing javadocs", "url": "https://github.com/Slimefun/Slimefun4/pull/2510#discussion_r511879507", "createdAt": "2020-10-26T11:05:52Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/abstractItems/AContainer.java", "diffHunk": "@@ -273,6 +275,17 @@ protected void tick(Block b) {\n         }\n     }\n \n+    protected boolean takeCharge(Location l) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8608b9223d204ed96809b3c304328be702c897c9"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMjQzMzE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/abstractItems/AContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMzo1MDowMVrOHo9LaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMzo1MDowMVrOHo9LaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcwNzQzMw==", "bodyText": "Since this is a \"protected\" method, the Non-nullability of this parameter should also be enforced via Validate.notNull(l, message)", "url": "https://github.com/Slimefun/Slimefun4/pull/2510#discussion_r512707433", "createdAt": "2020-10-27T13:50:01Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/abstractItems/AContainer.java", "diffHunk": "@@ -273,6 +274,23 @@ protected void tick(Block b) {\n         }\n     }\n \n+    /**\n+     * This method will remove charge from a location if it is chargeable.\n+     *\n+     * @param l location to try to remove charge from\n+     * @return Whether charge was taken if its chargeable\n+     */\n+    protected boolean takeCharge(@Nonnull Location l) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c39dbc3afeb715e086a5e80ca37e8fe11d0214a"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMjQ0MzY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/abstractItems/AContainer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMzo1MjowNFrOHo9R6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNDoxNjowMFrOHo-flQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcwOTA5Ng==", "bodyText": "Why was this now placed in front of everything?", "url": "https://github.com/Slimefun/Slimefun4/pull/2510#discussion_r512709096", "createdAt": "2020-10-27T13:52:04Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/abstractItems/AContainer.java", "diffHunk": "@@ -238,31 +240,30 @@ protected void tick(Block b) {\n         BlockMenu inv = BlockStorage.getInventory(b);\n \n         if (isProcessing(b)) {\n-            int timeleft = progress.get(b);\n \n-            if (timeleft > 0) {\n-                ChestMenuUtils.updateProgressbar(inv, 22, timeleft, processing.get(b).getTicks(), getProgressBar());\n+            if (takeCharge(b.getLocation())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c39dbc3afeb715e086a5e80ca37e8fe11d0214a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcyMzM5NQ==", "bodyText": "because it should be called in both cases, so might as well right?", "url": "https://github.com/Slimefun/Slimefun4/pull/2510#discussion_r512723395", "createdAt": "2020-10-27T14:09:20Z", "author": {"login": "Mooy1"}, "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/abstractItems/AContainer.java", "diffHunk": "@@ -238,31 +240,30 @@ protected void tick(Block b) {\n         BlockMenu inv = BlockStorage.getInventory(b);\n \n         if (isProcessing(b)) {\n-            int timeleft = progress.get(b);\n \n-            if (timeleft > 0) {\n-                ChestMenuUtils.updateProgressbar(inv, 22, timeleft, processing.get(b).getTicks(), getProgressBar());\n+            if (takeCharge(b.getLocation())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcwOTA5Ng=="}, "originalCommit": {"oid": "7c39dbc3afeb715e086a5e80ca37e8fe11d0214a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcyODk4MQ==", "bodyText": "huh, you are right.", "url": "https://github.com/Slimefun/Slimefun4/pull/2510#discussion_r512728981", "createdAt": "2020-10-27T14:16:00Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/me/mrCookieSlime/Slimefun/Objects/SlimefunItem/abstractItems/AContainer.java", "diffHunk": "@@ -238,31 +240,30 @@ protected void tick(Block b) {\n         BlockMenu inv = BlockStorage.getInventory(b);\n \n         if (isProcessing(b)) {\n-            int timeleft = progress.get(b);\n \n-            if (timeleft > 0) {\n-                ChestMenuUtils.updateProgressbar(inv, 22, timeleft, processing.get(b).getTicks(), getProgressBar());\n+            if (takeCharge(b.getLocation())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcwOTA5Ng=="}, "originalCommit": {"oid": "7c39dbc3afeb715e086a5e80ca37e8fe11d0214a"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 295, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}