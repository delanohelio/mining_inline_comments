{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2Njg1MzYz", "number": 2136, "title": "Piglin drops fgithub", "bodyText": "Description\nAdded a new recipe type for piglin bartering\nChanges\nNew Recipe type BARTER_DROP\nupdated RandomMobDrop type documentation\nupdated piglinlistener\nupdated slimefunregistry\nRelated Issues\nN/A\nChecklist\n\n\n\n I have fully tested the proposed changes and promise that they will not break everything into chaos.\n I have also tested the proposed changes in combination with various popular addons and can confirm my changes do not break them.\n I followed the existing code standards and didn't mess up the formatting.\n I did my best to add documentation to any public classes or methods I added.\n I added sufficient Unit Tests to cover my code.", "createdAt": "2020-07-26T00:42:58Z", "url": "https://github.com/Slimefun/Slimefun4/pull/2136", "merged": true, "mergeCommit": {"oid": "dbed8b55d9d9fc8e1c195a30573a31ce9ed2b2db"}, "closed": true, "closedAt": "2020-08-04T10:25:27Z", "author": {"login": "dniym"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4iOUNgH2gAyNDU2Njg1MzYzOjkwOTNlMjkyYTEzOGYwNDNiNzU0OTkzMDE5ZTUxZDcwYjM3NzFiMTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7jJTPgFqTQ2MDY0NTQ5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9093e292a138f043b754993019e51d70b3771b18", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/9093e292a138f043b754993019e51d70b3771b18", "committedDate": "2020-07-26T00:38:15Z", "message": "Rebased and re-commital of Piglin barter recipe addition."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22a0623485cf3681ef609808217baa77eaab0e78", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/22a0623485cf3681ef609808217baa77eaab0e78", "committedDate": "2020-07-26T00:41:27Z", "message": "fixed formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzUwOTE1", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#pullrequestreview-455350915", "createdAt": "2020-07-26T10:18:20Z", "commit": {"oid": "22a0623485cf3681ef609808217baa77eaab0e78"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMDoxODoyMFrOG3LMOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMDoyMjowNFrOG3LNqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUwODIxOQ==", "bodyText": "This import must remain there.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r460508219", "createdAt": "2020-07-26T10:18:20Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/RandomMobDrop.java", "diffHunk": "@@ -2,7 +2,6 @@\n \r\n import org.bukkit.entity.EntityType;\r\n import org.bukkit.entity.Player;\r\n-import org.bukkit.event.entity.EntityDeathEvent;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a0623485cf3681ef609808217baa77eaab0e78"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUwODIzMw==", "bodyText": "*EntityDeathEvent", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r460508233", "createdAt": "2020-07-26T10:18:23Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/RandomMobDrop.java", "diffHunk": "@@ -11,8 +10,8 @@\n \r\n /**\r\n  * This interface, when attached to a {@link SlimefunItem}, provides an easy method for adding\r\n- * a % chance to drop for an {@link SlimefunItem} on {@link EntityDeathEvent}, this chance is 0-100\r\n- * and used in conjunction with the MOB_DROP {@link RecipeType}.\r\n+ * a % chance to drop for an {@link SlimefunItem} on {@link entityDeathEvent} or {@link EntityItemDropEvent}, this chance is 0-100\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a0623485cf3681ef609808217baa77eaab0e78"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUwODI4NQ==", "bodyText": "You can't just add a new docs comment below the original one, edit the description instead and add yourself as an author there.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r460508285", "createdAt": "2020-07-26T10:19:07Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -20,6 +26,18 @@\n  * @author poma123\n  * \n  */\n+\n+/**\n+ * Also {@link Listener} Listens to the EntityDropItemEvent event to inject a {@link RandomMobDrop} if its dropChance() check passes.\n+ * this would only be possible if the {@link RecipeType} is of PiglinBarter type. \n+ * \n+ * @author dNiym\n+ * \n+ * @see getBarterDrops\n+ * @see RandomMobDrop\n+ * \n+ */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a0623485cf3681ef609808217baa77eaab0e78"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUwODMzMQ==", "bodyText": "Remove these", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r460508331", "createdAt": "2020-07-26T10:19:18Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -20,6 +26,18 @@\n  * @author poma123\n  * \n  */\n+\n+/**\n+ * Also {@link Listener} Listens to the EntityDropItemEvent event to inject a {@link RandomMobDrop} if its dropChance() check passes.\n+ * this would only be possible if the {@link RecipeType} is of PiglinBarter type. \n+ * \n+ * @author dNiym\n+ * \n+ * @see getBarterDrops\n+ * @see RandomMobDrop", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a0623485cf3681ef609808217baa77eaab0e78"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUwODU0Mw==", "bodyText": "Honestly I would rather recommend making a seperate PiglinBarterDrop interface for this instead. (You can also just make it extend RandomMobDrop for simplicity).\nBecause this is a bit un-intuitive.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r460508543", "createdAt": "2020-07-26T10:21:41Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -38,6 +56,29 @@ public void onEntityPickup(EntityPickupItemEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onPiglinDropItem(EntityDropItemEvent e) {\n+        if (e.getEntity() instanceof Piglin) {\n+            Set<ItemStack> drops = SlimefunPlugin.getRegistry().getBarterDrops(); \n+            \n+            /*\n+             * NOTE:  Getting a new random number each iteration because multiple items could have the same\n+             * % chance to drop, and if one fails all items with that number will fail.  Getting a new random number\n+             * will allow multiple items with the same % chance to drop.\n+             */\n+            \n+            for (ItemStack is : drops) {\n+                SlimefunItem sfi = SlimefunItem.getByItem(is);\n+                if (sfi instanceof RandomMobDrop && ((RandomMobDrop)sfi).getMobDropChance() >= ThreadLocalRandom.current().nextInt(100)) {\n+                    Item drop = e.getEntity().getWorld().dropItemNaturally(((Piglin)e.getEntity()).getEyeLocation(), sfi.getItem());\n+                    drop.setVelocity(e.getItemDrop().getVelocity());\n+                    e.getItemDrop().remove();\n+                    return;\n+                } \n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a0623485cf3681ef609808217baa77eaab0e78"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUwODU4NQ==", "bodyText": "Also it may be wise to create some variables here, for the piglin for example as this all appears a bit cluttered.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r460508585", "createdAt": "2020-07-26T10:22:04Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -38,6 +56,29 @@ public void onEntityPickup(EntityPickupItemEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onPiglinDropItem(EntityDropItemEvent e) {\n+        if (e.getEntity() instanceof Piglin) {\n+            Set<ItemStack> drops = SlimefunPlugin.getRegistry().getBarterDrops(); \n+            \n+            /*\n+             * NOTE:  Getting a new random number each iteration because multiple items could have the same\n+             * % chance to drop, and if one fails all items with that number will fail.  Getting a new random number\n+             * will allow multiple items with the same % chance to drop.\n+             */\n+            \n+            for (ItemStack is : drops) {\n+                SlimefunItem sfi = SlimefunItem.getByItem(is);\n+                if (sfi instanceof RandomMobDrop && ((RandomMobDrop)sfi).getMobDropChance() >= ThreadLocalRandom.current().nextInt(100)) {\n+                    Item drop = e.getEntity().getWorld().dropItemNaturally(((Piglin)e.getEntity()).getEyeLocation(), sfi.getItem());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a0623485cf3681ef609808217baa77eaab0e78"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba8aafe3123425bedc47dd0f3474ebccbe59887f", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/ba8aafe3123425bedc47dd0f3474ebccbe59887f", "committedDate": "2020-07-26T14:20:17Z", "message": "made requested changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzY5OTM4", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#pullrequestreview-455369938", "createdAt": "2020-07-26T14:36:38Z", "commit": {"oid": "ba8aafe3123425bedc47dd0f3474ebccbe59887f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNDozNjozOFrOG3M2OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNDozODozMFrOG3M3BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzNTM1Mg==", "bodyText": "Make a new author tag below this one.\nYou can have multiple, no need to use a comma here", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r460535352", "createdAt": "2020-07-26T14:36:38Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -1,25 +1,34 @@\n package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n \n+import java.util.Set;\n+import java.util.concurrent.ThreadLocalRandom;\n+\n import org.bukkit.Material;\n import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Item;\n import org.bukkit.entity.Piglin;\n import org.bukkit.entity.Player;\n import org.bukkit.event.EventHandler;\n import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDropItemEvent;\n import org.bukkit.event.entity.EntityPickupItemEvent;\n import org.bukkit.event.player.PlayerInteractEntityEvent;\n import org.bukkit.inventory.EquipmentSlot;\n import org.bukkit.inventory.ItemStack;\n \n+import io.github.thebusybiscuit.slimefun4.core.attributes.PiglinBarterDrop;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.RandomMobDrop;\n import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n \n /**\n- * This {@link Listener} prevents a {@link Piglin} from bartering with a {@link SlimefunItem}.\n+ * This {@link Listener} prevents a {@link Piglin} from bartering with a {@link SlimefunItem} as well as\n+ * listens to the EntityDropItemEvent to inject a {@link PiglinBarterDrop} if a dropChance() check passes.\n  *\n- * @author poma123\n+ * @author poma123, dNiym", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8aafe3123425bedc47dd0f3474ebccbe59887f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzNTM5Ng==", "bodyText": "*piglin", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r460535396", "createdAt": "2020-07-26T14:36:54Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -38,6 +47,30 @@ public void onEntityPickup(EntityPickupItemEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onPiglinDropItem(EntityDropItemEvent e) {\n+        if (e.getEntity() instanceof Piglin) {\n+            Piglin piggy = (Piglin) e.getEntity();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8aafe3123425bedc47dd0f3474ebccbe59887f"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzNTQ0OQ==", "bodyText": "*PiglinListener", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r460535449", "createdAt": "2020-07-26T14:37:15Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/PiglinBarterDrop.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.github.thebusybiscuit.slimefun4.core.attributes;\n+\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.entity.EntityDeathEvent;\n+import org.bukkit.event.entity.EntityDropItemEvent;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.misc.BasicCircuitBoard;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+\n+/**\n+ * This interface, when attached to a {@link SlimefunItem}, provides an easy method for adding\n+ * a % chance to drop for an {@link SlimefunItem} on {@link EntityItemDropEvent}, this chance is 0-100\n+ * and used in conjunction with the BARTER_DROP {@link RecipeType}.\n+ * \n+ * @author dNiym\n+ *\n+ * @see MobDropListener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8aafe3123425bedc47dd0f3474ebccbe59887f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzNTQ4Nw==", "bodyText": "Also I forgot the method was called getMobDropChance(). Maybe not extend that and just make a method called getBarteringLootChance() instead?", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r460535487", "createdAt": "2020-07-26T14:37:49Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/PiglinBarterDrop.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.github.thebusybiscuit.slimefun4.core.attributes;\n+\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.entity.EntityDeathEvent;\n+import org.bukkit.event.entity.EntityDropItemEvent;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.misc.BasicCircuitBoard;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+\n+/**\n+ * This interface, when attached to a {@link SlimefunItem}, provides an easy method for adding\n+ * a % chance to drop for an {@link SlimefunItem} on {@link EntityItemDropEvent}, this chance is 0-100\n+ * and used in conjunction with the BARTER_DROP {@link RecipeType}.\n+ * \n+ * @author dNiym\n+ *\n+ * @see MobDropListener\n+ * \n+ */\n+@FunctionalInterface\n+public interface PiglinBarterDrop extends RandomMobDrop {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8aafe3123425bedc47dd0f3474ebccbe59887f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzNTUxOA==", "bodyText": "This comment is no longer needed here", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r460535518", "createdAt": "2020-07-26T14:38:04Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/RandomMobDrop.java", "diffHunk": "@@ -26,7 +27,15 @@\n     /**\r\n      * Implement this method to make the object have a variable chance of being\r\n      * added to the dropList when {@link EntityType} (specified in the recipe)\r\n-     * is killed by the {@link Player}\r\n+     * is killed by the {@link Player} for a MOB_DROP {@link RecipeType}.\r\n+     * \r\n+     * Alternatively if the {@link RecipeType} is set to BARTER_DROP the item\r\n+     * will then have its % chance to be dropped only by bartering with the\r\n+     * Piglin creatures.\r\n+     * \r\n+     * It is recommended that this chance is kept reasonably low to feel like\r\n+     * a vanilla drop as a 100% chance will completely override all piglin \r\n+     * barter drops.  (NOTE: this feature only exists in 1.16+)\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8aafe3123425bedc47dd0f3474ebccbe59887f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzNTUzMQ==", "bodyText": "EntityDeathEvent", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r460535531", "createdAt": "2020-07-26T14:38:15Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/RandomMobDrop.java", "diffHunk": "@@ -11,8 +12,8 @@\n \r\n /**\r\n  * This interface, when attached to a {@link SlimefunItem}, provides an easy method for adding\r\n- * a % chance to drop for an {@link SlimefunItem} on {@link EntityDeathEvent}, this chance is 0-100\r\n- * and used in conjunction with the MOB_DROP {@link RecipeType}.\r\n+ * a % chance to drop for an {@link SlimefunItem} on {@link entityDeathEvent} or {@link EntityItemDropEvent}, this chance is 0-100\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8aafe3123425bedc47dd0f3474ebccbe59887f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzNTU1Nw==", "bodyText": "The barter drop is now its own interface", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r460535557", "createdAt": "2020-07-26T14:38:30Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/RandomMobDrop.java", "diffHunk": "@@ -11,8 +12,8 @@\n \r\n /**\r\n  * This interface, when attached to a {@link SlimefunItem}, provides an easy method for adding\r\n- * a % chance to drop for an {@link SlimefunItem} on {@link EntityDeathEvent}, this chance is 0-100\r\n- * and used in conjunction with the MOB_DROP {@link RecipeType}.\r\n+ * a % chance to drop for an {@link SlimefunItem} on {@link entityDeathEvent} or {@link EntityItemDropEvent}, this chance is 0-100\r\n+ * and used in conjunction with the MOB_DROP {@link RecipeType} or the BARTER_DROP {@link RecipeType}.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8aafe3123425bedc47dd0f3474ebccbe59887f"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65f851980515b295e298d019d026baf37212cc90", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/65f851980515b295e298d019d026baf37212cc90", "committedDate": "2020-07-26T14:49:41Z", "message": "made requested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "260a6f4f6160106319ead9ec725d92d4278549ed", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/260a6f4f6160106319ead9ec725d92d4278549ed", "committedDate": "2020-07-26T14:51:18Z", "message": "forgot one"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzcxMjg3", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#pullrequestreview-455371287", "createdAt": "2020-07-26T14:53:53Z", "commit": {"oid": "260a6f4f6160106319ead9ec725d92d4278549ed"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNDo1Mzo1NFrOG3M9LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxNDo1Mzo1NFrOG3M9LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUzNzEzMg==", "bodyText": "Still a capital E at the start.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r460537132", "createdAt": "2020-07-26T14:53:54Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/RandomMobDrop.java", "diffHunk": "@@ -11,8 +12,8 @@\n \r\n /**\r\n  * This interface, when attached to a {@link SlimefunItem}, provides an easy method for adding\r\n- * a % chance to drop for an {@link SlimefunItem} on {@link EntityDeathEvent}, this chance is 0-100\r\n- * and used in conjunction with the MOB_DROP {@link RecipeType}.\r\n+ * a % chance to drop for an {@link SlimefunItem} on {@link entityDeathEvent}, this chance is 0-100\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "260a6f4f6160106319ead9ec725d92d4278549ed"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f5c1f6760a5e8ca3e2d1e2a9faa56e69c5c664e", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/4f5c1f6760a5e8ca3e2d1e2a9faa56e69c5c664e", "committedDate": "2020-07-26T16:06:06Z", "message": "made requested changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1Mzg4ODg0", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#pullrequestreview-455388884", "createdAt": "2020-07-26T19:21:53Z", "commit": {"oid": "4f5c1f6760a5e8ca3e2d1e2a9faa56e69c5c664e"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4ODI1NzU0", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#pullrequestreview-458825754", "createdAt": "2020-07-30T23:18:35Z", "commit": {"oid": "4f5c1f6760a5e8ca3e2d1e2a9faa56e69c5c664e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMzoxODozNlrOG52_nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMzoyNTo0NlrOG53HuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMyMzAzNw==", "bodyText": "\"provides an easy method for adding a % chance to drop for an SlimefunItem\"\nThis doesn't make sense. Also this is one entire sentence. That's a long ass sentence. Also, grammar pls", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r463323037", "createdAt": "2020-07-30T23:18:36Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/PiglinBarterDrop.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.github.thebusybiscuit.slimefun4.core.attributes;\n+\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.entity.EntityDeathEvent;\n+import org.bukkit.event.entity.EntityDropItemEvent;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.misc.BasicCircuitBoard;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+\n+/**\n+ * This interface, when attached to a {@link SlimefunItem}, provides an easy method for adding\n+ * a % chance to drop for an {@link SlimefunItem} on {@link EntityItemDropEvent}, this chance is 0-100", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5c1f6760a5e8ca3e2d1e2a9faa56e69c5c664e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMyMzQ3OA==", "bodyText": "\"make the object have a...\"\n*Make the SlimefunItem have a...\nThen you can remove the useless addition below and just state it's used with the BARTER_DROP RecipeType", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r463323478", "createdAt": "2020-07-30T23:20:02Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/PiglinBarterDrop.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.github.thebusybiscuit.slimefun4.core.attributes;\n+\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.entity.EntityDeathEvent;\n+import org.bukkit.event.entity.EntityDropItemEvent;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.misc.BasicCircuitBoard;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+\n+/**\n+ * This interface, when attached to a {@link SlimefunItem}, provides an easy method for adding\n+ * a % chance to drop for an {@link SlimefunItem} on {@link EntityItemDropEvent}, this chance is 0-100\n+ * and used in conjunction with the BARTER_DROP {@link RecipeType}.\n+ * \n+ * @author dNiym\n+ *\n+ * @see PiglinListener\n+ * \n+ */\n+@FunctionalInterface\n+public interface PiglinBarterDrop extends ItemAttribute {\n+\n+    /**\n+     * Implement this method to make the object have a variable chance of being", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5c1f6760a5e8ca3e2d1e2a9faa56e69c5c664e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMyMzcyNA==", "bodyText": "This note should really be on a new line, hold and not have brackets. This just seems weird.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r463323724", "createdAt": "2020-07-30T23:20:54Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/PiglinBarterDrop.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.github.thebusybiscuit.slimefun4.core.attributes;\n+\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.entity.EntityDeathEvent;\n+import org.bukkit.event.entity.EntityDropItemEvent;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.misc.BasicCircuitBoard;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+\n+/**\n+ * This interface, when attached to a {@link SlimefunItem}, provides an easy method for adding\n+ * a % chance to drop for an {@link SlimefunItem} on {@link EntityItemDropEvent}, this chance is 0-100\n+ * and used in conjunction with the BARTER_DROP {@link RecipeType}.\n+ * \n+ * @author dNiym\n+ *\n+ * @see PiglinListener\n+ * \n+ */\n+@FunctionalInterface\n+public interface PiglinBarterDrop extends ItemAttribute {\n+\n+    /**\n+     * Implement this method to make the object have a variable chance of being\n+     * dropped by Piglins when bartering with them. This interface should be used\n+     * with a {@link SlimefunItem} item that has the BARTER_DROP {@link RecipeType}.\n+     * \n+     * It is recommended that this chance is kept reasonably low to feel like\n+     * a vanilla drop as a 100% chance will completely override all Piglin \n+     * barter drops.  (NOTE: this feature only exists in 1.16+)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5c1f6760a5e8ca3e2d1e2a9faa56e69c5c664e"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMyMzg1Nw==", "bodyText": "The integer chance (0-100%) this SlimefunItem has to drop.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r463323857", "createdAt": "2020-07-30T23:21:28Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/PiglinBarterDrop.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.github.thebusybiscuit.slimefun4.core.attributes;\n+\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.entity.EntityDeathEvent;\n+import org.bukkit.event.entity.EntityDropItemEvent;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.misc.BasicCircuitBoard;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+\n+/**\n+ * This interface, when attached to a {@link SlimefunItem}, provides an easy method for adding\n+ * a % chance to drop for an {@link SlimefunItem} on {@link EntityItemDropEvent}, this chance is 0-100\n+ * and used in conjunction with the BARTER_DROP {@link RecipeType}.\n+ * \n+ * @author dNiym\n+ *\n+ * @see PiglinListener\n+ * \n+ */\n+@FunctionalInterface\n+public interface PiglinBarterDrop extends ItemAttribute {\n+\n+    /**\n+     * Implement this method to make the object have a variable chance of being\n+     * dropped by Piglins when bartering with them. This interface should be used\n+     * with a {@link SlimefunItem} item that has the BARTER_DROP {@link RecipeType}.\n+     * \n+     * It is recommended that this chance is kept reasonably low to feel like\n+     * a vanilla drop as a 100% chance will completely override all Piglin \n+     * barter drops.  (NOTE: this feature only exists in 1.16+)\n+     * \n+     * @return The integer chance (0-100%) {@link SlimefunItem} has to drop.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5c1f6760a5e8ca3e2d1e2a9faa56e69c5c664e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMyMzk4Mw==", "bodyText": "Not exactly sure why the period was removed here.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r463323983", "createdAt": "2020-07-30T23:21:52Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/RandomMobDrop.java", "diffHunk": "@@ -12,7 +13,7 @@\n /**\r\n  * This interface, when attached to a {@link SlimefunItem}, provides an easy method for adding\r\n  * a % chance to drop for an {@link SlimefunItem} on {@link EntityDeathEvent}, this chance is 0-100\r\n- * and used in conjunction with the MOB_DROP {@link RecipeType}.\r\n+ * and used in conjunction with the MOB_DROP {@link RecipeType} \r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5c1f6760a5e8ca3e2d1e2a9faa56e69c5c664e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMyNDEwOQ==", "bodyText": "You can just do {@link RecipeType#MOB_DROP}", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r463324109", "createdAt": "2020-07-30T23:22:21Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/RandomMobDrop.java", "diffHunk": "@@ -26,7 +27,7 @@\n     /**\r\n      * Implement this method to make the object have a variable chance of being\r\n      * added to the dropList when {@link EntityType} (specified in the recipe)\r\n-     * is killed by the {@link Player}\r\n+     * is killed by the {@link Player} for a MOB_DROP {@link RecipeType}.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5c1f6760a5e8ca3e2d1e2a9faa56e69c5c664e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMyNTExMg==", "bodyText": "You make an Piglin variable but then only use it once (and use e.getEntity another). You also don't actually even use any methods in this class...", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r463325112", "createdAt": "2020-07-30T23:25:46Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -38,6 +48,30 @@ public void onEntityPickup(EntityPickupItemEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onPiglinDropItem(EntityDropItemEvent e) {\n+        if (e.getEntity() instanceof Piglin) {\n+            Piglin piglin = (Piglin) e.getEntity();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5c1f6760a5e8ca3e2d1e2a9faa56e69c5c664e"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4ODI5MDUz", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#pullrequestreview-458829053", "createdAt": "2020-07-30T23:28:25Z", "commit": {"oid": "4f5c1f6760a5e8ca3e2d1e2a9faa56e69c5c664e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMzoyODoyNVrOG53Kmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMzoyODoyNVrOG53Kmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMyNTg1MA==", "bodyText": "You're doing a random number between 0-99 and then a greater OR equal). If I had a 1% chance this would actually be 2% (0 and 1).\nFix pls", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r463325850", "createdAt": "2020-07-30T23:28:25Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -38,6 +48,30 @@ public void onEntityPickup(EntityPickupItemEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onPiglinDropItem(EntityDropItemEvent e) {\n+        if (e.getEntity() instanceof Piglin) {\n+            Piglin piglin = (Piglin) e.getEntity();\n+            Set<ItemStack> drops = SlimefunPlugin.getRegistry().getBarterDrops(); \n+            \n+            /*\n+             * NOTE:  Getting a new random number each iteration because multiple items could have the same\n+             * % chance to drop, and if one fails all items with that number will fail.  Getting a new random number\n+             * will allow multiple items with the same % chance to drop.\n+             */\n+            \n+            for (ItemStack is : drops) {\n+                SlimefunItem sfi = SlimefunItem.getByItem(is);\n+                if (sfi instanceof PiglinBarterDrop && ((PiglinBarterDrop)sfi).getBarteringLootChance() >= ThreadLocalRandom.current().nextInt(100)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5c1f6760a5e8ca3e2d1e2a9faa56e69c5c664e"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80ee551ca27ee34bf46021ead395a2a8b212fa5a", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/80ee551ca27ee34bf46021ead395a2a8b212fa5a", "committedDate": "2020-07-31T00:14:14Z", "message": "Made requested changes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NjU0Mjg3", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#pullrequestreview-459654287", "createdAt": "2020-08-02T14:40:06Z", "commit": {"oid": "80ee551ca27ee34bf46021ead395a2a8b212fa5a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxNDo0MDowNlrOG6ljVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxNDo0MTowNlrOG6ljww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA4NTg0NQ==", "bodyText": "This doesn't make sense anymore. \"killed by the Player RecipeType#MOB_DROP\".\nShould probably be mentioned above when the entity and recipe is mentioned.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r464085845", "createdAt": "2020-08-02T14:40:06Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/RandomMobDrop.java", "diffHunk": "@@ -26,7 +27,7 @@\n     /**\r\n      * Implement this method to make the object have a variable chance of being\r\n      * added to the dropList when {@link EntityType} (specified in the recipe)\r\n-     * is killed by the {@link Player}\r\n+     * is killed by the {@link Player} {@link RecipeType#MOB_DROP} \r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80ee551ca27ee34bf46021ead395a2a8b212fa5a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDA4NTk1NQ==", "bodyText": "RecipeType#BARTER_DROP", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r464085955", "createdAt": "2020-08-02T14:41:06Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/PiglinBarterDrop.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.github.thebusybiscuit.slimefun4.core.attributes;\n+\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.entity.EntityDeathEvent;\n+import org.bukkit.event.entity.EntityDropItemEvent;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.misc.BasicCircuitBoard;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+\n+/**\n+ * This interface, when attached to a {@link SlimefunItem}, provides a variable (0-100%) chance for\n+ * a {@link SlimefunItem} to be dropped by a piglin on {@link EntityItemDropEvent}. \n+ * \n+ * @author dNiym\n+ *\n+ * @see PiglinListener\n+ * \n+ */\n+@FunctionalInterface\n+public interface PiglinBarterDrop extends ItemAttribute {\n+\n+    /**\n+     * Implement this method to make this SlimefunItem have a variable chance of being\n+     * dropped by Piglins when bartering with them. This interface should be used\n+     * the BARTER_DROP {@link RecipeType}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80ee551ca27ee34bf46021ead395a2a8b212fa5a"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8305729cfb4aa8d899369193f7c13148fb788efb", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/8305729cfb4aa8d899369193f7c13148fb788efb", "committedDate": "2020-08-02T15:45:19Z", "message": "Update RandomMobDrop.java\n\nmade requested changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eed7b873c7d15657fa612dc98c2588f1025b5da8", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/eed7b873c7d15657fa612dc98c2588f1025b5da8", "committedDate": "2020-08-02T15:46:46Z", "message": "Update PiglinBarterDrop.java\n\nmade requested changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NjY0NTU4", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#pullrequestreview-459664558", "createdAt": "2020-08-02T17:15:21Z", "commit": {"oid": "eed7b873c7d15657fa612dc98c2588f1025b5da8"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NjY3NDE3", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#pullrequestreview-459667417", "createdAt": "2020-08-02T18:02:33Z", "commit": {"oid": "eed7b873c7d15657fa612dc98c2588f1025b5da8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxODowMjozM1rOG6mxIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxODowMzo0NFrOG6mxhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwNTc2Mg==", "bodyText": "You could also just do e.getItemDrop().setItemStack(sfi.getItem().clone()) here, this would probably cause less issues with other plugins.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r464105762", "createdAt": "2020-08-02T18:02:33Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -38,6 +48,30 @@ public void onEntityPickup(EntityPickupItemEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onPiglinDropItem(EntityDropItemEvent e) {\n+        if (e.getEntity() instanceof Piglin) {\n+            Piglin piglin = (Piglin) e.getEntity();\n+            Set<ItemStack> drops = SlimefunPlugin.getRegistry().getBarterDrops(); \n+            \n+            /*\n+             * NOTE:  Getting a new random number each iteration because multiple items could have the same\n+             * % chance to drop, and if one fails all items with that number will fail.  Getting a new random number\n+             * will allow multiple items with the same % chance to drop.\n+             */\n+            \n+            for (ItemStack is : drops) {\n+                SlimefunItem sfi = SlimefunItem.getByItem(is);\n+                if (sfi instanceof PiglinBarterDrop && ((PiglinBarterDrop)sfi).getBarteringLootChance() >= ThreadLocalRandom.current().nextInt(1,101)) {\n+                    Item drop = piglin.getWorld().dropItemNaturally(piglin.getEyeLocation(), sfi.getItem());\n+                    drop.setVelocity(e.getItemDrop().getVelocity());\n+                    e.getItemDrop().remove();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed7b873c7d15657fa612dc98c2588f1025b5da8"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwNTc4Ng==", "bodyText": "Why [1; 101] here?", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r464105786", "createdAt": "2020-08-02T18:02:44Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -38,6 +48,30 @@ public void onEntityPickup(EntityPickupItemEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onPiglinDropItem(EntityDropItemEvent e) {\n+        if (e.getEntity() instanceof Piglin) {\n+            Piglin piglin = (Piglin) e.getEntity();\n+            Set<ItemStack> drops = SlimefunPlugin.getRegistry().getBarterDrops(); \n+            \n+            /*\n+             * NOTE:  Getting a new random number each iteration because multiple items could have the same\n+             * % chance to drop, and if one fails all items with that number will fail.  Getting a new random number\n+             * will allow multiple items with the same % chance to drop.\n+             */\n+            \n+            for (ItemStack is : drops) {\n+                SlimefunItem sfi = SlimefunItem.getByItem(is);\n+                if (sfi instanceof PiglinBarterDrop && ((PiglinBarterDrop)sfi).getBarteringLootChance() >= ThreadLocalRandom.current().nextInt(1,101)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed7b873c7d15657fa612dc98c2588f1025b5da8"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwNTgxMQ==", "bodyText": "You could mark EntityDropItemEvent here as a link too.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r464105811", "createdAt": "2020-08-02T18:03:02Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -1,25 +1,35 @@\n package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n \n+import java.util.Set;\n+import java.util.concurrent.ThreadLocalRandom;\n+\n import org.bukkit.Material;\n import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Item;\n import org.bukkit.entity.Piglin;\n import org.bukkit.entity.Player;\n import org.bukkit.event.EventHandler;\n import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDropItemEvent;\n import org.bukkit.event.entity.EntityPickupItemEvent;\n import org.bukkit.event.player.PlayerInteractEntityEvent;\n import org.bukkit.inventory.EquipmentSlot;\n import org.bukkit.inventory.ItemStack;\n \n+import io.github.thebusybiscuit.slimefun4.core.attributes.PiglinBarterDrop;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.RandomMobDrop;\n import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n \n /**\n- * This {@link Listener} prevents a {@link Piglin} from bartering with a {@link SlimefunItem}.\n+ * This {@link Listener} prevents a {@link Piglin} from bartering with a {@link SlimefunItem} as well as\n+ * listens to the EntityDropItemEvent to inject a {@link PiglinBarterDrop} if a dropChance() check passes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed7b873c7d15657fa612dc98c2588f1025b5da8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwNTgyOA==", "bodyText": "You could mark SlimefunItem here as a link too.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r464105828", "createdAt": "2020-08-02T18:03:13Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/PiglinBarterDrop.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.github.thebusybiscuit.slimefun4.core.attributes;\n+\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.entity.EntityDeathEvent;\n+import org.bukkit.event.entity.EntityDropItemEvent;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.misc.BasicCircuitBoard;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+\n+/**\n+ * This interface, when attached to a {@link SlimefunItem}, provides a variable (0-100%) chance for\n+ * a {@link SlimefunItem} to be dropped by a piglin on {@link EntityItemDropEvent}. \n+ * \n+ * @author dNiym\n+ *\n+ * @see PiglinListener\n+ * \n+ */\n+@FunctionalInterface\n+public interface PiglinBarterDrop extends ItemAttribute {\n+\n+    /**\n+     * Implement this method to make this SlimefunItem have a variable chance of being", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed7b873c7d15657fa612dc98c2588f1025b5da8"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwNTg0OQ==", "bodyText": "You could mark Piglin here as a link too.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r464105849", "createdAt": "2020-08-02T18:03:29Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/PiglinBarterDrop.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.github.thebusybiscuit.slimefun4.core.attributes;\n+\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.entity.EntityDeathEvent;\n+import org.bukkit.event.entity.EntityDropItemEvent;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.misc.BasicCircuitBoard;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+\n+/**\n+ * This interface, when attached to a {@link SlimefunItem}, provides a variable (0-100%) chance for\n+ * a {@link SlimefunItem} to be dropped by a piglin on {@link EntityItemDropEvent}. \n+ * \n+ * @author dNiym\n+ *\n+ * @see PiglinListener\n+ * \n+ */\n+@FunctionalInterface\n+public interface PiglinBarterDrop extends ItemAttribute {\n+\n+    /**\n+     * Implement this method to make this SlimefunItem have a variable chance of being\n+     * dropped by Piglins when bartering with them. This interface should be used\n+     * with the {@link RecipeType#BARTER_DROP}.\n+     */\n+    \n+    /** It is recommended that this chance is kept reasonably low to feel like\n+     * a vanilla drop as a 100% chance will completely override all Piglin ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed7b873c7d15657fa612dc98c2588f1025b5da8"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwNTg1NA==", "bodyText": "You could mark Piglin here as a link too.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r464105854", "createdAt": "2020-08-02T18:03:38Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/PiglinBarterDrop.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.github.thebusybiscuit.slimefun4.core.attributes;\n+\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.entity.EntityDeathEvent;\n+import org.bukkit.event.entity.EntityDropItemEvent;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.misc.BasicCircuitBoard;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+\n+/**\n+ * This interface, when attached to a {@link SlimefunItem}, provides a variable (0-100%) chance for\n+ * a {@link SlimefunItem} to be dropped by a piglin on {@link EntityItemDropEvent}. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed7b873c7d15657fa612dc98c2588f1025b5da8"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwNTg2Mw==", "bodyText": "You could mark SlimefunItem here as a link too.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r464105863", "createdAt": "2020-08-02T18:03:44Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/PiglinBarterDrop.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.github.thebusybiscuit.slimefun4.core.attributes;\n+\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.entity.EntityDeathEvent;\n+import org.bukkit.event.entity.EntityDropItemEvent;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.misc.BasicCircuitBoard;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+\n+/**\n+ * This interface, when attached to a {@link SlimefunItem}, provides a variable (0-100%) chance for\n+ * a {@link SlimefunItem} to be dropped by a piglin on {@link EntityItemDropEvent}. \n+ * \n+ * @author dNiym\n+ *\n+ * @see PiglinListener\n+ * \n+ */\n+@FunctionalInterface\n+public interface PiglinBarterDrop extends ItemAttribute {\n+\n+    /**\n+     * Implement this method to make this SlimefunItem have a variable chance of being\n+     * dropped by Piglins when bartering with them. This interface should be used\n+     * with the {@link RecipeType#BARTER_DROP}.\n+     */\n+    \n+    /** It is recommended that this chance is kept reasonably low to feel like\n+     * a vanilla drop as a 100% chance will completely override all Piglin \n+     * barter drops.  (NOTE: this feature only exists in 1.16+)\n+     * \n+     * @return The integer chance (0-100%) this SlimefunItem has to drop.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed7b873c7d15657fa612dc98c2588f1025b5da8"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2376b90b35621fff3677e9439691590f0987f43", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/c2376b90b35621fff3677e9439691590f0987f43", "committedDate": "2020-08-02T20:25:39Z", "message": "Update PiglinListener.java\n\nmade requested changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9edc082230be81015ab3bc0f739df2a78cf4d074", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/9edc082230be81015ab3bc0f739df2a78cf4d074", "committedDate": "2020-08-02T20:29:08Z", "message": "Update PiglinBarterDrop.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21305ddfdb1c9d51d43a1d6c59a17aa9877999bd", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/21305ddfdb1c9d51d43a1d6c59a17aa9877999bd", "committedDate": "2020-08-02T20:37:19Z", "message": "Update PiglinListener.java\n\nfixed a compile error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5Njc5MjQx", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#pullrequestreview-459679241", "createdAt": "2020-08-02T21:16:16Z", "commit": {"oid": "21305ddfdb1c9d51d43a1d6c59a17aa9877999bd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQyMToxNjoxNlrOG6n5sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQyMToxNjo1OFrOG6n5-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEyNDMzOQ==", "bodyText": "No need for the 1 as the minimum here since you are now doing > instead of >=", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r464124339", "createdAt": "2020-08-02T21:16:16Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -38,6 +48,29 @@ public void onEntityPickup(EntityPickupItemEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onPiglinDropItem(EntityDropItemEvent e) {\n+        if (e.getEntity() instanceof Piglin) {\n+            Piglin piglin = (Piglin) e.getEntity();\n+            Set<ItemStack> drops = SlimefunPlugin.getRegistry().getBarterDrops(); \n+            \n+            /*\n+             * NOTE:  Getting a new random number each iteration because multiple items could have the same\n+             * % chance to drop, and if one fails all items with that number will fail.  Getting a new random number\n+             * will allow multiple items with the same % chance to drop.\n+             */\n+            \n+            for (ItemStack is : drops) {\n+                SlimefunItem sfi = SlimefunItem.getByItem(is);\n+                //Check the getBarteringLootChance and compare against a random number 1-100, if the random number is greater then replace the item.\n+                if (sfi instanceof PiglinBarterDrop && ((PiglinBarterDrop)sfi).getBarteringLootChance() > ThreadLocalRandom.current().nextInt(1,100)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21305ddfdb1c9d51d43a1d6c59a17aa9877999bd"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEyNDQwMw==", "bodyText": "No need for the space in front of the semicolon.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r464124403", "createdAt": "2020-08-02T21:16:49Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/PiglinBarterDrop.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.github.thebusybiscuit.slimefun4.core.attributes;\n+\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.entity.EntityDeathEvent;\n+import org.bukkit.event.entity.EntityDropItemEvent;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.misc.BasicCircuitBoard;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+\n+/**\n+ * This interface, when attached to a {@link SlimefunItem}, provides a variable (0-100%) chance for\n+ * a {@link SlimefunItem} to be dropped by a {@link Piglin} on {@link EntityItemDropEvent}. \n+ * \n+ * @author dNiym\n+ *\n+ * @see PiglinListener\n+ * \n+ */\n+@FunctionalInterface\n+public interface PiglinBarterDrop extends ItemAttribute {\n+\n+    /**\n+     * Implement this method to make this {@link SlimefunItem} have a variable chance \n+     * of being dropped by a {@link Piglin} when bartering with them. This interface \n+     * should be used with the {@link RecipeType#BARTER_DROP}.\n+     */\n+    \n+    /** It is recommended that this chance is kept reasonably low to feel like\n+     * a vanilla drop as a 100% chance will completely override all {@link Piglin} \n+     * barter drops.  (NOTE: this feature only exists in 1.16+)\n+     * \n+     * @return The integer chance (0-100%) this {@link SlimefunItem} has to drop.\n+     */\n+    int getBarteringLootChance() ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21305ddfdb1c9d51d43a1d6c59a17aa9877999bd"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEyNDQxMA==", "bodyText": "ou should join these two comments.", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#discussion_r464124410", "createdAt": "2020-08-02T21:16:58Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/PiglinBarterDrop.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.github.thebusybiscuit.slimefun4.core.attributes;\n+\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.entity.EntityDeathEvent;\n+import org.bukkit.event.entity.EntityDropItemEvent;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.misc.BasicCircuitBoard;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+\n+/**\n+ * This interface, when attached to a {@link SlimefunItem}, provides a variable (0-100%) chance for\n+ * a {@link SlimefunItem} to be dropped by a {@link Piglin} on {@link EntityItemDropEvent}. \n+ * \n+ * @author dNiym\n+ *\n+ * @see PiglinListener\n+ * \n+ */\n+@FunctionalInterface\n+public interface PiglinBarterDrop extends ItemAttribute {\n+\n+    /**\n+     * Implement this method to make this {@link SlimefunItem} have a variable chance \n+     * of being dropped by a {@link Piglin} when bartering with them. This interface \n+     * should be used with the {@link RecipeType#BARTER_DROP}.\n+     */\n+    \n+    /** It is recommended that this chance is kept reasonably low to feel like", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21305ddfdb1c9d51d43a1d6c59a17aa9877999bd"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9287e1098dbe7d2b803b0e4cdcf202f301f917e0", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/9287e1098dbe7d2b803b0e4cdcf202f301f917e0", "committedDate": "2020-08-02T21:43:26Z", "message": "Update PiglinListener.java\n\nfixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecb3a354ff6898ab242d3033e92fb618d0345604", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/ecb3a354ff6898ab242d3033e92fb618d0345604", "committedDate": "2020-08-02T21:44:11Z", "message": "Update PiglinBarterDrop.java\n\nfixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17f84bcffd9c676483fd018c6f6bd2be10520adb", "author": {"user": {"login": "dniym", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/17f84bcffd9c676483fd018c6f6bd2be10520adb", "committedDate": "2020-08-02T21:44:57Z", "message": "Update PiglinBarterDrop.java\n\ndone"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NjgxOTg5", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#pullrequestreview-459681989", "createdAt": "2020-08-02T21:58:07Z", "commit": {"oid": "17f84bcffd9c676483fd018c6f6bd2be10520adb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNjQ1NDk3", "url": "https://github.com/Slimefun/Slimefun4/pull/2136#pullrequestreview-460645497", "createdAt": "2020-08-04T09:24:27Z", "commit": {"oid": "17f84bcffd9c676483fd018c6f6bd2be10520adb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2520, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}