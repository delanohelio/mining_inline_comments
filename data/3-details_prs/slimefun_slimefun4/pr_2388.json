{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NDc5MzAx", "number": 2388, "title": "More talismans", "bodyText": "Description\nAdds two new talismans (approved suggestion from Discord):\n\nTalisman of the Wise (20% chance for double exp)\nTalisman of the Resurrected (Tps you to a safe location if you fall in the void)\n\nChanges\n\nAdd two talismans in SlimefunItems\nSet new talismans up in SlimefunItemSetup\nAdd two EventHandlers in TalismanListener\nAdjust getPlayerByEventType() so it works with resurrected_talisman\nAdd entries in messages_en and in researches_en\n\nChecklist\n\n I have fully tested the proposed changes and promise that they will not break everything into chaos.\n I have also tested the proposed changes in combination with various popular addons and can confirm my changes do not break them.\n I followed the existing code standards and didn't mess up the formatting.\n I did my best to add documentation to any public classes or methods I added.\n I have added Nonnull and Nullable annotations to my methods to indicate their behaviour for null values\n I added sufficient Unit Tests to cover my code.", "createdAt": "2020-10-04T18:40:29Z", "url": "https://github.com/Slimefun/Slimefun4/pull/2388", "merged": true, "mergeCommit": {"oid": "a5704aee3f0ecc824f1a34fb9f677fee155c2ff0"}, "closed": true, "closedAt": "2020-11-08T22:35:41Z", "author": {"login": "svr333"}, "timelineItems": {"totalCount": 91, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPBA8TAH2gAyNDk3NDc5MzAxOmE3YzQ4Y2VjNjQyOGQzM2M3Mjc5MTFiNDNmNWFiMTYzMDk5MWIyMTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYmzOtAFqTUyMTc2NzY3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a7c48cec6428d33c727911b43f5ab1630991b213", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/a7c48cec6428d33c727911b43f5ab1630991b213", "committedDate": "2020-10-03T20:57:02Z", "message": "Create Talisman of the Wise"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aefb51cc278707f3c2dcd9547cd2bb02bb05b5d4", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/aefb51cc278707f3c2dcd9547cd2bb02bb05b5d4", "committedDate": "2020-10-03T20:57:20Z", "message": "Add text entries for wise_talisman"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cd9a4e2f8cc3c205c7e2043522bb6ca1ea5d4d5", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/8cd9a4e2f8cc3c205c7e2043522bb6ca1ea5d4d5", "committedDate": "2020-10-03T20:58:29Z", "message": "Add ResearchSetup entry for wise_talisman"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "682c89975470dc8b2fa6131e042ffbb2957a090b", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/682c89975470dc8b2fa6131e042ffbb2957a090b", "committedDate": "2020-10-03T21:10:27Z", "message": "Add Talisman of the Resurrected"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b39865f426ddb7ff1c3ded1737b1b1a502b789f", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/2b39865f426ddb7ff1c3ded1737b1b1a502b789f", "committedDate": "2020-10-03T21:26:25Z", "message": "Add event logic for resurrection_talisman"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74107cf963449fa1111e87f40159c16de4901478", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/74107cf963449fa1111e87f40159c16de4901478", "committedDate": "2020-10-04T18:28:39Z", "message": "Add Talisman of the Resurrected"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef12fc3d015f98ae0bc801b0231f7e85b876842a", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/ef12fc3d015f98ae0bc801b0231f7e85b876842a", "committedDate": "2020-10-04T18:29:14Z", "message": "Add text entries for resurrected_talisman"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5e5484697699f107938233767e8658620b17851", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/f5e5484697699f107938233767e8658620b17851", "committedDate": "2020-10-04T18:33:42Z", "message": "Remove unnecessary import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1d5d474fcc86c57409b702f9b9761bcfa745b89", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/a1d5d474fcc86c57409b702f9b9761bcfa745b89", "committedDate": "2020-10-04T18:35:41Z", "message": "Remove unused scheduler var"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjQ5MjMy", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-501649232", "createdAt": "2020-10-04T18:50:31Z", "commit": {"oid": "a1d5d474fcc86c57409b702f9b9761bcfa745b89"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODo1MDozMVrOHcJbzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODo1MToxM1rOHcJcDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3Njc0OQ==", "bodyText": "Please no star imports.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499276749", "createdAt": "2020-10-04T18:50:31Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -31,13 +32,14 @@\n import org.bukkit.event.entity.EntityDamageEvent;\n import org.bukkit.event.entity.EntityDamageEvent.DamageCause;\n import org.bukkit.event.entity.EntityDeathEvent;\n-import org.bukkit.event.player.PlayerItemBreakEvent;\n-import org.bukkit.event.player.PlayerToggleSprintEvent;\n+import org.bukkit.event.entity.PlayerDeathEvent;\n+import org.bukkit.event.player.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1d5d474fcc86c57409b702f9b9761bcfa745b89"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3NjgxNA==", "bodyText": "Lowercase t", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499276814", "createdAt": "2020-10-04T18:51:13Z", "author": {"login": "LinoxGH"}, "path": "src/main/resources/languages/messages_en.yml", "diffHunk": "@@ -152,6 +152,8 @@ messages:\n     whirlwind: '&a&oYour Talisman reflected the Projectile'\n     wizard: '&a&oYour Talisman has given you a better Fortune Level but maybe also lowered some other Enchantment Levels'\n     caveman: '&a&oYour Talisman gave you haste'\n+    wise: '&a&oYour Talisman doubled your experience drops'\n+    resurrected: '&a&oYour talisman a-voided your death'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1d5d474fcc86c57409b702f9b9761bcfa745b89"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjQ5MzUw", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-501649350", "createdAt": "2020-10-04T18:52:09Z", "commit": {"oid": "a1d5d474fcc86c57409b702f9b9761bcfa745b89"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODo1MjowOVrOHcJcVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODo1NDowMFrOHcJc6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3Njg4Nw==", "bodyText": "fall into the void*", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499276887", "createdAt": "2020-10-04T18:52:09Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "diffHunk": "@@ -547,6 +547,9 @@ private SlimefunItems() {}\n     public static final SlimefunItemStack TALISMAN_WHIRLWIND = new SlimefunItemStack(\"WHIRLWIND_TALISMAN\", Material.EMERALD, \"&aTalisman of the Whirlwind\", \"\", \"&fHaving this Talisman\", \"&fin your Inventory will reflect\", \"&f60% of any projectiles fired at you.\", \"&e&oOnly a thrown Trident can pierce\", \"&e&othrough this layer of protection\");\n     public static final SlimefunItemStack TALISMAN_WIZARD = new SlimefunItemStack(\"WIZARD_TALISMAN\", Material.EMERALD, \"&aTalisman of the Wizard\", \"\", \"&fWhile you have this Talisman\", \"&fin your Inventory it allows you to\", \"&fobtain Fortune Level 4/5 however\", \"&fit also has a chance to lower the\", \"&fLevel of some Enchantments on your Item\");\n     public static final SlimefunItemStack TALISMAN_CAVEMAN = new SlimefunItemStack(\"CAVEMAN_TALISMAN\", Material.EMERALD, \"&aTalisman of the Caveman\", \"\", \"&fWhile you have this Talisman\", \"&fin your inventory it gives\", \"&fyou a 50% chance for a decent\", \"&fHaste buff when you mine any ore\");\n+    public static final SlimefunItemStack TALISMAN_WISE = new SlimefunItemStack(\"WISE_TALISMAN\", Material.EMERALD, \"&aTalisman of the Wise\", \"\", \"&fWhile you have this Talisman\", \"&fin your inventory it gives\", \"&fyou a 20% chance of doubling\", \"&fall experience you obtain\");\n+    public static final SlimefunItemStack TALISMAN_RESURRECTED = new SlimefunItemStack(\"RESURRECTED_TALISMAN\", Material.EMERALD, \"&aTalisman of the Resurrected\", \"\", \"&fWhile you have this Talisman\", \"&fin your inventory it will\", \"&fteleport you back safely when\", \"&fyou fall in the void\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1d5d474fcc86c57409b702f9b9761bcfa745b89"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3Njk2Mw==", "bodyText": "Mssing curvy brackets.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499276963", "createdAt": "2020-10-04T18:53:10Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +294,33 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() <= 0 || !Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE))\n+            return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1d5d474fcc86c57409b702f9b9761bcfa745b89"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3NzAzNQ==", "bodyText": "Missing curvy brackets.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499277035", "createdAt": "2020-10-04T18:54:00Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +294,33 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() <= 0 || !Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE))\n+            return;\n+\n+        e.setAmount(e.getAmount() * 2);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerDeath(PlayerDeathEvent e) {\n+        Player player = e.getEntity().getPlayer();\n+        DamageCause dmgCause = player.getLastDamageCause().getCause();\n+\n+        if (dmgCause != DamageCause.VOID || !Talisman.checkFor(e, SlimefunItems.TALISMAN_RESURRECTED))\n+           return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1d5d474fcc86c57409b702f9b9761bcfa745b89"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5b62bc48cf8ac4582d28c13e2474624ad5f54d4", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b5b62bc48cf8ac4582d28c13e2474624ad5f54d4", "committedDate": "2020-10-04T18:56:13Z", "message": "Fix imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "207d69a09b3ca2262ce1d880a2475507958f4023", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/207d69a09b3ca2262ce1d880a2475507958f4023", "committedDate": "2020-10-04T18:56:34Z", "message": "Uppercase talisman"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49578b7b51dad9b8f64cbd2e9b5e82265b7b28a4", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/49578b7b51dad9b8f64cbd2e9b5e82265b7b28a4", "committedDate": "2020-10-04T18:59:52Z", "message": "Fix grammar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5d7960a569fcb5b612dd714b2f9f0a7661078f3", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/d5d7960a569fcb5b612dd714b2f9f0a7661078f3", "committedDate": "2020-10-04T19:00:53Z", "message": "Add missing brackets"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjYyMjEy", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-501662212", "createdAt": "2020-10-04T21:46:57Z", "commit": {"oid": "d5d7960a569fcb5b612dd714b2f9f0a7661078f3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMTo0Njo1OFrOHcKYSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMTo1MTo1OFrOHcKaAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MjIzMg==", "bodyText": "getPlayer() is redundant here getEntity() already returns a Player and getPlayer() literally just does return this; for players.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499292232", "createdAt": "2020-10-04T21:46:58Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/Talisman.java", "diffHunk": "@@ -219,7 +220,10 @@ private static void consumeItem(Inventory inv, Talisman talisman) {\n     }\n \n     private static Player getPlayerByEventType(Event e) {\n-        if (e instanceof EntityDeathEvent) {\n+        if (e instanceof PlayerDeathEvent) {\n+            return ((PlayerDeathEvent) e).getEntity().getPlayer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5d7960a569fcb5b612dd714b2f9f0a7661078f3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MjM1OQ==", "bodyText": "I think the return; here really serves no point other than double-negation.\nI reckon it would be more understandable if you just did\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (e.getAmount() <= 0 || !Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n          \n          \n            \n                        return;\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    e.setAmount(e.getAmount() * 2);\n          \n          \n            \n                    if (e.getAmount() > 0 && Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n          \n          \n            \n                        e.setAmount(e.getAmount() * 2);\n          \n          \n            \n                    }", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499292359", "createdAt": "2020-10-04T21:48:30Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +296,35 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() <= 0 || !Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n+            return;\n+        }\n+\n+        e.setAmount(e.getAmount() * 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5d7960a569fcb5b612dd714b2f9f0a7661078f3"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MjM4OQ==", "bodyText": "Again getPlayer() is redundant here.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499292389", "createdAt": "2020-10-04T21:48:46Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +296,35 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() <= 0 || !Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n+            return;\n+        }\n+\n+        e.setAmount(e.getAmount() * 2);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerDeath(PlayerDeathEvent e) {\n+        Player player = e.getEntity().getPlayer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5d7960a569fcb5b612dd714b2f9f0a7661078f3"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MjQ0Mg==", "bodyText": "Please add brackets here or preferabbly even a method getSafeLocation() with docs and annotations.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499292442", "createdAt": "2020-10-04T21:49:31Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +296,35 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() <= 0 || !Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n+            return;\n+        }\n+\n+        e.setAmount(e.getAmount() * 2);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerDeath(PlayerDeathEvent e) {\n+        Player player = e.getEntity().getPlayer();\n+        DamageCause dmgCause = player.getLastDamageCause().getCause();\n+\n+        if (dmgCause != DamageCause.VOID || !Talisman.checkFor(e, SlimefunItems.TALISMAN_RESURRECTED)) {\n+            return;\n+        }\n+\n+        Location loc = e.getEntity().getPlayer().getBedSpawnLocation();\n+        if (loc == null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5d7960a569fcb5b612dd714b2f9f0a7661078f3"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MjQ2OQ==", "bodyText": "Just like above, this is rather confusing, just use a normal if-statement.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499292469", "createdAt": "2020-10-04T21:49:54Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +296,35 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() <= 0 || !Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n+            return;\n+        }\n+\n+        e.setAmount(e.getAmount() * 2);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerDeath(PlayerDeathEvent e) {\n+        Player player = e.getEntity().getPlayer();\n+        DamageCause dmgCause = player.getLastDamageCause().getCause();\n+\n+        if (dmgCause != DamageCause.VOID || !Talisman.checkFor(e, SlimefunItems.TALISMAN_RESURRECTED)) {\n+            return;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5d7960a569fcb5b612dd714b2f9f0a7661078f3"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MjUxMg==", "bodyText": "If you make a method like said above, this line would become redundant too ;)", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499292512", "createdAt": "2020-10-04T21:50:13Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +296,35 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() <= 0 || !Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n+            return;\n+        }\n+\n+        e.setAmount(e.getAmount() * 2);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerDeath(PlayerDeathEvent e) {\n+        Player player = e.getEntity().getPlayer();\n+        DamageCause dmgCause = player.getLastDamageCause().getCause();\n+\n+        if (dmgCause != DamageCause.VOID || !Talisman.checkFor(e, SlimefunItems.TALISMAN_RESURRECTED)) {\n+            return;\n+        }\n+\n+        Location loc = e.getEntity().getPlayer().getBedSpawnLocation();\n+        if (loc == null)\n+            loc = player.getLocation().getWorld().getSpawnLocation();\n+\n+        final Location respawnLocation = loc;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5d7960a569fcb5b612dd714b2f9f0a7661078f3"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MjU1MA==", "bodyText": "Use SlimefunPlugin.runSync\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Bukkit.getScheduler().runTaskLater(SlimefunPlugin.instance(), () -> {\n          \n          \n            \n                        player.teleport(respawnLocation);\n          \n          \n            \n                    }, 2);\n          \n          \n            \n                    SlimefunPlugin.runSync(() -> {\n          \n          \n            \n                        player.teleport(respawnLocation);\n          \n          \n            \n                    }, 2);", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499292550", "createdAt": "2020-10-04T21:50:38Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +296,35 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() <= 0 || !Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n+            return;\n+        }\n+\n+        e.setAmount(e.getAmount() * 2);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerDeath(PlayerDeathEvent e) {\n+        Player player = e.getEntity().getPlayer();\n+        DamageCause dmgCause = player.getLastDamageCause().getCause();\n+\n+        if (dmgCause != DamageCause.VOID || !Talisman.checkFor(e, SlimefunItems.TALISMAN_RESURRECTED)) {\n+            return;\n+        }\n+\n+        Location loc = e.getEntity().getPlayer().getBedSpawnLocation();\n+        if (loc == null)\n+            loc = player.getLocation().getWorld().getSpawnLocation();\n+\n+        final Location respawnLocation = loc;\n+\n+        Bukkit.getScheduler().runTaskLater(SlimefunPlugin.instance(), () -> {\n+            player.teleport(respawnLocation);\n+        }, 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5d7960a569fcb5b612dd714b2f9f0a7661078f3"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MjYyMg==", "bodyText": "Don't use the tome of knowledge sharing here, many servers disable this item.\nyou could use the new magic glass here?", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499292622", "createdAt": "2020-10-04T21:51:35Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -877,6 +877,16 @@ public static void setup(@Nonnull SlimefunPlugin plugin) {\n         false, false, \"caveman\", 50, new PotionEffect(PotionEffectType.FAST_DIGGING, 800, 2))\n         .register(plugin);\n \n+        new Talisman(SlimefunItems.TALISMAN_WISE,\n+        new ItemStack[] { SlimefunItems.MAGIC_LUMP_3, null, SlimefunItems.MAGIC_LUMP_3, SlimefunItems.TOME_OF_KNOWLEDGE_SHARING, SlimefunItems.TALISMAN_MAGICIAN, SlimefunItems.FILLED_FLASK_OF_KNOWLEDGE, SlimefunItems.MAGIC_LUMP_3, null, SlimefunItems.MAGIC_LUMP_3},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5d7960a569fcb5b612dd714b2f9f0a7661078f3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MjY3Mw==", "bodyText": "puns  \ud83d\udc4d But this is consumable right? So you may wanna add to it that the talisman was consumed", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499292673", "createdAt": "2020-10-04T21:51:58Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/resources/languages/messages_en.yml", "diffHunk": "@@ -152,6 +152,8 @@ messages:\n     whirlwind: '&a&oYour Talisman reflected the Projectile'\n     wizard: '&a&oYour Talisman has given you a better Fortune Level but maybe also lowered some other Enchantment Levels'\n     caveman: '&a&oYour Talisman gave you haste'\n+    wise: '&a&oYour Talisman doubled your experience drops'\n+    resurrected: '&a&oYour Talisman a-voided your death'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5d7960a569fcb5b612dd714b2f9f0a7661078f3"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e08b4b1f17536414b5343370da0b70e2e1c4d735", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/e08b4b1f17536414b5343370da0b70e2e1c4d735", "committedDate": "2020-10-05T10:05:53Z", "message": "Refactor onExperienceReceive"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e1dba507df4b86039cb2abcea40fd81094b276f", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/0e1dba507df4b86039cb2abcea40fd81094b276f", "committedDate": "2020-10-05T10:07:16Z", "message": "Remove redundant .getPlayer()'s"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "133705e287b96dbd1c7c265e4f8f0ba32e2965b4", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/133705e287b96dbd1c7c265e4f8f0ba32e2965b4", "committedDate": "2020-10-05T10:11:00Z", "message": "Use SlimefunPlugin.runSync over scheduler\n\nCo-authored-by: TheBusyBiscuit <TheBusyBiscuit@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxOTA5NDA0", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-501909404", "createdAt": "2020-10-05T10:12:24Z", "commit": {"oid": "133705e287b96dbd1c7c265e4f8f0ba32e2965b4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDoxMjoyNVrOHcWZyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDoxMjoyNVrOHcWZyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ4OTIyNQ==", "bodyText": "Also you should use PaperLib's teleportAsync here :)", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499489225", "createdAt": "2020-10-05T10:12:25Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +296,33 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() > 0 && Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n+            e.setAmount(e.getAmount() * 2);\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onPlayerDeath(PlayerDeathEvent e) {\n+        Player player = e.getEntity();\n+        DamageCause dmgCause = player.getLastDamageCause().getCause();\n+\n+        if (dmgCause != DamageCause.VOID || !Talisman.checkFor(e, SlimefunItems.TALISMAN_RESURRECTED)) {\n+            return;\n+        }\n+\n+        Location loc = e.getEntity().getPlayer().getBedSpawnLocation();\n+        if (loc == null)\n+            loc = player.getLocation().getWorld().getSpawnLocation();\n+\n+        final Location respawnLocation = loc;\n+\n+        SlimefunPlugin.runSync(() -> {\n+            player.teleport(respawnLocation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "133705e287b96dbd1c7c265e4f8f0ba32e2965b4"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64e39abc625f5be6d39b36f07a01d281da9119ba", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/64e39abc625f5be6d39b36f07a01d281da9119ba", "committedDate": "2020-10-05T10:13:46Z", "message": "Update resurrected talisman message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "961f44273351b5a662fbf1fc964ffb06f8dc8e5f", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/961f44273351b5a662fbf1fc964ffb06f8dc8e5f", "committedDate": "2020-10-05T10:18:42Z", "message": "Update recipe for wise_talisman"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e240fa1b6442cfe331a55070c6a12135d528f657", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/e240fa1b6442cfe331a55070c6a12135d528f657", "committedDate": "2020-10-05T10:31:55Z", "message": "Refactor onPlayerDeath"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d64fe94b504523b866df35436d6001154b9706fc", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/d64fe94b504523b866df35436d6001154b9706fc", "committedDate": "2020-10-05T13:58:32Z", "message": "Merge branch 'master' of https://github.com/Slimefun/Slimefun4 into MoreTalismans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51de09540403ed411c783567e9e8e6abcd250f1e", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/51de09540403ed411c783567e9e8e6abcd250f1e", "committedDate": "2020-10-05T17:55:27Z", "message": "Add ResurrectedTalisman class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMzAyMDEy", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-502302012", "createdAt": "2020-10-05T18:12:22Z", "commit": {"oid": "d64fe94b504523b866df35436d6001154b9706fc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODoxMjoyM1rOHcoSDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODoxMjoyM1rOHcoSDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4MjE1Ng==", "bodyText": "Redundant new line here.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r499782156", "createdAt": "2020-10-05T18:12:23Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "diffHunk": "@@ -547,6 +547,9 @@ private SlimefunItems() {}\n     public static final SlimefunItemStack TALISMAN_WHIRLWIND = new SlimefunItemStack(\"WHIRLWIND_TALISMAN\", Material.EMERALD, \"&aTalisman of the Whirlwind\", \"\", \"&fHaving this Talisman\", \"&fin your Inventory will reflect\", \"&f60% of any projectiles fired at you.\", \"&e&oOnly a thrown Trident can pierce\", \"&e&othrough this layer of protection\");\n     public static final SlimefunItemStack TALISMAN_WIZARD = new SlimefunItemStack(\"WIZARD_TALISMAN\", Material.EMERALD, \"&aTalisman of the Wizard\", \"\", \"&fWhile you have this Talisman\", \"&fin your Inventory it allows you to\", \"&fobtain Fortune Level 4/5 however\", \"&fit also has a chance to lower the\", \"&fLevel of some Enchantments on your Item\");\n     public static final SlimefunItemStack TALISMAN_CAVEMAN = new SlimefunItemStack(\"CAVEMAN_TALISMAN\", Material.EMERALD, \"&aTalisman of the Caveman\", \"\", \"&fWhile you have this Talisman\", \"&fin your inventory it gives\", \"&fyou a 50% chance for a decent\", \"&fHaste buff when you mine any ore\");\n+    public static final SlimefunItemStack TALISMAN_WISE = new SlimefunItemStack(\"WISE_TALISMAN\", Material.EMERALD, \"&aTalisman of the Wise\", \"\", \"&fWhile you have this Talisman\", \"&fin your inventory it gives\", \"&fyou a 20% chance of doubling\", \"&fall experience you obtain\");\n+    public static final SlimefunItemStack TALISMAN_RESURRECTED = new SlimefunItemStack(\"RESURRECTED_TALISMAN\", Material.EMERALD, \"&aTalisman of the Resurrected\", \"\", \"&fWhile you have this Talisman\", \"&fin your inventory it will\", \"&fteleport you back safely when\", \"&fyou fall into the void\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d64fe94b504523b866df35436d6001154b9706fc"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7eb680fa58c77f715f10aeb66253fc18a3671424", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/7eb680fa58c77f715f10aeb66253fc18a3671424", "committedDate": "2020-10-05T18:15:11Z", "message": "Remove redundant new line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5caaaa13e517639af36330725e9911bd083c2a6", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/d5caaaa13e517639af36330725e9911bd083c2a6", "committedDate": "2020-10-05T20:46:53Z", "message": "Add base for ResurrectedTalisman"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9ce3c1f3e6049988326087d93dc1b1c92f4e67c", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/a9ce3c1f3e6049988326087d93dc1b1c92f4e67c", "committedDate": "2020-10-06T13:34:18Z", "message": "Try to implement requested feature for RessurectedTalisman"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMjIyNDY4", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-503222468", "createdAt": "2020-10-06T17:58:11Z", "commit": {"oid": "a9ce3c1f3e6049988326087d93dc1b1c92f4e67c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzo1ODoxMVrOHdTisw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODowMzozOFrOHdTvaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5MDkzMQ==", "bodyText": "Missing asterics *", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r500490931", "createdAt": "2020-10-06T17:58:11Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.entity.Item;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.UUID;\n+\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ce3c1f3e6049988326087d93dc1b1c92f4e67c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5MTA2MA==", "bodyText": "No need for this many empty lines here", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r500491060", "createdAt": "2020-10-06T17:58:23Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.entity.Item;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.UUID;\n+\n+/*\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ *\n+ * @author svr333\n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ce3c1f3e6049988326087d93dc1b1c92f4e67c"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5MTE1Mg==", "bodyText": "Empty line before this please.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r500491152", "createdAt": "2020-10-06T17:58:31Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.entity.Item;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.UUID;\n+\n+/*\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ *\n+ * @author svr333\n+ *\n+ *\n+ */\n+public class ResurrectedTalisman extends Talisman {\n+    private final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ce3c1f3e6049988326087d93dc1b1c92f4e67c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5MTM4MQ==", "bodyText": "This field is not necessary since the location is per-ItemStack not per-SlimefunItem.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r500491381", "createdAt": "2020-10-06T17:58:55Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.entity.Item;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.UUID;\n+\n+/*\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ *\n+ * @author svr333\n+ *\n+ *\n+ */\n+public class ResurrectedTalisman extends Talisman {\n+    private final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");\n+    private Location respawnLocation;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ce3c1f3e6049988326087d93dc1b1c92f4e67c"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5MTgxMQ==", "bodyText": "Use e.getItem(), this is a fatal bug because item here refers to the ItemStack displayed in the guide.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r500491811", "createdAt": "2020-10-06T17:59:36Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.entity.Item;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.UUID;\n+\n+/*\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ *\n+ * @author svr333\n+ *\n+ *\n+ */\n+public class ResurrectedTalisman extends Talisman {\n+    private final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");\n+    private Location respawnLocation;\n+\n+    public ResurrectedTalisman(SlimefunItemStack item, ItemStack[] recipe) {\n+        super(item, recipe, true, true, \"resurrected\", new PotionEffect(PotionEffectType.GLOWING, 400, 0), new PotionEffect(PotionEffectType.ABSORPTION, 400, 4), new PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, 200, 20));\n+\n+        addItemHandler(getItemHandler());\n+    }\n+\n+    public ItemUseHandler getItemHandler() {\n+        return e -> {\n+            Location currentLoc = e.getPlayer().getLocation();\n+            JsonObject json = createJsonFromLocation(currentLoc);\n+\n+            PersistentDataContainer pdc = item.getItemMeta().getPersistentDataContainer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ce3c1f3e6049988326087d93dc1b1c92f4e67c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5MjMwMA==", "bodyText": "world is nullable here, so you should do a check for this.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r500492300", "createdAt": "2020-10-06T18:00:21Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.entity.Item;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.UUID;\n+\n+/*\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ *\n+ * @author svr333\n+ *\n+ *\n+ */\n+public class ResurrectedTalisman extends Talisman {\n+    private final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");\n+    private Location respawnLocation;\n+\n+    public ResurrectedTalisman(SlimefunItemStack item, ItemStack[] recipe) {\n+        super(item, recipe, true, true, \"resurrected\", new PotionEffect(PotionEffectType.GLOWING, 400, 0), new PotionEffect(PotionEffectType.ABSORPTION, 400, 4), new PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, 200, 20));\n+\n+        addItemHandler(getItemHandler());\n+    }\n+\n+    public ItemUseHandler getItemHandler() {\n+        return e -> {\n+            Location currentLoc = e.getPlayer().getLocation();\n+            JsonObject json = createJsonFromLocation(currentLoc);\n+\n+            PersistentDataContainer pdc = item.getItemMeta().getPersistentDataContainer();\n+            pdc.set(locationKey, PersistentDataType.STRING, json.toString());\n+\n+            //SlimefunPlugin.getLocalization().sendMessage(e.getPlayer(), \"\", true);\n+            e.getPlayer().sendMessage(\"Successfully saved current location. You will teleport here when you fall in the void.\");\n+        };\n+    }\n+\n+    @Nullable\n+    public Location getSavedLocation(boolean isEnderTalisman) {\n+        PersistentDataContainer pdc = item.getItemMeta().getPersistentDataContainer();\n+        String data = pdc.get(locationKey, PersistentDataType.STRING);\n+\n+        if (data != null) {\n+            return parseLocationFromJson(data);\n+        }\n+        else {\n+            return null;\n+        }\n+    }\n+\n+    private JsonObject createJsonFromLocation(@Nonnull Location loc) {\n+        JsonObject json = new JsonObject();\n+\n+        json.addProperty(\"world\", loc.getWorld().getUID().toString());\n+        json.addProperty(\"x\", loc.getX());\n+        json.addProperty(\"y\", loc.getY());\n+        json.addProperty(\"z\", loc.getZ());\n+\n+        return json;\n+    }\n+\n+    private Location parseLocationFromJson(@Nonnull String rawData) {\n+        JsonObject json = new JsonParser().parse(rawData).getAsJsonObject();\n+\n+        UUID uuid = UUID.fromString(json.get(\"world\").getAsString());\n+\n+        World world = Bukkit.getWorld(uuid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ce3c1f3e6049988326087d93dc1b1c92f4e67c"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5MjQwNQ==", "bodyText": "Nonnull for this method please.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r500492405", "createdAt": "2020-10-06T18:00:32Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.entity.Item;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.UUID;\n+\n+/*\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ *\n+ * @author svr333\n+ *\n+ *\n+ */\n+public class ResurrectedTalisman extends Talisman {\n+    private final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");\n+    private Location respawnLocation;\n+\n+    public ResurrectedTalisman(SlimefunItemStack item, ItemStack[] recipe) {\n+        super(item, recipe, true, true, \"resurrected\", new PotionEffect(PotionEffectType.GLOWING, 400, 0), new PotionEffect(PotionEffectType.ABSORPTION, 400, 4), new PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, 200, 20));\n+\n+        addItemHandler(getItemHandler());\n+    }\n+\n+    public ItemUseHandler getItemHandler() {\n+        return e -> {\n+            Location currentLoc = e.getPlayer().getLocation();\n+            JsonObject json = createJsonFromLocation(currentLoc);\n+\n+            PersistentDataContainer pdc = item.getItemMeta().getPersistentDataContainer();\n+            pdc.set(locationKey, PersistentDataType.STRING, json.toString());\n+\n+            //SlimefunPlugin.getLocalization().sendMessage(e.getPlayer(), \"\", true);\n+            e.getPlayer().sendMessage(\"Successfully saved current location. You will teleport here when you fall in the void.\");\n+        };\n+    }\n+\n+    @Nullable\n+    public Location getSavedLocation(boolean isEnderTalisman) {\n+        PersistentDataContainer pdc = item.getItemMeta().getPersistentDataContainer();\n+        String data = pdc.get(locationKey, PersistentDataType.STRING);\n+\n+        if (data != null) {\n+            return parseLocationFromJson(data);\n+        }\n+        else {\n+            return null;\n+        }\n+    }\n+\n+    private JsonObject createJsonFromLocation(@Nonnull Location loc) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ce3c1f3e6049988326087d93dc1b1c92f4e67c"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5MjY0NQ==", "bodyText": "Again item here refers to the item in the Slimefun Guide.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r500492645", "createdAt": "2020-10-06T18:00:56Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.entity.Item;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.UUID;\n+\n+/*\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ *\n+ * @author svr333\n+ *\n+ *\n+ */\n+public class ResurrectedTalisman extends Talisman {\n+    private final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");\n+    private Location respawnLocation;\n+\n+    public ResurrectedTalisman(SlimefunItemStack item, ItemStack[] recipe) {\n+        super(item, recipe, true, true, \"resurrected\", new PotionEffect(PotionEffectType.GLOWING, 400, 0), new PotionEffect(PotionEffectType.ABSORPTION, 400, 4), new PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, 200, 20));\n+\n+        addItemHandler(getItemHandler());\n+    }\n+\n+    public ItemUseHandler getItemHandler() {\n+        return e -> {\n+            Location currentLoc = e.getPlayer().getLocation();\n+            JsonObject json = createJsonFromLocation(currentLoc);\n+\n+            PersistentDataContainer pdc = item.getItemMeta().getPersistentDataContainer();\n+            pdc.set(locationKey, PersistentDataType.STRING, json.toString());\n+\n+            //SlimefunPlugin.getLocalization().sendMessage(e.getPlayer(), \"\", true);\n+            e.getPlayer().sendMessage(\"Successfully saved current location. You will teleport here when you fall in the void.\");\n+        };\n+    }\n+\n+    @Nullable\n+    public Location getSavedLocation(boolean isEnderTalisman) {\n+        PersistentDataContainer pdc = item.getItemMeta().getPersistentDataContainer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ce3c1f3e6049988326087d93dc1b1c92f4e67c"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5MjcyNg==", "bodyText": "localization \ud83d\udc40", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r500492726", "createdAt": "2020-10-06T18:01:06Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.entity.Item;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.UUID;\n+\n+/*\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ *\n+ * @author svr333\n+ *\n+ *\n+ */\n+public class ResurrectedTalisman extends Talisman {\n+    private final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");\n+    private Location respawnLocation;\n+\n+    public ResurrectedTalisman(SlimefunItemStack item, ItemStack[] recipe) {\n+        super(item, recipe, true, true, \"resurrected\", new PotionEffect(PotionEffectType.GLOWING, 400, 0), new PotionEffect(PotionEffectType.ABSORPTION, 400, 4), new PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, 200, 20));\n+\n+        addItemHandler(getItemHandler());\n+    }\n+\n+    public ItemUseHandler getItemHandler() {\n+        return e -> {\n+            Location currentLoc = e.getPlayer().getLocation();\n+            JsonObject json = createJsonFromLocation(currentLoc);\n+\n+            PersistentDataContainer pdc = item.getItemMeta().getPersistentDataContainer();\n+            pdc.set(locationKey, PersistentDataType.STRING, json.toString());\n+\n+            //SlimefunPlugin.getLocalization().sendMessage(e.getPlayer(), \"\", true);\n+            e.getPlayer().sendMessage(\"Successfully saved current location. You will teleport here when you fall in the void.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ce3c1f3e6049988326087d93dc1b1c92f4e67c"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5MzA1MQ==", "bodyText": "Why the delay here?", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r500493051", "createdAt": "2020-10-06T18:01:47Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +300,45 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() > 0 && Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n+            e.setAmount(e.getAmount() * 2);\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onPlayerDeath(PlayerDeathEvent e) {\n+        Player player = e.getEntity();\n+        Location respawnLocation = getSafeRespawnLocation(player);\n+        DamageCause dmgCause = player.getLastDamageCause().getCause();\n+\n+        if (dmgCause == DamageCause.VOID && Talisman.checkFor(e, SlimefunItems.TALISMAN_RESURRECTED)) {\n+            SlimefunPlugin.runSync(() -> {\n+                PaperLib.teleportAsync(player, respawnLocation);\n+            }, 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ce3c1f3e6049988326087d93dc1b1c92f4e67c"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5MzQwMQ==", "bodyText": "Nullability annotation please", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r500493401", "createdAt": "2020-10-06T18:02:23Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +300,45 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() > 0 && Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n+            e.setAmount(e.getAmount() * 2);\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onPlayerDeath(PlayerDeathEvent e) {\n+        Player player = e.getEntity();\n+        Location respawnLocation = getSafeRespawnLocation(player);\n+        DamageCause dmgCause = player.getLastDamageCause().getCause();\n+\n+        if (dmgCause == DamageCause.VOID && Talisman.checkFor(e, SlimefunItems.TALISMAN_RESURRECTED)) {\n+            SlimefunPlugin.runSync(() -> {\n+                PaperLib.teleportAsync(player, respawnLocation);\n+            }, 2);\n+        }\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ce3c1f3e6049988326087d93dc1b1c92f4e67c"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5NDE4NA==", "bodyText": "To obtain the itemstack you would need to create a method very similar to Talisman.checkFor.\nPerhaps you could even copy it exactly and return the ItemStack rather than a boolean.\nThen you could override the original Talisman.checkFor to just call your method and do a null check :)", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r500494184", "createdAt": "2020-10-06T18:03:38Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +300,45 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() > 0 && Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n+            e.setAmount(e.getAmount() * 2);\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onPlayerDeath(PlayerDeathEvent e) {\n+        Player player = e.getEntity();\n+        Location respawnLocation = getSafeRespawnLocation(player);\n+        DamageCause dmgCause = player.getLastDamageCause().getCause();\n+\n+        if (dmgCause == DamageCause.VOID && Talisman.checkFor(e, SlimefunItems.TALISMAN_RESURRECTED)) {\n+            SlimefunPlugin.runSync(() -> {\n+                PaperLib.teleportAsync(player, respawnLocation);\n+            }, 2);\n+        }\n+    }\n+\n+    private Location getSafeRespawnLocation(@Nonnull Player player) {\n+        Location savedLoc = null;\n+        /* Obtain Talisman here */\n+\n+        if (SlimefunUtils.containsSimilarItem(player.getInventory(), talisman.getItem(), true)) {\n+            savedLoc = talisman.getSavedLocation(false);\n+        }\n+        else if (SlimefunUtils.containsSimilarItem(player.getEnderChest(), talisman.getEnderVariant(), true)) {\n+            savedLoc = talisman.getSavedLocation(true);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ce3c1f3e6049988326087d93dc1b1c92f4e67c"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2eddaef88c2f5067c8809cca49e38a38adf6fc2b", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/2eddaef88c2f5067c8809cca49e38a38adf6fc2b", "committedDate": "2020-10-06T22:00:22Z", "message": "Fix comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db7e39ff10f01dda043b7fbcda45ac32439afc38", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/db7e39ff10f01dda043b7fbcda45ac32439afc38", "committedDate": "2020-10-06T22:06:32Z", "message": "Fix requested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ff3b31bf6296ca7dcf99b835ee1c4f834828ee7", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/8ff3b31bf6296ca7dcf99b835ee1c4f834828ee7", "committedDate": "2020-10-07T10:03:45Z", "message": "Create tryFind method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9b8f608ffe67353dd1e5de229852706269282eb", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/a9b8f608ffe67353dd1e5de229852706269282eb", "committedDate": "2020-10-07T13:54:32Z", "message": "Attempt to make it work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3747ba4afafda121172974d5e1307ca202c5a502", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/3747ba4afafda121172974d5e1307ca202c5a502", "committedDate": "2020-10-07T13:59:33Z", "message": "Remove second consumeItem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5998773e3ac8b35236aaba41ae1c032b5263a69", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/a5998773e3ac8b35236aaba41ae1c032b5263a69", "committedDate": "2020-10-07T14:04:02Z", "message": "Fix build error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "085ad2cd6b1d66e179badb7f193c6fb4de08b509", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/085ad2cd6b1d66e179badb7f193c6fb4de08b509", "committedDate": "2020-10-07T14:06:32Z", "message": "Merge branch 'master' into MoreTalismans"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzOTQxOTQ5", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-503941949", "createdAt": "2020-10-07T14:28:54Z", "commit": {"oid": "085ad2cd6b1d66e179badb7f193c6fb4de08b509"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDoyODo1NVrOHd2OEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDoyODo1NVrOHd2OEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA1OTA4OA==", "bodyText": ".", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501059088", "createdAt": "2020-10-07T14:28:55Z", "author": {"login": "LinoxGH"}, "path": ".vscode/settings.json", "diffHunk": "@@ -0,0 +1,3 @@\n+{\n+    \"java.configuration.updateBuildConfiguration\": \"automatic\"\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085ad2cd6b1d66e179badb7f193c6fb4de08b509"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzOTM4Nzky", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-503938792", "createdAt": "2020-10-07T14:26:04Z", "commit": {"oid": "085ad2cd6b1d66e179badb7f193c6fb4de08b509"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDoyNjowNFrOHd2E9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDoyOTo0NlrOHd2Q2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA1Njc1OA==", "bodyText": "Yeah, add the .vscode folder to the .gitignore please.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501056758", "createdAt": "2020-10-07T14:26:04Z", "author": {"login": "TheBusyBiscuit"}, "path": ".vscode/settings.json", "diffHunk": "@@ -0,0 +1,3 @@\n+{\n+    \"java.configuration.updateBuildConfiguration\": \"automatic\"\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085ad2cd6b1d66e179badb7f193c6fb4de08b509"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA1NzI3OA==", "bodyText": "Please add an empty line before this.\nAnd there is no point in making it static here.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501057278", "createdAt": "2020-10-07T14:26:41Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.entity.Item;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.UUID;\n+\n+/**\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ * @author svr333\n+ *\n+ */\n+\n+public class ResurrectedTalisman extends Talisman {\n+    private static final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085ad2cd6b1d66e179badb7f193c6fb4de08b509"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA1NzU5OA==", "bodyText": "There is no need for this to be static (it probably shouldn't be anyway)", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501057598", "createdAt": "2020-10-07T14:27:03Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.entity.Item;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.UUID;\n+\n+/**\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ * @author svr333\n+ *\n+ */\n+\n+public class ResurrectedTalisman extends Talisman {\n+    private static final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");\n+\n+    public ResurrectedTalisman(SlimefunItemStack item, ItemStack[] recipe) {\n+        super(item, recipe, true, true, \"resurrected\", new PotionEffect(PotionEffectType.GLOWING, 400, 0), new PotionEffect(PotionEffectType.ABSORPTION, 400, 4), new PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, 200, 20));\n+\n+        addItemHandler(getItemHandler());\n+    }\n+\n+    public ItemUseHandler getItemHandler() {\n+        return e -> {\n+            Location currentLoc = e.getPlayer().getLocation();\n+            JsonObject json = createJsonFromLocation(currentLoc);\n+\n+            PersistentDataContainer pdc = e.getItem().getItemMeta().getPersistentDataContainer();\n+            pdc.set(locationKey, PersistentDataType.STRING, json.toString());\n+\n+            SlimefunPlugin.getLocalization().sendMessage(e.getPlayer(), \"messages.talisman.resurrected-location\", true);\n+        };\n+    }\n+\n+    @Nullable\n+    public static Location getSavedLocation(ItemStack item) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085ad2cd6b1d66e179badb7f193c6fb4de08b509"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA1NzgxNQ==", "bodyText": "Also please add an annotation for the \"item\" parameter.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501057815", "createdAt": "2020-10-07T14:27:20Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.entity.Item;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.UUID;\n+\n+/**\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ * @author svr333\n+ *\n+ */\n+\n+public class ResurrectedTalisman extends Talisman {\n+    private static final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");\n+\n+    public ResurrectedTalisman(SlimefunItemStack item, ItemStack[] recipe) {\n+        super(item, recipe, true, true, \"resurrected\", new PotionEffect(PotionEffectType.GLOWING, 400, 0), new PotionEffect(PotionEffectType.ABSORPTION, 400, 4), new PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, 200, 20));\n+\n+        addItemHandler(getItemHandler());\n+    }\n+\n+    public ItemUseHandler getItemHandler() {\n+        return e -> {\n+            Location currentLoc = e.getPlayer().getLocation();\n+            JsonObject json = createJsonFromLocation(currentLoc);\n+\n+            PersistentDataContainer pdc = e.getItem().getItemMeta().getPersistentDataContainer();\n+            pdc.set(locationKey, PersistentDataType.STRING, json.toString());\n+\n+            SlimefunPlugin.getLocalization().sendMessage(e.getPlayer(), \"messages.talisman.resurrected-location\", true);\n+        };\n+    }\n+\n+    @Nullable\n+    public static Location getSavedLocation(ItemStack item) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085ad2cd6b1d66e179badb7f193c6fb4de08b509"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA1OTE1MA==", "bodyText": ".getItemMeta() creates a copy of the original item meta, you will need to save the ItemMeta as a variable, modify it and then set the Itemmeta back to the ItemStack using setItemMeta, otherwise your changes won't be applied to the item.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501059150", "createdAt": "2020-10-07T14:28:59Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.entity.Item;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.UUID;\n+\n+/**\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ * @author svr333\n+ *\n+ */\n+\n+public class ResurrectedTalisman extends Talisman {\n+    private static final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");\n+\n+    public ResurrectedTalisman(SlimefunItemStack item, ItemStack[] recipe) {\n+        super(item, recipe, true, true, \"resurrected\", new PotionEffect(PotionEffectType.GLOWING, 400, 0), new PotionEffect(PotionEffectType.ABSORPTION, 400, 4), new PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, 200, 20));\n+\n+        addItemHandler(getItemHandler());\n+    }\n+\n+    public ItemUseHandler getItemHandler() {\n+        return e -> {\n+            Location currentLoc = e.getPlayer().getLocation();\n+            JsonObject json = createJsonFromLocation(currentLoc);\n+\n+            PersistentDataContainer pdc = e.getItem().getItemMeta().getPersistentDataContainer();\n+            pdc.set(locationKey, PersistentDataType.STRING, json.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085ad2cd6b1d66e179badb7f193c6fb4de08b509"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA1OTgwMQ==", "bodyText": "Also there's PersistentJsonDataType.JSON_OBJECT in Slimefun too, no need to manually do the string serialization.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501059801", "createdAt": "2020-10-07T14:29:46Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.entity.Item;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.UUID;\n+\n+/**\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ * @author svr333\n+ *\n+ */\n+\n+public class ResurrectedTalisman extends Talisman {\n+    private static final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");\n+\n+    public ResurrectedTalisman(SlimefunItemStack item, ItemStack[] recipe) {\n+        super(item, recipe, true, true, \"resurrected\", new PotionEffect(PotionEffectType.GLOWING, 400, 0), new PotionEffect(PotionEffectType.ABSORPTION, 400, 4), new PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, 200, 20));\n+\n+        addItemHandler(getItemHandler());\n+    }\n+\n+    public ItemUseHandler getItemHandler() {\n+        return e -> {\n+            Location currentLoc = e.getPlayer().getLocation();\n+            JsonObject json = createJsonFromLocation(currentLoc);\n+\n+            PersistentDataContainer pdc = e.getItem().getItemMeta().getPersistentDataContainer();\n+            pdc.set(locationKey, PersistentDataType.STRING, json.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085ad2cd6b1d66e179badb7f193c6fb4de08b509"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79d652bb705a587a8e111ec1a5e4ded079482ae9", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/79d652bb705a587a8e111ec1a5e4ded079482ae9", "committedDate": "2020-10-07T14:42:53Z", "message": "Add .factorypath and .vscode folder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9be590459a8a8defb1d05b18d293042349805dd5", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/9be590459a8a8defb1d05b18d293042349805dd5", "committedDate": "2020-10-07T14:43:20Z", "message": "Merge branch 'MoreTalismans' of https://github.com/svr333/Slimefun4 into MoreTalismans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e39920e59fd682c6e9caccab5cea7ae88e11659", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/5e39920e59fd682c6e9caccab5cea7ae88e11659", "committedDate": "2020-10-07T14:45:34Z", "message": "Remove static's"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "273d95ed9c82b6d5b8f8954e61048dbe6a519c68", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/273d95ed9c82b6d5b8f8954e61048dbe6a519c68", "committedDate": "2020-10-07T14:51:52Z", "message": "Delete settings.json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6a29509c7e6ebd7b7d853e47e03006bff46c0c6", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/a6a29509c7e6ebd7b7d853e47e03006bff46c0c6", "committedDate": "2020-10-07T15:02:42Z", "message": "Fix remaining issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d17d21b7ed4d23e7449699cdcb9a78ae27d3c9d7", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/d17d21b7ed4d23e7449699cdcb9a78ae27d3c9d7", "committedDate": "2020-10-07T15:04:31Z", "message": "Merge branch 'MoreTalismans' of https://github.com/svr333/Slimefun4 into MoreTalismans"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDA1MDA3", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-504005007", "createdAt": "2020-10-07T15:28:33Z", "commit": {"oid": "d17d21b7ed4d23e7449699cdcb9a78ae27d3c9d7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToyODozM1rOHd5FUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToyODozM1rOHd5FUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwNjAwMQ==", "bodyText": "This basically does the same as checkFor other than having a different return type right?\nIf so, then one of these is redundant, you could also just rewrite checkFor to basically run this method and do an != null check on the returned ItemStack.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501106001", "createdAt": "2020-10-07T15:28:33Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/Talisman.java", "diffHunk": "@@ -179,6 +183,53 @@ public static boolean checkFor(Event e, SlimefunItem item) {\n         }\n     }\n \n+    @Nullable\n+    public static ItemStack checkForAndGet(@Nonnull SlimefunItemStack stack, @Nonnull Player player) {\n+        return checkForAndGet(stack.getItem(), player);\n+    }\n+\n+    @Nullable\n+    public static ItemStack checkForAndGet(@Nonnull SlimefunItem sfItem, @Nonnull Player player) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d17d21b7ed4d23e7449699cdcb9a78ae27d3c9d7"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjM3NDkw", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-504237490", "createdAt": "2020-10-07T20:22:58Z", "commit": {"oid": "d17d21b7ed4d23e7449699cdcb9a78ae27d3c9d7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDoyMjo1OFrOHeEHjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDoyMjo1OFrOHeEHjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI4Njc5OA==", "bodyText": "...", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501286798", "createdAt": "2020-10-07T20:22:58Z", "author": {"login": "LinoxGH"}, "path": ".gitignore", "diffHunk": "@@ -4,10 +4,12 @@\n /sonar/\n /.settings/\n /.idea/\n+/.vscode/\n \n dependency-reduced-pom.xml\n \n .classpath\n+.factorypath", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d17d21b7ed4d23e7449699cdcb9a78ae27d3c9d7"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b722dc2a002b202acfc8f159b645b8804482b421", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b722dc2a002b202acfc8f159b645b8804482b421", "committedDate": "2020-10-07T22:20:35Z", "message": "Update lore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MzIyMzIy", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-504322322", "createdAt": "2020-10-07T22:53:16Z", "commit": {"oid": "b722dc2a002b202acfc8f159b645b8804482b421"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMjo1MzoxNlrOHeISjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMjo1ODowMFrOHeIYyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1NTE0OA==", "bodyText": "I think replacing the two currently empty slots with magical glass and requiring two filled flasks in the middle would be a good improvement.\nWe don't wanna make it too cheap ;)", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501355148", "createdAt": "2020-10-07T22:53:16Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -878,6 +879,15 @@ public static void setup(@Nonnull SlimefunPlugin plugin) {\n         false, false, \"caveman\", 50, new PotionEffect(PotionEffectType.FAST_DIGGING, 800, 2))\n         .register(plugin);\n \n+        new Talisman(SlimefunItems.TALISMAN_WISE,\n+        new ItemStack[] { SlimefunItems.MAGIC_LUMP_3, null, SlimefunItems.MAGIC_LUMP_3, SlimefunItems.MAGICAL_GLASS, SlimefunItems.TALISMAN_MAGICIAN, SlimefunItems.FILLED_FLASK_OF_KNOWLEDGE, SlimefunItems.MAGIC_LUMP_3, null, SlimefunItems.MAGIC_LUMP_3},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b722dc2a002b202acfc8f159b645b8804482b421"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1NTMzMw==", "bodyText": "One Essence of afterlife in the middle top and two elytra scales on the sides in the middle?", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501355333", "createdAt": "2020-10-07T22:53:51Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -878,6 +879,15 @@ public static void setup(@Nonnull SlimefunPlugin plugin) {\n         false, false, \"caveman\", 50, new PotionEffect(PotionEffectType.FAST_DIGGING, 800, 2))\n         .register(plugin);\n \n+        new Talisman(SlimefunItems.TALISMAN_WISE,\n+        new ItemStack[] { SlimefunItems.MAGIC_LUMP_3, null, SlimefunItems.MAGIC_LUMP_3, SlimefunItems.MAGICAL_GLASS, SlimefunItems.TALISMAN_MAGICIAN, SlimefunItems.FILLED_FLASK_OF_KNOWLEDGE, SlimefunItems.MAGIC_LUMP_3, null, SlimefunItems.MAGIC_LUMP_3},\n+        false, false, \"wise\", 20)\n+        .register(plugin);\n+\n+        new ResurrectedTalisman(SlimefunItems.TALISMAN_RESURRECTED,\n+        new ItemStack[] { SlimefunItems.MAGIC_LUMP_3, null, SlimefunItems.MAGIC_LUMP_3, SlimefunItems.ESSENCE_OF_AFTERLIFE, SlimefunItems.TALISMAN_ANGEL, SlimefunItems.ELYTRA_SCALE, SlimefunItems.MAGIC_LUMP_3, null, SlimefunItems.MAGIC_LUMP_3 })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b722dc2a002b202acfc8f159b645b8804482b421"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1NTUzMw==", "bodyText": "The last line of this lore has no color.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501355533", "createdAt": "2020-10-07T22:54:32Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "diffHunk": "@@ -548,6 +548,8 @@ private SlimefunItems() {}\n     public static final SlimefunItemStack TALISMAN_WHIRLWIND = new SlimefunItemStack(\"WHIRLWIND_TALISMAN\", Material.EMERALD, \"&aTalisman of the Whirlwind\", \"\", \"&fHaving this Talisman\", \"&fin your Inventory will reflect\", \"&f60% of any projectiles fired at you.\", \"&e&oOnly a thrown Trident can pierce\", \"&e&othrough this layer of protection\");\n     public static final SlimefunItemStack TALISMAN_WIZARD = new SlimefunItemStack(\"WIZARD_TALISMAN\", Material.EMERALD, \"&aTalisman of the Wizard\", \"\", \"&fWhile you have this Talisman\", \"&fin your Inventory it allows you to\", \"&fobtain Fortune Level 4/5 however\", \"&fit also has a chance to lower the\", \"&fLevel of some Enchantments on your Item\");\n     public static final SlimefunItemStack TALISMAN_CAVEMAN = new SlimefunItemStack(\"CAVEMAN_TALISMAN\", Material.EMERALD, \"&aTalisman of the Caveman\", \"\", \"&fWhile you have this Talisman\", \"&fin your inventory it gives\", \"&fyou a 50% chance for a decent\", \"&fHaste buff when you mine any ore\");\n+    public static final SlimefunItemStack TALISMAN_WISE = new SlimefunItemStack(\"WISE_TALISMAN\", Material.EMERALD, \"&aTalisman of the Wise\", \"\", \"&fWhile you have this Talisman\", \"&fin your inventory it gives\", \"&fyou a 20% chance of doubling\", \"&fall experience you obtain\");\n+    public static final SlimefunItemStack TALISMAN_RESURRECTED = new SlimefunItemStack(\"RESURRECTED_TALISMAN\", Material.EMERALD, \"&aTalisman of the Resurrected\", \"\", \"&fWhile you have this Talisman\", \"&fin your inventory it will\", \"&fteleport you back safely when\", \"&fyou fall into the void\", \"&e&oRight click while holding this\", \"&e&otalisman to set a custom\", \"respawn location!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b722dc2a002b202acfc8f159b645b8804482b421"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1NjE1Mg==", "bodyText": "I still think PlayerRespawnEvent#setRespawnLocation(...) would be much much more reliable here.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501356152", "createdAt": "2020-10-07T22:56:14Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +303,46 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() > 0 && Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n+            e.setAmount(e.getAmount() * 2);\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onPlayerDeath(PlayerDeathEvent e) {\n+        Player player = e.getEntity();\n+        DamageCause dmgCause = player.getLastDamageCause().getCause();\n+\n+        if (dmgCause == DamageCause.VOID && Talisman.checkFor(e, SlimefunItems.TALISMAN_RESURRECTED)) {\n+            SlimefunPlugin.runSync(() -> {\n+                PaperLib.teleportAsync(player, getSafeRespawnLocation(player));\n+            }, 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b722dc2a002b202acfc8f159b645b8804482b421"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1NjI1OA==", "bodyText": "SlimefunItem.getByItem(...)", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501356258", "createdAt": "2020-10-07T22:56:30Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +303,46 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() > 0 && Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n+            e.setAmount(e.getAmount() * 2);\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onPlayerDeath(PlayerDeathEvent e) {\n+        Player player = e.getEntity();\n+        DamageCause dmgCause = player.getLastDamageCause().getCause();\n+\n+        if (dmgCause == DamageCause.VOID && Talisman.checkFor(e, SlimefunItems.TALISMAN_RESURRECTED)) {\n+            SlimefunPlugin.runSync(() -> {\n+                PaperLib.teleportAsync(player, getSafeRespawnLocation(player));\n+            }, 2);\n+        }\n+    }\n+\n+    @Nonnull\n+    private Location getSafeRespawnLocation(@Nonnull Player player) {\n+        ItemStack item = Talisman.checkForAndGet(SlimefunItems.TALISMAN_RESURRECTED, player);\n+        SlimefunItem sfItem = ResurrectedTalisman.getByItem(item);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b722dc2a002b202acfc8f159b645b8804482b421"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM1Njc0NQ==", "bodyText": "This null check should happen way earlier, before the SlimefunItem is assigned.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501356745", "createdAt": "2020-10-07T22:58:00Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +303,46 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() > 0 && Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n+            e.setAmount(e.getAmount() * 2);\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onPlayerDeath(PlayerDeathEvent e) {\n+        Player player = e.getEntity();\n+        DamageCause dmgCause = player.getLastDamageCause().getCause();\n+\n+        if (dmgCause == DamageCause.VOID && Talisman.checkFor(e, SlimefunItems.TALISMAN_RESURRECTED)) {\n+            SlimefunPlugin.runSync(() -> {\n+                PaperLib.teleportAsync(player, getSafeRespawnLocation(player));\n+            }, 2);\n+        }\n+    }\n+\n+    @Nonnull\n+    private Location getSafeRespawnLocation(@Nonnull Player player) {\n+        ItemStack item = Talisman.checkForAndGet(SlimefunItems.TALISMAN_RESURRECTED, player);\n+        SlimefunItem sfItem = ResurrectedTalisman.getByItem(item);\n+\n+        if (sfItem instanceof ResurrectedTalisman) {\n+            ResurrectedTalisman talisman = (ResurrectedTalisman) sfItem;\n+\n+            if (item != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b722dc2a002b202acfc8f159b645b8804482b421"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73cbbc3b546bbdb3697a670b60679f530fbd2aa6", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/73cbbc3b546bbdb3697a670b60679f530fbd2aa6", "committedDate": "2020-10-08T13:29:46Z", "message": "Improve recipes of new Talismans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82716dd808d6607e698b01d68d058d49509d2f5c", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/82716dd808d6607e698b01d68d058d49509d2f5c", "committedDate": "2020-10-08T13:30:25Z", "message": "Fix resurrected_talisman lore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0OTQxMTA1", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-504941105", "createdAt": "2020-10-08T16:05:55Z", "commit": {"oid": "82716dd808d6607e698b01d68d058d49509d2f5c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjowNTo1NVrOHel0Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjowNzozMVrOHel4oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzODg5MA==", "bodyText": "I would definitely add a canBuild check here before the location is saved. (e.g. to prevent saving a location in other players' regions.)", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501838890", "createdAt": "2020-10-08T16:05:55Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+\n+import io.github.thebusybiscuit.cscorelib2.data.PersistentJsonDataType;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.entity.Item;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.UUID;\n+\n+/**\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ * @author svr333\n+ *\n+ */\n+\n+public class ResurrectedTalisman extends Talisman {\n+\n+    private final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");\n+\n+    public ResurrectedTalisman(SlimefunItemStack item, ItemStack[] recipe) {\n+        super(item, recipe, true, true, \"resurrected\", new PotionEffect(PotionEffectType.GLOWING, 400, 0), new PotionEffect(PotionEffectType.ABSORPTION, 400, 4), new PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, 200, 20));\n+\n+        addItemHandler(getItemHandler());\n+    }\n+\n+    public ItemUseHandler getItemHandler() {\n+        return e -> {\n+            Location currentLoc = e.getPlayer().getLocation();\n+            JsonObject json = createJsonFromLocation(currentLoc);\n+            ItemMeta itemMeta = e.getItem().getItemMeta();\n+\n+            itemMeta.getPersistentDataContainer().set(locationKey, PersistentJsonDataType.JSON_OBJECT, json);\n+\n+            e.getItem().setItemMeta(itemMeta);\n+\n+            SlimefunPlugin.getLocalization().sendMessage(e.getPlayer(), \"messages.talisman.resurrected-location\", true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82716dd808d6607e698b01d68d058d49509d2f5c"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg0MDAzMw==", "bodyText": "Also, is this \"safe location\" really a safe location? I mean if someone fills that saved location with blocks, then the player will be teleported to that unsafe location anyway, right? If so, we should consider doing some checks before this teleport.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r501840033", "createdAt": "2020-10-08T16:07:31Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -292,6 +303,46 @@ public void onBlockBreak(BlockBreakEvent e) {\n         }\n     }\n \n+    @EventHandler\n+    public void onExperienceReceive(PlayerExpChangeEvent e) {\n+        if (e.getAmount() > 0 && Talisman.checkFor(e, SlimefunItems.TALISMAN_WISE)) {\n+            e.setAmount(e.getAmount() * 2);\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onPlayerDeath(PlayerDeathEvent e) {\n+        Player player = e.getEntity();\n+        DamageCause dmgCause = player.getLastDamageCause().getCause();\n+\n+        if (dmgCause == DamageCause.VOID && Talisman.checkFor(e, SlimefunItems.TALISMAN_RESURRECTED)) {\n+            SlimefunPlugin.runSync(() -> {\n+                PaperLib.teleportAsync(player, getSafeRespawnLocation(player));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82716dd808d6607e698b01d68d058d49509d2f5c"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddd8ccec6b139b2fb05e6112dfa721f09b9aa262", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/ddd8ccec6b139b2fb05e6112dfa721f09b9aa262", "committedDate": "2020-10-08T16:12:34Z", "message": "Imports go brrrrrr"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c030c736f495c11ad1a96eebbf6ebc7e8ad7902", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/7c030c736f495c11ad1a96eebbf6ebc7e8ad7902", "committedDate": "2020-10-08T16:21:00Z", "message": "Refactor (still build errors)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "172dfc061095748b04337de6f762b8fae171dcf3", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/172dfc061095748b04337de6f762b8fae171dcf3", "committedDate": "2020-10-08T16:22:23Z", "message": "Merge branch 'master' of https://github.com/Slimefun/Slimefun4 into MoreTalismans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc21ec5752c26f7f13d0d727ddfcf78720306de7", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/dc21ec5752c26f7f13d0d727ddfcf78720306de7", "committedDate": "2020-10-08T16:23:15Z", "message": "Merge branch 'MoreTalismans' of https://github.com/svr333/Slimefun4 into MoreTalismans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdac03e411d4aea35496b8893d351a698ab6d663", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/cdac03e411d4aea35496b8893d351a698ab6d663", "committedDate": "2020-10-08T16:25:57Z", "message": "Update imports-fix.yml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "488f1c626bacc9fe7d4dfe4f034143f65be03b00", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/488f1c626bacc9fe7d4dfe4f034143f65be03b00", "committedDate": "2020-10-08T16:26:45Z", "message": "Update imports-fix.yml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfc55038ea683da86c1476eab5685a3a89a3879e", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/cfc55038ea683da86c1476eab5685a3a89a3879e", "committedDate": "2020-10-08T16:29:24Z", "message": "Maybe this?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bcc00b62f4968c15beebfe174df9a0ba0d7cbad", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/3bcc00b62f4968c15beebfe174df9a0ba0d7cbad", "committedDate": "2020-10-08T16:29:59Z", "message": "Perhaps we just need ticks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b399d0c942673b436cd5a1d879a160cbffb6e419", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b399d0c942673b436cd5a1d879a160cbffb6e419", "committedDate": "2020-10-08T16:30:35Z", "message": "Or maybe the ticks go here..."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cfc8aec90866bd06f721f6b7e9a067cffc93bcd", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/1cfc8aec90866bd06f721f6b7e9a067cffc93bcd", "committedDate": "2020-10-08T20:15:30Z", "message": "Refactor (no build errors)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dcf895258ccee6373b5073ad431685b98dc829f", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/9dcf895258ccee6373b5073ad431685b98dc829f", "committedDate": "2020-10-08T20:15:53Z", "message": "Merge branch 'MoreTalismans' of https://github.com/svr333/Slimefun4 into MoreTalismans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b042fbd3a4eb65af898b49225abfa1eba86325ba", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b042fbd3a4eb65af898b49225abfa1eba86325ba", "committedDate": "2020-10-08T20:34:18Z", "message": "Add check for ProtectionManagers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bb974ce96770db9f3381204ac73c95b82b7b195", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/3bb974ce96770db9f3381204ac73c95b82b7b195", "committedDate": "2020-10-08T21:25:07Z", "message": "Delete imports-fix.yml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NTYzMzcw", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-505563370", "createdAt": "2020-10-09T10:47:02Z", "commit": {"oid": "3bb974ce96770db9f3381204ac73c95b82b7b195"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMDo0NzowMlrOHfErqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMDo0NzozMVrOHfEsdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM0NDYxNg==", "bodyText": "This variable should not be declared before it's relevant (inside the first if-block)", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r502344616", "createdAt": "2020-10-09T10:47:02Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.cscorelib2.data.PersistentJsonDataType;\n+import io.github.thebusybiscuit.cscorelib2.protection.ProtectableAction;\n+\n+import org.bukkit.potion.PotionEffectType;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import javax.annotation.Nonnull;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.entity.*;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import javax.annotation.Nullable;\n+import java.lang.Runnable;\n+import java.util.UUID;\n+\n+/**\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ * @author svr333\n+ *\n+ */\n+\n+public class ResurrectedTalisman extends Talisman {\n+\n+    private final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");\n+\n+    public ResurrectedTalisman(SlimefunItemStack item, ItemStack[] recipe) {\n+        super(item, recipe, true, true, \"resurrected\", new PotionEffect(PotionEffectType.GLOWING, 400, 0), new PotionEffect(PotionEffectType.ABSORPTION, 400, 4), new PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, 200, 20));\n+\n+        addItemHandler(getItemHandler());\n+    }\n+\n+    public ItemUseHandler getItemHandler() {\n+        return e -> {\n+            Location currentLoc = e.getPlayer().getLocation();\n+            JsonObject json = createJsonFromLocation(currentLoc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bb974ce96770db9f3381204ac73c95b82b7b195"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM0NDgyMA==", "bodyText": "You should also move this into the if-block and do .hasItemMeta() before-hand.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r502344820", "createdAt": "2020-10-09T10:47:31Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/ResurrectedTalisman.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.magical.talismans;\n+\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.github.thebusybiscuit.cscorelib2.data.PersistentJsonDataType;\n+import io.github.thebusybiscuit.cscorelib2.protection.ProtectableAction;\n+\n+import org.bukkit.potion.PotionEffectType;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import org.bukkit.persistence.PersistentDataContainer;\n+import org.bukkit.persistence.PersistentDataType;\n+import org.bukkit.potion.PotionEffect;\n+import javax.annotation.Nonnull;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Location;\n+import org.bukkit.entity.*;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.World;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import javax.annotation.Nullable;\n+import java.lang.Runnable;\n+import java.util.UUID;\n+\n+/**\n+ * This {@link SlimefunItem} is a special variant of the {@Link Talisman}. This specific {@Link Talisman} saves you\n+ * from a death caused by the void.\n+ *\n+ * @author svr333\n+ *\n+ */\n+\n+public class ResurrectedTalisman extends Talisman {\n+\n+    private final NamespacedKey locationKey = new NamespacedKey(SlimefunPlugin.instance(), \"resurrected_location\");\n+\n+    public ResurrectedTalisman(SlimefunItemStack item, ItemStack[] recipe) {\n+        super(item, recipe, true, true, \"resurrected\", new PotionEffect(PotionEffectType.GLOWING, 400, 0), new PotionEffect(PotionEffectType.ABSORPTION, 400, 4), new PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, 200, 20));\n+\n+        addItemHandler(getItemHandler());\n+    }\n+\n+    public ItemUseHandler getItemHandler() {\n+        return e -> {\n+            Location currentLoc = e.getPlayer().getLocation();\n+            JsonObject json = createJsonFromLocation(currentLoc);\n+            ItemMeta itemMeta = e.getItem().getItemMeta();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bb974ce96770db9f3381204ac73c95b82b7b195"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64684d86c3bc5a3a11f94e13da3d9a820999d286", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/64684d86c3bc5a3a11f94e13da3d9a820999d286", "committedDate": "2020-10-09T14:49:06Z", "message": "Reduce to local scoop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbf5236bd6e0c46fa4c7eb17a791d3b1880a1499", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/bbf5236bd6e0c46fa4c7eb17a791d3b1880a1499", "committedDate": "2020-10-09T14:49:24Z", "message": "Merge branch 'MoreTalismans' of https://github.com/svr333/Slimefun4 into MoreTalismans"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MjE3NzQ1", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-506217745", "createdAt": "2020-10-11T21:24:24Z", "commit": {"oid": "bbf5236bd6e0c46fa4c7eb17a791d3b1880a1499"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQyMToyNDoyNFrOHfqtow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQyMToyNjo0NVrOHfquow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk2NzcxNQ==", "bodyText": "First off, I would have still left the existing method. And I think these methods can use a bit renaming too.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static ItemStack checkFor(@Nonnull Event e, @Nonnull SlimefunItemStack stack) {\n          \n          \n            \n                    return checkFor(e, stack.getItem());\n          \n          \n            \n                }\n          \n          \n            \n                public static boolean activate(@Nonnull Event e, @Nonnull SlimefunItemStack stack) {\n          \n          \n            \n                    return activateAndGet(e, stack) != null;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                public static ItemStack activateAndGet(@Nonnull Event e, @Nonnull SlimefunItemStack stack) {\n          \n          \n            \n                    return activateAndGet(e, stack.getItem());\n          \n          \n            \n                }", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r502967715", "createdAt": "2020-10-11T21:24:24Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/Talisman.java", "diffHunk": "@@ -130,48 +134,61 @@ private static boolean hasMessage(Talisman talisman) {\n         return talisman.getMessageSuffix() != null;\n     }\n \n-    public static boolean checkFor(Event e, SlimefunItemStack stack) {\n+    public static ItemStack checkFor(@Nonnull Event e, @Nonnull SlimefunItemStack stack) {\n         return checkFor(e, stack.getItem());\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbf5236bd6e0c46fa4c7eb17a791d3b1880a1499"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk2NzkyNQ==", "bodyText": "Doing containsSimilarItem() and then looping through the inventory again to get the item is quite resource intense.\nOnly use your retrieve method and then just return that.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r502967925", "createdAt": "2020-10-11T21:26:15Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/Talisman.java", "diffHunk": "@@ -130,48 +134,61 @@ private static boolean hasMessage(Talisman talisman) {\n         return talisman.getMessageSuffix() != null;\n     }\n \n-    public static boolean checkFor(Event e, SlimefunItemStack stack) {\n+    public static ItemStack checkFor(@Nonnull Event e, @Nonnull SlimefunItemStack stack) {\n         return checkFor(e, stack.getItem());\n     }\n \n-    public static boolean checkFor(Event e, SlimefunItem item) {\n+    @Nullable\n+    public static ItemStack checkFor(@Nonnull Event e, @Nonnull SlimefunItem item) {\n         if (!(item instanceof Talisman)) {\n-            return false;\n+            return null;\n         }\n \n         Talisman talisman = (Talisman) item;\n         if (ThreadLocalRandom.current().nextInt(100) > talisman.getChance()) {\n-            return false;\n+            return null;\n         }\n \n         Player p = getPlayerByEventType(e);\n         if (p == null || !pass(p, talisman)) {\n-            return false;\n+            return null;\n         }\n \n         ItemStack talismanItem = talisman.getItem();\n+        ItemStack enderTalisman = talisman.getEnderVariant();\n+\n+        if (!Slimefun.hasUnlocked(p, talisman, true)) {\n+            return null;\n+        }\n \n         if (SlimefunUtils.containsSimilarItem(p.getInventory(), talismanItem, true)) {\n-            if (Slimefun.hasUnlocked(p, talisman, true)) {\n-                activateTalisman(e, p, p.getInventory(), talisman);\n-                return true;\n-            } else {\n-                return false;\n-            }\n-        } else {\n-            ItemStack enderTalisman = talisman.getEnderVariant();\n-\n-            if (SlimefunUtils.containsSimilarItem(p.getEnderChest(), enderTalisman, true)) {\n-                if (Slimefun.hasUnlocked(p, talisman, true)) {\n-                    activateTalisman(e, p, p.getEnderChest(), talisman);\n-                    return true;\n-                } else {\n-                    return false;\n-                }\n-            } else {\n-                return false;\n+            activateTalisman(e, p, p.getInventory(), talisman);\n+            return retrieveTalismanFromInventory(p.getInventory(), talisman);\n+        }\n+        else if (SlimefunUtils.containsSimilarItem(p.getEnderChest(), enderTalisman, true)) { \n+            activateTalisman(e, p, p.getEnderChest(), talisman);\n+            return retrieveTalismanFromInventory(p.getEnderChest(), talisman);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbf5236bd6e0c46fa4c7eb17a791d3b1880a1499"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk2Nzk3MQ==", "bodyText": "Also can just do this...\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (SlimefunUtils.isItemSimilar(item, talisman.getItem(), true, false)) {\n          \n          \n            \n                        if (talisman.isItem(item)) {", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r502967971", "createdAt": "2020-10-11T21:26:45Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/Talisman.java", "diffHunk": "@@ -130,48 +134,61 @@ private static boolean hasMessage(Talisman talisman) {\n         return talisman.getMessageSuffix() != null;\n     }\n \n-    public static boolean checkFor(Event e, SlimefunItemStack stack) {\n+    public static ItemStack checkFor(@Nonnull Event e, @Nonnull SlimefunItemStack stack) {\n         return checkFor(e, stack.getItem());\n     }\n \n-    public static boolean checkFor(Event e, SlimefunItem item) {\n+    @Nullable\n+    public static ItemStack checkFor(@Nonnull Event e, @Nonnull SlimefunItem item) {\n         if (!(item instanceof Talisman)) {\n-            return false;\n+            return null;\n         }\n \n         Talisman talisman = (Talisman) item;\n         if (ThreadLocalRandom.current().nextInt(100) > talisman.getChance()) {\n-            return false;\n+            return null;\n         }\n \n         Player p = getPlayerByEventType(e);\n         if (p == null || !pass(p, talisman)) {\n-            return false;\n+            return null;\n         }\n \n         ItemStack talismanItem = talisman.getItem();\n+        ItemStack enderTalisman = talisman.getEnderVariant();\n+\n+        if (!Slimefun.hasUnlocked(p, talisman, true)) {\n+            return null;\n+        }\n \n         if (SlimefunUtils.containsSimilarItem(p.getInventory(), talismanItem, true)) {\n-            if (Slimefun.hasUnlocked(p, talisman, true)) {\n-                activateTalisman(e, p, p.getInventory(), talisman);\n-                return true;\n-            } else {\n-                return false;\n-            }\n-        } else {\n-            ItemStack enderTalisman = talisman.getEnderVariant();\n-\n-            if (SlimefunUtils.containsSimilarItem(p.getEnderChest(), enderTalisman, true)) {\n-                if (Slimefun.hasUnlocked(p, talisman, true)) {\n-                    activateTalisman(e, p, p.getEnderChest(), talisman);\n-                    return true;\n-                } else {\n-                    return false;\n-                }\n-            } else {\n-                return false;\n+            activateTalisman(e, p, p.getInventory(), talisman);\n+            return retrieveTalismanFromInventory(p.getInventory(), talisman);\n+        }\n+        else if (SlimefunUtils.containsSimilarItem(p.getEnderChest(), enderTalisman, true)) { \n+            activateTalisman(e, p, p.getEnderChest(), talisman);\n+            return retrieveTalismanFromInventory(p.getEnderChest(), talisman);\n+        }\n+\n+        return null;\n+    }\n+\n+    @Nullable\n+    private static ItemStack retrieveTalismanFromInventory(@Nonnull Inventory inv, @Nonnull Talisman talisman) {\n+        ItemStack[] contents = inv.getContents();\n+        for (int i = 0; i < contents.length; i++) {\n+            ItemStack item = contents[i];\n+\n+            if (SlimefunUtils.isItemSimilar(item, talisman.getItem(), true, false)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbf5236bd6e0c46fa4c7eb17a791d3b1880a1499"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "125239f173a5fa35d0d045b52770e899950bf7d6", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/125239f173a5fa35d0d045b52770e899950bf7d6", "committedDate": "2020-10-11T22:19:19Z", "message": "Refactor and rename methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0b5c5a47f992474a87b878246a3ec685f474169", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b0b5c5a47f992474a87b878246a3ec685f474169", "committedDate": "2020-10-11T22:20:39Z", "message": "Simplify to talisman.isItem()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d474de290ebb071f4e0f61e9fc0ca16c7c2a3f4", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/4d474de290ebb071f4e0f61e9fc0ca16c7c2a3f4", "committedDate": "2020-10-11T22:57:11Z", "message": "Merge branch 'master' into MoreTalismans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db95cca3fbcc4eb3709ee74c0015522be0e987dd", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/db95cca3fbcc4eb3709ee74c0015522be0e987dd", "committedDate": "2020-10-12T17:59:16Z", "message": "Merge branch 'master' into MoreTalismans"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNDgyNzM4", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-513482738", "createdAt": "2020-10-21T09:29:36Z", "commit": {"oid": "db95cca3fbcc4eb3709ee74c0015522be0e987dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOToyOTozNlrOHli2NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOTozMzowOFrOHli_Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEzMDI5Mg==", "bodyText": "CAVEMAN = WISE?", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r509130292", "createdAt": "2020-10-21T09:29:36Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/TalismanListener.java", "diffHunk": "@@ -289,10 +302,48 @@ public void onBlockDropItems(BlockDropItemEvent e) {\n     @EventHandler\n     public void onBlockBreak(BlockBreakEvent e) {\n         if (SlimefunTag.CAVEMAN_TALISMAN_TRIGGERS.isTagged(e.getBlock().getType())) {\n-            Talisman.checkFor(e, SlimefunItems.TALISMAN_CAVEMAN);\n+            Talisman.tryActivate(e, SlimefunItems.TALISMAN_WISE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db95cca3fbcc4eb3709ee74c0015522be0e987dd"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEzMTM4MQ==", "bodyText": "Redundant brackets\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (tryActivateAndGet(e, stack.getItem()) != null);\n          \n          \n            \n                    return tryActivateAndGet(e, stack.getItem()) != null;", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r509131381", "createdAt": "2020-10-21T09:31:12Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/Talisman.java", "diffHunk": "@@ -130,48 +134,71 @@ private static boolean hasMessage(Talisman talisman) {\n         return talisman.getMessageSuffix() != null;\n     }\n \n-    public static boolean checkFor(Event e, SlimefunItemStack stack) {\n-        return checkFor(e, stack.getItem());\n+    public static boolean tryActivate(@Nonnull Event e, @Nonnull SlimefunItemStack stack) {\n+        return (tryActivateAndGet(e, stack.getItem()) != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db95cca3fbcc4eb3709ee74c0015522be0e987dd"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEzMTQ5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (tryActivateAndGet(e, item) != null);\n          \n          \n            \n                    return tryActivateAndGet(e, item) != null;", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r509131499", "createdAt": "2020-10-21T09:31:21Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/Talisman.java", "diffHunk": "@@ -130,48 +134,71 @@ private static boolean hasMessage(Talisman talisman) {\n         return talisman.getMessageSuffix() != null;\n     }\n \n-    public static boolean checkFor(Event e, SlimefunItemStack stack) {\n-        return checkFor(e, stack.getItem());\n+    public static boolean tryActivate(@Nonnull Event e, @Nonnull SlimefunItemStack stack) {\n+        return (tryActivateAndGet(e, stack.getItem()) != null);\n+    }\n+\n+    public static boolean tryActivate(@Nonnull Event e, @Nonnull SlimefunItem item) {\n+        return (tryActivateAndGet(e, item) != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db95cca3fbcc4eb3709ee74c0015522be0e987dd"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEzMTk3Nw==", "bodyText": "This will send a message to the player, we don't want this if the Player isn't even carrying the talisman.", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r509131977", "createdAt": "2020-10-21T09:32:07Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/Talisman.java", "diffHunk": "@@ -130,48 +134,71 @@ private static boolean hasMessage(Talisman talisman) {\n         return talisman.getMessageSuffix() != null;\n     }\n \n-    public static boolean checkFor(Event e, SlimefunItemStack stack) {\n-        return checkFor(e, stack.getItem());\n+    public static boolean tryActivate(@Nonnull Event e, @Nonnull SlimefunItemStack stack) {\n+        return (tryActivateAndGet(e, stack.getItem()) != null);\n+    }\n+\n+    public static boolean tryActivate(@Nonnull Event e, @Nonnull SlimefunItem item) {\n+        return (tryActivateAndGet(e, item) != null);\n     }\n \n-    public static boolean checkFor(Event e, SlimefunItem item) {\n+    public static ItemStack tryActivateAndGet(@Nonnull Event e, @Nonnull SlimefunItemStack stack) {\n+        return tryActivateAndGet(e, stack.getItem());\n+    }\n+\n+    @Nullable\n+    public static ItemStack tryActivateAndGet(@Nonnull Event e, @Nonnull SlimefunItem item) {\n         if (!(item instanceof Talisman)) {\n-            return false;\n+            return null;\n         }\n \n         Talisman talisman = (Talisman) item;\n         if (ThreadLocalRandom.current().nextInt(100) > talisman.getChance()) {\n-            return false;\n+            return null;\n         }\n \n         Player p = getPlayerByEventType(e);\n         if (p == null || !pass(p, talisman)) {\n-            return false;\n+            return null;\n+        }\n+\n+        if (!Slimefun.hasUnlocked(p, talisman, true)) {\n+            return null;\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db95cca3fbcc4eb3709ee74c0015522be0e987dd"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTEzMjU4Nw==", "bodyText": "This comment no longer applies", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#discussion_r509132587", "createdAt": "2020-10-21T09:33:08Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/Talisman.java", "diffHunk": "@@ -130,48 +134,71 @@ private static boolean hasMessage(Talisman talisman) {\n         return talisman.getMessageSuffix() != null;\n     }\n \n-    public static boolean checkFor(Event e, SlimefunItemStack stack) {\n-        return checkFor(e, stack.getItem());\n+    public static boolean tryActivate(@Nonnull Event e, @Nonnull SlimefunItemStack stack) {\n+        return (tryActivateAndGet(e, stack.getItem()) != null);\n+    }\n+\n+    public static boolean tryActivate(@Nonnull Event e, @Nonnull SlimefunItem item) {\n+        return (tryActivateAndGet(e, item) != null);\n     }\n \n-    public static boolean checkFor(Event e, SlimefunItem item) {\n+    public static ItemStack tryActivateAndGet(@Nonnull Event e, @Nonnull SlimefunItemStack stack) {\n+        return tryActivateAndGet(e, stack.getItem());\n+    }\n+\n+    @Nullable\n+    public static ItemStack tryActivateAndGet(@Nonnull Event e, @Nonnull SlimefunItem item) {\n         if (!(item instanceof Talisman)) {\n-            return false;\n+            return null;\n         }\n \n         Talisman talisman = (Talisman) item;\n         if (ThreadLocalRandom.current().nextInt(100) > talisman.getChance()) {\n-            return false;\n+            return null;\n         }\n \n         Player p = getPlayerByEventType(e);\n         if (p == null || !pass(p, talisman)) {\n-            return false;\n+            return null;\n+        }\n+\n+        if (!Slimefun.hasUnlocked(p, talisman, true)) {\n+            return null;\n         }\n \n-        ItemStack talismanItem = talisman.getItem();\n+        ItemStack possibleTalisman = retrieveTalismanFromInventory(p.getInventory(), talisman);\n \n-        if (SlimefunUtils.containsSimilarItem(p.getInventory(), talismanItem, true)) {\n-            if (Slimefun.hasUnlocked(p, talisman, true)) {\n-                activateTalisman(e, p, p.getInventory(), talisman);\n-                return true;\n-            } else {\n-                return false;\n-            }\n-        } else {\n-            ItemStack enderTalisman = talisman.getEnderVariant();\n-\n-            if (SlimefunUtils.containsSimilarItem(p.getEnderChest(), enderTalisman, true)) {\n-                if (Slimefun.hasUnlocked(p, talisman, true)) {\n-                    activateTalisman(e, p, p.getEnderChest(), talisman);\n-                    return true;\n-                } else {\n-                    return false;\n-                }\n-            } else {\n-                return false;\n+        if (possibleTalisman != null) {\n+            activateTalisman(e, p, p.getInventory(), talisman);\n+            return possibleTalisman;\n+        }\n+\n+        possibleTalisman = retrieveTalismanFromInventory(p.getEnderChest(), talisman);\n+\n+        if (possibleTalisman != null) {\n+            activateTalisman(e, p, p.getEnderChest(), talisman);\n+            return possibleTalisman;\n+        }\n+\n+        return possibleTalisman;\n+    }\n+\n+    @Nullable\n+    private static ItemStack retrieveTalismanFromInventory(@Nonnull Inventory inv, @Nonnull Talisman talisman) {\n+        ItemStack[] contents = inv.getContents();\n+        for (int i = 0; i < contents.length; i++) {\n+            ItemStack item = contents[i];\n+\n+            if (talisman.isItem(item)) {\n+                return item;\n             }\n         }\n+\n+        /* The point of this method is that it only gets called when youre sure there is \n+        *  a talisman in the inventory, so that it never returns null.\n+        *  However, this method will be nullable since there is an if statement and it needs\n+        *  to return something */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db95cca3fbcc4eb3709ee74c0015522be0e987dd"}, "originalPosition": 111}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a250d6d00993c2e7b64f4a3861c837a440f8aa3", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/6a250d6d00993c2e7b64f4a3861c837a440f8aa3", "committedDate": "2020-10-21T20:28:59Z", "message": "Fix requested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03edaa53a34b4de4c49832e4f7d0e39ec24e4ba4", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/03edaa53a34b4de4c49832e4f7d0e39ec24e4ba4", "committedDate": "2020-10-21T20:29:18Z", "message": "Merge branch 'MoreTalismans' of https://github.com/svr333/Slimefun4 into MoreTalismans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "192258fb741ed2afe6fb05e533162c2be69cb103", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/192258fb741ed2afe6fb05e533162c2be69cb103", "committedDate": "2020-10-30T21:54:36Z", "message": "Merge branch 'master' into MoreTalismans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21d6281ecdb5d99c2f2cabdc38eb646387e5cc0e", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/21d6281ecdb5d99c2f2cabdc38eb646387e5cc0e", "committedDate": "2020-10-30T21:57:27Z", "message": "Some formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bae560bd5d295c5ec9af2546415b2baae928ddd1", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/bae560bd5d295c5ec9af2546415b2baae928ddd1", "committedDate": "2020-10-30T21:58:57Z", "message": "More formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f39ef5b4185ed622287b4c0ba55f70d7194d8d7", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/6f39ef5b4185ed622287b4c0ba55f70d7194d8d7", "committedDate": "2020-10-30T22:01:06Z", "message": "Fixed imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e953eb1c81658b3da172b470607e4ac6e9529366", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/e953eb1c81658b3da172b470607e4ac6e9529366", "committedDate": "2020-10-30T22:03:44Z", "message": "Refactored talisman grabbing method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34719320505ff8137767428064db3c3fc57216da", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/34719320505ff8137767428064db3c3fc57216da", "committedDate": "2020-10-30T22:05:55Z", "message": "Update Talisman.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17e0d0ef1a235aed5eac17eba459487393c54829", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/17e0d0ef1a235aed5eac17eba459487393c54829", "committedDate": "2020-10-30T22:10:07Z", "message": "Update TalismanListener.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDYzNTE4", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-521063518", "createdAt": "2020-10-30T22:11:41Z", "commit": {"oid": "17e0d0ef1a235aed5eac17eba459487393c54829"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db673e0fb11f4031719351cfa1dd9ca240fb40e6", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/db673e0fb11f4031719351cfa1dd9ca240fb40e6", "committedDate": "2020-10-30T22:12:41Z", "message": "Forgotten a bracket :eyes:"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDYzOTU4", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-521063958", "createdAt": "2020-10-30T22:13:02Z", "commit": {"oid": "db673e0fb11f4031719351cfa1dd9ca240fb40e6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTI3NDA4", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-521127408", "createdAt": "2020-10-31T10:01:13Z", "commit": {"oid": "db673e0fb11f4031719351cfa1dd9ca240fb40e6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d69cf78331771ef47acdf4a800014d80a94b7251", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/d69cf78331771ef47acdf4a800014d80a94b7251", "committedDate": "2020-11-02T14:12:56Z", "message": "Merge branch 'master' into MoreTalismans"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNjYyODg2", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-521662886", "createdAt": "2020-11-02T14:13:32Z", "commit": {"oid": "d69cf78331771ef47acdf4a800014d80a94b7251"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzExNzY4", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-521711768", "createdAt": "2020-11-02T15:05:24Z", "commit": {"oid": "d69cf78331771ef47acdf4a800014d80a94b7251"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzY3Njc2", "url": "https://github.com/Slimefun/Slimefun4/pull/2388#pullrequestreview-521767676", "createdAt": "2020-11-02T16:03:46Z", "commit": {"oid": "d69cf78331771ef47acdf4a800014d80a94b7251"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2361, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}