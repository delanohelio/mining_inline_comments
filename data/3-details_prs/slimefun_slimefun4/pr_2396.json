{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3OTAwMDc2", "number": 2396, "title": "Add sticks recipe to table saw", "bodyText": "Description\nAdd planks -> sticks with double yield ratio to Table Saw (as suggested and approved on the Discord)\nChanges\n\nAdd 1 plank -> 4 sticks recipes for all plank types in table saw\nAdd displayrecipes for table saw\n\nFeedback\nRight now I loop through all the planks to check if the held item is a plank or not, is there a better way to do this?\nChecklist\n\n I have fully tested the proposed changes and promise that they will not break everything into chaos.\n I have also tested the proposed changes in combination with various popular addons and can confirm my changes do not break them.\n I followed the existing code standards and didn't mess up the formatting.\n I have added Nonnull and Nullable annotations to my methods to indicate their behaviour for null values\n\n\nN/A\n\n I did my best to add documentation to any public classes or methods I added.\n I added sufficient Unit Tests to cover my code.", "createdAt": "2020-10-05T14:34:13Z", "url": "https://github.com/Slimefun/Slimefun4/pull/2396", "merged": true, "mergeCommit": {"oid": "78515a3c6147e2d834c0330392042a8bd74a67d5"}, "closed": true, "closedAt": "2020-10-07T14:31:59Z", "author": {"login": "svr333"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPkVo3gH2gAyNDk3OTAwMDc2OmIzY2EzNjJkZjJmNzY2Yjg4ZGJkOGU2ZmFhM2VmYjM4ZDIxNzNhMTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQN2lygFqTUwMzk0MTQzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b3ca362df2f766b88dbd8e6faa3efb38d2173a12", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b3ca362df2f766b88dbd8e6faa3efb38d2173a12", "committedDate": "2020-10-05T14:06:19Z", "message": "Add DisplayRecipes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e57d94d61d4249fbfad78ff2d439466a46fa374", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/0e57d94d61d4249fbfad78ff2d439466a46fa374", "committedDate": "2020-10-05T14:28:23Z", "message": "Add Sticks recipe to Table Saw"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMTMxNDQ5", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#pullrequestreview-502131449", "createdAt": "2020-10-05T14:45:07Z", "commit": {"oid": "0e57d94d61d4249fbfad78ff2d439466a46fa374"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNDo0NTowN1rOHcgbVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNDo0Nzo1NlrOHcgjuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY1MzQ2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (Material plank: Tag.PLANKS.getValues()) {\n          \n          \n            \n                    for (Material plank : Tag.PLANKS.getValues()) {", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499653462", "createdAt": "2020-10-05T14:45:07Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -46,6 +46,11 @@ public TableSaw(Category category, SlimefunItemStack item) {\n                 displayedRecipes.add(new ItemStack(planks.get(), 8));\n             }\n         }\n+\n+        for (Material plank: Tag.PLANKS.getValues()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e57d94d61d4249fbfad78ff2d439466a46fa374"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY1NDUxNw==", "bodyText": "Instead of flling the guide wth the same recipe maybe add a dummy plank representing all planks and have its display name as \"Any Wooden Plank\"", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499654517", "createdAt": "2020-10-05T14:46:29Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -46,6 +46,11 @@ public TableSaw(Category category, SlimefunItemStack item) {\n                 displayedRecipes.add(new ItemStack(planks.get(), 8));\n             }\n         }\n+\n+        for (Material plank: Tag.PLANKS.getValues()) {\n+            displayedRecipes.add(new ItemStack(plank));\n+            displayedRecipes.add(new ItemStack(Material.STICK, 4));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e57d94d61d4249fbfad78ff2d439466a46fa374"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY1NTE5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (Material plank: Tag.PLANKS.getValues()) {\n          \n          \n            \n                    for (Material plank : Tag.PLANKS.getValues()) {", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499655193", "createdAt": "2020-10-05T14:47:21Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -55,16 +60,32 @@ public TableSaw(Category category, SlimefunItemStack item) {\n \n     @Override\n     public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+\n+        boolean itemIsAPlank = false;\n+        Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n+\n+        for (Material plank: Tag.PLANKS.getValues()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e57d94d61d4249fbfad78ff2d439466a46fa374"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY1NTYxMQ==", "bodyText": "You should use Tag.PLANKS.isTagged()", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499655611", "createdAt": "2020-10-05T14:47:56Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -55,16 +60,32 @@ public TableSaw(Category category, SlimefunItemStack item) {\n \n     @Override\n     public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+\n+        boolean itemIsAPlank = false;\n+        Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n+\n+        for (Material plank: Tag.PLANKS.getValues()) {\n+            if (item.getType() == plank) {\n+                itemIsAPlank = true;\n+                break;\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e57d94d61d4249fbfad78ff2d439466a46fa374"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8675e96e75811a0eac025ab530095016dd5f16e6", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/8675e96e75811a0eac025ab530095016dd5f16e6", "committedDate": "2020-10-05T15:11:56Z", "message": "Add space\n\nCo-authored-by: LinoxGH <54643600+LinoxGH@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62aa2dd0d86247565f4332f5a48691c5acbeb773", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/62aa2dd0d86247565f4332f5a48691c5acbeb773", "committedDate": "2020-10-05T15:23:40Z", "message": "Simplify displayrecipes and use planks.isTagged()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "983bc103d33f18057cdf590b316a7c2870fc8481", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/983bc103d33f18057cdf590b316a7c2870fc8481", "committedDate": "2020-10-05T16:43:11Z", "message": "Refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff0c2b798440be5adf2c18178345074aafd1abde", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/ff0c2b798440be5adf2c18178345074aafd1abde", "committedDate": "2020-10-05T17:37:12Z", "message": "Change else if to else"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjg5NDU0", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#pullrequestreview-502289454", "createdAt": "2020-10-05T17:55:03Z", "commit": {"oid": "ff0c2b798440be5adf2c18178345074aafd1abde"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzo1NTowM1rOHcntwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzo1NzoxMVrOHcnylA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3Mjg2NA==", "bodyText": "Nonnull annotations would be nice.", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499772864", "createdAt": "2020-10-05T17:55:03Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -55,16 +61,26 @@ public TableSaw(Category category, SlimefunItemStack item) {\n \n     @Override\n     public void onInteract(Player p, Block b) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff0c2b798440be5adf2c18178345074aafd1abde"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3MzA2MQ==", "bodyText": "This can be removed.", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499773061", "createdAt": "2020-10-05T17:55:24Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -55,16 +61,26 @@ public TableSaw(Category category, SlimefunItemStack item) {\n \n     @Override\n     public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+        ItemStack item = p.getInventory().getItemInMainHand();\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n+\n+        if (itemIsALog || itemIsAPlank) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff0c2b798440be5adf2c18178345074aafd1abde"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3NDEwMA==", "bodyText": "This is supposed to be called after output is initialized.", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499774100", "createdAt": "2020-10-05T17:57:11Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -55,16 +61,26 @@ public TableSaw(Category category, SlimefunItemStack item) {\n \n     @Override\n     public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+        ItemStack item = p.getInventory().getItemInMainHand();\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n+\n+        if (itemIsALog || itemIsAPlank) {\n+            ItemStack output = null;\n \n-        if (planks.isPresent()) {\n             if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n+                ItemUtils.consumeItem(item, true);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff0c2b798440be5adf2c18178345074aafd1abde"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9242978a96b4c622a43722a94bfdb109c7ccfad7", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/9242978a96b4c622a43722a94bfdb109c7ccfad7", "committedDate": "2020-10-05T17:57:50Z", "message": "Remove redundant if-else && Consume item after output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ef0a67db61ee781086808cb41c2a0fbc0fddb79", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/3ef0a67db61ee781086808cb41c2a0fbc0fddb79", "committedDate": "2020-10-05T17:59:55Z", "message": "Add @Nonnull"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "038efb83917293aeba23756ed8e3fc61ac4aa2ea", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/038efb83917293aeba23756ed8e3fc61ac4aa2ea", "committedDate": "2020-10-05T18:00:31Z", "message": "Add myself @author"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjk4ODI1", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#pullrequestreview-502298825", "createdAt": "2020-10-05T18:07:50Z", "commit": {"oid": "038efb83917293aeba23756ed8e3fc61ac4aa2ea"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMzExOTk5", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#pullrequestreview-502311999", "createdAt": "2020-10-05T18:26:14Z", "commit": {"oid": "038efb83917293aeba23756ed8e3fc61ac4aa2ea"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODoyNjoxNFrOHcovQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODoyNjoxNFrOHcovQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4OTYzMg==", "bodyText": "I think this should be put into a seperate method returning a nullable ItemStack.", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499789632", "createdAt": "2020-10-05T18:26:14Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +63,39 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        ItemStack output = null;\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        if (itemIsALog) {\n+            Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n+            output = new ItemStack(planks.get(), 8);\n+        }\n+        else if (itemIsAPlank){\n+            output = new ItemStack(Material.STICK, 4);\n+        }\n+        else {\n+            return;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "038efb83917293aeba23756ed8e3fc61ac4aa2ea"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e17cd2cc582090c7a864a2b2b5956b1f3a18bd7", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/6e17cd2cc582090c7a864a2b2b5956b1f3a18bd7", "committedDate": "2020-10-05T21:00:44Z", "message": "Extract to method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c44c583cff4cea288d07214f244e150003a1bda", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/8c44c583cff4cea288d07214f244e150003a1bda", "committedDate": "2020-10-05T21:01:30Z", "message": "Add nullable tag"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDIzMTI0", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#pullrequestreview-502423124", "createdAt": "2020-10-05T21:10:02Z", "commit": {"oid": "8c44c583cff4cea288d07214f244e150003a1bda"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDY0MjYx", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#pullrequestreview-502464261", "createdAt": "2020-10-05T22:28:08Z", "commit": {"oid": "8c44c583cff4cea288d07214f244e150003a1bda"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjoyODowOFrOHcv3kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjozMDowMlrOHcv6WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNjQ1MA==", "bodyText": "Why aren't you adding all planks directly instead of this weird placeholder?", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499906450", "createdAt": "2020-10-05T22:28:08Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -46,6 +51,11 @@ public TableSaw(Category category, SlimefunItemStack item) {\n                 displayedRecipes.add(new ItemStack(planks.get(), 8));\n             }\n         }\n+\n+        CustomItem ci = new CustomItem(Material.OAK_PLANKS, \"Any Wooden Plank\");\n+\n+        displayedRecipes.add(new ItemStack(ci));\n+        displayedRecipes.add(new ItemStack(Material.STICK, 4));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c44c583cff4cea288d07214f244e150003a1bda"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNjk5Mw==", "bodyText": "Unnecessary variable declaration", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499906993", "createdAt": "2020-10-05T22:29:35Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +64,47 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item);\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        if (output == null) {\n+            return;\n+        }\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        outputItems(b, output);\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+    }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+    @Nullable\n+    private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n+        ItemStack output = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c44c583cff4cea288d07214f244e150003a1bda"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNzAwMQ==", "bodyText": "There isn't really any need for these two variables, just do it inside the if-statement directly.", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499907001", "createdAt": "2020-10-05T22:29:36Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +64,47 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item);\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        if (output == null) {\n+            return;\n+        }\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        outputItems(b, output);\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+    }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+    @Nullable\n+    private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c44c583cff4cea288d07214f244e150003a1bda"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNzA4Ng==", "bodyText": "Just do a return; here, no need to assign a variable.", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499907086", "createdAt": "2020-10-05T22:29:50Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +64,47 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item);\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        if (output == null) {\n+            return;\n+        }\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        outputItems(b, output);\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+    }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+    @Nullable\n+    private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n+        ItemStack output = null;\n \n-            b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, log.getType());\n+        if (itemIsALog) {\n+            Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n+            output = new ItemStack(planks.get(), 8);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c44c583cff4cea288d07214f244e150003a1bda"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNzEwNg==", "bodyText": "Just do a return; here, no need to assign a variable.", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499907106", "createdAt": "2020-10-05T22:29:54Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +64,47 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item);\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        if (output == null) {\n+            return;\n+        }\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        outputItems(b, output);\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+    }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+    @Nullable\n+    private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n+        ItemStack output = null;\n \n-            b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, log.getType());\n+        if (itemIsALog) {\n+            Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n+            output = new ItemStack(planks.get(), 8);\n+        }\n+        else if (itemIsAPlank){\n+            output = new ItemStack(Material.STICK, 4);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c44c583cff4cea288d07214f244e150003a1bda"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNzE2MA==", "bodyText": "else return null;", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499907160", "createdAt": "2020-10-05T22:30:02Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +64,47 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item);\n \n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+        if (output == null) {\n+            return;\n+        }\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        outputItems(b, output);\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+    }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+    @Nullable\n+    private ItemStack getItemsToOutput(@Nonnull ItemStack item) {\n+        boolean itemIsAPlank = Tag.PLANKS.isTagged(item.getType());\n+        boolean itemIsALog = Tag.LOGS.isTagged(item.getType());\n+        ItemStack output = null;\n \n-            b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, log.getType());\n+        if (itemIsALog) {\n+            Optional<Material> planks = MaterialConverter.getPlanksFromLog(item.getType());\n+            output = new ItemStack(planks.get(), 8);\n+        }\n+        else if (itemIsAPlank){\n+            output = new ItemStack(Material.STICK, 4);\n         }\n+\n+        return output;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c44c583cff4cea288d07214f244e150003a1bda"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37242fe64afd40715a5a3d74f6d57c6b2cf8e4df", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/37242fe64afd40715a5a3d74f6d57c6b2cf8e4df", "committedDate": "2020-10-05T23:26:23Z", "message": "Throw out variables"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNTcwMzA5", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#pullrequestreview-502570309", "createdAt": "2020-10-06T04:11:17Z", "commit": {"oid": "37242fe64afd40715a5a3d74f6d57c6b2cf8e4df"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNDoxMToxN1rOHc1SLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNDoxMjoxN1rOHc1TEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk5NTE4Mw==", "bodyText": "Instead of ItemStack item you can use Material type to reduce the calls to get the type.", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499995183", "createdAt": "2020-10-06T04:11:17Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +64,44 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n-\n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item);\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (output == null) {\n+            return;\n+        }\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+        outputItems(b, output);\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+    }\n \n-            b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, log.getType());\n+    @Nullable\n+    private ItemStack getItemsToOutput(@Nonnull ItemStack item) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37242fe64afd40715a5a3d74f6d57c6b2cf8e4df"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk5NTQxMQ==", "bodyText": "Move this to the right location.", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r499995411", "createdAt": "2020-10-06T04:12:17Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -4,6 +4,7 @@\n import java.util.List;\n import java.util.Optional;\n \n+import io.github.thebusybiscuit.cscorelib2.item.CustomItem;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37242fe64afd40715a5a3d74f6d57c6b2cf8e4df"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6ed632dd0848dbb367a7285bcb1d65b2ac974de", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/e6ed632dd0848dbb367a7285bcb1d65b2ac974de", "committedDate": "2020-10-06T09:53:51Z", "message": "Refactor + undo placeholder item in displayrecipes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMjA2NDI5", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#pullrequestreview-503206429", "createdAt": "2020-10-06T17:37:30Z", "commit": {"oid": "e6ed632dd0848dbb367a7285bcb1d65b2ac974de"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzozNzozMFrOHdSyIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzozODoyMlrOHdS0Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ3ODQ5Ng==", "bodyText": "Never call Optional#get() without doing Optional#ifPresent() first.", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r500478496", "createdAt": "2020-10-06T17:37:30Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +63,44 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n-\n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item.getType());\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (output == null) {\n+            return;\n+        }\n \n-            ItemStack output = new ItemStack(planks.get(), 8);\n-            Inventory outputChest = findOutputChest(b, output);\n+        if (p.getGameMode() != GameMode.CREATIVE) {\n+            ItemUtils.consumeItem(item, true);\n+        }\n \n-            if (outputChest != null) {\n-                outputChest.addItem(output);\n-            }\n-            else {\n-                b.getWorld().dropItemNaturally(b.getLocation(), output);\n-            }\n+        outputItems(b, output);\n+        b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, item.getType());\n+    }\n \n-            b.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, log.getType());\n+    @Nullable\n+    private ItemStack getItemsToOutput(@Nonnull Material item) {\n+        if (Tag.LOGS.isTagged(item)) {\n+            Optional<Material> planks = MaterialConverter.getPlanksFromLog(item);\n+            return new ItemStack(planks.get(), 8);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6ed632dd0848dbb367a7285bcb1d65b2ac974de"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ3ODk4Mg==", "bodyText": "Just a general thought: Should we maybe send a message or play a sound effect here?", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#discussion_r500478982", "createdAt": "2020-10-06T17:38:22Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/TableSaw.java", "diffHunk": "@@ -54,28 +63,44 @@ public TableSaw(Category category, SlimefunItemStack item) {\n     }\n \n     @Override\n-    public void onInteract(Player p, Block b) {\n-        ItemStack log = p.getInventory().getItemInMainHand();\n-\n-        Optional<Material> planks = MaterialConverter.getPlanksFromLog(log.getType());\n+    public void onInteract(@Nonnull Player p, @Nonnull Block b) {\n+        ItemStack item = p.getInventory().getItemInMainHand();\n+        ItemStack output = getItemsToOutput(item.getType());\n \n-        if (planks.isPresent()) {\n-            if (p.getGameMode() != GameMode.CREATIVE) {\n-                ItemUtils.consumeItem(log, true);\n-            }\n+        if (output == null) {\n+            return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6ed632dd0848dbb367a7285bcb1d65b2ac974de"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa394b4d447347c06d904ca470fd87f658ba14d5", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/fa394b4d447347c06d904ca470fd87f658ba14d5", "committedDate": "2020-10-06T17:50:57Z", "message": "Call planks.isPresent()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85091516dbeb58823ab604b2bb9ec2674be7416e", "author": {"user": {"login": "svr333", "name": "svr333"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/85091516dbeb58823ab604b2bb9ec2674be7416e", "committedDate": "2020-10-07T10:12:02Z", "message": "Add generic fail message"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzOTE0NDI0", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#pullrequestreview-503914424", "createdAt": "2020-10-07T14:03:14Z", "commit": {"oid": "85091516dbeb58823ab604b2bb9ec2674be7416e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzOTQxNDM1", "url": "https://github.com/Slimefun/Slimefun4/pull/2396#pullrequestreview-503941435", "createdAt": "2020-10-07T14:28:25Z", "commit": {"oid": "85091516dbeb58823ab604b2bb9ec2674be7416e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2370, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}