{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMTM2MTAy", "number": 1800, "title": "AncientAltarOutputEvent added", "bodyText": "Added:\nAncientAltarOutputEvent: This event will trigger before the ancient altar gives you an item. This will allow you to modify which item you want it to drop, get the location of the ancient altar block or even cancel it, so that the item isn't dropped and the drop animation for the item is cancelled.\nAlso, documented it, in case someone wanted to yell at me because of that.", "createdAt": "2020-04-11T04:02:51Z", "url": "https://github.com/Slimefun/Slimefun4/pull/1800", "merged": true, "mergeCommit": {"oid": "0c96323de908572f653452105edd9ede9c1d2ca9"}, "closed": true, "closedAt": "2020-04-11T22:31:06Z", "author": {"login": "TweepCoding"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWdbURAH2gAyNDAyMTM2MTAyOmI3OTI5ZGZlYmZlNDI3ZWU5ODAzNWQ4ZGUzYmJjODRlMzc1N2VjNmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWtdi-gFqTM5MTgwNTEzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b7929dfebfe427ee98035d8de3bbc84e3757ec6e", "author": {"user": {"login": "TweepCoding", "name": "Tweep"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b7929dfebfe427ee98035d8de3bbc84e3757ec6e", "committedDate": "2020-04-11T03:49:30Z", "message": "Adding Altar Output Event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c6c80da6c98906f7c9610e38810abe6ad9e2a67", "author": {"user": {"login": "TweepCoding", "name": "Tweep"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/9c6c80da6c98906f7c9610e38810abe6ad9e2a67", "committedDate": "2020-04-11T04:00:44Z", "message": "Adding Extra Method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzMzOTA5", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#pullrequestreview-391733909", "createdAt": "2020-04-11T04:07:33Z", "commit": {"oid": "9c6c80da6c98906f7c9610e38810abe6ad9e2a67"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNDowNzozM1rOGEKLnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNDowODozMVrOGEKL7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxNDMwMQ==", "bodyText": "This should probably be a player event. I'd like to get the player here.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407014301", "createdAt": "2020-04-11T04:07:33Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends Event implements Cancellable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c6c80da6c98906f7c9610e38810abe6ad9e2a67"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxNDM4MQ==", "bodyText": "Hmm. Maybe we have a pre and post event or something. I don't really like this running entirely and then not doing anything.\nHmm.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407014381", "createdAt": "2020-04-11T04:08:31Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -140,10 +143,14 @@ private void abort() {\n \n     private void finish() {\n         if (running) {\n-            dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n-            dropLocation.getWorld().playEffect(dropLocation, Effect.STEP_SOUND, Material.EMERALD_BLOCK);\n-            dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), output);\n \n+            AncientAltarOutputEvent ancientAltarOutputEvent = new AncientAltarOutputEvent(output, altar);\n+            Bukkit.getPluginManager().callEvent(ancientAltarOutputEvent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c6c80da6c98906f7c9610e38810abe6ad9e2a67"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2", "author": {"user": {"login": "TweepCoding", "name": "Tweep"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/332a017c63246c2ca972e4daceb51f24246eb6c2", "committedDate": "2020-04-11T04:21:40Z", "message": "Adding Extra Method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzQ2MTc5", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#pullrequestreview-391746179", "createdAt": "2020-04-11T08:01:24Z", "commit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMToyNFrOGELVlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowNToxMFrOGELW5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzIzNg==", "bodyText": "No one-line methods.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033236", "createdAt": "2020-04-11T08:01:24Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarOutputEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() { return handlers; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzIzOA==", "bodyText": "No one-line methods.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033238", "createdAt": "2020-04-11T08:01:28Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarOutputEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() { return handlers; }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() { return block; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzI1OQ==", "bodyText": "Missing documentation", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033259", "createdAt": "2020-04-11T08:01:48Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarOutputEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() { return handlers; }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() { return block; }\n+\n+    /**\n+     * This method returns the item that would be dropped by the altar. {@link ItemStack}\n+     *\n+     * @return the item that would be dropped by the altar. {@link ItemStack}\n+     */\n+    public ItemStack getItem() {\n+        return output;\n+    }\n+\n+    public void setItem(ItemStack output) {\n+        this.output = output;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzI2Ng==", "bodyText": "No one-line methods.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033266", "createdAt": "2020-04-11T08:01:52Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarOutputEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() { return handlers; }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() { return block; }\n+\n+    /**\n+     * This method returns the item that would be dropped by the altar. {@link ItemStack}\n+     *\n+     * @return the item that would be dropped by the altar. {@link ItemStack}\n+     */\n+    public ItemStack getItem() {\n+        return output;\n+    }\n+\n+    public void setItem(ItemStack output) {\n+        this.output = output;\n+    }\n+\n+    @Override\n+    public boolean isCancelled() { return cancelled; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzI4NQ==", "bodyText": "No one-line methods.\nAlso rename the parameter \"b\" to something more meaningful like \"cancel\".", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033285", "createdAt": "2020-04-11T08:02:12Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarOutputEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() { return handlers; }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() { return block; }\n+\n+    /**\n+     * This method returns the item that would be dropped by the altar. {@link ItemStack}\n+     *\n+     * @return the item that would be dropped by the altar. {@link ItemStack}\n+     */\n+    public ItemStack getItem() {\n+        return output;\n+    }\n+\n+    public void setItem(ItemStack output) {\n+        this.output = output;\n+    }\n+\n+    @Override\n+    public boolean isCancelled() { return cancelled; }\n+\n+    @Override\n+    public void setCancelled(boolean b) { cancelled = b; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzM4OA==", "bodyText": "Since you are able to modify the output of the item you should also use the output item from that event rather than the original one.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033388", "createdAt": "2020-04-11T08:03:18Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -140,10 +146,14 @@ private void abort() {\n \n     private void finish() {\n         if (running) {\n-            dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n-            dropLocation.getWorld().playEffect(dropLocation, Effect.STEP_SOUND, Material.EMERALD_BLOCK);\n-            dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), output);\n \n+            AncientAltarOutputEvent ancientAltarOutputEvent = new AncientAltarOutputEvent(output, altar, player);\n+            Bukkit.getPluginManager().callEvent(ancientAltarOutputEvent);\n+            if (!ancientAltarOutputEvent.isCancelled()) {\n+                dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n+                dropLocation.getWorld().playEffect(dropLocation, Effect.STEP_SOUND, Material.EMERALD_BLOCK);\n+                dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), output);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzQyMg==", "bodyText": "That variable name is rather long, might just be \"event\".", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033422", "createdAt": "2020-04-11T08:03:35Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -140,10 +146,14 @@ private void abort() {\n \n     private void finish() {\n         if (running) {\n-            dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n-            dropLocation.getWorld().playEffect(dropLocation, Effect.STEP_SOUND, Material.EMERALD_BLOCK);\n-            dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), output);\n \n+            AncientAltarOutputEvent ancientAltarOutputEvent = new AncientAltarOutputEvent(output, altar, player);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzQ0OA==", "bodyText": "This can be final.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033448", "createdAt": "2020-04-11T08:03:51Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -47,13 +51,15 @@\n \n     private boolean running;\n     private int stage;\n+    private Player player;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzUwOA==", "bodyText": "I would rather name it \"AncientAltarCraftEvent\" instead of Output.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033508", "createdAt": "2020-04-11T08:04:26Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzU3NQ==", "bodyText": "You can also add some \"@see\" tags here to the AncientAltar task and listener class etc... to mark that they belong to each other.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033575", "createdAt": "2020-04-11T08:05:10Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzU3OTAz", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#pullrequestreview-391757903", "createdAt": "2020-04-11T11:17:15Z", "commit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMToxNzoxNlrOGEMcpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMToxNzoxNlrOGEMcpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1MTQyOQ==", "bodyText": "Be consistent with the other this.'s", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407051429", "createdAt": "2020-04-11T11:17:16Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -50,13 +51,15 @@\n \n     private boolean running;\n     private int stage;\n+    private Player player;\n \n-    public AncientAltarTask(Block altar, ItemStack output, List<Block> pedestals, List<ItemStack> items) {\n+    public AncientAltarTask(Block altar, ItemStack output, List<Block> pedestals, List<ItemStack> items, Player p) {\n         this.dropLocation = altar.getLocation().add(0.5, 1.3, 0.5);\n         this.altar = altar;\n         this.output = output;\n         this.pedestals = pedestals;\n         this.items = items;\n+        player = p;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a798b0bc8daf3e8df60431d682ee12369b953f7", "author": {"user": {"login": "TweepCoding", "name": "Tweep"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/7a798b0bc8daf3e8df60431d682ee12369b953f7", "committedDate": "2020-04-11T14:08:36Z", "message": "Adding Fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzc5NTMx", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#pullrequestreview-391779531", "createdAt": "2020-04-11T16:18:20Z", "commit": {"oid": "7a798b0bc8daf3e8df60431d682ee12369b953f7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxNjoxODoyMFrOGEOTDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxNjoxOToxN1rOGEOTlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA4MTc0MA==", "bodyText": "This comment needs to be one line further down. You can't have it start on the same line as /**", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407081740", "createdAt": "2020-04-11T16:18:20Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ * @see AncientAltar\n+ * @see AncientAltarTask\n+ * @see AncientAltarListener\n+ */\n+\n+public class AncientAltarCraftEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarCraftEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() {\n+        return handlers;\n+    }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() {\n+        return block;\n+    }\n+\n+    /**\n+     * This method returns the {@link ItemStack} that would be dropped by the {@link AncientAltar }\n+     *\n+     * @return the {@link ItemStack} that would be dropped by the {@link AncientAltar}\n+     */\n+    public ItemStack getItem() {\n+        return output;\n+    }\n+\n+    /** This method will change the item that would be dropped by the {@link AncientAltar}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a798b0bc8daf3e8df60431d682ee12369b953f7"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA4MTg3OQ==", "bodyText": "Maybe rename this to getAltarBlock() to avoid potential confusion.\nOther than that it is ready to be merged!", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407081879", "createdAt": "2020-04-11T16:19:17Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ * @see AncientAltar\n+ * @see AncientAltarTask\n+ * @see AncientAltarListener\n+ */\n+\n+public class AncientAltarCraftEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarCraftEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() {\n+        return handlers;\n+    }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a798b0bc8daf3e8df60431d682ee12369b953f7"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb9e0f1ab8fee07161a74af362dc520cde816c33", "author": {"user": {"login": "TweepCoding", "name": "Tweep"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/fb9e0f1ab8fee07161a74af362dc520cde816c33", "committedDate": "2020-04-11T16:37:57Z", "message": "Adding Fixes Part 2: Electric Bungaloo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79737886ac6cf6e25ea2ffb114350f8dc4526ca5", "author": {"user": {"login": "TweepCoding", "name": "Tweep"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/79737886ac6cf6e25ea2ffb114350f8dc4526ca5", "committedDate": "2020-04-11T22:23:07Z", "message": "Adding Fixes Part 3: I dont know what to put here"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODA1MDEz", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#pullrequestreview-391805013", "createdAt": "2020-04-11T22:28:00Z", "commit": {"oid": "79737886ac6cf6e25ea2ffb114350f8dc4526ca5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMjoyODowMFrOGEQf8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMjoyODowMFrOGEQf8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzExNzgwOA==", "bodyText": "This line needs to go", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407117808", "createdAt": "2020-04-11T22:28:00Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ * @see AncientAltar\n+ * @see AncientAltarTask\n+ * @see AncientAltarListener\n+ */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79737886ac6cf6e25ea2ffb114350f8dc4526ca5"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODA1MDI1", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#pullrequestreview-391805025", "createdAt": "2020-04-11T22:28:14Z", "commit": {"oid": "79737886ac6cf6e25ea2ffb114350f8dc4526ca5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMjoyODoxNVrOGEQf_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMjoyODoxNVrOGEQf_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzExNzgyMA==", "bodyText": "And you need a new line before this one.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407117820", "createdAt": "2020-04-11T22:28:15Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ * @see AncientAltar\n+ * @see AncientAltarTask\n+ * @see AncientAltarListener\n+ */\n+\n+public class AncientAltarCraftEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The altar {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     * @param player\n+     *            The {@link Player} that started the ritual.\n+     */\n+    public AncientAltarCraftEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() {\n+        return handlers;\n+    }\n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79737886ac6cf6e25ea2ffb114350f8dc4526ca5"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "666c9a2a31923c5b9bd8b3cc461e73e0a9d97549", "author": {"user": {"login": "TweepCoding", "name": "Tweep"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/666c9a2a31923c5b9bd8b3cc461e73e0a9d97549", "committedDate": "2020-04-11T22:29:31Z", "message": "Adding Fixes Part... you get the point"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODA1MTM2", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#pullrequestreview-391805136", "createdAt": "2020-04-11T22:30:25Z", "commit": {"oid": "666c9a2a31923c5b9bd8b3cc461e73e0a9d97549"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2553, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}