{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMTM2MTAy", "number": 1800, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNDowNzozM1rODw6JVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMjoyODoxNVrODw_WMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjEwOTAwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNDowNzozM1rOGEKLnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNDowOToxN1rOGEKMOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxNDMwMQ==", "bodyText": "This should probably be a player event. I'd like to get the player here.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407014301", "createdAt": "2020-04-11T04:07:33Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends Event implements Cancellable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c6c80da6c98906f7c9610e38810abe6ad9e2a67"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxNDQ1Ng==", "bodyText": "Sure thing, hang on a second", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407014456", "createdAt": "2020-04-11T04:09:17Z", "author": {"login": "TweepCoding"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends Event implements Cancellable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxNDMwMQ=="}, "originalCommit": {"oid": "9c6c80da6c98906f7c9610e38810abe6ad9e2a67"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjEwOTcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNDowODozMVrOGEKL7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNDoyMzoxMlrOGEKQsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxNDM4MQ==", "bodyText": "Hmm. Maybe we have a pre and post event or something. I don't really like this running entirely and then not doing anything.\nHmm.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407014381", "createdAt": "2020-04-11T04:08:31Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -140,10 +143,14 @@ private void abort() {\n \n     private void finish() {\n         if (running) {\n-            dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n-            dropLocation.getWorld().playEffect(dropLocation, Effect.STEP_SOUND, Material.EMERALD_BLOCK);\n-            dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), output);\n \n+            AncientAltarOutputEvent ancientAltarOutputEvent = new AncientAltarOutputEvent(output, altar);\n+            Bukkit.getPluginManager().callEvent(ancientAltarOutputEvent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c6c80da6c98906f7c9610e38810abe6ad9e2a67"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxNTYwMg==", "bodyText": "Huh? What do you mean?", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407015602", "createdAt": "2020-04-11T04:23:12Z", "author": {"login": "TweepCoding"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -140,10 +143,14 @@ private void abort() {\n \n     private void finish() {\n         if (running) {\n-            dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n-            dropLocation.getWorld().playEffect(dropLocation, Effect.STEP_SOUND, Material.EMERALD_BLOCK);\n-            dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), output);\n \n+            AncientAltarOutputEvent ancientAltarOutputEvent = new AncientAltarOutputEvent(output, altar);\n+            Bukkit.getPluginManager().callEvent(ancientAltarOutputEvent);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxNDM4MQ=="}, "originalCommit": {"oid": "9c6c80da6c98906f7c9610e38810abe6ad9e2a67"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjI3MDc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMToyNFrOGELVlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMToyNFrOGELVlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzIzNg==", "bodyText": "No one-line methods.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033236", "createdAt": "2020-04-11T08:01:24Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarOutputEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() { return handlers; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjI3MDc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMToyOFrOGELVlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMToyOFrOGELVlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzIzOA==", "bodyText": "No one-line methods.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033238", "createdAt": "2020-04-11T08:01:28Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarOutputEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() { return handlers; }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() { return block; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjI3MDk2OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMTo0OFrOGELVqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMTo0OFrOGELVqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzI1OQ==", "bodyText": "Missing documentation", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033259", "createdAt": "2020-04-11T08:01:48Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarOutputEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() { return handlers; }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() { return block; }\n+\n+    /**\n+     * This method returns the item that would be dropped by the altar. {@link ItemStack}\n+     *\n+     * @return the item that would be dropped by the altar. {@link ItemStack}\n+     */\n+    public ItemStack getItem() {\n+        return output;\n+    }\n+\n+    public void setItem(ItemStack output) {\n+        this.output = output;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjI3MTAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMTo1MlrOGELVsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMTo1MlrOGELVsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzI2Ng==", "bodyText": "No one-line methods.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033266", "createdAt": "2020-04-11T08:01:52Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarOutputEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() { return handlers; }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() { return block; }\n+\n+    /**\n+     * This method returns the item that would be dropped by the altar. {@link ItemStack}\n+     *\n+     * @return the item that would be dropped by the altar. {@link ItemStack}\n+     */\n+    public ItemStack getItem() {\n+        return output;\n+    }\n+\n+    public void setItem(ItemStack output) {\n+        this.output = output;\n+    }\n+\n+    @Override\n+    public boolean isCancelled() { return cancelled; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjI3MTE5OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMjoxMlrOGELVxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMjoxMlrOGELVxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzI4NQ==", "bodyText": "No one-line methods.\nAlso rename the parameter \"b\" to something more meaningful like \"cancel\".", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033285", "createdAt": "2020-04-11T08:02:12Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarOutputEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() { return handlers; }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() { return block; }\n+\n+    /**\n+     * This method returns the item that would be dropped by the altar. {@link ItemStack}\n+     *\n+     * @return the item that would be dropped by the altar. {@link ItemStack}\n+     */\n+    public ItemStack getItem() {\n+        return output;\n+    }\n+\n+    public void setItem(ItemStack output) {\n+        this.output = output;\n+    }\n+\n+    @Override\n+    public boolean isCancelled() { return cancelled; }\n+\n+    @Override\n+    public void setCancelled(boolean b) { cancelled = b; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjI3MjA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMzoxOFrOGELWLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMzoxOFrOGELWLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzM4OA==", "bodyText": "Since you are able to modify the output of the item you should also use the output item from that event rather than the original one.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033388", "createdAt": "2020-04-11T08:03:18Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -140,10 +146,14 @@ private void abort() {\n \n     private void finish() {\n         if (running) {\n-            dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n-            dropLocation.getWorld().playEffect(dropLocation, Effect.STEP_SOUND, Material.EMERALD_BLOCK);\n-            dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), output);\n \n+            AncientAltarOutputEvent ancientAltarOutputEvent = new AncientAltarOutputEvent(output, altar, player);\n+            Bukkit.getPluginManager().callEvent(ancientAltarOutputEvent);\n+            if (!ancientAltarOutputEvent.isCancelled()) {\n+                dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n+                dropLocation.getWorld().playEffect(dropLocation, Effect.STEP_SOUND, Material.EMERALD_BLOCK);\n+                dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), output);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjI3MjM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMzozNVrOGELWTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMzozNVrOGELWTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzQyMg==", "bodyText": "That variable name is rather long, might just be \"event\".", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033422", "createdAt": "2020-04-11T08:03:35Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -140,10 +146,14 @@ private void abort() {\n \n     private void finish() {\n         if (running) {\n-            dropLocation.getWorld().playSound(dropLocation, Sound.ENTITY_ZOMBIE_VILLAGER_CURE, 1F, 1F);\n-            dropLocation.getWorld().playEffect(dropLocation, Effect.STEP_SOUND, Material.EMERALD_BLOCK);\n-            dropLocation.getWorld().dropItemNaturally(dropLocation.add(0, -0.5, 0), output);\n \n+            AncientAltarOutputEvent ancientAltarOutputEvent = new AncientAltarOutputEvent(output, altar, player);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjI3MjYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMzo1MVrOGELWaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMzo1MVrOGELWaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzQ0OA==", "bodyText": "This can be final.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033448", "createdAt": "2020-04-11T08:03:51Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -47,13 +51,15 @@\n \n     private boolean running;\n     private int stage;\n+    private Player player;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjI3MzE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowNDoyNlrOGELWpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowNDoyNlrOGELWpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzUwOA==", "bodyText": "I would rather name it \"AncientAltarCraftEvent\" instead of Output.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033508", "createdAt": "2020-04-11T08:04:26Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ */\n+\n+public class AncientAltarOutputEvent extends PlayerEvent implements Cancellable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjI3MzcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowNToxMFrOGELW5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowNToxMFrOGELW5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzU3NQ==", "bodyText": "You can also add some \"@see\" tags here to the AncientAltar task and listener class etc... to mark that they belong to each other.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407033575", "createdAt": "2020-04-11T08:05:10Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarOutputEvent.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjQyMTIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMToxNzoxNlrOGEMcpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMToxNzoxNlrOGEMcpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1MTQyOQ==", "bodyText": "Be consistent with the other this.'s", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407051429", "createdAt": "2020-04-11T11:17:16Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/tasks/AncientAltarTask.java", "diffHunk": "@@ -50,13 +51,15 @@\n \n     private boolean running;\n     private int stage;\n+    private Player player;\n \n-    public AncientAltarTask(Block altar, ItemStack output, List<Block> pedestals, List<ItemStack> items) {\n+    public AncientAltarTask(Block altar, ItemStack output, List<Block> pedestals, List<ItemStack> items, Player p) {\n         this.dropLocation = altar.getLocation().add(0.5, 1.3, 0.5);\n         this.altar = altar;\n         this.output = output;\n         this.pedestals = pedestals;\n         this.items = items;\n+        player = p;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332a017c63246c2ca972e4daceb51f24246eb6c2"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjY2NjMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxNjoxODoyMFrOGEOTDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxNjoxODoyMFrOGEOTDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA4MTc0MA==", "bodyText": "This comment needs to be one line further down. You can't have it start on the same line as /**", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407081740", "createdAt": "2020-04-11T16:18:20Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ * @see AncientAltar\n+ * @see AncientAltarTask\n+ * @see AncientAltarListener\n+ */\n+\n+public class AncientAltarCraftEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarCraftEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() {\n+        return handlers;\n+    }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() {\n+        return block;\n+    }\n+\n+    /**\n+     * This method returns the {@link ItemStack} that would be dropped by the {@link AncientAltar }\n+     *\n+     * @return the {@link ItemStack} that would be dropped by the {@link AncientAltar}\n+     */\n+    public ItemStack getItem() {\n+        return output;\n+    }\n+\n+    /** This method will change the item that would be dropped by the {@link AncientAltar}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a798b0bc8daf3e8df60431d682ee12369b953f7"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjY2NzQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxNjoxOToxN1rOGEOTlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxNjoyNjoxMVrOGEOWUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA4MTg3OQ==", "bodyText": "Maybe rename this to getAltarBlock() to avoid potential confusion.\nOther than that it is ready to be merged!", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407081879", "createdAt": "2020-04-11T16:19:17Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ * @see AncientAltar\n+ * @see AncientAltarTask\n+ * @see AncientAltarListener\n+ */\n+\n+public class AncientAltarCraftEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarCraftEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() {\n+        return handlers;\n+    }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a798b0bc8daf3e8df60431d682ee12369b953f7"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA4MjU3OQ==", "bodyText": ":D", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407082579", "createdAt": "2020-04-11T16:26:11Z", "author": {"login": "TweepCoding"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ * @see AncientAltar\n+ * @see AncientAltarTask\n+ * @see AncientAltarListener\n+ */\n+\n+public class AncientAltarCraftEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The mined {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     *\n+     */\n+\n+    public AncientAltarCraftEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() {\n+        return handlers;\n+    }\n+    /**\n+     * This method returns the main altar's block {@link Block}\n+     *\n+     * @return the main altar's block {@link Block}\n+     */\n+    public Block getBlock() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA4MTg3OQ=="}, "originalCommit": {"oid": "7a798b0bc8daf3e8df60431d682ee12369b953f7"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjk2MTA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMjoyODowMFrOGEQf8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMjoyODowMFrOGEQf8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzExNzgwOA==", "bodyText": "This line needs to go", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407117808", "createdAt": "2020-04-11T22:28:00Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ * @see AncientAltar\n+ * @see AncientAltarTask\n+ * @see AncientAltarListener\n+ */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79737886ac6cf6e25ea2ffb114350f8dc4526ca5"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjk2MTEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMjoyODoxNVrOGEQf_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMjoyODoxNVrOGEQf_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzExNzgyMA==", "bodyText": "And you need a new line before this one.", "url": "https://github.com/Slimefun/Slimefun4/pull/1800#discussion_r407117820", "createdAt": "2020-04-11T22:28:15Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/events/AncientAltarCraftEvent.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.github.thebusybiscuit.slimefun4.api.events;\n+\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.items.altar.AncientAltar;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.tasks.AncientAltarTask;\n+import org.bukkit.block.Block;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Cancellable;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.player.PlayerEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link Event} is fired before an item is dropped by an {@link AncientAltar}.\n+ * Cancelling this event will make the {@link AncientAltar} drop no item after the recipe is finished.\n+ *\n+ * @author Tweep\n+ *\n+ * @see AncientAltar\n+ * @see AncientAltarTask\n+ * @see AncientAltarListener\n+ */\n+\n+public class AncientAltarCraftEvent extends PlayerEvent implements Cancellable {\n+\n+    private static final HandlerList handlers = new HandlerList();\n+    private final Block block;\n+    private ItemStack output;\n+    private boolean cancelled;\n+\n+    /**\n+     * @param block\n+     *            The altar {@link Block}\n+     * @param output\n+     *            The {@link ItemStack} that would be dropped by the ritual\n+     * @param player\n+     *            The {@link Player} that started the ritual.\n+     */\n+    public AncientAltarCraftEvent(ItemStack output, Block block, Player player) {\n+        super(player);\n+        this.block = block;\n+        this.output = output;\n+    }\n+\n+    public static HandlerList getHandlerList() {\n+        return handlers;\n+    }\n+\n+    public HandlerList getHandlers() {\n+        return handlers;\n+    }\n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79737886ac6cf6e25ea2ffb114350f8dc4526ca5"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 478, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}