{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MzM2NDI3", "number": 2384, "reviewThreads": {"totalCount": 39, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDo1NDoyNFrOEqCrhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTozODo0MlrOEq5Mmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTE5NTU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDo1NDoyNFrOHcDmbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMDo1NTozOFrOHcDmww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTE2NA==", "bodyText": "No star imports, please.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499181164", "createdAt": "2020-10-03T20:54:24Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -13,6 +13,7 @@\n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTI1MQ==", "bodyText": "hmm ok that was intellij", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499181251", "createdAt": "2020-10-03T20:55:38Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -13,6 +13,7 @@\n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTE2NA=="}, "originalCommit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTE5OTQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMTowMTo0N1rOHcDoQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMTowNzo0MFrOHcDppw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTYzMw==", "bodyText": "I think the player check should be the first here.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499181633", "createdAt": "2020-10-03T21:01:47Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL) || !(e.getEntity() instanceof Player)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTk5MQ==", "bodyText": "k", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499181991", "createdAt": "2020-10-03T21:07:40Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL) || !(e.getEntity() instanceof Player)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MTYzMw=="}, "originalCommit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTIwMjk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMTowOTowMFrOHcDp-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMTowOTowMFrOHcDp-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjA3NQ==", "bodyText": "I would rather declare this near the other armor stuff.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499182075", "createdAt": "2020-10-03T21:09:00Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "diffHunk": "@@ -838,6 +838,8 @@ private SlimefunItems() {}\n     public static final SlimefunItemStack MAGNESIUM_SALT = new SlimefunItemStack(\"MAGNESIUM_SALT\", Material.SUGAR, \"&cMagnesium Salt\", \"\", \"&7A special type of fuel that can be\", \"&7used in a Magnesium-powered Generator\");\n     public static final SlimefunItemStack MAGNESIUM_GENERATOR = new SlimefunItemStack(\"MAGNESIUM_GENERATOR\", HeadTexture.GENERATOR, \"&cMagnesium-powered Generator\", \"\", LoreBuilder.machine(MachineTier.MEDIUM, MachineType.GENERATOR), LoreBuilder.powerBuffer(128), LoreBuilder.powerPerSecond(36));\n \n+    public static final SlimefunItemStack CRASH_HELMET = new SlimefunItemStack(\"CRASH_HELMET\", Material.IRON_HELMET, \"&5Crash Helmet\", \"\", \"&7This helmet will protect you from\", \"&7crashing while flying elytra.\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTIwNzUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMToxODo1MlrOHcDsOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMToyNjowOFrOHcDt3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjY0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!(e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL) || !(e.getEntity() instanceof Player)) {\n          \n          \n            \n                    if (e.getCause() != EntityDamageEvent.DamageCause.FLY_INTO_WALL || !(e.getEntity() instanceof Player)) {", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499182649", "createdAt": "2020-10-03T21:18:52Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL) || !(e.getEntity() instanceof Player)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MzA2OA==", "bodyText": "@LinoxGH now i need it to check for 2 causes. how would u suggest?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499183068", "createdAt": "2020-10-03T21:26:08Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL) || !(e.getEntity() instanceof Player)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4MjY0OQ=="}, "originalCommit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTIwODM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMToyMDo0NlrOHcDspw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMToyMDo0NlrOHcDspw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4Mjc1OQ==", "bodyText": "I'd have switched places of slime balls and iron ingots.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499182759", "createdAt": "2020-10-03T21:20:46Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -1016,6 +1016,10 @@ public static void setup(@Nonnull SlimefunPlugin plugin) {\n         new PotionEffect[] {new PotionEffect(PotionEffectType.NIGHT_VISION, 600, 20)})\n         .register(plugin);\n \n+        new SlimefunItem(categories.technicalGadgets, SlimefunItems.CRASH_HELMET, RecipeType.ARMOR_FORGE,\n+        new ItemStack[]{new ItemStack(Material.IRON_INGOT), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.SLIME_BALL), new ItemStack(Material.SLIME_BALL), new ItemStack(Material.SLIME_BALL), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.LEATHER_HELMET), new ItemStack(Material.IRON_INGOT)})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23efd62c4961c498cb083786cb6060fff56e60cc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTIxODg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QyMTo0MTozOFrOHcDxtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxMjo0OTo1M1rOHcHZJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4NDA1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n          \n          \n            \n                        e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n          \n          \n            \n                    if (e.getCause() != EntityDamageEvent.DamageCause.FALL &&\n          \n          \n            \n                        e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL) return;", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499184052", "createdAt": "2020-10-03T21:41:38Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE5OTkzMg==", "bodyText": "no im trying to see if the type is not one of those 2", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499199932", "createdAt": "2020-10-04T02:51:36Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4NDA1Mg=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIwMzgwNg==", "bodyText": "Currently you only check if it's not falling or it is crasjing into the wall this would cause it to fire even when player is poisoned...", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499203806", "createdAt": "2020-10-04T04:11:02Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4NDA1Mg=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIwODMyNg==", "bodyText": "@Seggan ^", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499208326", "createdAt": "2020-10-04T05:41:35Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4NDA1Mg=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0MTY4NA==", "bodyText": "@LinoxGH this is supposed to fire when the players posioned. It's the return. Your solution would check only if it's crashing. I included both bc I don't know which one is the kinetic energy one.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499241684", "createdAt": "2020-10-04T12:31:32Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4NDA1Mg=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0MzMwMA==", "bodyText": "Oh I see now", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499243300", "createdAt": "2020-10-04T12:49:53Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4NDA1Mg=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTg2NjkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNjo1NDozNlrOHcIyrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNjo1NDozNlrOHcIyrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjIyMA==", "bodyText": "No need for a hardcoded id, you should probably create a class for this item and do an instanceof check here instead.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499266220", "createdAt": "2020-10-04T16:54:36Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if ((item != null) && (item.getID().equals(\"CRASH_HELMET\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTg2NzQyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNjo1NToxNVrOHcIy8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTowMzo1N1rOHcJg1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjI4OQ==", "bodyText": "Setting the damage is not really good practice, you should rather cancel the event instead (and maybe play a sound effect too?).", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499266289", "createdAt": "2020-10-04T16:55:15Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if ((item != null) && (item.getID().equals(\"CRASH_HELMET\"))) {\n+                e.setDamage(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NzAzNA==", "bodyText": "i tried cancelling... didnt really work for some reason", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499267034", "createdAt": "2020-10-04T17:03:24Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if ((item != null) && (item.getID().equals(\"CRASH_HELMET\"))) {\n+                e.setDamage(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjI4OQ=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NzQ5Mg==", "bodyText": "also what sound effect would u suggest? id think either smth do do with iron or slime", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499267492", "createdAt": "2020-10-04T17:08:14Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if ((item != null) && (item.getID().equals(\"CRASH_HELMET\"))) {\n+                e.setDamage(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjI4OQ=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2OTc3MA==", "bodyText": "I'd try stepping or breaking bedrock or obsidian sound.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499269770", "createdAt": "2020-10-04T17:33:50Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if ((item != null) && (item.getID().equals(\"CRASH_HELMET\"))) {\n+                e.setDamage(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjI4OQ=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3NzIxNQ==", "bodyText": "confirmed: cancelling event you still die from falling form a high place", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499277215", "createdAt": "2020-10-04T18:55:55Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if ((item != null) && (item.getID().equals(\"CRASH_HELMET\"))) {\n+                e.setDamage(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjI4OQ=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3NzQ3Mg==", "bodyText": "confirmed: cancelling event you still die from falling form a high place\n\nAfaik cancelling death event doesn't cancel the death but only cancels the item drops and etc. This is a bug/feature of Spigot.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499277472", "createdAt": "2020-10-04T18:57:52Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if ((item != null) && (item.getID().equals(\"CRASH_HELMET\"))) {\n+                e.setDamage(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjI4OQ=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3NzQ4OA==", "bodyText": "if you dont die you still take damage", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499277488", "createdAt": "2020-10-04T18:58:05Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if ((item != null) && (item.getID().equals(\"CRASH_HELMET\"))) {\n+                e.setDamage(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjI4OQ=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3NzYzOQ==", "bodyText": "if you dont die you still take damage\n\nFrom what I can remember you need to listen to player damage event. It's fired before player dies.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499277639", "createdAt": "2020-10-04T18:59:29Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if ((item != null) && (item.getID().equals(\"CRASH_HELMET\"))) {\n+                e.setDamage(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjI4OQ=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODAzNg==", "bodyText": "Afaik cancelling death event doesn't cancel the death but only cancels the item drops and etc. This is a bug/feature of Spigot.\n\nI meant cancelling the damage event", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499278036", "createdAt": "2020-10-04T19:03:57Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if ((item != null) && (item.getID().equals(\"CRASH_HELMET\"))) {\n+                e.setDamage(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjI4OQ=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTg2ODA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNjo1NjoyMlrOHcIzRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNjo1NjoyMlrOHcIzRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjM3NQ==", "bodyText": "You forgot to check if they researched the item. Slimefun.hasUnlocked(p, SlimefunItem, true)", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499266375", "createdAt": "2020-10-04T16:56:22Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {\n+\n+    public CrashHelmetListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if ((item != null) && (item.getID().equals(\"CRASH_HELMET\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTg2ODMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNjo1Njo0NFrOHcIzZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNzowMzo0MVrOHcI19A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjQwNw==", "bodyText": "Missing javadocs and @author tag.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499266407", "createdAt": "2020-10-04T16:56:44Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NzA2MA==", "bodyText": "ok will do", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499267060", "createdAt": "2020-10-04T17:03:41Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/CrashHelmetListener.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+public class CrashHelmetListener implements Listener {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjQwNw=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTg2OTA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxNjo1Nzo0N1rOHcIzyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODoxODozMlrOHcJQbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjUwNg==", "bodyText": "I don't know :/ I'm not the greatest fan of the name \"Crash Helmet\" but I also can't think of a better one, any ideas?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499266506", "createdAt": "2020-10-04T16:57:47Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "diffHunk": "@@ -56,6 +56,7 @@ private SlimefunItems() {}\n     public static final SlimefunItemStack REINFORCED_CLOTH = new SlimefunItemStack(\"REINFORCED_CLOTH\", Material.PAPER, \"&bReinforced Cloth\", \"\", \"&fThis cloth has been reinforced\", \"&fwith &bLead &fto protect against\", \"&fradioactive substances\");\n     public static final SlimefunItemStack TIN_CAN = new SlimefunItemStack(\"CAN\", HeadTexture.TIN_CAN, \"&fTin Can\");\n     public static final SlimefunItemStack NIGHT_VISION_GOGGLES = new SlimefunItemStack(\"NIGHT_VISION_GOGGLES\", Material.LEATHER_HELMET, Color.BLACK, \"&aNight Vision Goggles\", \"\", \"&9+ Night Vision\");\n+    public static final SlimefunItemStack CRASH_HELMET = new SlimefunItemStack(\"CRASH_HELMET\", Material.IRON_HELMET, \"&5Crash Helmet\", \"\", \"&7This helmet will protect you from\", \"&7crashing while flying elytra.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjgyMw==", "bodyText": "Feather Helmet or Shield Helmet? Idk", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499266823", "createdAt": "2020-10-04T17:01:08Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "diffHunk": "@@ -56,6 +56,7 @@ private SlimefunItems() {}\n     public static final SlimefunItemStack REINFORCED_CLOTH = new SlimefunItemStack(\"REINFORCED_CLOTH\", Material.PAPER, \"&bReinforced Cloth\", \"\", \"&fThis cloth has been reinforced\", \"&fwith &bLead &fto protect against\", \"&fradioactive substances\");\n     public static final SlimefunItemStack TIN_CAN = new SlimefunItemStack(\"CAN\", HeadTexture.TIN_CAN, \"&fTin Can\");\n     public static final SlimefunItemStack NIGHT_VISION_GOGGLES = new SlimefunItemStack(\"NIGHT_VISION_GOGGLES\", Material.LEATHER_HELMET, Color.BLACK, \"&aNight Vision Goggles\", \"\", \"&9+ Night Vision\");\n+    public static final SlimefunItemStack CRASH_HELMET = new SlimefunItemStack(\"CRASH_HELMET\", Material.IRON_HELMET, \"&5Crash Helmet\", \"\", \"&7This helmet will protect you from\", \"&7crashing while flying elytra.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjUwNg=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NzAwNQ==", "bodyText": "Maybe something like Elytra Cap? And then include elytra scales in the recipe?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499267005", "createdAt": "2020-10-04T17:03:02Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "diffHunk": "@@ -56,6 +56,7 @@ private SlimefunItems() {}\n     public static final SlimefunItemStack REINFORCED_CLOTH = new SlimefunItemStack(\"REINFORCED_CLOTH\", Material.PAPER, \"&bReinforced Cloth\", \"\", \"&fThis cloth has been reinforced\", \"&fwith &bLead &fto protect against\", \"&fradioactive substances\");\n     public static final SlimefunItemStack TIN_CAN = new SlimefunItemStack(\"CAN\", HeadTexture.TIN_CAN, \"&fTin Can\");\n     public static final SlimefunItemStack NIGHT_VISION_GOGGLES = new SlimefunItemStack(\"NIGHT_VISION_GOGGLES\", Material.LEATHER_HELMET, Color.BLACK, \"&aNight Vision Goggles\", \"\", \"&9+ Night Vision\");\n+    public static final SlimefunItemStack CRASH_HELMET = new SlimefunItemStack(\"CRASH_HELMET\", Material.IRON_HELMET, \"&5Crash Helmet\", \"\", \"&7This helmet will protect you from\", \"&7crashing while flying elytra.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjUwNg=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NzE3Mg==", "bodyText": "hard hat, safety helmet...", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499267172", "createdAt": "2020-10-04T17:04:50Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "diffHunk": "@@ -56,6 +56,7 @@ private SlimefunItems() {}\n     public static final SlimefunItemStack REINFORCED_CLOTH = new SlimefunItemStack(\"REINFORCED_CLOTH\", Material.PAPER, \"&bReinforced Cloth\", \"\", \"&fThis cloth has been reinforced\", \"&fwith &bLead &fto protect against\", \"&fradioactive substances\");\n     public static final SlimefunItemStack TIN_CAN = new SlimefunItemStack(\"CAN\", HeadTexture.TIN_CAN, \"&fTin Can\");\n     public static final SlimefunItemStack NIGHT_VISION_GOGGLES = new SlimefunItemStack(\"NIGHT_VISION_GOGGLES\", Material.LEATHER_HELMET, Color.BLACK, \"&aNight Vision Goggles\", \"\", \"&9+ Night Vision\");\n+    public static final SlimefunItemStack CRASH_HELMET = new SlimefunItemStack(\"CRASH_HELMET\", Material.IRON_HELMET, \"&5Crash Helmet\", \"\", \"&7This helmet will protect you from\", \"&7crashing while flying elytra.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjUwNg=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2OTk0NQ==", "bodyText": "Barrete or Elytra Barette?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499269945", "createdAt": "2020-10-04T17:35:23Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "diffHunk": "@@ -56,6 +56,7 @@ private SlimefunItems() {}\n     public static final SlimefunItemStack REINFORCED_CLOTH = new SlimefunItemStack(\"REINFORCED_CLOTH\", Material.PAPER, \"&bReinforced Cloth\", \"\", \"&fThis cloth has been reinforced\", \"&fwith &bLead &fto protect against\", \"&fradioactive substances\");\n     public static final SlimefunItemStack TIN_CAN = new SlimefunItemStack(\"CAN\", HeadTexture.TIN_CAN, \"&fTin Can\");\n     public static final SlimefunItemStack NIGHT_VISION_GOGGLES = new SlimefunItemStack(\"NIGHT_VISION_GOGGLES\", Material.LEATHER_HELMET, Color.BLACK, \"&aNight Vision Goggles\", \"\", \"&9+ Night Vision\");\n+    public static final SlimefunItemStack CRASH_HELMET = new SlimefunItemStack(\"CRASH_HELMET\", Material.IRON_HELMET, \"&5Crash Helmet\", \"\", \"&7This helmet will protect you from\", \"&7crashing while flying elytra.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjUwNg=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3MzgzOA==", "bodyText": "ima think about elytra cap (elytra scales is a great idea). ima also make it purple then", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499273838", "createdAt": "2020-10-04T18:18:32Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "diffHunk": "@@ -56,6 +56,7 @@ private SlimefunItems() {}\n     public static final SlimefunItemStack REINFORCED_CLOTH = new SlimefunItemStack(\"REINFORCED_CLOTH\", Material.PAPER, \"&bReinforced Cloth\", \"\", \"&fThis cloth has been reinforced\", \"&fwith &bLead &fto protect against\", \"&fradioactive substances\");\n     public static final SlimefunItemStack TIN_CAN = new SlimefunItemStack(\"CAN\", HeadTexture.TIN_CAN, \"&fTin Can\");\n     public static final SlimefunItemStack NIGHT_VISION_GOGGLES = new SlimefunItemStack(\"NIGHT_VISION_GOGGLES\", Material.LEATHER_HELMET, Color.BLACK, \"&aNight Vision Goggles\", \"\", \"&9+ Night Vision\");\n+    public static final SlimefunItemStack CRASH_HELMET = new SlimefunItemStack(\"CRASH_HELMET\", Material.IRON_HELMET, \"&5Crash Helmet\", \"\", \"&7This helmet will protect you from\", \"&7crashing while flying elytra.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NjUwNg=="}, "originalCommit": {"oid": "d9aceea4d67aadeab0437d8ddecc2bdc7e0f4f10"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTk2MDgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTowNjoyM1rOHcJhvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOToxMTo1OVrOHcJjxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODI3MQ==", "bodyText": "Please don't just move around imports.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499278271", "createdAt": "2020-10-04T19:06:23Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -13,6 +13,42 @@\n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.BackpackListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.BeeListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.BlockListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.BlockPhysicsListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.CargoNodeListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.CoolerListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.ElytraCapListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.DeathpointListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.DebugFishListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.DispenserListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.EnhancedFurnaceListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.EntityInteractionListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.ExplosionsListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.FireworksListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.GadgetsListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.GrapplingHookListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.IronGolemListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.ItemPickupListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MultiBlockListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.PiglinListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.PlayerProfileListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SeismicAxeListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunBootsListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunBowListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunGuideListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunItemConsumeListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunItemListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SoulboundListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.TalismanListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.VampireBladeListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.VanillaMachinesListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.VillagerTradingListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.WitherListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.WorldListener;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107125802cc7ea75b1bdd1e242b786d29dff0a1c"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODc5MA==", "bodyText": "i didnt. my ide did", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499278790", "createdAt": "2020-10-04T19:11:59Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -13,6 +13,42 @@\n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.BackpackListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.BeeListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.BlockListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.BlockPhysicsListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.CargoNodeListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.CoolerListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.ElytraCapListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.DeathpointListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.DebugFishListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.DispenserListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.EnhancedFurnaceListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.EntityInteractionListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.ExplosionsListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.FireworksListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.GadgetsListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.GrapplingHookListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.IronGolemListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.ItemPickupListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.MultiBlockListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.PiglinListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.PlayerProfileListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SeismicAxeListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunBootsListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunBowListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunGuideListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunItemConsumeListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunItemListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.SoulboundListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.TalismanListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.VampireBladeListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.VanillaMachinesListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.VillagerTradingListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.WitherListener;\n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.WorldListener;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODI3MQ=="}, "originalCommit": {"oid": "107125802cc7ea75b1bdd1e242b786d29dff0a1c"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTk2MDk1OnYy", "diffSide": "LEFT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTowNjo0MVrOHcJhzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOToxMzoxNFrOHcJkMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODI4NQ==", "bodyText": "Those imports should have been here.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499278285", "createdAt": "2020-10-04T19:06:41Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -56,41 +92,6 @@\n import io.github.thebusybiscuit.slimefun4.implementation.items.tools.GrapplingHook;\n import io.github.thebusybiscuit.slimefun4.implementation.items.weapons.SeismicAxe;\n import io.github.thebusybiscuit.slimefun4.implementation.items.weapons.VampireBlade;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BackpackListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BeeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BlockListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BlockPhysicsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.CargoNodeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.CoolerListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.DeathpointListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.DebugFishListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.DispenserListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.EnhancedFurnaceListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.EntityInteractionListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.ExplosionsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.FireworksListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.GadgetsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.GrapplingHookListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.IronGolemListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.ItemPickupListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.MultiBlockListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.PiglinListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.PlayerProfileListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SeismicAxeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunBootsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunBowListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunGuideListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunItemConsumeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunItemListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SoulboundListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.TalismanListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.VampireBladeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.VanillaMachinesListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.VillagerTradingListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.WitherListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.WorldListener;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107125802cc7ea75b1bdd1e242b786d29dff0a1c"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODc3Mw==", "bodyText": "hmm no i didnt remove them them still appear in my ide", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499278773", "createdAt": "2020-10-04T19:11:40Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -56,41 +92,6 @@\n import io.github.thebusybiscuit.slimefun4.implementation.items.tools.GrapplingHook;\n import io.github.thebusybiscuit.slimefun4.implementation.items.weapons.SeismicAxe;\n import io.github.thebusybiscuit.slimefun4.implementation.items.weapons.VampireBlade;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BackpackListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BeeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BlockListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BlockPhysicsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.CargoNodeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.CoolerListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.DeathpointListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.DebugFishListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.DispenserListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.EnhancedFurnaceListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.EntityInteractionListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.ExplosionsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.FireworksListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.GadgetsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.GrapplingHookListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.IronGolemListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.ItemPickupListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.MultiBlockListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.PiglinListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.PlayerProfileListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SeismicAxeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunBootsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunBowListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunGuideListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunItemConsumeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunItemListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SoulboundListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.TalismanListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.VampireBladeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.VanillaMachinesListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.VillagerTradingListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.WitherListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.WorldListener;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODI4NQ=="}, "originalCommit": {"oid": "107125802cc7ea75b1bdd1e242b786d29dff0a1c"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODg5OQ==", "bodyText": "hmm no i didnt remove them them still appear in my ide\n\nI mean the imports have been moved.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499278899", "createdAt": "2020-10-04T19:13:14Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -56,41 +92,6 @@\n import io.github.thebusybiscuit.slimefun4.implementation.items.tools.GrapplingHook;\n import io.github.thebusybiscuit.slimefun4.implementation.items.weapons.SeismicAxe;\n import io.github.thebusybiscuit.slimefun4.implementation.items.weapons.VampireBlade;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.AncientAltarListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BackpackListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BeeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BlockListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.BlockPhysicsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.CargoNodeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.CoolerListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.DeathpointListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.DebugFishListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.DispenserListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.EnhancedFurnaceListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.EntityInteractionListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.ExplosionsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.FireworksListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.GadgetsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.GrapplingHookListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.IronGolemListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.ItemPickupListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.MobDropListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.MultiBlockListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.PiglinListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.PlayerProfileListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SeismicAxeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunBootsListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunBowListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunGuideListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunItemConsumeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SlimefunItemListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.SoulboundListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.TalismanListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.VampireBladeListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.VanillaMachinesListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.VillagerTradingListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.WitherListener;\n-import io.github.thebusybiscuit.slimefun4.implementation.listeners.WorldListener;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODI4NQ=="}, "originalCommit": {"oid": "107125802cc7ea75b1bdd1e242b786d29dff0a1c"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTk2MTY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTowNzoyOVrOHcJiHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTowNzoyOVrOHcJiHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODM2Nw==", "bodyText": "An explanation of what the item does would be nice.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499278367", "createdAt": "2020-10-04T19:07:29Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * A class for the Elytra Cap.\n+ *\n+ * @author Seggan\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87a1d3660f03de84949f0787976ccf6e5d7649f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTk2MTk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTowNzo1MlrOHcJiSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMDowMTo0MVrOHcJ1PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODQxMQ==", "bodyText": "Also you could try to use the SlimefunArmorPiece instead.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499278411", "createdAt": "2020-10-04T19:07:52Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * A class for the Elytra Cap.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCap extends SlimefunItem {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87a1d3660f03de84949f0787976ccf6e5d7649f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODY2MA==", "bodyText": "why?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499278660", "createdAt": "2020-10-04T19:10:31Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * A class for the Elytra Cap.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCap extends SlimefunItem {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODQxMQ=="}, "originalCommit": {"oid": "f87a1d3660f03de84949f0787976ccf6e5d7649f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3OTAzMw==", "bodyText": "why?\n\nBecause it's entire purpose is sf armor? And using a centralized api is always easier to maintain? Also it has some performance improvements? Also its use should be more wide-spread?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499279033", "createdAt": "2020-10-04T19:14:52Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * A class for the Elytra Cap.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCap extends SlimefunItem {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODQxMQ=="}, "originalCommit": {"oid": "f87a1d3660f03de84949f0787976ccf6e5d7649f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3OTE3OQ==", "bodyText": "okokok", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499279179", "createdAt": "2020-10-04T19:16:07Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * A class for the Elytra Cap.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCap extends SlimefunItem {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODQxMQ=="}, "originalCommit": {"oid": "f87a1d3660f03de84949f0787976ccf6e5d7649f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3OTQyOA==", "bodyText": "okokok\n\nBut this isn't a necessity. Btw you could do this by adding a new ProtectionType called CrashProtection. I'm more than willing to help you in #programming-help channel.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499279428", "createdAt": "2020-10-04T19:19:05Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * A class for the Elytra Cap.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCap extends SlimefunItem {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODQxMQ=="}, "originalCommit": {"oid": "f87a1d3660f03de84949f0787976ccf6e5d7649f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4MzI2MQ==", "bodyText": "thnaks", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499283261", "createdAt": "2020-10-04T20:01:41Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * A class for the Elytra Cap.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCap extends SlimefunItem {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODQxMQ=="}, "originalCommit": {"oid": "f87a1d3660f03de84949f0787976ccf6e5d7649f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTk2MzI4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTowOTo0MFrOHcJi_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTowOTo0MFrOHcJi_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3ODU5MA==", "bodyText": "Maybe make the crashing damage the helmet? This would be nice to add.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499278590", "createdAt": "2020-10-04T19:09:40Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            if (!Slimefun.hasUnlocked(p, stack, true)) return;\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (item instanceof ElytraCap) {\n+                e.setDamage(0);\n+                p.playSound(p.getLocation(), Sound.BLOCK_STONE_HIT, 20, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87a1d3660f03de84949f0787976ccf6e5d7649f"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjA1NTI0OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMToyNzo0MlrOHcKR8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwMDowNzoyMFrOHcLDSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MDYwOA==", "bodyText": "This is now redundant.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499290608", "createdAt": "2020-10-04T21:27:42Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.Damageable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMzI0Mg==", "bodyText": "how? other than the damageable they are all used", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499303242", "createdAt": "2020-10-05T00:07:20Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.Damageable;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MDYwOA=="}, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjA1NTQ5OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMToyODoyN1rOHcKSHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMzoyOTowMlrOHcK3IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MDY1NQ==", "bodyText": "Why is this item in Technical Gadgets category? Is it random?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499290655", "createdAt": "2020-10-04T21:28:27Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -1016,6 +1017,10 @@ public static void setup(@Nonnull SlimefunPlugin plugin) {\n         new PotionEffect[] {new PotionEffect(PotionEffectType.NIGHT_VISION, 600, 20)})\n         .register(plugin);\n \n+        new ElytraCap(categories.technicalGadgets, SlimefunItems.ELYTRA_CAP, RecipeType.ARMOR_FORGE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMDEyOA==", "bodyText": "On discord it was suggested to put in technical gadgets", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499300128", "createdAt": "2020-10-04T23:29:02Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -1016,6 +1017,10 @@ public static void setup(@Nonnull SlimefunPlugin plugin) {\n         new PotionEffect[] {new PotionEffect(PotionEffectType.NIGHT_VISION, 600, 20)})\n         .register(plugin);\n \n+        new ElytraCap(categories.technicalGadgets, SlimefunItems.ELYTRA_CAP, RecipeType.ARMOR_FORGE,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MDY1NQ=="}, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjA3NzI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowMTowM1rOHcKc-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowMTowM1rOHcKc-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzQzMw==", "bodyText": "*flying with an Elytra", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293433", "createdAt": "2020-10-04T22:01:03Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunItems.java", "diffHunk": "@@ -56,6 +56,7 @@ private SlimefunItems() {}\n     public static final SlimefunItemStack REINFORCED_CLOTH = new SlimefunItemStack(\"REINFORCED_CLOTH\", Material.PAPER, \"&bReinforced Cloth\", \"\", \"&fThis cloth has been reinforced\", \"&fwith &bLead &fto protect against\", \"&fradioactive substances\");\n     public static final SlimefunItemStack TIN_CAN = new SlimefunItemStack(\"CAN\", HeadTexture.TIN_CAN, \"&fTin Can\");\n     public static final SlimefunItemStack NIGHT_VISION_GOGGLES = new SlimefunItemStack(\"NIGHT_VISION_GOGGLES\", Material.LEATHER_HELMET, Color.BLACK, \"&aNight Vision Goggles\", \"\", \"&9+ Night Vision\");\n+    public static final SlimefunItemStack ELYTRA_CAP = new SlimefunItemStack(\"ELYTRA_CAP\", Material.LEATHER_HELMET, Color.PURPLE, \"&5Elytra Cap\", \"\", \"&7This helmet will protect you from\", \"&7crashing while flying elytra.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjA3NzUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowMTozMlrOHcKdHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowMTozMlrOHcKdHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzQ2OQ==", "bodyText": "*an Elytra", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293469", "createdAt": "2020-10-04T22:01:32Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.potion.PotionEffect;\n+\n+/**\n+ * The {@link ElytraCap} negates damage taken when crashing into a wall using elytra.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjA3ODk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowMzo1MlrOHcKd0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowMzo1MlrOHcKd0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzY0OQ==", "bodyText": "You should add a parameter nonnull default annotation here", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293649", "createdAt": "2020-10-04T22:03:52Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.potion.PotionEffect;\n+\n+/**\n+ * The {@link ElytraCap} negates damage taken when crashing into a wall using elytra.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCap extends SlimefunArmorPiece implements DamageableItem {\n+\n+    public ElytraCap(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, PotionEffect[] effects) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjA3OTIzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowNDoyMlrOHcKd-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwMDowMzoxN1rOHcLCEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzY5MA==", "bodyText": "Also since this isn't gonna have potion effects you could remove the last parameter here, why does this extend SlimefunArmorPiece anyway?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293690", "createdAt": "2020-10-04T22:04:22Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.potion.PotionEffect;\n+\n+/**\n+ * The {@link ElytraCap} negates damage taken when crashing into a wall using elytra.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCap extends SlimefunArmorPiece implements DamageableItem {\n+\n+    public ElytraCap(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, PotionEffect[] effects) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMjA4MQ==", "bodyText": "@LinoxGH told me to in #2384 (comment)", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499302081", "createdAt": "2020-10-04T23:52:36Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.potion.PotionEffect;\n+\n+/**\n+ * The {@link ElytraCap} negates damage taken when crashing into a wall using elytra.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCap extends SlimefunArmorPiece implements DamageableItem {\n+\n+    public ElytraCap(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, PotionEffect[] effects) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzY5MA=="}, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMjkzMA==", "bodyText": "also i have plans to turn this into an armor set", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499302930", "createdAt": "2020-10-05T00:03:17Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.potion.PotionEffect;\n+\n+/**\n+ * The {@link ElytraCap} negates damage taken when crashing into a wall using elytra.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCap extends SlimefunArmorPiece implements DamageableItem {\n+\n+    public ElytraCap(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, PotionEffect[] effects) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzY5MA=="}, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjA3OTU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/ResearchSetup.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowNDo1N1rOHcKeJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowNDo1N1rOHcKeJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzczNA==", "bodyText": "The key should be renamed.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293734", "createdAt": "2020-10-04T22:04:57Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/ResearchSetup.java", "diffHunk": "@@ -276,6 +276,7 @@ public static void setupResearches() {\n         register(\"climbing_pick\", 265, \"Block Raider\", 20, SlimefunItems.CLIMBING_PICK);\n         register(\"even_higher_tier_capacitors\", 266, \"Tier 3 Capacitors\", 40, SlimefunItems.ENERGIZED_CAPACITOR);\n         register(\"caveman_talisman\", 267, \"Talisman of the Caveman\", 20, SlimefunItems.TALISMAN_CAVEMAN);\n+        register(\"crash_helmet\", 268, \"Crash Gear\", 20, SlimefunItems.ELYTRA_CAP);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjA3OTkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowNToxMlrOHcKeUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOTo0NzozM1rOHcVgkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5Mzc3OQ==", "bodyText": "This is more like a magical gadget now", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293779", "createdAt": "2020-10-04T22:05:12Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -1016,6 +1017,10 @@ public static void setup(@Nonnull SlimefunPlugin plugin) {\n         new PotionEffect[] {new PotionEffect(PotionEffectType.NIGHT_VISION, 600, 20)})\n         .register(plugin);\n \n+        new ElytraCap(categories.technicalGadgets, SlimefunItems.ELYTRA_CAP, RecipeType.ARMOR_FORGE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3NDU3OQ==", "bodyText": "Still should be in magical gadgets.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499474579", "createdAt": "2020-10-05T09:47:33Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -1016,6 +1017,10 @@ public static void setup(@Nonnull SlimefunPlugin plugin) {\n         new PotionEffect[] {new PotionEffect(PotionEffectType.NIGHT_VISION, 600, 20)})\n         .register(plugin);\n \n+        new ElytraCap(categories.technicalGadgets, SlimefunItems.ELYTRA_CAP, RecipeType.ARMOR_FORGE,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5Mzc3OQ=="}, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjA4MDAyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/languages/researches_en.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowNToyM1rOHcKeXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowNToyM1rOHcKeXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5Mzc5MQ==", "bodyText": "Update the key (and maybe the name)", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293791", "createdAt": "2020-10-04T22:05:23Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/resources/languages/researches_en.yml", "diffHunk": "@@ -244,3 +244,4 @@ slimefun:\n   tape_measure: Tape Measure\n   iron_golem_assembler: Automated Iron Golems\n   villager_rune: Reset Villager Trades\n+  crash_helmet: Crash Gear", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjA4MDM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowNjowOFrOHcKekA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowNjowOFrOHcKekA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5Mzg0MA==", "bodyText": "DON'T.\nI explicitly told you to use the one where you pass the SlimefunItem because now you're just doing SlimefunItem.getByItem(stack); twice...", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293840", "createdAt": "2020-10-04T22:06:08Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.Damageable;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            if (!Slimefun.hasUnlocked(p, stack, true)) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjA4MDcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowNjo0MVrOHcKevg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMzo1MzoyOVrOHcK_Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5Mzg4Ng==", "bodyText": "Why 20?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293886", "createdAt": "2020-10-04T22:06:41Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.Damageable;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            if (!Slimefun.hasUnlocked(p, stack, true)) return;\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (item instanceof ElytraCap) {\n+                e.setDamage(0);\n+                p.playSound(p.getLocation(), Sound.BLOCK_STONE_HIT, 20, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwMjE3MA==", "bodyText": "I could barely hear it at 10", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499302170", "createdAt": "2020-10-04T23:53:29Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.Damageable;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            if (!Slimefun.hasUnlocked(p, stack, true)) return;\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (item instanceof ElytraCap) {\n+                e.setDamage(0);\n+                p.playSound(p.getLocation(), Sound.BLOCK_STONE_HIT, 20, 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5Mzg4Ng=="}, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjA4MDk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMjowNzowNlrOHcKe5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwMDo0Mjo1NlrOHcLQvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzkyNg==", "bodyText": "You could override the damageItem method and put this check there", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499293926", "createdAt": "2020-10-04T22:07:06Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.Damageable;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            if (!Slimefun.hasUnlocked(p, stack, true)) return;\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (item instanceof ElytraCap) {\n+                e.setDamage(0);\n+                p.playSound(p.getLocation(), Sound.BLOCK_STONE_HIT, 20, 1);\n+                if (p.getGameMode() != GameMode.CREATIVE) {\n+                    ((ElytraCap) item).damageItem(p, stack);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMwNjY4NA==", "bodyText": "due to #2384 (comment) i have to generalize it so i cant do what you requested", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499306684", "createdAt": "2020-10-05T00:42:56Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.Damageable;\n+\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            if (!Slimefun.hasUnlocked(p, stack, true)) return;\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (item instanceof ElytraCap) {\n+                e.setDamage(0);\n+                p.playSound(p.getLocation(), Sound.BLOCK_STONE_HIT, 20, 1);\n+                if (p.getGameMode() != GameMode.CREATIVE) {\n+                    ((ElytraCap) item).damageItem(p, stack);\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MzkyNg=="}, "originalCommit": {"oid": "8bbef4c9110b6c20774d9c53e5d5e7a63166c9a8"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzI5NDQ5OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOTo0Njo1OVrOHcVfWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzo1ODozMlrOHcn1sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3NDI2NQ==", "bodyText": "No no no no, there is a method like ProtectiveArmor#hasProtectionAgainst() or so this should be used.\nAnd please stop with this excessive use of return; statements and inverse conditions, that's not clean at all.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499474265", "createdAt": "2020-10-05T09:46:59Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (!Slimefun.hasUnlocked(p, item, true)) return;\n+            if (item instanceof ProtectiveArmor) {\n+                if (!Arrays.asList(((ProtectiveArmor) item).getProtectionTypes())\n+                    .contains(ProtectionType.FLYING_INTO_WALL)) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f1bddb7590e2edb6d09d120cb538d7412216335"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU2OTU0Ng==", "bodyText": "So invert the condition and convert to normal if?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499569546", "createdAt": "2020-10-05T12:44:10Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (!Slimefun.hasUnlocked(p, item, true)) return;\n+            if (item instanceof ProtectiveArmor) {\n+                if (!Arrays.asList(((ProtectiveArmor) item).getProtectionTypes())\n+                    .contains(ProtectionType.FLYING_INTO_WALL)) return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3NDI2NQ=="}, "originalCommit": {"oid": "7f1bddb7590e2edb6d09d120cb538d7412216335"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY2Mzc2Mg==", "bodyText": "i do not see any ProtectiveArmor#hasProtectionAgainst()", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499663762", "createdAt": "2020-10-05T14:58:42Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (!Slimefun.hasUnlocked(p, item, true)) return;\n+            if (item instanceof ProtectiveArmor) {\n+                if (!Arrays.asList(((ProtectiveArmor) item).getProtectionTypes())\n+                    .contains(ProtectionType.FLYING_INTO_WALL)) return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3NDI2NQ=="}, "originalCommit": {"oid": "7f1bddb7590e2edb6d09d120cb538d7412216335"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY2NjMzNQ==", "bodyText": "It may be in Slimefun class or sth. Check hazmat suit code.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499666335", "createdAt": "2020-10-05T15:02:09Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (!Slimefun.hasUnlocked(p, item, true)) return;\n+            if (item instanceof ProtectiveArmor) {\n+                if (!Arrays.asList(((ProtectiveArmor) item).getProtectionTypes())\n+                    .contains(ProtectionType.FLYING_INTO_WALL)) return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3NDI2NQ=="}, "originalCommit": {"oid": "7f1bddb7590e2edb6d09d120cb538d7412216335"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3NDg5Ng==", "bodyText": "@Seggan PlayerProfile#hasFullProtectionAgainst()\nhttps://github.com/Slimefun/Slimefun4/blob/master/src/main/java/io/github/thebusybiscuit/slimefun4/api/player/PlayerProfile.java#L471", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499774896", "createdAt": "2020-10-05T17:58:32Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCapListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCapListener implements Listener {\n+\n+    public ElytraCapListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (!Slimefun.hasUnlocked(p, item, true)) return;\n+            if (item instanceof ProtectiveArmor) {\n+                if (!Arrays.asList(((ProtectiveArmor) item).getProtectionTypes())\n+                    .contains(ProtectionType.FLYING_INTO_WALL)) return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3NDI2NQ=="}, "originalCommit": {"oid": "7f1bddb7590e2edb6d09d120cb538d7412216335"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTIxMTQ2OnYy", "diffSide": "LEFT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODowMTozNlrOHcn8WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODowMTozNlrOHcn8WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3NjYwMQ==", "bodyText": "We don't want to mix imports with different purposes.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499776601", "createdAt": "2020-10-05T18:01:36Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -12,7 +12,6 @@\n \n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e2b9ab3b694f1e750fafc911ab6ea5e4ff33c4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTc3NjAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo1NToxMlrOHctdIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo1NToxMlrOHctdIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg2NjkxMg==", "bodyText": "This can/should be final.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499866912", "createdAt": "2020-10-05T20:55:12Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * The {@link ElytraCap} negates damage taken when crashing into a wall using an elytra.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCap extends SlimefunArmorPiece implements DamageableItem, ProtectiveArmor {\n+\n+    private NamespacedKey key;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e2b9ab3b694f1e750fafc911ab6ea5e4ff33c4"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTc3Nzc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo1NTo0NlrOHcteQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo1NTo0NlrOHcteQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg2NzIwMQ==", "bodyText": "You could add an @see ElytraCapListener here to link to it", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499867201", "createdAt": "2020-10-05T20:55:46Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * The {@link ElytraCap} negates damage taken when crashing into a wall using an elytra.\n+ *\n+ * @author Seggan", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e2b9ab3b694f1e750fafc911ab6ea5e4ff33c4"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTkzMjc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMTo0OTo0NlrOHcu-YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMTo0OTo0NlrOHcu-YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg5MTgwOA==", "bodyText": "You should just import this instead", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499891808", "createdAt": "2020-10-05T21:49:46Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/ElytraCap.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.armor;\n+\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * The {@link ElytraCap} negates damage taken when crashing into a wall using an elytra.\n+ *\n+ * @author Seggan\n+ *\n+ * @see io.github.thebusybiscuit.slimefun4.implementation.listeners.ElytraCrashListener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db6295616e9e7ef3ed891c41ea0b2b9d57765ed5"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMDAyNDg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjoyNjoyM1rOHcv1MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjoyNjoyM1rOHcv1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNTg0MQ==", "bodyText": "These three lines should be moved further down, the PlayerProfile caches the armor too, so you can directly access the item that way and save a ton of performance too.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r499905841", "createdAt": "2020-10-05T22:26:23Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+import java.util.Optional;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCrashListener implements Listener {\n+\n+    public ElytraCrashListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            ItemStack stack = p.getInventory().getHelmet();\n+            SlimefunItem item = SlimefunItem.getByItem(stack);\n+            if (!Slimefun.hasUnlocked(p, item, true)) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db6295616e9e7ef3ed891c41ea0b2b9d57765ed5"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDA2OTg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOToyMToxNFrOHdWjfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTozODo1OVrOHdXIPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MDI4NQ==", "bodyText": "Why is this import up here btw and not with the rest?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r500540285", "createdAt": "2020-10-06T19:21:14Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -5,6 +5,7 @@\n \n import javax.annotation.Nonnull;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1ede58f85ad6d51d2229418f859c432eaf90fa4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0OTAwMw==", "bodyText": "dunno", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r500549003", "createdAt": "2020-10-06T19:37:38Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -5,6 +5,7 @@\n \n import javax.annotation.Nonnull;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MDI4NQ=="}, "originalCommit": {"oid": "d1ede58f85ad6d51d2229418f859c432eaf90fa4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0OTY5NA==", "bodyText": "Then move it back down to the rest?", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r500549694", "createdAt": "2020-10-06T19:38:59Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/setup/SlimefunItemSetup.java", "diffHunk": "@@ -5,6 +5,7 @@\n \n import javax.annotation.Nonnull;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MDI4NQ=="}, "originalCommit": {"oid": "d1ede58f85ad6d51d2229418f859c432eaf90fa4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDA3NTg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOToyMzowMVrOHdWnPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTozODowNVrOHdXGfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MTI0NA==", "bodyText": "This line is redundant, it's already done in #hashasFullProtectionAgainst", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r500541244", "createdAt": "2020-10-06T19:23:01Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.api.items.HashedArmorpiece;\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+import java.util.Optional;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCrashListener implements Listener {\n+\n+    public ElytraCrashListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            Optional<PlayerProfile> optional = PlayerProfile.find(p);\n+            if (!optional.isPresent()) {\n+                PlayerProfile.request(p);\n+                return;\n+            }\n+            PlayerProfile profile = optional.get();\n+            HashedArmorpiece helmet = profile.getArmor()[0];\n+            SlimefunItem item;\n+            if (helmet.getItem().isPresent()) {\n+                item = helmet.getItem().get();\n+            } else {\n+                return;\n+            }\n+            if (Slimefun.hasUnlocked(p, item, true)) {\n+                if (item instanceof ProtectiveArmor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1ede58f85ad6d51d2229418f859c432eaf90fa4"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0OTI0NQ==", "bodyText": "already done (noticed it myself)", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r500549245", "createdAt": "2020-10-06T19:38:05Z", "author": {"login": "Seggan"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.api.items.HashedArmorpiece;\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+import java.util.Optional;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCrashListener implements Listener {\n+\n+    public ElytraCrashListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            Optional<PlayerProfile> optional = PlayerProfile.find(p);\n+            if (!optional.isPresent()) {\n+                PlayerProfile.request(p);\n+                return;\n+            }\n+            PlayerProfile profile = optional.get();\n+            HashedArmorpiece helmet = profile.getArmor()[0];\n+            SlimefunItem item;\n+            if (helmet.getItem().isPresent()) {\n+                item = helmet.getItem().get();\n+            } else {\n+                return;\n+            }\n+            if (Slimefun.hasUnlocked(p, item, true)) {\n+                if (item instanceof ProtectiveArmor) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MTI0NA=="}, "originalCommit": {"oid": "d1ede58f85ad6d51d2229418f859c432eaf90fa4"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDA3NzkwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOToyMzo0MVrOHdWofA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOToyMzo0MVrOHdWofA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MTU2NA==", "bodyText": "That's just really ugly, simply do an if statement and put the rest inside the brackets of that if statement.", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r500541564", "createdAt": "2020-10-06T19:23:41Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.api.items.HashedArmorpiece;\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+import java.util.Optional;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCrashListener implements Listener {\n+\n+    public ElytraCrashListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            Optional<PlayerProfile> optional = PlayerProfile.find(p);\n+            if (!optional.isPresent()) {\n+                PlayerProfile.request(p);\n+                return;\n+            }\n+            PlayerProfile profile = optional.get();\n+            HashedArmorpiece helmet = profile.getArmor()[0];\n+            SlimefunItem item;\n+            if (helmet.getItem().isPresent()) {\n+                item = helmet.getItem().get();\n+            } else {\n+                return;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1ede58f85ad6d51d2229418f859c432eaf90fa4"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDA3ODU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOToyMzo1NlrOHdWo8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOToyMzo1NlrOHdWo8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MTY4Mw==", "bodyText": "Also you can merge these statements with &&", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r500541683", "createdAt": "2020-10-06T19:23:56Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.api.items.HashedArmorpiece;\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+import java.util.Optional;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCrashListener implements Listener {\n+\n+    public ElytraCrashListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            Optional<PlayerProfile> optional = PlayerProfile.find(p);\n+            if (!optional.isPresent()) {\n+                PlayerProfile.request(p);\n+                return;\n+            }\n+            PlayerProfile profile = optional.get();\n+            HashedArmorpiece helmet = profile.getArmor()[0];\n+            SlimefunItem item;\n+            if (helmet.getItem().isPresent()) {\n+                item = helmet.getItem().get();\n+            } else {\n+                return;\n+            }\n+            if (Slimefun.hasUnlocked(p, item, true)) {\n+                if (item instanceof ProtectiveArmor) {\n+                    if (profile.hasFullProtectionAgainst(ProtectionType.FLYING_INTO_WALL)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1ede58f85ad6d51d2229418f859c432eaf90fa4"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDEyNzYzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTozODo0MlrOHdXHpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOTozODo0MlrOHdXHpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0OTU0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        SlimefunItem item;\n          \n          \n            \n                        if (helmet.getItem().isPresent()) {\n          \n          \n            \n                            item = helmet.getItem().get();\n          \n          \n            \n            \n          \n          \n            \n                        if (helmet.getItem().isPresent()) {\n          \n          \n            \n                            SlimefunItem item = helmet.getItem().get();", "url": "https://github.com/Slimefun/Slimefun4/pull/2384#discussion_r500549543", "createdAt": "2020-10-06T19:38:42Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ElytraCrashListener.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.api.items.HashedArmorpiece;\n+import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.DamageableItem;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectionType;\n+import io.github.thebusybiscuit.slimefun4.core.attributes.ProtectiveArmor;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.armor.ElytraCap;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.Slimefun;\n+import org.bukkit.GameMode;\n+import org.bukkit.Sound;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityDamageEvent;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import java.util.Arrays;\n+import java.util.Optional;\n+\n+/**\n+ * The {@link Listener} for the {@link ElytraCap}.\n+ *\n+ * @author Seggan\n+ */\n+public class ElytraCrashListener implements Listener {\n+\n+    public ElytraCrashListener(@Nonnull SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onPlayerCrash(EntityDamageEvent e) {\n+        if (!(e.getEntity() instanceof Player)) return;\n+        if (!(e.getCause() == EntityDamageEvent.DamageCause.FALL ||\n+            e.getCause() == EntityDamageEvent.DamageCause.FLY_INTO_WALL)) return;\n+\n+        Player p = (Player) e.getEntity();\n+        if (p.isGliding()) {\n+            Optional<PlayerProfile> optional = PlayerProfile.find(p);\n+            if (!optional.isPresent()) {\n+                PlayerProfile.request(p);\n+                return;\n+            }\n+            PlayerProfile profile = optional.get();\n+            HashedArmorpiece helmet = profile.getArmor()[0];\n+            SlimefunItem item;\n+            if (helmet.getItem().isPresent()) {\n+                item = helmet.getItem().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20aa5d49dc327745f65c5db9a3079a830f522b76"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 208, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}