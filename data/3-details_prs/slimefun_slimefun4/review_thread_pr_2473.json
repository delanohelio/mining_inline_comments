{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNTA0NDc0", "number": 2473, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDo0NzozNFrOEvQUUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDo0ODozNVrOEvQVvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTg1ODcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/ArmorForge.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDo0NzozNFrOHkIglA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDo0NzozNFrOHkIglA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1MDE5Ng==", "bodyText": "This could use some annotations.", "url": "https://github.com/Slimefun/Slimefun4/pull/2473#discussion_r507650196", "createdAt": "2020-10-19T10:47:34Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/ArmorForge.java", "diffHunk": "@@ -71,26 +66,51 @@ private boolean isCraftable(Inventory inv, ItemStack[] recipe) {\n         return true;\n     }\n \n-    private void craft(Player p, ItemStack output, Inventory inv, Inventory outputInv) {\n-        for (int j = 0; j < 9; j++) {\n-            ItemStack item = inv.getContents()[j];\n+    private Inventory createVirtualInventory(Inventory inv) {\n+        Inventory fakeInv = Bukkit.createInventory(null, 9, \"Fake Inventory\");\n+\n+        for (int j = 0; j < inv.getContents().length; j++) {\n+            ItemStack stack = inv.getContents()[j];\n \n-            if (item != null && item.getType() != Material.AIR) {\n-                ItemUtils.consumeItem(item, true);\n+            if (stack != null) {\n+                stack = stack.clone();\n+                ItemUtils.consumeItem(stack, true);\n             }\n+\n+            fakeInv.setItem(j, stack);\n         }\n \n-        for (int j = 0; j < 4; j++) {\n-            int current = j;\n+        return fakeInv;\n+    }\n+\n+    private void craft(Player p, ItemStack output, Inventory inv, Block dispenser) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35fc23c428a7bbeefde12f3e4c7c263a09bbd281"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTg2MjM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/ArmorForge.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDo0ODozNVrOHkIi1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo0NDozNlrOHkc1aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1MDc3NQ==", "bodyText": "Is this method copied from anywhere?\nI think it would make sense to make it a static utility method or so since we would otherwise face a lot of redundancies and duplications.", "url": "https://github.com/Slimefun/Slimefun4/pull/2473#discussion_r507650775", "createdAt": "2020-10-19T10:48:35Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/ArmorForge.java", "diffHunk": "@@ -71,26 +66,51 @@ private boolean isCraftable(Inventory inv, ItemStack[] recipe) {\n         return true;\n     }\n \n-    private void craft(Player p, ItemStack output, Inventory inv, Inventory outputInv) {\n-        for (int j = 0; j < 9; j++) {\n-            ItemStack item = inv.getContents()[j];\n+    private Inventory createVirtualInventory(Inventory inv) {\n+        Inventory fakeInv = Bukkit.createInventory(null, 9, \"Fake Inventory\");\n+\n+        for (int j = 0; j < inv.getContents().length; j++) {\n+            ItemStack stack = inv.getContents()[j];\n \n-            if (item != null && item.getType() != Material.AIR) {\n-                ItemUtils.consumeItem(item, true);\n+            if (stack != null) {\n+                stack = stack.clone();\n+                ItemUtils.consumeItem(stack, true);\n             }\n+\n+            fakeInv.setItem(j, stack);\n         }\n \n-        for (int j = 0; j < 4; j++) {\n-            int current = j;\n+        return fakeInv;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35fc23c428a7bbeefde12f3e4c7c263a09bbd281"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkzNDM0OQ==", "bodyText": "Is this method copied from anywhere?\n\nYes, from BackpackCrafter: \n  \n    \n      Slimefun4/src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/BackpackCrafter.java\n    \n    \n         Line 43\n      in\n      c9adba2\n    \n    \n    \n    \n\n        \n          \n           protected Inventory createVirtualInventory(Inventory inv) { \n        \n    \n  \n\n\nHow do I tackle this? Make ArmorForge extends BackpackCrafter instead of MultiBlockMachine since latter is already extended in BackpackCrafter. Sorry. I know its messy but I am learning and loving it so far :D", "url": "https://github.com/Slimefun/Slimefun4/pull/2473#discussion_r507934349", "createdAt": "2020-10-19T17:39:12Z", "author": {"login": "CURVX"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/ArmorForge.java", "diffHunk": "@@ -71,26 +66,51 @@ private boolean isCraftable(Inventory inv, ItemStack[] recipe) {\n         return true;\n     }\n \n-    private void craft(Player p, ItemStack output, Inventory inv, Inventory outputInv) {\n-        for (int j = 0; j < 9; j++) {\n-            ItemStack item = inv.getContents()[j];\n+    private Inventory createVirtualInventory(Inventory inv) {\n+        Inventory fakeInv = Bukkit.createInventory(null, 9, \"Fake Inventory\");\n+\n+        for (int j = 0; j < inv.getContents().length; j++) {\n+            ItemStack stack = inv.getContents()[j];\n \n-            if (item != null && item.getType() != Material.AIR) {\n-                ItemUtils.consumeItem(item, true);\n+            if (stack != null) {\n+                stack = stack.clone();\n+                ItemUtils.consumeItem(stack, true);\n             }\n+\n+            fakeInv.setItem(j, stack);\n         }\n \n-        for (int j = 0; j < 4; j++) {\n-            int current = j;\n+        return fakeInv;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1MDc3NQ=="}, "originalCommit": {"oid": "35fc23c428a7bbeefde12f3e4c7c263a09bbd281"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MzIwOQ==", "bodyText": "I think making it extend BackpackCrafter should be fine, even though the BackpackCrafter class might need a new name after this XD", "url": "https://github.com/Slimefun/Slimefun4/pull/2473#discussion_r507983209", "createdAt": "2020-10-19T18:44:36Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/ArmorForge.java", "diffHunk": "@@ -71,26 +66,51 @@ private boolean isCraftable(Inventory inv, ItemStack[] recipe) {\n         return true;\n     }\n \n-    private void craft(Player p, ItemStack output, Inventory inv, Inventory outputInv) {\n-        for (int j = 0; j < 9; j++) {\n-            ItemStack item = inv.getContents()[j];\n+    private Inventory createVirtualInventory(Inventory inv) {\n+        Inventory fakeInv = Bukkit.createInventory(null, 9, \"Fake Inventory\");\n+\n+        for (int j = 0; j < inv.getContents().length; j++) {\n+            ItemStack stack = inv.getContents()[j];\n \n-            if (item != null && item.getType() != Material.AIR) {\n-                ItemUtils.consumeItem(item, true);\n+            if (stack != null) {\n+                stack = stack.clone();\n+                ItemUtils.consumeItem(stack, true);\n             }\n+\n+            fakeInv.setItem(j, stack);\n         }\n \n-        for (int j = 0; j < 4; j++) {\n-            int current = j;\n+        return fakeInv;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1MDc3NQ=="}, "originalCommit": {"oid": "35fc23c428a7bbeefde12f3e4c7c263a09bbd281"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 264, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}