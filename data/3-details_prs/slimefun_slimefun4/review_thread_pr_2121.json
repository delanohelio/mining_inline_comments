{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NTk3NzMx", "number": 2121, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMDozMDowNFrOESCkJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMTo0MTo0MVrOESC2hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzUxODQ2OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ItemPickupListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMDozMDowNFrOG3EDSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMDozMTowM1rOG3EDkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5MTI0MQ==", "bodyText": "Enum comparisons should be done using == instead of .equals() as it allows the JVM to do premature eliminations during compiler-time rather than runtime.", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460391241", "createdAt": "2020-07-25T10:30:04Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ItemPickupListener.java", "diffHunk": "@@ -30,6 +34,12 @@ public void onEntityPickup(EntityPickupItemEvent e) {\n         else if (e.getItem().getItemStack().hasItemMeta() && e.getItem().getItemStack().getItemMeta().hasDisplayName() && e.getItem().getItemStack().getItemMeta().getDisplayName().startsWith(ITEM_PREFIX)) {\n             e.setCancelled(true);\n             e.getItem().remove();\n+        } else if (SlimefunPlugin.getMinecraftVersion().isAtLeast(MinecraftVersion.MINECRAFT_1_16)) {\n+            if (e.getEntityType().equals(EntityType.PIGLIN)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17a68ddcf507fce0d73708d22fb1169d7706f0ac"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5MTMxMw==", "bodyText": "Got it", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460391313", "createdAt": "2020-07-25T10:31:03Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/ItemPickupListener.java", "diffHunk": "@@ -30,6 +34,12 @@ public void onEntityPickup(EntityPickupItemEvent e) {\n         else if (e.getItem().getItemStack().hasItemMeta() && e.getItem().getItemStack().getItemMeta().hasDisplayName() && e.getItem().getItemStack().getItemMeta().getDisplayName().startsWith(ITEM_PREFIX)) {\n             e.setCancelled(true);\n             e.getItem().remove();\n+        } else if (SlimefunPlugin.getMinecraftVersion().isAtLeast(MinecraftVersion.MINECRAFT_1_16)) {\n+            if (e.getEntityType().equals(EntityType.PIGLIN)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5MTI0MQ=="}, "originalCommit": {"oid": "17a68ddcf507fce0d73708d22fb1169d7706f0ac"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzU2MzI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMTozODozM1rOG3EXkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMTozODozM1rOG3EXkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjQzMg==", "bodyText": "I know I know don't blame me!!!", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460396432", "createdAt": "2020-07-25T11:38:33Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -10,9 +10,12 @@\n import java.util.logging.Level;\n import java.util.stream.Collectors;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ff93b75e04a6101507ecd11259bf52dcd85cbf4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzU2MzMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMTozODo0NFrOG3EXlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMTozODo0NFrOG3EXlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjQzOA==", "bodyText": "No star imports please D:", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460396438", "createdAt": "2020-07-25T11:38:44Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -10,9 +10,12 @@\n import java.util.logging.Level;\n import java.util.stream.Collectors;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ff93b75e04a6101507ecd11259bf52dcd85cbf4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzU2MzYwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMTozOTowNVrOG3EXtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMTo0MzoyNlrOG3EZAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjQ3MA==", "bodyText": "Also what is that import doing here?", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460396470", "createdAt": "2020-07-25T11:39:05Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -10,9 +10,12 @@\n import java.util.logging.Level;\n import java.util.stream.Collectors;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.*;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n import org.bukkit.Bukkit;\n import org.bukkit.Server;\n import org.bukkit.command.Command;\n+import org.bukkit.entity.EntityType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ff93b75e04a6101507ecd11259bf52dcd85cbf4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjgwMA==", "bodyText": "No idea lol", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460396800", "createdAt": "2020-07-25T11:43:26Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/SlimefunPlugin.java", "diffHunk": "@@ -10,9 +10,12 @@\n import java.util.logging.Level;\n import java.util.stream.Collectors;\n \n+import io.github.thebusybiscuit.slimefun4.implementation.listeners.*;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n import org.bukkit.Bukkit;\n import org.bukkit.Server;\n import org.bukkit.command.Command;\n+import org.bukkit.entity.EntityType;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjQ3MA=="}, "originalCommit": {"oid": "5ff93b75e04a6101507ecd11259bf52dcd85cbf4"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzU2NTA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMTo0MDo0NVrOG3EYUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMTo1Mzo1OVrOG3EcMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjYyNw==", "bodyText": "We should probably also add a message saying that you cannot barter with piglins using Slimefun items.", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460396627", "createdAt": "2020-07-25T11:40:45Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Item;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityPickupItemEvent;\n+import org.bukkit.event.entity.EntityTargetEvent;\n+import org.bukkit.event.player.PlayerInteractAtEntityEvent;\n+import org.bukkit.event.player.PlayerInteractEntityEvent;\n+import org.bukkit.inventory.EquipmentSlot;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * Listens to \"Piglin trading events\" to prevent trading with Slimefun items.\n+ *\n+ * @author poma123\n+ */\n+public class PiglinListener implements Listener {\n+\n+    public PiglinListener(SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onEntityPickup(EntityPickupItemEvent e) {\n+        if (e.getEntityType() == EntityType.PIGLIN) {\n+            if (SlimefunItem.getByItem(e.getItem().getItemStack()) != null) {\n+                e.setCancelled(true);\n+            }\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onInteractEntity(PlayerInteractEntityEvent e) {\n+        if (!e.getRightClicked().isValid() || e.getRightClicked().getType() != EntityType.PIGLIN) {\n+            return;\n+        }\n+\n+        ItemStack itemStack;\n+\n+        if (e.getHand() == EquipmentSlot.OFF_HAND) {\n+            itemStack = e.getPlayer().getInventory().getItemInOffHand();\n+        } else {\n+            itemStack = e.getPlayer().getInventory().getItemInMainHand();\n+        }\n+\n+        SlimefunItem sfItem = SlimefunItem.getByItem(itemStack);\n+\n+        if (sfItem != null) {\n+            e.setCancelled(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ff93b75e04a6101507ecd11259bf52dcd85cbf4"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NzUwMw==", "bodyText": "Is this resolved in the last commit?", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460397503", "createdAt": "2020-07-25T11:52:15Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Item;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityPickupItemEvent;\n+import org.bukkit.event.entity.EntityTargetEvent;\n+import org.bukkit.event.player.PlayerInteractAtEntityEvent;\n+import org.bukkit.event.player.PlayerInteractEntityEvent;\n+import org.bukkit.inventory.EquipmentSlot;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * Listens to \"Piglin trading events\" to prevent trading with Slimefun items.\n+ *\n+ * @author poma123\n+ */\n+public class PiglinListener implements Listener {\n+\n+    public PiglinListener(SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onEntityPickup(EntityPickupItemEvent e) {\n+        if (e.getEntityType() == EntityType.PIGLIN) {\n+            if (SlimefunItem.getByItem(e.getItem().getItemStack()) != null) {\n+                e.setCancelled(true);\n+            }\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onInteractEntity(PlayerInteractEntityEvent e) {\n+        if (!e.getRightClicked().isValid() || e.getRightClicked().getType() != EntityType.PIGLIN) {\n+            return;\n+        }\n+\n+        ItemStack itemStack;\n+\n+        if (e.getHand() == EquipmentSlot.OFF_HAND) {\n+            itemStack = e.getPlayer().getInventory().getItemInOffHand();\n+        } else {\n+            itemStack = e.getPlayer().getInventory().getItemInMainHand();\n+        }\n+\n+        SlimefunItem sfItem = SlimefunItem.getByItem(itemStack);\n+\n+        if (sfItem != null) {\n+            e.setCancelled(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjYyNw=="}, "originalCommit": {"oid": "5ff93b75e04a6101507ecd11259bf52dcd85cbf4"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NzU3NA==", "bodyText": "Looks good to me", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460397574", "createdAt": "2020-07-25T11:53:17Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Item;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityPickupItemEvent;\n+import org.bukkit.event.entity.EntityTargetEvent;\n+import org.bukkit.event.player.PlayerInteractAtEntityEvent;\n+import org.bukkit.event.player.PlayerInteractEntityEvent;\n+import org.bukkit.inventory.EquipmentSlot;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * Listens to \"Piglin trading events\" to prevent trading with Slimefun items.\n+ *\n+ * @author poma123\n+ */\n+public class PiglinListener implements Listener {\n+\n+    public PiglinListener(SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onEntityPickup(EntityPickupItemEvent e) {\n+        if (e.getEntityType() == EntityType.PIGLIN) {\n+            if (SlimefunItem.getByItem(e.getItem().getItemStack()) != null) {\n+                e.setCancelled(true);\n+            }\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onInteractEntity(PlayerInteractEntityEvent e) {\n+        if (!e.getRightClicked().isValid() || e.getRightClicked().getType() != EntityType.PIGLIN) {\n+            return;\n+        }\n+\n+        ItemStack itemStack;\n+\n+        if (e.getHand() == EquipmentSlot.OFF_HAND) {\n+            itemStack = e.getPlayer().getInventory().getItemInOffHand();\n+        } else {\n+            itemStack = e.getPlayer().getInventory().getItemInMainHand();\n+        }\n+\n+        SlimefunItem sfItem = SlimefunItem.getByItem(itemStack);\n+\n+        if (sfItem != null) {\n+            e.setCancelled(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjYyNw=="}, "originalCommit": {"oid": "5ff93b75e04a6101507ecd11259bf52dcd85cbf4"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NzYxOA==", "bodyText": "Yay", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460397618", "createdAt": "2020-07-25T11:53:59Z", "author": {"login": "poma123"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Item;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityPickupItemEvent;\n+import org.bukkit.event.entity.EntityTargetEvent;\n+import org.bukkit.event.player.PlayerInteractAtEntityEvent;\n+import org.bukkit.event.player.PlayerInteractEntityEvent;\n+import org.bukkit.inventory.EquipmentSlot;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * Listens to \"Piglin trading events\" to prevent trading with Slimefun items.\n+ *\n+ * @author poma123\n+ */\n+public class PiglinListener implements Listener {\n+\n+    public PiglinListener(SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onEntityPickup(EntityPickupItemEvent e) {\n+        if (e.getEntityType() == EntityType.PIGLIN) {\n+            if (SlimefunItem.getByItem(e.getItem().getItemStack()) != null) {\n+                e.setCancelled(true);\n+            }\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onInteractEntity(PlayerInteractEntityEvent e) {\n+        if (!e.getRightClicked().isValid() || e.getRightClicked().getType() != EntityType.PIGLIN) {\n+            return;\n+        }\n+\n+        ItemStack itemStack;\n+\n+        if (e.getHand() == EquipmentSlot.OFF_HAND) {\n+            itemStack = e.getPlayer().getInventory().getItemInOffHand();\n+        } else {\n+            itemStack = e.getPlayer().getInventory().getItemInMainHand();\n+        }\n+\n+        SlimefunItem sfItem = SlimefunItem.getByItem(itemStack);\n+\n+        if (sfItem != null) {\n+            e.setCancelled(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjYyNw=="}, "originalCommit": {"oid": "5ff93b75e04a6101507ecd11259bf52dcd85cbf4"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzU2NTUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMTo0MTo0MVrOG3EYiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMTo0MTo0MVrOG3EYiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjY4Mw==", "bodyText": "Also just a small performance optimization: We should check if the item is a gold ingot, that way we won't have to do any checks that are not needed.", "url": "https://github.com/Slimefun/Slimefun4/pull/2121#discussion_r460396683", "createdAt": "2020-07-25T11:41:41Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/PiglinListener.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.listeners;\n+\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import org.bukkit.entity.EntityType;\n+import org.bukkit.entity.Item;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.entity.EntityPickupItemEvent;\n+import org.bukkit.event.entity.EntityTargetEvent;\n+import org.bukkit.event.player.PlayerInteractAtEntityEvent;\n+import org.bukkit.event.player.PlayerInteractEntityEvent;\n+import org.bukkit.inventory.EquipmentSlot;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * Listens to \"Piglin trading events\" to prevent trading with Slimefun items.\n+ *\n+ * @author poma123\n+ */\n+public class PiglinListener implements Listener {\n+\n+    public PiglinListener(SlimefunPlugin plugin) {\n+        plugin.getServer().getPluginManager().registerEvents(this, plugin);\n+    }\n+\n+    @EventHandler\n+    public void onEntityPickup(EntityPickupItemEvent e) {\n+        if (e.getEntityType() == EntityType.PIGLIN) {\n+            if (SlimefunItem.getByItem(e.getItem().getItemStack()) != null) {\n+                e.setCancelled(true);\n+            }\n+        }\n+    }\n+\n+    @EventHandler\n+    public void onInteractEntity(PlayerInteractEntityEvent e) {\n+        if (!e.getRightClicked().isValid() || e.getRightClicked().getType() != EntityType.PIGLIN) {\n+            return;\n+        }\n+\n+        ItemStack itemStack;\n+\n+        if (e.getHand() == EquipmentSlot.OFF_HAND) {\n+            itemStack = e.getPlayer().getInventory().getItemInOffHand();\n+        } else {\n+            itemStack = e.getPlayer().getInventory().getItemInMainHand();\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ff93b75e04a6101507ecd11259bf52dcd85cbf4"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 427, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}