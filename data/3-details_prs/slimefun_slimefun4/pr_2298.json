{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMjg1Mjgx", "number": 2298, "title": "Implemented Tags", "bodyText": "Description\n\nThis Pull Request proposes a new mechanic to check if a Material is valid for a certain use case.\nWe previously mostly relied on MaterialCollections which is just a pain to maintain.\nThis PR gives us the ability to fine-tune what materials are allowed where and combine tags into larger ones.\nThe file format follows Minecraft's tag format for datapacks: https://minecraft.gamepedia.com/Tag#JSON_format\nMost of them have a Slimefun-specific use case but there are also some tags (like ores, concrete powders or torches) which are just needed in Minecraft pretty badly anyway.\nThis also allows us to define \"optional\" elements without any ternary operators or ugly conditions. If one would want to add a new block to something, it will also be much easier to maintain and more beginner-friendly.\nUnit Tests and docs were added accordingly.\nThere is also a \"cyclic\" check for tags in Unit Tests\nChecklist\n\n\n\n I have fully tested the proposed changes and promise that they will not break everything into chaos.\n I have also tested the proposed changes in combination with various popular addons and can confirm my changes do not break them.\n I followed the existing code standards and didn't mess up the formatting.\n I did my best to add documentation to any public classes or methods I added.\n I have added Nonnull and Nullable annotations to my methods to indicate their behaviour for null values\n I added sufficient Unit Tests to cover my code.", "createdAt": "2020-09-07T10:56:40Z", "url": "https://github.com/Slimefun/Slimefun4/pull/2298", "merged": true, "mergeCommit": {"oid": "4c47a9cb932fcddc7b286a2c0a17e17df527f325"}, "closed": true, "closedAt": "2020-10-10T11:38:49Z", "author": {"login": "TheBusyBiscuit"}, "timelineItems": {"totalCount": 80, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGWLqjAH2gAyNDgxMjg1MjgxOjc3Mzk5NjYxN2RlZThhY2RjZTY5MWI5MWY5NDdhMzY1YmUxMmMwZjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdRJL7FgH2gAyNDgxMjg1MjgxOmNmNmFkZDExNDk1NzFiNmQzZTBkMzJjMzQ5OWFmZGQ1ZmZiN2MyZjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "773996617dee8acdce691b91f947a365be12c0f6", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/773996617dee8acdce691b91f947a365be12c0f6", "committedDate": "2020-09-06T22:31:26Z", "message": "Added Tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06498e3f639a33db27ea6a864f512f4eeb80b022", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/06498e3f639a33db27ea6a864f512f4eeb80b022", "committedDate": "2020-09-06T23:13:25Z", "message": "Added Unit Test and loop detection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b09c4af900d572ad4e4af87968537b9536ef08df", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b09c4af900d572ad4e4af87968537b9536ef08df", "committedDate": "2020-09-07T01:12:31Z", "message": "Added documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b72faddc355bce74ac23054a0556e3cd69e5aaf", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/5b72faddc355bce74ac23054a0556e3cd69e5aaf", "committedDate": "2020-09-07T09:08:39Z", "message": "Implemented tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3220a124aa4d3570c01944b167b039a84ee518c9", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/3220a124aa4d3570c01944b167b039a84ee518c9", "committedDate": "2020-09-07T10:41:04Z", "message": "Added more Unit Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e7fde9a470933daca7432efda759676c44ca1fc", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/7e7fde9a470933daca7432efda759676c44ca1fc", "committedDate": "2020-09-07T10:59:38Z", "message": "Slight correction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fe2aee565627d11410b279a7e549e1e33b3969c", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/4fe2aee565627d11410b279a7e549e1e33b3969c", "committedDate": "2020-09-07T11:00:15Z", "message": "Another mistake"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c8b8e0c59f17212bc866fa9ec9495c2e802e628", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/7c8b8e0c59f17212bc866fa9ec9495c2e802e628", "committedDate": "2020-09-07T11:02:59Z", "message": "Discord webhook, please work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81a8732f4102eb9f7edd7612a3afb06ae644ce34", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/81a8732f4102eb9f7edd7612a3afb06ae644ce34", "committedDate": "2020-09-07T11:06:50Z", "message": "Merge branch 'master' of https://github.com/Slimefun/Slimefun4.git into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fdf10cc8b9beb31e231559eef780493d33697f6", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/7fdf10cc8b9beb31e231559eef780493d33697f6", "committedDate": "2020-09-08T10:37:25Z", "message": "Merge branch 'master' of https://github.com/Slimefun/Slimefun4.git into\ntags\n\nConflicts:\n\tsrc/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/tools/PickaxeOfVeinMining.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d63ff915ce6582c9d66bcc2cf5840ef66947a1f2", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/d63ff915ce6582c9d66bcc2cf5840ef66947a1f2", "committedDate": "2020-09-09T11:19:04Z", "message": "Merge branch 'master' of https://github.com/Slimefun/Slimefun4.git into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "035e35a067cef1dc71d0a3482070edc64655e064", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/035e35a067cef1dc71d0a3482070edc64655e064", "committedDate": "2020-09-09T13:34:58Z", "message": "Implemented tags in more occurences"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9655761ab15b1195189c884b096ebff3fd172994", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/9655761ab15b1195189c884b096ebff3fd172994", "committedDate": "2020-09-09T13:43:44Z", "message": "Micro-optimizations Walshy would be proud of"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19c67a226606bc27e98fd2b0cea2dfcd14994039", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/19c67a226606bc27e98fd2b0cea2dfcd14994039", "committedDate": "2020-09-09T13:52:59Z", "message": "Unit Test should no longer fail"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NDQ1MDgw", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#pullrequestreview-485445080", "createdAt": "2020-09-09T22:25:47Z", "commit": {"oid": "19c67a226606bc27e98fd2b0cea2dfcd14994039"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a3165e9ba99288bde4791e1069e3b085b1b72b8", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/8a3165e9ba99288bde4791e1069e3b085b1b72b8", "committedDate": "2020-09-09T22:33:47Z", "message": "Fixed some tags and added glass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fd90bde4f4e2044f5144244d7b69b07e3e5bb67", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/6fd90bde4f4e2044f5144244d7b69b07e3e5bb67", "committedDate": "2020-09-10T14:19:23Z", "message": "Merge branch 'master' of https://github.com/Slimefun/Slimefun4.git into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74edbe499c42c872e3cc73cb574a69e021e158f0", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/74edbe499c42c872e3cc73cb574a69e021e158f0", "committedDate": "2020-09-10T22:07:26Z", "message": "Fixes #2238"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed66ee9b797893d18705ca153706b2ccb7572329", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/ed66ee9b797893d18705ca153706b2ccb7572329", "committedDate": "2020-09-11T08:33:02Z", "message": "Merge branch 'master' of https://github.com/Slimefun/Slimefun4.git into\ntags\n\nConflicts:\n\tCHANGELOG.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff9a6f7a3ee6cb25a668b0e3382e2019ade6b39f", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/ff9a6f7a3ee6cb25a668b0e3382e2019ade6b39f", "committedDate": "2020-09-11T08:44:00Z", "message": "Fixed Unit Tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2ODQ3NDY1", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#pullrequestreview-486847465", "createdAt": "2020-09-11T14:17:33Z", "commit": {"oid": "ff9a6f7a3ee6cb25a668b0e3382e2019ade6b39f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7703780251cce221e270ec64effd9e6b368cc70", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/a7703780251cce221e270ec64effd9e6b368cc70", "committedDate": "2020-09-13T09:57:11Z", "message": "Merge branch 'master' of https://github.com/Slimefun/Slimefun4.git into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b14f0b76c0a72e7e3a937542f6fd1fe8997bfb3f", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b14f0b76c0a72e7e3a937542f6fd1fe8997bfb3f", "committedDate": "2020-09-13T10:00:45Z", "message": "Added unbreakable tag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a98ff148e69fce66021d33f2ce8990cf33bf465d", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/a98ff148e69fce66021d33f2ce8990cf33bf465d", "committedDate": "2020-09-13T10:06:43Z", "message": "Jigsaw!"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8652f45b0a48d9e266370fef2ed47c2f652e64d7", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/8652f45b0a48d9e266370fef2ed47c2f652e64d7", "committedDate": "2020-09-13T21:39:10Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MTU1MTI2", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#pullrequestreview-489155126", "createdAt": "2020-09-15T22:37:54Z", "commit": {"oid": "8652f45b0a48d9e266370fef2ed47c2f652e64d7"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9547d51db21c0c32a1a5c40fa95957e1379e89df", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/9547d51db21c0c32a1a5c40fa95957e1379e89df", "committedDate": "2020-09-19T09:35:41Z", "message": "Merge branch 'master' of https://github.com/Slimefun/Slimefun4.git into\ntags\n\nConflicts:\n\tCHANGELOG.md\n\tsrc/test/java/io/github/thebusybiscuit/slimefun4/testing/TestUtilities.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32462b05542c770c73e59cdc82b96ec6b381af69", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/32462b05542c770c73e59cdc82b96ec6b381af69", "committedDate": "2020-09-19T09:36:34Z", "message": "Merge branch 'tags' of https://github.com/Slimefun/Slimefun4.git into\ntags\n\nConflicts:\n\tCHANGELOG.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23bf314905a6b30236de92ed3106500fb9dd6ad7", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/23bf314905a6b30236de92ed3106500fb9dd6ad7", "committedDate": "2020-09-19T09:39:35Z", "message": "Added fluid-sensitive tag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f37c2b8b7593f1884a1ed7f06a995ac4c0a657c", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/2f37c2b8b7593f1884a1ed7f06a995ac4c0a657c", "committedDate": "2020-09-21T11:24:44Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4412b407097ad14cdcb5466c495fa6ae7de5d9fc", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/4412b407097ad14cdcb5466c495fa6ae7de5d9fc", "committedDate": "2020-09-21T13:59:08Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8365d1e6d9ae8cf755154a0103d2442336b8797a", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/8365d1e6d9ae8cf755154a0103d2442336b8797a", "committedDate": "2020-09-22T13:33:56Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c530a4813d88b6b7e3ee0d86477f79b33eabef4", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/4c530a4813d88b6b7e3ee0d86477f79b33eabef4", "committedDate": "2020-09-22T13:37:03Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "428c8b4774f0cca7690db0810b502e8a93541c52", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/428c8b4774f0cca7690db0810b502e8a93541c52", "committedDate": "2020-09-22T13:46:06Z", "message": "Added back tall_flowers tag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14b96aae5b754637714c29d62afd194c89211757", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/14b96aae5b754637714c29d62afd194c89211757", "committedDate": "2020-09-22T13:51:08Z", "message": "Added back dirt_like tag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a674a38f2a2be942e87c4e2e78a1fdad108b80f9", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/a674a38f2a2be942e87c4e2e78a1fdad108b80f9", "committedDate": "2020-09-28T13:07:29Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "362b7bda6356215afbd65569a8c849ee2381b476", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/362b7bda6356215afbd65569a8c849ee2381b476", "committedDate": "2020-09-28T14:01:30Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "277ecb4a298acaf2a2cd4ac6a53d0c5afdef817b", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/277ecb4a298acaf2a2cd4ac6a53d0c5afdef817b", "committedDate": "2020-09-29T16:57:38Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4Nzg1Mjk4", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#pullrequestreview-498785298", "createdAt": "2020-09-29T18:55:39Z", "commit": {"oid": "277ecb4a298acaf2a2cd4ac6a53d0c5afdef817b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50e48ed87c592b89d0817b782035854a36872d98", "author": {"user": {"login": "LinoxGH", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/50e48ed87c592b89d0817b782035854a36872d98", "committedDate": "2020-10-01T18:42:50Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNjg1ODY3", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#pullrequestreview-500685867", "createdAt": "2020-10-01T20:16:20Z", "commit": {"oid": "50e48ed87c592b89d0817b782035854a36872d98"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNjg2ODM3", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#pullrequestreview-500686837", "createdAt": "2020-10-01T20:17:44Z", "commit": {"oid": "50e48ed87c592b89d0817b782035854a36872d98"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ec39ec16a1ed11a400012ba07ac28e46e2d14ab", "author": {"user": {"login": "poma123", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/3ec39ec16a1ed11a400012ba07ac28e46e2d14ab", "committedDate": "2020-10-03T19:46:28Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b3ae3b1cf36cce6ea2844651f512537fe754925", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/6b3ae3b1cf36cce6ea2844651f512537fe754925", "committedDate": "2020-10-03T20:05:13Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1a8c6f52e9f1cd3755a4039f0b9b0c938e2d94a", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/e1a8c6f52e9f1cd3755a4039f0b9b0c938e2d94a", "committedDate": "2020-10-03T20:21:01Z", "message": "Added caveman talisman tag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e6fc92e28b39b912b26b55db1854fd41453d819", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/0e6fc92e28b39b912b26b55db1854fd41453d819", "committedDate": "2020-10-03T22:46:37Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bbdc37130fc5f7454f807788da6eb651e71a9f9", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/8bbdc37130fc5f7454f807788da6eb651e71a9f9", "committedDate": "2020-10-04T00:28:59Z", "message": "Refactored Climbing Picks and added Tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50777ac546fa495dace64adb5c77e3ef6393eb96", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/50777ac546fa495dace64adb5c77e3ef6393eb96", "committedDate": "2020-10-04T00:55:11Z", "message": "A bit of code cleanup and docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4df4f6d4c924ee7932a6e23aec87894cbfe065ba", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/4df4f6d4c924ee7932a6e23aec87894cbfe065ba", "committedDate": "2020-10-04T09:04:35Z", "message": "More Climbing Pick unit tests which may give us better context?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ff105dabe76251f226ffe7d9aa7a0a6f9ab2a05", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/2ff105dabe76251f226ffe7d9aa7a0a6f9ab2a05", "committedDate": "2020-10-04T09:22:56Z", "message": "Maybe fixed the unit tests?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ceadd2147f4ff300b0f46934a6d27d9e9f28b48d", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/ceadd2147f4ff300b0f46934a6d27d9e9f28b48d", "committedDate": "2020-10-04T09:51:03Z", "message": "Added a debug line to finally fix this unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8d2bea162dd064018a7af0745d8fc258999ae99", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/c8d2bea162dd064018a7af0745d8fc258999ae99", "committedDate": "2020-10-04T10:16:32Z", "message": "Maybe now? :eyes:"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5753def8e9223894339b99658d2c8fb38cb35521", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/5753def8e9223894339b99658d2c8fb38cb35521", "committedDate": "2020-10-04T10:42:59Z", "message": "Hey unit tests, you work now, k pls?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "078e749679f0b031de8b119abb9e6c21bb524b11", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/078e749679f0b031de8b119abb9e6c21bb524b11", "committedDate": "2020-10-04T11:04:21Z", "message": "Added a new Unit test for Slimefun Tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76e42fa9afa1d96f65e0d22a92d10e3d7dfbaf00", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/76e42fa9afa1d96f65e0d22a92d10e3d7dfbaf00", "committedDate": "2020-10-04T11:17:13Z", "message": "Merge branch 'master' of https://github.com/Slimefun/Slimefun4.git into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cab529a2b9179739b02198af4b9b45ea177a2c8", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/7cab529a2b9179739b02198af4b9b45ea177a2c8", "committedDate": "2020-10-04T11:19:54Z", "message": "Merged master into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "655b429f0d7d4955b4c18bfc32df54d859eb8501", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/655b429f0d7d4955b4c18bfc32df54d859eb8501", "committedDate": "2020-10-04T11:31:52Z", "message": "Added a new super tag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b32dc0b72784f082bc97c9885da9e6a91db54900", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b32dc0b72784f082bc97c9885da9e6a91db54900", "committedDate": "2020-10-04T11:40:41Z", "message": "@poma123 for the rescue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ac5899abc9b07b3af91b9acab076392c603b42c", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/2ac5899abc9b07b3af91b9acab076392c603b42c", "committedDate": "2020-10-04T11:44:04Z", "message": "Whoops"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "060170c12d52e68bee9b814cb824494a80d09dcd", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/060170c12d52e68bee9b814cb824494a80d09dcd", "committedDate": "2020-10-05T08:03:44Z", "message": "Merge branch 'master' of https://github.com/Slimefun/Slimefun4.git into\ntags\n\nConflicts:\n\tsrc/test/java/io/github/thebusybiscuit/slimefun4/testing/TestUtilities.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb35cddc9f14c27215e06d217c3ffdfb34d5b6ed", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/cb35cddc9f14c27215e06d217c3ffdfb34d5b6ed", "committedDate": "2020-10-05T13:07:48Z", "message": "Merged with master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47590ac972a22bef34b7b6cd4850c4dff5c87814", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/47590ac972a22bef34b7b6cd4850c4dff5c87814", "committedDate": "2020-10-06T19:07:49Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7814bdcdee5da54bb7afaccc8736dd2751cc199f", "author": {"user": {"login": "poma123", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/7814bdcdee5da54bb7afaccc8736dd2751cc199f", "committedDate": "2020-10-07T14:11:41Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3302d8cbd770739b75ac63038b7021633261fba", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/c3302d8cbd770739b75ac63038b7021633261fba", "committedDate": "2020-10-07T15:44:27Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd00848795726a08245a2641bdd56165a770efe3", "author": {"user": {"login": "poma123", "name": null}}, "url": "https://github.com/Slimefun/Slimefun4/commit/cd00848795726a08245a2641bdd56165a770efe3", "committedDate": "2020-10-07T15:55:26Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c3fc99b3ac52f3ad698a5c6be492895226c60e2", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/7c3fc99b3ac52f3ad698a5c6be492895226c60e2", "committedDate": "2020-10-07T16:38:26Z", "message": "Merge branch 'master' of https://github.com/Slimefun/Slimefun4.git into\ntags\n\nConflicts:\n\tsrc/main/java/io/github/thebusybiscuit/slimefun4/api/items/ItemSetting.java\n\tsrc/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/androids/ProgrammableAndroid.java\n\tsrc/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/multiblocks/miner/IndustrialMiner.java\n\tsrc/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/tools/ExplosiveTool.java\n\tsrc/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/tools/PickaxeOfVeinMining.java\n\tsrc/test/java/io/github/thebusybiscuit/slimefun4/testing/tests/items/implementations/tools/TestClimbingPick.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "126ccf3d0112e03b0144b48ee100ffd83d7f8db0", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/126ccf3d0112e03b0144b48ee100ffd83d7f8db0", "committedDate": "2020-10-07T16:43:55Z", "message": "Formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d00f3e70456754000d3f37c4417da760172bf1a", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/2d00f3e70456754000d3f37c4417da760172bf1a", "committedDate": "2020-10-08T14:16:11Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6624bd43aaf720a9f587f884187e5811bdf1635", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/b6624bd43aaf720a9f587f884187e5811bdf1635", "committedDate": "2020-10-08T16:52:21Z", "message": "Merge branch 'master' of https://github.com/Slimefun/Slimefun4.git into tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d891d182b5b10f79b5c8a602a357cf7b5c072f51", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/d891d182b5b10f79b5c8a602a357cf7b5c072f51", "committedDate": "2020-10-08T16:53:19Z", "message": "Intentionally messed up imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5aa6a8b7b1d169af6c6f6cedf77be01b71e58adf", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/5aa6a8b7b1d169af6c6f6cedf77be01b71e58adf", "committedDate": "2020-10-08T17:01:28Z", "message": "Removed github token from imports workflow"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c80ad4040bdbfe7cf8dbd4f6ba1f5df7b4a054a", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/8c80ad4040bdbfe7cf8dbd4f6ba1f5df7b4a054a", "committedDate": "2020-10-08T17:05:23Z", "message": "Cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aab665ffea2ac6ff2e28a23037edc534f3e452a2", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/aab665ffea2ac6ff2e28a23037edc534f3e452a2", "committedDate": "2020-10-09T09:46:47Z", "message": "Merge branch 'master' into tags"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NzIxNTc5", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#pullrequestreview-505721579", "createdAt": "2020-10-09T14:24:48Z", "commit": {"oid": "aab665ffea2ac6ff2e28a23037edc534f3e452a2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNDoyNDo0OFrOHfL-nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNDozNjoyM1rOHfMcsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ2NDE1Nw==", "bodyText": "I think we should instead add a constructor accepting SlimefunTag instead.", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502464157", "createdAt": "2020-10-09T14:24:48Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/blocks/BlockPlacer.java", "diffHunk": "@@ -47,7 +47,7 @@\n  */\n public class BlockPlacer extends SlimefunItem {\n \n-    private final ItemSetting<List<String>> blacklist = new ItemSetting<>(\"unplaceable-blocks\", MaterialCollections.getAllUnbreakableBlocks().stream().map(Material::name).collect(Collectors.toList()));\n+    private final ItemSetting<List<String>> blacklist = new ItemSetting<>(\"unplaceable-blocks\", SlimefunTag.UNBREAKABLE_MATERIALS.stream().map(Material::name).collect(Collectors.toList()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab665ffea2ac6ff2e28a23037edc534f3e452a2"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ2NTgyMw==", "bodyText": "I'm not sure about the location of this class. We should have a package just for stuff like these.(There is also GrapplingHook class in listener package)", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502465823", "createdAt": "2020-10-09T14:27:14Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/tools/ClimbableSurface.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.tools;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab665ffea2ac6ff2e28a23037edc534f3e452a2"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ2NzA2Mg==", "bodyText": "I think Block.getRelative() should have been used instead.", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502467062", "createdAt": "2020-10-09T14:29:08Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/tools/PickaxeOfTheSeeker.java", "diffHunk": "@@ -55,7 +56,9 @@ private Block findClosestOre(Player p) {\n         for (int x = -4; x <= 4; x++) {\n             for (int y = -4; y <= 4; y++) {\n                 for (int z = -4; z <= 4; z++) {\n-                    if (MaterialCollections.getAllOres().contains(p.getLocation().add(x, y, z).getBlock().getType()) && (closest == null || p.getLocation().distanceSquared(closest.getLocation()) > p.getLocation().distanceSquared(p.getLocation().add(x, y, z)))) {\n+                    Material type = p.getLocation().add(x, y, z).getBlock().getType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab665ffea2ac6ff2e28a23037edc534f3e452a2"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ2NzMyNw==", "bodyText": "A bit of refactoring could be of use here.", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502467327", "createdAt": "2020-10-09T14:29:30Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/tools/PickaxeOfTheSeeker.java", "diffHunk": "@@ -55,7 +56,9 @@ private Block findClosestOre(Player p) {\n         for (int x = -4; x <= 4; x++) {\n             for (int y = -4; y <= 4; y++) {\n                 for (int z = -4; z <= 4; z++) {\n-                    if (MaterialCollections.getAllOres().contains(p.getLocation().add(x, y, z).getBlock().getType()) && (closest == null || p.getLocation().distanceSquared(closest.getLocation()) > p.getLocation().distanceSquared(p.getLocation().add(x, y, z)))) {\n+                    Material type = p.getLocation().add(x, y, z).getBlock().getType();\n+\n+                    if (SlimefunTag.PICKAXE_OF_THE_SEEKER_BLOCKS.isTagged(type) && (closest == null || p.getLocation().distanceSquared(closest.getLocation()) > p.getLocation().distanceSquared(p.getLocation().add(x, y, z)))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab665ffea2ac6ff2e28a23037edc534f3e452a2"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ2Nzk4OA==", "bodyText": "This could use some refactoring too.", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502467988", "createdAt": "2020-10-09T14:30:27Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/tools/SmeltersPickaxe.java", "diffHunk": "@@ -27,7 +27,7 @@ public SmeltersPickaxe(Category category, SlimefunItemStack item, RecipeType rec\n     @Override\n     public ToolUseHandler getItemHandler() {\n         return (e, tool, fortune, drops) -> {\n-            if (MaterialCollections.getAllOres().contains(e.getBlock().getType()) && !BlockStorage.hasBlockInfo(e.getBlock())) {\n+            if (SlimefunTag.SMELTERS_PICKAXE_BLOCKS.isTagged(e.getBlock().getType()) && !BlockStorage.hasBlockInfo(e.getBlock())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab665ffea2ac6ff2e28a23037edc534f3e452a2"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ3MDIzOA==", "bodyText": "Isn't Tag an enum? So why don't you use EnumSet here?", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502470238", "createdAt": "2020-10-09T14:33:56Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/tags/SlimefunTag.java", "diffHunk": "@@ -0,0 +1,312 @@\n+package io.github.thebusybiscuit.slimefun4.utils.tags;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.Material;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.Tag;\n+import org.bukkit.block.data.Waterlogged;\n+\n+import io.github.thebusybiscuit.slimefun4.api.exceptions.TagMisconfigurationException;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.blocks.BlockPlacer;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.CropGrowthAccelerator;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.multiblocks.miner.IndustrialMiner;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.ClimbingPick;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.ExplosiveShovel;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.PickaxeOfTheSeeker;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.PickaxeOfVeinMining;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.SmeltersPickaxe;\n+\n+/**\n+ * This enum contains various implementations of the {@link Tag} interface.\n+ * Most of them serve some purpose within Slimefun's implementation, some are just pure\n+ * extensions of the default Minecraft tags.\n+ * The actual tag files are located in the {@literal /src/main/resources/tags} directory\n+ * and follow Minecraft's tags.json format.\n+ * \n+ * @author TheBusyBiscuit\n+ *\n+ */\n+public enum SlimefunTag implements Tag<Material> {\n+\n+    /**\n+     * Minecraft ores.\n+     */\n+    ORES,\n+\n+    /**\n+     * All Shulker boxes, normal and colored.\n+     */\n+    SHULKER_BOXES,\n+\n+    /**\n+     * All command block variants\n+     */\n+    COMMAND_BLOCKS,\n+\n+    /**\n+     * Every mushroom type, red, brown and nether ones.\n+     */\n+    MUSHROOMS,\n+\n+    /**\n+     * Every glass variant, includes both blocks and panes.\n+     * Also stained glass and stained glass panes.\n+     */\n+    GLASS,\n+\n+    /**\n+     * All variants of glass, normal and stained.\n+     */\n+    GLASS_BLOCKS,\n+\n+    /**\n+     * All variants of glass panes, normal and stained.\n+     */\n+    GLASS_PANES,\n+\n+    /**\n+     * All variants of torches, normal, soulfire and redstone.\n+     */\n+    TORCHES,\n+\n+    /**\n+     * All terracotta variants, does not include glazed terracotta.\n+     */\n+    TERRACOTTA,\n+\n+    /**\n+     * All ice variants, normal, packed, blue and whatever else there is.\n+     */\n+    ICE_VARIANTS,\n+\n+    /**\n+     * All stone variants, normal, andesite, diorite, granite and whatever else may come.\n+     */\n+    STONE_VARIANTS,\n+\n+    /**\n+     * All variants of concrete powder.\n+     * Can you believe there is no tag for this already?\n+     */\n+    CONCRETE_POWDERS,\n+\n+    /**\n+     * Materials which are sensitive to break.\n+     * Things like Saplings or Pressure plates which break as well when you break\n+     * the block beneath them.\n+     */\n+    SENSITIVE_MATERIALS,\n+\n+    /**\n+     * These Materials are sensitive to fluids, they cannot be {@link Waterlogged}\n+     * and would break in contact with water.\n+     */\n+    FLUID_SENSITIVE_MATERIALS,\n+\n+    /**\n+     * These materials are just unbreakable, like bedrock for example.\n+     */\n+    UNBREAKABLE_MATERIALS,\n+\n+    /**\n+     * Materials which cannot be reliably placed using a {@link BlockPlacer}.\n+     */\n+    BLOCK_PLACER_IGNORED_MATERIALS,\n+\n+    /**\n+     * All materials which the {@link ExplosiveShovel} can break.\n+     */\n+    EXPLOSIVE_SHOVEL_BLOCKS,\n+\n+    /**\n+     * All materials (ores) which the {@link PickaxeOfVeinMining} recognizes.\n+     */\n+    PICKAXE_OF_VEIN_MINING_BLOCKS,\n+\n+    /**\n+     * All materials (ores) which the {@link PickaxeOfTheSeeker} recognizes.\n+     */\n+    PICKAXE_OF_THE_SEEKER_BLOCKS,\n+\n+    /**\n+     * All materials which the {@link SmeltersPickaxe} will try and smelt.\n+     */\n+    SMELTERS_PICKAXE_BLOCKS,\n+\n+    /**\n+     * All materials (ores) which the {@link IndustrialMiner} will try to mine.\n+     */\n+    INDUSTRIAL_MINER_ORES,\n+\n+    /**\n+     * All materials (crops) which the {@link CropGrowthAccelerator} will recognize.\n+     */\n+    CROP_GROWTH_ACCELERATOR_BLOCKS,\n+\n+    /**\n+     * All <strong>strong</strong> materials which the {@link ClimbingPick} is able to climb.\n+     */\n+    CLIMBING_PICK_STRONG_SURFACES,\n+\n+    /**\n+     * All <strong>weak</strong> materials which the {@link ClimbingPick} is able to climb.\n+     */\n+    CLIMBING_PICK_WEAK_SURFACES,\n+\n+    /**\n+     * This {@link SlimefunTag} holds all surfaces for the {@link ClimbingPick}.\n+     * This is an aggregation of {@code CLIMBING_PICK_STRONG_SURFACES} and {@code CLIMBING_PICK_WEAK_SURFACES}\n+     */\n+    CLIMBING_PICK_SURFACES,\n+\n+    /**\n+     * All materials (ores) which trigger the Talisman of the Caveman.\n+     */\n+    CAVEMAN_TALISMAN_TRIGGERS;\n+\n+    private static final Map<String, SlimefunTag> nameLookup = new HashMap<>();\n+    public static final SlimefunTag[] valuesCache = values();\n+\n+    static {\n+        for (SlimefunTag tag : valuesCache) {\n+            nameLookup.put(tag.name(), tag);\n+        }\n+    }\n+\n+    private final NamespacedKey key;\n+    private final Set<Material> includedMaterials = new HashSet<>();\n+    private final Set<Tag<Material>> additionalTags = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab665ffea2ac6ff2e28a23037edc534f3e452a2"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ3MDUyMg==", "bodyText": "Javadocs here please.", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502470522", "createdAt": "2020-10-09T14:34:21Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/tags/SlimefunTag.java", "diffHunk": "@@ -0,0 +1,312 @@\n+package io.github.thebusybiscuit.slimefun4.utils.tags;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.Material;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.Tag;\n+import org.bukkit.block.data.Waterlogged;\n+\n+import io.github.thebusybiscuit.slimefun4.api.exceptions.TagMisconfigurationException;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.blocks.BlockPlacer;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.CropGrowthAccelerator;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.multiblocks.miner.IndustrialMiner;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.ClimbingPick;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.ExplosiveShovel;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.PickaxeOfTheSeeker;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.PickaxeOfVeinMining;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.SmeltersPickaxe;\n+\n+/**\n+ * This enum contains various implementations of the {@link Tag} interface.\n+ * Most of them serve some purpose within Slimefun's implementation, some are just pure\n+ * extensions of the default Minecraft tags.\n+ * The actual tag files are located in the {@literal /src/main/resources/tags} directory\n+ * and follow Minecraft's tags.json format.\n+ * \n+ * @author TheBusyBiscuit\n+ *\n+ */\n+public enum SlimefunTag implements Tag<Material> {\n+\n+    /**\n+     * Minecraft ores.\n+     */\n+    ORES,\n+\n+    /**\n+     * All Shulker boxes, normal and colored.\n+     */\n+    SHULKER_BOXES,\n+\n+    /**\n+     * All command block variants\n+     */\n+    COMMAND_BLOCKS,\n+\n+    /**\n+     * Every mushroom type, red, brown and nether ones.\n+     */\n+    MUSHROOMS,\n+\n+    /**\n+     * Every glass variant, includes both blocks and panes.\n+     * Also stained glass and stained glass panes.\n+     */\n+    GLASS,\n+\n+    /**\n+     * All variants of glass, normal and stained.\n+     */\n+    GLASS_BLOCKS,\n+\n+    /**\n+     * All variants of glass panes, normal and stained.\n+     */\n+    GLASS_PANES,\n+\n+    /**\n+     * All variants of torches, normal, soulfire and redstone.\n+     */\n+    TORCHES,\n+\n+    /**\n+     * All terracotta variants, does not include glazed terracotta.\n+     */\n+    TERRACOTTA,\n+\n+    /**\n+     * All ice variants, normal, packed, blue and whatever else there is.\n+     */\n+    ICE_VARIANTS,\n+\n+    /**\n+     * All stone variants, normal, andesite, diorite, granite and whatever else may come.\n+     */\n+    STONE_VARIANTS,\n+\n+    /**\n+     * All variants of concrete powder.\n+     * Can you believe there is no tag for this already?\n+     */\n+    CONCRETE_POWDERS,\n+\n+    /**\n+     * Materials which are sensitive to break.\n+     * Things like Saplings or Pressure plates which break as well when you break\n+     * the block beneath them.\n+     */\n+    SENSITIVE_MATERIALS,\n+\n+    /**\n+     * These Materials are sensitive to fluids, they cannot be {@link Waterlogged}\n+     * and would break in contact with water.\n+     */\n+    FLUID_SENSITIVE_MATERIALS,\n+\n+    /**\n+     * These materials are just unbreakable, like bedrock for example.\n+     */\n+    UNBREAKABLE_MATERIALS,\n+\n+    /**\n+     * Materials which cannot be reliably placed using a {@link BlockPlacer}.\n+     */\n+    BLOCK_PLACER_IGNORED_MATERIALS,\n+\n+    /**\n+     * All materials which the {@link ExplosiveShovel} can break.\n+     */\n+    EXPLOSIVE_SHOVEL_BLOCKS,\n+\n+    /**\n+     * All materials (ores) which the {@link PickaxeOfVeinMining} recognizes.\n+     */\n+    PICKAXE_OF_VEIN_MINING_BLOCKS,\n+\n+    /**\n+     * All materials (ores) which the {@link PickaxeOfTheSeeker} recognizes.\n+     */\n+    PICKAXE_OF_THE_SEEKER_BLOCKS,\n+\n+    /**\n+     * All materials which the {@link SmeltersPickaxe} will try and smelt.\n+     */\n+    SMELTERS_PICKAXE_BLOCKS,\n+\n+    /**\n+     * All materials (ores) which the {@link IndustrialMiner} will try to mine.\n+     */\n+    INDUSTRIAL_MINER_ORES,\n+\n+    /**\n+     * All materials (crops) which the {@link CropGrowthAccelerator} will recognize.\n+     */\n+    CROP_GROWTH_ACCELERATOR_BLOCKS,\n+\n+    /**\n+     * All <strong>strong</strong> materials which the {@link ClimbingPick} is able to climb.\n+     */\n+    CLIMBING_PICK_STRONG_SURFACES,\n+\n+    /**\n+     * All <strong>weak</strong> materials which the {@link ClimbingPick} is able to climb.\n+     */\n+    CLIMBING_PICK_WEAK_SURFACES,\n+\n+    /**\n+     * This {@link SlimefunTag} holds all surfaces for the {@link ClimbingPick}.\n+     * This is an aggregation of {@code CLIMBING_PICK_STRONG_SURFACES} and {@code CLIMBING_PICK_WEAK_SURFACES}\n+     */\n+    CLIMBING_PICK_SURFACES,\n+\n+    /**\n+     * All materials (ores) which trigger the Talisman of the Caveman.\n+     */\n+    CAVEMAN_TALISMAN_TRIGGERS;\n+\n+    private static final Map<String, SlimefunTag> nameLookup = new HashMap<>();\n+    public static final SlimefunTag[] valuesCache = values();\n+\n+    static {\n+        for (SlimefunTag tag : valuesCache) {\n+            nameLookup.put(tag.name(), tag);\n+        }\n+    }\n+\n+    private final NamespacedKey key;\n+    private final Set<Material> includedMaterials = new HashSet<>();\n+    private final Set<Tag<Material>> additionalTags = new HashSet<>();\n+\n+    /**\n+     * This constructs a new {@link SlimefunTag}.\n+     * The {@link NamespacedKey} will be automatically inferred using\n+     * {@link SlimefunPlugin} and {@link #name()}.\n+     */\n+    SlimefunTag() {\n+        key = new NamespacedKey(SlimefunPlugin.instance(), name().toLowerCase(Locale.ROOT));\n+    }\n+\n+    /**\n+     * This method reloads this {@link SlimefunTag} from our resources directory.\n+     * \n+     * @throws TagMisconfigurationException\n+     *             This is thrown whenever a {@link SlimefunTag} could not be parsed properly\n+     */\n+    public void reload() throws TagMisconfigurationException {\n+        new TagParser(this).parse(this, (materials, tags) -> {\n+            this.includedMaterials.clear();\n+            this.includedMaterials.addAll(materials);\n+\n+            this.additionalTags.clear();\n+            this.additionalTags.addAll(tags);\n+        });\n+    }\n+\n+    public static void reloadAll() throws TagMisconfigurationException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab665ffea2ac6ff2e28a23037edc534f3e452a2"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ3MDY4MQ==", "bodyText": "Javadocs here too.", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502470681", "createdAt": "2020-10-09T14:34:36Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/tags/SlimefunTag.java", "diffHunk": "@@ -0,0 +1,312 @@\n+package io.github.thebusybiscuit.slimefun4.utils.tags;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.Material;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.Tag;\n+import org.bukkit.block.data.Waterlogged;\n+\n+import io.github.thebusybiscuit.slimefun4.api.exceptions.TagMisconfigurationException;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.blocks.BlockPlacer;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.CropGrowthAccelerator;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.multiblocks.miner.IndustrialMiner;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.ClimbingPick;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.ExplosiveShovel;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.PickaxeOfTheSeeker;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.PickaxeOfVeinMining;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.SmeltersPickaxe;\n+\n+/**\n+ * This enum contains various implementations of the {@link Tag} interface.\n+ * Most of them serve some purpose within Slimefun's implementation, some are just pure\n+ * extensions of the default Minecraft tags.\n+ * The actual tag files are located in the {@literal /src/main/resources/tags} directory\n+ * and follow Minecraft's tags.json format.\n+ * \n+ * @author TheBusyBiscuit\n+ *\n+ */\n+public enum SlimefunTag implements Tag<Material> {\n+\n+    /**\n+     * Minecraft ores.\n+     */\n+    ORES,\n+\n+    /**\n+     * All Shulker boxes, normal and colored.\n+     */\n+    SHULKER_BOXES,\n+\n+    /**\n+     * All command block variants\n+     */\n+    COMMAND_BLOCKS,\n+\n+    /**\n+     * Every mushroom type, red, brown and nether ones.\n+     */\n+    MUSHROOMS,\n+\n+    /**\n+     * Every glass variant, includes both blocks and panes.\n+     * Also stained glass and stained glass panes.\n+     */\n+    GLASS,\n+\n+    /**\n+     * All variants of glass, normal and stained.\n+     */\n+    GLASS_BLOCKS,\n+\n+    /**\n+     * All variants of glass panes, normal and stained.\n+     */\n+    GLASS_PANES,\n+\n+    /**\n+     * All variants of torches, normal, soulfire and redstone.\n+     */\n+    TORCHES,\n+\n+    /**\n+     * All terracotta variants, does not include glazed terracotta.\n+     */\n+    TERRACOTTA,\n+\n+    /**\n+     * All ice variants, normal, packed, blue and whatever else there is.\n+     */\n+    ICE_VARIANTS,\n+\n+    /**\n+     * All stone variants, normal, andesite, diorite, granite and whatever else may come.\n+     */\n+    STONE_VARIANTS,\n+\n+    /**\n+     * All variants of concrete powder.\n+     * Can you believe there is no tag for this already?\n+     */\n+    CONCRETE_POWDERS,\n+\n+    /**\n+     * Materials which are sensitive to break.\n+     * Things like Saplings or Pressure plates which break as well when you break\n+     * the block beneath them.\n+     */\n+    SENSITIVE_MATERIALS,\n+\n+    /**\n+     * These Materials are sensitive to fluids, they cannot be {@link Waterlogged}\n+     * and would break in contact with water.\n+     */\n+    FLUID_SENSITIVE_MATERIALS,\n+\n+    /**\n+     * These materials are just unbreakable, like bedrock for example.\n+     */\n+    UNBREAKABLE_MATERIALS,\n+\n+    /**\n+     * Materials which cannot be reliably placed using a {@link BlockPlacer}.\n+     */\n+    BLOCK_PLACER_IGNORED_MATERIALS,\n+\n+    /**\n+     * All materials which the {@link ExplosiveShovel} can break.\n+     */\n+    EXPLOSIVE_SHOVEL_BLOCKS,\n+\n+    /**\n+     * All materials (ores) which the {@link PickaxeOfVeinMining} recognizes.\n+     */\n+    PICKAXE_OF_VEIN_MINING_BLOCKS,\n+\n+    /**\n+     * All materials (ores) which the {@link PickaxeOfTheSeeker} recognizes.\n+     */\n+    PICKAXE_OF_THE_SEEKER_BLOCKS,\n+\n+    /**\n+     * All materials which the {@link SmeltersPickaxe} will try and smelt.\n+     */\n+    SMELTERS_PICKAXE_BLOCKS,\n+\n+    /**\n+     * All materials (ores) which the {@link IndustrialMiner} will try to mine.\n+     */\n+    INDUSTRIAL_MINER_ORES,\n+\n+    /**\n+     * All materials (crops) which the {@link CropGrowthAccelerator} will recognize.\n+     */\n+    CROP_GROWTH_ACCELERATOR_BLOCKS,\n+\n+    /**\n+     * All <strong>strong</strong> materials which the {@link ClimbingPick} is able to climb.\n+     */\n+    CLIMBING_PICK_STRONG_SURFACES,\n+\n+    /**\n+     * All <strong>weak</strong> materials which the {@link ClimbingPick} is able to climb.\n+     */\n+    CLIMBING_PICK_WEAK_SURFACES,\n+\n+    /**\n+     * This {@link SlimefunTag} holds all surfaces for the {@link ClimbingPick}.\n+     * This is an aggregation of {@code CLIMBING_PICK_STRONG_SURFACES} and {@code CLIMBING_PICK_WEAK_SURFACES}\n+     */\n+    CLIMBING_PICK_SURFACES,\n+\n+    /**\n+     * All materials (ores) which trigger the Talisman of the Caveman.\n+     */\n+    CAVEMAN_TALISMAN_TRIGGERS;\n+\n+    private static final Map<String, SlimefunTag> nameLookup = new HashMap<>();\n+    public static final SlimefunTag[] valuesCache = values();\n+\n+    static {\n+        for (SlimefunTag tag : valuesCache) {\n+            nameLookup.put(tag.name(), tag);\n+        }\n+    }\n+\n+    private final NamespacedKey key;\n+    private final Set<Material> includedMaterials = new HashSet<>();\n+    private final Set<Tag<Material>> additionalTags = new HashSet<>();\n+\n+    /**\n+     * This constructs a new {@link SlimefunTag}.\n+     * The {@link NamespacedKey} will be automatically inferred using\n+     * {@link SlimefunPlugin} and {@link #name()}.\n+     */\n+    SlimefunTag() {\n+        key = new NamespacedKey(SlimefunPlugin.instance(), name().toLowerCase(Locale.ROOT));\n+    }\n+\n+    /**\n+     * This method reloads this {@link SlimefunTag} from our resources directory.\n+     * \n+     * @throws TagMisconfigurationException\n+     *             This is thrown whenever a {@link SlimefunTag} could not be parsed properly\n+     */\n+    public void reload() throws TagMisconfigurationException {\n+        new TagParser(this).parse(this, (materials, tags) -> {\n+            this.includedMaterials.clear();\n+            this.includedMaterials.addAll(materials);\n+\n+            this.additionalTags.clear();\n+            this.additionalTags.addAll(tags);\n+        });\n+    }\n+\n+    public static void reloadAll() throws TagMisconfigurationException {\n+        for (SlimefunTag tag : valuesCache) {\n+            tag.reload();\n+        }\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public NamespacedKey getKey() {\n+        return key;\n+    }\n+\n+    @Override\n+    public boolean isTagged(@Nonnull Material item) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab665ffea2ac6ff2e28a23037edc534f3e452a2"}, "originalPosition": 230}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ3MTE2MQ==", "bodyText": "This also could use some javadocs.", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502471161", "createdAt": "2020-10-09T14:35:17Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/tags/SlimefunTag.java", "diffHunk": "@@ -0,0 +1,312 @@\n+package io.github.thebusybiscuit.slimefun4.utils.tags;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.Material;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.Tag;\n+import org.bukkit.block.data.Waterlogged;\n+\n+import io.github.thebusybiscuit.slimefun4.api.exceptions.TagMisconfigurationException;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.blocks.BlockPlacer;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.CropGrowthAccelerator;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.multiblocks.miner.IndustrialMiner;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.ClimbingPick;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.ExplosiveShovel;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.PickaxeOfTheSeeker;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.PickaxeOfVeinMining;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.SmeltersPickaxe;\n+\n+/**\n+ * This enum contains various implementations of the {@link Tag} interface.\n+ * Most of them serve some purpose within Slimefun's implementation, some are just pure\n+ * extensions of the default Minecraft tags.\n+ * The actual tag files are located in the {@literal /src/main/resources/tags} directory\n+ * and follow Minecraft's tags.json format.\n+ * \n+ * @author TheBusyBiscuit\n+ *\n+ */\n+public enum SlimefunTag implements Tag<Material> {\n+\n+    /**\n+     * Minecraft ores.\n+     */\n+    ORES,\n+\n+    /**\n+     * All Shulker boxes, normal and colored.\n+     */\n+    SHULKER_BOXES,\n+\n+    /**\n+     * All command block variants\n+     */\n+    COMMAND_BLOCKS,\n+\n+    /**\n+     * Every mushroom type, red, brown and nether ones.\n+     */\n+    MUSHROOMS,\n+\n+    /**\n+     * Every glass variant, includes both blocks and panes.\n+     * Also stained glass and stained glass panes.\n+     */\n+    GLASS,\n+\n+    /**\n+     * All variants of glass, normal and stained.\n+     */\n+    GLASS_BLOCKS,\n+\n+    /**\n+     * All variants of glass panes, normal and stained.\n+     */\n+    GLASS_PANES,\n+\n+    /**\n+     * All variants of torches, normal, soulfire and redstone.\n+     */\n+    TORCHES,\n+\n+    /**\n+     * All terracotta variants, does not include glazed terracotta.\n+     */\n+    TERRACOTTA,\n+\n+    /**\n+     * All ice variants, normal, packed, blue and whatever else there is.\n+     */\n+    ICE_VARIANTS,\n+\n+    /**\n+     * All stone variants, normal, andesite, diorite, granite and whatever else may come.\n+     */\n+    STONE_VARIANTS,\n+\n+    /**\n+     * All variants of concrete powder.\n+     * Can you believe there is no tag for this already?\n+     */\n+    CONCRETE_POWDERS,\n+\n+    /**\n+     * Materials which are sensitive to break.\n+     * Things like Saplings or Pressure plates which break as well when you break\n+     * the block beneath them.\n+     */\n+    SENSITIVE_MATERIALS,\n+\n+    /**\n+     * These Materials are sensitive to fluids, they cannot be {@link Waterlogged}\n+     * and would break in contact with water.\n+     */\n+    FLUID_SENSITIVE_MATERIALS,\n+\n+    /**\n+     * These materials are just unbreakable, like bedrock for example.\n+     */\n+    UNBREAKABLE_MATERIALS,\n+\n+    /**\n+     * Materials which cannot be reliably placed using a {@link BlockPlacer}.\n+     */\n+    BLOCK_PLACER_IGNORED_MATERIALS,\n+\n+    /**\n+     * All materials which the {@link ExplosiveShovel} can break.\n+     */\n+    EXPLOSIVE_SHOVEL_BLOCKS,\n+\n+    /**\n+     * All materials (ores) which the {@link PickaxeOfVeinMining} recognizes.\n+     */\n+    PICKAXE_OF_VEIN_MINING_BLOCKS,\n+\n+    /**\n+     * All materials (ores) which the {@link PickaxeOfTheSeeker} recognizes.\n+     */\n+    PICKAXE_OF_THE_SEEKER_BLOCKS,\n+\n+    /**\n+     * All materials which the {@link SmeltersPickaxe} will try and smelt.\n+     */\n+    SMELTERS_PICKAXE_BLOCKS,\n+\n+    /**\n+     * All materials (ores) which the {@link IndustrialMiner} will try to mine.\n+     */\n+    INDUSTRIAL_MINER_ORES,\n+\n+    /**\n+     * All materials (crops) which the {@link CropGrowthAccelerator} will recognize.\n+     */\n+    CROP_GROWTH_ACCELERATOR_BLOCKS,\n+\n+    /**\n+     * All <strong>strong</strong> materials which the {@link ClimbingPick} is able to climb.\n+     */\n+    CLIMBING_PICK_STRONG_SURFACES,\n+\n+    /**\n+     * All <strong>weak</strong> materials which the {@link ClimbingPick} is able to climb.\n+     */\n+    CLIMBING_PICK_WEAK_SURFACES,\n+\n+    /**\n+     * This {@link SlimefunTag} holds all surfaces for the {@link ClimbingPick}.\n+     * This is an aggregation of {@code CLIMBING_PICK_STRONG_SURFACES} and {@code CLIMBING_PICK_WEAK_SURFACES}\n+     */\n+    CLIMBING_PICK_SURFACES,\n+\n+    /**\n+     * All materials (ores) which trigger the Talisman of the Caveman.\n+     */\n+    CAVEMAN_TALISMAN_TRIGGERS;\n+\n+    private static final Map<String, SlimefunTag> nameLookup = new HashMap<>();\n+    public static final SlimefunTag[] valuesCache = values();\n+\n+    static {\n+        for (SlimefunTag tag : valuesCache) {\n+            nameLookup.put(tag.name(), tag);\n+        }\n+    }\n+\n+    private final NamespacedKey key;\n+    private final Set<Material> includedMaterials = new HashSet<>();\n+    private final Set<Tag<Material>> additionalTags = new HashSet<>();\n+\n+    /**\n+     * This constructs a new {@link SlimefunTag}.\n+     * The {@link NamespacedKey} will be automatically inferred using\n+     * {@link SlimefunPlugin} and {@link #name()}.\n+     */\n+    SlimefunTag() {\n+        key = new NamespacedKey(SlimefunPlugin.instance(), name().toLowerCase(Locale.ROOT));\n+    }\n+\n+    /**\n+     * This method reloads this {@link SlimefunTag} from our resources directory.\n+     * \n+     * @throws TagMisconfigurationException\n+     *             This is thrown whenever a {@link SlimefunTag} could not be parsed properly\n+     */\n+    public void reload() throws TagMisconfigurationException {\n+        new TagParser(this).parse(this, (materials, tags) -> {\n+            this.includedMaterials.clear();\n+            this.includedMaterials.addAll(materials);\n+\n+            this.additionalTags.clear();\n+            this.additionalTags.addAll(tags);\n+        });\n+    }\n+\n+    public static void reloadAll() throws TagMisconfigurationException {\n+        for (SlimefunTag tag : valuesCache) {\n+            tag.reload();\n+        }\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public NamespacedKey getKey() {\n+        return key;\n+    }\n+\n+    @Override\n+    public boolean isTagged(@Nonnull Material item) {\n+        if (includedMaterials.contains(item)) {\n+            return true;\n+        } else {\n+            // Check if any of our additional Tags contain this Materials\n+            for (Tag<Material> tag : additionalTags) {\n+                if (tag.isTagged(item)) {\n+                    return true;\n+                }\n+            }\n+\n+            // Now we can be sure it isn't tagged in any way\n+            return false;\n+        }\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public Set<Material> getValues() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab665ffea2ac6ff2e28a23037edc534f3e452a2"}, "originalPosition": 248}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ3MTg1OA==", "bodyText": "Maybe add some @see for SlimefunTag and etc. Just an idea.", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502471858", "createdAt": "2020-10-09T14:36:23Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/tags/TagParser.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package io.github.thebusybiscuit.slimefun4.utils.tags;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.nio.charset.StandardCharsets;\n+import java.util.HashSet;\n+import java.util.Locale;\n+import java.util.Set;\n+import java.util.function.BiConsumer;\n+import java.util.stream.Collectors;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.Bukkit;\n+import org.bukkit.Keyed;\n+import org.bukkit.Material;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.Tag;\n+\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParseException;\n+import com.google.gson.JsonParser;\n+import com.google.gson.JsonPrimitive;\n+\n+import io.github.thebusybiscuit.slimefun4.api.exceptions.TagMisconfigurationException;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.utils.PatternUtils;\n+\n+/**\n+ * The {@link TagParser} is responsible for parsing a JSON input into a {@link SlimefunTag}.\n+ * \n+ * @author TheBusyBiscuit\n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab665ffea2ac6ff2e28a23037edc534f3e452a2"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83e8010e2968a0fdec521ec02b60689214e42f65", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/83e8010e2968a0fdec521ec02b60689214e42f65", "committedDate": "2020-10-09T15:39:21Z", "message": "Lots of refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72d3d243940b75aaa7e72ef3464f40b5abfe55b6", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/72d3d243940b75aaa7e72ef3464f40b5abfe55b6", "committedDate": "2020-10-09T15:44:15Z", "message": "Two annotations!"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1Nzk0NTgz", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#pullrequestreview-505794583", "createdAt": "2020-10-09T15:47:41Z", "commit": {"oid": "72d3d243940b75aaa7e72ef3464f40b5abfe55b6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1Nzg5ODI4", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#pullrequestreview-505789828", "createdAt": "2020-10-09T15:41:55Z", "commit": {"oid": "83e8010e2968a0fdec521ec02b60689214e42f65"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTo0MTo1NVrOHfPPxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTo1MjowOVrOHfPm8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUxNzcwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // This value is not a valid material, the setting is not valid.\n          \n          \n            \n                            // This value is not a valid material, the setting is invalid.", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502517701", "createdAt": "2020-10-09T15:41:55Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/api/items/settings/MaterialTagSetting.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package io.github.thebusybiscuit.slimefun4.api.items.settings;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+import org.bukkit.Material;\n+import org.bukkit.Tag;\n+\n+import io.github.thebusybiscuit.slimefun4.api.items.ItemSetting;\n+\n+/**\n+ * This variation of {@link ItemSetting} allows you to define a default {@link Tag}.\n+ * The {@link Tag} will be translated into a {@link String} {@link List} which the user\n+ * can then configure as they wish.\n+ * \n+ * It also validates all inputs to be a valid {@link Material}.\n+ * \n+ * @author TheBusyBiscuit\n+ * \n+ * @see ItemSetting\n+ *\n+ */\n+public class MaterialTagSetting extends ItemSetting<List<String>> {\n+\n+    private final Tag<Material> defaultTag;\n+\n+    @ParametersAreNonnullByDefault\n+    public MaterialTagSetting(String key, Tag<Material> defaultTag) {\n+        super(key, getAsStringList(defaultTag));\n+\n+        this.defaultTag = defaultTag;\n+    }\n+\n+    /**\n+     * This {@link Tag} holds the default values for this {@link MaterialTagSetting}.\n+     * \n+     * @return The default {@link Tag}\n+     */\n+    @Nonnull\n+    public Tag<Material> getDefaultTag() {\n+        return defaultTag;\n+    }\n+\n+    @Override\n+    public boolean validateInput(List<String> input) {\n+        if (input != null) {\n+            for (String value : input) {\n+                Material material = Material.matchMaterial(value);\n+\n+                // This value is not a valid material, the setting is not valid.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83e8010e2968a0fdec521ec02b60689214e42f65"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUxOTQzMQ==", "bodyText": "This is imported but not used? Or github just doesn't feel like showing it?", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502519431", "createdAt": "2020-10-09T15:44:43Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/magical/talismans/MagicianTalisman.java", "diffHunk": "@@ -12,6 +12,7 @@\n import org.bukkit.inventory.ItemStack;\n \n import io.github.thebusybiscuit.slimefun4.api.items.ItemSetting;\n+import io.github.thebusybiscuit.slimefun4.implementation.settings.TalismanEnchantment;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72d3d243940b75aaa7e72ef3464f40b5abfe55b6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyMTgzMQ==", "bodyText": "Integer.MAX_VALUE should not be used here. We don't want some crazy server owner to make an explosive bow that launches players at the other side of the world.", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502521831", "createdAt": "2020-10-09T15:48:56Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/weapons/ExplosiveBow.java", "diffHunk": "@@ -30,14 +31,7 @@\n  */\n public class ExplosiveBow extends SlimefunBow {\n \n-    private final ItemSetting<Integer> range = new ItemSetting<Integer>(\"explosion-range\", 3) {\n-\n-        @Override\n-        public boolean validateInput(Integer input) {\n-            return super.validateInput(input) && input > 0;\n-        }\n-\n-    };\n+    private final ItemSetting<Integer> range = new IntRangeSetting(\"explosion-range\", 1, 3, Integer.MAX_VALUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72d3d243940b75aaa7e72ef3464f40b5abfe55b6"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyMzM2OA==", "bodyText": "Not sure but shouldn't buttons and redstone conponents be included too?", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502523368", "createdAt": "2020-10-09T15:51:35Z", "author": {"login": "LinoxGH"}, "path": "src/main/resources/tags/sensitive_materials.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{\n+\t\"values\" : [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72d3d243940b75aaa7e72ef3464f40b5abfe55b6"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyMzYzMg==", "bodyText": "Not sure but shouldn't buttons and redstone conponents be included too? As well as cake, pressure plates...", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502523632", "createdAt": "2020-10-09T15:52:09Z", "author": {"login": "LinoxGH"}, "path": "src/main/resources/tags/fluid_sensitive_materials.json", "diffHunk": "@@ -0,0 +1,7 @@\n+{\n+\t\"values\" : [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72d3d243940b75aaa7e72ef3464f40b5abfe55b6"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1ODExODEx", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#pullrequestreview-505811811", "createdAt": "2020-10-09T16:09:43Z", "commit": {"oid": "72d3d243940b75aaa7e72ef3464f40b5abfe55b6"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNjowOTo0M1rOHfQOvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNjowOTo0M1rOHfQOvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzMzgyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * @see TagParser\n          \n          \n            \n             * @see TagParser\n          \n          \n            \n             * @see Material", "url": "https://github.com/Slimefun/Slimefun4/pull/2298#discussion_r502533820", "createdAt": "2020-10-09T16:09:43Z", "author": {"login": "LinoxGH"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/tags/SlimefunTag.java", "diffHunk": "@@ -0,0 +1,325 @@\n+package io.github.thebusybiscuit.slimefun4.utils.tags;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+\n+import org.apache.commons.lang.Validate;\n+import org.bukkit.Material;\n+import org.bukkit.NamespacedKey;\n+import org.bukkit.Tag;\n+import org.bukkit.block.data.Waterlogged;\n+\n+import io.github.thebusybiscuit.slimefun4.api.exceptions.TagMisconfigurationException;\n+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunPlugin;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.blocks.BlockPlacer;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.electric.machines.CropGrowthAccelerator;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.multiblocks.miner.IndustrialMiner;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.ClimbingPick;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.ExplosiveShovel;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.PickaxeOfTheSeeker;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.PickaxeOfVeinMining;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.tools.SmeltersPickaxe;\n+\n+/**\n+ * This enum contains various implementations of the {@link Tag} interface.\n+ * Most of them serve some purpose within Slimefun's implementation, some are just pure\n+ * extensions of the default Minecraft tags.\n+ * The actual tag files are located in the {@literal /src/main/resources/tags} directory\n+ * and follow Minecraft's tags.json format.\n+ * \n+ * @author TheBusyBiscuit\n+ * \n+ * @see TagParser", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72d3d243940b75aaa7e72ef3464f40b5abfe55b6"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf6add1149571b6d3e0d32c3499afdd5ffb7c2f9", "author": {"user": {"login": "TheBusyBiscuit", "name": "TheBusyBiscuit"}}, "url": "https://github.com/Slimefun/Slimefun4/commit/cf6add1149571b6d3e0d32c3499afdd5ffb7c2f9", "committedDate": "2020-10-10T11:36:07Z", "message": "Some small improvements before the merge"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2457, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}