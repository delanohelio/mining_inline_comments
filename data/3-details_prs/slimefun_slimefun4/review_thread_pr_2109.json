{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MjQ2MzQ3", "number": 2109, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoxNjo0NFrOERJH7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoxNzoxNlrOERJIuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDEwNzMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/RechargeableHelper.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoxNjo0NFrOG1sXGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOToyMjozOVrOG1w36g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1NDUyMQ==", "bodyText": "This will break the regex though, wouldn't it?\nSince . must be escaped otherwise it is treated as a wildcard for any character...", "url": "https://github.com/Slimefun/Slimefun4/pull/2109#discussion_r458954521", "createdAt": "2020-07-22T17:16:44Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/RechargeableHelper.java", "diffHunk": "@@ -29,7 +29,7 @@\n \n     private static final NamespacedKey CHARGE_KEY = new NamespacedKey(SlimefunPlugin.instance(), \"item_charge\");\n     private static final String LORE_PREFIX = ChatColors.color(\"&8\\u21E8 &e\\u26A1 &7\");\n-    private static final Pattern REGEX = Pattern.compile(ChatColors.color(\"(&c&o)?\" + LORE_PREFIX) + \"[0-9\\\\.]+ \\\\/ [0-9\\\\.]+ J\");\n+    private static final Pattern REGEX = Pattern.compile(ChatColors.color(\"(&c&o)?\" + LORE_PREFIX) + \"[0-9.]+ / [0-9.]+ J\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3eccfaa4dd3eb02dbe47d62e65e799e9dcf989"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1ODY5MA==", "bodyText": "No. In a character class it is treated as a literal. Only defined groups such as \\w, \\s, \\d and ranges like 0-9, a-z are not.\nHere's a repl too see for yourself: https://repl.it/repls/ComposedJoyfulUnderstanding", "url": "https://github.com/Slimefun/Slimefun4/pull/2109#discussion_r458958690", "createdAt": "2020-07-22T17:23:43Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/RechargeableHelper.java", "diffHunk": "@@ -29,7 +29,7 @@\n \n     private static final NamespacedKey CHARGE_KEY = new NamespacedKey(SlimefunPlugin.instance(), \"item_charge\");\n     private static final String LORE_PREFIX = ChatColors.color(\"&8\\u21E8 &e\\u26A1 &7\");\n-    private static final Pattern REGEX = Pattern.compile(ChatColors.color(\"(&c&o)?\" + LORE_PREFIX) + \"[0-9\\\\.]+ \\\\/ [0-9\\\\.]+ J\");\n+    private static final Pattern REGEX = Pattern.compile(ChatColors.color(\"(&c&o)?\" + LORE_PREFIX) + \"[0-9.]+ / [0-9.]+ J\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1NDUyMQ=="}, "originalCommit": {"oid": "5e3eccfaa4dd3eb02dbe47d62e65e799e9dcf989"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2MDIyNQ==", "bodyText": "What's with the slash though? Since that is not in a character class. Did you test this with a charging bench?", "url": "https://github.com/Slimefun/Slimefun4/pull/2109#discussion_r458960225", "createdAt": "2020-07-22T17:26:17Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/RechargeableHelper.java", "diffHunk": "@@ -29,7 +29,7 @@\n \n     private static final NamespacedKey CHARGE_KEY = new NamespacedKey(SlimefunPlugin.instance(), \"item_charge\");\n     private static final String LORE_PREFIX = ChatColors.color(\"&8\\u21E8 &e\\u26A1 &7\");\n-    private static final Pattern REGEX = Pattern.compile(ChatColors.color(\"(&c&o)?\" + LORE_PREFIX) + \"[0-9\\\\.]+ \\\\/ [0-9\\\\.]+ J\");\n+    private static final Pattern REGEX = Pattern.compile(ChatColors.color(\"(&c&o)?\" + LORE_PREFIX) + \"[0-9.]+ / [0-9.]+ J\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1NDUyMQ=="}, "originalCommit": {"oid": "5e3eccfaa4dd3eb02dbe47d62e65e799e9dcf989"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2MTEwMQ==", "bodyText": "Forward slashes don't need to be escaped in Java.", "url": "https://github.com/Slimefun/Slimefun4/pull/2109#discussion_r458961101", "createdAt": "2020-07-22T17:27:45Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/RechargeableHelper.java", "diffHunk": "@@ -29,7 +29,7 @@\n \n     private static final NamespacedKey CHARGE_KEY = new NamespacedKey(SlimefunPlugin.instance(), \"item_charge\");\n     private static final String LORE_PREFIX = ChatColors.color(\"&8\\u21E8 &e\\u26A1 &7\");\n-    private static final Pattern REGEX = Pattern.compile(ChatColors.color(\"(&c&o)?\" + LORE_PREFIX) + \"[0-9\\\\.]+ \\\\/ [0-9\\\\.]+ J\");\n+    private static final Pattern REGEX = Pattern.compile(ChatColors.color(\"(&c&o)?\" + LORE_PREFIX) + \"[0-9.]+ / [0-9.]+ J\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1NDUyMQ=="}, "originalCommit": {"oid": "5e3eccfaa4dd3eb02dbe47d62e65e799e9dcf989"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAyODQ1OA==", "bodyText": "Everything I learned was a lie :CryingPepe:", "url": "https://github.com/Slimefun/Slimefun4/pull/2109#discussion_r459028458", "createdAt": "2020-07-22T19:22:39Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/core/attributes/RechargeableHelper.java", "diffHunk": "@@ -29,7 +29,7 @@\n \n     private static final NamespacedKey CHARGE_KEY = new NamespacedKey(SlimefunPlugin.instance(), \"item_charge\");\n     private static final String LORE_PREFIX = ChatColors.color(\"&8\\u21E8 &e\\u26A1 &7\");\n-    private static final Pattern REGEX = Pattern.compile(ChatColors.color(\"(&c&o)?\" + LORE_PREFIX) + \"[0-9\\\\.]+ \\\\/ [0-9\\\\.]+ J\");\n+    private static final Pattern REGEX = Pattern.compile(ChatColors.color(\"(&c&o)?\" + LORE_PREFIX) + \"[0-9.]+ / [0-9.]+ J\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1NDUyMQ=="}, "originalCommit": {"oid": "5e3eccfaa4dd3eb02dbe47d62e65e799e9dcf989"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDEwOTM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/PatternUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoxNzoxNlrOG1sYVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzoyMzo1M1rOG1snuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1NDgzNg==", "bodyText": "Same here, wouldn't . be treated as a wildcard?", "url": "https://github.com/Slimefun/Slimefun4/pull/2109#discussion_r458954836", "createdAt": "2020-07-22T17:17:16Z", "author": {"login": "TheBusyBiscuit"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/PatternUtils.java", "diffHunk": "@@ -26,6 +26,5 @@ private PatternUtils() {}\n     public static final Pattern ALPHANUMERIC = Pattern.compile(\"[A-Fa-f0-9]+\");\n     public static final Pattern NUMERIC = Pattern.compile(\"[0-9]+\");\n \n-    public static final Pattern NUMBER_SEPERATOR = Pattern.compile(\",|\\\\.\");\n-\n+    public static final Pattern NUMBER_SEPARATOR = Pattern.compile(\"[,.]\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3eccfaa4dd3eb02dbe47d62e65e799e9dcf989"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1ODc3Ng==", "bodyText": "See comment above", "url": "https://github.com/Slimefun/Slimefun4/pull/2109#discussion_r458958776", "createdAt": "2020-07-22T17:23:53Z", "author": {"login": "WalshyDev"}, "path": "src/main/java/io/github/thebusybiscuit/slimefun4/utils/PatternUtils.java", "diffHunk": "@@ -26,6 +26,5 @@ private PatternUtils() {}\n     public static final Pattern ALPHANUMERIC = Pattern.compile(\"[A-Fa-f0-9]+\");\n     public static final Pattern NUMERIC = Pattern.compile(\"[0-9]+\");\n \n-    public static final Pattern NUMBER_SEPERATOR = Pattern.compile(\",|\\\\.\");\n-\n+    public static final Pattern NUMBER_SEPARATOR = Pattern.compile(\"[,.]\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1NDgzNg=="}, "originalCommit": {"oid": "5e3eccfaa4dd3eb02dbe47d62e65e799e9dcf989"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 422, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}