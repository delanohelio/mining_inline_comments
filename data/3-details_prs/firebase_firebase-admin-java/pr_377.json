{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMzc4NjE2", "number": 377, "title": "Add createTenant and updateTenant operations.", "bodyText": "This pull request adds the createTenant and updateTenant operations to the API. I've added the relevant unit tests to FirebaseUserManagerTest. This is part of the initiative to adding multi-tenancy support (see issue #332).\nI've also made a few tweaks to the implementation and tests of the other tenant operations:\n\nCalling the synchronous versions of the API (as opposed to the async versions) makes the tests cleaner.\nI've improved URL assertions in a few places.\nI've simplified the error handling of getTenant and deleteTenant (after realizing that the manual checks I put in place were doing nothing since the server responds with an error and a firebase exception with the proper error code gets thrown).\n\nREST API: https://identitytoolkit.googleapis.com/$discovery/rest?version=v2", "createdAt": "2020-03-02T13:17:40Z", "url": "https://github.com/firebase/firebase-admin-java/pull/377", "merged": true, "mergeCommit": {"oid": "52d6cb5bcc5bc639dae3c0d151f1b24993053a16"}, "closed": true, "closedAt": "2020-03-12T21:06:48Z", "author": {"login": "micahstairs"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJlZpVAH2gAyMzgyMzc4NjE2OjNlNTIzODc4NzkwZmI4Y2IzNDQwZTA4MzRlYzhlODkwNGM1OGEyMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNCO5pgFqTM3Mzg5ODM1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3e523878790fb8cb3440e0834ec8e8904c58a233", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/3e523878790fb8cb3440e0834ec8e8904c58a233", "committedDate": "2020-03-02T03:45:54Z", "message": "Implement createTenant and updateTenant operations."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NDY3Mzc0", "url": "https://github.com/firebase/firebase-admin-java/pull/377#pullrequestreview-367467374", "createdAt": "2020-03-02T19:30:48Z", "commit": {"oid": "3e523878790fb8cb3440e0834ec8e8904c58a233"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOTozMDo0OVrOFwsZSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOTozMzowMVrOFwsdng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwMzMzOA==", "bodyText": "Put the properties in the request body.", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r386603338", "createdAt": "2020-03-02T19:30:49Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +230,28 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    url.putAll(request.getProperties());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e523878790fb8cb3440e0834ec8e8904c58a233"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwMzcyNw==", "bodyText": "Put the properties in the request body. Remove the extra call to getProperties().", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r386603727", "createdAt": "2020-03-02T19:31:35Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +230,28 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    url.putAll(request.getProperties());\n+    return sendRequest(\"POST\", url, null, Tenant.class);\n+  }\n+\n+  Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n+    Map<String, Object> properties = request.getProperties();\n+    checkArgument(properties.size() > 1,\n+        \"tenant update must have at least one property other than tenantId set\");\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + request.getTenantId());\n+    url.putAll(properties);\n+    url.putAll(request.getProperties());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e523878790fb8cb3440e0834ec8e8904c58a233"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwNDQ0Ng==", "bodyText": "You need to generate an updateMask from the given properties, and add it the URL here. See the corresponding Go and Node.js implementations.", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r386604446", "createdAt": "2020-03-02T19:33:01Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +230,28 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    url.putAll(request.getProperties());\n+    return sendRequest(\"POST\", url, null, Tenant.class);\n+  }\n+\n+  Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n+    Map<String, Object> properties = request.getProperties();\n+    checkArgument(properties.size() > 1,\n+        \"tenant update must have at least one property other than tenantId set\");\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + request.getTenantId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e523878790fb8cb3440e0834ec8e8904c58a233"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b847d370f5ba5e504dc4a4ff874e845a903f4d81", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/b847d370f5ba5e504dc4a4ff874e845a903f4d81", "committedDate": "2020-03-08T20:54:52Z", "message": "Put createTenant/updateTenant properties in body instead of URL."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22d3608dbc6127cac737d07154398c600e20ca5b", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/22d3608dbc6127cac737d07154398c600e20ca5b", "committedDate": "2020-03-12T19:35:20Z", "message": "Send request parameters in body and add updateMask to URL."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczODc1MzY2", "url": "https://github.com/firebase/firebase-admin-java/pull/377#pullrequestreview-373875366", "createdAt": "2020-03-12T20:23:23Z", "commit": {"oid": "22d3608dbc6127cac737d07154398c600e20ca5b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDoyMzoyNFrOF1uHMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDoyMzoyNFrOF1uHMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg3NDM1NA==", "bodyText": "This will break if the request contains any nested properties (we don't have any at the moment). If the request is shaped like {\"foo\": {\"bar\": 100}}, the update mask should look like ['foo.bar'].\nLet's either implement a small util function to generate the correct update masks for all requests, or add a comment/TODO here to indicate the limitation with the current appraoch.", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r391874354", "createdAt": "2020-03-12T20:23:24Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +231,26 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    return sendRequest(\"POST\", url, request.getProperties(), Tenant.class);\n+  }\n+\n+  Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n+    Map<String, Object> properties = request.getProperties();\n+    checkArgument(!properties.isEmpty(), \"tenant update must have at least one property set\");\n+    String updateMask = String.join(\",\", ImmutableSortedSet.copyOf(properties.keySet()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d3608dbc6127cac737d07154398c600e20ca5b"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f549ee3dabad7969829e54007a134338946d2fa", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/2f549ee3dabad7969829e54007a134338946d2fa", "committedDate": "2020-03-12T20:57:54Z", "message": "Move update mask logic to helper method and add comment describing limitations."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczODk2MTgx", "url": "https://github.com/firebase/firebase-admin-java/pull/377#pullrequestreview-373896181", "createdAt": "2020-03-12T20:59:15Z", "commit": {"oid": "2f549ee3dabad7969829e54007a134338946d2fa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczODk4MzUz", "url": "https://github.com/firebase/firebase-admin-java/pull/377#pullrequestreview-373898353", "createdAt": "2020-03-12T21:03:11Z", "commit": {"oid": "2f549ee3dabad7969829e54007a134338946d2fa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2832, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}