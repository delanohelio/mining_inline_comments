{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMzg1MjI3", "number": 424, "title": "Add operation to update SAML provider configs.", "bodyText": "Adds an update operation for SAML provider configs. I've included both unit tests and integration tests.", "createdAt": "2020-05-26T18:42:14Z", "url": "https://github.com/firebase/firebase-admin-java/pull/424", "merged": true, "mergeCommit": {"oid": "c3a08b45bd96866324c60d2804217391472274d8"}, "closed": true, "closedAt": "2020-05-27T18:36:55Z", "author": {"login": "micahstairs"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclJJOTAH2gAyNDIzMzg1MjI3OmQ4M2JiODc4ODA2ZmFkZmM2ZjkxNTQ3NmNmNDczYTk5M2JmYmI1MjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcldqFvAH2gAyNDIzMzg1MjI3OmJlZDgyMjFhMmQ4Y2E4OWE3OWU3NDA2OWNkZGQxODA2ODAzMmU0ZTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d83bb878806fadfc6f915476cf473a993bfbb521", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/d83bb878806fadfc6f915476cf473a993bfbb521", "committedDate": "2020-05-26T18:40:30Z", "message": "Add operation to update SAML provider configs."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NzMxNzM3", "url": "https://github.com/firebase/firebase-admin-java/pull/424#pullrequestreview-418731737", "createdAt": "2020-05-26T22:51:49Z", "commit": {"oid": "d83bb878806fadfc6f915476cf473a993bfbb521"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMjo1MTo0OVrOGay53g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMjo1Nzo1NFrOGazCUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc1MDE3NA==", "bodyText": "Declare return type to be Set<String> for extra flexibility.", "url": "https://github.com/firebase/firebase-admin-java/pull/424#discussion_r430750174", "createdAt": "2020-05-26T22:51:49Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -384,12 +389,19 @@ void deleteSamlProviderConfig(String providerId) throws FirebaseAuthException {\n     sendRequest(\"DELETE\", url, null, GenericJson.class);\n   }\n \n-  private static String generateMask(Map<String, Object> properties) {\n-    // This implementation does not currently handle the case of nested properties. This is fine\n-    // since we do not currently generate masks for any properties with nested values. When it\n-    // comes time to implement this, we can check if a property has nested properties by checking\n-    // if it is an instance of the Map class.\n-    return Joiner.on(\",\").join(ImmutableSortedSet.copyOf(properties.keySet()));\n+  private static ImmutableSortedSet<String> generateMask(Map<String, Object> properties) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d83bb878806fadfc6f915476cf473a993bfbb521"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc1MjIyOQ==", "bodyText": "Some empty lines would make this a bit more pleasing to the eye. How about a newline just before this line?", "url": "https://github.com/firebase/firebase-admin-java/pull/424#discussion_r430752229", "createdAt": "2020-05-26T22:57:38Z", "author": {"login": "hiranya911"}, "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "diffHunk": "@@ -1944,6 +1944,136 @@ public void testTenantAwareCreateSamlProvider() throws Exception {\n     checkUrl(interceptor, \"POST\", TENANTS_BASE_URL + \"/TENANT_ID/inboundSamlConfigs\");\n   }\n \n+  @Test\n+  public void testUpdateSamlProvider() throws Exception {\n+    TestResponseInterceptor interceptor = initializeAppForUserManagement(\n+        TestUtils.loadResource(\"saml.json\"));\n+    // TODO(micahstairs): Add 'signRequest' to the create request once that field is added to\n+    // SamlProviderConfig.\n+    SamlProviderConfig.UpdateRequest updateRequest =\n+        new SamlProviderConfig.UpdateRequest(\"saml.provider-id\")\n+          .setDisplayName(\"DISPLAY_NAME\")\n+          .setEnabled(true)\n+          .setIdpEntityId(\"IDP_ENTITY_ID\")\n+          .setSsoUrl(\"https://example.com/login\")\n+          .addX509Certificate(\"certificate1\")\n+          .addX509Certificate(\"certificate2\")\n+          .setRpEntityId(\"RP_ENTITY_ID\")\n+          .setCallbackUrl(\"https://projectId.firebaseapp.com/__/auth/handler\");\n+\n+    SamlProviderConfig config = FirebaseAuth.getInstance().updateSamlProviderConfig(updateRequest);\n+\n+    checkSamlProviderConfig(config, \"saml.provider-id\");\n+    checkRequestHeaders(interceptor);\n+    checkUrl(interceptor, \"PATCH\", PROJECT_BASE_URL + \"/inboundSamlConfigs/saml.provider-id\");\n+    GenericUrl url = interceptor.getResponse().getRequest().getUrl();\n+    assertEquals(\n+        \"displayName,enabled,idpConfig.idpCertificates,idpConfig.idpEntityId,idpConfig.ssoUrl,\"\n+          + \"spConfig.callbackUri,spConfig.spEntityId\",\n+        url.getFirst(\"updateMask\"));\n+\n+    GenericJson parsed = parseRequestContent(interceptor);\n+    assertEquals(\"DISPLAY_NAME\", parsed.get(\"displayName\"));\n+    assertTrue((boolean) parsed.get(\"enabled\"));\n+    Map<String, Object> idpConfig = (Map<String, Object>) parsed.get(\"idpConfig\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d83bb878806fadfc6f915476cf473a993bfbb521"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc1MjMzOQ==", "bodyText": "Here too.", "url": "https://github.com/firebase/firebase-admin-java/pull/424#discussion_r430752339", "createdAt": "2020-05-26T22:57:54Z", "author": {"login": "hiranya911"}, "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "diffHunk": "@@ -1944,6 +1944,136 @@ public void testTenantAwareCreateSamlProvider() throws Exception {\n     checkUrl(interceptor, \"POST\", TENANTS_BASE_URL + \"/TENANT_ID/inboundSamlConfigs\");\n   }\n \n+  @Test\n+  public void testUpdateSamlProvider() throws Exception {\n+    TestResponseInterceptor interceptor = initializeAppForUserManagement(\n+        TestUtils.loadResource(\"saml.json\"));\n+    // TODO(micahstairs): Add 'signRequest' to the create request once that field is added to\n+    // SamlProviderConfig.\n+    SamlProviderConfig.UpdateRequest updateRequest =\n+        new SamlProviderConfig.UpdateRequest(\"saml.provider-id\")\n+          .setDisplayName(\"DISPLAY_NAME\")\n+          .setEnabled(true)\n+          .setIdpEntityId(\"IDP_ENTITY_ID\")\n+          .setSsoUrl(\"https://example.com/login\")\n+          .addX509Certificate(\"certificate1\")\n+          .addX509Certificate(\"certificate2\")\n+          .setRpEntityId(\"RP_ENTITY_ID\")\n+          .setCallbackUrl(\"https://projectId.firebaseapp.com/__/auth/handler\");\n+\n+    SamlProviderConfig config = FirebaseAuth.getInstance().updateSamlProviderConfig(updateRequest);\n+\n+    checkSamlProviderConfig(config, \"saml.provider-id\");\n+    checkRequestHeaders(interceptor);\n+    checkUrl(interceptor, \"PATCH\", PROJECT_BASE_URL + \"/inboundSamlConfigs/saml.provider-id\");\n+    GenericUrl url = interceptor.getResponse().getRequest().getUrl();\n+    assertEquals(\n+        \"displayName,enabled,idpConfig.idpCertificates,idpConfig.idpEntityId,idpConfig.ssoUrl,\"\n+          + \"spConfig.callbackUri,spConfig.spEntityId\",\n+        url.getFirst(\"updateMask\"));\n+\n+    GenericJson parsed = parseRequestContent(interceptor);\n+    assertEquals(\"DISPLAY_NAME\", parsed.get(\"displayName\"));\n+    assertTrue((boolean) parsed.get(\"enabled\"));\n+    Map<String, Object> idpConfig = (Map<String, Object>) parsed.get(\"idpConfig\");\n+    assertNotNull(idpConfig);\n+    assertEquals(3, idpConfig.size());\n+    assertEquals(\"IDP_ENTITY_ID\", idpConfig.get(\"idpEntityId\"));\n+    assertEquals(\"https://example.com/login\", idpConfig.get(\"ssoUrl\"));\n+    List<Object> idpCertificates = (List<Object>) idpConfig.get(\"idpCertificates\");\n+    assertNotNull(idpCertificates);\n+    assertEquals(2, idpCertificates.size());\n+    assertEquals(ImmutableMap.of(\"x509Certificate\", \"certificate1\"), idpCertificates.get(0));\n+    assertEquals(ImmutableMap.of(\"x509Certificate\", \"certificate2\"), idpCertificates.get(1));\n+    Map<String, Object> spConfig = (Map<String, Object>) parsed.get(\"spConfig\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d83bb878806fadfc6f915476cf473a993bfbb521"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f29ebc31b2b1219fda7f615602fa1321512559cc", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/f29ebc31b2b1219fda7f615602fa1321512559cc", "committedDate": "2020-05-27T18:19:16Z", "message": "Add blank lines to make code less dense."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bed8221a2d8ca89a79e74069cddd18068032e4e3", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/bed8221a2d8ca89a79e74069cddd18068032e4e3", "committedDate": "2020-05-27T18:34:30Z", "message": "Relax method signature to Set<String>."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2889, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}