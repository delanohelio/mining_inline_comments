{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNDI0NjQx", "number": 465, "title": "change: New error handling APIs (merging v7 branch into master)", "bodyText": "RELEASE NOTE: feat: Added a collection of new APIs for implementing advanced error handling logic. See error handling guide for more details.\nRELEASE NOTE: feat: Added a new ErrorCode enum that defines all platform error codes.\nRELEASE NOTE: feat: Added a new IncomingHttpResponse class that can be used to access the HTTP response object associated with an exception.\nRELEASE NOTE: feat(auth): Added a new AuthErrorCode enum that defines all Firebase Auth error codes.\nRELEASE NOTE: change(auth): FirebaseAuthException now exposes its error code as an AuthErrorCode value.\nRELEASE NOTE: change(auth): All implementations of the UserImportHash abstract class are now marked final.\nRELEASE NOTE: feat(fcm): Added a new MessagingErrorCode enum that defines all Firebase Cloud Messaging error codes.\nRELEASE NOTE: change(fcm): FirebaseMessagingException now exposes its error code as a MessagingErrorCode value.\nRELEASE NOTE: change(fcm): Public constructors of the Notification class have been removed. Use the Notification.builder() to create new instances.\nResolves #354", "createdAt": "2020-08-03T22:19:44Z", "url": "https://github.com/firebase/firebase-admin-java/pull/465", "merged": true, "mergeCommit": {"oid": "cc520a721ef3ced13c6c1e34fa010d082a948b99"}, "closed": true, "closedAt": "2020-08-18T17:24:18Z", "author": {"login": "hiranya911"}, "timelineItems": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9lkLngH2gAyNDYyNDI0NjQxOmIyNjkxOTFhZTc2ZjMwMTA4YjFlMjQxNjQ5OGFmYTlmM2ZhZTA0MmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_6V7CgH2gAyNDYyNDI0NjQxOmEyNjk4YmMzY2QyOWViZTUwNDcyYzBiMDRjZDg3OWM5NzcxMjRkNTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b269191ae76f30108b1e2416498afa9f3fae042d", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/b269191ae76f30108b1e2416498afa9f3fae042d", "committedDate": "2020-01-24T21:10:19Z", "message": "Added core types for the error handling revamp (#350)\n\n* Added core types for the error handling revamp\r\n\r\n* Fixed copyright year"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e3fd199a6dc587d241d7decbab375019cc21415", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/5e3fd199a6dc587d241d7decbab375019cc21415", "committedDate": "2020-01-30T19:12:48Z", "message": "Added ErrorHandlingHttpClient API (#353)\n\n* Added core error handling abstractions\r\n\r\n* Added unit tests for the new functionality\r\n\r\n* Exposed getErrorCode as getErrorCodeNew\r\n\r\n* Enabled error code assertions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0f29dd0610e66c85ade4debc325117353b9dfea", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/a0f29dd0610e66c85ade4debc325117353b9dfea", "committedDate": "2020-02-03T19:14:36Z", "message": "Error handling revamp for the FirebaseMessaging API (#357)\n\n* Added core error handling abstractions\r\n\r\n* Added unit tests for the new functionality\r\n\r\n* Exposed getErrorCode as getErrorCodeNew\r\n\r\n* Enabled error code assertions\r\n\r\n* Error handling revamp for FCM APIs\r\n\r\n* Cleaned up the FirebaseMessagingException\r\n\r\n* Cleaned up the AbstractHttpErrorHandler class\r\n\r\n* Updated tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34a6b0a599cdaaf2bc92ea81183eeab8f15f8f15", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/34a6b0a599cdaaf2bc92ea81183eeab8f15f8f15", "committedDate": "2020-02-04T00:03:40Z", "message": "Merge branch 'master' into v7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c104db6a73cf3255e15c34cd6ba07aed628f2b6d", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/c104db6a73cf3255e15c34cd6ba07aed628f2b6d", "committedDate": "2020-02-06T21:06:55Z", "message": "Error handling revamp for FirebaseInstanceId API (#359)\n\n* Delete instance ID API error handling revamp\r\n\r\n* Added tests for IO and parse errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a6f45fc2285f9dd8c0d437362569d5ff8e551f8", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/2a6f45fc2285f9dd8c0d437362569d5ff8e551f8", "committedDate": "2020-02-10T19:22:27Z", "message": "fix(auth): Migrated user management APIs to the new error handling scheme (#360)\n\n* Error handling revamp in FirebaseUserManager\r\n\r\n* Updated integration tests; Added documentation\r\n\r\n* Assigning the correct ErrorCode for auth errors\r\n\r\n* Moved AuthErrorHandler to a separate top-level class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04144f3ae6e33b015124f9c61e5cacd7a276d4b5", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/04144f3ae6e33b015124f9c61e5cacd7a276d4b5", "committedDate": "2020-02-12T18:15:04Z", "message": "Error handling revamp for token verification APIs (#362)\n\n* Error handling revamp for token verification APIs\r\n\r\n* Updated javadocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b7f36000ede69171b2c52fd17d1305fd1a194c6", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/6b7f36000ede69171b2c52fd17d1305fd1a194c6", "committedDate": "2020-02-13T18:24:28Z", "message": "Error handling revamp for the custom token creation API (#366)\n\n* Error handlign revamp for the custom token creation API\r\n\r\n* Using the correct authorized HTTP client for IAM requests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d9ae6992948c78cf0a81eb156d858aa2b7a2827", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/5d9ae6992948c78cf0a81eb156d858aa2b7a2827", "committedDate": "2020-02-13T23:42:03Z", "message": "Merged with master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb32c9cc87b402a07c44cd9519e6e1f0c23a9965", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/eb32c9cc87b402a07c44cd9519e6e1f0c23a9965", "committedDate": "2020-03-04T21:04:05Z", "message": "Error handling revamp for the project management API (#367)\n\n* Error handling revamp for the project management API\r\n\r\n* Minor code and test cleanup\r\n\r\n* Fixed some lint errors; Removed requestFactory reference from project mgt service impl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b785e028de803396b54e51f79a1dd222877a0ffb", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/b785e028de803396b54e51f79a1dd222877a0ffb", "committedDate": "2020-03-06T01:20:15Z", "message": "Renamed getErrorCodeNew() to getErrorCode() (#379)\n\n* Minor code and test cleanup\r\n\r\n* Renamed getErrorCodeNew() to getErrorCode() in FirebaseException\r\n\r\n* Fixing checkstyle error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3025583b2a56c36ea2a8b93decca0618d0bf331", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/d3025583b2a56c36ea2a8b93decca0618d0bf331", "committedDate": "2020-03-10T17:25:30Z", "message": "Fixing some deprecation warnings (#380)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1e21f3497a1cc2c9c0d5044d12589a37070312b", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/d1e21f3497a1cc2c9c0d5044d12589a37070312b", "committedDate": "2020-03-11T19:08:39Z", "message": "Handling IID error codes correctly (#381)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8128eca7e1ef5895e47f72315210e88fdf86afe9", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/8128eca7e1ef5895e47f72315210e88fdf86afe9", "committedDate": "2020-03-19T23:40:08Z", "message": "Removed old deprecated APIs (#383)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcb07a1699ad187cfe399c4f5ddc04997acd5e3b", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/dcb07a1699ad187cfe399c4f5ddc04997acd5e3b", "committedDate": "2020-05-27T21:59:24Z", "message": "fix: Removed unused FirebaseAppStore abstraction (#427)\n\n* fix: Removed unused FirebaseAppStore abstraction\r\n\r\n* Using the keySet of App instances to populate the app names list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dd03b4514f3af1c76b77c9b0907cbbdfeb3a121", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/5dd03b4514f3af1c76b77c9b0907cbbdfeb3a121", "committedDate": "2020-06-11T00:02:15Z", "message": "chore: Removing redundant test dependency (#441)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be732857f5fc5175848d8188035966cc1009dfb4", "author": {"user": {"login": "MathBunny", "name": "Horatiu Lazu"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/be732857f5fc5175848d8188035966cc1009dfb4", "committedDate": "2020-06-13T01:04:49Z", "message": "chore: Make user import hashing classes final (#425)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ff27a7912fc8ff17b67c307b2e612148ca8ac39", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/4ff27a7912fc8ff17b67c307b2e612148ca8ac39", "committedDate": "2020-07-24T18:12:44Z", "message": "chore: Merged with v7 branch with master (#456)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8e97605852c2a8fce6f4701b87100a248b0bdd2", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/c8e97605852c2a8fce6f4701b87100a248b0bdd2", "committedDate": "2020-07-28T19:40:12Z", "message": "fix(fcm): Replacing deprecated Batch API constructor (#460)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cd38a9c8e868819dc52a4256ac5d2e14186e5af", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/9cd38a9c8e868819dc52a4256ac5d2e14186e5af", "committedDate": "2020-07-28T19:44:18Z", "message": "fix: Handling http method override in ErrorHandlingHttpClient (#459)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd737b51431e695309b3b26926b9d0242943ccd4", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/bd737b51431e695309b3b26926b9d0242943ccd4", "committedDate": "2020-07-29T18:02:26Z", "message": "fix: Handling JSON serialization/response interception at ErrorHandlingHttpClient (#462)\n\n* fix: Handling JSON serialization and response interception at ErrorHandlingHttpClient\r\n\r\n* fix: Removing redundant method override header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d3f2d6bb2d6fd92860e05a79ce90d26d258be59", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/0d3f2d6bb2d6fd92860e05a79ce90d26d258be59", "committedDate": "2020-07-30T21:56:17Z", "message": "feat: Added new error codes for IdP management and multitenancy (#458)\n\n* feat: Added new error codes for IdP management and multitenancy\r\n\r\n* fix: Updated integration tests\r\n\r\n* fix: Renamed helper method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25f57e5a61bdaadcaf287f8e93984a5006c1e9f5", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/25f57e5a61bdaadcaf287f8e93984a5006c1e9f5", "committedDate": "2020-07-31T18:23:25Z", "message": "fix: Removing some calls to deprecated APIs (#464)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "430f9a88d1dc0a6f8b67071659b3b11e9e2be59d", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/430f9a88d1dc0a6f8b67071659b3b11e9e2be59d", "committedDate": "2020-07-31T18:23:41Z", "message": "chore: Support for specifying query parameters in HttpRequestInfo (#463)\n\n* chore: Support for specifying query parameters in HttpRequestInfo\r\n\r\n* fix: Removing redundant JsonObjectParser from HttpClient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04e7038543976d21ecb226623e8d6141f6422f13", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/04e7038543976d21ecb226623e8d6141f6422f13", "committedDate": "2020-08-03T22:07:56Z", "message": "Merged with master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca263257fb32b64a23684103fe113101fb9d9c70", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/ca263257fb32b64a23684103fe113101fb9d9c70", "committedDate": "2020-08-04T17:42:57Z", "message": "fix: Fixing a series of javadoc warnings (#466)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d938529d87637b480d19c732a672121008e4a3a", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/7d938529d87637b480d19c732a672121008e4a3a", "committedDate": "2020-08-10T23:54:12Z", "message": "chore: merging with master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca685664b2da7ffcb6795ae4ec5391166908a98e", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/ca685664b2da7ffcb6795ae4ec5391166908a98e", "committedDate": "2020-08-10T23:54:40Z", "message": "Merge branch 'v7' of github.com:firebase/firebase-admin-java into v7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/b413c7ab64fcf2af657b55e578647559cf2bcd61", "committedDate": "2020-08-11T00:09:06Z", "message": "fix: Made some APIs on AbstractFirebaseAuth.Builder package-protected for consistency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MTQzMzE4", "url": "https://github.com/firebase/firebase-admin-java/pull/465#pullrequestreview-467143318", "createdAt": "2020-08-13T21:28:06Z", "commit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMToyODowNlrOHAeVpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMToyOTozMFrOHAeYcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI1OTExMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * A specified resource is not found, or the request is rejected by undisclosed reasons,\n          \n          \n            \n               * such as whitelisting.\n          \n          \n            \n               * A specified resource is not found, or the request is rejected for unknown reasons,\n          \n          \n            \n               * such as a blocked network address.", "url": "https://github.com/firebase/firebase-admin-java/pull/465#discussion_r470259110", "createdAt": "2020-08-13T21:28:06Z", "author": {"login": "kevinthecheung"}, "path": "src/main/java/com/google/firebase/ErrorCode.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase;\n+\n+/**\n+ * Platform-wide error codes that can be raised by Admin SDK APIs.\n+ */\n+public enum ErrorCode {\n+\n+  /**\n+   * Client specified an invalid argument.\n+   */\n+  INVALID_ARGUMENT,\n+\n+  /**\n+   * Request can not be executed in the current system state, such as deleting a non-empty\n+   * directory.\n+   */\n+  FAILED_PRECONDITION,\n+\n+  /**\n+   * Client specified an invalid range.\n+   */\n+  OUT_OF_RANGE,\n+\n+  /**\n+   * Request not authenticated due to missing, invalid, or expired OAuth token.\n+   */\n+  UNAUTHENTICATED,\n+\n+  /**\n+   * Client does not have sufficient permission. This can happen because the OAuth token does\n+   * not have the right scopes, the client doesn't have permission, or the API has not been\n+   * enabled for the client project.\n+   */\n+  PERMISSION_DENIED,\n+\n+  /**\n+   * A specified resource is not found, or the request is rejected by undisclosed reasons,\n+   * such as whitelisting.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI1OTQxMQ==", "bodyText": "Intentional dupe?", "url": "https://github.com/firebase/firebase-admin-java/pull/465#discussion_r470259411", "createdAt": "2020-08-13T21:28:40Z", "author": {"login": "kevinthecheung"}, "path": "src/main/java/com/google/firebase/ErrorCode.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase;\n+\n+/**\n+ * Platform-wide error codes that can be raised by Admin SDK APIs.\n+ */\n+public enum ErrorCode {\n+\n+  /**\n+   * Client specified an invalid argument.\n+   */\n+  INVALID_ARGUMENT,\n+\n+  /**\n+   * Request can not be executed in the current system state, such as deleting a non-empty\n+   * directory.\n+   */\n+  FAILED_PRECONDITION,\n+\n+  /**\n+   * Client specified an invalid range.\n+   */\n+  OUT_OF_RANGE,\n+\n+  /**\n+   * Request not authenticated due to missing, invalid, or expired OAuth token.\n+   */\n+  UNAUTHENTICATED,\n+\n+  /**\n+   * Client does not have sufficient permission. This can happen because the OAuth token does\n+   * not have the right scopes, the client doesn't have permission, or the API has not been\n+   * enabled for the client project.\n+   */\n+  PERMISSION_DENIED,\n+\n+  /**\n+   * A specified resource is not found, or the request is rejected by undisclosed reasons,\n+   * such as whitelisting.\n+   */\n+  NOT_FOUND,\n+\n+  /**\n+   * Concurrency conflict, such as read-modify-write conflict.\n+   */\n+  CONFLICT,\n+\n+  /**\n+   * Concurrency conflict, such as read-modify-write conflict.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI1OTgyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Either out of resource quota or reaching rate limiting.\n          \n          \n            \n               * Either out of resource quota or rate limited.", "url": "https://github.com/firebase/firebase-admin-java/pull/465#discussion_r470259825", "createdAt": "2020-08-13T21:29:30Z", "author": {"login": "kevinthecheung"}, "path": "src/main/java/com/google/firebase/ErrorCode.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase;\n+\n+/**\n+ * Platform-wide error codes that can be raised by Admin SDK APIs.\n+ */\n+public enum ErrorCode {\n+\n+  /**\n+   * Client specified an invalid argument.\n+   */\n+  INVALID_ARGUMENT,\n+\n+  /**\n+   * Request can not be executed in the current system state, such as deleting a non-empty\n+   * directory.\n+   */\n+  FAILED_PRECONDITION,\n+\n+  /**\n+   * Client specified an invalid range.\n+   */\n+  OUT_OF_RANGE,\n+\n+  /**\n+   * Request not authenticated due to missing, invalid, or expired OAuth token.\n+   */\n+  UNAUTHENTICATED,\n+\n+  /**\n+   * Client does not have sufficient permission. This can happen because the OAuth token does\n+   * not have the right scopes, the client doesn't have permission, or the API has not been\n+   * enabled for the client project.\n+   */\n+  PERMISSION_DENIED,\n+\n+  /**\n+   * A specified resource is not found, or the request is rejected by undisclosed reasons,\n+   * such as whitelisting.\n+   */\n+  NOT_FOUND,\n+\n+  /**\n+   * Concurrency conflict, such as read-modify-write conflict.\n+   */\n+  CONFLICT,\n+\n+  /**\n+   * Concurrency conflict, such as read-modify-write conflict.\n+   */\n+  ABORTED,\n+\n+  /**\n+   * The resource that a client tried to create already exists.\n+   */\n+  ALREADY_EXISTS,\n+\n+  /**\n+   * Either out of resource quota or reaching rate limiting.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MTUzODg4", "url": "https://github.com/firebase/firebase-admin-java/pull/465#pullrequestreview-467153888", "createdAt": "2020-08-13T21:47:15Z", "commit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "state": "COMMENTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjowMDowNVrOHAfLGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjozNDowNFrOHAf8vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3Mjc5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /**\n          \n          \n            \n               * Request can not be executed in the current system state, such as deleting a non-empty\n          \n          \n            \n               * directory.\n          \n          \n            \n              /**\n          \n          \n            \n               * Request cannot be executed in the current system state, such as deleting a non-empty\n          \n          \n            \n               * directory.", "url": "https://github.com/firebase/firebase-admin-java/pull/465#discussion_r470272794", "createdAt": "2020-08-13T22:00:05Z", "author": {"login": "egilmorez"}, "path": "src/main/java/com/google/firebase/ErrorCode.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase;\n+\n+/**\n+ * Platform-wide error codes that can be raised by Admin SDK APIs.\n+ */\n+public enum ErrorCode {\n+\n+  /**\n+   * Client specified an invalid argument.\n+   */\n+  INVALID_ARGUMENT,\n+\n+  /**\n+   * Request can not be executed in the current system state, such as deleting a non-empty\n+   * directory.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NDEwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /**\n          \n          \n            \n               * Request deadline exceeded. This will happen only if the caller sets a deadline that is\n          \n          \n            \n               * shorter than the method's default deadline (i.e. requested deadline is not enough for the\n          \n          \n            \n              /**\n          \n          \n            \n               * Request deadline exceeded. This happens only if the caller sets a deadline that is\n          \n          \n            \n               * shorter than the method's default deadline (i.e. requested deadline is not enough for the", "url": "https://github.com/firebase/firebase-admin-java/pull/465#discussion_r470274100", "createdAt": "2020-08-13T22:03:14Z", "author": {"login": "egilmorez"}, "path": "src/main/java/com/google/firebase/ErrorCode.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase;\n+\n+/**\n+ * Platform-wide error codes that can be raised by Admin SDK APIs.\n+ */\n+public enum ErrorCode {\n+\n+  /**\n+   * Client specified an invalid argument.\n+   */\n+  INVALID_ARGUMENT,\n+\n+  /**\n+   * Request can not be executed in the current system state, such as deleting a non-empty\n+   * directory.\n+   */\n+  FAILED_PRECONDITION,\n+\n+  /**\n+   * Client specified an invalid range.\n+   */\n+  OUT_OF_RANGE,\n+\n+  /**\n+   * Request not authenticated due to missing, invalid, or expired OAuth token.\n+   */\n+  UNAUTHENTICATED,\n+\n+  /**\n+   * Client does not have sufficient permission. This can happen because the OAuth token does\n+   * not have the right scopes, the client doesn't have permission, or the API has not been\n+   * enabled for the client project.\n+   */\n+  PERMISSION_DENIED,\n+\n+  /**\n+   * A specified resource is not found, or the request is rejected by undisclosed reasons,\n+   * such as whitelisting.\n+   */\n+  NOT_FOUND,\n+\n+  /**\n+   * Concurrency conflict, such as read-modify-write conflict.\n+   */\n+  CONFLICT,\n+\n+  /**\n+   * Concurrency conflict, such as read-modify-write conflict.\n+   */\n+  ABORTED,\n+\n+  /**\n+   * The resource that a client tried to create already exists.\n+   */\n+  ALREADY_EXISTS,\n+\n+  /**\n+   * Either out of resource quota or reaching rate limiting.\n+   */\n+  RESOURCE_EXHAUSTED,\n+\n+  /**\n+   * Request cancelled by the client.\n+   */\n+  CANCELLED,\n+\n+  /**\n+   * Unrecoverable data loss or data corruption. The client should report the error to the user.\n+   */\n+  DATA_LOSS,\n+\n+  /**\n+   * Unknown server error. Typically a server bug.\n+   */\n+  UNKNOWN,\n+\n+  /**\n+   * Internal server error. Typically a server bug.\n+   */\n+  INTERNAL,\n+\n+  /**\n+   * Service unavailable. Typically the server is down.\n+   */\n+  UNAVAILABLE,\n+\n+  /**\n+   * Request deadline exceeded. This will happen only if the caller sets a deadline that is\n+   * shorter than the method's default deadline (i.e. requested deadline is not enough for the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NTE1OA==", "bodyText": "Should \"Builder\" be a literal?", "url": "https://github.com/firebase/firebase-admin-java/pull/465#discussion_r470275158", "createdAt": "2020-08-13T22:06:04Z", "author": {"login": "egilmorez"}, "path": "src/main/java/com/google/firebase/FirebaseOptions.java", "diffHunk": "@@ -223,6 +223,16 @@ public static Builder builder() {\n     return new Builder();\n   }\n \n+  /**\n+   * Creates a new Builder from the options object.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NTQ2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * <p>The new builder is not backed by this object's values, that is changes made to the new\n          \n          \n            \n               * builder don't change the values of the origin object.\n          \n          \n            \n               */\n          \n          \n            \n               * <p>The new builder is not backed by this object's values; that is, changes made to the new\n          \n          \n            \n               * builder don't change the values of the origin object.\n          \n          \n            \n               */", "url": "https://github.com/firebase/firebase-admin-java/pull/465#discussion_r470275463", "createdAt": "2020-08-13T22:06:56Z", "author": {"login": "egilmorez"}, "path": "src/main/java/com/google/firebase/FirebaseOptions.java", "diffHunk": "@@ -223,6 +223,16 @@ public static Builder builder() {\n     return new Builder();\n   }\n \n+  /**\n+   * Creates a new Builder from the options object.\n+   *\n+   * <p>The new builder is not backed by this object's values, that is changes made to the new\n+   * builder don't change the values of the origin object.\n+   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NTk5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Contains the information that describe an HTTP response received by the SDK.\n          \n          \n            \n             * Contains information that describes an HTTP response received by the SDK.", "url": "https://github.com/firebase/firebase-admin-java/pull/465#discussion_r470275991", "createdAt": "2020-08-13T22:08:18Z", "author": {"login": "egilmorez"}, "path": "src/main/java/com/google/firebase/IncomingHttpResponse.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.api.client.http.HttpRequest;\n+import com.google.api.client.http.HttpResponse;\n+import com.google.api.client.http.HttpResponseException;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.firebase.database.annotations.Nullable;\n+import java.util.Map;\n+\n+/**\n+ * Contains the information that describe an HTTP response received by the SDK.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NjE5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Creates an IncomingHttpResponse from a successful HttpResponse and the content read from it.\n          \n          \n            \n               * Creates an `IncomingHttpResponse` from a successful `HttpResponse` and the content read from it.", "url": "https://github.com/firebase/firebase-admin-java/pull/465#discussion_r470276198", "createdAt": "2020-08-13T22:08:55Z", "author": {"login": "egilmorez"}, "path": "src/main/java/com/google/firebase/IncomingHttpResponse.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.api.client.http.HttpRequest;\n+import com.google.api.client.http.HttpResponse;\n+import com.google.api.client.http.HttpResponseException;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.firebase.database.annotations.Nullable;\n+import java.util.Map;\n+\n+/**\n+ * Contains the information that describe an HTTP response received by the SDK.\n+ */\n+public final class IncomingHttpResponse {\n+\n+  private final int statusCode;\n+  private final String content;\n+  private final Map<String, Object> headers;\n+  private final OutgoingHttpRequest request;\n+\n+  /**\n+   * Creates an IncomingHttpResponse from a successful HttpResponse and the content read from it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NjYzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param response A successful HttpResponse.\n          \n          \n            \n               * @param response A successful `HttpResponse`.", "url": "https://github.com/firebase/firebase-admin-java/pull/465#discussion_r470276631", "createdAt": "2020-08-13T22:09:58Z", "author": {"login": "egilmorez"}, "path": "src/main/java/com/google/firebase/IncomingHttpResponse.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.api.client.http.HttpRequest;\n+import com.google.api.client.http.HttpResponse;\n+import com.google.api.client.http.HttpResponseException;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.firebase.database.annotations.Nullable;\n+import java.util.Map;\n+\n+/**\n+ * Contains the information that describe an HTTP response received by the SDK.\n+ */\n+public final class IncomingHttpResponse {\n+\n+  private final int statusCode;\n+  private final String content;\n+  private final Map<String, Object> headers;\n+  private final OutgoingHttpRequest request;\n+\n+  /**\n+   * Creates an IncomingHttpResponse from a successful HttpResponse and the content read from it.\n+   * The caller is expected to read the content from the response, and handle any errors that\n+   * may occur while reading.\n+   *\n+   * @param response A successful HttpResponse.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NzA4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /**\n          \n          \n            \n               * Creates an IncomingHttpResponse from an HTTP error response.\n          \n          \n            \n              /**\n          \n          \n            \n               * Creates an `IncomingHttpResponse` from an HTTP error response.", "url": "https://github.com/firebase/firebase-admin-java/pull/465#discussion_r470277080", "createdAt": "2020-08-13T22:11:00Z", "author": {"login": "egilmorez"}, "path": "src/main/java/com/google/firebase/IncomingHttpResponse.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.api.client.http.HttpRequest;\n+import com.google.api.client.http.HttpResponse;\n+import com.google.api.client.http.HttpResponseException;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.firebase.database.annotations.Nullable;\n+import java.util.Map;\n+\n+/**\n+ * Contains the information that describe an HTTP response received by the SDK.\n+ */\n+public final class IncomingHttpResponse {\n+\n+  private final int statusCode;\n+  private final String content;\n+  private final Map<String, Object> headers;\n+  private final OutgoingHttpRequest request;\n+\n+  /**\n+   * Creates an IncomingHttpResponse from a successful HttpResponse and the content read from it.\n+   * The caller is expected to read the content from the response, and handle any errors that\n+   * may occur while reading.\n+   *\n+   * @param response A successful HttpResponse.\n+   * @param content Content read from the response.\n+   */\n+  public IncomingHttpResponse(HttpResponse response, @Nullable String content) {\n+    checkNotNull(response, \"response must not be null\");\n+    this.statusCode = response.getStatusCode();\n+    this.content = content;\n+    this.headers = ImmutableMap.copyOf(response.getHeaders());\n+    this.request = new OutgoingHttpRequest(response.getRequest());\n+  }\n+\n+  /**\n+   * Creates an IncomingHttpResponse from an HTTP error response.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NzU2NQ==", "bodyText": "In cases like this, do you think it's best to say \"HttpResponseException object\" ?", "url": "https://github.com/firebase/firebase-admin-java/pull/465#discussion_r470277565", "createdAt": "2020-08-13T22:12:14Z", "author": {"login": "egilmorez"}, "path": "src/main/java/com/google/firebase/IncomingHttpResponse.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.api.client.http.HttpRequest;\n+import com.google.api.client.http.HttpResponse;\n+import com.google.api.client.http.HttpResponseException;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.firebase.database.annotations.Nullable;\n+import java.util.Map;\n+\n+/**\n+ * Contains the information that describe an HTTP response received by the SDK.\n+ */\n+public final class IncomingHttpResponse {\n+\n+  private final int statusCode;\n+  private final String content;\n+  private final Map<String, Object> headers;\n+  private final OutgoingHttpRequest request;\n+\n+  /**\n+   * Creates an IncomingHttpResponse from a successful HttpResponse and the content read from it.\n+   * The caller is expected to read the content from the response, and handle any errors that\n+   * may occur while reading.\n+   *\n+   * @param response A successful HttpResponse.\n+   * @param content Content read from the response.\n+   */\n+  public IncomingHttpResponse(HttpResponse response, @Nullable String content) {\n+    checkNotNull(response, \"response must not be null\");\n+    this.statusCode = response.getStatusCode();\n+    this.content = content;\n+    this.headers = ImmutableMap.copyOf(response.getHeaders());\n+    this.request = new OutgoingHttpRequest(response.getRequest());\n+  }\n+\n+  /**\n+   * Creates an IncomingHttpResponse from an HTTP error response.\n+   *\n+   * @param e HttpResponseException representing the HTTP error response.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NzcxMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /**\n          \n          \n            \n               * Creates an IncomingHttpResponse from an HTTP error response.\n          \n          \n            \n              /**\n          \n          \n            \n               * Creates an `IncomingHttpResponse` from an HTTP error response.", "url": "https://github.com/firebase/firebase-admin-java/pull/465#discussion_r470277713", "createdAt": "2020-08-13T22:12:37Z", "author": {"login": "egilmorez"}, "path": "src/main/java/com/google/firebase/IncomingHttpResponse.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.api.client.http.HttpRequest;\n+import com.google.api.client.http.HttpResponse;\n+import com.google.api.client.http.HttpResponseException;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.firebase.database.annotations.Nullable;\n+import java.util.Map;\n+\n+/**\n+ * Contains the information that describe an HTTP response received by the SDK.\n+ */\n+public final class IncomingHttpResponse {\n+\n+  private final int statusCode;\n+  private final String content;\n+  private final Map<String, Object> headers;\n+  private final OutgoingHttpRequest request;\n+\n+  /**\n+   * Creates an IncomingHttpResponse from a successful HttpResponse and the content read from it.\n+   * The caller is expected to read the content from the response, and handle any errors that\n+   * may occur while reading.\n+   *\n+   * @param response A successful HttpResponse.\n+   * @param content Content read from the response.\n+   */\n+  public IncomingHttpResponse(HttpResponse response, @Nullable String content) {\n+    checkNotNull(response, \"response must not be null\");\n+    this.statusCode = response.getStatusCode();\n+    this.content = content;\n+    this.headers = ImmutableMap.copyOf(response.getHeaders());\n+    this.request = new OutgoingHttpRequest(response.getRequest());\n+  }\n+\n+  /**\n+   * Creates an IncomingHttpResponse from an HTTP error response.\n+   *\n+   * @param e HttpResponseException representing the HTTP error response.\n+   * @param request The HttpRequest that resulted in the error.\n+   */\n+  public IncomingHttpResponse(HttpResponseException e, HttpRequest request) {\n+    this(e, new OutgoingHttpRequest(request));\n+  }\n+\n+  /**\n+   * Creates an IncomingHttpResponse from an HTTP error response.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI4MDgxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /**\n          \n          \n            \n               * Creates an OutgoingHttpRequest from the HTTP method and URL.\n          \n          \n            \n              /**\n          \n          \n            \n               * Creates an `OutgoingHttpRequest` from the HTTP method and URL.", "url": "https://github.com/firebase/firebase-admin-java/pull/465#discussion_r470280816", "createdAt": "2020-08-13T22:20:43Z", "author": {"login": "egilmorez"}, "path": "src/main/java/com/google/firebase/OutgoingHttpRequest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.api.client.http.HttpContent;\n+import com.google.api.client.http.HttpRequest;\n+import com.google.common.base.Strings;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.firebase.internal.Nullable;\n+import java.util.Map;\n+\n+/**\n+ * Contains the information that describe an HTTP request made by the SDK.\n+ */\n+public final class OutgoingHttpRequest {\n+\n+  private final String method;\n+  private final String url;\n+  private final HttpContent content;\n+  private final Map<String, Object> headers;\n+\n+  /**\n+   * Creates an OutgoingHttpRequest from the HTTP method and URL.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI4NTUwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /**\n          \n          \n            \n               * One or more argument specified in the request was invalid.\n          \n          \n            \n               */\n          \n          \n            \n              /**\n          \n          \n            \n               * One or more arguments specified in the request were invalid.\n          \n          \n            \n               */", "url": "https://github.com/firebase/firebase-admin-java/pull/465#discussion_r470285503", "createdAt": "2020-08-13T22:34:04Z", "author": {"login": "egilmorez"}, "path": "src/main/java/com/google/firebase/messaging/MessagingErrorCode.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.google.firebase.messaging;\n+\n+/**\n+ * Error codes that can be raised by the Cloud Messaging APIs.\n+ */\n+public enum MessagingErrorCode {\n+\n+  /**\n+   * APNs certificate or web push auth key was invalid or missing.\n+   */\n+  THIRD_PARTY_AUTH_ERROR,\n+\n+  /**\n+   * One or more argument specified in the request was invalid.\n+   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b413c7ab64fcf2af657b55e578647559cf2bcd61"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e079473bf9a1f642c3faa09618bcf5e55b956b9f", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/e079473bf9a1f642c3faa09618bcf5e55b956b9f", "committedDate": "2020-08-14T00:27:20Z", "message": "Apply suggestions from code review\n\nCo-authored-by: egilmorez <egilmore@google.com>\nCo-authored-by: Kevin Cheung <kevinthecheung@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5bc796703c93e843a0ed34b5c33efe6027e7cec", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/e5bc796703c93e843a0ed34b5c33efe6027e7cec", "committedDate": "2020-08-14T00:32:33Z", "message": "fix: Minor updates to API ref docs based on code review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "235181fc88bf92a55cd4c35d7b165e3aea19fe84", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/235181fc88bf92a55cd4c35d7b165e3aea19fe84", "committedDate": "2020-08-14T00:36:10Z", "message": "fix: Fixing API doc wording"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4ODQ0MTY5", "url": "https://github.com/firebase/firebase-admin-java/pull/465#pullrequestreview-468844169", "createdAt": "2020-08-17T21:26:28Z", "commit": {"oid": "235181fc88bf92a55cd4c35d7b165e3aea19fe84"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2698bc3cd29ebe50472c0b04cd879c977124d51", "author": {"user": {"login": "hiranya911", "name": "Hiranya Jayathilaka"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/a2698bc3cd29ebe50472c0b04cd879c977124d51", "committedDate": "2020-08-17T22:41:45Z", "message": "Merge branch 'master' into v7"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2931, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}