{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MjQwODEw", "number": 369, "title": "Create TenantManager class and wire through listTenants operation.", "bodyText": "This pull request adds the TenantManager class. The listTenants operation has been added and is wired through. I've added the relevant unit tests to FirebaseUserManagerTest (based off of the listUsers unit tests). This is part of the initiative to adding multi-tenancy support (see issue #332).", "createdAt": "2020-02-17T17:06:19Z", "url": "https://github.com/firebase/firebase-admin-java/pull/369", "merged": true, "mergeCommit": {"oid": "26799042dd6e539ea999214d081b8f79023d259b"}, "closed": true, "closedAt": "2020-02-20T02:58:27Z", "author": {"login": "micahstairs"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFQcSegH2gAyMzc2MjQwODEwOjNmZWYzNDI5MzkyNTgxNGRiMjY5NzU3N2MzYmVjYjdmMDU0YzNlZjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGCGKRAH2gAyMzc2MjQwODEwOmQzOTM2ZDM5MmEzNDY4OTZmM2VmMWZlZmJiZjQ0MTRhNTJmZWZmMTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3fef34293925814db2697577c3becb7f054c3ef0", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/3fef34293925814db2697577c3becb7f054c3ef0", "committedDate": "2020-02-17T17:05:05Z", "message": "Create TenantManager and wire through listTenants operation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f62957f0e416db519d0de682a987a5e200b32c1", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/2f62957f0e416db519d0de682a987a5e200b32c1", "committedDate": "2020-02-17T17:08:41Z", "message": "Fix formatting of javadoc comment."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNTkyNzgx", "url": "https://github.com/firebase/firebase-admin-java/pull/369#pullrequestreview-360592781", "createdAt": "2020-02-18T19:00:14Z", "commit": {"oid": "2f62957f0e416db519d0de682a987a5e200b32c1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxOTowMDoxNFrOFrOkHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxOTowNjo1NlrOFrOxJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3MTcxMQ==", "bodyText": "protected makes more sense here.", "url": "https://github.com/firebase/firebase-admin-java/pull/369#discussion_r380871711", "createdAt": "2020-02-18T19:00:14Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/AbstractFirebaseAuth.java", "diffHunk": "@@ -1074,7 +1072,7 @@ protected String execute() throws FirebaseAuthException {\n     };\n   }\n \n-  private <T> Supplier<T> threadSafeMemoize(final Supplier<T> supplier) {\n+  <T> Supplier<T> threadSafeMemoize(final Supplier<T> supplier) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f62957f0e416db519d0de682a987a5e200b32c1"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3MjI5MQ==", "bodyText": "final", "url": "https://github.com/firebase/firebase-admin-java/pull/369#discussion_r380872291", "createdAt": "2020-02-18T19:01:22Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/TenantManager.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase.auth;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.core.ApiFuture;\n+import com.google.firebase.FirebaseApp;\n+import com.google.firebase.auth.ListTenantsPage.DefaultTenantSource;\n+import com.google.firebase.auth.ListTenantsPage.PageFactory;\n+import com.google.firebase.auth.ListTenantsPage.TenantSource;\n+import com.google.firebase.auth.Tenant.CreateRequest;\n+import com.google.firebase.auth.Tenant.UpdateRequest;\n+import com.google.firebase.internal.CallableOperation;\n+import com.google.firebase.internal.NonNull;\n+import com.google.firebase.internal.Nullable;\n+\n+/**\n+ * This class can be used to perform a variety of tenant-related operations, including creating,\n+ * updating, and listing tenants.\n+ *\n+ * <p>TODO(micahstairs): Implement the following methods: getAuthForTenant(), getTenant(),\n+ * deleteTenant(), createTenant(), and updateTenant().\n+ */\n+public class TenantManager {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f62957f0e416db519d0de682a987a5e200b32c1"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3MjQ5MQ==", "bodyText": "Make the constructor package-protected", "url": "https://github.com/firebase/firebase-admin-java/pull/369#discussion_r380872491", "createdAt": "2020-02-18T19:01:44Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/TenantManager.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase.auth;\n+\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.core.ApiFuture;\n+import com.google.firebase.FirebaseApp;\n+import com.google.firebase.auth.ListTenantsPage.DefaultTenantSource;\n+import com.google.firebase.auth.ListTenantsPage.PageFactory;\n+import com.google.firebase.auth.ListTenantsPage.TenantSource;\n+import com.google.firebase.auth.Tenant.CreateRequest;\n+import com.google.firebase.auth.Tenant.UpdateRequest;\n+import com.google.firebase.internal.CallableOperation;\n+import com.google.firebase.internal.NonNull;\n+import com.google.firebase.internal.Nullable;\n+\n+/**\n+ * This class can be used to perform a variety of tenant-related operations, including creating,\n+ * updating, and listing tenants.\n+ *\n+ * <p>TODO(micahstairs): Implement the following methods: getAuthForTenant(), getTenant(),\n+ * deleteTenant(), createTenant(), and updateTenant().\n+ */\n+public class TenantManager {\n+\n+  private final FirebaseApp firebaseApp;\n+  private final FirebaseUserManager userManager;\n+\n+  public TenantManager(FirebaseApp firebaseApp, FirebaseUserManager userManager) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f62957f0e416db519d0de682a987a5e200b32c1"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3MzU1OQ==", "bodyText": "We don't use defaults in DownloadAccountResponse. Why were they necessary here?", "url": "https://github.com/firebase/firebase-admin-java/pull/369#discussion_r380873559", "createdAt": "2020-02-18T19:03:54Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/internal/ListTenantsResponse.java", "diffHunk": "@@ -17,20 +17,24 @@\n package com.google.firebase.auth.internal;\n \n import com.google.api.client.util.Key;\n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.collect.ImmutableList;\n+import com.google.firebase.auth.ListTenantsPage;\n import com.google.firebase.auth.Tenant;\n import java.util.List;\n \n /**\n  * JSON data binding for ListTenantsResponse messages sent by Google identity toolkit service.\n  */\n-public class ListTenantsResponse {\n+public final class ListTenantsResponse {\n \n   @Key(\"tenants\")\n-  private List<Tenant> tenants;\n+  private List<Tenant> tenants = ImmutableList.of(); // Default to empty list.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f62957f0e416db519d0de682a987a5e200b32c1"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3NTA0Nw==", "bodyText": "Suggestion: Just to be in safe side, let's give your test tenants different IDs (say TENANT_ID_1 and TENANT_ID_2). Then change the signature of this method to accept both Tenant and String tenantId, so the caller can pass them in to verify.", "url": "https://github.com/firebase/firebase-admin-java/pull/369#discussion_r380875047", "createdAt": "2020-02-18T19:06:56Z", "author": {"login": "hiranya911"}, "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "diffHunk": "@@ -1264,6 +1310,13 @@ private static void checkUserRecord(UserRecord userRecord) {\n     assertEquals(\"gold\", claims.get(\"package\"));\n   }\n \n+  private static void checkTenant(Tenant tenant) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f62957f0e416db519d0de682a987a5e200b32c1"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9af10110167a0aa467130f17e02cec267ed076af", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/9af10110167a0aa467130f17e02cec267ed076af", "committedDate": "2020-02-19T03:08:39Z", "message": "Implement suggested changes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMzI3MTUx", "url": "https://github.com/firebase/firebase-admin-java/pull/369#pullrequestreview-361327151", "createdAt": "2020-02-19T18:21:56Z", "commit": {"oid": "9af10110167a0aa467130f17e02cec267ed076af"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODoyMTo1N1rOFryX7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODoyMTo1N1rOFryX7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ1ODQxNA==", "bodyText": "Perhaps handle them in the getters?\npublic List<Tenant> getTenants() {\n  if (tenants != null) {\n    return tenants;\n  }\n\n  return ImmutableList.of();\n}", "url": "https://github.com/firebase/firebase-admin-java/pull/369#discussion_r381458414", "createdAt": "2020-02-19T18:21:57Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/internal/ListTenantsResponse.java", "diffHunk": "@@ -17,20 +17,24 @@\n package com.google.firebase.auth.internal;\n \n import com.google.api.client.util.Key;\n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.collect.ImmutableList;\n+import com.google.firebase.auth.ListTenantsPage;\n import com.google.firebase.auth.Tenant;\n import java.util.List;\n \n /**\n  * JSON data binding for ListTenantsResponse messages sent by Google identity toolkit service.\n  */\n-public class ListTenantsResponse {\n+public final class ListTenantsResponse {\n \n   @Key(\"tenants\")\n-  private List<Tenant> tenants;\n+  private List<Tenant> tenants = ImmutableList.of(); // Default to empty list.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3MzU1OQ=="}, "originalCommit": {"oid": "2f62957f0e416db519d0de682a987a5e200b32c1"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDE4NTMw", "url": "https://github.com/firebase/firebase-admin-java/pull/369#pullrequestreview-361418530", "createdAt": "2020-02-19T20:37:51Z", "commit": {"oid": "9af10110167a0aa467130f17e02cec267ed076af"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3936d392a346896f3ef1fefbbf4414a52feff15", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/d3936d392a346896f3ef1fefbbf4414a52feff15", "committedDate": "2020-02-20T02:56:10Z", "message": "Handle ListTenantsResponse defaults in the getters."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2823, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}