{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3OTQxMTc4", "number": 371, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTowMTo1NVrODhrbWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOToxMDoyMlrODjk7pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjQxMTE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTowMTo1NVrOFsjE_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoxMTozMVrOFvXYjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1NjM4Mg==", "bodyText": "I think getTenant is descriptive enough. We have several different ways of fetching user accounts (by UID, by email etc), but we don't have that requirement here.", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r382256382", "createdAt": "2020-02-20T21:01:55Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -226,6 +228,16 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n     return new UserImportResult(request.getUsersCount(), response);\n   }\n \n+  Tenant getTenantById(String tenantId) throws FirebaseAuthException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b818ffc5722ee595d8187357bbf76bd2b6b043"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIxMDUxMA==", "bodyText": "Done.", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385210510", "createdAt": "2020-02-27T16:11:31Z", "author": {"login": "micahstairs"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -226,6 +228,16 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n     return new UserImportResult(request.getUsersCount(), response);\n   }\n \n+  Tenant getTenantById(String tenantId) throws FirebaseAuthException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1NjM4Mg=="}, "originalCommit": {"oid": "e3b818ffc5722ee595d8187357bbf76bd2b6b043"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjQxNzg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTowNDozMFrOFsjJBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoxMTowNVrOFvXXgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1NzQxNQ==", "bodyText": "This doesn't quite look right. The URL path should be something like v2/projects/{projectsId}/tenants/{tenantsId}. That's what we use in other SDKs, and also what's listed in the auto-generated discovery doc.", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r382257415", "createdAt": "2020-02-20T21:04:30Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -226,6 +228,16 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n     return new UserImportResult(request.getUsersCount(), response);\n   }\n \n+  Tenant getTenantById(String tenantId) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants:get\");\n+    url.put(\"name\", tenantId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b818ffc5722ee595d8187357bbf76bd2b6b043"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIxMDI0MA==", "bodyText": "Thanks! Fixed.", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385210240", "createdAt": "2020-02-27T16:11:05Z", "author": {"login": "micahstairs"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -226,6 +228,16 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n     return new UserImportResult(request.getUsersCount(), response);\n   }\n \n+  Tenant getTenantById(String tenantId) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants:get\");\n+    url.put(\"name\", tenantId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1NzQxNQ=="}, "originalCommit": {"oid": "e3b818ffc5722ee595d8187357bbf76bd2b6b043"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjQzMjM5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMToxMDoxNlrOFsjSNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMzoxMDozN1rOFv0bmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1OTc2NA==", "bodyText": "I believe this endpoint sends a 404 (or similar error response) when the tenant is not found. Lets update the test case accordingly. See https://github.com/firebase/firebase-admin-go/blob/e088f55036154f0cccf661992f854abd8fb1333f/auth/tenant_mgt_test.go#L1096-L1100", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r382259764", "createdAt": "2020-02-20T21:10:16Z", "author": {"login": "hiranya911"}, "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "diffHunk": "@@ -430,6 +430,28 @@ public void testImportUsersLargeList() {\n     }\n   }\n \n+  @Test\n+  public void testGetTenant() throws Exception {\n+    TestResponseInterceptor interceptor = initializeAppForUserManagement(\n+        TestUtils.loadResource(\"getTenant.json\"));\n+    Tenant tenant = FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"TENANT_1\").get();\n+    checkTenant(tenant, \"TENANT_1\");\n+    checkRequestHeaders(interceptor);\n+  }\n+\n+  @Test\n+  public void testGetTenantWithNotFoundError() throws Exception {\n+    initializeAppForUserManagement(\"{}\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b818ffc5722ee595d8187357bbf76bd2b6b043"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE4NjQ4NQ==", "bodyText": "I don't think I follow. The Node implementation suggests I check for a response missing a 'name' (which is the tenantId): https://github.com/firebase/firebase-admin-node/blob/2b952d43fd8784151ebdb60b65e88b9fd1888ccf/src/auth/auth-api-request.ts#L1463.", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385186485", "createdAt": "2020-02-27T15:29:23Z", "author": {"login": "micahstairs"}, "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "diffHunk": "@@ -430,6 +430,28 @@ public void testImportUsersLargeList() {\n     }\n   }\n \n+  @Test\n+  public void testGetTenant() throws Exception {\n+    TestResponseInterceptor interceptor = initializeAppForUserManagement(\n+        TestUtils.loadResource(\"getTenant.json\"));\n+    Tenant tenant = FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"TENANT_1\").get();\n+    checkTenant(tenant, \"TENANT_1\");\n+    checkRequestHeaders(interceptor);\n+  }\n+\n+  @Test\n+  public void testGetTenantWithNotFoundError() throws Exception {\n+    initializeAppForUserManagement(\"{}\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1OTc2NA=="}, "originalCommit": {"oid": "e3b818ffc5722ee595d8187357bbf76bd2b6b043"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxMTEyOQ==", "bodyText": "That's just some additional validation they do on the \"successful\" responses. On missing tenants, the backend sends a 404 NOT_FOUND error.", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385311129", "createdAt": "2020-02-27T19:04:43Z", "author": {"login": "hiranya911"}, "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "diffHunk": "@@ -430,6 +430,28 @@ public void testImportUsersLargeList() {\n     }\n   }\n \n+  @Test\n+  public void testGetTenant() throws Exception {\n+    TestResponseInterceptor interceptor = initializeAppForUserManagement(\n+        TestUtils.loadResource(\"getTenant.json\"));\n+    Tenant tenant = FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"TENANT_1\").get();\n+    checkTenant(tenant, \"TENANT_1\");\n+    checkRequestHeaders(interceptor);\n+  }\n+\n+  @Test\n+  public void testGetTenantWithNotFoundError() throws Exception {\n+    initializeAppForUserManagement(\"{}\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1OTc2NA=="}, "originalCommit": {"oid": "e3b818ffc5722ee595d8187357bbf76bd2b6b043"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY4NjQyNQ==", "bodyText": "Done.", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385686425", "createdAt": "2020-02-28T13:10:37Z", "author": {"login": "micahstairs"}, "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "diffHunk": "@@ -430,6 +430,28 @@ public void testImportUsersLargeList() {\n     }\n   }\n \n+  @Test\n+  public void testGetTenant() throws Exception {\n+    TestResponseInterceptor interceptor = initializeAppForUserManagement(\n+        TestUtils.loadResource(\"getTenant.json\"));\n+    Tenant tenant = FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"TENANT_1\").get();\n+    checkTenant(tenant, \"TENANT_1\");\n+    checkRequestHeaders(interceptor);\n+  }\n+\n+  @Test\n+  public void testGetTenantWithNotFoundError() throws Exception {\n+    initializeAppForUserManagement(\"{}\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1OTc2NA=="}, "originalCommit": {"oid": "e3b818ffc5722ee595d8187357bbf76bd2b6b043"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjMwNjkwOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTowNjo0MFrOFvdl3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMzoxMDo0OFrOFv0cDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxMjIyMA==", "bodyText": "Nit: Define the URL prefix (up to the /tenants portion) in a constant.", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385312220", "createdAt": "2020-02-27T19:06:40Z", "author": {"login": "hiranya911"}, "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "diffHunk": "@@ -437,19 +437,23 @@ public void testGetTenant() throws Exception {\n     Tenant tenant = FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"TENANT_1\").get();\n     checkTenant(tenant, \"TENANT_1\");\n     checkRequestHeaders(interceptor);\n+    checkUrl(interceptor,\n+        \"https://identitytoolkit.googleapis.com/v2/projects/test-project-id/tenants/TENANT_1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d8d5ef1b70767392b5beef498bff5d7a467dfc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY4NjU0Mg==", "bodyText": "Done.", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385686542", "createdAt": "2020-02-28T13:10:48Z", "author": {"login": "micahstairs"}, "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "diffHunk": "@@ -437,19 +437,23 @@ public void testGetTenant() throws Exception {\n     Tenant tenant = FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"TENANT_1\").get();\n     checkTenant(tenant, \"TENANT_1\");\n     checkRequestHeaders(interceptor);\n+    checkUrl(interceptor,\n+        \"https://identitytoolkit.googleapis.com/v2/projects/test-project-id/tenants/TENANT_1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxMjIyMA=="}, "originalCommit": {"oid": "37d8d5ef1b70767392b5beef498bff5d7a467dfc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjMxODQ1OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOToxMDoyMlrOFvdtKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOToxMDoyMlrOFvdtKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxNDA4OA==", "bodyText": "Compare with https://github.com/firebase/firebase-admin-go/blob/e088f55036154f0cccf661992f854abd8fb1333f/auth/tenant_mgt_test.go#L1151-L1161", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385314088", "createdAt": "2020-02-27T19:10:22Z", "author": {"login": "hiranya911"}, "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "diffHunk": "@@ -430,6 +430,32 @@ public void testImportUsersLargeList() {\n     }\n   }\n \n+  @Test\n+  public void testGetTenant() throws Exception {\n+    TestResponseInterceptor interceptor = initializeAppForUserManagement(\n+        TestUtils.loadResource(\"getTenant.json\"));\n+    Tenant tenant = FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"TENANT_1\").get();\n+    checkTenant(tenant, \"TENANT_1\");\n+    checkRequestHeaders(interceptor);\n+    checkUrl(interceptor,\n+        \"https://identitytoolkit.googleapis.com/v2/projects/test-project-id/tenants/TENANT_1\");\n+  }\n+\n+  @Test\n+  public void testGetTenantWithNotFoundError() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d8d5ef1b70767392b5beef498bff5d7a467dfc"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1529, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}