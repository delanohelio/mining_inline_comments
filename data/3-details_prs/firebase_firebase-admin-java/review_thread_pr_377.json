{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMzc4NjE2", "number": 377, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOTozMDo0OVrODkZSjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDoyMzoyNFrODnnaHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NDg5Njc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOTozMDo0OVrOFwsZSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQyMDo1NToyNFrOFzXXJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwMzMzOA==", "bodyText": "Put the properties in the request body.", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r386603338", "createdAt": "2020-03-02T19:30:49Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +230,28 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    url.putAll(request.getProperties());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e523878790fb8cb3440e0834ec8e8904c58a233"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQwNDQ1Mw==", "bodyText": "Done.", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r389404453", "createdAt": "2020-03-08T20:55:24Z", "author": {"login": "micahstairs"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +230,28 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    url.putAll(request.getProperties());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwMzMzOA=="}, "originalCommit": {"oid": "3e523878790fb8cb3440e0834ec8e8904c58a233"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NDg5OTIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOTozMTozNVrOFwsazw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQyMDo1NTozMVrOFzXXKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwMzcyNw==", "bodyText": "Put the properties in the request body. Remove the extra call to getProperties().", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r386603727", "createdAt": "2020-03-02T19:31:35Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +230,28 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    url.putAll(request.getProperties());\n+    return sendRequest(\"POST\", url, null, Tenant.class);\n+  }\n+\n+  Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n+    Map<String, Object> properties = request.getProperties();\n+    checkArgument(properties.size() > 1,\n+        \"tenant update must have at least one property other than tenantId set\");\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + request.getTenantId());\n+    url.putAll(properties);\n+    url.putAll(request.getProperties());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e523878790fb8cb3440e0834ec8e8904c58a233"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQwNDQ1OA==", "bodyText": "Done.", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r389404458", "createdAt": "2020-03-08T20:55:31Z", "author": {"login": "micahstairs"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +230,28 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    url.putAll(request.getProperties());\n+    return sendRequest(\"POST\", url, null, Tenant.class);\n+  }\n+\n+  Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n+    Map<String, Object> properties = request.getProperties();\n+    checkArgument(properties.size() > 1,\n+        \"tenant update must have at least one property other than tenantId set\");\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + request.getTenantId());\n+    url.putAll(properties);\n+    url.putAll(request.getProperties());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwMzcyNw=="}, "originalCommit": {"oid": "3e523878790fb8cb3440e0834ec8e8904c58a233"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NDkwMzc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOTozMzowMVrOFwsdng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxOTozNjowOVrOF1sd9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwNDQ0Ng==", "bodyText": "You need to generate an updateMask from the given properties, and add it the URL here. See the corresponding Go and Node.js implementations.", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r386604446", "createdAt": "2020-03-02T19:33:01Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +230,28 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    url.putAll(request.getProperties());\n+    return sendRequest(\"POST\", url, null, Tenant.class);\n+  }\n+\n+  Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n+    Map<String, Object> properties = request.getProperties();\n+    checkArgument(properties.size() > 1,\n+        \"tenant update must have at least one property other than tenantId set\");\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + request.getTenantId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e523878790fb8cb3440e0834ec8e8904c58a233"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc4NTAyNg==", "bodyText": "Okay, interesting. So for the update request, we encode the properties 2 different ways.\nI found the utility which builds the mask in Node (https://github.com/firebase/firebase-admin-node/blob/0f6c02e3377c3337e4f206e176b2d96ec6dd6c3c/src/utils/index.ts#L148).\nAny idea if we already have a similar utility in Java? Or do I need to write one? From looking at Node's tests (https://github.com/firebase/firebase-admin-node/blob/0f6c02e3377c3337e4f206e176b2d96ec6dd6c3c/test/unit/utils/index.spec.ts#L307), it looks like the format we want is something like this:\n...../tenants/TENANT_ID?updateMask=name.TENANT_ID,displayName.DISPLAY_NAME,allowPasswordSignup.true,enableEmailLinkSignin.false\nDoes that look right?", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r386785026", "createdAt": "2020-03-03T03:47:36Z", "author": {"login": "micahstairs"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +230,28 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    url.putAll(request.getProperties());\n+    return sendRequest(\"POST\", url, null, Tenant.class);\n+  }\n+\n+  Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n+    Map<String, Object> properties = request.getProperties();\n+    checkArgument(properties.size() > 1,\n+        \"tenant update must have at least one property other than tenantId set\");\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + request.getTenantId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwNDQ0Ng=="}, "originalCommit": {"oid": "3e523878790fb8cb3440e0834ec8e8904c58a233"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIxMTExNA==", "bodyText": "I don't think we have a util in Java for this at the moment. The field mask should only consist of field names in a dotted notation. Following json payload:\n{\n  'parentField1': 'some value',\n  'parentField2': 'another value',\n  'parentField3': {\n    'childField1': 'yet another value'\n  }\n}\n\nshould become:\n['parentField1', 'parentField2', 'parentField3.childField1']\n\nYou can also look at the unit tests of the Node.js utils for more examples.", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r387211114", "createdAt": "2020-03-03T18:29:44Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +230,28 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    url.putAll(request.getProperties());\n+    return sendRequest(\"POST\", url, null, Tenant.class);\n+  }\n+\n+  Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n+    Map<String, Object> properties = request.getProperties();\n+    checkArgument(properties.size() > 1,\n+        \"tenant update must have at least one property other than tenantId set\");\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + request.getTenantId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwNDQ0Ng=="}, "originalCommit": {"oid": "3e523878790fb8cb3440e0834ec8e8904c58a233"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0NzQxMw==", "bodyText": "Done.", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r391847413", "createdAt": "2020-03-12T19:36:09Z", "author": {"login": "micahstairs"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +230,28 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    url.putAll(request.getProperties());\n+    return sendRequest(\"POST\", url, null, Tenant.class);\n+  }\n+\n+  Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n+    Map<String, Object> properties = request.getProperties();\n+    checkArgument(properties.size() > 1,\n+        \"tenant update must have at least one property other than tenantId set\");\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + request.getTenantId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwNDQ0Ng=="}, "originalCommit": {"oid": "3e523878790fb8cb3440e0834ec8e8904c58a233"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODY2NzE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDoyMzoyNFrOF1uHMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDo1OTozOFrOF1vHPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg3NDM1NA==", "bodyText": "This will break if the request contains any nested properties (we don't have any at the moment). If the request is shaped like {\"foo\": {\"bar\": 100}}, the update mask should look like ['foo.bar'].\nLet's either implement a small util function to generate the correct update masks for all requests, or add a comment/TODO here to indicate the limitation with the current appraoch.", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r391874354", "createdAt": "2020-03-12T20:23:24Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +231,26 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    return sendRequest(\"POST\", url, request.getProperties(), Tenant.class);\n+  }\n+\n+  Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n+    Map<String, Object> properties = request.getProperties();\n+    checkArgument(!properties.isEmpty(), \"tenant update must have at least one property set\");\n+    String updateMask = String.join(\",\", ImmutableSortedSet.copyOf(properties.keySet()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d3608dbc6127cac737d07154398c600e20ca5b"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MDc1MQ==", "bodyText": "Done.", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r391890751", "createdAt": "2020-03-12T20:59:38Z", "author": {"login": "micahstairs"}, "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +231,26 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    return sendRequest(\"POST\", url, request.getProperties(), Tenant.class);\n+  }\n+\n+  Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n+    Map<String, Object> properties = request.getProperties();\n+    checkArgument(!properties.isEmpty(), \"tenant update must have at least one property set\");\n+    String updateMask = String.join(\",\", ImmutableSortedSet.copyOf(properties.keySet()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg3NDM1NA=="}, "originalCommit": {"oid": "22d3608dbc6127cac737d07154398c600e20ca5b"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1536, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}