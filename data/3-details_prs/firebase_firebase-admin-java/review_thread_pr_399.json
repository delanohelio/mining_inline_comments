{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5Nzc0MDc0", "number": 399, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjozNjowNFrOD3aDfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMTo0NzoxNFrOD3chhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDI1MTQ5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/firebase/auth/AuthProviderConfig.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjozNjowNVrOGNphYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxODo1MjoxMlrOGOMe2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NDk2MQ==", "bodyText": "Lets call this AbstractCreateRequest or ProviderConfigCreateRequest and reduce overusing the name CreateRequest.  This also doesn't need to be a nested class. Might be cleaner to put it elsewhere.", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r416964961", "createdAt": "2020-04-28T22:36:05Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/AuthProviderConfig.java", "diffHunk": "@@ -56,45 +62,52 @@ public boolean isEnabled() {\n    * <p>Set the initial attributes of the new provider by calling various setter methods available\n    * in this class.\n    */\n-  public abstract static class CreateRequest {\n+  public abstract static class CreateRequest<T extends CreateRequest<T>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65827dc74177636ff83d2d9db5542119aac43a8c"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxMzgxNg==", "bodyText": "I like the idea of calling it AbstractCreateRequest instead of CreateRequest. However, I don't think we should move this into a separate class. Keeping it together is more consistent with all of our other CreateRequest/UpdateRequest classes.\nOn a somewhat related note, should AuthProviderConfig be renamed to AbstractProviderConfig? (Of course, the decision here might be influenced by our generics decision in #400.)", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417013816", "createdAt": "2020-04-29T01:04:08Z", "author": {"login": "micahstairs"}, "path": "src/main/java/com/google/firebase/auth/AuthProviderConfig.java", "diffHunk": "@@ -56,45 +62,52 @@ public boolean isEnabled() {\n    * <p>Set the initial attributes of the new provider by calling various setter methods available\n    * in this class.\n    */\n-  public abstract static class CreateRequest {\n+  public abstract static class CreateRequest<T extends CreateRequest<T>> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NDk2MQ=="}, "originalCommit": {"oid": "65827dc74177636ff83d2d9db5542119aac43a8c"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyMzYzNQ==", "bodyText": "I prefer the shorter name ProviderConfig for this type (it's already nested in the auth package so the \"Auth\" part is kind of redundant). Also may be this doesn't need to be an abstract class at all? Is there any behavior that child classes are expected to implement, or are they just adding more attributes to the parent type?\nPerhaps we can just make it a regular class with a package-protected constructor?", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417023635", "createdAt": "2020-04-29T01:46:11Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/AuthProviderConfig.java", "diffHunk": "@@ -56,45 +62,52 @@ public boolean isEnabled() {\n    * <p>Set the initial attributes of the new provider by calling various setter methods available\n    * in this class.\n    */\n-  public abstract static class CreateRequest {\n+  public abstract static class CreateRequest<T extends CreateRequest<T>> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NDk2MQ=="}, "originalCommit": {"oid": "65827dc74177636ff83d2d9db5542119aac43a8c"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMxNTQ4Ng==", "bodyText": "I think renaming to ProviderConfig makes sense given that \"Auth\" is redundant.\nHowever, I think we should keep it abstract for 2 reasons:\n\nWe never want to instantiate it on its own since it can't be used for anything.\nIf we make it concrete then we will be forced to implement getThis in AuthProvider.AbstractCreateRequest. The issue with this is that we then lose the ability to force its subclasses to implement getThis. If subclasses forget to override getThis then it would break how the chaining works.", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417315486", "createdAt": "2020-04-29T13:31:15Z", "author": {"login": "micahstairs"}, "path": "src/main/java/com/google/firebase/auth/AuthProviderConfig.java", "diffHunk": "@@ -56,45 +62,52 @@ public boolean isEnabled() {\n    * <p>Set the initial attributes of the new provider by calling various setter methods available\n    * in this class.\n    */\n-  public abstract static class CreateRequest {\n+  public abstract static class CreateRequest<T extends CreateRequest<T>> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NDk2MQ=="}, "originalCommit": {"oid": "65827dc74177636ff83d2d9db5542119aac43a8c"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUyOTc1Nw==", "bodyText": "Does 2 actually apply here? Why would the outer class be required to implement a method of an abstract nested class?", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417529757", "createdAt": "2020-04-29T18:38:33Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/AuthProviderConfig.java", "diffHunk": "@@ -56,45 +62,52 @@ public boolean isEnabled() {\n    * <p>Set the initial attributes of the new provider by calling various setter methods available\n    * in this class.\n    */\n-  public abstract static class CreateRequest {\n+  public abstract static class CreateRequest<T extends CreateRequest<T>> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NDk2MQ=="}, "originalCommit": {"oid": "65827dc74177636ff83d2d9db5542119aac43a8c"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUzNzc1NA==", "bodyText": "Sorry, you're correct. However, I think keeping it abstract makes it more clear that we do not intend on instantiating it on its own.", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417537754", "createdAt": "2020-04-29T18:52:12Z", "author": {"login": "micahstairs"}, "path": "src/main/java/com/google/firebase/auth/AuthProviderConfig.java", "diffHunk": "@@ -56,45 +62,52 @@ public boolean isEnabled() {\n    * <p>Set the initial attributes of the new provider by calling various setter methods available\n    * in this class.\n    */\n-  public abstract static class CreateRequest {\n+  public abstract static class CreateRequest<T extends CreateRequest<T>> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NDk2MQ=="}, "originalCommit": {"oid": "65827dc74177636ff83d2d9db5542119aac43a8c"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDI1NTM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/firebase/auth/AuthProviderConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjozNzozMFrOGNpjng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMDo1NTowMlrOGNsXRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NTUzNA==", "bodyText": "May be just remove this property altogether, and always return the calculated value from the getter. It's quite cheap to compute.", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r416965534", "createdAt": "2020-04-28T22:37:30Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/AuthProviderConfig.java", "diffHunk": "@@ -29,16 +29,22 @@\n  */\n public abstract class AuthProviderConfig {\n \n-  @Key(\"name\")\n+  // Lazily initialized from 'resourceName'.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65827dc74177636ff83d2d9db5542119aac43a8c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxMTUyNg==", "bodyText": "Okay! For consistency, I also made this change to the Tenant class.", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417011526", "createdAt": "2020-04-29T00:55:02Z", "author": {"login": "micahstairs"}, "path": "src/main/java/com/google/firebase/auth/AuthProviderConfig.java", "diffHunk": "@@ -29,16 +29,22 @@\n  */\n public abstract class AuthProviderConfig {\n \n-  @Key(\"name\")\n+  // Lazily initialized from 'resourceName'.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NTUzNA=="}, "originalCommit": {"oid": "65827dc74177636ff83d2d9db5542119aac43a8c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDY1NjA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/firebase/auth/OidcProviderConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMTo0NzoxNFrOGNtHrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNDoyODoxMVrOGOBlLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyMzkxNg==", "bodyText": "You can probably omit the AuthProviderConfig. prefix, now that the names are not ambiguous.", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417023916", "createdAt": "2020-04-29T01:47:14Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/OidcProviderConfig.java", "diffHunk": "@@ -53,7 +53,8 @@ public String getIssuer() {\n    * <p>Set the initial attributes of the new provider by calling various setter methods available\n    * in this class.\n    */\n-  public static final class CreateRequest extends AuthProviderConfig.CreateRequest<CreateRequest> {\n+  public static final class CreateRequest\n+      extends AuthProviderConfig.AbstractCreateRequest<CreateRequest> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fb85a64b6734ff93d2a2e8fbed27ad24a6c7de5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1OTE1MA==", "bodyText": "Done.", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417359150", "createdAt": "2020-04-29T14:28:11Z", "author": {"login": "micahstairs"}, "path": "src/main/java/com/google/firebase/auth/OidcProviderConfig.java", "diffHunk": "@@ -53,7 +53,8 @@ public String getIssuer() {\n    * <p>Set the initial attributes of the new provider by calling various setter methods available\n    * in this class.\n    */\n-  public static final class CreateRequest extends AuthProviderConfig.CreateRequest<CreateRequest> {\n+  public static final class CreateRequest\n+      extends AuthProviderConfig.AbstractCreateRequest<CreateRequest> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyMzkxNg=="}, "originalCommit": {"oid": "4fb85a64b6734ff93d2a2e8fbed27ad24a6c7de5"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1559, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}