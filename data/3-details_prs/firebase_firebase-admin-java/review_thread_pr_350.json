{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NjAzMDI1", "number": 350, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxODowNToyOFrODakRAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxODowNToyOFrODakRAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MTgzNzQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/firebase/ErrorCode.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxODowNToyOFrOFhl3PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTowOTo1NFrOFhqeLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2NzY3Ng==", "bodyText": "Just to make sure, concurrency conflict and aborted are caused by the same reasons?", "url": "https://github.com/firebase/firebase-admin-java/pull/350#discussion_r370767676", "createdAt": "2020-01-24T18:05:28Z", "author": {"login": "lahirumaramba"}, "path": "src/main/java/com/google/firebase/ErrorCode.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase;\n+\n+/**\n+ * Platform-wide error codes that can be raised by Admin SDK APIs.\n+ */\n+public enum ErrorCode {\n+\n+  /**\n+   * Client specified an invalid argument.\n+   */\n+  INVALID_ARGUMENT,\n+\n+  /**\n+   * Request can not be executed in the current system state, such as deleting a non-empty\n+   * directory.\n+   */\n+  FAILED_PRECONDITION,\n+\n+  /**\n+   * Client specified an invalid range.\n+   */\n+  OUT_OF_RANGE,\n+\n+  /**\n+   * Request not authenticated due to missing, invalid, or expired OAuth token.\n+   */\n+  UNAUTHENTICATED,\n+\n+  /**\n+   * Client does not have sufficient permission. This can happen because the OAuth token does\n+   * not have the right scopes, the client doesn't have permission, or the API has not been\n+   * enabled for the client project.\n+   */\n+  PERMISSION_DENIED,\n+\n+  /**\n+   * A specified resource is not found, or the request is rejected by undisclosed reasons,\n+   * such as whitelisting.\n+   */\n+  NOT_FOUND,\n+\n+  /**\n+   * Concurrency conflict, such as read-modify-write conflict.\n+   */\n+  CONFLICT,\n+\n+  /**\n+   * Concurrency conflict, such as read-modify-write conflict.\n+   */\n+  ABORTED,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c1ee546415ed3144de81f2e38da42e89124e21d"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg0MzE4MQ==", "bodyText": "CONFLICT is really an error code we made up. This is because HTTP 409 can be mapped to both ABORTED and ALREADY_EXISTS: https://cloud.google.com/apis/design/errors#handling_errors\nTo mitigate this ambiguity we introduced an error code CONFLICT, so that if we only have the HTTP status code to identify an error condition, we will map it to CONFLICT instead of one of the other two.", "url": "https://github.com/firebase/firebase-admin-java/pull/350#discussion_r370843181", "createdAt": "2020-01-24T21:09:54Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/ErrorCode.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase;\n+\n+/**\n+ * Platform-wide error codes that can be raised by Admin SDK APIs.\n+ */\n+public enum ErrorCode {\n+\n+  /**\n+   * Client specified an invalid argument.\n+   */\n+  INVALID_ARGUMENT,\n+\n+  /**\n+   * Request can not be executed in the current system state, such as deleting a non-empty\n+   * directory.\n+   */\n+  FAILED_PRECONDITION,\n+\n+  /**\n+   * Client specified an invalid range.\n+   */\n+  OUT_OF_RANGE,\n+\n+  /**\n+   * Request not authenticated due to missing, invalid, or expired OAuth token.\n+   */\n+  UNAUTHENTICATED,\n+\n+  /**\n+   * Client does not have sufficient permission. This can happen because the OAuth token does\n+   * not have the right scopes, the client doesn't have permission, or the API has not been\n+   * enabled for the client project.\n+   */\n+  PERMISSION_DENIED,\n+\n+  /**\n+   * A specified resource is not found, or the request is rejected by undisclosed reasons,\n+   * such as whitelisting.\n+   */\n+  NOT_FOUND,\n+\n+  /**\n+   * Concurrency conflict, such as read-modify-write conflict.\n+   */\n+  CONFLICT,\n+\n+  /**\n+   * Concurrency conflict, such as read-modify-write conflict.\n+   */\n+  ABORTED,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2NzY3Ng=="}, "originalCommit": {"oid": "0c1ee546415ed3144de81f2e38da42e89124e21d"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1506, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}