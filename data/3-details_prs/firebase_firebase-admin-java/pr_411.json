{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MDIzMDk0", "number": 411, "title": "Rename OIDC delete operation and refactor integration tests.", "bodyText": "I've renamed the delete operation since we need separate methods for deleting OIDC and SAML provider configs.\nI've also created a ProviderConfigTestUtils class to house shared logic between TenantAwareFirebaseAuthIT and FirebaseAuthIT, and I've added a TemporaryProviderConfig class to make it easier for provider configs to be cleaned up automatically. I've structured this class in such a way that we can easily tack on logic to cleanup SAML provider configs as well.\nI've also decided to remove testGetUserWithMultipleTenantIds. I initially wrote this test to understand how tenant-aware auths and tenant-agnostic auths interacted with one another. In its existing state, it appears to be leaking created users, and in order to resolve this with TemporaryUser, we would need to declare multiple TemporaryUser objects as rules. I think it's better to avoid this complexity and remove this test. After all, this integration test is mainly making assertions about the server's behavior and not our behavior.\nNOTE: I also plan on creating a UserTestUtils class to reduce some code duplication between integration tests, but this will be in a separate PR.", "createdAt": "2020-05-12T23:16:00Z", "url": "https://github.com/firebase/firebase-admin-java/pull/411", "merged": true, "mergeCommit": {"oid": "21dbf78b69dce40425d58b85b1e531b99093e915"}, "closed": true, "closedAt": "2020-05-13T23:45:06Z", "author": {"login": "micahstairs"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgsgOmgH2gAyNDE3MDIzMDk0OjM2YTM1MmExYTdlZWE0OGViZWI5NDU1OGFhMWM4YWY1YWM4YjUyMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchBLn3gH2gAyNDE3MDIzMDk0OjkxNDE2YjE2MTIwNTAzOWZlZTljNmIxMzkwOWY2YjQ3ODFkNDczNTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "36a352a1a7eea48ebeb94558aa1c8af5ac8b5205", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/36a352a1a7eea48ebeb94558aa1c8af5ac8b5205", "committedDate": "2020-05-12T23:02:41Z", "message": "Rename OIDC delete operation and refactor integration tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMjgzNzc0", "url": "https://github.com/firebase/firebase-admin-java/pull/411#pullrequestreview-411283774", "createdAt": "2020-05-13T20:42:20Z", "commit": {"oid": "36a352a1a7eea48ebeb94558aa1c8af5ac8b5205"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDo0MjoyMFrOGVCxpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDo1Mjo0OFrOGVDGvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxODc1Nw==", "bodyText": "Nit: synchronize this for consistency (so that all access to the underlying List is threadsafe).", "url": "https://github.com/firebase/firebase-admin-java/pull/411#discussion_r424718757", "createdAt": "2020-05-13T20:42:20Z", "author": {"login": "hiranya911"}, "path": "src/test/java/com/google/firebase/auth/ProviderConfigTestUtils.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase.auth;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+import org.junit.rules.ExternalResource;\n+\n+class ProviderConfigTestUtils {\n+\n+  static void assertOidcProviderConfigDoesNotExist(\n+      AbstractFirebaseAuth firebaseAuth, String providerId) throws Exception {\n+    try {\n+      firebaseAuth.getOidcProviderConfigAsync(providerId).get();\n+      fail(\"No error thrown for getting a deleted OIDC provider config.\");\n+    } catch (ExecutionException e) {\n+      assertTrue(e.getCause() instanceof FirebaseAuthException);\n+      assertEquals(FirebaseUserManager.CONFIGURATION_NOT_FOUND_ERROR,\n+          ((FirebaseAuthException) e.getCause()).getErrorCode());\n+    }\n+  }\n+\n+  /**\n+   * Creates temporary provider configs for testing, and deletes them at the end of each test case.\n+   */\n+  static final class TemporaryProviderConfig extends ExternalResource {\n+\n+    private final AbstractFirebaseAuth auth;\n+    private final List<String> oidcIds = new ArrayList<>();\n+\n+    TemporaryProviderConfig(AbstractFirebaseAuth auth) {\n+      this.auth = auth;\n+    }\n+\n+    OidcProviderConfig createOidcProviderConfig(OidcProviderConfig.CreateRequest request)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36a352a1a7eea48ebeb94558aa1c8af5ac8b5205"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyMDE0OQ==", "bodyText": "Should we also expose a delete method on the TemporaryProviderConfig class so that it can drop the provider ID from the List? Otherwise we'd be making an extra rpc to delete an already deleted provider config.", "url": "https://github.com/firebase/firebase-admin-java/pull/411#discussion_r424720149", "createdAt": "2020-05-13T20:45:06Z", "author": {"login": "hiranya911"}, "path": "src/test/java/com/google/firebase/auth/FirebaseAuthIT.java", "diffHunk": "@@ -563,124 +565,113 @@ public void testGenerateSignInWithEmailLink() throws Exception {\n   public void testOidcProviderConfigLifecycle() throws Exception {\n     // Create config provider\n     String providerId = \"oidc.provider-id\";\n-    OidcProviderConfig.CreateRequest createRequest =\n+    OidcProviderConfig config = temporaryProviderConfig.createOidcProviderConfig(\n         new OidcProviderConfig.CreateRequest()\n             .setProviderId(providerId)\n             .setDisplayName(\"DisplayName\")\n             .setEnabled(true)\n             .setClientId(\"ClientId\")\n-            .setIssuer(\"https://oidc.com/issuer\");\n-    OidcProviderConfig config = auth.createOidcProviderConfigAsync(createRequest).get();\n+            .setIssuer(\"https://oidc.com/issuer\"));\n     assertEquals(providerId, config.getProviderId());\n     assertEquals(\"DisplayName\", config.getDisplayName());\n     assertTrue(config.isEnabled());\n     assertEquals(\"ClientId\", config.getClientId());\n     assertEquals(\"https://oidc.com/issuer\", config.getIssuer());\n \n-    try {\n-      // Get config provider\n-      config = auth.getOidcProviderConfigAsync(providerId).get();\n-      assertEquals(providerId, config.getProviderId());\n-      assertEquals(\"DisplayName\", config.getDisplayName());\n-      assertTrue(config.isEnabled());\n-      assertEquals(\"ClientId\", config.getClientId());\n-      assertEquals(\"https://oidc.com/issuer\", config.getIssuer());\n+    // Get config provider\n+    config = auth.getOidcProviderConfigAsync(providerId).get();\n+    assertEquals(providerId, config.getProviderId());\n+    assertEquals(\"DisplayName\", config.getDisplayName());\n+    assertTrue(config.isEnabled());\n+    assertEquals(\"ClientId\", config.getClientId());\n+    assertEquals(\"https://oidc.com/issuer\", config.getIssuer());\n \n-      // Update config provider\n-      OidcProviderConfig.UpdateRequest updateRequest =\n-          new OidcProviderConfig.UpdateRequest(providerId)\n-              .setDisplayName(\"NewDisplayName\")\n-              .setEnabled(false)\n-              .setClientId(\"NewClientId\")\n-              .setIssuer(\"https://oidc.com/new-issuer\");\n-      config = auth.updateOidcProviderConfigAsync(updateRequest).get();\n-      assertEquals(providerId, config.getProviderId());\n-      assertEquals(\"NewDisplayName\", config.getDisplayName());\n-      assertFalse(config.isEnabled());\n-      assertEquals(\"NewClientId\", config.getClientId());\n-      assertEquals(\"https://oidc.com/new-issuer\", config.getIssuer());\n-    } finally {\n-      // Delete config provider\n-      auth.deleteProviderConfigAsync(providerId).get();\n-    }\n+    // Update config provider\n+    OidcProviderConfig.UpdateRequest updateRequest =\n+        new OidcProviderConfig.UpdateRequest(providerId)\n+            .setDisplayName(\"NewDisplayName\")\n+            .setEnabled(false)\n+            .setClientId(\"NewClientId\")\n+            .setIssuer(\"https://oidc.com/new-issuer\");\n+    config = auth.updateOidcProviderConfigAsync(updateRequest).get();\n+    assertEquals(providerId, config.getProviderId());\n+    assertEquals(\"NewDisplayName\", config.getDisplayName());\n+    assertFalse(config.isEnabled());\n+    assertEquals(\"NewClientId\", config.getClientId());\n+    assertEquals(\"https://oidc.com/new-issuer\", config.getIssuer());\n \n-    assertOidcProviderConfigDoesNotExist(auth, providerId);\n+    // Delete config provider\n+    auth.deleteOidcProviderConfigAsync(providerId).get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36a352a1a7eea48ebeb94558aa1c8af5ac8b5205"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyMzUzNA==", "bodyText": "Nit: I kindda liked the more descriptive name tenantAwareAuth here. But your call.", "url": "https://github.com/firebase/firebase-admin-java/pull/411#discussion_r424723534", "createdAt": "2020-05-13T20:51:38Z", "author": {"login": "hiranya911"}, "path": "src/test/java/com/google/firebase/auth/TenantAwareFirebaseAuthIT.java", "diffHunk": "@@ -61,20 +64,21 @@\n   private static final JsonFactory jsonFactory = Utils.getDefaultJsonFactory();\n   private static final HttpTransport transport = Utils.getDefaultTransport();\n \n-  private static FirebaseAuth auth;\n   private static TenantManager tenantManager;\n-  private static TenantAwareFirebaseAuth tenantAwareAuth;\n+  private static TenantAwareFirebaseAuth auth;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36a352a1a7eea48ebeb94558aa1c8af5ac8b5205"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyNDE1Ng==", "bodyText": "Use the tempProviderConfig here and unroll the try-finally?", "url": "https://github.com/firebase/firebase-admin-java/pull/411#discussion_r424724156", "createdAt": "2020-05-13T20:52:48Z", "author": {"login": "hiranya911"}, "path": "src/test/java/com/google/firebase/auth/TenantAwareFirebaseAuthIT.java", "diffHunk": "@@ -297,15 +270,15 @@ public void testOidcProviderConfigLifecycle() throws Exception {\n             .setEnabled(true)\n             .setClientId(\"ClientId\")\n             .setIssuer(\"https://oidc.com/issuer\");\n-    OidcProviderConfig config = tenantAwareAuth.createOidcProviderConfigAsync(createRequest).get();\n+    OidcProviderConfig config = auth.createOidcProviderConfigAsync(createRequest).get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36a352a1a7eea48ebeb94558aa1c8af5ac8b5205"}, "originalPosition": 205}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3845b2c31b2065b7b8b51e8a9b699b39b42b8cbb", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/3845b2c31b2065b7b8b51e8a9b699b39b42b8cbb", "committedDate": "2020-05-13T21:33:55Z", "message": "Address pull request feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzUzODAz", "url": "https://github.com/firebase/firebase-admin-java/pull/411#pullrequestreview-411353803", "createdAt": "2020-05-13T22:53:42Z", "commit": {"oid": "3845b2c31b2065b7b8b51e8a9b699b39b42b8cbb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91416b161205039fee9c6b13909f6b4781d47359", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/91416b161205039fee9c6b13909f6b4781d47359", "committedDate": "2020-05-13T23:08:11Z", "message": "Simplify synchonization."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2872, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}