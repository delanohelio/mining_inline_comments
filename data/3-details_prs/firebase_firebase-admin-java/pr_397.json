{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NzIzNDc3", "number": 397, "title": "Add OIDC Auth provider config class", "bodyText": "This provider class only includes a CreateRequest inner class for the time being. An UpdateRequest inner class will be added in the future.\nIn addition to OidcProviderConfig, this pull request also includes a base class, which will be shared by a future SamlProviderConfig class.\nThis is part of adding multi-tenancy support (see issue #332).", "createdAt": "2020-04-24T19:21:35Z", "url": "https://github.com/firebase/firebase-admin-java/pull/397", "merged": true, "mergeCommit": {"oid": "3827819688fec8ac0f71124d389281a1fb40a737"}, "closed": true, "closedAt": "2020-04-27T20:34:06Z", "author": {"login": "micahstairs"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABca2WcVAH2gAyNDA4NzIzNDc3OmM1ZjM5MTcyNGI1MDBjYWE3MTdlYTRjODhmOWU4M2MwZmIzNjc2ZGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcb0xQTAFqTQwMTI3NTYwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c5f391724b500caa717ea4c88f9e83c0fb3676df", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/c5f391724b500caa717ea4c88f9e83c0fb3676df", "committedDate": "2020-04-24T19:07:30Z", "message": "Add OIDC provider config class and base class."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMjk2MzMy", "url": "https://github.com/firebase/firebase-admin-java/pull/397#pullrequestreview-400296332", "createdAt": "2020-04-24T22:02:30Z", "commit": {"oid": "c5f391724b500caa717ea4c88f9e83c0fb3676df"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjowMjozMFrOGLqxUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjowMjozMFrOGLqxUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg4ODI3NQ==", "bodyText": "Also check for malformed URL.", "url": "https://github.com/firebase/firebase-admin-java/pull/397#discussion_r414888275", "createdAt": "2020-04-24T22:02:30Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/OidcProviderConfig.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase.auth;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+\n+import com.google.api.client.util.Key;\n+import com.google.common.base.Strings;\n+import com.google.common.collect.ImmutableMap;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Contains metadata associated with an OIDC Auth provider.\n+ *\n+ * <p>Instances of this class are immutable and thread safe.\n+ */\n+public final class OidcProviderConfig extends AuthProviderConfig {\n+\n+  @Key(\"clientId\")\n+  private String clientId;\n+\n+  @Key(\"issuer\")\n+  private String issuer;\n+\n+  public String getClientId() {\n+    return clientId;\n+  }\n+\n+  public String getIssuer() {\n+    return issuer;\n+  }\n+\n+  /**\n+   * A specification class for creating a new OIDC Auth provider.\n+   *\n+   * <p>Set the initial attributes of the new provider by calling various setter methods available\n+   * in this class.\n+   */\n+  public static final class CreateRequest extends AuthProviderConfig.CreateRequest {\n+\n+    /**\n+     * Creates a new {@link CreateRequest}, which can be used to create a new OIDC Auth provider.\n+     *\n+     * <p>The returned object should be passed to\n+     * {@link TenantAwareFirebaseAuth#createProviderConfig(CreateRequest)} to register the provider\n+     * information persistently.\n+     */\n+    public CreateRequest() { }\n+\n+    /**\n+     * Sets the client ID for the new provider.\n+     *\n+     * @param clientId a non-null, non-empty client ID string.\n+     */\n+    public CreateRequest setClientId(String clientId) {\n+      checkArgument(!Strings.isNullOrEmpty(clientId), \"client ID must not be null or empty\");\n+      properties.put(\"clientId\", clientId);\n+      return this;\n+    }\n+\n+    /**\n+     * Sets the issuer for the new provider.\n+     *\n+     * @param issuer a non-null, non-empty issuer string.\n+     */\n+    public CreateRequest setIssuer(String issuer) {\n+      checkArgument(!Strings.isNullOrEmpty(issuer), \"issuer must not be null or empty\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5f391724b500caa717ea4c88f9e83c0fb3676df"}, "originalPosition": 82}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1af6a9b2c46d6b1c1fa2e7147f08ddbb20290685", "author": {"user": {"login": "micahstairs", "name": "Micah Stairs"}}, "url": "https://github.com/firebase/firebase-admin-java/commit/1af6a9b2c46d6b1c1fa2e7147f08ddbb20290685", "committedDate": "2020-04-25T22:20:57Z", "message": "Add validation for issuer URL"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMjc1NjA5", "url": "https://github.com/firebase/firebase-admin-java/pull/397#pullrequestreview-401275609", "createdAt": "2020-04-27T19:50:54Z", "commit": {"oid": "1af6a9b2c46d6b1c1fa2e7147f08ddbb20290685"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2851, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}