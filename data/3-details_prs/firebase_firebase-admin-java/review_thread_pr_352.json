{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NTE4NTQ5", "number": 352, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxMToyN1rODaSAJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxMjozMlrODaSBjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODg0NTE2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/firebase/auth/FirebaseAuth.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxMToyN1rOFhJg4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToyNDozMFrOFhJ5Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMzIwMg==", "bodyText": "Do checkNotNull in the parent constructor.", "url": "https://github.com/firebase/firebase-admin-java/pull/352#discussion_r370303202", "createdAt": "2020-01-23T19:11:27Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/FirebaseAuth.java", "diffHunk": "@@ -53,35 +33,19 @@\n  * then use it to perform a variety of authentication-related operations, including generating\n  * custom tokens for use by client-side code, verifying Firebase ID Tokens received from clients, or\n  * creating new FirebaseApp instances that are scoped to a particular authentication UID.\n+ * \n+ * <p>TODO(micahstairs): Add getTenantManager() method.\n  */\n-public class FirebaseAuth {\n+public class FirebaseAuth extends AbstractFirebaseAuth {\n \n   private static final String SERVICE_ID = FirebaseAuth.class.getName();\n \n-  private static final String ERROR_CUSTOM_TOKEN = \"ERROR_CUSTOM_TOKEN\";\n-\n-  private final Object lock = new Object();\n-  private final AtomicBoolean destroyed = new AtomicBoolean(false);\n-\n-  private final FirebaseApp firebaseApp;\n-  private final Supplier<FirebaseTokenFactory> tokenFactory;\n-  private final Supplier<? extends FirebaseTokenVerifier> idTokenVerifier;\n-  private final Supplier<? extends FirebaseTokenVerifier> cookieVerifier;\n-  private final Supplier<? extends FirebaseUserManager> userManager;\n-  private final JsonFactory jsonFactory;\n-\n   private FirebaseAuth(Builder builder) {\n-    this.firebaseApp = checkNotNull(builder.firebaseApp);\n-    this.tokenFactory = threadSafeMemoize(builder.tokenFactory);\n-    this.idTokenVerifier = threadSafeMemoize(builder.idTokenVerifier);\n-    this.cookieVerifier = threadSafeMemoize(builder.cookieVerifier);\n-    this.userManager = threadSafeMemoize(new Supplier<FirebaseUserManager>() {\n-      @Override\n-      public FirebaseUserManager get() {\n-        return new FirebaseUserManager(firebaseApp);\n-      }\n-    });\n-    this.jsonFactory = firebaseApp.getOptions().getJsonFactory();\n+    super(\n+        checkNotNull(builder.firebaseApp),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c59bea9d29a984abcebfc072121a72ac4cedc8"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwOTQ3NQ==", "bodyText": "Done.", "url": "https://github.com/firebase/firebase-admin-java/pull/352#discussion_r370309475", "createdAt": "2020-01-23T19:24:30Z", "author": {"login": "micahstairs"}, "path": "src/main/java/com/google/firebase/auth/FirebaseAuth.java", "diffHunk": "@@ -53,35 +33,19 @@\n  * then use it to perform a variety of authentication-related operations, including generating\n  * custom tokens for use by client-side code, verifying Firebase ID Tokens received from clients, or\n  * creating new FirebaseApp instances that are scoped to a particular authentication UID.\n+ * \n+ * <p>TODO(micahstairs): Add getTenantManager() method.\n  */\n-public class FirebaseAuth {\n+public class FirebaseAuth extends AbstractFirebaseAuth {\n \n   private static final String SERVICE_ID = FirebaseAuth.class.getName();\n \n-  private static final String ERROR_CUSTOM_TOKEN = \"ERROR_CUSTOM_TOKEN\";\n-\n-  private final Object lock = new Object();\n-  private final AtomicBoolean destroyed = new AtomicBoolean(false);\n-\n-  private final FirebaseApp firebaseApp;\n-  private final Supplier<FirebaseTokenFactory> tokenFactory;\n-  private final Supplier<? extends FirebaseTokenVerifier> idTokenVerifier;\n-  private final Supplier<? extends FirebaseTokenVerifier> cookieVerifier;\n-  private final Supplier<? extends FirebaseUserManager> userManager;\n-  private final JsonFactory jsonFactory;\n-\n   private FirebaseAuth(Builder builder) {\n-    this.firebaseApp = checkNotNull(builder.firebaseApp);\n-    this.tokenFactory = threadSafeMemoize(builder.tokenFactory);\n-    this.idTokenVerifier = threadSafeMemoize(builder.idTokenVerifier);\n-    this.cookieVerifier = threadSafeMemoize(builder.cookieVerifier);\n-    this.userManager = threadSafeMemoize(new Supplier<FirebaseUserManager>() {\n-      @Override\n-      public FirebaseUserManager get() {\n-        return new FirebaseUserManager(firebaseApp);\n-      }\n-    });\n-    this.jsonFactory = firebaseApp.getOptions().getJsonFactory();\n+    super(\n+        checkNotNull(builder.firebaseApp),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMzIwMg=="}, "originalCommit": {"oid": "f4c59bea9d29a984abcebfc072121a72ac4cedc8"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODg0ODc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/google/firebase/auth/FirebaseAuth.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToxMjozMlrOFhJjAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOToyNDoyNFrOFhJ5Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMzc0NQ==", "bodyText": "Add newline", "url": "https://github.com/firebase/firebase-admin-java/pull/352#discussion_r370303745", "createdAt": "2020-01-23T19:12:32Z", "author": {"login": "hiranya911"}, "path": "src/main/java/com/google/firebase/auth/FirebaseAuth.java", "diffHunk": "@@ -1207,4 +148,4 @@ public void destroy() {\n       instance.destroy();\n     }\n   }\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c59bea9d29a984abcebfc072121a72ac4cedc8"}, "originalPosition": 1186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwOTQzNQ==", "bodyText": "Done.", "url": "https://github.com/firebase/firebase-admin-java/pull/352#discussion_r370309435", "createdAt": "2020-01-23T19:24:24Z", "author": {"login": "micahstairs"}, "path": "src/main/java/com/google/firebase/auth/FirebaseAuth.java", "diffHunk": "@@ -1207,4 +148,4 @@ public void destroy() {\n       instance.destroy();\n     }\n   }\n-}\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMzc0NQ=="}, "originalCommit": {"oid": "f4c59bea9d29a984abcebfc072121a72ac4cedc8"}, "originalPosition": 1186}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1509, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}