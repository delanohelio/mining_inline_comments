{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NTY3Mjc4", "number": 3056, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODozMzoxNFrOD8YH0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODo0NToyNlrOD8Yang==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjM2MzY5OnYy", "diffSide": "RIGHT", "path": "developer-resources/Spring.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODozMzoxNFrOGVRqww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODo1NTo0MlrOGVSkIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk2Mjc1NQ==", "bodyText": "A big question here is whether we enable https ONLY or if we listen on BOTH ports.\nMy initial thought was both - but given all interactions are moving to secured it's probably ok to do https only, as long as it 'just works' with self signed, works fine when developers debugging - in that case simply changing the ports is ok", "url": "https://github.com/odpi/egeria/pull/3056#discussion_r424962755", "createdAt": "2020-05-14T08:33:14Z", "author": {"login": "planetf1"}, "path": "developer-resources/Spring.md", "diffHunk": "@@ -26,11 +26,11 @@ For example, this is the declaration used for the OMRS REST APIs\n @RequestMapping(\"/open-metadata/repository-services\")\n ```\n \n-This URI follows the root URL of the server.  So if the server was using `http://localhost:8080`, the methods are called\n+This URI follows the root URL of the server.  So if the server was using `https://localhost:9443`, the methods are called\n using\n \n ```\n-http://localhost:8080/open-metadata/repository-services ...\n+https://localhost:9443/open-metadata/repository-services ...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ec19f160881b4aac4dc4d8e843f9a952c7af17"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk3NzQ0MA==", "bodyText": "Interestingly if using a service mesh like istio in k8s there's a certain appeal in allowing individual containers to continue using simple http - without any need to deal with certificates & keystrokes, and using the mesh framework to manage the proxying through https. This is a pretty standard pattern. We may actually be making this a little more complicated by 'doing the right thing' and assuming https. It may not change the fact https is a good default, but I wonder if this is another reason we need to keep http - and figure out how to make configurable.\nWill research some more on what is best practice", "url": "https://github.com/odpi/egeria/pull/3056#discussion_r424977440", "createdAt": "2020-05-14T08:55:42Z", "author": {"login": "planetf1"}, "path": "developer-resources/Spring.md", "diffHunk": "@@ -26,11 +26,11 @@ For example, this is the declaration used for the OMRS REST APIs\n @RequestMapping(\"/open-metadata/repository-services\")\n ```\n \n-This URI follows the root URL of the server.  So if the server was using `http://localhost:8080`, the methods are called\n+This URI follows the root URL of the server.  So if the server was using `https://localhost:9443`, the methods are called\n using\n \n ```\n-http://localhost:8080/open-metadata/repository-services ...\n+https://localhost:9443/open-metadata/repository-services ...", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk2Mjc1NQ=="}, "originalCommit": {"oid": "33ec19f160881b4aac4dc4d8e843f9a952c7af17"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjM3Mzg2OnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/admin-services/admin-services-configuration.postman_collection.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODozNTo1M1rOGVRxWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODozNTo1M1rOGVRxWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk2NDQ0MQ==", "bodyText": "Another key question - are we ok with 9443 as the default. I know you mentioned this in the issue and indeed referred to 8443.\nI'd actually be inclined to suggest the chassis (ie core egeria) sticks with 8443 - and we move the UI to 9443.", "url": "https://github.com/odpi/egeria/pull/3056#discussion_r424964441", "createdAt": "2020-05-14T08:35:53Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/admin-services/admin-services-configuration.postman_collection.json", "diffHunk": "@@ -202,12 +202,12 @@\n \t\t\t\t\t\"raw\": \"\"\n \t\t\t\t},\n \t\t\t\t\"url\": {\n-\t\t\t\t\t\"raw\": \"http://localhost:8080/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/server-user-id?id=cocoMDS\",\n-\t\t\t\t\t\"protocol\": \"http\",\n+\t\t\t\t\t\"raw\": \"https://localhost:9443/open-metadata/admin-services/users/garygeeke/servers/cocoMDS1/server-user-id?id=cocoMDS\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ec19f160881b4aac4dc4d8e843f9a952c7af17"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjM4NjA2OnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/user-interfaces/ui-chassis/ui-chassis-spring/src/main/java/org/odpi/openmetadata/userinterface/uichassis/springboot/auth/LoginFilter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODozODo1M1rOGVR5DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODozODo1M1rOGVR5DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk2NjQxMw==", "bodyText": "Typo? Should we just have 'No' ?", "url": "https://github.com/odpi/egeria/pull/3056#discussion_r424966413", "createdAt": "2020-05-14T08:38:53Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/ui-chassis/ui-chassis-spring/src/main/java/org/odpi/openmetadata/userinterface/uichassis/springboot/auth/LoginFilter.java", "diffHunk": "@@ -35,9 +33,15 @@ protected LoginFilter(String urlMapping, AuthenticationManager authenticationMan\n     public Authentication attemptAuthentication(HttpServletRequest request, HttpServletResponse response)\n             throws AuthenticationException {\n \n-        return getAuthenticationManager()\n-                .authenticate(new UsernamePasswordAuthenticationToken(\n-                        request.getParameter(\"username\"), request.getParameter(\"password\")));\n+        String username = request.getParameter(\"username\");\n+        String password = request.getParameter(\"password\");\n+        Authentication authentication =  getAuthenticationManager()\n+                .authenticate(new UsernamePasswordAuthenticationToken( username, password));\n+\n+        if(authentication.getAuthorities().isEmpty()){\n+            throw new InsufficientAuthenticationException(\"NO authorities for the user: \" + authentication.getPrincipal().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ec19f160881b4aac4dc4d8e843f9a952c7af17"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjM5MTQ3OnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/user-interfaces/ui-chassis/ui-chassis-spring/src/main/resources/application.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODo0MDoxNlrOGVR8iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODo0MDoxNlrOGVR8iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk2NzMwNQ==", "bodyText": "will it work OOTB with strict.ssl=true? If not how do we ensure it's obvious/simple/clear to get up (less of an issue in the container env where we can easily setup the certs - or disable for tutorial (less preferable))", "url": "https://github.com/odpi/egeria/pull/3056#discussion_r424967305", "createdAt": "2020-05-14T08:40:16Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/ui-chassis/ui-chassis-spring/src/main/resources/application.properties", "diffHunk": "@@ -6,20 +6,21 @@ server.compression.enabled=true\n server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css\n server.tomcat.uri-encoding=UTF-8\n \n-server.ssl.key-store: classpath:keystore.p12\n-server.ssl.key-store-password: 123456\n-server.ssl.keyStoreType: PKCS12\n-server.ssl.keyAlias: tomcat\n+server.ssl.key-store=classpath:keystore.p12\n+server.ssl.key-store-password=egeria\n+server.ssl.keyStoreType=PKCS12\n+server.ssl.keyAlias=tomcat\n \n-# set to false if you want to ignore invalid ssl certificate of a server you want to connect to\n+# WARNING! setting 'false' allows java clients to open https connections without checking certificates validity\n+# Alternate you can import self signed certificates into java truststore or setup an truststore only for this app\n+# by adding the store into server.ssl.trust-store parameter\n strict.ssl=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ec19f160881b4aac4dc4d8e843f9a952c7af17"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjQwMjM4OnYy", "diffSide": "RIGHT", "path": "open-metadata-resources/open-metadata-deployment/charts/odpi-egeria-lab/templates/egeria-core.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODo0MzowMlrOGVSDUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODo0MzowMlrOGVSDUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk2OTA0Mg==", "bodyText": "Logically we probably should update the node ports to be suitably numbers - it will still work without, but it seems more complete - ie rather than 30080 maybe it's 30043 (ports need to be 30000-32999 I think) etc", "url": "https://github.com/odpi/egeria/pull/3056#discussion_r424969042", "createdAt": "2020-05-14T08:43:02Z", "author": {"login": "planetf1"}, "path": "open-metadata-resources/open-metadata-deployment/charts/odpi-egeria-lab/templates/egeria-core.yaml", "diffHunk": "@@ -15,8 +15,8 @@ metadata:\n spec:\n   type: {{ .Values.service.type }}\n   ports:\n-    - port: 8080\n-      targetPort: 8080\n+    - port: 9443\n+      targetPort: 9443\n       nodePort: {{ .Values.service.nodeport.core }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ec19f160881b4aac4dc4d8e843f9a952c7af17"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjQwNzI4OnYy", "diffSide": "RIGHT", "path": "open-metadata-resources/open-metadata-deployment/docker/egeria/Dockerfile", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODo0NDoyMVrOGVSGbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODo0NDoyMVrOGVSGbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk2OTgzNg==", "bodyText": "The ports are also documented on docker hub so I'll need to update there (easy just shouldn't forget)", "url": "https://github.com/odpi/egeria/pull/3056#discussion_r424969836", "createdAt": "2020-05-14T08:44:21Z", "author": {"login": "planetf1"}, "path": "open-metadata-resources/open-metadata-deployment/docker/egeria/Dockerfile", "diffHunk": "@@ -23,29 +23,29 @@ LABEL org.opencontainers.image.vendor = \"ODPi\" \\\n       org.opencontainers.image.version = \"$version\" \\\n       org.opencontainers.image.documentation = \"https://egeria.odpi.org/open-metadata-resources/open-metadata-deployment/docker/egeria/\" \\\n       org.opencontainers.image.ext.vcs-date = \"$VCS_DATE\" \\\n-      org.opencontainers.image.ext.docker.cmd = \"docker run -d -p 8080:8080 odpi/egeria\" \\\n-      org.opencontainers.image.ext.docker.cmd.devel = \"docker run -d -p 8080:8080 -p 5005:5005 -e JAVA_DEBUG=true odpi/egeria\" \\\n+      org.opencontainers.image.ext.docker.cmd = \"docker run -d -p 9443:9443 odpi/egeria\" \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ec19f160881b4aac4dc4d8e843f9a952c7af17"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjQxMTgyOnYy", "diffSide": "LEFT", "path": "open-metadata-resources/open-metadata-deployment/docker/egeria/Dockerfile", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODo0NToyNlrOGVSJQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODo0NToyNlrOGVSJQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk3MDU2MA==", "bodyText": "interesting .. nothing to do with ports we just decided to make the userid the same! I'd probably not update (indeed I wonder if it should just be 1111 or similar! - but that's outside the scope of this change)", "url": "https://github.com/odpi/egeria/pull/3056#discussion_r424970560", "createdAt": "2020-05-14T08:45:26Z", "author": {"login": "planetf1"}, "path": "open-metadata-resources/open-metadata-deployment/docker/egeria/Dockerfile", "diffHunk": "@@ -23,29 +23,29 @@ LABEL org.opencontainers.image.vendor = \"ODPi\" \\\n       org.opencontainers.image.version = \"$version\" \\\n       org.opencontainers.image.documentation = \"https://egeria.odpi.org/open-metadata-resources/open-metadata-deployment/docker/egeria/\" \\\n       org.opencontainers.image.ext.vcs-date = \"$VCS_DATE\" \\\n-      org.opencontainers.image.ext.docker.cmd = \"docker run -d -p 8080:8080 odpi/egeria\" \\\n-      org.opencontainers.image.ext.docker.cmd.devel = \"docker run -d -p 8080:8080 -p 5005:5005 -e JAVA_DEBUG=true odpi/egeria\" \\\n+      org.opencontainers.image.ext.docker.cmd = \"docker run -d -p 9443:9443 odpi/egeria\" \\\n+      org.opencontainers.image.ext.docker.cmd.devel = \"docker run -d -p 9443:9443 -p 5005:5005 -e JAVA_DEBUG=true odpi/egeria\" \\\n       org.opencontainers.image.ext.docker.debug = \"docker exec -it $CONTAINER /bin/sh\" \\\n       org.opencontainers.image.ext.docker.params = \"JAVA_DEBUG=set to true to enable JVM debugging\"\n \n RUN apk --no-cache add bash shadow && \\\n     apk --no-cache update && \\\n     apk --no-cache upgrade && \\\n-    groupadd -r egeria -g 8080 && \\\n-    useradd --no-log-init -r -g egeria -u 8080 -m -d /opt/egeria egeria\n+    groupadd -r egeria -g 9443 && \\\n+    useradd --no-log-init -r -g egeria -u 9443 -m -d /opt/egeria egeria\n \n COPY --chown=egeria:egeria dist/entrypoint.sh /entrypoint.sh\n \n # Copy distribution\n COPY --chown=egeria:egeria target/assembly /opt/egeria\n \n # Expose port 8080 (default) for client access, and allow for 5005 being used for remote java debug\n-EXPOSE 8080 5005\n+EXPOSE 9443 5005\n \n WORKDIR /opt/egeria\n \n # Require use of numeric userids to meet some container security checks\n-USER 8080:8080", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ec19f160881b4aac4dc4d8e843f9a952c7af17"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2381, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}