{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MDI2MzMw", "number": 2623, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOTo1MjozN1rODiQ5HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOTo1Nzo0MFrODiRAAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjU0OTQwOnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-server/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/admin/AssetLineageAdmin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOTo1MjozN1rOFtal9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOTo1MjozN1rOFtal9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE2NTk0MQ==", "bodyText": "From the clean code perspective, the immutable final variables come before the mutable non final ones", "url": "https://github.com/odpi/egeria/pull/2623#discussion_r383165941", "createdAt": "2020-02-24T09:52:37Z", "author": {"login": "danielaotelea"}, "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-server/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/admin/AssetLineageAdmin.java", "diffHunk": "@@ -21,14 +25,12 @@\n  * the Asset Lineage OMAS. The initialization call provides this OMAS with resources from the\n  * Open Metadata Repository Services.\n  */\n-public class AssetLineageAdmin extends AccessServiceAdmin\n-{\n+public class AssetLineageAdmin extends AccessServiceAdmin {\n \n     private OMRSAuditLog auditLog;\n     private AssetLineageServicesInstance instance;\n     private String serverName;\n-    private String serverUserName;\n-\n+    private static final Logger log = LoggerFactory.getLogger(AssetLineageAdmin.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e21ba48878ea14fc16be2efac657fafd8523f265"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjU2NzA1OnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-server/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/handlers/ClassificationHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOTo1Nzo0MFrOFtawQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwOTo1Nzo0MFrOFtawQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE2ODU3OA==", "bodyText": "you may use CollectionUtils.isEmpty that checks also if the list of classifications is null.", "url": "https://github.com/odpi/egeria/pull/2623#discussion_r383168578", "createdAt": "2020-02-24T09:57:40Z", "author": {"login": "danielaotelea"}, "path": "open-metadata-implementation/access-services/asset-lineage/asset-lineage-server/src/main/java/org/odpi/openmetadata/accessservices/assetlineage/handlers/ClassificationHandler.java", "diffHunk": "@@ -28,156 +32,123 @@\n \n     private static final Logger log = LoggerFactory.getLogger(AssetContextHandler.class);\n \n-    private String serviceName;\n-    private String serverName;\n-    private RepositoryHandler repositoryHandler;\n-    private OMRSRepositoryHelper repositoryHelper;\n     private InvalidParameterHandler invalidParameterHandler;\n-    private CommonHandler commonHandler;\n     private AssetContext graph;\n \n \n     /**\n      * Instantiates a new Classification handler.\n      *\n-     * @param serviceName             the service name\n-     * @param serverName              the server name\n      * @param invalidParameterHandler the invalid parameter handler\n-     * @param repositoryHelper        the repository helper\n-     * @param repositoryHandler       the repository handler\n      */\n-    public ClassificationHandler(String serviceName,\n-                                 String serverName,\n-                                 InvalidParameterHandler invalidParameterHandler,\n-                                 OMRSRepositoryHelper repositoryHelper,\n-                                 RepositoryHandler repositoryHandler) {\n-        this.serviceName = serviceName;\n-        this.serverName = serverName;\n-        this.repositoryHandler = repositoryHandler;\n-        this.repositoryHelper = repositoryHelper;\n+    public ClassificationHandler(InvalidParameterHandler invalidParameterHandler) {\n         this.invalidParameterHandler = invalidParameterHandler;\n-        this.commonHandler = new CommonHandler(serviceName, serverName, invalidParameterHandler, repositoryHelper, repositoryHandler);\n     }\n \n \n     /**\n      * Gets asset context from the entity by classification type.\n      *\n-     * @param serverName         the server name\n-     * @param userId             the user id\n-     * @param entityDetail       the entity for retrieving the classifications attached to it\n+     * @param userId       the user id\n+     * @param entityDetail the entity for retrieving the classifications attached to it\n      * @return the asset context by classification\n      */\n-    public Map<String, Set<GraphContext>> getAssetContextByClassification(String serverName, String userId, EntityDetail entityDetail) {\n-\n+    public Map<String, Set<GraphContext>> getAssetContextByClassification(String userId, EntityDetail entityDetail) throws OCFCheckedExceptionBase {\n \n \n-        if (! entityDetail.getClassifications().isEmpty() && checkLineageClassificationTypes(entityDetail)) {\n+        if (!entityDetail.getClassifications().isEmpty() && checkLineageClassificationTypes(entityDetail)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e21ba48878ea14fc16be2efac657fafd8523f265"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2443, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}