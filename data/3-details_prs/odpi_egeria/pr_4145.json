{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3NjA4Nzkw", "number": 4145, "title": "#4134 Implement new get known platforms for Server Author View service and admin service ", "bodyText": "I have created this as a draft. Some decisions I have made in this fix that I would like you to be aware of and feedback.\n\nI have introduced a new rest call API .../platform/configurations, this is defined in the ConfigResource class, so it has easy access to the existing admin config related code (specifically the code that retrieves a config). Prior to this fix ConfigResource only exposed calls like /servers/{serverName}/configuration and the like.\nThe fix as coded, verifies the user as a platform investigator. There is a case to say that this Rest API should be in the platform service, which is where I have put it client side, but then the existing server retrieval code would need to refactored or a dependancies changed between the admin services and platforms services modules.\nI have coded up the Server Author View API so I could test the admin client. The Server author view API gets all the known platforms (those in the view service configuration) back. The objects that are returned to the UI are minimal.\nAs I was in the Server Author View I changed the deploy API slightly, so it issues the admin call to the platform that is accumulating configurations, which then deploys to the destination platform named in the request.", "createdAt": "2020-11-25T17:51:30Z", "url": "https://github.com/odpi/egeria/pull/4145", "merged": true, "mergeCommit": {"oid": "7bc70269e82d17d791cd95856a214a3e06e19277"}, "closed": true, "closedAt": "2020-12-01T16:11:03Z", "author": {"login": "davidradl"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdf73-1AH2gAyNTI3NjA4NzkwOmE5MGQ3MDgyM2Y2ZWNiNjhkN2VmMjM2NTA2NmY2MGQ3YzY2ZTk5NGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh7YnGgH2gAyNTI3NjA4NzkwOjNhNzE0YjRmOWM5YzdkZjNkYzk0NzI5MWEyNTA1MzRlZjJjOTA1Njc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/a90d70823f6ecb68d7ef2365066f60d7c66e994e", "committedDate": "2020-11-25T10:34:26Z", "message": "#4134 add retreive all configurations from a platformadmin call server side\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7f6edd4c868092323b160e17437bd8b91ec97db", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/d7f6edd4c868092323b160e17437bd8b91ec97db", "committedDate": "2020-11-25T10:48:38Z", "message": "#4134 add retreive all configurations from a platformadmin call client side\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce1cde2177f2d3c400bb562b60d9933ebfd72ffd", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/ce1cde2177f2d3c400bb562b60d9933ebfd72ffd", "committedDate": "2020-11-25T11:50:58Z", "message": "#4134 add retreive all configurations from a platformadmin call change rest endpoint\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56519528813586ee6aff719887e6c5d8dbc5d8cc", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/56519528813586ee6aff719887e6c5d8dbc5d8cc", "committedDate": "2020-11-25T15:46:43Z", "message": "#4134 add Server author view get known platforms call\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc4f48ca94957b7a20d356a25ad8325a010b043c", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/bc4f48ca94957b7a20d356a25ad8325a010b043c", "committedDate": "2020-11-25T15:53:14Z", "message": "Merge branch 'master' of https://github.com/odpi/egeria into git4134"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88ae006043f5470c1cd8d856cc729442a34126f9", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/88ae006043f5470c1cd8d856cc729442a34126f9", "committedDate": "2020-11-25T16:47:39Z", "message": "#4134 add fix up typos and davadoc\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fb266055574ccd9a2b3994835a9cc7564bbca39", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/9fb266055574ccd9a2b3994835a9cc7564bbca39", "committedDate": "2020-11-25T20:19:28Z", "message": "#4134 remove test scope from testng\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13e954deaca983165bfe9c2199d39793bab9d264", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/13e954deaca983165bfe9c2199d39793bab9d264", "committedDate": "2020-11-25T20:20:10Z", "message": "Merge branch 'master' of https://github.com/odpi/egeria into git4134"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6711893cef1138230bec4eaed35d3f2733c4c5d3", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/6711893cef1138230bec4eaed35d3f2733c4c5d3", "committedDate": "2020-11-26T12:08:27Z", "message": "#4134 add hash equals and toString to new beans\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "764a5a8a8dd26d8bbb0129b99cea6ab3cf36f1e7", "author": {"user": {"login": "planetf1", "name": "Nigel Jones"}}, "url": "https://github.com/odpi/egeria/commit/764a5a8a8dd26d8bbb0129b99cea6ab3cf36f1e7", "committedDate": "2020-11-26T14:02:26Z", "message": "#4134 switch to JUnit5 / fix gradle for admin services test\n\nSigned-off-by: Nigel Jones <nigel.l.jones+git@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ae2f2ef03cb142122bd596b6eb502f37fc74095", "author": {"user": {"login": "planetf1", "name": "Nigel Jones"}}, "url": "https://github.com/odpi/egeria/commit/3ae2f2ef03cb142122bd596b6eb502f37fc74095", "committedDate": "2020-11-26T14:03:09Z", "message": "Merge branch 'git4134' of https://github.com/davidradl/egeria into davidradl-git4134"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4716e11508867526086477ef5e039558d1c0245", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/d4716e11508867526086477ef5e039558d1c0245", "committedDate": "2020-11-26T14:15:52Z", "message": "#4134 add deploy API\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b782173da3951ba55e91f6a6ee5221b4b393dc58", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/b782173da3951ba55e91f6a6ee5221b4b393dc58", "committedDate": "2020-11-26T14:17:19Z", "message": "Merge branch 'git4134' of https://github.com/davidradl/egeria into git4134"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3237cb7360754c81f2a1b14be360a102af6e2464", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/3237cb7360754c81f2a1b14be360a102af6e2464", "committedDate": "2020-11-26T14:20:30Z", "message": "#4134 fix pom error\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b36f7de6d5c50ccb7015e7fa0fa0a3fecefa999b", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/b36f7de6d5c50ccb7015e7fa0fa0a3fecefa999b", "committedDate": "2020-11-26T14:24:35Z", "message": "Merge branch 'master' of https://github.com/odpi/egeria into git4134"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c0bf575a9e6aa1fc3da3bc058cad17e53786d4d", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/2c0bf575a9e6aa1fc3da3bc058cad17e53786d4d", "committedDate": "2020-11-26T16:08:35Z", "message": "Merge branch 'master' of https://github.com/odpi/egeria into git4134"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2197cb89cd2a23baed44c10e3cecad975818044", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/f2197cb89cd2a23baed44c10e3cecad975818044", "committedDate": "2020-11-26T20:11:22Z", "message": "#4134 fix deploy API\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03a713e5fec0d68682b1cac3061228f6eb9ed0c4", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/03a713e5fec0d68682b1cac3061228f6eb9ed0c4", "committedDate": "2020-11-26T20:11:38Z", "message": "Merge branch 'master' of https://github.com/odpi/egeria into git4134"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5NTUzMTY5", "url": "https://github.com/odpi/egeria/pull/4145#pullrequestreview-539553169", "createdAt": "2020-11-26T21:23:26Z", "commit": {"oid": "d7f6edd4c868092323b160e17437bd8b91ec97db"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQyMToyMzoyN1rOH6nlXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQyMTo0MzoyOFrOH6n2nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIyNzk5Nw==", "bodyText": "This is a confusing name since the server configurations are not stored in the platform.  They are managed by the config store connector.  This may be being shared by multiple platforms (for example when we run multiple servers in IntelliJ, all of the configuration is visible to all platforms).  A better name would be getAllServerConfigurations() since it spells out configuration to match the other methods in this module and does not imply that these configurations are tied to the platform.", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531227997", "createdAt": "2020-11-26T21:23:27Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-client/src/main/java/org/odpi/openmetadata/adminservices/client/OMAGServerPlatformConfigurationClient.java", "diffHunk": "@@ -252,4 +256,25 @@ public Connection getPlatformSecurityConnection() throws OMAGNotAuthorizedExcept\n \n         return restResult.getConnection();\n     }\n+\n+    /**\n+     * Return all the the OMAG Server configurations that are stored on this platform\n+     *\n+     * @return the OMAG Server configurations that are stored on this platform\n+     * @throws OMAGNotAuthorizedException the supplied userId is not authorized to issue this command.\n+     * @throws OMAGInvalidParameterException invalid parameter.\n+     * @throws OMAGConfigurationErrorException unusual state in the admin server.\n+     */\n+    public Set<OMAGServerConfig> getPlatformServerConfigs() throws OMAGNotAuthorizedException,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7f6edd4c868092323b160e17437bd8b91ec97db"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIyODAzMw==", "bodyText": "Code formatting", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531228033", "createdAt": "2020-11-26T21:23:39Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-client/src/main/java/org/odpi/openmetadata/adminservices/client/OMAGServerPlatformConfigurationClient.java", "diffHunk": "@@ -252,4 +256,25 @@ public Connection getPlatformSecurityConnection() throws OMAGNotAuthorizedExcept\n \n         return restResult.getConnection();\n     }\n+\n+    /**\n+     * Return all the the OMAG Server configurations that are stored on this platform\n+     *\n+     * @return the OMAG Server configurations that are stored on this platform\n+     * @throws OMAGNotAuthorizedException the supplied userId is not authorized to issue this command.\n+     * @throws OMAGInvalidParameterException invalid parameter.\n+     * @throws OMAGConfigurationErrorException unusual state in the admin server.\n+     */\n+    public Set<OMAGServerConfig> getPlatformServerConfigs() throws OMAGNotAuthorizedException,\n+                                                                   OMAGConfigurationErrorException,\n+                                                                   OMAGInvalidParameterException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7f6edd4c868092323b160e17437bd8b91ec97db"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIyODQyMg==", "bodyText": "Would be useful to include the name of the directory/file it was trying to access.", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531228422", "createdAt": "2020-11-26T21:25:06Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/adapters/open-connectors/configuration-store-connectors/configuration-encrypted-file-store-connector/src/main/java/org/odpi/openmetadata/adapters/adminservices/configurationstore/encryptedfile/DocStoreErrorCode.java", "diffHunk": "@@ -78,6 +78,10 @@\n             \"Unable to delete the encrypted configuration file {0}; exception was {1} with message {2}.\",\n             \"The system was unable to delete the encrypted configuration file.\",\n             \"Review the full stack trace in the logs to troubleshoot further. Then retry the request.\"),\n+    CONFIG_RETRIEVE_ALL_ERROR(400, \"ENCRYPTED-DOC-STORE-400-014 \",\n+                        \"Unable to retrieve the encrypted configuration files; exception was {0} with message {1}.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIyOTE2MQ==", "bodyText": "Again add the directory / file name that is not accessible.  Also a message id prefix such as \"FILE-CONFIG-DOC-STORE\"\nwould be much more helpful to identify that is this a configuration document store that uses files - not any old document store.", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531229161", "createdAt": "2020-11-26T21:28:31Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/adapters/open-connectors/configuration-store-connectors/configuration-file-store-connector/src/main/java/org/odpi/openmetadata/adapters/adminservices/configurationstore/file/DocStoreErrorCode.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adapters.adminservices.configurationstore.file;\n+\n+import org.odpi.openmetadata.frameworks.auditlog.messagesets.ExceptionMessageDefinition;\n+import org.odpi.openmetadata.frameworks.auditlog.messagesets.ExceptionMessageSet;\n+\n+/**\n+ * The DocStoreErrorCode is used to define first failure data capture (FFDC) for errors that occur when working with\n+ * the unencrypted file based doc store.  It is used in conjunction with all Exceptions, both Checked and Runtime (unchecked).\n+ *\n+ * The 5 fields in the enum are:\n+ * <ul>\n+ *     <li>HTTP Error Code for translating between REST and JAVA - Typically the numbers used are:</li>\n+ *     <li><ul>\n+ *         <li>500 - internal error</li>\n+ *         <li>400 - invalid parameters</li>\n+ *         <li>404 - not found</li>\n+ *         <li>409 - data conflict errors - eg item already defined</li>\n+ *     </ul></li>\n+ *     <li>Error Message Id - to uniquely identify the message</li>\n+ *     <li>Error Message Text - includes placeholder to allow additional values to be captured</li>\n+ *     <li>SystemAction - describes the result of the error</li>\n+ *     <li>UserAction - describes how a user should correct the error</li>\n+ * </ul>\n+ */\n+public enum DocStoreErrorCode implements ExceptionMessageSet\n+{\n+    CONFIG_RETRIEVE_ALL_ERROR(400, \"UNENCRYPTED-DOC-STORE-400-001 \",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIyOTQ1MA==", "bodyText": "Code formatting\nCan not just test for files that end in config - need to use the file formatting string.", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531229450", "createdAt": "2020-11-26T21:30:01Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/adapters/open-connectors/configuration-store-connectors/configuration-file-store-connector/src/main/java/org/odpi/openmetadata/adapters/adminservices/configurationstore/file/FileBasedServerConfigStoreConnector.java", "diffHunk": "@@ -144,7 +153,27 @@ public void removeServerConfig()\n \n         configStoreFile.delete();\n     }\n-\n+    @Override\n+    public Set<OMAGServerConfig> retrieveAllServerConfigs() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIyOTc4NA==", "bodyText": "... what is not supporting this command?", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531229784", "createdAt": "2020-11-26T21:31:28Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/ffdc/OMAGAdminErrorCode.java", "diffHunk": "@@ -299,6 +299,15 @@\n                           \"The view service has not been passed valid configuration.\",\n                           \"Check whether the view service expects SolutionViewServiceConfiguration or IntegrationViewServiceConfiguration, correct the configuration and restart the server.\"),\n \n+    RETRIEVE_ALL_CONFIGS_NOT_SUPPORTED(400, \"OMAG-ADMIN-400-043\",\n+                        \"A retrieve all configurations has been attempted, but operation is not supported.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIyOTg3Mw==", "bodyText": "What has rejected this operation?", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531229873", "createdAt": "2020-11-26T21:31:57Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/ffdc/OMAGAdminErrorCode.java", "diffHunk": "@@ -299,6 +299,15 @@\n                           \"The view service has not been passed valid configuration.\",\n                           \"Check whether the view service expects SolutionViewServiceConfiguration or IntegrationViewServiceConfiguration, correct the configuration and restart the server.\"),\n \n+    RETRIEVE_ALL_CONFIGS_NOT_SUPPORTED(400, \"OMAG-ADMIN-400-043\",\n+                        \"A retrieve all configurations has been attempted, but operation is not supported.\",\n+                        \"The retrieve all server configurations operation is rejected.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIyOTk1MQ==", "bodyText": "What do you do when you have checked?", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531229951", "createdAt": "2020-11-26T21:32:14Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/ffdc/OMAGAdminErrorCode.java", "diffHunk": "@@ -299,6 +299,15 @@\n                           \"The view service has not been passed valid configuration.\",\n                           \"Check whether the view service expects SolutionViewServiceConfiguration or IntegrationViewServiceConfiguration, correct the configuration and restart the server.\"),\n \n+    RETRIEVE_ALL_CONFIGS_NOT_SUPPORTED(400, \"OMAG-ADMIN-400-043\",\n+                        \"A retrieve all configurations has been attempted, but operation is not supported.\",\n+                        \"The retrieve all server configurations operation is rejected.\",\n+                        \"Check whether OMAG Server configuration connector supports retrieve all configurations.\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMDE4Mw==", "bodyText": "Typo in atored.\nWhat is the error?", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531230183", "createdAt": "2020-11-26T21:33:33Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/ffdc/OMAGAdminErrorCode.java", "diffHunk": "@@ -299,6 +299,15 @@\n                           \"The view service has not been passed valid configuration.\",\n                           \"Check whether the view service expects SolutionViewServiceConfiguration or IntegrationViewServiceConfiguration, correct the configuration and restart the server.\"),\n \n+    RETRIEVE_ALL_CONFIGS_NOT_SUPPORTED(400, \"OMAG-ADMIN-400-043\",\n+                        \"A retrieve all configurations has been attempted, but operation is not supported.\",\n+                        \"The retrieve all server configurations operation is rejected.\",\n+                        \"Check whether OMAG Server configuration connector supports retrieve all configurations.\"),\n+    UNABLE_TO_OBTAIN_SERVER_CONFIG_STORE(400, \"OMAG-ADMIN-400-044\",\n+                                         \"User {0} has attempted to obtain a server config store to be able to retrieve the OMAG server atored configurations but an error occurred.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMDI4OA==", "bodyText": "Is it the store or is it the connector that can not be obtained?", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531230288", "createdAt": "2020-11-26T21:34:02Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/ffdc/OMAGAdminErrorCode.java", "diffHunk": "@@ -299,6 +299,15 @@\n                           \"The view service has not been passed valid configuration.\",\n                           \"Check whether the view service expects SolutionViewServiceConfiguration or IntegrationViewServiceConfiguration, correct the configuration and restart the server.\"),\n \n+    RETRIEVE_ALL_CONFIGS_NOT_SUPPORTED(400, \"OMAG-ADMIN-400-043\",\n+                        \"A retrieve all configurations has been attempted, but operation is not supported.\",\n+                        \"The retrieve all server configurations operation is rejected.\",\n+                        \"Check whether OMAG Server configuration connector supports retrieve all configurations.\"),\n+    UNABLE_TO_OBTAIN_SERVER_CONFIG_STORE(400, \"OMAG-ADMIN-400-044\",\n+                                         \"User {0} has attempted to obtain a server config store to be able to retrieve the OMAG server atored configurations but an error occurred.\",\n+                                         \"The retrieve all server configurations operation is rejected, as the OMAG Server Configuration store could not be obtained.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMDYwNw==", "bodyText": "All other methods in this module use Lists rather than Sets.   Lists have an advantage in that they have an order and that creates a consistency in operation.", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531230607", "createdAt": "2020-11-26T21:35:14Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/rest/OMAGServerConfigsResponse.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.rest;\n+\n+import com.fasterxml.jackson.annotation.JsonAutoDetect;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import org.odpi.openmetadata.adminservices.configuration.properties.OMAGServerConfig;\n+\n+import java.util.Arrays;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import static com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.NONE;\n+import static com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.PUBLIC_ONLY;\n+\n+\n+/**\n+ * OMAGServerConfigsResponse is the response structure used on the OMAG REST API calls that returns a set of\n+ * OMAGServerConfig objects as a response.\n+ */\n+@JsonAutoDetect(getterVisibility=PUBLIC_ONLY, setterVisibility=PUBLIC_ONLY, fieldVisibility=NONE)\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+@JsonIgnoreProperties(ignoreUnknown=true)\n+public class OMAGServerConfigsResponse extends AdminServicesAPIResponse\n+{\n+    private static final long    serialVersionUID = 1L;\n+\n+    private Set<OMAGServerConfig> serverConfigs = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMDgzMA==", "bodyText": "Need to test for empty set and return null.  The current logic is just returning the server configs irrespective of value", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531230830", "createdAt": "2020-11-26T21:36:13Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/rest/OMAGServerConfigsResponse.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.rest;\n+\n+import com.fasterxml.jackson.annotation.JsonAutoDetect;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import org.odpi.openmetadata.adminservices.configuration.properties.OMAGServerConfig;\n+\n+import java.util.Arrays;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import static com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.NONE;\n+import static com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility.PUBLIC_ONLY;\n+\n+\n+/**\n+ * OMAGServerConfigsResponse is the response structure used on the OMAG REST API calls that returns a set of\n+ * OMAGServerConfig objects as a response.\n+ */\n+@JsonAutoDetect(getterVisibility=PUBLIC_ONLY, setterVisibility=PUBLIC_ONLY, fieldVisibility=NONE)\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+@JsonIgnoreProperties(ignoreUnknown=true)\n+public class OMAGServerConfigsResponse extends AdminServicesAPIResponse\n+{\n+    private static final long    serialVersionUID = 1L;\n+\n+    private Set<OMAGServerConfig> serverConfigs = null;\n+\n+\n+    /**\n+     * Default constructor\n+     */\n+    public OMAGServerConfigsResponse()\n+    {\n+    }\n+\n+\n+    /**\n+     * Return the OMAGServerConfig objects.\n+     *\n+     * @return OMAGServerConfig objects\n+     */\n+    public Set<OMAGServerConfig> getOMAGServerConfigs()\n+    {\n+        if (serverConfigs == null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMTA1OQ==", "bodyText": "This name does not match the name of the interface.", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531231059", "createdAt": "2020-11-26T21:37:11Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/store/OMAGServerConfigStoreRetrieveAll.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.store;\n+\n+import org.odpi.openmetadata.adminservices.configuration.properties.OMAGServerConfig;\n+import org.odpi.openmetadata.adminservices.ffdc.exception.OMAGInvalidParameterException;\n+import org.odpi.openmetadata.adminservices.ffdc.exception.OMAGNotAuthorizedException;\n+\n+import java.util.Set;\n+\n+/**\n+ * OMAGServerConfigStoreQueryAll provides a method to retrieve all the stored servers. It is an extension to the OMAGServerConfigStore interface", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMTExOA==", "bodyText": "Formatting", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531231118", "createdAt": "2020-11-26T21:37:31Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminServices.java", "diffHunk": "@@ -3088,6 +3091,36 @@ public OMAGServerConfigResponse getStoredConfiguration(String userId,\n \n         return response;\n     }\n+    /**\n+     * Return the stored configuration documents stored on the platform\n+     *\n+     * @param userId  user that is issuing the request\n+     * @return OMAGServerConfigs properties or\n+     * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n+     * OMAGInvalidParameterException invalid parameter occurred while processing.\n+     */\n+    public OMAGServerConfigsResponse retrieveAllServerConfigs(String userId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMTM4OA==", "bodyText": "Seems that the retrieve all connector should be a different type of connector to the existing configuration store", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531231388", "createdAt": "2020-11-26T21:38:50Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminStoreServices.java", "diffHunk": "@@ -215,6 +242,58 @@ private OMAGServerConfigStore getServerConfigStore(String   serverName,\n                                                     error);\n         }\n     }\n+    /**\n+     * Retrieve the connection to the config files.\n+     *\n+     * @param methodName  method requesting the server details\n+     * @return configuration connector file\n+     * @throws OMAGConfigurationErrorException A connection error occurred while attempting to access the server config store.\n+     */\n+    private OMAGServerConfigStoreRetrieveAll getServerConfigStoreForRetrieveAll(\n+                                                       String   methodName) throws OMAGConfigurationErrorException\n+    {\n+        Connection   connection = this.getConnectionForRetrieveAll();\n+\n+        try\n+        {\n+            ConnectorBroker connectorBroker = new ConnectorBroker();\n+\n+            Connector connector = connectorBroker.getConnector(connection);\n+\n+            OMAGServerConfigStore serverConfigStore = (OMAGServerConfigStore) connector;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMTQyNg==", "bodyText": "Typo", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531231426", "createdAt": "2020-11-26T21:39:02Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminStoreServices.java", "diffHunk": "@@ -215,6 +242,58 @@ private OMAGServerConfigStore getServerConfigStore(String   serverName,\n                                                     error);\n         }\n     }\n+    /**\n+     * Retrieve the connection to the config files.\n+     *\n+     * @param methodName  method requesting the server details\n+     * @return configuration connector file\n+     * @throws OMAGConfigurationErrorException A connection error occurred while attempting to access the server config store.\n+     */\n+    private OMAGServerConfigStoreRetrieveAll getServerConfigStoreForRetrieveAll(\n+                                                       String   methodName) throws OMAGConfigurationErrorException\n+    {\n+        Connection   connection = this.getConnectionForRetrieveAll();\n+\n+        try\n+        {\n+            ConnectorBroker connectorBroker = new ConnectorBroker();\n+\n+            Connector connector = connectorBroker.getConnector(connection);\n+\n+            OMAGServerConfigStore serverConfigStore = (OMAGServerConfigStore) connector;\n+\n+            connector.start();\n+            return getOMAGServerConfigStoreRetrieveAll(serverConfigStore, methodName);\n+        }\n+        catch (Throwable   error)\n+        {\n+            throw new OMAGConfigurationErrorException(OMAGAdminErrorCode.UNABLE_TO_OBTAIN_SERVER_CONFIG_STORE.getMessageDefinition(methodName,\n+                                                                                                            error.getClass().getName(),\n+                                                                                                            error.getMessage()),\n+                                                    this.getClass().getName(),\n+                                                    methodName,\n+                                                    error);\n+        }\n+    }\n+\n+    /**\n+     * Get hte OMAG Server Config store for retrieving all the server configurations associated with this platform", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMTQ1OQ==", "bodyText": "Code formatting", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531231459", "createdAt": "2020-11-26T21:39:15Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminStoreServices.java", "diffHunk": "@@ -215,6 +242,58 @@ private OMAGServerConfigStore getServerConfigStore(String   serverName,\n                                                     error);\n         }\n     }\n+    /**\n+     * Retrieve the connection to the config files.\n+     *\n+     * @param methodName  method requesting the server details\n+     * @return configuration connector file\n+     * @throws OMAGConfigurationErrorException A connection error occurred while attempting to access the server config store.\n+     */\n+    private OMAGServerConfigStoreRetrieveAll getServerConfigStoreForRetrieveAll(\n+                                                       String   methodName) throws OMAGConfigurationErrorException\n+    {\n+        Connection   connection = this.getConnectionForRetrieveAll();\n+\n+        try\n+        {\n+            ConnectorBroker connectorBroker = new ConnectorBroker();\n+\n+            Connector connector = connectorBroker.getConnector(connection);\n+\n+            OMAGServerConfigStore serverConfigStore = (OMAGServerConfigStore) connector;\n+\n+            connector.start();\n+            return getOMAGServerConfigStoreRetrieveAll(serverConfigStore, methodName);\n+        }\n+        catch (Throwable   error)\n+        {\n+            throw new OMAGConfigurationErrorException(OMAGAdminErrorCode.UNABLE_TO_OBTAIN_SERVER_CONFIG_STORE.getMessageDefinition(methodName,\n+                                                                                                            error.getClass().getName(),\n+                                                                                                            error.getMessage()),\n+                                                    this.getClass().getName(),\n+                                                    methodName,\n+                                                    error);\n+        }\n+    }\n+\n+    /**\n+     * Get hte OMAG Server Config store for retrieving all the server configurations associated with this platform\n+     * @param serverConfigStore the server config store- note this may not support this operations\n+     * @param methodName current operation\n+     * @return the store to use for the retrieve all server configurations\n+     * @throws OMAGConfigurationErrorException the store does not support the retrieve all configured servers for this platform operation\n+     */\n+    OMAGServerConfigStoreRetrieveAll getOMAGServerConfigStoreRetrieveAll(OMAGServerConfigStore serverConfigStore, String  methodName) throws OMAGConfigurationErrorException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMTU0Mw==", "bodyText": "Code formatting", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531231543", "createdAt": "2020-11-26T21:39:31Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminStoreServices.java", "diffHunk": "@@ -344,6 +423,22 @@ void saveServerConfig(String            serverName,\n         }\n     }\n \n+    /**\n+     * Retrieve all the saved OMAG Server configurations for this platform.\n+     *\n+     * @param userId calling user\n+     * @param methodName  method requesting the servers details\n+     * @return  a set of OMAG Server configurations\n+     * @throws OMAGConfigurationErrorException the OMAG Server configuration connector defined in configuration does not support retrieve all servers call.\n+     */\n+    Set<OMAGServerConfig> retrieveAllServerConfigs(String   userId,\n+                                              String   methodName) throws OMAGConfigurationErrorException, OMAGInvalidParameterException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMTYxNw==", "bodyText": "Code formatting", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531231617", "createdAt": "2020-11-26T21:39:49Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-server/src/test/java/org/odpi/openmetadata/adminservices/TestOMAGServerAdminStoreServices.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices;\n+\n+import org.odpi.openmetadata.adminservices.configuration.properties.OMAGServerConfig;\n+import org.odpi.openmetadata.adminservices.ffdc.exception.OMAGConfigurationErrorException;\n+import org.odpi.openmetadata.adminservices.store.OMAGServerConfigStore;\n+import org.odpi.openmetadata.adminservices.store.OMAGServerConfigStoreRetrieveAll;\n+import org.testng.annotations.Test;\n+import java.util.Set;\n+import static org.testng.FileAssert.fail;\n+\n+public class TestOMAGServerAdminStoreServices {\n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMTgyMw==", "bodyText": "Better to put the new method in a new Resource file rather than having to change all of the existing methods", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531231823", "createdAt": "2020-11-26T21:40:48Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-spring/src/main/java/org/odpi/openmetadata/adminservices/spring/ConfigResource.java", "diffHunk": "@@ -17,7 +18,7 @@\n  * configuration document is not found, a new one is created.\n  */\n @RestController\n-@RequestMapping(\"/open-metadata/admin-services/users/{userId}/servers/{serverName}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90d70823f6ecb68d7ef2365066f60d7c66e994e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMjIwMA==", "bodyText": "should not have platform in the name as the server configuration documents are not associated with a platform", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531232200", "createdAt": "2020-11-26T21:42:19Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-client/src/main/java/org/odpi/openmetadata/adminservices/client/OMAGServerPlatformConfigurationClient.java", "diffHunk": "@@ -269,7 +269,7 @@ public Connection getPlatformSecurityConnection() throws OMAGNotAuthorizedExcept\n                                                                    OMAGConfigurationErrorException,\n                                                                    OMAGInvalidParameterException {\n         final String methodName  = \"getPlatformServerConfigs\";\n-        final String urlTemplate = \"/open-metadata/admin-services/users/{0}/configurations\";\n+        final String urlTemplate = \"/open-metadata/admin-services/users/{0}/platform/server-configurations\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce1cde2177f2d3c400bb562b60d9933ebfd72ffd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMjMxMQ==", "bodyText": "Not stored in the platform.", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531232311", "createdAt": "2020-11-26T21:42:45Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-spring/src/main/java/org/odpi/openmetadata/adminservices/spring/ConfigResource.java", "diffHunk": "@@ -46,16 +46,20 @@ public OMAGServerConfigResponse getStoredConfiguration(@PathVariable String user\n         return adminAPI.getStoredConfiguration(userId, serverName);\n     }\n     /**\n-     * Return the configuration documents stored on the platform\n+     * Return the server configuration documents stored on the platform", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce1cde2177f2d3c400bb562b60d9933ebfd72ffd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzMjQxMw==", "bodyText": "should be somethin like .../configurations/all", "url": "https://github.com/odpi/egeria/pull/4145#discussion_r531232413", "createdAt": "2020-11-26T21:43:28Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-spring/src/main/java/org/odpi/openmetadata/adminservices/spring/ConfigResource.java", "diffHunk": "@@ -46,16 +46,20 @@ public OMAGServerConfigResponse getStoredConfiguration(@PathVariable String user\n         return adminAPI.getStoredConfiguration(userId, serverName);\n     }\n     /**\n-     * Return the configuration documents stored on the platform\n+     * Return the server configuration documents stored on the platform\n      *\n      * @param userId  user that is issuing the request\n      * @return OMAGServerConfigs properties or\n      * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n      * OMAGInvalidParameterException invalid parameter occurred while processing.\n      */\n-    @GetMapping(path = \"/configurations\")\n+    @GetMapping(path = \"/platform/server-configurations\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce1cde2177f2d3c400bb562b60d9933ebfd72ffd"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cb11e203ba5f42c2e7397afb0c6f916bd7885d7", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/4cb11e203ba5f42c2e7397afb0c6f916bd7885d7", "committedDate": "2020-11-27T16:51:14Z", "message": "#4134 address Mandys review comments\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9cea6552302ffab76ae23ea4825ca0ee24dc8e8", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/f9cea6552302ffab76ae23ea4825ca0ee24dc8e8", "committedDate": "2020-11-27T17:20:09Z", "message": "#4134 fix typo\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a714b4f9c9c7df3dc947291a250534ef2c90567", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/3a714b4f9c9c7df3dc947291a250534ef2c90567", "committedDate": "2020-12-01T15:08:01Z", "message": "Merge branch 'master' into git4134"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3822, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}