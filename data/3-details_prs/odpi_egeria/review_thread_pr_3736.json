{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2ODIyODEw", "number": 3736, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMTowNjo1M1rOEpxp5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNTowNDo0MlrOEp2R2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjQwNjEzOnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/user-interfaces/presentation-server/nodejs/src/client/components/TypeExplorer/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMTowNjo1M1rOHbpuWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMzozMDozN1rOHbttBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1NzIwOQ==", "bodyText": "Presentation Server and View Server please refer to their readme information. I suggest adding links", "url": "https://github.com/odpi/egeria/pull/3736#discussion_r498757209", "createdAt": "2020-10-02T11:06:53Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/nodejs/src/client/components/TypeExplorer/README.md", "diffHunk": "@@ -0,0 +1,76 @@\n+## Type Explorer User Interface\n+\n+The Type Explorer (Tex) interface provides a way to explore the Egeria type system. It can be used to retrieve the types supported by a chosen server. The type information is then displayed both textually (on the left side) and diagrammatically (on the right side) with a choice of diagrams. One of the diagrams shows the entity inheritance tree and the other diagram shows the types of relationships that an entity type supports.\n+\n+![Tex Interface](image1)\n+\n+### Deployment\n+The Tex interface runs under the Presentation Server component of Egeria, and it uses the Type Explorer (Tex) View Service in order to retrieve the information you ask for. For details of the Presentation Server and View Server please refer to their readme information.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed1c7e6e1eca9f5935920a7694d6c7596ebb46a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgyMjQwNA==", "bodyText": "Good point thanks - I had meant to do this. Should be fixed in next update to PR.", "url": "https://github.com/odpi/egeria/pull/3736#discussion_r498822404", "createdAt": "2020-10-02T13:30:37Z", "author": {"login": "grahamwallis"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/nodejs/src/client/components/TypeExplorer/README.md", "diffHunk": "@@ -0,0 +1,76 @@\n+## Type Explorer User Interface\n+\n+The Type Explorer (Tex) interface provides a way to explore the Egeria type system. It can be used to retrieve the types supported by a chosen server. The type information is then displayed both textually (on the left side) and diagrammatically (on the right side) with a choice of diagrams. One of the diagrams shows the entity inheritance tree and the other diagram shows the types of relationships that an entity type supports.\n+\n+![Tex Interface](image1)\n+\n+### Deployment\n+The Tex interface runs under the Presentation Server component of Egeria, and it uses the Type Explorer (Tex) View Service in order to retrieve the information you ask for. For details of the Presentation Server and View Server please refer to their readme information.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1NzIwOQ=="}, "originalCommit": {"oid": "aed1c7e6e1eca9f5935920a7694d6c7596ebb46a"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjUwMDc4OnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/user-interfaces/presentation-server/nodejs/src/client/components/TypeExplorer/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMTo0NjoxMFrOHbqoUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMzo0NTozM1rOHbuPJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc3MjA1MQ==", "bodyText": "I suggest for the first sentence \"The Tex View Service is an Integration View Service and is configured using admin API command (link); the configuraiton is supplied in IntegrationViewServiceConfig (link) \".\nSecond sentence  I am not sure what status is of the View Service . I suggest detailing what that means for the configuration.\nThird sentence - missing to before access.\n6th sentence I did not quite understand \"When a user selects a server name from the selector lists, the interface sends the resource name to the Tex\". Is the server name a resource name? I am not sure I understand what a resourse is here.", "url": "https://github.com/odpi/egeria/pull/3736#discussion_r498772051", "createdAt": "2020-10-02T11:46:10Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/nodejs/src/client/components/TypeExplorer/README.md", "diffHunk": "@@ -0,0 +1,76 @@\n+## Type Explorer User Interface\n+\n+The Type Explorer (Tex) interface provides a way to explore the Egeria type system. It can be used to retrieve the types supported by a chosen server. The type information is then displayed both textually (on the left side) and diagrammatically (on the right side) with a choice of diagrams. One of the diagrams shows the entity inheritance tree and the other diagram shows the types of relationships that an entity type supports.\n+\n+![Tex Interface](image1)\n+\n+### Deployment\n+The Tex interface runs under the Presentation Server component of Egeria, and it uses the Type Explorer (Tex) View Service in order to retrieve the information you ask for. For details of the Presentation Server and View Server please refer to their readme information.\n+\n+\n+### Configuration\n+The Tex View Service is an Integration View Service and is configured using `IntegrationViewServiceConfig`. This contains the name and status of the View Service and also contains a list of the resources that the Tex interface is permitted to access. These resources are the platforms and servers that the user will be able access. The configured servers will appear in the selectors in the Tex interface. All requests to the Tex View Service REST API are based on these configured named resources. When a user selects a server name from the selector lists, the interface sends the resource name to the Tex View Service, which resolves the server name to a resource endpoint to identify the URL needed to send a request to the server. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed1c7e6e1eca9f5935920a7694d6c7596ebb46a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgzMTE0Mg==", "bodyText": "OK - thanks again. Have modified the first part as per your recommendation.\nThe part about status is referring to \"viewServiceOperationalStatus\":\"ENABLED\",  in the config.\nHave made corrections and expanded for all the points you raised here. Hopefully the result is OK.", "url": "https://github.com/odpi/egeria/pull/3736#discussion_r498831142", "createdAt": "2020-10-02T13:45:33Z", "author": {"login": "grahamwallis"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/nodejs/src/client/components/TypeExplorer/README.md", "diffHunk": "@@ -0,0 +1,76 @@\n+## Type Explorer User Interface\n+\n+The Type Explorer (Tex) interface provides a way to explore the Egeria type system. It can be used to retrieve the types supported by a chosen server. The type information is then displayed both textually (on the left side) and diagrammatically (on the right side) with a choice of diagrams. One of the diagrams shows the entity inheritance tree and the other diagram shows the types of relationships that an entity type supports.\n+\n+![Tex Interface](image1)\n+\n+### Deployment\n+The Tex interface runs under the Presentation Server component of Egeria, and it uses the Type Explorer (Tex) View Service in order to retrieve the information you ask for. For details of the Presentation Server and View Server please refer to their readme information.\n+\n+\n+### Configuration\n+The Tex View Service is an Integration View Service and is configured using `IntegrationViewServiceConfig`. This contains the name and status of the View Service and also contains a list of the resources that the Tex interface is permitted to access. These resources are the platforms and servers that the user will be able access. The configured servers will appear in the selectors in the Tex interface. All requests to the Tex View Service REST API are based on these configured named resources. When a user selects a server name from the selector lists, the interface sends the resource name to the Tex View Service, which resolves the server name to a resource endpoint to identify the URL needed to send a request to the server. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc3MjA1MQ=="}, "originalCommit": {"oid": "aed1c7e6e1eca9f5935920a7694d6c7596ebb46a"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjUwNTU1OnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/user-interfaces/presentation-server/nodejs/src/client/components/TypeExplorer/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMTo0ODowMlrOHbqrMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoxMjo1OVrOHbvPOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc3Mjc4NA==", "bodyText": "In this example where are the resourse names?", "url": "https://github.com/odpi/egeria/pull/3736#discussion_r498772784", "createdAt": "2020-10-02T11:48:02Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/nodejs/src/client/components/TypeExplorer/README.md", "diffHunk": "@@ -0,0 +1,76 @@\n+## Type Explorer User Interface\n+\n+The Type Explorer (Tex) interface provides a way to explore the Egeria type system. It can be used to retrieve the types supported by a chosen server. The type information is then displayed both textually (on the left side) and diagrammatically (on the right side) with a choice of diagrams. One of the diagrams shows the entity inheritance tree and the other diagram shows the types of relationships that an entity type supports.\n+\n+![Tex Interface](image1)\n+\n+### Deployment\n+The Tex interface runs under the Presentation Server component of Egeria, and it uses the Type Explorer (Tex) View Service in order to retrieve the information you ask for. For details of the Presentation Server and View Server please refer to their readme information.\n+\n+\n+### Configuration\n+The Tex View Service is an Integration View Service and is configured using `IntegrationViewServiceConfig`. This contains the name and status of the View Service and also contains a list of the resources that the Tex interface is permitted to access. These resources are the platforms and servers that the user will be able access. The configured servers will appear in the selectors in the Tex interface. All requests to the Tex View Service REST API are based on these configured named resources. When a user selects a server name from the selector lists, the interface sends the resource name to the Tex View Service, which resolves the server name to a resource endpoint to identify the URL needed to send a request to the server. \n+\n+In the Tex View Service configuration, the view service administrator configures a list of Resource Endpoints to represent platforms and servers. Every `ResourceEndpointConfig` needs a `resourceCategory`, which is set to either `\"Platform\"` or `\"Server\"`. A platform `ResourceEndpointConfig` must have a unique `platformName` and a `platformRootURL` and can have an optional `description` property. A server `ResourceEndpointConfig` for a server must have a `serverName` and the `platformName` of a configured platform resource endpoint. A server can have an optional `description` property. In an Egeria deployment, a server may be deployed to multiple platforms - this is typically used for clustering - and a server ResourceEndpointConfig contains a property called serverInstanceName which must be unique and is used to name a specific instance of a server. For example, you could configure a pair of server resource endpoints called \"Server1@PlatformA\" and \"Server1@PlatformB\". The serverInstanceName is used to display the resource in the user interface selector lists. \n+\n+An example configuration with two platforms and two servers is shown below:\n+\n+```\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed1c7e6e1eca9f5935920a7694d6c7596ebb46a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg0NzU0NA==", "bodyText": "They are the serverInstanceName and platformName, depending on the category.\nI think I have disambiguated this with the changes made in response to your previous comment - I refer explicitly to (back-quoted) \"platformName\" or \"serverName\" now, rather than \"resource name\".\nHave thoroughly beefed up the description just before the example config.", "url": "https://github.com/odpi/egeria/pull/3736#discussion_r498847544", "createdAt": "2020-10-02T14:12:59Z", "author": {"login": "grahamwallis"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/nodejs/src/client/components/TypeExplorer/README.md", "diffHunk": "@@ -0,0 +1,76 @@\n+## Type Explorer User Interface\n+\n+The Type Explorer (Tex) interface provides a way to explore the Egeria type system. It can be used to retrieve the types supported by a chosen server. The type information is then displayed both textually (on the left side) and diagrammatically (on the right side) with a choice of diagrams. One of the diagrams shows the entity inheritance tree and the other diagram shows the types of relationships that an entity type supports.\n+\n+![Tex Interface](image1)\n+\n+### Deployment\n+The Tex interface runs under the Presentation Server component of Egeria, and it uses the Type Explorer (Tex) View Service in order to retrieve the information you ask for. For details of the Presentation Server and View Server please refer to their readme information.\n+\n+\n+### Configuration\n+The Tex View Service is an Integration View Service and is configured using `IntegrationViewServiceConfig`. This contains the name and status of the View Service and also contains a list of the resources that the Tex interface is permitted to access. These resources are the platforms and servers that the user will be able access. The configured servers will appear in the selectors in the Tex interface. All requests to the Tex View Service REST API are based on these configured named resources. When a user selects a server name from the selector lists, the interface sends the resource name to the Tex View Service, which resolves the server name to a resource endpoint to identify the URL needed to send a request to the server. \n+\n+In the Tex View Service configuration, the view service administrator configures a list of Resource Endpoints to represent platforms and servers. Every `ResourceEndpointConfig` needs a `resourceCategory`, which is set to either `\"Platform\"` or `\"Server\"`. A platform `ResourceEndpointConfig` must have a unique `platformName` and a `platformRootURL` and can have an optional `description` property. A server `ResourceEndpointConfig` for a server must have a `serverName` and the `platformName` of a configured platform resource endpoint. A server can have an optional `description` property. In an Egeria deployment, a server may be deployed to multiple platforms - this is typically used for clustering - and a server ResourceEndpointConfig contains a property called serverInstanceName which must be unique and is used to name a specific instance of a server. For example, you could configure a pair of server resource endpoints called \"Server1@PlatformA\" and \"Server1@PlatformB\". The serverInstanceName is used to display the resource in the user interface selector lists. \n+\n+An example configuration with two platforms and two servers is shown below:\n+\n+```\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc3Mjc4NA=="}, "originalCommit": {"oid": "aed1c7e6e1eca9f5935920a7694d6c7596ebb46a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjUxMzAzOnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/view-services/tex-view/tex-view-server/src/main/java/org/odpi/openmetadata/viewservices/tex/server/TexViewRESTServices.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMTo1MTowM1rOHbqv5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoxMjo1NFrOHbvPEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc3Mzk5MA==", "bodyText": "what is the platform origin.", "url": "https://github.com/odpi/egeria/pull/3736#discussion_r498773990", "createdAt": "2020-10-02T11:51:03Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/view-services/tex-view/tex-view-server/src/main/java/org/odpi/openmetadata/viewservices/tex/server/TexViewRESTServices.java", "diffHunk": "@@ -42,6 +47,49 @@ public TexViewRESTServices() {\n     }\n \n \n+    /**\n+     * Retrieve platform origin", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed1c7e6e1eca9f5935920a7694d6c7596ebb46a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg0NzUwNQ==", "bodyText": "It is an identifier that is returned by the server-platform-origin REST API in the platform-services API.\nTypically it looks a lot like this...\nODPi Egeria OMAG Server Platform (version 2.4-SNAPSHOT)", "url": "https://github.com/odpi/egeria/pull/3736#discussion_r498847505", "createdAt": "2020-10-02T14:12:54Z", "author": {"login": "grahamwallis"}, "path": "open-metadata-implementation/view-services/tex-view/tex-view-server/src/main/java/org/odpi/openmetadata/viewservices/tex/server/TexViewRESTServices.java", "diffHunk": "@@ -42,6 +47,49 @@ public TexViewRESTServices() {\n     }\n \n \n+    /**\n+     * Retrieve platform origin", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc3Mzk5MA=="}, "originalCommit": {"oid": "aed1c7e6e1eca9f5935920a7694d6c7596ebb46a"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjUxNzkxOnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/view-services/tex-view/tex-view-server/src/main/java/org/odpi/openmetadata/viewservices/tex/admin/TexViewAdmin.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMTo1Mjo0NVrOHbqy0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoxMjoyOFrOHbvOAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc3NDczNg==", "bodyText": "should this be Type explorer?", "url": "https://github.com/odpi/egeria/pull/3736#discussion_r498774736", "createdAt": "2020-10-02T11:52:45Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/view-services/tex-view/tex-view-server/src/main/java/org/odpi/openmetadata/viewservices/tex/admin/TexViewAdmin.java", "diffHunk": "@@ -103,7 +141,7 @@ public void initialize(String            serverName,\n                                   error);\n \n             super.throwUnexpectedInitializationException(actionDescription,\n-                                                         ViewServiceDescription.TYPE_EXPLORER.getViewServiceFullName(),\n+                                                         ViewServiceDescription.DINO.getViewServiceFullName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed1c7e6e1eca9f5935920a7694d6c7596ebb46a"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg0Njg4MA==", "bodyText": "Yup - good spot - thanks. I had even search for all occurrences of 'dino' but had match case enabled - d'oh!", "url": "https://github.com/odpi/egeria/pull/3736#discussion_r498846880", "createdAt": "2020-10-02T14:11:49Z", "author": {"login": "grahamwallis"}, "path": "open-metadata-implementation/view-services/tex-view/tex-view-server/src/main/java/org/odpi/openmetadata/viewservices/tex/admin/TexViewAdmin.java", "diffHunk": "@@ -103,7 +141,7 @@ public void initialize(String            serverName,\n                                   error);\n \n             super.throwUnexpectedInitializationException(actionDescription,\n-                                                         ViewServiceDescription.TYPE_EXPLORER.getViewServiceFullName(),\n+                                                         ViewServiceDescription.DINO.getViewServiceFullName(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc3NDczNg=="}, "originalCommit": {"oid": "aed1c7e6e1eca9f5935920a7694d6c7596ebb46a"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg0NzIzNA==", "bodyText": "Found another (mixed case) example the same way - thanks again!", "url": "https://github.com/odpi/egeria/pull/3736#discussion_r498847234", "createdAt": "2020-10-02T14:12:28Z", "author": {"login": "grahamwallis"}, "path": "open-metadata-implementation/view-services/tex-view/tex-view-server/src/main/java/org/odpi/openmetadata/viewservices/tex/admin/TexViewAdmin.java", "diffHunk": "@@ -103,7 +141,7 @@ public void initialize(String            serverName,\n                                   error);\n \n             super.throwUnexpectedInitializationException(actionDescription,\n-                                                         ViewServiceDescription.TYPE_EXPLORER.getViewServiceFullName(),\n+                                                         ViewServiceDescription.DINO.getViewServiceFullName(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc3NDczNg=="}, "originalCommit": {"oid": "aed1c7e6e1eca9f5935920a7694d6c7596ebb46a"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzE2Mzc2OnYy", "diffSide": "LEFT", "path": "open-metadata-implementation/view-services/tex-view/tex-view-api/build.gradle", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNTowNDo0MlrOHbxKOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNToxNzo0NVrOHbxoow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg3OTAzMg==", "bodyText": "I notice the gradle file is deleted, yet the pom remains -- what is the intent?", "url": "https://github.com/odpi/egeria/pull/3736#discussion_r498879032", "createdAt": "2020-10-02T15:04:42Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/view-services/tex-view/tex-view-api/build.gradle", "diffHunk": "@@ -1,17 +0,0 @@\n-/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "443f86c1c760d901b983e659b70a173542a33b25"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg4MTMyOA==", "bodyText": "Apologies - I hadn'tt realised that delete had snuck its way into the PR. I deleted it as an experiment when I was having major trouble with IJ not being able to resolve various classes. I had not meant to delete it in the PR!", "url": "https://github.com/odpi/egeria/pull/3736#discussion_r498881328", "createdAt": "2020-10-02T15:08:26Z", "author": {"login": "grahamwallis"}, "path": "open-metadata-implementation/view-services/tex-view/tex-view-api/build.gradle", "diffHunk": "@@ -1,17 +0,0 @@\n-/*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg3OTAzMg=="}, "originalCommit": {"oid": "443f86c1c760d901b983e659b70a173542a33b25"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg4NjY4OA==", "bodyText": "I was adding a dependency and IJ wasn't resolving classes. I recalled our conversation about needing to manually tweak the gradle dependencies, so tried, failed and ended up removing the file :-)", "url": "https://github.com/odpi/egeria/pull/3736#discussion_r498886688", "createdAt": "2020-10-02T15:17:31Z", "author": {"login": "grahamwallis"}, "path": "open-metadata-implementation/view-services/tex-view/tex-view-api/build.gradle", "diffHunk": "@@ -1,17 +0,0 @@\n-/*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg3OTAzMg=="}, "originalCommit": {"oid": "443f86c1c760d901b983e659b70a173542a33b25"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg4NjgxOQ==", "bodyText": "Have reinstated it in the latest push...", "url": "https://github.com/odpi/egeria/pull/3736#discussion_r498886819", "createdAt": "2020-10-02T15:17:45Z", "author": {"login": "grahamwallis"}, "path": "open-metadata-implementation/view-services/tex-view/tex-view-api/build.gradle", "diffHunk": "@@ -1,17 +0,0 @@\n-/*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg3OTAzMg=="}, "originalCommit": {"oid": "443f86c1c760d901b983e659b70a173542a33b25"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2567, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}