{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MjM3OTkz", "number": 3893, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwNzowMjoyMFrOEuVFSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMzowNjoxM1rOEufkkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MDE1MzcwOnYy", "diffSide": "RIGHT", "path": "open-metadata-resources/open-metadata-deployment/docker/egeria-uistatic/pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwNzowMjoyMFrOHiqJyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwNzozOTo0OVrOHirsrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjEwNDI2Nw==", "bodyText": "@planetf1 why is maven needed for this?", "url": "https://github.com/odpi/egeria/pull/3893#discussion_r506104267", "createdAt": "2020-10-16T07:02:20Z", "author": {"login": "sarbull"}, "path": "open-metadata-resources/open-metadata-deployment/docker/egeria-uistatic/pom.xml", "diffHunk": "@@ -0,0 +1,146 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!-- SPDX-License-Identifier: Apache-2.0 -->\n+<!-- Copyright Contributors to the ODPi Egeria project. -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <parent>\n+        <artifactId>open-metadata-docker</artifactId>\n+        <groupId>org.odpi.egeria</groupId>\n+        <version>2.4-SNAPSHOT</version>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <scm>\n+        <connection>scm:git:git://github.com/odpi/egeria.git</connection>\n+        <developerConnection>scm:git:ssh://github.com/odpi/egeria.git</developerConnection>\n+        <url>http://github.com/odpi/egeria/tree/master</url>\n+    </scm>\n+\n+    <name>Docker image - Configuration</name>\n+    <description>\n+        Samples, Helm charts to configure Egeria and associated components such as docker image build scripts\n+    </description>\n+\n+    <artifactId>open-metadata-docker-uistatic</artifactId>\n+\n+    <packaging>pom</packaging>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>pl.project13.maven</groupId>\n+                <artifactId>git-commit-id-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>get git version info</id>\n+                        <goals>\n+                            <goal>revision</goal>\n+                        </goals>\n+                        <phase>initialize</phase>\n+                    </execution>\n+                </executions>\n+                <configuration>\n+                    <dotGitDirectory>${maven.multiModuleProjectDirectory}/.git</dotGitDirectory>\n+                    <prefix>git</prefix>\n+                    <dateFormatTimeZone>UTC</dateFormatTimeZone>\n+                    <skipPoms>false</skipPoms>\n+                </configuration>\n+            </plugin>\n+\n+            <!-- Setup the docker build.\n+                 Note - bound to 'install' phase as deploy causes push of maven artifacts\n+            -->\n+            <plugin>\n+                <groupId>com.spotify</groupId>\n+                <artifactId>dockerfile-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>build-and-tag-latest</id>\n+                        <phase>install</phase>\n+                        <goals>\n+                            <goal>build</goal>\n+                        </goals>\n+                        <configuration>\n+                            <tag>${project.version}</tag>\n+                        </configuration>\n+                    </execution>\n+                    <execution>\n+                        <id>tag-version</id>\n+                        <phase>install</phase>\n+                        <goals>\n+                            <goal>tag</goal>\n+                        </goals>\n+                        <configuration>\n+                            <tag>${project.version}</tag>\n+                        </configuration>\n+                    </execution>\n+\n+                    <execution>\n+                        <id>push-version</id>\n+                        <phase>install</phase>\n+                        <goals>\n+                            <goal>push</goal>\n+                        </goals>\n+                        <configuration>\n+                            <tag>${project.version}</tag>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+                <configuration>\n+                    <repository>${docker.registry}/${docker.repo}/egeria-uistatic</repository>\n+                    <buildArgs>\n+                        <VCS_REF>${git.commit.id.describe}</VCS_REF>\n+                        <VCS_DATE>${git.commit.time}</VCS_DATE>\n+                        <BUILD_TIME>${git.build.time}</BUILD_TIME>\n+                        <VCS_ORIGIN>${git.remote.origin.url}</VCS_ORIGIN>\n+                    </buildArgs>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <profiles>\n+        <profile>\n+            <id>tag-latest</id>\n+            <activation>\n+                <property>\n+                    <name>docker.taglatest</name>\n+                </property>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>com.spotify</groupId>\n+                        <artifactId>dockerfile-maven-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <id>tag-latest</id>\n+                                <phase>install</phase>\n+                                <goals>\n+                                    <goal>tag</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <tag>latest</tag>\n+                                </configuration>\n+                            </execution>\n+                            <execution>\n+                                <id>push-latest</id>\n+                                <phase>install</phase>\n+                                <goals>\n+                                    <goal>push</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <tag>latest</tag>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+    </profiles>\n+\n+</project>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0a4d80c30001e5c36f10f05a0d355166c60a37d"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjEyNjgzMg==", "bodyText": "Only because that is how we currently drive all our docker builds, and we already have the build pipelines setup. In some of the images we also have to retrieve files from other maven artifacts in the build, which the maven resources plugin manages. For example the main egeria image needs the assembly we create which aggregates content from many of our modules together for deployment.\nThere is no intrinsic need to use maven to build docker, and indeed it adds extra complexity. As we move images OUT of the main repo (atlas, ranger, as well as this ui) I don't see a need to use maven, though we may keep it for the base.\nI wanted to get something in and working quickly ... so to to stabilize master. Incremental changes, improving/fixing gradually. Then work on improvements. One of those is that I think the build of the image should be done from sources within the egeria-ui project -- and we can have a simple build pipeline potentially that just uses the Dockerfile directly. That way we can easily trigger off changes and keep the image updated.", "url": "https://github.com/odpi/egeria/pull/3893#discussion_r506126832", "createdAt": "2020-10-16T07:35:13Z", "author": {"login": "planetf1"}, "path": "open-metadata-resources/open-metadata-deployment/docker/egeria-uistatic/pom.xml", "diffHunk": "@@ -0,0 +1,146 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!-- SPDX-License-Identifier: Apache-2.0 -->\n+<!-- Copyright Contributors to the ODPi Egeria project. -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <parent>\n+        <artifactId>open-metadata-docker</artifactId>\n+        <groupId>org.odpi.egeria</groupId>\n+        <version>2.4-SNAPSHOT</version>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <scm>\n+        <connection>scm:git:git://github.com/odpi/egeria.git</connection>\n+        <developerConnection>scm:git:ssh://github.com/odpi/egeria.git</developerConnection>\n+        <url>http://github.com/odpi/egeria/tree/master</url>\n+    </scm>\n+\n+    <name>Docker image - Configuration</name>\n+    <description>\n+        Samples, Helm charts to configure Egeria and associated components such as docker image build scripts\n+    </description>\n+\n+    <artifactId>open-metadata-docker-uistatic</artifactId>\n+\n+    <packaging>pom</packaging>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>pl.project13.maven</groupId>\n+                <artifactId>git-commit-id-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>get git version info</id>\n+                        <goals>\n+                            <goal>revision</goal>\n+                        </goals>\n+                        <phase>initialize</phase>\n+                    </execution>\n+                </executions>\n+                <configuration>\n+                    <dotGitDirectory>${maven.multiModuleProjectDirectory}/.git</dotGitDirectory>\n+                    <prefix>git</prefix>\n+                    <dateFormatTimeZone>UTC</dateFormatTimeZone>\n+                    <skipPoms>false</skipPoms>\n+                </configuration>\n+            </plugin>\n+\n+            <!-- Setup the docker build.\n+                 Note - bound to 'install' phase as deploy causes push of maven artifacts\n+            -->\n+            <plugin>\n+                <groupId>com.spotify</groupId>\n+                <artifactId>dockerfile-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>build-and-tag-latest</id>\n+                        <phase>install</phase>\n+                        <goals>\n+                            <goal>build</goal>\n+                        </goals>\n+                        <configuration>\n+                            <tag>${project.version}</tag>\n+                        </configuration>\n+                    </execution>\n+                    <execution>\n+                        <id>tag-version</id>\n+                        <phase>install</phase>\n+                        <goals>\n+                            <goal>tag</goal>\n+                        </goals>\n+                        <configuration>\n+                            <tag>${project.version}</tag>\n+                        </configuration>\n+                    </execution>\n+\n+                    <execution>\n+                        <id>push-version</id>\n+                        <phase>install</phase>\n+                        <goals>\n+                            <goal>push</goal>\n+                        </goals>\n+                        <configuration>\n+                            <tag>${project.version}</tag>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+                <configuration>\n+                    <repository>${docker.registry}/${docker.repo}/egeria-uistatic</repository>\n+                    <buildArgs>\n+                        <VCS_REF>${git.commit.id.describe}</VCS_REF>\n+                        <VCS_DATE>${git.commit.time}</VCS_DATE>\n+                        <BUILD_TIME>${git.build.time}</BUILD_TIME>\n+                        <VCS_ORIGIN>${git.remote.origin.url}</VCS_ORIGIN>\n+                    </buildArgs>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <profiles>\n+        <profile>\n+            <id>tag-latest</id>\n+            <activation>\n+                <property>\n+                    <name>docker.taglatest</name>\n+                </property>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>com.spotify</groupId>\n+                        <artifactId>dockerfile-maven-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <id>tag-latest</id>\n+                                <phase>install</phase>\n+                                <goals>\n+                                    <goal>tag</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <tag>latest</tag>\n+                                </configuration>\n+                            </execution>\n+                            <execution>\n+                                <id>push-latest</id>\n+                                <phase>install</phase>\n+                                <goals>\n+                                    <goal>push</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <tag>latest</tag>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+    </profiles>\n+\n+</project>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjEwNDI2Nw=="}, "originalCommit": {"oid": "b0a4d80c30001e5c36f10f05a0d355166c60a37d"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjEyOTU4MQ==", "bodyText": "i see, i have no problem with that, agree. i was imagining that the Dockerfile would be in the odpi/egeria-ui repository, but for the quickest way of stabilizing the master looks awesome so far, great work!", "url": "https://github.com/odpi/egeria/pull/3893#discussion_r506129581", "createdAt": "2020-10-16T07:39:49Z", "author": {"login": "sarbull"}, "path": "open-metadata-resources/open-metadata-deployment/docker/egeria-uistatic/pom.xml", "diffHunk": "@@ -0,0 +1,146 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!-- SPDX-License-Identifier: Apache-2.0 -->\n+<!-- Copyright Contributors to the ODPi Egeria project. -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <parent>\n+        <artifactId>open-metadata-docker</artifactId>\n+        <groupId>org.odpi.egeria</groupId>\n+        <version>2.4-SNAPSHOT</version>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <scm>\n+        <connection>scm:git:git://github.com/odpi/egeria.git</connection>\n+        <developerConnection>scm:git:ssh://github.com/odpi/egeria.git</developerConnection>\n+        <url>http://github.com/odpi/egeria/tree/master</url>\n+    </scm>\n+\n+    <name>Docker image - Configuration</name>\n+    <description>\n+        Samples, Helm charts to configure Egeria and associated components such as docker image build scripts\n+    </description>\n+\n+    <artifactId>open-metadata-docker-uistatic</artifactId>\n+\n+    <packaging>pom</packaging>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>pl.project13.maven</groupId>\n+                <artifactId>git-commit-id-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>get git version info</id>\n+                        <goals>\n+                            <goal>revision</goal>\n+                        </goals>\n+                        <phase>initialize</phase>\n+                    </execution>\n+                </executions>\n+                <configuration>\n+                    <dotGitDirectory>${maven.multiModuleProjectDirectory}/.git</dotGitDirectory>\n+                    <prefix>git</prefix>\n+                    <dateFormatTimeZone>UTC</dateFormatTimeZone>\n+                    <skipPoms>false</skipPoms>\n+                </configuration>\n+            </plugin>\n+\n+            <!-- Setup the docker build.\n+                 Note - bound to 'install' phase as deploy causes push of maven artifacts\n+            -->\n+            <plugin>\n+                <groupId>com.spotify</groupId>\n+                <artifactId>dockerfile-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>build-and-tag-latest</id>\n+                        <phase>install</phase>\n+                        <goals>\n+                            <goal>build</goal>\n+                        </goals>\n+                        <configuration>\n+                            <tag>${project.version}</tag>\n+                        </configuration>\n+                    </execution>\n+                    <execution>\n+                        <id>tag-version</id>\n+                        <phase>install</phase>\n+                        <goals>\n+                            <goal>tag</goal>\n+                        </goals>\n+                        <configuration>\n+                            <tag>${project.version}</tag>\n+                        </configuration>\n+                    </execution>\n+\n+                    <execution>\n+                        <id>push-version</id>\n+                        <phase>install</phase>\n+                        <goals>\n+                            <goal>push</goal>\n+                        </goals>\n+                        <configuration>\n+                            <tag>${project.version}</tag>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+                <configuration>\n+                    <repository>${docker.registry}/${docker.repo}/egeria-uistatic</repository>\n+                    <buildArgs>\n+                        <VCS_REF>${git.commit.id.describe}</VCS_REF>\n+                        <VCS_DATE>${git.commit.time}</VCS_DATE>\n+                        <BUILD_TIME>${git.build.time}</BUILD_TIME>\n+                        <VCS_ORIGIN>${git.remote.origin.url}</VCS_ORIGIN>\n+                    </buildArgs>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <profiles>\n+        <profile>\n+            <id>tag-latest</id>\n+            <activation>\n+                <property>\n+                    <name>docker.taglatest</name>\n+                </property>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>com.spotify</groupId>\n+                        <artifactId>dockerfile-maven-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <id>tag-latest</id>\n+                                <phase>install</phase>\n+                                <goals>\n+                                    <goal>tag</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <tag>latest</tag>\n+                                </configuration>\n+                            </execution>\n+                            <execution>\n+                                <id>push-latest</id>\n+                                <phase>install</phase>\n+                                <goals>\n+                                    <goal>push</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <tag>latest</tag>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+    </profiles>\n+\n+</project>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjEwNDI2Nw=="}, "originalCommit": {"oid": "b0a4d80c30001e5c36f10f05a0d355166c60a37d"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MTczMzMzOnYy", "diffSide": "RIGHT", "path": "open-metadata-resources/open-metadata-deployment/compose/tutorials/.env", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMjozNzowMFrOHi6VeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMjozNzowMFrOHi6VeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM2OTQwMA==", "bodyText": "is this ok?", "url": "https://github.com/odpi/egeria/pull/3893#discussion_r506369400", "createdAt": "2020-10-16T12:37:00Z", "author": {"login": "sarbull"}, "path": "open-metadata-resources/open-metadata-deployment/compose/tutorials/.env", "diffHunk": "@@ -4,7 +4,7 @@\n # Version of egeria to use\n egeria_version=2.4-SNAPSHOT\n # Override if you wish to use images other than from docker hub odpi/egeria etc\n-egeria_repo=odpi\n+egeria_repo=planetf1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2809c14a15b9fc4d4be7fad1b1e07f8595819fa"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MTg3MjE2OnYy", "diffSide": "RIGHT", "path": "open-metadata-resources/open-metadata-deployment/docker/egeria-uistatic/dist/nginx.conf", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMzowNjoxM1rOHi7x3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMzoyMjoxM1rOHi89JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM5MzA1NA==", "bodyText": "should have the HTTPS port also", "url": "https://github.com/odpi/egeria/pull/3893#discussion_r506393054", "createdAt": "2020-10-16T13:06:13Z", "author": {"login": "sarbull"}, "path": "open-metadata-resources/open-metadata-deployment/docker/egeria-uistatic/dist/nginx.conf", "diffHunk": "@@ -0,0 +1,15 @@\n+# SPDX-License-Identifier: Apache-2.0\n+# Copyright Contributors to the Egeria project\n+\n+server {\n+    listen 80;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b216e9c75545959364dc263c98f612c8c7631d21"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQxMjMyNA==", "bodyText": "Agreed should look at https. I'll get this in & then let's catch changes in another iteration through? Means anyone using the charts etc in master can be working again whilst we refine. I think that nginx config needs more refinement too", "url": "https://github.com/odpi/egeria/pull/3893#discussion_r506412324", "createdAt": "2020-10-16T13:22:13Z", "author": {"login": "planetf1"}, "path": "open-metadata-resources/open-metadata-deployment/docker/egeria-uistatic/dist/nginx.conf", "diffHunk": "@@ -0,0 +1,15 @@\n+# SPDX-License-Identifier: Apache-2.0\n+# Copyright Contributors to the Egeria project\n+\n+server {\n+    listen 80;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM5MzA1NA=="}, "originalCommit": {"oid": "b216e9c75545959364dc263c98f612c8c7631d21"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2490, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}