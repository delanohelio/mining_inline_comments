{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NzgzMzAw", "number": 3733, "title": "RELEASE 2.3 - update presentation server readme", "bodyText": "This builds on the commits in issue #3682, PR #3683 to update the 2.3 release which needs to ship imminently.\nThe extra fix could be cherry-picked for master if desired.\ngit fetch https://github.com/planetf1/egeria psreadme\ngit cherry-pick -s <commitid>\n\nThe first command can be omitted if done after I have merged into 2.3\nThis fix needs to go in ASAP so I can kick off the release process, so can I ask @davidradl @mandy-chessell @grahamwallis  to confirm you are all ok with this.\nI will add a link in the top level readme to this file if it doesn't exist (later as that is master!)", "createdAt": "2020-10-02T09:09:53Z", "url": "https://github.com/odpi/egeria/pull/3733", "merged": true, "mergeCommit": {"oid": "7f596926aeb1a42e77364400ebf7013f0f07ad27"}, "closed": true, "closedAt": "2020-10-02T10:20:01Z", "author": {"login": "planetf1"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOh48_gH2gAyNDk2NzgzMzAwOjNlMTcyM2NlZjY2N2JmNDdkNzVmOGZiYjU5Y2E5ZDg3NjgzNjZlNTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOjAGtAFqTUwMTAwNzEzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3e1723cef667bf47d75f8fbb59ca9d8768366e56", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/3e1723cef667bf47d75f8fbb59ca9d8768366e56", "committedDate": "2020-10-02T08:41:15Z", "message": "#3682 amend the presnetaion server readme for release 2.3\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>\nSigned-off-by: Nigel Jones <nigel.l.jones+git@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9020a348d591b8861abe5dbcfc789b30a23d0cc", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/c9020a348d591b8861abe5dbcfc789b30a23d0cc", "committedDate": "2020-10-02T08:41:23Z", "message": "#3682 add descriptions of the Ui capabilities\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>\nSigned-off-by: Nigel Jones <nigel.l.jones+git@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4040d389c2443e2b3497896f9f16e9b1afca655f", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/4040d389c2443e2b3497896f9f16e9b1afca655f", "committedDate": "2020-10-02T08:41:31Z", "message": "#3682 correct typo\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>\nSigned-off-by: Nigel Jones <nigel.l.jones+git@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6893c9cb67b5a5bc69c820b5665f6006834409bb", "author": {"user": {"login": "planetf1", "name": "Nigel Jones"}}, "url": "https://github.com/odpi/egeria/commit/6893c9cb67b5a5bc69c820b5665f6006834409bb", "committedDate": "2020-10-02T09:03:17Z", "message": "#3683 additional updates for release 2.3\n\nSigned-off-by: Nigel Jones <nigel.l.jones+git@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwOTg4MjM2", "url": "https://github.com/odpi/egeria/pull/3733#pullrequestreview-500988236", "createdAt": "2020-10-02T09:28:36Z", "commit": {"oid": "6893c9cb67b5a5bc69c820b5665f6006834409bb"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOToyODozNlrOHbnHVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTozMDo1MlrOHbnLZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNDQ1NQ==", "bodyText": "platform root ?", "url": "https://github.com/odpi/egeria/pull/3733#discussion_r498714455", "createdAt": "2020-10-02T09:28:36Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -11,50 +11,74 @@ servers.\n See the [Egeria Planning guide](https://github.com/odpi/egeria/tree/master/open-metadata-publication/website/planning-guide) to familiarise yourself with \n the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-server.md); Presentation Server is one of those servers.  \n \n+There are 2 types of capabilities exposed in the Presentation Server.\n+- Integration View Services\n+- Governance Solution View Services  \n+\n+### Integration View Services\n+\n+- Type Explorer: allowing a user to explore the Egeria open types\n+- Repository Explorer: allowing a user to explore Egeria instances\n+- Server Author: allowing a user to configure a server. This is work in progress.\n+- Dino: allowing a user to see and work with Egeria platforms and servers operationally.      \n+\n+### Governance Solution View Services  \n+- Glossary Author: allowing a Glossary Author use to create, update and delete Glossary content.       \n \n ## Setting up the downstream servers  \n- To run the Presentation server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n- For example for the Glossary Author capability, the Presentation server issues omvs calls to the [View server](../../admin-services/docs/concepts/view-server.md)\n+ To run the Presentation Server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n+ Be aware that in addition to any existing OMAG Servers, the Presentation Server requires that you have [configured the view services](../../admin-services/docs/user/configuring-the-view-services.md) on a View Server. \n+\n+ For example for the Glossary Author capability, the Presentation Server issues Open Metadata View Server (OMVS) calls to the [View Server](../../admin-services/docs/concepts/view-server.md)\n  which issues [Open Metadata Access Service (OMAS)](../../access-services/README.md) calls to the [Access Point Server](../../admin-services/docs/concepts/metadata-access-point.md).     \n  \n-## Configuring the presentation server \n-* The presentation server supports multi-tenants. A presentation server tenant has a serverName and associated configuration.\n-* The configuration for the presentation server is minimal, only specifying how to access a downstream server.     \n-* The each tenant's configuration is specified in an environment variable that contains the tenants serverName. \n+## Configuring the Presentation Server \n+* The Presentation Server supports multi-tenants. A Presentation Server tenant has a serverName and associated configuration.\n+* The configuration for the Presentation Server is minimal, only specifying how to access a downstream server.     \n+* Each tenant's configuration is specified in an environment variable that contains the tenant's serverName. \n * The environment variable is called `EGERIA_PRESENTATIONSERVER_SERVER_<ui server name>`  when the <ui server name> is the tenants\n  serverName.\n * The value of the environment variable is a json payload with 2 named properties\n-    * `remoteServerName` the remote server name\n-    * `remoteURL` the remote url. \n+    * `remoteServerName` the remote view server name.\n+    * `remoteURL` the server root url for the view server. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6893c9cb67b5a5bc69c820b5665f6006834409bb"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNDk1Ng==", "bodyText": "It would be better to use faithbroker rather than faith. I think this is more widely used", "url": "https://github.com/odpi/egeria/pull/3733#discussion_r498714956", "createdAt": "2020-10-02T09:29:41Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -11,50 +11,74 @@ servers.\n See the [Egeria Planning guide](https://github.com/odpi/egeria/tree/master/open-metadata-publication/website/planning-guide) to familiarise yourself with \n the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-server.md); Presentation Server is one of those servers.  \n \n+There are 2 types of capabilities exposed in the Presentation Server.\n+- Integration View Services\n+- Governance Solution View Services  \n+\n+### Integration View Services\n+\n+- Type Explorer: allowing a user to explore the Egeria open types\n+- Repository Explorer: allowing a user to explore Egeria instances\n+- Server Author: allowing a user to configure a server. This is work in progress.\n+- Dino: allowing a user to see and work with Egeria platforms and servers operationally.      \n+\n+### Governance Solution View Services  \n+- Glossary Author: allowing a Glossary Author use to create, update and delete Glossary content.       \n \n ## Setting up the downstream servers  \n- To run the Presentation server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n- For example for the Glossary Author capability, the Presentation server issues omvs calls to the [View server](../../admin-services/docs/concepts/view-server.md)\n+ To run the Presentation Server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n+ Be aware that in addition to any existing OMAG Servers, the Presentation Server requires that you have [configured the view services](../../admin-services/docs/user/configuring-the-view-services.md) on a View Server. \n+\n+ For example for the Glossary Author capability, the Presentation Server issues Open Metadata View Server (OMVS) calls to the [View Server](../../admin-services/docs/concepts/view-server.md)\n  which issues [Open Metadata Access Service (OMAS)](../../access-services/README.md) calls to the [Access Point Server](../../admin-services/docs/concepts/metadata-access-point.md).     \n  \n-## Configuring the presentation server \n-* The presentation server supports multi-tenants. A presentation server tenant has a serverName and associated configuration.\n-* The configuration for the presentation server is minimal, only specifying how to access a downstream server.     \n-* The each tenant's configuration is specified in an environment variable that contains the tenants serverName. \n+## Configuring the Presentation Server \n+* The Presentation Server supports multi-tenants. A Presentation Server tenant has a serverName and associated configuration.\n+* The configuration for the Presentation Server is minimal, only specifying how to access a downstream server.     \n+* Each tenant's configuration is specified in an environment variable that contains the tenant's serverName. \n * The environment variable is called `EGERIA_PRESENTATIONSERVER_SERVER_<ui server name>`  when the <ui server name> is the tenants\n  serverName.\n * The value of the environment variable is a json payload with 2 named properties\n-    * `remoteServerName` the remote server name\n-    * `remoteURL` the remote url. \n+    * `remoteServerName` the remote view server name.\n+    * `remoteURL` the server root url for the view server. \n * An example of the environment variable you would specify for a UI tenant with server name `aaa` with a remote server name\n `  cocoView1` and remote URL of `https://localhost:9443 ` is\n  ` EGERIA_PRESENTATIONSERVER_SERVER_aaa={\"remoteServerName\":\"cocoView1\",\"remoteURL\":\"https://localhost:9443\"}`\n-* To run the presentation server in production, use the presentation server assembly and specify the environment variables as required.   \n+* To run the Presentation Server in production, use the Presentation Server assembly and specify the environment variables as required.   \n \n ## For development\n  * Add the presentation-server folder into [Visual Studio Code](https://code.visualstudio.com/). It will create a new workspace.\n- * You can open a terminal in Visual Studio code to issue the npm commands\n+ * You can open a terminal in Visual Studio Code to issue the npm commands\n  * Set up your environment by running `npm install`\n  * Developers can specify the environment variable(s) in a .env file, by copying [.env_sample](nodejs/.env_sample) to a file\n  called .env in the same folder and amend the values as required.\n  * Once the .env file is in place, build and start the server using `npm start`. Use other npm parameters as specified in [package.json](nodejs/package.json).  \n \n-## FOR NEW DEVELOPMENT (as of 8/2/2020)\n- * Currently, the UI is not optimized to run in development mode. Developers must rebuild the static files every time a change is made.\n- * Because of this, work is currently underway to remake the client with Create React App. This will be done iteratively, and updates posted here.\n- * Old client code will be maintained until the cutover is complete, so developers can run the traditional way if desired.\n- * The new client is maintained in the cra-client directory.\n- * Set up your environment by running `yarn`.\n- * Enter `http://localhost:3000/` to access the new UI in development mode.\n- \n ## Access UI using the browser. \n- * Enter 'https://localhost:8091/<tenant-name>/' on the UI to access the tenanted UI (<tenant-name> is the serverName used by the presentation server). The Ui will prompt for a login; some of the \n+ * Enter 'https://localhost:8091/<tenant-name>/login' on the UI to access the tenanted UI (<tenant-name> is the serverName used by the presentation server). The Ui will prompt for a login; some of the \n  Coco Pharmaceutical personnas have been enabled here - use user 'faith' and password 'admin'. If there is an environment variable :", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6893c9cb67b5a5bc69c820b5665f6006834409bb"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNTQ5Mg==", "bodyText": "There is ongoing work to enable easy running of the new view services in a demo environment", "url": "https://github.com/odpi/egeria/pull/3733#discussion_r498715492", "createdAt": "2020-10-02T09:30:52Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -11,50 +11,74 @@ servers.\n See the [Egeria Planning guide](https://github.com/odpi/egeria/tree/master/open-metadata-publication/website/planning-guide) to familiarise yourself with \n the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-server.md); Presentation Server is one of those servers.  \n \n+There are 2 types of capabilities exposed in the Presentation Server.\n+- Integration View Services\n+- Governance Solution View Services  \n+\n+### Integration View Services\n+\n+- Type Explorer: allowing a user to explore the Egeria open types\n+- Repository Explorer: allowing a user to explore Egeria instances\n+- Server Author: allowing a user to configure a server. This is work in progress.\n+- Dino: allowing a user to see and work with Egeria platforms and servers operationally.      \n+\n+### Governance Solution View Services  \n+- Glossary Author: allowing a Glossary Author use to create, update and delete Glossary content.       \n \n ## Setting up the downstream servers  \n- To run the Presentation server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n- For example for the Glossary Author capability, the Presentation server issues omvs calls to the [View server](../../admin-services/docs/concepts/view-server.md)\n+ To run the Presentation Server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n+ Be aware that in addition to any existing OMAG Servers, the Presentation Server requires that you have [configured the view services](../../admin-services/docs/user/configuring-the-view-services.md) on a View Server. \n+\n+ For example for the Glossary Author capability, the Presentation Server issues Open Metadata View Server (OMVS) calls to the [View Server](../../admin-services/docs/concepts/view-server.md)\n  which issues [Open Metadata Access Service (OMAS)](../../access-services/README.md) calls to the [Access Point Server](../../admin-services/docs/concepts/metadata-access-point.md).     \n  \n-## Configuring the presentation server \n-* The presentation server supports multi-tenants. A presentation server tenant has a serverName and associated configuration.\n-* The configuration for the presentation server is minimal, only specifying how to access a downstream server.     \n-* The each tenant's configuration is specified in an environment variable that contains the tenants serverName. \n+## Configuring the Presentation Server \n+* The Presentation Server supports multi-tenants. A Presentation Server tenant has a serverName and associated configuration.\n+* The configuration for the Presentation Server is minimal, only specifying how to access a downstream server.     \n+* Each tenant's configuration is specified in an environment variable that contains the tenant's serverName. \n * The environment variable is called `EGERIA_PRESENTATIONSERVER_SERVER_<ui server name>`  when the <ui server name> is the tenants\n  serverName.\n * The value of the environment variable is a json payload with 2 named properties\n-    * `remoteServerName` the remote server name\n-    * `remoteURL` the remote url. \n+    * `remoteServerName` the remote view server name.\n+    * `remoteURL` the server root url for the view server. \n * An example of the environment variable you would specify for a UI tenant with server name `aaa` with a remote server name\n `  cocoView1` and remote URL of `https://localhost:9443 ` is\n  ` EGERIA_PRESENTATIONSERVER_SERVER_aaa={\"remoteServerName\":\"cocoView1\",\"remoteURL\":\"https://localhost:9443\"}`\n-* To run the presentation server in production, use the presentation server assembly and specify the environment variables as required.   \n+* To run the Presentation Server in production, use the Presentation Server assembly and specify the environment variables as required.   \n \n ## For development\n  * Add the presentation-server folder into [Visual Studio Code](https://code.visualstudio.com/). It will create a new workspace.\n- * You can open a terminal in Visual Studio code to issue the npm commands\n+ * You can open a terminal in Visual Studio Code to issue the npm commands\n  * Set up your environment by running `npm install`\n  * Developers can specify the environment variable(s) in a .env file, by copying [.env_sample](nodejs/.env_sample) to a file\n  called .env in the same folder and amend the values as required.\n  * Once the .env file is in place, build and start the server using `npm start`. Use other npm parameters as specified in [package.json](nodejs/package.json).  \n \n-## FOR NEW DEVELOPMENT (as of 8/2/2020)\n- * Currently, the UI is not optimized to run in development mode. Developers must rebuild the static files every time a change is made.\n- * Because of this, work is currently underway to remake the client with Create React App. This will be done iteratively, and updates posted here.\n- * Old client code will be maintained until the cutover is complete, so developers can run the traditional way if desired.\n- * The new client is maintained in the cra-client directory.\n- * Set up your environment by running `yarn`.\n- * Enter `http://localhost:3000/` to access the new UI in development mode.\n- \n ## Access UI using the browser. \n- * Enter 'https://localhost:8091/<tenant-name>/' on the UI to access the tenanted UI (<tenant-name> is the serverName used by the presentation server). The Ui will prompt for a login; some of the \n+ * Enter 'https://localhost:8091/<tenant-name>/login' on the UI to access the tenanted UI (<tenant-name> is the serverName used by the presentation server). The Ui will prompt for a login; some of the \n  Coco Pharmaceutical personnas have been enabled here - use user 'faith' and password 'admin'. If there is an environment variable :\n   ` EGERIA_PRESENTATIONSERVER_SERVER_aaa={\"remoteServerName\":\"cocoView1\",\"remoteURL\":\"https://localhost:9443\"}`\n   then the browser url to use to login is `https://localhost:8091/aaa`. All browser requests for this tenant will be issued using urls starting\n   `https://localhost:8091/aaa`. \n-    \n-  \n+\n+## There is on-going work to enhance the development experience \n+ * The build described above is a production build; meaning everything is rebuilt each time a change is made.\n+ * There is ongoing work to allow developers to do be able to make changes and hot swap them into a running server.\n+ * The ongoing work is being tracked in issue [Git issue 3543](https://github.com/odpi/egeria/issues/3543)\n+ * The work involves using Create React App. This will be done iteratively.\n+ * The current latest client code is in the client folder.\n+ * The new work is being developed in the cra-client directory and may contain out of date Presentation Server source code. \n+\n+## There is ongoing work to enhance the ability to easily run the new services in a demo environment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6893c9cb67b5a5bc69c820b5665f6006834409bb"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f052015429017e55f064456550aab22f6074367b", "author": {"user": {"login": "planetf1", "name": "Nigel Jones"}}, "url": "https://github.com/odpi/egeria/commit/f052015429017e55f064456550aab22f6074367b", "committedDate": "2020-10-02T09:39:28Z", "message": "#3733 add review comments\n\nSigned-off-by: Nigel Jones <nigel.l.jones+git@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMDA3MTMw", "url": "https://github.com/odpi/egeria/pull/3733#pullrequestreview-501007130", "createdAt": "2020-10-02T09:58:58Z", "commit": {"oid": "f052015429017e55f064456550aab22f6074367b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo1ODo1OFrOHbn-uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo1ODo1OFrOHbn-uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyODYzMg==", "bodyText": "sorry looking at it I think the aaa reference is a bit confusing. I suggest  then saying the sample .env file has this set to aaa.", "url": "https://github.com/odpi/egeria/pull/3733#discussion_r498728632", "createdAt": "2020-10-02T09:58:58Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -11,50 +11,74 @@ servers.\n See the [Egeria Planning guide](https://github.com/odpi/egeria/tree/master/open-metadata-publication/website/planning-guide) to familiarise yourself with \n the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-server.md); Presentation Server is one of those servers.  \n \n+There are 2 types of capabilities exposed in the Presentation Server.\n+- Integration View Services\n+- Governance Solution View Services  \n+\n+### Integration View Services\n+\n+- Type Explorer: allowing a user to explore the Egeria open types\n+- Repository Explorer: allowing a user to explore Egeria instances\n+- Server Author: allowing a user to configure a server. This is work in progress.\n+- Dino: allowing a user to see and work with Egeria platforms and servers operationally.      \n+\n+### Governance Solution View Services  \n+- Glossary Author: allowing a Glossary Author use to create, update and delete Glossary content.       \n \n ## Setting up the downstream servers  \n- To run the Presentation server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n- For example for the Glossary Author capability, the Presentation server issues omvs calls to the [View server](../../admin-services/docs/concepts/view-server.md)\n+ To run the Presentation Server, you need to have correctly [configured](../../admin-services/docs/user/configuring-an-omag-server.md) and be [operating](../../admin-services/docs/user/operating-omag-server.md) the downstream servers.\n+ Be aware that in addition to any existing OMAG Servers, the Presentation Server requires that you have [configured the view services](../../admin-services/docs/user/configuring-the-view-services.md) on a View Server. \n+\n+ For example for the Glossary Author capability, the Presentation Server issues Open Metadata View Server (OMVS) calls to the [View Server](../../admin-services/docs/concepts/view-server.md)\n  which issues [Open Metadata Access Service (OMAS)](../../access-services/README.md) calls to the [Access Point Server](../../admin-services/docs/concepts/metadata-access-point.md).     \n  \n-## Configuring the presentation server \n-* The presentation server supports multi-tenants. A presentation server tenant has a serverName and associated configuration.\n-* The configuration for the presentation server is minimal, only specifying how to access a downstream server.     \n-* The each tenant's configuration is specified in an environment variable that contains the tenants serverName. \n+## Configuring the Presentation Server \n+* The Presentation Server supports multi-tenants. A Presentation Server tenant has a serverName and associated configuration.\n+* The configuration for the Presentation Server is minimal, only specifying how to access a downstream server.     \n+* Each tenant's configuration is specified in an environment variable that contains the tenant's serverName. \n * The environment variable is called `EGERIA_PRESENTATIONSERVER_SERVER_<ui server name>`  when the <ui server name> is the tenants\n  serverName.\n * The value of the environment variable is a json payload with 2 named properties\n-    * `remoteServerName` the remote server name\n-    * `remoteURL` the remote url. \n+    * `remoteServerName` the remote view server name.\n+    * `remoteURL` the platform root url for the view server. \n * An example of the environment variable you would specify for a UI tenant with server name `aaa` with a remote server name\n `  cocoView1` and remote URL of `https://localhost:9443 ` is\n  ` EGERIA_PRESENTATIONSERVER_SERVER_aaa={\"remoteServerName\":\"cocoView1\",\"remoteURL\":\"https://localhost:9443\"}`\n-* To run the presentation server in production, use the presentation server assembly and specify the environment variables as required.   \n+* To run the Presentation Server in production, use the Presentation Server assembly and specify the environment variables as required.   \n \n ## For development\n  * Add the presentation-server folder into [Visual Studio Code](https://code.visualstudio.com/). It will create a new workspace.\n- * You can open a terminal in Visual Studio code to issue the npm commands\n+ * You can open a terminal in Visual Studio Code to issue the npm commands\n  * Set up your environment by running `npm install`\n  * Developers can specify the environment variable(s) in a .env file, by copying [.env_sample](nodejs/.env_sample) to a file\n  called .env in the same folder and amend the values as required.\n  * Once the .env file is in place, build and start the server using `npm start`. Use other npm parameters as specified in [package.json](nodejs/package.json).  \n \n-## FOR NEW DEVELOPMENT (as of 8/2/2020)\n- * Currently, the UI is not optimized to run in development mode. Developers must rebuild the static files every time a change is made.\n- * Because of this, work is currently underway to remake the client with Create React App. This will be done iteratively, and updates posted here.\n- * Old client code will be maintained until the cutover is complete, so developers can run the traditional way if desired.\n- * The new client is maintained in the cra-client directory.\n- * Set up your environment by running `yarn`.\n- * Enter `http://localhost:3000/` to access the new UI in development mode.\n- \n ## Access UI using the browser. \n- * Enter 'https://localhost:8091/<tenant-name>/' on the UI to access the tenanted UI (<tenant-name> is the serverName used by the presentation server). The Ui will prompt for a login; some of the \n- Coco Pharmaceutical personnas have been enabled here - use user 'faith' and password 'admin'. If there is an environment variable :\n+ * Enter 'https://localhost:8091/<tenant-name>/login' on the UI to access the tenanted UI (<tenant-name> is the serverName used by the presentation server). The Ui will prompt for a login; some of the \n+ Coco Pharmaceutical personnas have been enabled here - use user 'faithbroker' and password 'admin'. If there is an environment variable :\n   ` EGERIA_PRESENTATIONSERVER_SERVER_aaa={\"remoteServerName\":\"cocoView1\",\"remoteURL\":\"https://localhost:9443\"}`\n   then the browser url to use to login is `https://localhost:8091/aaa`. All browser requests for this tenant will be issued using urls starting\n   `https://localhost:8091/aaa`. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f052015429017e55f064456550aab22f6074367b"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3913, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}