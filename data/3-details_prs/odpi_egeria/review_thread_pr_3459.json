{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MDA1Mjgy", "number": 3459, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzozNDozMVrOEV1K4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzo0MDo0OFrOEV1VFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzI2Njg4OnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/server/mappers/classifications/ClassificationMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzozNDozMVrOG8zw8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDoxNjowNFrOG-5_kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxNTg1Ng==", "bodyText": "Could you use the RepositoryHelper's getSkeletonClassification method here instea? It looks like it could save quite a bit of this construction code.", "url": "https://github.com/odpi/egeria/pull/3459#discussion_r466415856", "createdAt": "2020-08-06T13:34:31Z", "author": {"login": "grahamwallis"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/server/mappers/classifications/ClassificationMapper.java", "diffHunk": "@@ -106,10 +108,18 @@ public Classification mapBeanToOmrs(org.odpi.openmetadata.accessservices.subject\n          org.odpi.openmetadata.repositoryservices.connectors.stores.metadatacollectionstore.properties.instances.Classification omrsClassification = new org.odpi.openmetadata.repositoryservices.connectors.stores.metadatacollectionstore.properties.instances.Classification();\n          SubjectAreaUtils.populateSystemAttributesForInstanceAuditHeader(systemAttributes, omrsClassification);\n          // copy over the classification name\n-         omrsClassification.setName(omasClassification.getClassificationName());\n+         String classificationName = omasClassification.getClassificationName();\n+         omrsClassification.setName(classificationName);\n+         // copy over the classification type\n+         OpenMetadataTypesArchiveAccessor archiveAccessor = OpenMetadataTypesArchiveAccessor.getInstance();\n+         String classificationTypeGuid = archiveAccessor.getClassificationDefByName(classificationName).getGUID();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d64f0afa6cc7a972f1465de245d870e0a5d10fc0"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYxNTA1Ng==", "bodyText": "@grahamwallis raised issue #3477 to track this suggested refactor.", "url": "https://github.com/odpi/egeria/pull/3459#discussion_r468615056", "createdAt": "2020-08-11T14:16:04Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/server/mappers/classifications/ClassificationMapper.java", "diffHunk": "@@ -106,10 +108,18 @@ public Classification mapBeanToOmrs(org.odpi.openmetadata.accessservices.subject\n          org.odpi.openmetadata.repositoryservices.connectors.stores.metadatacollectionstore.properties.instances.Classification omrsClassification = new org.odpi.openmetadata.repositoryservices.connectors.stores.metadatacollectionstore.properties.instances.Classification();\n          SubjectAreaUtils.populateSystemAttributesForInstanceAuditHeader(systemAttributes, omrsClassification);\n          // copy over the classification name\n-         omrsClassification.setName(omasClassification.getClassificationName());\n+         String classificationName = omasClassification.getClassificationName();\n+         omrsClassification.setName(classificationName);\n+         // copy over the classification type\n+         OpenMetadataTypesArchiveAccessor archiveAccessor = OpenMetadataTypesArchiveAccessor.getInstance();\n+         String classificationTypeGuid = archiveAccessor.getClassificationDefByName(classificationName).getGUID();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxNTg1Ng=="}, "originalCommit": {"oid": "d64f0afa6cc7a972f1465de245d870e0a5d10fc0"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzI4ODc5OnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/adapters/open-connectors/repository-services-connectors/open-metadata-collection-store-connectors/graph-repository-connector/src/main/java/org/odpi/openmetadata/adapters/repositoryservices/graphrepository/repositoryconnector/GraphOMRSMetadataStore.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzozOTo1M1rOG8z-sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNzoyNjo0OVrOG-D3uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxOTM3OA==", "bodyText": "I don't see why this helps. I may be missing something but I can't see what's wrong with removing the unwanted classification as soon as it is identified, i.e. within the loop.\nIf there's a good reason for this change, does it not also apply to the classifier edges that need to be removed?\nI'm not sure what behaviour occurred that prompted this change. Is it possible that there's a problem with the order of the remove operations?", "url": "https://github.com/odpi/egeria/pull/3459#discussion_r466419378", "createdAt": "2020-08-06T13:39:53Z", "author": {"login": "grahamwallis"}, "path": "open-metadata-implementation/adapters/open-connectors/repository-services-connectors/open-metadata-collection-store-connectors/graph-repository-connector/src/main/java/org/odpi/openmetadata/adapters/repositoryservices/graphrepository/repositoryconnector/GraphOMRSMetadataStore.java", "diffHunk": "@@ -1146,12 +1147,16 @@ private void updateEntityClassifications(EntitySummary entity, Vertex vertex, Gr\n                 log.debug(\"{} entity remove classification: {}\", methodName, existingName);\n                 Vertex classificationVertex = existingClassificationVerticesByName.get(existingName);\n                 classificationVertex.remove();\n-                existingClassificationVerticesByName.remove(existingName);\n+                namesToRemoveSet.add(existingName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d64f0afa6cc7a972f1465de245d870e0a5d10fc0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUwNjU2MQ==", "bodyText": "@grahamwallis This change fixed a concurrent modification exception, I believe the issue was that we called an iterator .next , then a  .remove then .next on the same map (existingClassificationVerticesByName) or its iterator. The second .next got the exception, presumably because it realises that the collection it is iterating over has changed underneath it. The fix solves the problem as the .remove is not done in the iterator loop. I don't think it applies to the classifier vertices as they are not being iterated over. Have I misunderstood something ?", "url": "https://github.com/odpi/egeria/pull/3459#discussion_r466506561", "createdAt": "2020-08-06T15:42:50Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/adapters/open-connectors/repository-services-connectors/open-metadata-collection-store-connectors/graph-repository-connector/src/main/java/org/odpi/openmetadata/adapters/repositoryservices/graphrepository/repositoryconnector/GraphOMRSMetadataStore.java", "diffHunk": "@@ -1146,12 +1147,16 @@ private void updateEntityClassifications(EntitySummary entity, Vertex vertex, Gr\n                 log.debug(\"{} entity remove classification: {}\", methodName, existingName);\n                 Vertex classificationVertex = existingClassificationVerticesByName.get(existingName);\n                 classificationVertex.remove();\n-                existingClassificationVerticesByName.remove(existingName);\n+                namesToRemoveSet.add(existingName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxOTM3OA=="}, "originalCommit": {"oid": "d64f0afa6cc7a972f1465de245d870e0a5d10fc0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg4Njk4Nw==", "bodyText": "the explanation makes sense to me from the code.", "url": "https://github.com/odpi/egeria/pull/3459#discussion_r466886987", "createdAt": "2020-08-07T08:03:56Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/adapters/open-connectors/repository-services-connectors/open-metadata-collection-store-connectors/graph-repository-connector/src/main/java/org/odpi/openmetadata/adapters/repositoryservices/graphrepository/repositoryconnector/GraphOMRSMetadataStore.java", "diffHunk": "@@ -1146,12 +1147,16 @@ private void updateEntityClassifications(EntitySummary entity, Vertex vertex, Gr\n                 log.debug(\"{} entity remove classification: {}\", methodName, existingName);\n                 Vertex classificationVertex = existingClassificationVerticesByName.get(existingName);\n                 classificationVertex.remove();\n-                existingClassificationVerticesByName.remove(existingName);\n+                namesToRemoveSet.add(existingName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxOTM3OA=="}, "originalCommit": {"oid": "d64f0afa6cc7a972f1465de245d870e0a5d10fc0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcyODMxMg==", "bodyText": "Yes - that makes good sense. I hadn't looked closely enough :-) I was wondering whether it was an issue with the removal of the vertices and then the edges (which should be fine). Thanks for the explanation and for fixing!", "url": "https://github.com/odpi/egeria/pull/3459#discussion_r467728312", "createdAt": "2020-08-10T07:26:49Z", "author": {"login": "grahamwallis"}, "path": "open-metadata-implementation/adapters/open-connectors/repository-services-connectors/open-metadata-collection-store-connectors/graph-repository-connector/src/main/java/org/odpi/openmetadata/adapters/repositoryservices/graphrepository/repositoryconnector/GraphOMRSMetadataStore.java", "diffHunk": "@@ -1146,12 +1147,16 @@ private void updateEntityClassifications(EntitySummary entity, Vertex vertex, Gr\n                 log.debug(\"{} entity remove classification: {}\", methodName, existingName);\n                 Vertex classificationVertex = existingClassificationVerticesByName.get(existingName);\n                 classificationVertex.remove();\n-                existingClassificationVerticesByName.remove(existingName);\n+                namesToRemoveSet.add(existingName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxOTM3OA=="}, "originalCommit": {"oid": "d64f0afa6cc7a972f1465de245d870e0a5d10fc0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzI5MzAyOnYy", "diffSide": "RIGHT", "path": "open-metadata-test/open-metadata-fvt/access-services-fvt/subject-area-fvt/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/fvt/TermFVT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzo0MDo0OFrOG80BOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNTo0Mzo1MFrOG85V1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyMDAyNw==", "bodyText": "Minor: string still contains a superfluous space.", "url": "https://github.com/odpi/egeria/pull/3459#discussion_r466420027", "createdAt": "2020-08-06T13:40:48Z", "author": {"login": "grahamwallis"}, "path": "open-metadata-test/open-metadata-fvt/access-services-fvt/subject-area-fvt/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/fvt/TermFVT.java", "diffHunk": "@@ -135,7 +135,7 @@ public void run() throws SubjectAreaFVTCheckedException, InvalidParameterExcepti\n             throw new SubjectAreaFVTCheckedException(\"ERROR: Governance actions retention not returned  as expected\");\n         }\n         if (!governanceActions.getCriticality().getLevel().equals(term3.getGovernanceActions().getCriticality().getLevel())) {\n-            throw new SubjectAreaFVTCheckedException(\"ERROR: Governance actions criticality not returned  as expected\");\n+            throw new SubjectAreaFVTCheckedException(\"ERROR: Governance actions criticality not returned  as expected. \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d64f0afa6cc7a972f1465de245d870e0a5d10fc0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUwNzIyMQ==", "bodyText": "Minor: string still contains a superfluous space.\n\nI suggest that I fix if I need to make another code change on this pr.", "url": "https://github.com/odpi/egeria/pull/3459#discussion_r466507221", "createdAt": "2020-08-06T15:43:50Z", "author": {"login": "davidradl"}, "path": "open-metadata-test/open-metadata-fvt/access-services-fvt/subject-area-fvt/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/fvt/TermFVT.java", "diffHunk": "@@ -135,7 +135,7 @@ public void run() throws SubjectAreaFVTCheckedException, InvalidParameterExcepti\n             throw new SubjectAreaFVTCheckedException(\"ERROR: Governance actions retention not returned  as expected\");\n         }\n         if (!governanceActions.getCriticality().getLevel().equals(term3.getGovernanceActions().getCriticality().getLevel())) {\n-            throw new SubjectAreaFVTCheckedException(\"ERROR: Governance actions criticality not returned  as expected\");\n+            throw new SubjectAreaFVTCheckedException(\"ERROR: Governance actions criticality not returned  as expected. \");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyMDAyNw=="}, "originalCommit": {"oid": "d64f0afa6cc7a972f1465de245d870e0a5d10fc0"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2570, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}