{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwNTUyNjY4", "number": 3573, "title": "#3543 Refactored UI Client and Server for Development", "bodyText": "Fingers crossed this PR is correct this time...\n@planetf1  I corrected the diff, so that only the appropriate files are shown changed. Only 163 files time around, as opposed to 2000+. Hoping we can discuss Maven considerations after this PR.\n@davidradl I corrected the .gitignore according to your guidance. Unfortunately, I do not have time before the end of next week to pull in your latest changes. I am hoping this PR can be accepted so that the \"structure\" of the of the development server is at least set up. That way, others with more time can update the code with your latest changes (or I can get to it next week) and then begin using the easier development mode.\nI referenced my issues with Chrome in the original issue #3543 . I created this one as a draft PR just to be safe.", "createdAt": "2020-09-05T17:16:35Z", "url": "https://github.com/odpi/egeria/pull/3573", "merged": true, "mergeCommit": {"oid": "54cb41a20b25c9c350c9a0bd65f0978665b472b5"}, "closed": true, "closedAt": "2020-10-09T10:29:32Z", "author": {"login": "jmmadsen"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdF87WNgH2gAyNDgwNTUyNjY4OmQ4MWJmNTc1MjU1YTM2YWZjMzljNDg1MDRlMmU4Y2IxZDIxYzg5NzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQy3s1gH2gAyNDgwNTUyNjY4OmYwYTE3M2FmNjZhMjZlMmY3ODdmMDQzNTY1YmI4MGM3ZDUxYmM5YmE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d81bf575255a36afc39c48504e2e8cb1d21c8976", "author": {"user": null}, "url": "https://github.com/odpi/egeria/commit/d81bf575255a36afc39c48504e2e8cb1d21c8976", "committedDate": "2020-09-05T17:05:59Z", "message": "created new cra directories\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235", "author": {"user": null}, "url": "https://github.com/odpi/egeria/commit/9379a6529bb35a009c33640e7a254b7dd7a98235", "committedDate": "2020-09-05T17:08:55Z", "message": "updated ReadMe\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMDc2OTk0", "url": "https://github.com/odpi/egeria/pull/3573#pullrequestreview-483076994", "createdAt": "2020-09-05T20:24:34Z", "commit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQyMDoyNDozNVrOHNkGbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwODo1NTozMlrOHN2tdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk4NTAwNA==", "bodyText": "See #1490 for more references to the standard users we have... This list may need updating.. (ultimately we need to move to ldap , but understand that's down the line)", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r483985004", "createdAt": "2020-09-05T20:24:35Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/db/users.js", "diffHunk": "@@ -0,0 +1,38 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+var records = [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI3OTQ2NA==", "bodyText": "Quite a number of these files are already excluded by pattern (build, .vscode, *.log). Others may be included by minor modification to the existing patterns (package-lock?)\nNot critical for this pr, so could be in a later one, though I can take a look to suggest more specifics if I get the overall (dev - not maven!)  working for the PR in my environment", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484279464", "createdAt": "2020-09-07T08:37:46Z", "author": {"login": "planetf1"}, "path": ".gitignore", "diffHunk": "@@ -115,6 +115,20 @@ open-metadata-implementation/user-interfaces/presentation-server/nodejs/yarn.loc\n open-metadata-implementation/user-interfaces/presentation-server/nodejs/node/**\n open-metadata-implementation/user-interfaces/presentation-server/nodejs/.env\n \n+open-metadata-implementation/user-interfaces/presentation-server/cra-client/node_modules", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI3OTgzMw==", "bodyText": "May be an idea to use ISO format dates YYYY-MM-DD as we have a global audience and this is US date format", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484279833", "createdAt": "2020-09-07T08:38:25Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -38,14 +38,6 @@ the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-serve\n  * Developers can specify the environment variable(s) in a .env file, by copying [.env_sample](nodejs/.env_sample) to a file\n  called .env in the same folder and amend the values as required.\n  * Once the .env file is in place, build and start the server using `npm start`. Use other npm parameters as specified in [package.json](nodejs/package.json).  \n-\n-## FOR NEW DEVELOPMENT (as of 8/2/2020)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MDQzMg==", "bodyText": "presumably from this directory - but also would require running yarn? might be worth adding a link even for this stage - though when we LATER do maven integration it shouldn't be needed (there we need to minimize any external dependencies)", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484280432", "createdAt": "2020-09-07T08:39:23Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -38,14 +38,6 @@ the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-serve\n  * Developers can specify the environment variable(s) in a .env file, by copying [.env_sample](nodejs/.env_sample) to a file\n  called .env in the same folder and amend the values as required.\n  * Once the .env file is in place, build and start the server using `npm start`. Use other npm parameters as specified in [package.json](nodejs/package.json).  \n-\n-## FOR NEW DEVELOPMENT (as of 8/2/2020)\n- * Currently, the UI is not optimized to run in development mode. Developers must rebuild the static files every time a change is made.\n- * Because of this, work is currently underway to remake the client with Create React App. This will be done iteratively, and updates posted here.\n- * Old client code will be maintained until the cutover is complete, so developers can run the traditional way if desired.\n- * The new client is maintained in the cra-client directory.\n- * Set up your environment by running `yarn`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MDkyMA==", "bodyText": "ISO date format", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484280920", "createdAt": "2020-09-07T08:40:13Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -54,6 +46,16 @@ the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-serve\n   then the browser url to use to login is `https://localhost:8091/aaa`. All browser requests for this tenant will be issued using urls starting\n   `https://localhost:8091/aaa`. \n     \n+## FOR NEW DEVELOPMENT (as of 8/25/2020)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MTU4MA==", "bodyText": "should be careful of terminology as we use 'server' to mean an egeria server, yet here I think you mean a 'process listening on a port' ie network server. We use the word platform. Not sure though that is best here. but client/server can be confusing given how much we have this all over egeria...\n(Note -- it's ok we refine the docs in a later PR - just general feedback)", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484281580", "createdAt": "2020-09-07T08:41:17Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -54,6 +46,16 @@ the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-serve\n   then the browser url to use to login is `https://localhost:8091/aaa`. All browser requests for this tenant will be issued using urls starting\n   `https://localhost:8091/aaa`. \n     \n+## FOR NEW DEVELOPMENT (as of 8/25/2020)\n+ * Currently, the UI is not optimized to run in development mode. Developers must rebuild the static files every time a change is made.\n+ * Because of this, work is currently underway to remake the client with Create React App. This will be done iteratively, and updates posted here.\n+ * Old client code will be maintained until the cutover is complete, so developers can run the traditional way if desired.\n+ * The new client is maintained in the cra-client directory.\n+ * The new server is maintained in the cra-server directory.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MzA3Mw==", "bodyText": "What issues did you get? I will try later... it may be due to the way current versions of chrome do further validation. We hit some issues even for the base platform. Whilst the config work isn't complete, it does work (in chrome) and notes are at #1403. Specifically it could relate to the certificate you've used.\nOne option -- if we don't fix during PR, open up a new issue & fix it there", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484283073", "createdAt": "2020-09-07T08:43:52Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/README.md", "diffHunk": "@@ -54,6 +46,16 @@ the types of [Egeria OMAG Servers](../../admin-services/docs/concepts/omag-serve\n   then the browser url to use to login is `https://localhost:8091/aaa`. All browser requests for this tenant will be issued using urls starting\n   `https://localhost:8091/aaa`. \n     \n+## FOR NEW DEVELOPMENT (as of 8/25/2020)\n+ * Currently, the UI is not optimized to run in development mode. Developers must rebuild the static files every time a change is made.\n+ * Because of this, work is currently underway to remake the client with Create React App. This will be done iteratively, and updates posted here.\n+ * Old client code will be maintained until the cutover is complete, so developers can run the traditional way if desired.\n+ * The new client is maintained in the cra-client directory.\n+ * The new server is maintained in the cra-server directory.\n+ * Set up your environment by running `npm install` in both cra-client and cra-server.\n+ * Start the new UI by navigating into the cra-server directory, then running `npm start`.\n+ * Enter `https://localhost:3000/` to access the new UI in development mode.\n+ * Due to https, was only able to get it running properly using Firefox browser (no Chrome).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MzQzMA==", "bodyText": "be good to add comments on what the files are for (I realise, but for benefit of others)", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484283430", "createdAt": "2020-09-07T08:44:30Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-client/.env.sample", "diffHunk": "@@ -0,0 +1,8 @@\n+# SPDX-License-Identifier: Apache-2.0 \n+# Copyright Contributors to the ODPi Egeria project. \n+\n+# This file is a sample .env file that can be used by developers.\n+# Copy this file to a file called .env and modify the values as required\n+HTTPS=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4MzcyOQ==", "bodyText": "I've not tried the code - presume this will need changing when deployed?", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484283729", "createdAt": "2020-09-07T08:44:58Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-client/package.json", "diffHunk": "@@ -30,7 +30,8 @@\n     \"eject\": \"react-scripts eject\"\n   },\n   \"author\": \"Jacob Madsen\",\n-  \"license\": \"ISC\",\n+  \"license\": \"Apache-2.0\",\n+  \"proxy\": \"https://localhost:8091\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NDE5Ng==", "bodyText": "Can we reuse one of the existing egeria logos and keep the files in the same place, so that our branding is kept together?\nIf requried the extra file can be brought into the build tree by a maven step once we integrate the build (getting resources)", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484284196", "createdAt": "2020-09-07T08:45:43Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-client/public/index.html", "diffHunk": "@@ -5,7 +5,7 @@\n   <head>\n     <meta charset=\"utf-8\">\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n-    <link rel=\"shortcut icon\" href=\"%PUBLIC_URL%/favicon.ico\">\n+    <link rel=\"shortcut icon\" href=\"%PUBLIC_URL%/egeria_logo.png\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NDM5MQ==", "bodyText": "as above - can we reuse these icons from egeria core", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484284391", "createdAt": "2020-09-07T08:46:04Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-client/src/Frame.js", "diffHunk": "@@ -1,15 +1,17 @@\n /* SPDX-License-Identifier: Apache-2.0 */\n /* Copyright Contributors to the ODPi Egeria project. */\n-import React, { useContext } from \"react\";\n+import React, { useContext, useState } from \"react\";\n import Search20 from \"@carbon/icons-react/lib/search/20\";\n import Notification20 from \"@carbon/icons-react/lib/notification/20\";\n import AppSwitcher20 from \"@carbon/icons-react/lib/app-switcher/20\";\n+import { Logout32 } from \"@carbon/icons-react\";\n import HeaderContainer from \"carbon-components-react/lib/components/UIShell/HeaderContainer\";\n import { Content } from \"carbon-components-react/lib/components/UIShell\";\n import { Link, Route, Switch } from \"react-router-dom\";\n import Egeriawhite110 from \"./images/Egeria_logo_white_110\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NTU5Ng==", "bodyText": "is this intended for developer debugging or the end user debugging (both)? This looks ok - but need to be careful not to introduce any personally identifiable info (that isnt already obvious from the browser env)", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484285596", "createdAt": "2020-09-07T08:48:08Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-client/src/contexts/IdentificationContext.js", "diffHunk": "@@ -16,31 +17,28 @@ const IdentificationContextProvider = props => {\n    * Get the home url for the browser\n    */\n   const getBrowserURL = pageName => {\n-    if (process.env.NODE_ENV === \"development\") {\n-      return \"/\" + \"cocoView1\" + \"/\" + pageName;\n-    }\n     return \"/\" + serverName + \"/\" + pageName;\n   };\n   /**\n- * Get the url to use for rest calls \n- * @param {*} serviceName this is the viewservice name. \n- */\n-const getRestURL = (serviceName) => {\n-  const url =\n-    window.location.protocol +\n-    \"//\" +\n-    window.location.hostname +\n-    \":\" +\n-    window.location.port +\n-    \"/servers/\" +\n-    serverName +\n-    \"/\" +\n-    serviceName +\n-    \"/users/\" +\n-    userId;\n-    console.log(\"rest url is \", url);\n-  return url;\n-};\n+  * Get the url to use for rest calls \n+  * @param {*} serviceName this is the viewservice name. \n+  */\n+  const getRestURL = (serviceName) => {\n+    const url =\n+      window.location.protocol +\n+      \"//\" +\n+      window.location.hostname +\n+      \":\" +\n+      window.location.port +\n+      \"/servers/\" +\n+      serverName +\n+      \"/\" +\n+      serviceName +\n+      \"/users/\" +\n+      userId;\n+      console.log(\"rest url is \", url);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NjA0MA==", "bodyText": "When we build an image of this in a container, it should be easy to get this env var -- presumably that is all you are doing with .env. -- initializing the environment?", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484286040", "createdAt": "2020-09-07T08:48:55Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/.env_sample", "diffHunk": "@@ -0,0 +1,10 @@\n+# SPDX-License-Identifier: Apache-2.0 \n+# Copyright Contributors to the ODPi Egeria project. \n+\n+# This file is a sample .env file that can be used by developers.\n+# Copy this file to a file called .env and modify the values as required\n+# Each line configures a UI server (tenant) with the appropriate downstream server\n+#    \n+# In this example the first line configures a ui server called aaa with a remote server name of \"cocoView1\" and URL of \"https://localhost:9443\"\n+EGERIA_PRESENTATIONSERVER_SERVER_aaa={\"remoteServerName\":\"cocoView1\",\"remoteURL\":\"https://localhost:9443\"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4Njk3Mw==", "bodyText": "this is probably something we'll need to return to later (so we have consolidated certs/clear docs)- but should go with this for now", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484286973", "createdAt": "2020-09-07T08:50:31Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/index.js", "diffHunk": "@@ -0,0 +1,70 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+const express = require('express');\n+const fs = require(\"fs\");\n+const path = require(\"path\")\n+const session = require(\"express-session\");\n+const bodyParser = require(\"body-parser\");\n+let passport = require(\"passport\");\n+const https = require(\"https\");\n+const app = express();\n+require(\"dotenv\").config();\n+\n+const getServerInfoFromEnv = require('./functions/getServerInfoFromEnv');\n+const serverNameMiddleWare = require('./functions/serverNameMiddleware');\n+const passportConfiguration = require('./functions/passportConfiguration');\n+const loggedIn = require('./functions/loggedIn');\n+\n+const router = require('./router/routes');\n+\n+const PORT = process.env.PORT || 8091;\n+const env = process.env.NODE_ENV || 'development';\n+\n+\n+// ssl self signed certificate and key\n+const cert = fs.readFileSync(path.join(__dirname, '../') + \"/../presentation-server/ssl/keys/server.cert\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NzI3Nw==", "bodyText": "the port 3000 is hardcoded in log msg - should be ${PORT} ?", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484287277", "createdAt": "2020-09-07T08:51:00Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/index.js", "diffHunk": "@@ -0,0 +1,70 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+const express = require('express');\n+const fs = require(\"fs\");\n+const path = require(\"path\")\n+const session = require(\"express-session\");\n+const bodyParser = require(\"body-parser\");\n+let passport = require(\"passport\");\n+const https = require(\"https\");\n+const app = express();\n+require(\"dotenv\").config();\n+\n+const getServerInfoFromEnv = require('./functions/getServerInfoFromEnv');\n+const serverNameMiddleWare = require('./functions/serverNameMiddleware');\n+const passportConfiguration = require('./functions/passportConfiguration');\n+const loggedIn = require('./functions/loggedIn');\n+\n+const router = require('./router/routes');\n+\n+const PORT = process.env.PORT || 8091;\n+const env = process.env.NODE_ENV || 'development';\n+\n+\n+// ssl self signed certificate and key\n+const cert = fs.readFileSync(path.join(__dirname, '../') + \"/../presentation-server/ssl/keys/server.cert\");\n+const key = fs.readFileSync(path.join(__dirname, '../') + \"/../presentation-server/ssl/keys/server.key\");\n+const options = {\n+  key: key,\n+  cert: cert,\n+};\n+app.set('key', key);\n+app.set('cert', cert);\n+\n+const servers = getServerInfoFromEnv();\n+app.set('servers', servers);\n+\n+// This middleware method takes off the first segment which is the serverName and puts it into a query parameter\n+app.use((req, res, next) => serverNameMiddleWare(req, res, next));\n+\n+// Initialize Passport and restore authentication state, if any, from the\n+// session.\n+app.use(session({ secret: \"cats\", resave: false, saveUninitialized: false }));\n+app.use(bodyParser.urlencoded({ extended: true }));\n+app.use(bodyParser.json());\n+app.use(passport.initialize());\n+app.use(passport.session());\n+\n+// passport configuration\n+passport = passportConfiguration(passport);\n+// make initialized object available to routes\n+app.set('passport', passport)\n+\n+if (env === 'development') {\n+  // use React proxy routing\n+  // organize routes in another file\n+  app.use('/', router);\n+} else {\n+  // use Web Server routing for production build\n+\n+  // app.use(express.static(`${__dirname}/client/build`));\n+  app.use(express.static(path.join(__dirname, '../cra-client/build')));\n+  // app.all('*', (req, res, next) => res.sendFile(`${__dirname}/client/build/index.html`));\n+  app.all('*', (req, res, next) => res.sendFile(path.join(__dirname, '../cra-client/build/index.html')));\n+}\n+\n+// create the https server\n+https.createServer(options, app).listen(PORT, () => {\n+  console.log(`Server listening on port: ${PORT}`);\n+  if (env === 'development') console.log(`React UI listening on port: 3000`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NzY0MA==", "bodyText": "We should probably list it as 'Egeria contributors' or similar, we we do with the copyright", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484287640", "createdAt": "2020-09-07T08:51:39Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/package.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"name\": \"cra-server\",\n+  \"version\": \"1.0.0\",\n+  \"description\": \"Egeria Presentation Server\",\n+  \"main\": \"index.js\",\n+  \"scripts\": {\n+    \"start\": \"run-p start:server start:client\",\n+    \"start:server\": \"nodemon index.js\",\n+    \"start:client\": \"cd ../cra-client && npm start\",\n+    \"build\": \"cd ../cra-client && npm run build\",\n+    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n+  },\n+  \"author\": \"Jacob Madsen\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4OTQwMw==", "bodyText": "we may need to guard this or remove it if any potential for personally identifiable information", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484289403", "createdAt": "2020-09-07T08:54:41Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/router/routes.js", "diffHunk": "@@ -0,0 +1,275 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+const express = require('express');\n+const router = express.Router();\n+const path = require('path');\n+const axios = require('axios');\n+\n+const getAxiosInstance = require('../functions/getAxiosInstance');\n+const validateURL = require('../validations/validateURL');\n+const validateAdminURL = require('../validations/validateAdminURL');\n+\n+\n+router.get('/', (req, res) => {\n+  res.send('Egeria server is live!');\n+})\n+\n+/**\n+ * Middleware to handle post requests that start with /login i.e. the login request. The tenant segment has been removed by previous middleware. \n+ * The login is performed using passport' local authentication (http://www.passportjs.org/docs/authenticate/). \n+ * TODO support other authentication style e.g oauth and ldap both of which passport supports.\n+ */\n+router.post(\"/login\", function (req, res, next) {\n+  console.log(\"/login\");\n+  // get passport instance from app\n+  const passport = (req.app.get('passport'));\n+  passport.authenticate(\"local\", function (err, user, next) {\n+    if (err) {\n+      return next(err);\n+    }\n+    if (!user) {\n+      return res.json({ status: \"failed\", error: \"Invalid credentials\" });\n+    }\n+\n+    // req / res held in closure\n+    req.logIn(user, function (err) {\n+      if (err) {\n+        return next(err);\n+      }\n+\n+      return res.json({ status: \"success\" });\n+    });\n+  })(req, res, next);\n+});\n+\n+/**\n+ * logout - destroy the session\n+ */\n+router.get(\"/logout\", function (req, res) {\n+  console.log(\"/logout\");\n+  req.session.destroy(function (err) {\n+    // https://stackoverflow.com/questions/13758207/why-is-passportjs-in-node-not-removing-session-on-logout\n+    //  explicity clear the cookie.\n+    res.clearCookie(\"connect.sid\");\n+    console.log(\"re direct to /loggedOut\");\n+    res.redirect(\"/\" + req.query.serverName + \"/login\");\n+  });\n+});\n+\n+const staticJoinedPath = path.join(__dirname, \"../../dist\");\n+router.use(express.static(staticJoinedPath, { index: false }));\n+const joinedPath = path.join(__dirname, \"../../dist\", \"index.html\");\n+/**\n+ * Process login url,\n+ */\n+router.get(\"/login\", (req, res) => {\n+  console.log(\"/login called \" + joinedPath);\n+  res.sendFile(joinedPath);\n+});\n+\n+router.post(\"/servers/*\", (req, res) => {\n+  const incomingUrl = req.url;\n+  console.log(\"/servers/* post called \" + incomingUrl);\n+  const body = req.body;\n+  console.log(\"Got body:\", body);\n+  const servers = (req.app.get('servers'));\n+  if (validateURL(incomingUrl, servers)) {\n+    const instance = getAxiosInstance(incomingUrl);\n+    instance\n+      .post(\"\", body)\n+      .then(function (response) {\n+        console.log(\"response.data\");\n+        console.log(response.data);\n+        const resBody = response.data;\n+        res.setHeader(\"Content-Type\", \"application/json\");\n+        res.json(resBody);\n+      })\n+      .catch(function (error) {\n+        console.log(error);\n+        res.status(400).send(error);\n+      })\n+      .then(function () {\n+        // always executed\n+      });\n+  } else {\n+    res.status(400).send(\"Error, invalid supplied URL: \" + incomingUrl);\n+  }\n+});\n+\n+/**\n+ * Middleware to proxy put requests that start with /servers.\n+ * The outbound call is made with https. \n+ */\n+router.put(\"/servers/*\", (req, res) => {\n+  const incomingUrl = req.url;\n+  console.log(\"/servers/* put called \" + incomingUrl);\n+  const body = req.body;\n+  console.log(\"Got body:\", body);\n+  const servers = (req.app.get('servers'));\n+  if (validateURL(incomingUrl, servers)) {\n+    const instance = getAxiosInstance(incomingUrl);\n+    instance\n+      .put(\"\", body)\n+      .then(function (response) {\n+        console.log(\"response.data\");\n+        console.log(response.data);\n+        const resBody = response.data;\n+        res.setHeader(\"Content-Type\", \"application/json\");\n+        res.json(resBody);\n+      })\n+      .catch(function (error) {\n+        console.log(error);\n+        res.status(400).send(error);\n+      })\n+      .then(function () {\n+        // always executed\n+      });\n+  } else {\n+    res.status(400).send(\"Error, invalid supplied URL: \" + incomingUrl);\n+  }\n+});\n+\n+/**\n+ * Middleware to proxy delete requests that start with /servers.\n+ * The outbound call is made with https. \n+ */\n+router.delete(\"/servers/*\", (req, res) => {\n+  const incomingUrl = req.url;\n+  console.log(\"/servers/* delete called \" + incomingUrl);\n+  const servers = (req.app.get('servers'));\n+  if (validateURL(incomingUrl, servers)) {\n+    const instance = getAxiosInstance(incomingUrl);\n+    instance\n+      .delete()\n+      .then(function (response) {\n+        console.log(\"response.data\");\n+        console.log(response.data);\n+        const resBody = response.data;\n+        res.setHeader(\"Content-Type\", \"application/json\");\n+        res.json(resBody);\n+      })\n+      .catch(function (error) {\n+        console.log(error);\n+        res.status(400).send(error);\n+      })\n+      .then(function () {\n+        // always executed\n+      });\n+  } else {\n+    res.status(400).send(\"Error, invalid supplied URL: \" + incomingUrl);\n+  }\n+});\n+\n+/**\n+ * Middleware to proxy get requests that start with /servers.\n+ * The outbound call is made with https. \n+ */\n+router.get(\"/servers/*\", (req, res) => {\n+  const url = req.url;\n+  console.log(\"/servers/* get called \" + url);\n+  const servers = (req.app.get('servers'));\n+  if (validateURL(url, servers)) {\n+    const instance = getAxiosInstance(url);\n+    instance\n+      .get()\n+      .then(function (response) {\n+        console.log(\"response\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4OTkwOA==", "bodyText": "see comment above about certs - if we ship one may be useful to doc how. but can be later PR..", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r484289908", "createdAt": "2020-09-07T08:55:32Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/ssl/keys/server.cert", "diffHunk": "@@ -0,0 +1,22 @@\n+-----BEGIN CERTIFICATE-----\n+MIIDnjCCAoYCCQDR7DKQq8tpSzANBgkqhkiG9w0BAQsFADCBkDESMBAGA1UECAwJ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9379a6529bb35a009c33640e7a254b7dd7a98235"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d15fbb03d91d1360c886c29a1377f4ad36ee7fd", "author": {"user": null}, "url": "https://github.com/odpi/egeria/commit/1d15fbb03d91d1360c886c29a1377f4ad36ee7fd", "committedDate": "2020-09-07T14:34:15Z", "message": "minor updates in accordance to Nigel's comments in the PR\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "779cd429967a1bb2663d7fe9250c3d6a36b2556e", "author": {"user": {"login": "jmmadsen", "name": "Jacob Madsen"}}, "url": "https://github.com/odpi/egeria/commit/779cd429967a1bb2663d7fe9250c3d6a36b2556e", "committedDate": "2020-09-07T14:35:12Z", "message": "Merge branch 'master' into craFixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8306d0c9dd65aa4cbc65bfc28001063974f1b27", "author": {"user": null}, "url": "https://github.com/odpi/egeria/commit/c8306d0c9dd65aa4cbc65bfc28001063974f1b27", "committedDate": "2020-09-07T16:00:42Z", "message": "removed logging of potential PII\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e351dc79310604bed860bfafd45a2e36ccffc12", "author": {"user": null}, "url": "https://github.com/odpi/egeria/commit/6e351dc79310604bed860bfafd45a2e36ccffc12", "committedDate": "2020-09-07T16:01:03Z", "message": "Merge branch 'craFixed' of https://github.com/jmmadsen/egeria into craFixed\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7dab61b1d3901a7ae9347f7ad1315079995d943", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/f7dab61b1d3901a7ae9347f7ad1315079995d943", "committedDate": "2020-09-08T13:04:45Z", "message": "Merge branch 'master' into craFixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c41884216fd4304afecfb2182ea322b62b82259", "author": {"user": null}, "url": "https://github.com/odpi/egeria/commit/4c41884216fd4304afecfb2182ea322b62b82259", "committedDate": "2020-10-01T19:41:14Z", "message": "Merge remote-tracking branch 'upstream/master' into craFixed\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2137cc95e2e7082b19dcdd2046d43cb4c9b4c33", "author": {"user": null}, "url": "https://github.com/odpi/egeria/commit/e2137cc95e2e7082b19dcdd2046d43cb4c9b4c33", "committedDate": "2020-10-01T21:37:42Z", "message": "updated security vulnerabilities. added self-signed cert fix\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjU0Nzk1", "url": "https://github.com/odpi/egeria/pull/3573#pullrequestreview-502254795", "createdAt": "2020-10-05T17:06:41Z", "commit": {"oid": "e2137cc95e2e7082b19dcdd2046d43cb4c9b4c33"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzowNjo0MVrOHcmHwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoxMjo1N1rOHcmUow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0Njc1NA==", "bodyText": "this is reintroducing a different key - we've just fixed this for 2.3 and are using the same key as the rest of the UI - for now. recommend this change is removed", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r499746754", "createdAt": "2020-10-05T17:06:41Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/ssl/keys/server.key", "diffHunk": "@@ -0,0 +1,28 @@\n+-----BEGIN PRIVATE KEY-----", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2137cc95e2e7082b19dcdd2046d43cb4c9b4c33"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NjgxMA==", "bodyText": "this is reintroducing a different key - we've just fixed this for 2.3 and are using the same key as the rest of the UI - for now. recommend this change is removed", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r499746810", "createdAt": "2020-10-05T17:06:48Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/ssl/keys/server.cert", "diffHunk": "@@ -0,0 +1,22 @@\n+-----BEGIN CERTIFICATE-----\n+MIIDnjCCAoYCCQDR7DKQq8tpSzANBgkqhkiG9w0BAQsFADCBkDESMBAGA1UECAwJ\n+SGFtcHNoaXJlMRAwDgYDVQQHDAdIdXJzbGV5MRkwFwYDVQQKDBBMaW51eCBGb3Vu", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2137cc95e2e7082b19dcdd2046d43cb4c9b4c33"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NzU0OQ==", "bodyText": "This should have the egeria contributor statement in not individuals", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r499747549", "createdAt": "2020-10-05T17:08:11Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/package.json", "diffHunk": "@@ -0,0 +1,33 @@\n+{\n+  \"name\": \"cra-server\",\n+  \"version\": \"1.0.0\",\n+  \"description\": \"Egeria Presentation Server\",\n+  \"main\": \"index.js\",\n+  \"scripts\": {\n+    \"start\": \"run-p start:server start:client\",\n+    \"start:server\": \"nodemon index.js\",\n+    \"start:client\": \"cd ../cra-client && npm start\",\n+    \"build\": \"cd ../cra-client && npm run build\",\n+    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n+  },\n+  \"contributors\": [\n+    {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2137cc95e2e7082b19dcdd2046d43cb4c9b4c33"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NzcxMw==", "bodyText": "is this the final name?", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r499747713", "createdAt": "2020-10-05T17:08:31Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/package.json", "diffHunk": "@@ -0,0 +1,33 @@\n+{\n+  \"name\": \"cra-server\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2137cc95e2e7082b19dcdd2046d43cb4c9b4c33"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1MDA1MQ==", "bodyText": "search for 'webpack-build' in the pom.xml. This shows that currently we run webpack with the arguments --mode development --devtool inline-source-map in the nodejs directory. If this no longer works, those args/executions will need updating accordingly.\nthe file open-metadata-distribution/open-metadata-assemblies/src/main/assemblies/egeria-presentation-server.xml\nthen controls what gets put into an archive, which is then installed into a docker container which is defined in open-metadata-resources/open-metadata-deployment/docker/presentation-server . It is placed in /home/node/presentation-server & we start by running node src/server/index.js", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r499750051", "createdAt": "2020-10-05T17:12:57Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-server/package.json", "diffHunk": "@@ -0,0 +1,33 @@\n+{\n+  \"name\": \"cra-server\",\n+  \"version\": \"1.0.0\",\n+  \"description\": \"Egeria Presentation Server\",\n+  \"main\": \"index.js\",\n+  \"scripts\": {\n+    \"start\": \"run-p start:server start:client\",\n+    \"start:server\": \"nodemon index.js\",\n+    \"start:client\": \"cd ../cra-client && npm start\",\n+    \"build\": \"cd ../cra-client && npm run build\",\n+    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n+  },\n+  \"contributors\": [\n+    {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NzU0OQ=="}, "originalCommit": {"oid": "e2137cc95e2e7082b19dcdd2046d43cb4c9b4c33"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a520bf41ccbfa93762e2d331d8209a050d6eb3a", "author": {"user": null}, "url": "https://github.com/odpi/egeria/commit/2a520bf41ccbfa93762e2d331d8209a050d6eb3a", "committedDate": "2020-10-07T19:50:23Z", "message": "updated based on commit comments from graham. name convention changes and updating keys\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2d6c7afa6efd98a20586f71abeb79c4c76b6d39", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/e2d6c7afa6efd98a20586f71abeb79c4c76b6d39", "committedDate": "2020-10-08T10:27:09Z", "message": "Merge branch 'master' into craFixed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0ODY0MzQx", "url": "https://github.com/odpi/egeria/pull/3573#pullrequestreview-504864341", "createdAt": "2020-10-08T14:47:44Z", "commit": {"oid": "e2d6c7afa6efd98a20586f71abeb79c4c76b6d39"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDo0Nzo0NFrOHeiT7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDo0Nzo0NFrOHeiT7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc4MTQ4Nw==", "bodyText": "in the official documentation, here [0], it says that in order to deploy the generated build, production code, you should set up your favourite HTTP server and they offer an example using \"serve\" or a nodejs with express static folder approach.\nhaving this command [1] as a production command for starting the ui is actually starting a development server with HTTPS flag, adding --prod will also minify and uglify the code(as an example), but still, it is wrongly approached.\nreact-scripts should be used for development only and for bundling the code into production, like preparing the ENV variables and assets.\nit also tells here [2] that, and i quote,\n\nThis will simply start the basic, ExpressJS server included with the react-server package. It's not a total solution yet! Don't worry, we'll get there later in the guide.\n\nwhich means there should be at least another layer of nginx as they say in the tutorial later.\n[0] - https://create-react-app.dev/docs/deployment\n[1] - HTTPS=true react-scripts start\n[2] - https://react-server.io/docs/guides/production", "url": "https://github.com/odpi/egeria/pull/3573#discussion_r501781487", "createdAt": "2020-10-08T14:47:44Z", "author": {"login": "sarbull"}, "path": "open-metadata-implementation/user-interfaces/presentation-server/cra-client/package.json", "diffHunk": "@@ -24,13 +24,18 @@\n   },\n   \"devDependencies\": {},\n   \"scripts\": {\n-    \"start\": \"react-scripts start\",\n+    \"start\": \"HTTPS=true react-scripts start\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2d6c7afa6efd98a20586f71abeb79c4c76b6d39"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03032ab5b5d114c1bc5440580d8ec8cf2c2d297a", "author": {"user": null}, "url": "https://github.com/odpi/egeria/commit/03032ab5b5d114c1bc5440580d8ec8cf2c2d297a", "committedDate": "2020-10-08T14:51:38Z", "message": "removed HTTPS flag from start command in client\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "256c3d489a6525bbfef89335d6f7f578dfed7fda", "author": {"user": null}, "url": "https://github.com/odpi/egeria/commit/256c3d489a6525bbfef89335d6f7f578dfed7fda", "committedDate": "2020-10-08T14:52:02Z", "message": "Merge branch 'craFixed' of https://github.com/jmmadsen/egeria into craFixed\n\nSigned-off-by: JMadsen <jacob.madsen@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0673f056188e4786fe612a322d9d25048e77b118", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/0673f056188e4786fe612a322d9d25048e77b118", "committedDate": "2020-10-08T16:10:24Z", "message": "Merge branch 'master' into craFixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "348fed7885cfbcc7797abfb76942db3920306961", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/348fed7885cfbcc7797abfb76942db3920306961", "committedDate": "2020-10-09T08:33:36Z", "message": "Merge branch 'master' into craFixed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0a173af66a26e2f787f043565bb80c7d51bc9ba", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/f0a173af66a26e2f787f043565bb80c7d51bc9ba", "committedDate": "2020-10-09T09:36:07Z", "message": "Merge branch 'master' into craFixed"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3956, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}