{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NDg2MzA4", "number": 2592, "title": "Git2577 introduce view services", "bodyText": "I have renamed the enum around operation status so that the access and view services can use the same enum.\nI have started the documentation but it is not complete.", "createdAt": "2020-02-14T17:05:46Z", "url": "https://github.com/odpi/egeria/pull/2592", "merged": true, "mergeCommit": {"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf"}, "closed": true, "closedAt": "2020-02-21T12:18:58Z", "author": {"login": "davidradl"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcESEDjAH2gAyMzc1NDg2MzA4OmM5ODNlYWExYWE4NmY3NjZlMjU3OGYwYzMxMGEzNTc1OGQzMTY4MWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGeSivAH2gAyMzc1NDg2MzA4Ojg4ODUxY2EyYTBiNDAwMjNlMmJjNTFlNGRlYzBlZGIxNTQ2YjFmNzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c983eaa1aa86f766e2578f0c310a35758d31681e", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/c983eaa1aa86f766e2578f0c310a35758d31681e", "committedDate": "2020-02-14T16:24:30Z", "message": "#2577 add view services\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fa9ec9ee7a2dd4fba09355b531f4ea07f5ff86f", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/5fa9ec9ee7a2dd4fba09355b531f4ea07f5ff86f", "committedDate": "2020-02-14T16:55:25Z", "message": "#2577 add view services documentation\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f4faad62d57932035a6c0aa34ac728deae9846b", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/5f4faad62d57932035a6c0aa34ac728deae9846b", "committedDate": "2020-02-14T17:02:09Z", "message": "#2577 merge from master\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c111e9f12c5166f01b7c401ab6b98fd159718ff", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/7c111e9f12c5166f01b7c401ab6b98fd159718ff", "committedDate": "2020-02-14T17:13:22Z", "message": "#2577 resolve a conflict from master\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MDkxMDgx", "url": "https://github.com/odpi/egeria/pull/2592#pullrequestreview-359091081", "createdAt": "2020-02-14T17:09:10Z", "commit": {"oid": "5f4faad62d57932035a6c0aa34ac728deae9846b"}, "state": "DISMISSED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzowOToxMFrOFp9oVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzoxNTo0OVrOFp9z7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU0NTY4NA==", "bodyText": "Ooops - merge failure", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379545684", "createdAt": "2020-02-14T17:09:10Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/adapters/open-connectors/configuration-store-connectors/pom.xml", "diffHunk": "@@ -41,12 +41,16 @@\n             <artifactId>admin-services-api</artifactId>\n         </dependency>\n \n+<<<<<<< HEAD", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f4faad62d57932035a6c0aa34ac728deae9846b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU0NjM1MQ==", "bodyText": "We need to add a new section to all poms\nSee the  section which is now in all of them.", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379546351", "createdAt": "2020-02-14T17:10:48Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/view-services/pom.xml", "diffHunk": "@@ -0,0 +1,27 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!-- SPDX-License-Identifier: Apache-2.0 -->\n+<!-- Copyright Contributors to the ODPi Egeria project. -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f4faad62d57932035a6c0aa34ac728deae9846b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU0NjU5Ng==", "bodyText": "we now need a  section - see the other poms and just copy in", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379546596", "createdAt": "2020-02-14T17:11:14Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/view-services/subject-area-view/pom.xml", "diffHunk": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!-- SPDX-License-Identifier: Apache-2.0 -->\n+<!-- Copyright Contributors to the ODPi Egeria project. -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f4faad62d57932035a6c0aa34ac728deae9846b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU0NzI0NQ==", "bodyText": "Governance engine?", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379547245", "createdAt": "2020-02-14T17:12:39Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java", "diffHunk": "@@ -0,0 +1,169 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.viewservices.subjectarea.auditlog;\n+\n+\n+import org.odpi.openmetadata.repositoryservices.auditlog.OMRSAuditLogRecordSeverity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+\n+/**\n+ * The SubjectAreaAuditCode is used to define the message content for the OMRS Audit Log.\n+ *\n+ * The 5 fields in the enum are:\n+ * <ul>\n+ *     <li>Log Message Id - to uniquely identify the message</li>\n+ *     <li>Severity - is this an event, decision, action, error or exception</li>\n+ *     <li>Log Message Text - includes placeholder to allow additional values to be captured</li>\n+ *     <li>Additional Information - further parameters and data relating to the audit message (optional)</li>\n+ *     <li>SystemAction - describes the result of the situation</li>\n+ *     <li>UserAction - describes how a user should correct the situation</li>\n+ * </ul>\n+ */\n+\n+\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+\n+public enum SubjectAreaViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Open Metadata Access Service (OMVS) is initializing\",\n+            \"The local server has started up the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+\n+    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Open Metadata Access Service (OMVS) is initialized\",\n+            \"The Subject Area OMVS has completed initialization.\",\n+            \"No action is required. This is part of the normal operation of the  Subject Area OMVS.\"),\n+\n+    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Subject Area View Open Metadata Access Service (OMVS) is shutting down\",\n+            \"The local server has requested shut down of the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the  Subject Area OMVS.\"),\n+\n+\n+    SERVICE_INSTANCE_FAILURE(\"OMVS-SUBJECT-AREA-0032\",\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The Subject Area View Open Metadata Access Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n+            \"The view service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n+    SERVICE_TERMINATING(\"OMVS-SUBJECT-AREA-0033\",\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Subject Area View Open Metadata Access Service (OMVS) is shutting down server instance {0}\",\n+            \"The local handlers has requested shut down of the Governance Engine OMAS.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f4faad62d57932035a6c0aa34ac728deae9846b"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU0Nzg3NQ==", "bodyText": "Why have you zapped this?\nThis must not be removed. Merge error?", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379547875", "createdAt": "2020-02-14T17:14:05Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/view-services/subject-area-view/subject-area-view-spring/pom.xml", "diffHunk": "@@ -7,42 +7,37 @@\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n     <parent>\n-        <artifactId>ui-admin-services</artifactId>\n+        <artifactId>subject-area-view</artifactId>\n         <groupId>org.odpi.egeria</groupId>\n         <version>1.5-SNAPSHOT</version>\n     </parent>\n     <modelVersion>4.0.0</modelVersion>\n \n-    <scm>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f4faad62d57932035a6c0aa34ac728deae9846b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU0ODY1NQ==", "bodyText": "I think we might be able to do without this. You just need the servlet API\nSee #2267\nAlso consider that since the servlet implementation is PROVIDED by spring boot, it may be possible to express the dependency as  which just means 'it will be there' .. ;-)", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379548655", "createdAt": "2020-02-14T17:15:49Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/view-services/subject-area-view/subject-area-view-spring/pom.xml", "diffHunk": "@@ -7,42 +7,37 @@\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n     <parent>\n-        <artifactId>ui-admin-services</artifactId>\n+        <artifactId>subject-area-view</artifactId>\n         <groupId>org.odpi.egeria</groupId>\n         <version>1.5-SNAPSHOT</version>\n     </parent>\n     <modelVersion>4.0.0</modelVersion>\n \n-    <scm>\n-        <connection>scm:git:git://github.com/odpi/egeria.git</connection>\n-        <developerConnection>scm:git:ssh://github.com/odpi/egeria.git</developerConnection>\n-        <url>http://github.com/odpi/egeria/tree/master</url>\n-    </scm>\n-\n-    <artifactId>ui-admin-services-client</artifactId>\n-\n-    <name>User Interface Administration Services Client</name>\n-    <description>\n-        Provides a Java client for the open metadata ui administration services.\n-    </description>\n+    <artifactId>subject-area-view-spring</artifactId>\n \n     <dependencies>\n \n         <dependency>\n             <groupId>org.odpi.egeria</groupId>\n-            <artifactId>ui-admin-services-api</artifactId>\n+            <artifactId>subject-area-view-server</artifactId>\n         </dependency>\n \n         <dependency>\n             <groupId>org.odpi.egeria</groupId>\n-            <artifactId>admin-services-api</artifactId>\n+            <artifactId>subject-area-api</artifactId>\n         </dependency>\n \n         <dependency>\n-            <groupId>org.odpi.egeria</groupId>\n-            <artifactId>ffdc-services</artifactId>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-web</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.apache.tomcat.embed</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f4faad62d57932035a6c0aa34ac728deae9846b"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40aff8bb62f44971134f18574bf936052a59f24c", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/40aff8bb62f44971134f18574bf936052a59f24c", "committedDate": "2020-02-14T17:28:13Z", "message": "#2577 addressing Nigels feedback\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MTU5Nzg5", "url": "https://github.com/odpi/egeria/pull/2592#pullrequestreview-359159789", "createdAt": "2020-02-14T19:12:11Z", "commit": {"oid": "40aff8bb62f44971134f18574bf936052a59f24c"}, "state": "DISMISSED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOToxMjoxMVrOFqA2uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTozMTowM1rOFqBW9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5ODUyMw==", "bodyText": "This should probably be setServiceCode rather than setserviceCode (?)", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379598523", "createdAt": "2020-02-14T19:12:11Z", "author": {"login": "cmgrote"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.configuration.registration;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * ServiceRegistration is used by a service to register its admin services interface.\n+ */\n+public class ServiceRegistration implements Serializable\n+{\n+    private static final long     serialVersionUID    = 1L;\n+    private static final String   defaultTopicRoot    = \"omas.\";\n+    private static final String   defaultInTopicLeaf  = \".inTopic\";\n+    private static final String   defaultOutTopicLeaf = \".outTopic\";\n+\n+\n+    private int                            serviceCode;\n+    private String                         serviceName;\n+    private String                         serviceFullName;\n+    private String                         serviceURLMarker;\n+    private String                         serviceDescription;\n+    private String                         serviceWiki;\n+    private ServiceOperationalStatus       serviceOperationalStatus;\n+    private String                         serviceAdminClassName;\n+\n+    /**\n+     * Complete Constructor\n+     *\n+     * @param serviceCode ordinal for this access service\n+     * @param serviceName symbolic name for this access service\n+     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n+     * @param serviceDescription short description for this access service\n+     * @param serviceWiki wiki page for the access service for this access service\n+     * @param serviceOperationalStatus default initial operational status for the access service\n+     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(int                            serviceCode,\n+                                     String                         serviceName,\n+                                     String                         serviceFullName,\n+                                     String                         serviceURLMarker,\n+                                     String                         serviceDescription,\n+                                     String                         serviceWiki,\n+                                     ServiceOperationalStatus       serviceOperationalStatus,\n+                                     String                         serviceAdminClassName)\n+    {\n+        this.serviceCode = serviceCode;\n+        this.serviceName = serviceName;\n+        this.serviceFullName = serviceFullName;\n+        this.serviceURLMarker = serviceURLMarker;\n+        this.serviceDescription = serviceDescription;\n+        this.serviceWiki = serviceWiki;\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+        this.serviceAdminClassName = serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Access Service Enum Constructor\n+     *\n+     * @param accessServiceDescription enum for this access service\n+     * @param accessServiceOperationalStatus default initial operational status for the access service\n+     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n+                               ServiceOperationalStatus       accessServiceOperationalStatus,\n+                               String                         accessServiceAdminClassName)\n+    {\n+        this(accessServiceDescription.getAccessServiceCode(),\n+             accessServiceDescription.getAccessServiceName(),\n+             accessServiceDescription.getAccessServiceFullName(),\n+             accessServiceDescription.getAccessServiceURLMarker(),\n+             accessServiceDescription.getAccessServiceDescription(),\n+             accessServiceDescription.getAccessServiceWiki(),\n+             accessServiceOperationalStatus,\n+             accessServiceAdminClassName);\n+    }\n+\n+    /**\n+     * View Service Enum Constructor\n+     *\n+     * @param viewServiceDescription enum for this view service\n+     * @param viewServiceOperationalStatus default initial operational status for the view service\n+     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n+     */\n+    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n+                               ServiceOperationalStatus viewServiceOperationalStatus,\n+                               String                         viewServiceAdminClassName)\n+    {\n+        this(viewServiceDescription.getViewServiceCode(),\n+                viewServiceDescription.getViewServiceName(),\n+                viewServiceDescription.getViewServiceFullName(),\n+                viewServiceDescription.getViewServiceURLMarker(),\n+                viewServiceDescription.getViewServiceDescription(),\n+                viewServiceDescription.getViewServiceWiki(),\n+                viewServiceOperationalStatus,\n+                viewServiceAdminClassName);\n+    }\n+\n+\n+    /**\n+     * Default constructor\n+     */\n+    public ServiceRegistration()\n+    {\n+    }\n+\n+    /**\n+     * Return the code for this  service\n+     *\n+     * @return int type code\n+     */\n+    public int getServiceCode()\n+    {\n+        return serviceCode;\n+    }\n+\n+\n+    /**\n+     * Set up the code for this  service\n+     *\n+     * @param serviceCode  int type code\n+     */\n+    public void setserviceCode(int serviceCode)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40aff8bb62f44971134f18574bf936052a59f24c"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5ODY4OA==", "bodyText": "This should probably be setServiceName rather than setserviceName (?)", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379598688", "createdAt": "2020-02-14T19:12:31Z", "author": {"login": "cmgrote"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.configuration.registration;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * ServiceRegistration is used by a service to register its admin services interface.\n+ */\n+public class ServiceRegistration implements Serializable\n+{\n+    private static final long     serialVersionUID    = 1L;\n+    private static final String   defaultTopicRoot    = \"omas.\";\n+    private static final String   defaultInTopicLeaf  = \".inTopic\";\n+    private static final String   defaultOutTopicLeaf = \".outTopic\";\n+\n+\n+    private int                            serviceCode;\n+    private String                         serviceName;\n+    private String                         serviceFullName;\n+    private String                         serviceURLMarker;\n+    private String                         serviceDescription;\n+    private String                         serviceWiki;\n+    private ServiceOperationalStatus       serviceOperationalStatus;\n+    private String                         serviceAdminClassName;\n+\n+    /**\n+     * Complete Constructor\n+     *\n+     * @param serviceCode ordinal for this access service\n+     * @param serviceName symbolic name for this access service\n+     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n+     * @param serviceDescription short description for this access service\n+     * @param serviceWiki wiki page for the access service for this access service\n+     * @param serviceOperationalStatus default initial operational status for the access service\n+     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(int                            serviceCode,\n+                                     String                         serviceName,\n+                                     String                         serviceFullName,\n+                                     String                         serviceURLMarker,\n+                                     String                         serviceDescription,\n+                                     String                         serviceWiki,\n+                                     ServiceOperationalStatus       serviceOperationalStatus,\n+                                     String                         serviceAdminClassName)\n+    {\n+        this.serviceCode = serviceCode;\n+        this.serviceName = serviceName;\n+        this.serviceFullName = serviceFullName;\n+        this.serviceURLMarker = serviceURLMarker;\n+        this.serviceDescription = serviceDescription;\n+        this.serviceWiki = serviceWiki;\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+        this.serviceAdminClassName = serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Access Service Enum Constructor\n+     *\n+     * @param accessServiceDescription enum for this access service\n+     * @param accessServiceOperationalStatus default initial operational status for the access service\n+     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n+                               ServiceOperationalStatus       accessServiceOperationalStatus,\n+                               String                         accessServiceAdminClassName)\n+    {\n+        this(accessServiceDescription.getAccessServiceCode(),\n+             accessServiceDescription.getAccessServiceName(),\n+             accessServiceDescription.getAccessServiceFullName(),\n+             accessServiceDescription.getAccessServiceURLMarker(),\n+             accessServiceDescription.getAccessServiceDescription(),\n+             accessServiceDescription.getAccessServiceWiki(),\n+             accessServiceOperationalStatus,\n+             accessServiceAdminClassName);\n+    }\n+\n+    /**\n+     * View Service Enum Constructor\n+     *\n+     * @param viewServiceDescription enum for this view service\n+     * @param viewServiceOperationalStatus default initial operational status for the view service\n+     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n+     */\n+    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n+                               ServiceOperationalStatus viewServiceOperationalStatus,\n+                               String                         viewServiceAdminClassName)\n+    {\n+        this(viewServiceDescription.getViewServiceCode(),\n+                viewServiceDescription.getViewServiceName(),\n+                viewServiceDescription.getViewServiceFullName(),\n+                viewServiceDescription.getViewServiceURLMarker(),\n+                viewServiceDescription.getViewServiceDescription(),\n+                viewServiceDescription.getViewServiceWiki(),\n+                viewServiceOperationalStatus,\n+                viewServiceAdminClassName);\n+    }\n+\n+\n+    /**\n+     * Default constructor\n+     */\n+    public ServiceRegistration()\n+    {\n+    }\n+\n+    /**\n+     * Return the code for this  service\n+     *\n+     * @return int type code\n+     */\n+    public int getServiceCode()\n+    {\n+        return serviceCode;\n+    }\n+\n+\n+    /**\n+     * Set up the code for this  service\n+     *\n+     * @param serviceCode  int type code\n+     */\n+    public void setserviceCode(int serviceCode)\n+    {\n+        this.serviceCode = serviceCode;\n+    }\n+\n+\n+    /**\n+     * Return the default name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceName()\n+    {\n+        return serviceName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the default name for this  service.\n+     *\n+     * @param serviceName  String default name\n+     */\n+    public void setserviceName(String serviceName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40aff8bb62f44971134f18574bf936052a59f24c"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5ODgzMQ==", "bodyText": "setServiceFullName", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379598831", "createdAt": "2020-02-14T19:12:48Z", "author": {"login": "cmgrote"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.configuration.registration;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * ServiceRegistration is used by a service to register its admin services interface.\n+ */\n+public class ServiceRegistration implements Serializable\n+{\n+    private static final long     serialVersionUID    = 1L;\n+    private static final String   defaultTopicRoot    = \"omas.\";\n+    private static final String   defaultInTopicLeaf  = \".inTopic\";\n+    private static final String   defaultOutTopicLeaf = \".outTopic\";\n+\n+\n+    private int                            serviceCode;\n+    private String                         serviceName;\n+    private String                         serviceFullName;\n+    private String                         serviceURLMarker;\n+    private String                         serviceDescription;\n+    private String                         serviceWiki;\n+    private ServiceOperationalStatus       serviceOperationalStatus;\n+    private String                         serviceAdminClassName;\n+\n+    /**\n+     * Complete Constructor\n+     *\n+     * @param serviceCode ordinal for this access service\n+     * @param serviceName symbolic name for this access service\n+     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n+     * @param serviceDescription short description for this access service\n+     * @param serviceWiki wiki page for the access service for this access service\n+     * @param serviceOperationalStatus default initial operational status for the access service\n+     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(int                            serviceCode,\n+                                     String                         serviceName,\n+                                     String                         serviceFullName,\n+                                     String                         serviceURLMarker,\n+                                     String                         serviceDescription,\n+                                     String                         serviceWiki,\n+                                     ServiceOperationalStatus       serviceOperationalStatus,\n+                                     String                         serviceAdminClassName)\n+    {\n+        this.serviceCode = serviceCode;\n+        this.serviceName = serviceName;\n+        this.serviceFullName = serviceFullName;\n+        this.serviceURLMarker = serviceURLMarker;\n+        this.serviceDescription = serviceDescription;\n+        this.serviceWiki = serviceWiki;\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+        this.serviceAdminClassName = serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Access Service Enum Constructor\n+     *\n+     * @param accessServiceDescription enum for this access service\n+     * @param accessServiceOperationalStatus default initial operational status for the access service\n+     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n+                               ServiceOperationalStatus       accessServiceOperationalStatus,\n+                               String                         accessServiceAdminClassName)\n+    {\n+        this(accessServiceDescription.getAccessServiceCode(),\n+             accessServiceDescription.getAccessServiceName(),\n+             accessServiceDescription.getAccessServiceFullName(),\n+             accessServiceDescription.getAccessServiceURLMarker(),\n+             accessServiceDescription.getAccessServiceDescription(),\n+             accessServiceDescription.getAccessServiceWiki(),\n+             accessServiceOperationalStatus,\n+             accessServiceAdminClassName);\n+    }\n+\n+    /**\n+     * View Service Enum Constructor\n+     *\n+     * @param viewServiceDescription enum for this view service\n+     * @param viewServiceOperationalStatus default initial operational status for the view service\n+     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n+     */\n+    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n+                               ServiceOperationalStatus viewServiceOperationalStatus,\n+                               String                         viewServiceAdminClassName)\n+    {\n+        this(viewServiceDescription.getViewServiceCode(),\n+                viewServiceDescription.getViewServiceName(),\n+                viewServiceDescription.getViewServiceFullName(),\n+                viewServiceDescription.getViewServiceURLMarker(),\n+                viewServiceDescription.getViewServiceDescription(),\n+                viewServiceDescription.getViewServiceWiki(),\n+                viewServiceOperationalStatus,\n+                viewServiceAdminClassName);\n+    }\n+\n+\n+    /**\n+     * Default constructor\n+     */\n+    public ServiceRegistration()\n+    {\n+    }\n+\n+    /**\n+     * Return the code for this  service\n+     *\n+     * @return int type code\n+     */\n+    public int getServiceCode()\n+    {\n+        return serviceCode;\n+    }\n+\n+\n+    /**\n+     * Set up the code for this  service\n+     *\n+     * @param serviceCode  int type code\n+     */\n+    public void setserviceCode(int serviceCode)\n+    {\n+        this.serviceCode = serviceCode;\n+    }\n+\n+\n+    /**\n+     * Return the default name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceName()\n+    {\n+        return serviceName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the default name for this  service.\n+     *\n+     * @param serviceName  String default name\n+     */\n+    public void setserviceName(String serviceName)\n+    {\n+        this.serviceName = serviceName;\n+    }\n+\n+\n+    /**\n+     * Return the full name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceFullName()\n+    {\n+        return serviceFullName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the full name for this  service.\n+     *\n+     * @param serviceFullName  String default name\n+     */\n+    public void setserviceFullName(String serviceFullName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40aff8bb62f44971134f18574bf936052a59f24c"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5ODkzMg==", "bodyText": "setServiceDescription", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379598932", "createdAt": "2020-02-14T19:13:04Z", "author": {"login": "cmgrote"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.configuration.registration;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * ServiceRegistration is used by a service to register its admin services interface.\n+ */\n+public class ServiceRegistration implements Serializable\n+{\n+    private static final long     serialVersionUID    = 1L;\n+    private static final String   defaultTopicRoot    = \"omas.\";\n+    private static final String   defaultInTopicLeaf  = \".inTopic\";\n+    private static final String   defaultOutTopicLeaf = \".outTopic\";\n+\n+\n+    private int                            serviceCode;\n+    private String                         serviceName;\n+    private String                         serviceFullName;\n+    private String                         serviceURLMarker;\n+    private String                         serviceDescription;\n+    private String                         serviceWiki;\n+    private ServiceOperationalStatus       serviceOperationalStatus;\n+    private String                         serviceAdminClassName;\n+\n+    /**\n+     * Complete Constructor\n+     *\n+     * @param serviceCode ordinal for this access service\n+     * @param serviceName symbolic name for this access service\n+     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n+     * @param serviceDescription short description for this access service\n+     * @param serviceWiki wiki page for the access service for this access service\n+     * @param serviceOperationalStatus default initial operational status for the access service\n+     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(int                            serviceCode,\n+                                     String                         serviceName,\n+                                     String                         serviceFullName,\n+                                     String                         serviceURLMarker,\n+                                     String                         serviceDescription,\n+                                     String                         serviceWiki,\n+                                     ServiceOperationalStatus       serviceOperationalStatus,\n+                                     String                         serviceAdminClassName)\n+    {\n+        this.serviceCode = serviceCode;\n+        this.serviceName = serviceName;\n+        this.serviceFullName = serviceFullName;\n+        this.serviceURLMarker = serviceURLMarker;\n+        this.serviceDescription = serviceDescription;\n+        this.serviceWiki = serviceWiki;\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+        this.serviceAdminClassName = serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Access Service Enum Constructor\n+     *\n+     * @param accessServiceDescription enum for this access service\n+     * @param accessServiceOperationalStatus default initial operational status for the access service\n+     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n+                               ServiceOperationalStatus       accessServiceOperationalStatus,\n+                               String                         accessServiceAdminClassName)\n+    {\n+        this(accessServiceDescription.getAccessServiceCode(),\n+             accessServiceDescription.getAccessServiceName(),\n+             accessServiceDescription.getAccessServiceFullName(),\n+             accessServiceDescription.getAccessServiceURLMarker(),\n+             accessServiceDescription.getAccessServiceDescription(),\n+             accessServiceDescription.getAccessServiceWiki(),\n+             accessServiceOperationalStatus,\n+             accessServiceAdminClassName);\n+    }\n+\n+    /**\n+     * View Service Enum Constructor\n+     *\n+     * @param viewServiceDescription enum for this view service\n+     * @param viewServiceOperationalStatus default initial operational status for the view service\n+     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n+     */\n+    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n+                               ServiceOperationalStatus viewServiceOperationalStatus,\n+                               String                         viewServiceAdminClassName)\n+    {\n+        this(viewServiceDescription.getViewServiceCode(),\n+                viewServiceDescription.getViewServiceName(),\n+                viewServiceDescription.getViewServiceFullName(),\n+                viewServiceDescription.getViewServiceURLMarker(),\n+                viewServiceDescription.getViewServiceDescription(),\n+                viewServiceDescription.getViewServiceWiki(),\n+                viewServiceOperationalStatus,\n+                viewServiceAdminClassName);\n+    }\n+\n+\n+    /**\n+     * Default constructor\n+     */\n+    public ServiceRegistration()\n+    {\n+    }\n+\n+    /**\n+     * Return the code for this  service\n+     *\n+     * @return int type code\n+     */\n+    public int getServiceCode()\n+    {\n+        return serviceCode;\n+    }\n+\n+\n+    /**\n+     * Set up the code for this  service\n+     *\n+     * @param serviceCode  int type code\n+     */\n+    public void setserviceCode(int serviceCode)\n+    {\n+        this.serviceCode = serviceCode;\n+    }\n+\n+\n+    /**\n+     * Return the default name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceName()\n+    {\n+        return serviceName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the default name for this  service.\n+     *\n+     * @param serviceName  String default name\n+     */\n+    public void setserviceName(String serviceName)\n+    {\n+        this.serviceName = serviceName;\n+    }\n+\n+\n+    /**\n+     * Return the full name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceFullName()\n+    {\n+        return serviceFullName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the full name for this  service.\n+     *\n+     * @param serviceFullName  String default name\n+     */\n+    public void setserviceFullName(String serviceFullName)\n+    {\n+        this.serviceFullName = serviceFullName;\n+    }\n+\n+\n+    /**\n+     * Return the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceURLMarker()\n+    {\n+        return serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Set up the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @param serviceURLMarker url fragment\n+     */\n+    public void setServiceURLMarker(String serviceURLMarker)\n+    {\n+        this.serviceURLMarker = serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Return the default description for the type for this  service.\n+     *\n+     * @return String default description\n+     */\n+    public String getServiceDescription()\n+    {\n+        return serviceDescription;\n+    }\n+\n+\n+    /**\n+     * Set up the default description for the type for this  service.\n+     *\n+     * @param serviceDescription  String default description\n+     */\n+    public void setserviceDescription(String serviceDescription)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40aff8bb62f44971134f18574bf936052a59f24c"}, "originalPosition": 216}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5OTAzMg==", "bodyText": "setServiceWiki", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379599032", "createdAt": "2020-02-14T19:13:18Z", "author": {"login": "cmgrote"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.configuration.registration;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * ServiceRegistration is used by a service to register its admin services interface.\n+ */\n+public class ServiceRegistration implements Serializable\n+{\n+    private static final long     serialVersionUID    = 1L;\n+    private static final String   defaultTopicRoot    = \"omas.\";\n+    private static final String   defaultInTopicLeaf  = \".inTopic\";\n+    private static final String   defaultOutTopicLeaf = \".outTopic\";\n+\n+\n+    private int                            serviceCode;\n+    private String                         serviceName;\n+    private String                         serviceFullName;\n+    private String                         serviceURLMarker;\n+    private String                         serviceDescription;\n+    private String                         serviceWiki;\n+    private ServiceOperationalStatus       serviceOperationalStatus;\n+    private String                         serviceAdminClassName;\n+\n+    /**\n+     * Complete Constructor\n+     *\n+     * @param serviceCode ordinal for this access service\n+     * @param serviceName symbolic name for this access service\n+     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n+     * @param serviceDescription short description for this access service\n+     * @param serviceWiki wiki page for the access service for this access service\n+     * @param serviceOperationalStatus default initial operational status for the access service\n+     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(int                            serviceCode,\n+                                     String                         serviceName,\n+                                     String                         serviceFullName,\n+                                     String                         serviceURLMarker,\n+                                     String                         serviceDescription,\n+                                     String                         serviceWiki,\n+                                     ServiceOperationalStatus       serviceOperationalStatus,\n+                                     String                         serviceAdminClassName)\n+    {\n+        this.serviceCode = serviceCode;\n+        this.serviceName = serviceName;\n+        this.serviceFullName = serviceFullName;\n+        this.serviceURLMarker = serviceURLMarker;\n+        this.serviceDescription = serviceDescription;\n+        this.serviceWiki = serviceWiki;\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+        this.serviceAdminClassName = serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Access Service Enum Constructor\n+     *\n+     * @param accessServiceDescription enum for this access service\n+     * @param accessServiceOperationalStatus default initial operational status for the access service\n+     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n+                               ServiceOperationalStatus       accessServiceOperationalStatus,\n+                               String                         accessServiceAdminClassName)\n+    {\n+        this(accessServiceDescription.getAccessServiceCode(),\n+             accessServiceDescription.getAccessServiceName(),\n+             accessServiceDescription.getAccessServiceFullName(),\n+             accessServiceDescription.getAccessServiceURLMarker(),\n+             accessServiceDescription.getAccessServiceDescription(),\n+             accessServiceDescription.getAccessServiceWiki(),\n+             accessServiceOperationalStatus,\n+             accessServiceAdminClassName);\n+    }\n+\n+    /**\n+     * View Service Enum Constructor\n+     *\n+     * @param viewServiceDescription enum for this view service\n+     * @param viewServiceOperationalStatus default initial operational status for the view service\n+     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n+     */\n+    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n+                               ServiceOperationalStatus viewServiceOperationalStatus,\n+                               String                         viewServiceAdminClassName)\n+    {\n+        this(viewServiceDescription.getViewServiceCode(),\n+                viewServiceDescription.getViewServiceName(),\n+                viewServiceDescription.getViewServiceFullName(),\n+                viewServiceDescription.getViewServiceURLMarker(),\n+                viewServiceDescription.getViewServiceDescription(),\n+                viewServiceDescription.getViewServiceWiki(),\n+                viewServiceOperationalStatus,\n+                viewServiceAdminClassName);\n+    }\n+\n+\n+    /**\n+     * Default constructor\n+     */\n+    public ServiceRegistration()\n+    {\n+    }\n+\n+    /**\n+     * Return the code for this  service\n+     *\n+     * @return int type code\n+     */\n+    public int getServiceCode()\n+    {\n+        return serviceCode;\n+    }\n+\n+\n+    /**\n+     * Set up the code for this  service\n+     *\n+     * @param serviceCode  int type code\n+     */\n+    public void setserviceCode(int serviceCode)\n+    {\n+        this.serviceCode = serviceCode;\n+    }\n+\n+\n+    /**\n+     * Return the default name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceName()\n+    {\n+        return serviceName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the default name for this  service.\n+     *\n+     * @param serviceName  String default name\n+     */\n+    public void setserviceName(String serviceName)\n+    {\n+        this.serviceName = serviceName;\n+    }\n+\n+\n+    /**\n+     * Return the full name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceFullName()\n+    {\n+        return serviceFullName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the full name for this  service.\n+     *\n+     * @param serviceFullName  String default name\n+     */\n+    public void setserviceFullName(String serviceFullName)\n+    {\n+        this.serviceFullName = serviceFullName;\n+    }\n+\n+\n+    /**\n+     * Return the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceURLMarker()\n+    {\n+        return serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Set up the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @param serviceURLMarker url fragment\n+     */\n+    public void setServiceURLMarker(String serviceURLMarker)\n+    {\n+        this.serviceURLMarker = serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Return the default description for the type for this  service.\n+     *\n+     * @return String default description\n+     */\n+    public String getServiceDescription()\n+    {\n+        return serviceDescription;\n+    }\n+\n+\n+    /**\n+     * Set up the default description for the type for this  service.\n+     *\n+     * @param serviceDescription  String default description\n+     */\n+    public void setserviceDescription(String serviceDescription)\n+    {\n+        this.serviceDescription = serviceDescription;\n+    }\n+\n+\n+    /**\n+     * Return the URL for the wiki page describing this  service.\n+     *\n+     * @return String URL name for the wiki page\n+     */\n+    public String getServiceWiki()\n+    {\n+        return serviceWiki;\n+    }\n+\n+\n+    /**\n+     * Set up the URL for the wiki page describing this  service.\n+     *\n+     * @param serviceWiki  String URL name for the wiki page\n+     */\n+    public void setserviceWiki(String serviceWiki)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40aff8bb62f44971134f18574bf936052a59f24c"}, "originalPosition": 238}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5OTE0OQ==", "bodyText": "setServiceOperationalStatus", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379599149", "createdAt": "2020-02-14T19:13:32Z", "author": {"login": "cmgrote"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.configuration.registration;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * ServiceRegistration is used by a service to register its admin services interface.\n+ */\n+public class ServiceRegistration implements Serializable\n+{\n+    private static final long     serialVersionUID    = 1L;\n+    private static final String   defaultTopicRoot    = \"omas.\";\n+    private static final String   defaultInTopicLeaf  = \".inTopic\";\n+    private static final String   defaultOutTopicLeaf = \".outTopic\";\n+\n+\n+    private int                            serviceCode;\n+    private String                         serviceName;\n+    private String                         serviceFullName;\n+    private String                         serviceURLMarker;\n+    private String                         serviceDescription;\n+    private String                         serviceWiki;\n+    private ServiceOperationalStatus       serviceOperationalStatus;\n+    private String                         serviceAdminClassName;\n+\n+    /**\n+     * Complete Constructor\n+     *\n+     * @param serviceCode ordinal for this access service\n+     * @param serviceName symbolic name for this access service\n+     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n+     * @param serviceDescription short description for this access service\n+     * @param serviceWiki wiki page for the access service for this access service\n+     * @param serviceOperationalStatus default initial operational status for the access service\n+     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(int                            serviceCode,\n+                                     String                         serviceName,\n+                                     String                         serviceFullName,\n+                                     String                         serviceURLMarker,\n+                                     String                         serviceDescription,\n+                                     String                         serviceWiki,\n+                                     ServiceOperationalStatus       serviceOperationalStatus,\n+                                     String                         serviceAdminClassName)\n+    {\n+        this.serviceCode = serviceCode;\n+        this.serviceName = serviceName;\n+        this.serviceFullName = serviceFullName;\n+        this.serviceURLMarker = serviceURLMarker;\n+        this.serviceDescription = serviceDescription;\n+        this.serviceWiki = serviceWiki;\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+        this.serviceAdminClassName = serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Access Service Enum Constructor\n+     *\n+     * @param accessServiceDescription enum for this access service\n+     * @param accessServiceOperationalStatus default initial operational status for the access service\n+     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n+                               ServiceOperationalStatus       accessServiceOperationalStatus,\n+                               String                         accessServiceAdminClassName)\n+    {\n+        this(accessServiceDescription.getAccessServiceCode(),\n+             accessServiceDescription.getAccessServiceName(),\n+             accessServiceDescription.getAccessServiceFullName(),\n+             accessServiceDescription.getAccessServiceURLMarker(),\n+             accessServiceDescription.getAccessServiceDescription(),\n+             accessServiceDescription.getAccessServiceWiki(),\n+             accessServiceOperationalStatus,\n+             accessServiceAdminClassName);\n+    }\n+\n+    /**\n+     * View Service Enum Constructor\n+     *\n+     * @param viewServiceDescription enum for this view service\n+     * @param viewServiceOperationalStatus default initial operational status for the view service\n+     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n+     */\n+    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n+                               ServiceOperationalStatus viewServiceOperationalStatus,\n+                               String                         viewServiceAdminClassName)\n+    {\n+        this(viewServiceDescription.getViewServiceCode(),\n+                viewServiceDescription.getViewServiceName(),\n+                viewServiceDescription.getViewServiceFullName(),\n+                viewServiceDescription.getViewServiceURLMarker(),\n+                viewServiceDescription.getViewServiceDescription(),\n+                viewServiceDescription.getViewServiceWiki(),\n+                viewServiceOperationalStatus,\n+                viewServiceAdminClassName);\n+    }\n+\n+\n+    /**\n+     * Default constructor\n+     */\n+    public ServiceRegistration()\n+    {\n+    }\n+\n+    /**\n+     * Return the code for this  service\n+     *\n+     * @return int type code\n+     */\n+    public int getServiceCode()\n+    {\n+        return serviceCode;\n+    }\n+\n+\n+    /**\n+     * Set up the code for this  service\n+     *\n+     * @param serviceCode  int type code\n+     */\n+    public void setserviceCode(int serviceCode)\n+    {\n+        this.serviceCode = serviceCode;\n+    }\n+\n+\n+    /**\n+     * Return the default name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceName()\n+    {\n+        return serviceName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the default name for this  service.\n+     *\n+     * @param serviceName  String default name\n+     */\n+    public void setserviceName(String serviceName)\n+    {\n+        this.serviceName = serviceName;\n+    }\n+\n+\n+    /**\n+     * Return the full name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceFullName()\n+    {\n+        return serviceFullName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the full name for this  service.\n+     *\n+     * @param serviceFullName  String default name\n+     */\n+    public void setserviceFullName(String serviceFullName)\n+    {\n+        this.serviceFullName = serviceFullName;\n+    }\n+\n+\n+    /**\n+     * Return the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceURLMarker()\n+    {\n+        return serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Set up the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @param serviceURLMarker url fragment\n+     */\n+    public void setServiceURLMarker(String serviceURLMarker)\n+    {\n+        this.serviceURLMarker = serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Return the default description for the type for this  service.\n+     *\n+     * @return String default description\n+     */\n+    public String getServiceDescription()\n+    {\n+        return serviceDescription;\n+    }\n+\n+\n+    /**\n+     * Set up the default description for the type for this  service.\n+     *\n+     * @param serviceDescription  String default description\n+     */\n+    public void setserviceDescription(String serviceDescription)\n+    {\n+        this.serviceDescription = serviceDescription;\n+    }\n+\n+\n+    /**\n+     * Return the URL for the wiki page describing this  service.\n+     *\n+     * @return String URL name for the wiki page\n+     */\n+    public String getServiceWiki()\n+    {\n+        return serviceWiki;\n+    }\n+\n+\n+    /**\n+     * Set up the URL for the wiki page describing this  service.\n+     *\n+     * @param serviceWiki  String URL name for the wiki page\n+     */\n+    public void setserviceWiki(String serviceWiki)\n+    {\n+        this.serviceWiki = serviceWiki;\n+    }\n+\n+\n+    /**\n+     * Return the initial operational status for this  service.\n+     *\n+     * @return serviceOperationalStatus enum\n+     */\n+    public ServiceOperationalStatus getServiceOperationalStatus()\n+    {\n+        return serviceOperationalStatus;\n+    }\n+\n+\n+    /**\n+     * Set up the initial operational status for this  service.\n+     *\n+     * @param serviceOperationalStatus serviceOperationalStatus enum\n+     */\n+    public void setserviceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40aff8bb62f44971134f18574bf936052a59f24c"}, "originalPosition": 260}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5OTIyNg==", "bodyText": "setServiceAdminClassName", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379599226", "createdAt": "2020-02-14T19:13:44Z", "author": {"login": "cmgrote"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.configuration.registration;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * ServiceRegistration is used by a service to register its admin services interface.\n+ */\n+public class ServiceRegistration implements Serializable\n+{\n+    private static final long     serialVersionUID    = 1L;\n+    private static final String   defaultTopicRoot    = \"omas.\";\n+    private static final String   defaultInTopicLeaf  = \".inTopic\";\n+    private static final String   defaultOutTopicLeaf = \".outTopic\";\n+\n+\n+    private int                            serviceCode;\n+    private String                         serviceName;\n+    private String                         serviceFullName;\n+    private String                         serviceURLMarker;\n+    private String                         serviceDescription;\n+    private String                         serviceWiki;\n+    private ServiceOperationalStatus       serviceOperationalStatus;\n+    private String                         serviceAdminClassName;\n+\n+    /**\n+     * Complete Constructor\n+     *\n+     * @param serviceCode ordinal for this access service\n+     * @param serviceName symbolic name for this access service\n+     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n+     * @param serviceDescription short description for this access service\n+     * @param serviceWiki wiki page for the access service for this access service\n+     * @param serviceOperationalStatus default initial operational status for the access service\n+     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(int                            serviceCode,\n+                                     String                         serviceName,\n+                                     String                         serviceFullName,\n+                                     String                         serviceURLMarker,\n+                                     String                         serviceDescription,\n+                                     String                         serviceWiki,\n+                                     ServiceOperationalStatus       serviceOperationalStatus,\n+                                     String                         serviceAdminClassName)\n+    {\n+        this.serviceCode = serviceCode;\n+        this.serviceName = serviceName;\n+        this.serviceFullName = serviceFullName;\n+        this.serviceURLMarker = serviceURLMarker;\n+        this.serviceDescription = serviceDescription;\n+        this.serviceWiki = serviceWiki;\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+        this.serviceAdminClassName = serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Access Service Enum Constructor\n+     *\n+     * @param accessServiceDescription enum for this access service\n+     * @param accessServiceOperationalStatus default initial operational status for the access service\n+     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n+                               ServiceOperationalStatus       accessServiceOperationalStatus,\n+                               String                         accessServiceAdminClassName)\n+    {\n+        this(accessServiceDescription.getAccessServiceCode(),\n+             accessServiceDescription.getAccessServiceName(),\n+             accessServiceDescription.getAccessServiceFullName(),\n+             accessServiceDescription.getAccessServiceURLMarker(),\n+             accessServiceDescription.getAccessServiceDescription(),\n+             accessServiceDescription.getAccessServiceWiki(),\n+             accessServiceOperationalStatus,\n+             accessServiceAdminClassName);\n+    }\n+\n+    /**\n+     * View Service Enum Constructor\n+     *\n+     * @param viewServiceDescription enum for this view service\n+     * @param viewServiceOperationalStatus default initial operational status for the view service\n+     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n+     */\n+    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n+                               ServiceOperationalStatus viewServiceOperationalStatus,\n+                               String                         viewServiceAdminClassName)\n+    {\n+        this(viewServiceDescription.getViewServiceCode(),\n+                viewServiceDescription.getViewServiceName(),\n+                viewServiceDescription.getViewServiceFullName(),\n+                viewServiceDescription.getViewServiceURLMarker(),\n+                viewServiceDescription.getViewServiceDescription(),\n+                viewServiceDescription.getViewServiceWiki(),\n+                viewServiceOperationalStatus,\n+                viewServiceAdminClassName);\n+    }\n+\n+\n+    /**\n+     * Default constructor\n+     */\n+    public ServiceRegistration()\n+    {\n+    }\n+\n+    /**\n+     * Return the code for this  service\n+     *\n+     * @return int type code\n+     */\n+    public int getServiceCode()\n+    {\n+        return serviceCode;\n+    }\n+\n+\n+    /**\n+     * Set up the code for this  service\n+     *\n+     * @param serviceCode  int type code\n+     */\n+    public void setserviceCode(int serviceCode)\n+    {\n+        this.serviceCode = serviceCode;\n+    }\n+\n+\n+    /**\n+     * Return the default name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceName()\n+    {\n+        return serviceName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the default name for this  service.\n+     *\n+     * @param serviceName  String default name\n+     */\n+    public void setserviceName(String serviceName)\n+    {\n+        this.serviceName = serviceName;\n+    }\n+\n+\n+    /**\n+     * Return the full name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceFullName()\n+    {\n+        return serviceFullName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the full name for this  service.\n+     *\n+     * @param serviceFullName  String default name\n+     */\n+    public void setserviceFullName(String serviceFullName)\n+    {\n+        this.serviceFullName = serviceFullName;\n+    }\n+\n+\n+    /**\n+     * Return the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceURLMarker()\n+    {\n+        return serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Set up the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @param serviceURLMarker url fragment\n+     */\n+    public void setServiceURLMarker(String serviceURLMarker)\n+    {\n+        this.serviceURLMarker = serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Return the default description for the type for this  service.\n+     *\n+     * @return String default description\n+     */\n+    public String getServiceDescription()\n+    {\n+        return serviceDescription;\n+    }\n+\n+\n+    /**\n+     * Set up the default description for the type for this  service.\n+     *\n+     * @param serviceDescription  String default description\n+     */\n+    public void setserviceDescription(String serviceDescription)\n+    {\n+        this.serviceDescription = serviceDescription;\n+    }\n+\n+\n+    /**\n+     * Return the URL for the wiki page describing this  service.\n+     *\n+     * @return String URL name for the wiki page\n+     */\n+    public String getServiceWiki()\n+    {\n+        return serviceWiki;\n+    }\n+\n+\n+    /**\n+     * Set up the URL for the wiki page describing this  service.\n+     *\n+     * @param serviceWiki  String URL name for the wiki page\n+     */\n+    public void setserviceWiki(String serviceWiki)\n+    {\n+        this.serviceWiki = serviceWiki;\n+    }\n+\n+\n+    /**\n+     * Return the initial operational status for this  service.\n+     *\n+     * @return serviceOperationalStatus enum\n+     */\n+    public ServiceOperationalStatus getServiceOperationalStatus()\n+    {\n+        return serviceOperationalStatus;\n+    }\n+\n+\n+    /**\n+     * Set up the initial operational status for this  service.\n+     *\n+     * @param serviceOperationalStatus serviceOperationalStatus enum\n+     */\n+    public void setserviceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n+    {\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+    }\n+\n+    /**\n+     * Return the class name of the admin class that should be called during initialization and\n+     * termination.\n+     *\n+     * @return class name\n+     */\n+    public String getServiceAdminClassName()\n+    {\n+        return serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Set up the class name of the admin class that should be called during initialization and\n+     * termination.\n+     *\n+     * @param serviceAdminClassName  class name\n+     */\n+    public void setserviceAdminClassName(String serviceAdminClassName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40aff8bb62f44971134f18574bf936052a59f24c"}, "originalPosition": 283}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMDgzOA==", "bodyText": "Is the plan to eventual merge these different OMAG...ServiceRegistration classes into one?  They're looking pretty identical now that the ServiceRegistration class they register is identical across all of them (?)", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379600838", "createdAt": "2020-02-14T19:17:29Z", "author": {"login": "cmgrote"}, "path": "open-metadata-implementation/admin-services/admin-services-registration/src/main/java/org/odpi/openmetadata/adminservices/configuration/OMAGAccessServiceRegistration.java", "diffHunk": "@@ -2,7 +2,7 @@\n /* Copyright Contributors to the ODPi Egeria project. */\n package org.odpi.openmetadata.adminservices.configuration;\n \n-import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceRegistration;\n+import org.odpi.openmetadata.adminservices.configuration.registration.ServiceRegistration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40aff8bb62f44971134f18574bf936052a59f24c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMjU0MQ==", "bodyText": "There are many formatting changes to the code in this one -- and while I personally prefer the new style, I thought per Dev Guidelines we were meant to stick to the original style of the code we change (and I recall on one of our calls @mandy-chessell suggesting she was spending time fixing formatting again after-the-fact)?", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379602541", "createdAt": "2020-02-14T19:21:26Z", "author": {"login": "cmgrote"}, "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java", "diffHunk": "@@ -70,56 +69,43 @@\n      * start and returns the error.  Otherwise it continues through the list, returning the successful\n      * start up messages.\n      *\n-     * @param userId  user that is issuing the request\n-     * @param serverNames  list of server names\n+     * @param userId      user that is issuing the request\n+     * @param serverNames list of server names\n      * @return success message or\n      * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n      * OMAGInvalidParameterException the server name is invalid or\n      * OMAGConfigurationErrorException there is a problem using the supplied configuration.\n      */\n-    public SuccessMessageResponse activateServerListWithStoredConfig(String       userId,\n-                                                                     List<String> serverNames)\n-    {\n-        String                 startUpMessage = null;\n-        SuccessMessageResponse response       = new SuccessMessageResponse();\n+    public SuccessMessageResponse activateServerListWithStoredConfig(String userId,\n+                                                                     List<String> serverNames) {\n+        String startUpMessage = null;\n+        SuccessMessageResponse response = new SuccessMessageResponse();\n \n         response.setRelatedHTTPCode(200);\n \n-        if (serverNames != null)\n-        {\n-            for (String serverName : serverNames)\n-            {\n-                if (serverName != null)\n-                {\n+        if (serverNames != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40aff8bb62f44971134f18574bf936052a59f24c"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwNjc3NQ==", "bodyText": "Just curious if this an agreed name & abbreviation?  It feels kind of confusing to me to be so general (\"Open Metadata View Services\") when it is specifically geared to UIs -- when I first saw the name and acronym I was thinking about views in the data sense of the word rather than the MVC-sense of the word...\nNot sure what a great alternative would be, though \ud83e\udd37\u200d\u2642", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379606775", "createdAt": "2020-02-14T19:31:03Z", "author": {"login": "cmgrote"}, "path": "open-metadata-implementation/view-services/README.md", "diffHunk": "@@ -0,0 +1,121 @@\n+<!-- SPDX-License-Identifier: CC-BY-4.0 -->\n+<!-- Copyright Contributors to the ODPi Egeria project. -->\n+  \n+# Open Metadata View Services (OMVS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40aff8bb62f44971134f18574bf936052a59f24c"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17c4faf68842a9a01a3d41252864be100ce78ab3", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/17c4faf68842a9a01a3d41252864be100ce78ab3", "committedDate": "2020-02-14T20:53:37Z", "message": "#2577 change setters to use correct camel case from review feedback\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/b6e52e58efecc40f4815d4fccb991777391a70ae", "committedDate": "2020-02-14T21:43:31Z", "message": "#2577 revert formatting\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MzQzNzEz", "url": "https://github.com/odpi/egeria/pull/2592#pullrequestreview-359343713", "createdAt": "2020-02-15T12:42:55Z", "commit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NjczNTc4", "url": "https://github.com/odpi/egeria/pull/2592#pullrequestreview-359673578", "createdAt": "2020-02-17T11:39:44Z", "commit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "state": "DISMISSED", "comments": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMTozOTo0NFrOFqhfhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMjoxNjoxN1rOFqibug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzMzI1Mg==", "bodyText": "I am not comfortable with merging the access service description with the view service description since they are very different types of service.", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380133252", "createdAt": "2020-02-17T11:39:44Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java", "diffHunk": "@@ -4,8 +4,8 @@\n \n import org.odpi.openmetadata.adminservices.configuration.OMAGAccessServiceRegistration;\n import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceDescription;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzMzcxNA==", "bodyText": "layout", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380133714", "createdAt": "2020-02-17T11:40:53Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/it-infrastructure/it-infrastructure-server/src/main/java/org/odpi/openmetadata/accessservices/itinfrastructure/server/ITInfrastructureRegistration.java", "diffHunk": "@@ -24,8 +24,8 @@ public static void registerAccessService()\n     {\n         AccessServiceDescription myDescription = AccessServiceDescription.IT_INFRASTRUCTURE_OMAS;\n \n-        AccessServiceRegistration myRegistration = new AccessServiceRegistration(myDescription,\n-                                                                                 AccessServiceOperationalStatus.ENABLED,\n+        ServiceRegistration myRegistration = new ServiceRegistration(myDescription,\n+                                                                                 ServiceOperationalStatus.ENABLED,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDE4OQ==", "bodyText": "These changes are invalid - the description should be reverted to original values.", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380134189", "createdAt": "2020-02-17T11:42:01Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java", "diffHunk": "@@ -30,9 +30,9 @@\n  */\n public enum SubjectAreaErrorCode {\n     SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001 \",\n-            \"The OMAG Server Platform root URL is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n-            \"Ensure a valid OMAG Server Platform root URL is passed to the Subject Area OMAS when it is created.\"),\n+            \"The remote server Platform root URL is null\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDUyNQ==", "bodyText": "The changes to the SERVER_NAME_NOT_SPECIFIED message are invalid - the message description should be reverted to original values.", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380134525", "createdAt": "2020-02-17T11:42:49Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java", "diffHunk": "@@ -308,10 +308,13 @@\n             \"The system is unable to process the request.\",\n             \"Correct the code in the caller to create a Project with a name.\"),\n     SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069 \",\n-            \"The OMAG server name is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n-            \"Ensure a valid OMAG Server name is passed to the Subject Area OMAS when it is created.\"),\n-\n+            \"The remote server name is null\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDY1MQ==", "bodyText": "Lower case 'E'", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380134651", "createdAt": "2020-02-17T11:43:05Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java", "diffHunk": "@@ -308,10 +308,13 @@\n             \"The system is unable to process the request.\",\n             \"Correct the code in the caller to create a Project with a name.\"),\n     SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069 \",\n-            \"The OMAG server name is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n-            \"Ensure a valid OMAG Server name is passed to the Subject Area OMAS when it is created.\"),\n-\n+            \"The remote server name is null\",\n+            \"The system is unable to connect to the remote server to retrieve metadata properties.\",\n+            \"Ensure a valid remote server name is passed to the Subject Area OMAS when it is created.\"),\n+    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070 \",\n+            \"An unexpected exception occurred while processing method {0}. The Exception message is {1}.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDgwMg==", "bodyText": "Please revert change - original text is correct", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380134802", "createdAt": "2020-02-17T11:43:29Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java", "diffHunk": "@@ -323,18 +326,18 @@\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in OMAG Server {1}\",\n+            \"The requested connection {0} is not found in remote server {1}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDg3OQ==", "bodyText": "Please revert change - original text is correct", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380134879", "createdAt": "2020-02-17T11:43:38Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java", "diffHunk": "@@ -323,18 +326,18 @@\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in OMAG Server {1}\",\n+            \"The requested connection {0} is not found in remote server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the remote server Platform URL is correct.  Retry the request when the connection is available in the\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDkzMA==", "bodyText": "Please revert change - original text is correct", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380134930", "createdAt": "2020-02-17T11:43:45Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java", "diffHunk": "@@ -323,18 +326,18 @@\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in OMAG Server {1}\",\n+            \"The requested connection {0} is not found in remote server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the remote server Platform URL is correct.  Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n     NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n-            \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n-            \"Verify that the OMAG server running and the connection definition is correctly \" +\n+            \"The system is unable to create a connector because the remote server is not returning the Connection properties.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNTAwOA==", "bodyText": "Please revert change - original text is correct", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380135008", "createdAt": "2020-02-17T11:43:55Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java", "diffHunk": "@@ -323,18 +326,18 @@\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in OMAG Server {1}\",\n+            \"The requested connection {0} is not found in remote server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the remote server Platform URL is correct.  Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n     NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n-            \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n-            \"Verify that the OMAG server running and the connection definition is correctly \" +\n+            \"The system is unable to create a connector because the remote server is not returning the Connection properties.\",\n+            \"Verify that the remote server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n     NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n-            \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n+            \"The requested connector for connection named {0} is not returned by the remote server {1}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNjg5OA==", "bodyText": "This name change seems unhelpful", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380136898", "createdAt": "2020-02-17T11:48:52Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/AccessServiceConfig.java", "diffHunk": "@@ -79,16 +78,16 @@ public AccessServiceConfig(AccessServiceConfig  template)\n      *\n      * @param accessServiceRegistration fixed properties about the access service\n      */\n-    public AccessServiceConfig(AccessServiceRegistration accessServiceRegistration)\n+    public AccessServiceConfig(ServiceRegistration accessServiceRegistration)\n     {\n-        this.accessServiceId = accessServiceRegistration.getAccessServiceCode();\n-        this.accessServiceName = accessServiceRegistration.getAccessServiceName();\n-        this.accessServiceFullName = accessServiceRegistration.getAccessServiceFullName();\n-        this.accessServiceURLMarker = accessServiceRegistration.getAccessServiceURLMarker();\n-        this.accessServiceAdminClass = accessServiceRegistration.getAccessServiceAdminClassName();\n-        this.accessServiceDescription = accessServiceRegistration.getAccessServiceDescription();\n-        this.accessServiceWiki = accessServiceRegistration.getAccessServiceWiki();\n-        this.accessServiceOperationalStatus = accessServiceRegistration.getAccessServiceOperationalStatus();\n+        this.accessServiceId = accessServiceRegistration.getServiceCode();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNzMzMQ==", "bodyText": "This name change seems unhelpful", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380137331", "createdAt": "2020-02-17T11:49:53Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/ViewServiceConfig.java", "diffHunk": "@@ -69,15 +71,15 @@ public ViewServiceConfig(ViewServiceConfig template)\n      *\n      * @param viewRegistration fixed properties about the view service\n      */\n-    public ViewServiceConfig(ViewServiceRegistration viewRegistration)\n+    public ViewServiceConfig(ServiceRegistration viewRegistration)\n     {\n-        this.viewServiceId = viewRegistration.getViewServiceCode();\n-        this.viewServiceName = viewRegistration.getViewServiceName();\n-        this.viewURLMarker = viewRegistration.getViewServiceURLMarker();\n-        this.viewAdminClass = viewRegistration.getViewServiceAdminClassName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODUwNw==", "bodyText": "If we combine the  the status of the view service with the access service it means that they have to havethe same statuses - is that always to be true when they are so different?", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380138507", "createdAt": "2020-02-17T11:52:32Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceOperationalStatus.java", "diffHunk": "@@ -6,13 +6,13 @@\n import java.io.Serializable;\n \n /**\n- * AccessServiceOperationalStatus sets up whether an open metadata access service (OMAS) is enabled or not.\n+ * ServiceOperationalStatus sets up whether an open metadata service is enabled or not.\n  */\n-public enum AccessServiceOperationalStatus implements Serializable\n+public enum ServiceOperationalStatus implements Serializable\n {\n-    NOT_IMPLEMENTED  (0, \"Not Implemented\", \"Code for this access server is not available.\"),\n-    ENABLED          (1, \"Enabled\",         \"The access service is available and running.\"),\n-    DISABLED         (2, \"Disabled\",        \"The access service has been disabled.\");\n+    NOT_IMPLEMENTED  (0, \"Not Implemented\", \"Code for this service is not available.\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0MDIyNw==", "bodyText": "Having a common ServiceRegistration class for view services and access services does not make any sense.  They are very different types of services and are likely to need different values in the registration.  For example, the access services have in and out topics - are we doing that for the view services?  If so, having OMAS in the topic name for a view service is confusing.", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380140227", "createdAt": "2020-02-17T11:56:29Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0MTM2Mg==", "bodyText": "Only access services have an Out topic", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380141362", "createdAt": "2020-02-17T11:59:19Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java", "diffHunk": "@@ -336,14 +336,14 @@ private AccessServiceConfig  createAccessServiceConfig(AccessServiceRegistration\n                 connectorConfigurationFactory.getDefaultEventBusConnection(defaultInTopicName,\n                                                                            eventBusConfig.getConnectorProvider(),\n                                                                            eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n-                                                                           registration.getAccessServiceInTopic(),\n+                                                                           registration.getServiceInTopic(),\n                                                                            localServerId,\n                                                                            eventBusConfig.getConfigurationProperties()));\n         accessServiceConfig.setAccessServiceOutTopic(\n                 connectorConfigurationFactory.getDefaultEventBusConnection(defaultOutTopicName,\n                                                                            eventBusConfig.getConnectorProvider(),\n                                                                            eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n-                                                                           registration.getAccessServiceOutTopic(),\n+                                                                           registration.getServiceOutTopic(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0Mjg3Mw==", "bodyText": "Was it necessary to reformat the whole file - makes it difficult to see what has changed", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380142873", "createdAt": "2020-02-17T12:02:53Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/auditlog/OMAGAdminAuditCode.java", "diffHunk": "@@ -86,89 +86,174 @@\n                                     \"resources that they were using.  Restart the server whenever its services are needed again.\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0MzIzNA==", "bodyText": "These are view services not access services and they run in a View server not a Metadata server.", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380143234", "createdAt": "2020-02-17T12:03:43Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/auditlog/OMAGAdminAuditCode.java", "diffHunk": "@@ -86,89 +86,174 @@\n                                     \"resources that they were using.  Restart the server whenever its services are needed again.\"),\n \n     STARTING_ACCESS_SERVICES(\"OMAG-ADMIN-0010\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"The Open Metadata Access Services (OMASs) are starting\",\n-                             \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n-                                     \"These provide specialist APIs for accessing open metadata.  Many of the access services support \" +\n-                                     \"both a REST API and event-based interaction through a topic.  They also support options that \" +\n-                                     \"control their behavior and the scope of the metadata that they work with.  The access service \" +\n-                                     \"subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n-                             \"The server's configuration document lists the access services that should be started in this server.  \" +\n-                                     \"Verify that the expected access services are started and that they each report that their components are \" +\n-                                     \"working correctly.\"),\n+        OMRSAuditLogRecordSeverity.STARTUP,\n+        \"The Open Metadata Access Services (OMASs) are starting\",\n+        \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n+                \"These provide specialist APIs for accessing open metadata.  Many of the access services support \" +\n+                \"both a REST API and event-based interaction through a topic.  They also support options that \" +\n+                \"control their behavior and the scope of the metadata that they work with.  The access service \" +\n+                \"subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n+        \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                \"Verify that the expected access services are started and that they each report that their components are \" +\n+                \"working correctly.\"),\n \n     SKIPPING_ACCESS_SERVICE(\"OMAG-ADMIN-0011\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n-                             \"The operational admin services will skip the initialization of the access service subsystem \" +\n-                                    \"in this metadata server because it is marked as disabled in the configuration document.\",\n-                             \"The server's configuration document lists the access services that should be started in this server.  \" +\n-                                     \"Verify that this access service should be disabled. If it should be enabled then change the definition\" +\n-                                     \"of the access service in the configuration document to be enabled and restart the server.\"),\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n+            \"The operational admin services will skip the initialization of the access service subsystem \" +\n+                    \"in this metadata server because it is marked as disabled in the configuration document.\",\n+            \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                    \"Verify that this access service should be disabled. If it should be enabled then change the definition\" +\n+                    \"of the access service in the configuration document to be enabled and restart the server.\"),\n \n     ALL_ACCESS_SERVICES_STARTED(\"OMAG-ADMIN-0012\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"{0} out of {1} configured Open Metadata Access Services (OMASs) have started.\",\n-                             \"The operational admin services have completed the initialization of all of the access service subsystems \" +\n-                                        \"enabled in the metadata server.  They are ready for use.  An access services is configured by adding \" +\n-                                        \"its configuration to the server's configuration document.  By default a newly configured access \" +\n-                                        \"service is also ENABLED. A configured access service may be temporarily disabled in the configuration\" +\n-                                        \"document.  In which case the start up sequence skips it and the number of started access services\" +\n-                                        \"is less than the number of configured access services.\",\n-                             \"Review the start up messages to ensure that all of the correct access services have been started \" +\n-                                        \"and they are operating without errors.\"),\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"{0} out of {1} configured Open Metadata Access Services (OMASs) have started.\",\n+            \"The operational admin services have completed the initialization of all of the access service subsystems \" +\n+                    \"enabled in the metadata server.  They are ready for use.  An access services is configured by adding \" +\n+                    \"its configuration to the server's configuration document.  By default a newly configured access \" +\n+                    \"service is also ENABLED. A configured access service may be temporarily disabled in the configuration\" +\n+                    \"document.  In which case the start up sequence skips it and the number of started access services\" +\n+                    \"is less than the number of configured access services.\",\n+            \"Review the start up messages to ensure that all of the correct access services have been started \" +\n+                    \"and they are operating without errors.\"),\n \n     STOPPING_ACCESS_SERVICES(\"OMAG-ADMIN-0013\",\n-                             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-                             \"The Open Metadata Access Services (OMASs) in server {0} are shutting down\",\n-                             \"The server is in the process of The access services will be shut down one at a time.  When an access service competes\" +\n-                                     \" its shutdown, \" +\n-                                     \"it will no longer process events, nor REST API calls to this server.\",\n-                             \"If the intention was to shutdown the access services, monitor the shutdown process to ensure that \" +\n-                                     \"there are no errors reported.  \"),\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Open Metadata Access Services (OMASs) in server {0} are shutting down\",\n+            \"The server is in the process of The access services will be shut down one at a time.  When an access service competes\" +\n+                    \" its shutdown, \" +\n+                    \"it will no longer process events, nor REST API calls to this server.\",\n+            \"If the intention was to shutdown the access services, monitor the shutdown process to ensure that \" +\n+                    \"there are no errors reported.  \"),\n \n     ALL_ACCESS_SERVICES_STOPPED(\"OMAG-ADMIN-0014\",\n-                                OMRSAuditLogRecordSeverity.SHUTDOWN,\n-                                \"The Open Metadata Access Services (OMASs) in server {0} have shutdown\",\n-                                \"The access services are no longer available for the server.\",\n-                                \"Validate that all resources used by the access services have been released.\"),\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Open Metadata Access Services (OMASs) in server {0} have shutdown\",\n+            \"The access services are no longer available for the server.\",\n+            \"Validate that all resources used by the access services have been released.\"),\n \n     ACCESS_SERVICE_INSTANCE_FAILURE(\"OMAG-ADMIN-0015\",\n-                                    OMRSAuditLogRecordSeverity.EXCEPTION,\n-                                    \"The {0} access service is unable to initialize a new instance; error message is {1}\",\n-                                    \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n-                                    \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The {0} access service is unable to initialize a new instance; error message is {1}\",\n+            \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n \n     BAD_ACCESS_SERVICE_ADMIN_CLASS(\"OMAG-ADMIN-0016\",\n-             OMRSAuditLogRecordSeverity.EXCEPTION,\n-             \"The admin services are not able to start the {0} access service because the  {0} whilst initializing the {1} Open Metadata Access \" +\n-                                           \"Service \" +\n-                                           \"(OMAS); error message is {2}\",\n-             \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n-             \"Review the error message and the other reported failures to determine the cause of the problem.  Once this is resolved, restart the \" +\n-                                           \"server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The admin services are not able to start the {0} access service because the  {0} whilst initializing the {1} Open Metadata Access \" +\n+                    \"Service \" +\n+                    \"(OMAS); error message is {2}\",\n+            \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and the other reported failures to determine the cause of the problem.  Once this is resolved, restart the \" +\n+                    \"server.\"),\n \n     ACCESS_SERVICE_FAILURE(\"OMAG-ADMIN-0017\",\n-             OMRSAuditLogRecordSeverity.EXCEPTION,\n-             \"The admin services caught an unexpected {0} exception whilst initializing the {1} service. \" +\n-                                   \" The error message is {2}\",\n-             \"The admin services detected an error during the start up of a specific access service subsystem.  \" +\n-                                   \"Its services are not available for the server and so the server failed to start.  Details of the error \" +\n-                                   \"that the access service detected are logged and a detailed exception is returned to the caller. \",\n-             \"Review the error message and the other failures reported by the access service to determine the cause of the problem.  It is \" +\n-                                   \"typically either \" +\n-                                   \"a configuration error, or one of the external resources it needs, such as a topic on the event bus, is not  \" +\n-                                   \"available. Access services may be developed by the Egeria community or a third party.  If the error messages \" +\n-                                   \"are not sufficient to resolve the problem, raise an issue with the author of the access service to get this \" +\n-                                   \"improved.  Once the root cause of the error is resolved, restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The admin services caught an unexpected {0} exception whilst initializing the {1} service. \" +\n+                    \" The error message is {2}\",\n+            \"The admin services detected an error during the start up of a specific access service subsystem.  \" +\n+                    \"Its services are not available for the server and so the server failed to start.  Details of the error \" +\n+                    \"that the access service detected are logged and a detailed exception is returned to the caller. \",\n+            \"Review the error message and the other failures reported by the access service to determine the cause of the problem.  It is \" +\n+                    \"typically either \" +\n+                    \"a configuration error, or one of the external resources it needs, such as a topic on the event bus, is not  \" +\n+                    \"available. Access services may be developed by the Egeria community or a third party.  If the error messages \" +\n+                    \"are not sufficient to resolve the problem, raise an issue with the author of the access service to get this \" +\n+                    \"improved.  Once the root cause of the error is resolved, restart the server.\"),\n \n     NULL_ACCESS_SERVICE_ADMIN_CLASS(\"OMAG-ADMIN-400-011 \",\n-                                    OMRSAuditLogRecordSeverity.EXCEPTION,\n-                                    \"The OMAG server {0} has been passed a null admin services class name for access service {1}\",\n-                                    \"The system is unable to initialize this access service. The server failed to start.\",\n-                                    \"If the access service should be initialized then set up the appropriate admin services class name \" +\n-                                            \"in the access service's configuration and restart the server instance. Otherwise, \" +\n-                                            \"remove the configuration for this access service and restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The OMAG server {0} has been passed a null admin services class name for access service {1}\",\n+            \"The system is unable to initialize this access service. The server failed to start.\",\n+            \"If the access service should be initialized then set up the appropriate admin services class name \" +\n+                    \"in the access service's configuration and restart the server instance. Otherwise, \" +\n+                    \"remove the configuration for this access service and restart the server.\"),\n+\n+    STARTING_VIEW_SERVICES(\"OMAG-ADMIN-0020\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Open Metadata View Services (OMVSs) are starting\",\n+            \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n+                    \"These provide specialist task orientated APIs for viewing open metadata.  The view services support \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0MzQ1Nw==", "bodyText": "View services do not run in a metadata server - they run in a view server", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380143457", "createdAt": "2020-02-17T12:04:19Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/auditlog/OMAGAdminAuditCode.java", "diffHunk": "@@ -86,89 +86,174 @@\n                                     \"resources that they were using.  Restart the server whenever its services are needed again.\"),\n \n     STARTING_ACCESS_SERVICES(\"OMAG-ADMIN-0010\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"The Open Metadata Access Services (OMASs) are starting\",\n-                             \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n-                                     \"These provide specialist APIs for accessing open metadata.  Many of the access services support \" +\n-                                     \"both a REST API and event-based interaction through a topic.  They also support options that \" +\n-                                     \"control their behavior and the scope of the metadata that they work with.  The access service \" +\n-                                     \"subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n-                             \"The server's configuration document lists the access services that should be started in this server.  \" +\n-                                     \"Verify that the expected access services are started and that they each report that their components are \" +\n-                                     \"working correctly.\"),\n+        OMRSAuditLogRecordSeverity.STARTUP,\n+        \"The Open Metadata Access Services (OMASs) are starting\",\n+        \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n+                \"These provide specialist APIs for accessing open metadata.  Many of the access services support \" +\n+                \"both a REST API and event-based interaction through a topic.  They also support options that \" +\n+                \"control their behavior and the scope of the metadata that they work with.  The access service \" +\n+                \"subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n+        \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                \"Verify that the expected access services are started and that they each report that their components are \" +\n+                \"working correctly.\"),\n \n     SKIPPING_ACCESS_SERVICE(\"OMAG-ADMIN-0011\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n-                             \"The operational admin services will skip the initialization of the access service subsystem \" +\n-                                    \"in this metadata server because it is marked as disabled in the configuration document.\",\n-                             \"The server's configuration document lists the access services that should be started in this server.  \" +\n-                                     \"Verify that this access service should be disabled. If it should be enabled then change the definition\" +\n-                                     \"of the access service in the configuration document to be enabled and restart the server.\"),\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n+            \"The operational admin services will skip the initialization of the access service subsystem \" +\n+                    \"in this metadata server because it is marked as disabled in the configuration document.\",\n+            \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                    \"Verify that this access service should be disabled. If it should be enabled then change the definition\" +\n+                    \"of the access service in the configuration document to be enabled and restart the server.\"),\n \n     ALL_ACCESS_SERVICES_STARTED(\"OMAG-ADMIN-0012\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"{0} out of {1} configured Open Metadata Access Services (OMASs) have started.\",\n-                             \"The operational admin services have completed the initialization of all of the access service subsystems \" +\n-                                        \"enabled in the metadata server.  They are ready for use.  An access services is configured by adding \" +\n-                                        \"its configuration to the server's configuration document.  By default a newly configured access \" +\n-                                        \"service is also ENABLED. A configured access service may be temporarily disabled in the configuration\" +\n-                                        \"document.  In which case the start up sequence skips it and the number of started access services\" +\n-                                        \"is less than the number of configured access services.\",\n-                             \"Review the start up messages to ensure that all of the correct access services have been started \" +\n-                                        \"and they are operating without errors.\"),\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"{0} out of {1} configured Open Metadata Access Services (OMASs) have started.\",\n+            \"The operational admin services have completed the initialization of all of the access service subsystems \" +\n+                    \"enabled in the metadata server.  They are ready for use.  An access services is configured by adding \" +\n+                    \"its configuration to the server's configuration document.  By default a newly configured access \" +\n+                    \"service is also ENABLED. A configured access service may be temporarily disabled in the configuration\" +\n+                    \"document.  In which case the start up sequence skips it and the number of started access services\" +\n+                    \"is less than the number of configured access services.\",\n+            \"Review the start up messages to ensure that all of the correct access services have been started \" +\n+                    \"and they are operating without errors.\"),\n \n     STOPPING_ACCESS_SERVICES(\"OMAG-ADMIN-0013\",\n-                             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-                             \"The Open Metadata Access Services (OMASs) in server {0} are shutting down\",\n-                             \"The server is in the process of The access services will be shut down one at a time.  When an access service competes\" +\n-                                     \" its shutdown, \" +\n-                                     \"it will no longer process events, nor REST API calls to this server.\",\n-                             \"If the intention was to shutdown the access services, monitor the shutdown process to ensure that \" +\n-                                     \"there are no errors reported.  \"),\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Open Metadata Access Services (OMASs) in server {0} are shutting down\",\n+            \"The server is in the process of The access services will be shut down one at a time.  When an access service competes\" +\n+                    \" its shutdown, \" +\n+                    \"it will no longer process events, nor REST API calls to this server.\",\n+            \"If the intention was to shutdown the access services, monitor the shutdown process to ensure that \" +\n+                    \"there are no errors reported.  \"),\n \n     ALL_ACCESS_SERVICES_STOPPED(\"OMAG-ADMIN-0014\",\n-                                OMRSAuditLogRecordSeverity.SHUTDOWN,\n-                                \"The Open Metadata Access Services (OMASs) in server {0} have shutdown\",\n-                                \"The access services are no longer available for the server.\",\n-                                \"Validate that all resources used by the access services have been released.\"),\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Open Metadata Access Services (OMASs) in server {0} have shutdown\",\n+            \"The access services are no longer available for the server.\",\n+            \"Validate that all resources used by the access services have been released.\"),\n \n     ACCESS_SERVICE_INSTANCE_FAILURE(\"OMAG-ADMIN-0015\",\n-                                    OMRSAuditLogRecordSeverity.EXCEPTION,\n-                                    \"The {0} access service is unable to initialize a new instance; error message is {1}\",\n-                                    \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n-                                    \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The {0} access service is unable to initialize a new instance; error message is {1}\",\n+            \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n \n     BAD_ACCESS_SERVICE_ADMIN_CLASS(\"OMAG-ADMIN-0016\",\n-             OMRSAuditLogRecordSeverity.EXCEPTION,\n-             \"The admin services are not able to start the {0} access service because the  {0} whilst initializing the {1} Open Metadata Access \" +\n-                                           \"Service \" +\n-                                           \"(OMAS); error message is {2}\",\n-             \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n-             \"Review the error message and the other reported failures to determine the cause of the problem.  Once this is resolved, restart the \" +\n-                                           \"server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The admin services are not able to start the {0} access service because the  {0} whilst initializing the {1} Open Metadata Access \" +\n+                    \"Service \" +\n+                    \"(OMAS); error message is {2}\",\n+            \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and the other reported failures to determine the cause of the problem.  Once this is resolved, restart the \" +\n+                    \"server.\"),\n \n     ACCESS_SERVICE_FAILURE(\"OMAG-ADMIN-0017\",\n-             OMRSAuditLogRecordSeverity.EXCEPTION,\n-             \"The admin services caught an unexpected {0} exception whilst initializing the {1} service. \" +\n-                                   \" The error message is {2}\",\n-             \"The admin services detected an error during the start up of a specific access service subsystem.  \" +\n-                                   \"Its services are not available for the server and so the server failed to start.  Details of the error \" +\n-                                   \"that the access service detected are logged and a detailed exception is returned to the caller. \",\n-             \"Review the error message and the other failures reported by the access service to determine the cause of the problem.  It is \" +\n-                                   \"typically either \" +\n-                                   \"a configuration error, or one of the external resources it needs, such as a topic on the event bus, is not  \" +\n-                                   \"available. Access services may be developed by the Egeria community or a third party.  If the error messages \" +\n-                                   \"are not sufficient to resolve the problem, raise an issue with the author of the access service to get this \" +\n-                                   \"improved.  Once the root cause of the error is resolved, restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The admin services caught an unexpected {0} exception whilst initializing the {1} service. \" +\n+                    \" The error message is {2}\",\n+            \"The admin services detected an error during the start up of a specific access service subsystem.  \" +\n+                    \"Its services are not available for the server and so the server failed to start.  Details of the error \" +\n+                    \"that the access service detected are logged and a detailed exception is returned to the caller. \",\n+            \"Review the error message and the other failures reported by the access service to determine the cause of the problem.  It is \" +\n+                    \"typically either \" +\n+                    \"a configuration error, or one of the external resources it needs, such as a topic on the event bus, is not  \" +\n+                    \"available. Access services may be developed by the Egeria community or a third party.  If the error messages \" +\n+                    \"are not sufficient to resolve the problem, raise an issue with the author of the access service to get this \" +\n+                    \"improved.  Once the root cause of the error is resolved, restart the server.\"),\n \n     NULL_ACCESS_SERVICE_ADMIN_CLASS(\"OMAG-ADMIN-400-011 \",\n-                                    OMRSAuditLogRecordSeverity.EXCEPTION,\n-                                    \"The OMAG server {0} has been passed a null admin services class name for access service {1}\",\n-                                    \"The system is unable to initialize this access service. The server failed to start.\",\n-                                    \"If the access service should be initialized then set up the appropriate admin services class name \" +\n-                                            \"in the access service's configuration and restart the server instance. Otherwise, \" +\n-                                            \"remove the configuration for this access service and restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The OMAG server {0} has been passed a null admin services class name for access service {1}\",\n+            \"The system is unable to initialize this access service. The server failed to start.\",\n+            \"If the access service should be initialized then set up the appropriate admin services class name \" +\n+                    \"in the access service's configuration and restart the server instance. Otherwise, \" +\n+                    \"remove the configuration for this access service and restart the server.\"),\n+\n+    STARTING_VIEW_SERVICES(\"OMAG-ADMIN-0020\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Open Metadata View Services (OMVSs) are starting\",\n+            \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n+                    \"These provide specialist task orientated APIs for viewing open metadata.  The view services support \" +\n+                    \"a REST API. The view service subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n+            \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                    \"Verify that the expected access services are started and that they each report that their components are \" +\n+                    \"working correctly.\"),\n+\n+    SKIPPING_VIEW_SERVICE(\"OMAG-ADMIN-0021\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n+            \"The operational admin services will skip the initialization of the view service subsystem \" +\n+                    \"in this metadata server because it is marked as disabled in the configuration document.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 169}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0MzYxNQ==", "bodyText": "ditto - should be View server", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380143615", "createdAt": "2020-02-17T12:04:39Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/auditlog/OMAGAdminAuditCode.java", "diffHunk": "@@ -86,89 +86,174 @@\n                                     \"resources that they were using.  Restart the server whenever its services are needed again.\"),\n \n     STARTING_ACCESS_SERVICES(\"OMAG-ADMIN-0010\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"The Open Metadata Access Services (OMASs) are starting\",\n-                             \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n-                                     \"These provide specialist APIs for accessing open metadata.  Many of the access services support \" +\n-                                     \"both a REST API and event-based interaction through a topic.  They also support options that \" +\n-                                     \"control their behavior and the scope of the metadata that they work with.  The access service \" +\n-                                     \"subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n-                             \"The server's configuration document lists the access services that should be started in this server.  \" +\n-                                     \"Verify that the expected access services are started and that they each report that their components are \" +\n-                                     \"working correctly.\"),\n+        OMRSAuditLogRecordSeverity.STARTUP,\n+        \"The Open Metadata Access Services (OMASs) are starting\",\n+        \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n+                \"These provide specialist APIs for accessing open metadata.  Many of the access services support \" +\n+                \"both a REST API and event-based interaction through a topic.  They also support options that \" +\n+                \"control their behavior and the scope of the metadata that they work with.  The access service \" +\n+                \"subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n+        \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                \"Verify that the expected access services are started and that they each report that their components are \" +\n+                \"working correctly.\"),\n \n     SKIPPING_ACCESS_SERVICE(\"OMAG-ADMIN-0011\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n-                             \"The operational admin services will skip the initialization of the access service subsystem \" +\n-                                    \"in this metadata server because it is marked as disabled in the configuration document.\",\n-                             \"The server's configuration document lists the access services that should be started in this server.  \" +\n-                                     \"Verify that this access service should be disabled. If it should be enabled then change the definition\" +\n-                                     \"of the access service in the configuration document to be enabled and restart the server.\"),\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n+            \"The operational admin services will skip the initialization of the access service subsystem \" +\n+                    \"in this metadata server because it is marked as disabled in the configuration document.\",\n+            \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                    \"Verify that this access service should be disabled. If it should be enabled then change the definition\" +\n+                    \"of the access service in the configuration document to be enabled and restart the server.\"),\n \n     ALL_ACCESS_SERVICES_STARTED(\"OMAG-ADMIN-0012\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"{0} out of {1} configured Open Metadata Access Services (OMASs) have started.\",\n-                             \"The operational admin services have completed the initialization of all of the access service subsystems \" +\n-                                        \"enabled in the metadata server.  They are ready for use.  An access services is configured by adding \" +\n-                                        \"its configuration to the server's configuration document.  By default a newly configured access \" +\n-                                        \"service is also ENABLED. A configured access service may be temporarily disabled in the configuration\" +\n-                                        \"document.  In which case the start up sequence skips it and the number of started access services\" +\n-                                        \"is less than the number of configured access services.\",\n-                             \"Review the start up messages to ensure that all of the correct access services have been started \" +\n-                                        \"and they are operating without errors.\"),\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"{0} out of {1} configured Open Metadata Access Services (OMASs) have started.\",\n+            \"The operational admin services have completed the initialization of all of the access service subsystems \" +\n+                    \"enabled in the metadata server.  They are ready for use.  An access services is configured by adding \" +\n+                    \"its configuration to the server's configuration document.  By default a newly configured access \" +\n+                    \"service is also ENABLED. A configured access service may be temporarily disabled in the configuration\" +\n+                    \"document.  In which case the start up sequence skips it and the number of started access services\" +\n+                    \"is less than the number of configured access services.\",\n+            \"Review the start up messages to ensure that all of the correct access services have been started \" +\n+                    \"and they are operating without errors.\"),\n \n     STOPPING_ACCESS_SERVICES(\"OMAG-ADMIN-0013\",\n-                             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-                             \"The Open Metadata Access Services (OMASs) in server {0} are shutting down\",\n-                             \"The server is in the process of The access services will be shut down one at a time.  When an access service competes\" +\n-                                     \" its shutdown, \" +\n-                                     \"it will no longer process events, nor REST API calls to this server.\",\n-                             \"If the intention was to shutdown the access services, monitor the shutdown process to ensure that \" +\n-                                     \"there are no errors reported.  \"),\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Open Metadata Access Services (OMASs) in server {0} are shutting down\",\n+            \"The server is in the process of The access services will be shut down one at a time.  When an access service competes\" +\n+                    \" its shutdown, \" +\n+                    \"it will no longer process events, nor REST API calls to this server.\",\n+            \"If the intention was to shutdown the access services, monitor the shutdown process to ensure that \" +\n+                    \"there are no errors reported.  \"),\n \n     ALL_ACCESS_SERVICES_STOPPED(\"OMAG-ADMIN-0014\",\n-                                OMRSAuditLogRecordSeverity.SHUTDOWN,\n-                                \"The Open Metadata Access Services (OMASs) in server {0} have shutdown\",\n-                                \"The access services are no longer available for the server.\",\n-                                \"Validate that all resources used by the access services have been released.\"),\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Open Metadata Access Services (OMASs) in server {0} have shutdown\",\n+            \"The access services are no longer available for the server.\",\n+            \"Validate that all resources used by the access services have been released.\"),\n \n     ACCESS_SERVICE_INSTANCE_FAILURE(\"OMAG-ADMIN-0015\",\n-                                    OMRSAuditLogRecordSeverity.EXCEPTION,\n-                                    \"The {0} access service is unable to initialize a new instance; error message is {1}\",\n-                                    \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n-                                    \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The {0} access service is unable to initialize a new instance; error message is {1}\",\n+            \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n \n     BAD_ACCESS_SERVICE_ADMIN_CLASS(\"OMAG-ADMIN-0016\",\n-             OMRSAuditLogRecordSeverity.EXCEPTION,\n-             \"The admin services are not able to start the {0} access service because the  {0} whilst initializing the {1} Open Metadata Access \" +\n-                                           \"Service \" +\n-                                           \"(OMAS); error message is {2}\",\n-             \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n-             \"Review the error message and the other reported failures to determine the cause of the problem.  Once this is resolved, restart the \" +\n-                                           \"server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The admin services are not able to start the {0} access service because the  {0} whilst initializing the {1} Open Metadata Access \" +\n+                    \"Service \" +\n+                    \"(OMAS); error message is {2}\",\n+            \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and the other reported failures to determine the cause of the problem.  Once this is resolved, restart the \" +\n+                    \"server.\"),\n \n     ACCESS_SERVICE_FAILURE(\"OMAG-ADMIN-0017\",\n-             OMRSAuditLogRecordSeverity.EXCEPTION,\n-             \"The admin services caught an unexpected {0} exception whilst initializing the {1} service. \" +\n-                                   \" The error message is {2}\",\n-             \"The admin services detected an error during the start up of a specific access service subsystem.  \" +\n-                                   \"Its services are not available for the server and so the server failed to start.  Details of the error \" +\n-                                   \"that the access service detected are logged and a detailed exception is returned to the caller. \",\n-             \"Review the error message and the other failures reported by the access service to determine the cause of the problem.  It is \" +\n-                                   \"typically either \" +\n-                                   \"a configuration error, or one of the external resources it needs, such as a topic on the event bus, is not  \" +\n-                                   \"available. Access services may be developed by the Egeria community or a third party.  If the error messages \" +\n-                                   \"are not sufficient to resolve the problem, raise an issue with the author of the access service to get this \" +\n-                                   \"improved.  Once the root cause of the error is resolved, restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The admin services caught an unexpected {0} exception whilst initializing the {1} service. \" +\n+                    \" The error message is {2}\",\n+            \"The admin services detected an error during the start up of a specific access service subsystem.  \" +\n+                    \"Its services are not available for the server and so the server failed to start.  Details of the error \" +\n+                    \"that the access service detected are logged and a detailed exception is returned to the caller. \",\n+            \"Review the error message and the other failures reported by the access service to determine the cause of the problem.  It is \" +\n+                    \"typically either \" +\n+                    \"a configuration error, or one of the external resources it needs, such as a topic on the event bus, is not  \" +\n+                    \"available. Access services may be developed by the Egeria community or a third party.  If the error messages \" +\n+                    \"are not sufficient to resolve the problem, raise an issue with the author of the access service to get this \" +\n+                    \"improved.  Once the root cause of the error is resolved, restart the server.\"),\n \n     NULL_ACCESS_SERVICE_ADMIN_CLASS(\"OMAG-ADMIN-400-011 \",\n-                                    OMRSAuditLogRecordSeverity.EXCEPTION,\n-                                    \"The OMAG server {0} has been passed a null admin services class name for access service {1}\",\n-                                    \"The system is unable to initialize this access service. The server failed to start.\",\n-                                    \"If the access service should be initialized then set up the appropriate admin services class name \" +\n-                                            \"in the access service's configuration and restart the server instance. Otherwise, \" +\n-                                            \"remove the configuration for this access service and restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The OMAG server {0} has been passed a null admin services class name for access service {1}\",\n+            \"The system is unable to initialize this access service. The server failed to start.\",\n+            \"If the access service should be initialized then set up the appropriate admin services class name \" +\n+                    \"in the access service's configuration and restart the server instance. Otherwise, \" +\n+                    \"remove the configuration for this access service and restart the server.\"),\n+\n+    STARTING_VIEW_SERVICES(\"OMAG-ADMIN-0020\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Open Metadata View Services (OMVSs) are starting\",\n+            \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n+                    \"These provide specialist task orientated APIs for viewing open metadata.  The view services support \" +\n+                    \"a REST API. The view service subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n+            \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                    \"Verify that the expected access services are started and that they each report that their components are \" +\n+                    \"working correctly.\"),\n+\n+    SKIPPING_VIEW_SERVICE(\"OMAG-ADMIN-0021\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n+            \"The operational admin services will skip the initialization of the view service subsystem \" +\n+                    \"in this metadata server because it is marked as disabled in the configuration document.\",\n+            \"The server's configuration document lists the view services that should be started in this server.  \" +\n+                    \"Verify that this view service should be disabled. If it should be enabled then change the definition\" +\n+                    \"of the view service in the configuration document to be enabled and restart the server.\"),\n+\n+    ALL_VIEW_SERVICES_STARTED(\"OMAG-ADMIN-0022\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"{0} out of {1} configured Open Metadata View Services (OMVSs) have started.\",\n+            \"The operational admin services have completed the initialization of all of the view service subsystems \" +\n+                    \"enabled in the metadata server.  They are ready for use.  An view services is configured by adding \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 178}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NDIzNQ==", "bodyText": "Layout", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380144235", "createdAt": "2020-02-17T12:05:59Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java", "diffHunk": "@@ -93,13 +95,12 @@ public ServerTypeClassification getServerType() throws OMAGInvalidParameterExcep\n         /*\n          * All servers need the repository services\n          */\n-        if (repositoryServicesConfig == null)\n-        {\n+        if (repositoryServicesConfig == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NDQzNA==", "bodyText": "Layout", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380144434", "createdAt": "2020-02-17T12:06:27Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java", "diffHunk": "@@ -109,8 +110,7 @@ public ServerTypeClassification getServerType() throws OMAGInvalidParameterExcep\n                                                       errorCode.getUserAction());\n         }\n \n-        if (accessServiceConfigList != null)\n-        {\n+        if (accessServiceConfigList != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NDc2Nw==", "bodyText": "Layout", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380144767", "createdAt": "2020-02-17T12:07:15Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java", "diffHunk": "@@ -606,6 +640,59 @@ public ServerTypeClassification getServerType() throws OMAGInvalidParameterExcep\n                                                 GovernanceServicesDescription.STEWARDSHIP_SERVICES.getServiceName(),\n                                                 stewardshipEngineServicesConfig);\n         }\n+        if (viewServiceConfigList != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 247}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NjA1Nw==", "bodyText": "Layout - braces thoughtout", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380146057", "createdAt": "2020-02-17T12:10:23Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/common-services/multi-tenant/src/main/java/org/odpi/openmetadata/commonservices/multitenant/OMAGServerPlatformInstanceMap.java", "diffHunk": "@@ -89,43 +90,70 @@ private static RegisteredOMAGService getServiceDescription(String serviceName,\n     {\n         validateUserAsInvestigatorForPlatform(userId);\n \n-        List<RegisteredOMAGService> response = new ArrayList<>();\n-\n         /*\n          * Get the list of Access Services implemented in this server.\n          */\n-        List<AccessServiceRegistration> accessServiceRegistrationList = OMAGAccessServiceRegistration.getAccessServiceRegistrationList();\n+        List<ServiceRegistration> accessServiceRegistrationList = OMAGAccessServiceRegistration.getAccessServiceRegistrationList();\n \n         /*\n          * Set up the available access services.\n          */\n-        if ((accessServiceRegistrationList != null) && (! accessServiceRegistrationList.isEmpty()))\n-        {\n-            for (AccessServiceRegistration registration : accessServiceRegistrationList)\n-            {\n-                if (registration != null)\n-                {\n-                    if (registration.getAccessServiceOperationalStatus() == AccessServiceOperationalStatus.ENABLED)\n-                    {\n-                        response.add(getServiceDescription(registration.getAccessServiceName(),\n-                                                           registration.getAccessServiceURLMarker(),\n-                                                           registration.getAccessServiceDescription(),\n-                                                           registration.getAccessServiceWiki()));\n+        return getRegisteredOMAGServices(accessServiceRegistrationList);\n+    }\n+    /**\n+     * Return the list of view services that are registered (supported) in this OMAG Server Platform\n+     * and can be configured in a server.\n+     *\n+     * @param userId calling user\n+     * @return list of view service descriptions\n+     * @throws UserNotAuthorizedException user not authorized\n+     */\n+    public List<RegisteredOMAGService> getRegisteredViewServices(String userId) throws UserNotAuthorizedException\n+    {\n+        validateUserAsInvestigatorForPlatform(userId);\n+\n+\n+\n+        /*\n+         * Get the list of View Services implemented in this server.\n+         */\n+        List<ServiceRegistration> viewServiceRegistrationList = OMAGViewServiceRegistration.getViewServiceRegistrationList();\n+\n+        /*\n+         * Set up the available view services.\n+         */\n+        return getRegisteredOMAGServices(viewServiceRegistrationList);\n+    }\n+\n+    /**\n+     * Return the list of services that are registered (supported) in this OMAG Server Platform\n+     * and can be configured in a server.\n+     * @param serviceRegistrationList  service registrations.\n+     * @return list of service descriptions\n+     */\n+    private List<RegisteredOMAGService> getRegisteredOMAGServices(List<ServiceRegistration> serviceRegistrationList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0Nzg0OA==", "bodyText": "Need to describe what the service does and what should happen next.", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380147848", "createdAt": "2020-02-17T12:14:29Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.viewservices.subjectarea.auditlog;\n+\n+\n+import org.odpi.openmetadata.repositoryservices.auditlog.OMRSAuditLogRecordSeverity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+\n+/**\n+ * The SubjectAreaAuditCode is used to define the message content for the OMRS Audit Log.\n+ *\n+ * The 5 fields in the enum are:\n+ * <ul>\n+ *     <li>Log Message Id - to uniquely identify the message</li>\n+ *     <li>Severity - is this an event, decision, action, error or exception</li>\n+ *     <li>Log Message Text - includes placeholder to allow additional values to be captured</li>\n+ *     <li>Additional Information - further parameters and data relating to the audit message (optional)</li>\n+ *     <li>SystemAction - describes the result of the situation</li>\n+ *     <li>UserAction - describes how a user should correct the situation</li>\n+ * </ul>\n+ */\n+\n+\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+\n+public enum SubjectAreaViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Service (OMVS) is initializing\",\n+            \"The local server has started up the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0ODAxOQ==", "bodyText": "Need to describe how to verify that it initialized correctly", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380148019", "createdAt": "2020-02-17T12:14:53Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.viewservices.subjectarea.auditlog;\n+\n+\n+import org.odpi.openmetadata.repositoryservices.auditlog.OMRSAuditLogRecordSeverity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+\n+/**\n+ * The SubjectAreaAuditCode is used to define the message content for the OMRS Audit Log.\n+ *\n+ * The 5 fields in the enum are:\n+ * <ul>\n+ *     <li>Log Message Id - to uniquely identify the message</li>\n+ *     <li>Severity - is this an event, decision, action, error or exception</li>\n+ *     <li>Log Message Text - includes placeholder to allow additional values to be captured</li>\n+ *     <li>Additional Information - further parameters and data relating to the audit message (optional)</li>\n+ *     <li>SystemAction - describes the result of the situation</li>\n+ *     <li>UserAction - describes how a user should correct the situation</li>\n+ * </ul>\n+ */\n+\n+\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+\n+public enum SubjectAreaViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Service (OMVS) is initializing\",\n+            \"The local server has started up the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+\n+    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Service (OMVS) is initialized\",\n+            \"The Subject Area OMVS has completed initialization.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0ODE4Ng==", "bodyText": "Need to describe what to look for to ensure shutdown was successful", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380148186", "createdAt": "2020-02-17T12:15:18Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.viewservices.subjectarea.auditlog;\n+\n+\n+import org.odpi.openmetadata.repositoryservices.auditlog.OMRSAuditLogRecordSeverity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+\n+/**\n+ * The SubjectAreaAuditCode is used to define the message content for the OMRS Audit Log.\n+ *\n+ * The 5 fields in the enum are:\n+ * <ul>\n+ *     <li>Log Message Id - to uniquely identify the message</li>\n+ *     <li>Severity - is this an event, decision, action, error or exception</li>\n+ *     <li>Log Message Text - includes placeholder to allow additional values to be captured</li>\n+ *     <li>Additional Information - further parameters and data relating to the audit message (optional)</li>\n+ *     <li>SystemAction - describes the result of the situation</li>\n+ *     <li>UserAction - describes how a user should correct the situation</li>\n+ * </ul>\n+ */\n+\n+\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+\n+public enum SubjectAreaViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Service (OMVS) is initializing\",\n+            \"The local server has started up the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+\n+    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Service (OMVS) is initialized\",\n+            \"The Subject Area OMVS has completed initialization.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+\n+    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Subject Area View Service (OMVS) is shutting down\",\n+            \"The local server has requested shut down of the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0ODY2Ng==", "bodyText": "Need to add that operato shouldverify that shutdown was intended.", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380148666", "createdAt": "2020-02-17T12:16:17Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.viewservices.subjectarea.auditlog;\n+\n+\n+import org.odpi.openmetadata.repositoryservices.auditlog.OMRSAuditLogRecordSeverity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+\n+/**\n+ * The SubjectAreaAuditCode is used to define the message content for the OMRS Audit Log.\n+ *\n+ * The 5 fields in the enum are:\n+ * <ul>\n+ *     <li>Log Message Id - to uniquely identify the message</li>\n+ *     <li>Severity - is this an event, decision, action, error or exception</li>\n+ *     <li>Log Message Text - includes placeholder to allow additional values to be captured</li>\n+ *     <li>Additional Information - further parameters and data relating to the audit message (optional)</li>\n+ *     <li>SystemAction - describes the result of the situation</li>\n+ *     <li>UserAction - describes how a user should correct the situation</li>\n+ * </ul>\n+ */\n+\n+\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+\n+public enum SubjectAreaViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Service (OMVS) is initializing\",\n+            \"The local server has started up the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+\n+    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Service (OMVS) is initialized\",\n+            \"The Subject Area OMVS has completed initialization.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+\n+    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Subject Area View Service (OMVS) is shutting down\",\n+            \"The local server has requested shut down of the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+\n+    SERVICE_INSTANCE_FAILURE(\"OMVS-SUBJECT-AREA-0032\",\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The Subject Area View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n+            \"The view service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n+    SERVICE_TERMINATING(\"OMVS-SUBJECT-AREA-0033\",\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Subject Area View Service (OMVS) is shutting down server instance {0}\",\n+            \"The local handlers has requested shut down of the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the service.\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "committedDate": "2020-02-19T16:48:36Z", "message": "#2577 split out view registration\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7932c3f94f791aad85f54bb778f97d0261ce5eb6", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/7932c3f94f791aad85f54bb778f97d0261ce5eb6", "committedDate": "2020-02-19T18:38:59Z", "message": "#2577 addressing Mandy review comments\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ae34b1b131e0cb845d4770e0d87a8598ff2998b", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/7ae34b1b131e0cb845d4770e0d87a8598ff2998b", "committedDate": "2020-02-20T13:20:10Z", "message": "#2577 amended the view services to use the OMAGServerClient construct\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42a421c6e26d81f06a7aec2da4ea0916535cc995", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/42a421c6e26d81f06a7aec2da4ea0916535cc995", "committedDate": "2020-02-20T13:20:19Z", "message": "Merge branch 'master' of https://github.com/odpi/egeria into git2577"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9667007e5b4330a898af5f3b6b72092bfd644704", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/9667007e5b4330a898af5f3b6b72092bfd644704", "committedDate": "2020-02-20T13:35:50Z", "message": "#2577 remove test file\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15320f08e0a987da68b4c374f92dbfe95c0f3b62", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/15320f08e0a987da68b4c374f92dbfe95c0f3b62", "committedDate": "2020-02-20T13:54:06Z", "message": "#2577 fix type in message\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1805b048c4a087a4cbb938539a4886282e3f701", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/c1805b048c4a087a4cbb938539a4886282e3f701", "committedDate": "2020-02-21T09:18:22Z", "message": "Merge branch 'master' of https://github.com/odpi/egeria into git2577"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNTc1NTM3", "url": "https://github.com/odpi/egeria/pull/2592#pullrequestreview-362575537", "createdAt": "2020-02-21T11:46:55Z", "commit": {"oid": "c1805b048c4a087a4cbb938539a4886282e3f701"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88851ca2a0b40023e2bc51e4dec0edb1546b1f79", "author": {"user": {"login": "mandy-chessell", "name": "Mandy Chessell"}}, "url": "https://github.com/odpi/egeria/commit/88851ca2a0b40023e2bc51e4dec0edb1546b1f79", "committedDate": "2020-02-21T11:47:02Z", "message": "Merge branch 'master' into git2577"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3766, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}