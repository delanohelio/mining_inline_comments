{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NDk1OTM2", "number": 3245, "title": "Big refactoring and fix bugs", "bodyText": "Hello! I did a lot of research and found a lot of duplication, which entails code redundancy. The fewer classes, duplicates, and code in general, the easier it is for new people to delve into the project. Also, in the process, I came across not a lot of minor flaws (such as for example sudden NullPointerException's).\n\n\n\nSo I decided to take the liberty and try to fix it.\nI completely closed the problems described here -> #3090\nAs you can see on the screen now when requesting categories, we also get their parent category.\n\nThese and many other problems have been fixed by me.\nAs promised, I updated FVT's\nI rewrote most of the code to generics, thereby removing a lot of virtually the same classes.\nThe remaining javadocs that I have not yet completed, I will definitely add after the approval of my changes.\nI hope you appreciate my work. I spent a lot of free time on it)), for about a month, quite a lot of dense refactoring. I apologize for the pool request much more, I understand that it will be difficult to verify it, but this work captured just absolutely all the modules presented here and I could not break it into pieces.", "createdAt": "2020-06-23T11:05:53Z", "url": "https://github.com/odpi/egeria/pull/3245", "merged": true, "mergeCommit": {"oid": "c19bbd0d75bd457b97100e88aaca272341e4a613"}, "closed": true, "closedAt": "2020-07-01T10:12:23Z", "author": {"login": "immmus"}, "timelineItems": {"totalCount": 46, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsQ0IFAH2gAyNDM4NDk1OTM2OjdiZDEyOGFmNzhmM2JlZTQwYjdkMzk3MmU5YjcyNzExYjRjYmIyZjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwm1xDAH2gAyNDM4NDk1OTM2OmY3OGYwNjg4OWQxZjI0MzMzOGMwZDlhZWFkNDhlZWYzMTYxNmFjNzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7bd128af78f3bee40b7d3972e9b72711b4cbb2f7", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/7bd128af78f3bee40b7d3972e9b72711b4cbb2f7", "committedDate": "2020-06-17T21:34:10Z", "message": "Upgrade mappers classes with generics\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "008dabcbc212d63dc5fb8d7480a9048e78723df7", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/008dabcbc212d63dc5fb8d7480a9048e78723df7", "committedDate": "2020-06-17T21:35:17Z", "message": "Factory refactoring\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43be2c606d5ece1ad3399de40d0e9b46913ff137", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/43be2c606d5ece1ad3399de40d0e9b46913ff137", "committedDate": "2020-06-17T21:41:37Z", "message": "Resolve NullPointerException\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8619c9322d617c39f69a06ad9025a77ffce9978", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/e8619c9322d617c39f69a06ad9025a77ffce9978", "committedDate": "2020-06-17T21:42:05Z", "message": "Added necessary methods to RepositoryHandler\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f044fcafb373a520991279fca4fd403919a370aa", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/f044fcafb373a520991279fca4fd403919a370aa", "committedDate": "2020-06-17T21:47:36Z", "message": "Refactoring helper\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12013e41fae50530787c3479de8a39f0c0e84078", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/12013e41fae50530787c3479de8a39f0c0e84078", "committedDate": "2020-06-17T21:50:00Z", "message": "removed unnecessary classes\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "285c24c5c32edf71456d07dd37c9c7474f810438", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/285c24c5c32edf71456d07dd37c9c7474f810438", "committedDate": "2020-06-17T21:50:37Z", "message": "small ref domains\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fbed2485030724e4c5524f181f3746345051ca3", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/9fbed2485030724e4c5524f181f3746345051ca3", "committedDate": "2020-06-17T21:54:36Z", "message": "Refactoring handlers\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca0c6ead05fdbb09bedb813eefd13469f86d3c9a", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/ca0c6ead05fdbb09bedb813eefd13469f86d3c9a", "committedDate": "2020-06-17T21:55:21Z", "message": "Refactoring rest services\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fcada142d18f82fe305c187b40ce025fa77cd3d", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/9fcada142d18f82fe305c187b40ce025fa77cd3d", "committedDate": "2020-06-17T21:56:00Z", "message": "Refactoring rest resources\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffdca346e932bcb9aa595dfe3adc79280751c207", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/ffdca346e932bcb9aa595dfe3adc79280751c207", "committedDate": "2020-06-17T21:56:47Z", "message": "Add FVT's\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e939bb6c7fe8dc53c00ef3172c75b5863d35fb3c", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/e939bb6c7fe8dc53c00ef3172c75b5863d35fb3c", "committedDate": "2020-06-17T22:55:56Z", "message": "Merge branch 'master' into big_refactoring_and_fix_bugs\n\n# Conflicts:\n#\topen-metadata-implementation/access-services/subject-area/subject-area-client/pom.xml\n#\topen-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/SubjectAreaCategory.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/SubjectAreaProject.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/SubjectAreaBaseImpl.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/SubjectAreaCategoryImpl.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/SubjectAreaGlossaryImpl.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/SubjectAreaProjectImpl.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/SubjectAreaTermImpl.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/handlers/SubjectAreaCategoryHandler.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/handlers/SubjectAreaGlossaryHandler.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/handlers/SubjectAreaHandler.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/handlers/SubjectAreaProjectHandler.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/handlers/SubjectAreaRelationshipHandler.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/handlers/SubjectAreaTermHandler.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/server/handlers/ErrorHandler.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/server/mappers/ExceptionMapper.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/server/mappers/entities/CategoryMapper.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/server/services/SubjectAreaRESTServicesInstance.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/server/services/SubjectAreaRelationshipRESTServices.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/utilities/OMRSAPIHelper.java\n#\topen-metadata-implementation/access-services/subject-area/subject-area-spring/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/server/spring/SubjectAreaRelationshipRESTResource.java\n#\topen-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/handlers/CategoryHandler.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f6907cd7ce15b6bc3ea3d18add53efbdf1afc85", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/7f6907cd7ce15b6bc3ea3d18add53efbdf1afc85", "committedDate": "2020-06-22T08:20:10Z", "message": "Change standard exception in OMRSAPIHepler\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6d1c24fa1ee2774f8834f89a7412d5b138cfad8", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/f6d1c24fa1ee2774f8834f89a7412d5b138cfad8", "committedDate": "2020-06-22T08:21:55Z", "message": "Made return is updated entity\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bcc8a6d0d70b7393b176489d270a5c5de36417d", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/1bcc8a6d0d70b7393b176489d270a5c5de36417d", "committedDate": "2020-06-22T08:23:33Z", "message": "Resolve conflicts\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5b184469989e93c33dcc8bded97770c67a70873", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/d5b184469989e93c33dcc8bded97770c67a70873", "committedDate": "2020-06-22T10:44:46Z", "message": "Resolved NullPointerException's\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b5cf77245ee7b67cb22cd9c04cd42082ab2be1e", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/7b5cf77245ee7b67cb22cd9c04cd42082ab2be1e", "committedDate": "2020-06-22T16:01:33Z", "message": "Made optimization for Classification's\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85d4674a9441e43fbbe680f326e789e2050ea34a", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/85d4674a9441e43fbbe680f326e789e2050ea34a", "committedDate": "2020-06-23T09:48:32Z", "message": "Refactoring for purge\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d88d72090a93a033be91cbad41b9cca1d67d4e52", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/d88d72090a93a033be91cbad41b9cca1d67d4e52", "committedDate": "2020-06-23T09:49:30Z", "message": "small fix\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9073d1937ebb9ede0f073d979c40f6ab46698181", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/9073d1937ebb9ede0f073d979c40f6ab46698181", "committedDate": "2020-06-23T09:49:55Z", "message": "Fix exceptions\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73b1bba47978a6491d56ceee7494aab81bd24d48", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/73b1bba47978a6491d56ceee7494aab81bd24d48", "committedDate": "2020-06-23T09:53:39Z", "message": "UpdateSubjectAreaClient to generics\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34cf55d11a071a744160a7430906620f1d1f73f0", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/34cf55d11a071a744160a7430906620f1d1f73f0", "committedDate": "2020-06-23T09:54:13Z", "message": "Delete unused classes\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c9f0b2a7c0824233ae68e6250055de272dddda4", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/3c9f0b2a7c0824233ae68e6250055de272dddda4", "committedDate": "2020-06-23T10:01:55Z", "message": "Update FVT's\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4529ab7e96e73d62c8206759d9be1dfa8aa4af8e", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/4529ab7e96e73d62c8206759d9be1dfa8aa4af8e", "committedDate": "2020-06-23T10:04:46Z", "message": "Merge branch 'master' into big_refactoring_and_fix_bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "434ee3eda01ff0637391c473313ab838f15b0ad2", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/434ee3eda01ff0637391c473313ab838f15b0ad2", "committedDate": "2020-06-23T10:43:54Z", "message": "fix my mistake\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbb9eb14f3e5acc73bded2b55e10441f25d89657", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/cbb9eb14f3e5acc73bded2b55e10441f25d89657", "committedDate": "2020-06-23T10:46:28Z", "message": "Merge branch 'master' into big_refactoring_and_fix_bugs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1ODgyMDEz", "url": "https://github.com/odpi/egeria/pull/3245#pullrequestreview-435882013", "createdAt": "2020-06-23T15:09:00Z", "commit": {"oid": "cbb9eb14f3e5acc73bded2b55e10441f25d89657"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNTowOTowMVrOGnt3Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNTo1ODowNVrOGnv-vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI5OTA4Ng==", "bodyText": "This type of coding gives the external caller very little information about the type of response to request", "url": "https://github.com/odpi/egeria/pull/3245#discussion_r444299086", "createdAt": "2020-06-23T15:09:01Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/responses/SubjectAreaOMASAPIResponse.java", "diffHunk": "@@ -13,201 +20,40 @@\n  * SubjectAreaOMASAPIResponse provides a common header for Subject Area OMAS managed rest to its REST API.\n  * It manages information about exceptions.  If no exception has been raised exceptionClassName is null.\n  */\n-@JsonAutoDetect(getterVisibility=PUBLIC_ONLY, setterVisibility=PUBLIC_ONLY, fieldVisibility=NONE)\n+@JsonAutoDetect(getterVisibility = PUBLIC_ONLY, setterVisibility = PUBLIC_ONLY, fieldVisibility = NONE)\n @JsonInclude(JsonInclude.Include.NON_NULL)\n-@JsonIgnoreProperties(ignoreUnknown=true)\n-@JsonTypeInfo(use = JsonTypeInfo.Id.NAME,\n-        include = JsonTypeInfo.As.PROPERTY,\n-        property = \"class\")\n-@JsonSubTypes(\n-        {\n-                @JsonSubTypes.Type(value = CategoryResponse.class, name = \"CategoryResponse\"),\n-                @JsonSubTypes.Type(value = CategoriesResponse.class, name = \"CategoriesResponse\"),\n-                @JsonSubTypes.Type(value = GlossaryResponse.class, name = \"GlossaryResponse\"),\n-                @JsonSubTypes.Type(value = GlossariesResponse.class, name = \"GlossariesResponse\"),\n-                @JsonSubTypes.Type(value = SubjectAreaDefinitionResponse.class, name = \"SubjectAreaDefinitionResponse\"),\n-                @JsonSubTypes.Type(value = SubjectAreaDefinitionsResponse.class, name = \"SubjectAreaDefinitionsResponse\"),\n-                @JsonSubTypes.Type(value = TermResponse.class, name = \"TermResponse\"),\n-                @JsonSubTypes.Type(value = TermsResponse.class, name = \"TermsResponse\"),\n-                @JsonSubTypes.Type(value = VoidResponse.class, name = \"VoidResponse\"),\n-                @JsonSubTypes.Type(value = ProjectResponse.class, name = \"ProjectResponse\"),\n-                @JsonSubTypes.Type(value = ProjectsResponse.class, name = \"ProjectsResponse\"),\n-                @JsonSubTypes.Type(value = LinesResponse.class, name = \"LinesResponse\"),\n-\n-                // Lines\n-\n-                // term to term relationship responses\n-                @JsonSubTypes.Type(value = TermHASARelationshipResponse.class, name = \"TermHASARelationshipResponse\"),\n-                @JsonSubTypes.Type(value = RelatedTermResponse.class, name = \"RelatedTermResponse\"),\n-                @JsonSubTypes.Type(value = SynonymRelationshipResponse.class, name = \"SynonymRelationshipResponse\"),\n-                @JsonSubTypes.Type(value = AntonymRelationshipResponse.class, name = \"AntonymRelationshipResponse\"),\n-                @JsonSubTypes.Type(value = PreferredTermRelationshipResponse.class, name = \"PreferredTermRelationshipResponse\"),\n-                @JsonSubTypes.Type(value = ReplacementRelationshipResponse.class, name = \"ReplacementRelationshipResponse\"),\n-                @JsonSubTypes.Type(value = TranslationRelationshipResponse.class, name = \"TranslationRelationshipResponse\"),\n-                @JsonSubTypes.Type(value = ValidValueRelationshipResponse.class, name = \"ValidValueRelationshipResponse\"),\n-                @JsonSubTypes.Type(value = UsedInContextRelationshipResponse.class, name = \"UsedInContextRelationshipResponse\"),\n-                @JsonSubTypes.Type(value = TermISATYPEOFRelationshipResponse.class, name = \"TermISATYPEOFRelationshipResponse\"),\n-                @JsonSubTypes.Type(value = TermTYPEDBYRelationshipResponse.class, name = \"TermTYPEDBYRelationshipResponse\"),\n-                @JsonSubTypes.Type(value = TermISARelationshipResponse.class,name = \"TermISARelationshipResponse\"),\n-                // term to glossary response\n-                @JsonSubTypes.Type(value = TermAnchorRelationshipResponse.class,name = \"TermAnchorRelationshipResponse\"),\n-                // category to glossary response\n-                @JsonSubTypes.Type(value =CategoryAnchorRelationshipResponse.class,name = \"CategoryAnchorRelationshipResponse\"),\n-                // category to term response\n-                @JsonSubTypes.Type(value = TermCategorizationRelationshipResponse.class, name = \"TermCategorizationRelationshipResponse\"),\n-                // Term to asset response\n-                @JsonSubTypes.Type(value = SemanticAssignementRelationshipResponse.class, name = \"SemanticAssignementRelationshipResponse\"),\n-                // external glossary responses\n-                @JsonSubTypes.Type(value = LibraryTermReference.class, name = \"LibraryTermReference\"),\n-                @JsonSubTypes.Type(value = LibraryCategoryReferenceResponse.class, name = \"LibraryCategoryReferenceResponse\"),\n-\n-                @JsonSubTypes.Type(value = ProjectScopeRelationshipResponse.class, name = \"ProjectScopeRelationshipResponse\"),\n-                /*\n-                 Exception responses - note that each exception has the same 4 Exception orientated fields.\n-                 Ideally these should be in a superclass. Due to restrictions in the @JsonSubTypes processing it is only possible to have\n-                 one level of inheritance at this time.\n-                 */\n-                @JsonSubTypes.Type(value = ClassificationExceptionResponse.class, name = \"ClassificationExceptionResponse\"),\n-                @JsonSubTypes.Type(value = EntityNotDeletedExceptionResponse.class, name = \"EntityNotDeletedExceptionResponse\") ,\n-                @JsonSubTypes.Type(value = EntityNotPurgedExceptionResponse.class, name = \"EntityNotPurgedExceptionResponse\") ,\n-                @JsonSubTypes.Type(value = RelationshipNotDeletedExceptionResponse.class, name = \"RelationshipNotDeletedExceptionResponse\") ,\n-                @JsonSubTypes.Type(value = RelationshipNotPurgedExceptionResponse.class, name = \"RelationshipNotPurgedExceptionResponse\") ,\n-                @JsonSubTypes.Type(value = FunctionNotSupportedExceptionResponse.class, name = \"FunctionNotSupportedExceptionResponse\") ,\n-                @JsonSubTypes.Type(value = InvalidParameterExceptionResponse.class, name = \"InvalidParameterExceptionResponse\") ,\n-                @JsonSubTypes.Type(value = MetadataServerUncontactableExceptionResponse.class, name = \"MetadataServerUncontactableExceptionResponse\") ,\n-                @JsonSubTypes.Type(value = RelationshipNotDeletedExceptionResponse.class, name = \"RelationshipNotDeletedExceptionResponse\") ,\n-                @JsonSubTypes.Type(value = StatusNotsupportedExceptionResponse.class, name = \"StatusNotsupportedExceptionResponse\") ,\n-                @JsonSubTypes.Type(value = UnrecognizedGUIDExceptionResponse.class, name = \"UnrecognizedGUIDExceptionResponse\") ,\n-                @JsonSubTypes.Type(value = UserNotAuthorizedExceptionResponse.class, name = \"UserNotAuthorizedExceptionResponse\"),\n-                @JsonSubTypes.Type(value = PropertyServerExceptionResponse.class, name = \"PropertyServerExceptionResponse\"),\n-\n-                @JsonSubTypes.Type(value = GraphResponse.class, name = \"GraphResponse\")\n-\n-        })\n-public abstract class SubjectAreaOMASAPIResponse\n-{\n-    protected int       relatedHTTPCode = 200;\n-    protected ResponseCategory responseCategory;\n-    protected String    messageId = null;\n-    protected String    className = null;\n-    protected String    actionDescription = null;\n-    protected String    formattedMessage = null;\n-\n-    /**\n-     * Default constructor\n-     */\n-    public SubjectAreaOMASAPIResponse() {\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class SubjectAreaOMASAPIResponse<R> extends FFDCResponseBase {\n+    private List<R> result = new ArrayList<>();\n \n+    public void addAllResults(Collection<? extends R> entities) {\n+        this.result.addAll(entities);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb9eb14f3e5acc73bded2b55e10441f25d89657"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMwMTY0OA==", "bodyText": "This type of interface gived very little information about the types of objects that can be passed over the API.", "url": "https://github.com/odpi/egeria/pull/3245#discussion_r444301648", "createdAt": "2020-06-23T15:12:38Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/SubjectAreaClient.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.accessservices.subjectarea.client;\n+\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.common.FindRequest;\n+import org.odpi.openmetadata.frameworks.connectors.ffdc.InvalidParameterException;\n+import org.odpi.openmetadata.frameworks.connectors.ffdc.PropertyServerException;\n+import org.odpi.openmetadata.frameworks.connectors.ffdc.UserNotAuthorizedException;\n+\n+import java.util.List;\n+\n+public interface SubjectAreaClient<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb9eb14f3e5acc73bded2b55e10441f25d89657"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMwMjUzNA==", "bodyText": "What is a Line?", "url": "https://github.com/odpi/egeria/pull/3245#discussion_r444302534", "createdAt": "2020-06-23T15:13:53Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/SubjectAreaRelationshipClient.java", "diffHunk": "@@ -0,0 +1,14 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.accessservices.subjectarea.client;\n+\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.common.FindRequest;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.graph.Line;\n+\n+import java.util.List;\n+\n+public interface SubjectAreaRelationshipClient<L extends Line>  extends SubjectAreaClient<L> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb9eb14f3e5acc73bded2b55e10441f25d89657"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMwMzA4MQ==", "bodyText": "No javadoc\nShould this be public?", "url": "https://github.com/odpi/egeria/pull/3245#discussion_r444303081", "createdAt": "2020-06-23T15:14:40Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/SubjectAreaRestClient.java", "diffHunk": "@@ -0,0 +1,212 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.accessservices.subjectarea.client;\n+\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.common.FindRequest;\n+import org.odpi.openmetadata.accessservices.subjectarea.responses.SubjectAreaOMASAPIResponse;\n+import org.odpi.openmetadata.accessservices.subjectarea.utils.QueryBuilder;\n+import org.odpi.openmetadata.accessservices.subjectarea.utils.QueryUtils;\n+import org.odpi.openmetadata.commonservices.ffdc.rest.FFDCRESTClient;\n+import org.odpi.openmetadata.frameworks.connectors.ffdc.InvalidParameterException;\n+import org.odpi.openmetadata.frameworks.connectors.ffdc.PropertyServerException;\n+import org.odpi.openmetadata.frameworks.connectors.ffdc.UserNotAuthorizedException;\n+import org.odpi.openmetadata.repositoryservices.connectors.stores.metadatacollectionstore.properties.SequencingOrder;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.core.ParameterizedTypeReference;\n+\n+public class SubjectAreaRestClient extends FFDCRESTClient {\n+    private static final Logger log = LoggerFactory.getLogger(SubjectAreaRestClient.class);\n+\n+    private final String serverName;\n+    private final String serverPlatformURLRoot;\n+\n+    public SubjectAreaRestClient(String serverName, String serverPlatformURLRoot) throws InvalidParameterException {\n+        super(serverName, serverPlatformURLRoot);\n+        this.serverName = serverName;\n+        this.serverPlatformURLRoot = serverPlatformURLRoot;\n+    }\n+\n+    public SubjectAreaRestClient(String serverName,\n+                                 String serverPlatformURLRoot,\n+                                 String userId,\n+                                 String password) throws InvalidParameterException\n+    {\n+        super(serverName, serverPlatformURLRoot, userId, password);\n+        this.serverName = serverName;\n+        this.serverPlatformURLRoot = serverPlatformURLRoot;\n+    }\n+\n+    public <T> SubjectAreaOMASAPIResponse<T> postRESTCall(String userId,\n+                                                          String methodName,\n+                                                          String urlTemplate,\n+                                                          ParameterizedTypeReference<SubjectAreaOMASAPIResponse<T>> type,\n+                                                          T requestBody) throws PropertyServerException,\n+                                                                                 UserNotAuthorizedException,\n+                                                                                 InvalidParameterException\n+    {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"==> Method: \" + methodName + \",userId=\" + userId);\n+        }\n+        String expandedURL = String.format(serverPlatformURLRoot + urlTemplate, serverName, userId);\n+        SubjectAreaOMASAPIResponse<T> response = callPostRESTCall(methodName, type, expandedURL, requestBody);\n+        exceptionHandler.detectAndThrowStandardExceptions(methodName, response);\n+\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"<== successful method : \" + methodName + \",userId=\" + userId);\n+        }\n+        return response;\n+    }\n+\n+    public <T> SubjectAreaOMASAPIResponse<T> putRESTCall(String userId,\n+                                                         String guid,\n+                                                         String methodName,\n+                                                         String urlTemplate,\n+                                                         ParameterizedTypeReference<SubjectAreaOMASAPIResponse<T>> type,\n+                                                         T requestBody) throws InvalidParameterException,\n+                                                                                PropertyServerException,\n+                                                                                UserNotAuthorizedException\n+    {\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"==> Method: \" + methodName + \",userId=\" + userId + \",guid=\" + guid);\n+        }\n+        String expandedURL = String.format(serverPlatformURLRoot + urlTemplate, serverName, userId, guid);\n+        SubjectAreaOMASAPIResponse<T> response = callPutRESTCall(methodName, type, expandedURL, requestBody);\n+        exceptionHandler.detectAndThrowStandardExceptions(methodName, response);\n+\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"<== successful method : \" + methodName + \",userId=\" + userId);\n+        }\n+        return response;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb9eb14f3e5acc73bded2b55e10441f25d89657"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMwNDQ5OA==", "bodyText": "Javadoc?", "url": "https://github.com/odpi/egeria/pull/3245#discussion_r444304498", "createdAt": "2020-06-23T15:16:33Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/relationships/SubjectAreaLine.java", "diffHunk": "@@ -0,0 +1,340 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.accessservices.subjectarea.client.relationships;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb9eb14f3e5acc73bded2b55e10441f25d89657"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMyMzEyNg==", "bodyText": "Need to review new dependencies with team ... see https://github.com/odpi/egeria/blob/master/developer-resources/Developer-Guidelines.md#dependent-libraries", "url": "https://github.com/odpi/egeria/pull/3245#discussion_r444323126", "createdAt": "2020-06-23T15:42:53Z", "author": {"login": "mandy-chessell"}, "path": "pom.xml", "diffHunk": "@@ -2390,6 +2392,18 @@\n                 <version>${jcl-over-slf4j.version}</version>\n             </dependency>\n \n+            <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb9eb14f3e5acc73bded2b55e10441f25d89657"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMzMzc1OQ==", "bodyText": "hasA", "url": "https://github.com/odpi/egeria/pull/3245#discussion_r444333759", "createdAt": "2020-06-23T15:58:05Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/relationships/SubjectAreaLine.java", "diffHunk": "@@ -0,0 +1,340 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.accessservices.subjectarea.client.relationships;\n+\n+import org.odpi.openmetadata.accessservices.subjectarea.client.SubjectAreaRelationshipClient;\n+import org.odpi.openmetadata.accessservices.subjectarea.client.SubjectAreaRestClient;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.graph.Line;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.relationships.*;\n+import org.reflections.Reflections;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class SubjectAreaLine implements SubjectAreaRelationship {\n+\n+    private static final String HASA = \"has-as\";\n+    private static final String RELATED_TERM = \"related-terms\";\n+    private static final String SYNONYM = \"synonyms\";\n+    private static final String ANTONYM = \"antonyms\";\n+    private static final String TRANSLATION = \"translations\";\n+    private static final String USED_IN_CONTEXT = \"used-in-contexts\";\n+    private static final String PREFERRED_TERM = \"preferred-terms\";\n+    private static final String VALID_VALUE = \"valid-values\";\n+    private static final String REPLACEMENT_TERM = \"replacement-terms\";\n+    private static final String TYPED_BY = \"typed-bys\";\n+    private static final String IS_A = \"is-as\";\n+    private static final String IS_A_TYPE_OF = \"is-a-type-ofs\";\n+    private static final String TERM_CATEGORIZATION = \"term-categorizations\";\n+    private static final String SEMANTIC_ASSIGNMENT = \"semantic-assignments\";\n+    private static final String TERM_ANCHOR = \"term-anchor\";\n+    private static final String CATEGORY_ANCHOR = \"category-anchor\";\n+    private static final String PROJECT_SCOPE = \"project-scopes\";\n+\n+    private Map<Class<?>, SubjectAreaRelationshipClient<?>> cache = new HashMap<>();\n+\n+    @SuppressWarnings(\"rawtypes\")\n+    public SubjectAreaLine(String packageToScan, SubjectAreaRestClient subjectAreaRestClient) {\n+        Reflections reflections = new Reflections(packageToScan);\n+        Set<Class<?>> clientClasses = reflections.getTypesAnnotatedWith(SubjectAreaLineClient.class);\n+        for (Class<?> declaredClass : clientClasses) {\n+            try {\n+                if (AbstractSubjectAreaRelationship.class.isAssignableFrom(declaredClass)) {\n+                    Constructor<?> ctor = declaredClass.getDeclaredConstructor(SubjectAreaRestClient.class);\n+                    ctor.setAccessible(true);\n+                    final AbstractSubjectAreaRelationship newInstance =\n+                            (AbstractSubjectAreaRelationship) ctor.newInstance(subjectAreaRestClient);\n+                    cache.put(newInstance.type(), newInstance);\n+                }\n+            } catch (NoSuchMethodException\n+                    | IllegalAccessException\n+                    | InstantiationException\n+                    | InvocationTargetException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+    public SubjectAreaLine(SubjectAreaRestClient subjectAreaRestClient) {\n+        this(SubjectAreaLine.class.getPackage().getName(), subjectAreaRestClient);\n+    }\n+\n+    @Override\n+    public SubjectAreaRelationshipClient<Hasa> hasa() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbb9eb14f3e5acc73bded2b55e10441f25d89657"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "584c016652f5423773b93c97e7aa40d83ea15f3d", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/584c016652f5423773b93c97e7aa40d83ea15f3d", "committedDate": "2020-06-25T10:00:09Z", "message": "small correction\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d032417cad49d04afc4be7c112c2f6e402bb20ec", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/d032417cad49d04afc4be7c112c2f6e402bb20ec", "committedDate": "2020-06-25T10:00:24Z", "message": "Added javadoc for SubjectAreaRestClient\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9173699c031de71e7e1e2370c876a959e08b1c25", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/9173699c031de71e7e1e2370c876a959e08b1c25", "committedDate": "2020-06-25T12:00:23Z", "message": "#Small correction SubjectAreaLine and SubjectAreaNode constructors. Added javadocs.\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea25bc6d23434e1047c879c8a96836cd68689d1e", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/ea25bc6d23434e1047c879c8a96836cd68689d1e", "committedDate": "2020-06-25T17:44:54Z", "message": "Merge branch 'master' into big_refactoring_and_fix_bugs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MTMzODgy", "url": "https://github.com/odpi/egeria/pull/3245#pullrequestreview-438133882", "createdAt": "2020-06-26T09:04:23Z", "commit": {"oid": "ea25bc6d23434e1047c879c8a96836cd68689d1e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08998747c32533f64bfa1585f23366014b92ce5e", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/08998747c32533f64bfa1585f23366014b92ce5e", "committedDate": "2020-06-26T11:38:15Z", "message": "# fix mistake\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43aefc737250e0695f6a3b7df684def0074bb919", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/43aefc737250e0695f6a3b7df684def0074bb919", "committedDate": "2020-06-26T11:38:36Z", "message": "Merge remote-tracking branch 'origin/big_refactoring_and_fix_bugs' into big_refactoring_and_fix_bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "291a005decdb6397c1d5e03b6180f6f9481b16de", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/291a005decdb6397c1d5e03b6180f6f9481b16de", "committedDate": "2020-06-26T11:54:43Z", "message": "# commented\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdbd90f30b2bf5d54e195e76d42bd5e569d1ffe6", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/bdbd90f30b2bf5d54e195e76d42bd5e569d1ffe6", "committedDate": "2020-06-29T08:07:58Z", "message": "Merge branch 'master' into big_refactoring_and_fix_bugs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4OTc1MDA4", "url": "https://github.com/odpi/egeria/pull/3245#pullrequestreview-438975008", "createdAt": "2020-06-29T08:08:42Z", "commit": {"oid": "bdbd90f30b2bf5d54e195e76d42bd5e569d1ffe6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89244b7c0c1ca23a232b403b168d8d046b520102", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/89244b7c0c1ca23a232b403b168d8d046b520102", "committedDate": "2020-06-29T10:00:07Z", "message": "# Added javadoc for Parametrization interface\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e5fdb5a32cdca2ce44ed38829834eb6d299ad60", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/7e5fdb5a32cdca2ce44ed38829834eb6d299ad60", "committedDate": "2020-06-29T10:00:49Z", "message": "Merge remote-tracking branch 'origin/big_refactoring_and_fix_bugs' into big_refactoring_and_fix_bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c961c813afe49b298357f3ac8444a62dcb405a86", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/c961c813afe49b298357f3ac8444a62dcb405a86", "committedDate": "2020-06-29T10:26:51Z", "message": "# Added javadoc for query param encode\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e073034a724a445d67f89a045f44f5f4cd136632", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/e073034a724a445d67f89a045f44f5f4cd136632", "committedDate": "2020-06-29T10:50:17Z", "message": "# Added javadoc\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MTUwMjY1", "url": "https://github.com/odpi/egeria/pull/3245#pullrequestreview-439150265", "createdAt": "2020-06-29T13:36:50Z", "commit": {"oid": "e073034a724a445d67f89a045f44f5f4cd136632"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MjY4Njk3", "url": "https://github.com/odpi/egeria/pull/3245#pullrequestreview-439268697", "createdAt": "2020-06-29T15:38:06Z", "commit": {"oid": "e073034a724a445d67f89a045f44f5f4cd136632"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNTozODowN1rOGqWuTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNTozOTo0MFrOGqWyeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA2NTY3OA==", "bodyText": "We cannot have printStackTrace", "url": "https://github.com/odpi/egeria/pull/3245#discussion_r447065678", "createdAt": "2020-06-29T15:38:07Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/server/mappers/MappersFactory.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.accessservices.subjectarea.server.mappers;\n+\n+import org.odpi.openmetadata.accessservices.subjectarea.utilities.OMRSAPIHelper;\n+import org.reflections.Reflections;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Supplier;\n+\n+public class MappersFactory {\n+    private final Map<Class<?>, Supplier<Object>> mappers = new HashMap<>();\n+    private final String SUBJECT_AREA_PACKAGE = \"org.odpi.openmetadata.accessservices.subjectarea\";\n+\n+    public MappersFactory(final OMRSAPIHelper omrsApiHelper) {\n+        Reflections reflections = new Reflections(SUBJECT_AREA_PACKAGE);\n+        Set<Class<?>> mappersClasses = reflections.getTypesAnnotatedWith(SubjectAreaMapper.class);\n+        for (Class<?> mapperClass : mappersClasses) {\n+            try {\n+                Constructor<?> ctor = mapperClass.getDeclaredConstructor(OMRSAPIHelper.class);\n+                ctor.setAccessible(true);\n+                final Object mapper = ctor.newInstance(omrsApiHelper);\n+                mappers.put(mapperClass, () -> mapper);\n+            } catch (NoSuchMethodException\n+                    | IllegalAccessException\n+                    | InstantiationException\n+                    | InvocationTargetException e) {\n+                e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e073034a724a445d67f89a045f44f5f4cd136632"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA2NTk3NQ==", "bodyText": "We cannot gobble exceptions", "url": "https://github.com/odpi/egeria/pull/3245#discussion_r447065975", "createdAt": "2020-06-29T15:38:34Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/server/mappers/MappersFactory.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.accessservices.subjectarea.server.mappers;\n+\n+import org.odpi.openmetadata.accessservices.subjectarea.utilities.OMRSAPIHelper;\n+import org.reflections.Reflections;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Supplier;\n+\n+public class MappersFactory {\n+    private final Map<Class<?>, Supplier<Object>> mappers = new HashMap<>();\n+    private final String SUBJECT_AREA_PACKAGE = \"org.odpi.openmetadata.accessservices.subjectarea\";\n+\n+    public MappersFactory(final OMRSAPIHelper omrsApiHelper) {\n+        Reflections reflections = new Reflections(SUBJECT_AREA_PACKAGE);\n+        Set<Class<?>> mappersClasses = reflections.getTypesAnnotatedWith(SubjectAreaMapper.class);\n+        for (Class<?> mapperClass : mappersClasses) {\n+            try {\n+                Constructor<?> ctor = mapperClass.getDeclaredConstructor(OMRSAPIHelper.class);\n+                ctor.setAccessible(true);\n+                final Object mapper = ctor.newInstance(omrsApiHelper);\n+                mappers.put(mapperClass, () -> mapper);\n+            } catch (NoSuchMethodException\n+                    | IllegalAccessException\n+                    | InstantiationException\n+                    | InvocationTargetException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public <T>T get(Class<T> mapperClass) {\n+        if (mappers.containsKey(mapperClass)) {\n+            return (T) this.mappers.get(mapperClass).get();\n+        }\n+        //TODO throw Error", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e073034a724a445d67f89a045f44f5f4cd136632"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA2Njc0NA==", "bodyText": "cannot have stack traces - we need to deal with the errors properly", "url": "https://github.com/odpi/egeria/pull/3245#discussion_r447066744", "createdAt": "2020-06-29T15:39:40Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-client/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/client/entities/SubjectAreaNode.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.accessservices.subjectarea.client.entities;\n+\n+import org.odpi.openmetadata.accessservices.subjectarea.client.SubjectAreaEntityClient;\n+import org.odpi.openmetadata.accessservices.subjectarea.client.SubjectAreaRestClient;\n+import org.odpi.openmetadata.accessservices.subjectarea.client.entities.categories.SubjectAreaCategory;\n+import org.odpi.openmetadata.accessservices.subjectarea.client.entities.glossaries.SubjectAreaGlossary;\n+import org.odpi.openmetadata.accessservices.subjectarea.client.entities.projects.SubjectAreaProject;\n+import org.odpi.openmetadata.accessservices.subjectarea.client.entities.terms.SubjectAreaTerm;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.category.Category;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.category.SubjectAreaDefinition;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.glossary.Glossary;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.graph.Line;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.graph.Node;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.project.Project;\n+import org.odpi.openmetadata.accessservices.subjectarea.properties.objects.term.Term;\n+import org.reflections.Reflections;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.*;\n+\n+/**\n+ * The OMAS client library implementation of the Subject Area OMAS.\n+ * This interface provides entities {@link Node} authoring interface for subject area experts.\n+ * A standard set of customers is described in {@link SubjectAreaCategory}, {@link SubjectAreaTerm},\n+ * {@link SubjectAreaProject}, {@link SubjectAreaGlossary}\n+ */\n+public class SubjectAreaNode implements SubjectAreaCategory, SubjectAreaTerm, SubjectAreaProject, SubjectAreaGlossary {\n+    private Map<Class<?>, SubjectAreaEntityClient<?>> cache = new HashMap<>();\n+    private static final String DEFAULT_SCAN_PACKAGE = SubjectAreaNode.class.getPackage().getName();\n+\n+    /**\n+     * @param packagesToScan - search packages for finding classes placed by annotation {@link SubjectAreaNodeClient}\n+     * @param subjectAreaRestClient - rest client for Subject Area OMAS REST APIs\n+     * */\n+    @SuppressWarnings(\"rawtypes\")\n+    public SubjectAreaNode(SubjectAreaRestClient subjectAreaRestClient, String... packagesToScan) {\n+        Set<String> packages = new HashSet<>(Arrays.asList(packagesToScan));\n+        packages.add(DEFAULT_SCAN_PACKAGE);\n+\n+        Reflections reflections = new Reflections(packages);\n+        Set<Class<?>> clientClasses = reflections.getTypesAnnotatedWith(SubjectAreaNodeClient.class);\n+        for (Class<?> declaredClass : clientClasses) {\n+            try {\n+                if (AbstractSubjectAreaEntity.class.isAssignableFrom(declaredClass)) {\n+                    Constructor<?> ctor = declaredClass.getDeclaredConstructor(SubjectAreaRestClient.class);\n+                    ctor.setAccessible(true);\n+                    final AbstractSubjectAreaEntity newInstance =\n+                            (AbstractSubjectAreaEntity) ctor.newInstance(subjectAreaRestClient);\n+                    cache.put(newInstance.type(), newInstance);\n+                }\n+            } catch (NoSuchMethodException\n+                    | IllegalAccessException\n+                    | InstantiationException\n+                    | InvocationTargetException e) {\n+                e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e073034a724a445d67f89a045f44f5f4cd136632"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d6693049e98aeec744e0ad1cef499efa4544d60", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/5d6693049e98aeec744e0ad1cef499efa4544d60", "committedDate": "2020-06-30T08:52:46Z", "message": "# Added handling exception and javadoc for MappersFactory.\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f07cb7aaadefb7b30e1434dc1861a0a0d731457b", "author": {"user": {"login": "immmus", "name": "Ilya Ksenofontov"}}, "url": "https://github.com/odpi/egeria/commit/f07cb7aaadefb7b30e1434dc1861a0a0d731457b", "committedDate": "2020-06-30T12:43:34Z", "message": "# Added javadocs\n\nSigned-off-by: immmus <fonto.trg@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f78f06889d1f243338c0d9aead48eef31616ac79", "author": {"user": {"login": "davidradl", "name": "David Radley"}}, "url": "https://github.com/odpi/egeria/commit/f78f06889d1f243338c0d9aead48eef31616ac79", "committedDate": "2020-07-01T09:29:34Z", "message": "Merge branch 'master' into big_refactoring_and_fix_bugs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3662, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}