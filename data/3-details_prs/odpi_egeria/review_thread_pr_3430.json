{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMTA4NDU3", "number": 3430, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNTowMjo0N1rOEUpDRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNTowMjo0N1rOEUpDRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDc5NTU4OnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/user-interfaces/ui-chassis/ui-chassis-spring/src/main/java/org/odpi/openmetadata/userinterface/uichassis/springboot/auth/LoggingRequestFilter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNTowMjo0N1rOG69Hkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNjowMjo1MVrOG6_Y_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ3MTk1NA==", "bodyText": "Do we have a concern here that this is potentially personally identifiable information -- the combination of host, username, session is quite specific.\nCan you elaborate on what is recorded for the logging. how this information is used and how it's control is documented?", "url": "https://github.com/odpi/egeria/pull/3430#discussion_r464471954", "createdAt": "2020-08-03T15:02:47Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/ui-chassis/ui-chassis-spring/src/main/java/org/odpi/openmetadata/userinterface/uichassis/springboot/auth/LoggingRequestFilter.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.userinterface.uichassis.springboot.auth;\n+\n+import org.slf4j.MDC;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+public class LoggingRequestFilter implements Filter {\n+    private String path;\n+\n+    public LoggingRequestFilter(String path) {\n+        this.path = path;\n+    }\n+\n+    @Override\n+    public void init(FilterConfig filterConfig) throws ServletException {\n+\n+    }\n+\n+    @Override\n+    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n+        HttpServletRequest httpRequest = (HttpServletRequest) servletRequest;\n+        String requestURI = httpRequest.getRequestURI();\n+        if (!path.equals(requestURI)) {\n+            filterChain.doFilter(servletRequest, servletResponse);\n+            return;\n+        }\n+        MDC.put(\"remoteAddress\", httpRequest.getRemoteAddr());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd4024e0e8ef530eb93d422da4119ec54a484242"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5NzM0OA==", "bodyText": "@planetf1 the purpose is to have audit trail logging to supervise all actions from all users.\nIt is security related.\nThere is no personal information involved.", "url": "https://github.com/odpi/egeria/pull/3430#discussion_r464497348", "createdAt": "2020-08-03T15:43:15Z", "author": {"login": "bogdan-sava"}, "path": "open-metadata-implementation/user-interfaces/ui-chassis/ui-chassis-spring/src/main/java/org/odpi/openmetadata/userinterface/uichassis/springboot/auth/LoggingRequestFilter.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.userinterface.uichassis.springboot.auth;\n+\n+import org.slf4j.MDC;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+public class LoggingRequestFilter implements Filter {\n+    private String path;\n+\n+    public LoggingRequestFilter(String path) {\n+        this.path = path;\n+    }\n+\n+    @Override\n+    public void init(FilterConfig filterConfig) throws ServletException {\n+\n+    }\n+\n+    @Override\n+    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n+        HttpServletRequest httpRequest = (HttpServletRequest) servletRequest;\n+        String requestURI = httpRequest.getRequestURI();\n+        if (!path.equals(requestURI)) {\n+            filterChain.doFilter(servletRequest, servletResponse);\n+            return;\n+        }\n+        MDC.put(\"remoteAddress\", httpRequest.getRemoteAddr());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ3MTk1NA=="}, "originalCommit": {"oid": "dd4024e0e8ef530eb93d422da4119ec54a484242"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUwOTE4MQ==", "bodyText": "(oops skipped the thread - added comments in main body)", "url": "https://github.com/odpi/egeria/pull/3430#discussion_r464509181", "createdAt": "2020-08-03T16:02:51Z", "author": {"login": "planetf1"}, "path": "open-metadata-implementation/user-interfaces/ui-chassis/ui-chassis-spring/src/main/java/org/odpi/openmetadata/userinterface/uichassis/springboot/auth/LoggingRequestFilter.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.userinterface.uichassis.springboot.auth;\n+\n+import org.slf4j.MDC;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+public class LoggingRequestFilter implements Filter {\n+    private String path;\n+\n+    public LoggingRequestFilter(String path) {\n+        this.path = path;\n+    }\n+\n+    @Override\n+    public void init(FilterConfig filterConfig) throws ServletException {\n+\n+    }\n+\n+    @Override\n+    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n+        HttpServletRequest httpRequest = (HttpServletRequest) servletRequest;\n+        String requestURI = httpRequest.getRequestURI();\n+        if (!path.equals(requestURI)) {\n+            filterChain.doFilter(servletRequest, servletResponse);\n+            return;\n+        }\n+        MDC.put(\"remoteAddress\", httpRequest.getRemoteAddr());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ3MTk1NA=="}, "originalCommit": {"oid": "dd4024e0e8ef530eb93d422da4119ec54a484242"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2625, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}