{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MjkxMjc1", "number": 2482, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMTozNToyMlrODaI51Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMTozNToyMlrODaI51Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NzM1NDQ1OnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/governance-servers/open-lineage-services/open-lineage-services-server/src/main/java/org/odpi/openmetadata/governanceservers/openlineage/server/OpenLineageRestServices.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMTozNToyMlrOFg7J7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwOTo1NjoxMlrOFhYpqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA2Nzk1MA==", "bodyText": "log.debug because a high number of requests are expected and these exceptions can thus occur frequently", "url": "https://github.com/odpi/egeria/pull/2482#discussion_r370067950", "createdAt": "2020-01-23T11:35:22Z", "author": {"login": "GuyAckermans"}, "path": "open-metadata-implementation/governance-servers/open-lineage-services/open-lineage-services-server/src/main/java/org/odpi/openmetadata/governanceservers/openlineage/server/OpenLineageRestServices.java", "diffHunk": "@@ -63,16 +63,21 @@ public LineageResponse lineage(String serverName, String userId, Scope scope, St\n                     serverName,\n                     methodName);\n             response = openLineageHandler.lineage(scope, guid, displayNameMustContain, includeProcesses);\n-        } catch (InvalidParameterException error) {\n-            openLineageExceptionHandler.captureInvalidParameterException(response, error);\n-        } catch (org.odpi.openmetadata.frameworks.connectors.ffdc.PropertyServerException error) {\n-            openLineageExceptionHandler.capturePropertyServerException(response, error);\n-        } catch (UserNotAuthorizedException error) {\n-            openLineageExceptionHandler.captureUserNotAuthorizedException(response, error);\n-        } catch (OpenLineageException error) {\n-            openLineageExceptionHandler.captureOpenLineageException(response, error);\n-        }catch (Throwable error) {\n-            openLineageExceptionHandler.captureThrowable(response, error, methodName);\n+        } catch (InvalidParameterException e) {\n+            openLineageExceptionHandler.captureInvalidParameterException(response, e);\n+            log.debug(\"Open Lineage Services: An exception occurred during a lineage HTTP request\", e);\n+        } catch (org.odpi.openmetadata.frameworks.connectors.ffdc.PropertyServerException e) {\n+            openLineageExceptionHandler.capturePropertyServerException(response, e);\n+            log.debug(\"Open Lineage Services: An exception occurred during a lineage HTTP request\", e);\n+        } catch (UserNotAuthorizedException e) {\n+            openLineageExceptionHandler.captureUserNotAuthorizedException(response, e);\n+            log.debug(\"Open Lineage Services: An exception occurred during a lineage HTTP request\", e);\n+        } catch (OpenLineageException e) {\n+            openLineageExceptionHandler.captureOpenLineageException(response, e);\n+            log.debug(\"Open Lineage Services: An exception occurred during a lineage HTTP request\", e);\n+        }catch (Throwable e) {\n+            openLineageExceptionHandler.captureThrowable(response, e, methodName);\n+            log.debug(\"Open Lineage Services: An exception occurred during a lineage HTTP request\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b1b8422756e96c40317462de63c3e8ade47f81f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU0NDQ5Nw==", "bodyText": "The string passed to debug looks identical across all calls, therefore it can be extracted into a constant", "url": "https://github.com/odpi/egeria/pull/2482#discussion_r370544497", "createdAt": "2020-01-24T09:40:51Z", "author": {"login": "lcpopa"}, "path": "open-metadata-implementation/governance-servers/open-lineage-services/open-lineage-services-server/src/main/java/org/odpi/openmetadata/governanceservers/openlineage/server/OpenLineageRestServices.java", "diffHunk": "@@ -63,16 +63,21 @@ public LineageResponse lineage(String serverName, String userId, Scope scope, St\n                     serverName,\n                     methodName);\n             response = openLineageHandler.lineage(scope, guid, displayNameMustContain, includeProcesses);\n-        } catch (InvalidParameterException error) {\n-            openLineageExceptionHandler.captureInvalidParameterException(response, error);\n-        } catch (org.odpi.openmetadata.frameworks.connectors.ffdc.PropertyServerException error) {\n-            openLineageExceptionHandler.capturePropertyServerException(response, error);\n-        } catch (UserNotAuthorizedException error) {\n-            openLineageExceptionHandler.captureUserNotAuthorizedException(response, error);\n-        } catch (OpenLineageException error) {\n-            openLineageExceptionHandler.captureOpenLineageException(response, error);\n-        }catch (Throwable error) {\n-            openLineageExceptionHandler.captureThrowable(response, error, methodName);\n+        } catch (InvalidParameterException e) {\n+            openLineageExceptionHandler.captureInvalidParameterException(response, e);\n+            log.debug(\"Open Lineage Services: An exception occurred during a lineage HTTP request\", e);\n+        } catch (org.odpi.openmetadata.frameworks.connectors.ffdc.PropertyServerException e) {\n+            openLineageExceptionHandler.capturePropertyServerException(response, e);\n+            log.debug(\"Open Lineage Services: An exception occurred during a lineage HTTP request\", e);\n+        } catch (UserNotAuthorizedException e) {\n+            openLineageExceptionHandler.captureUserNotAuthorizedException(response, e);\n+            log.debug(\"Open Lineage Services: An exception occurred during a lineage HTTP request\", e);\n+        } catch (OpenLineageException e) {\n+            openLineageExceptionHandler.captureOpenLineageException(response, e);\n+            log.debug(\"Open Lineage Services: An exception occurred during a lineage HTTP request\", e);\n+        }catch (Throwable e) {\n+            openLineageExceptionHandler.captureThrowable(response, e, methodName);\n+            log.debug(\"Open Lineage Services: An exception occurred during a lineage HTTP request\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA2Nzk1MA=="}, "originalCommit": {"oid": "6b1b8422756e96c40317462de63c3e8ade47f81f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU1MTIwOA==", "bodyText": "Fixed", "url": "https://github.com/odpi/egeria/pull/2482#discussion_r370551208", "createdAt": "2020-01-24T09:56:12Z", "author": {"login": "GuyAckermans"}, "path": "open-metadata-implementation/governance-servers/open-lineage-services/open-lineage-services-server/src/main/java/org/odpi/openmetadata/governanceservers/openlineage/server/OpenLineageRestServices.java", "diffHunk": "@@ -63,16 +63,21 @@ public LineageResponse lineage(String serverName, String userId, Scope scope, St\n                     serverName,\n                     methodName);\n             response = openLineageHandler.lineage(scope, guid, displayNameMustContain, includeProcesses);\n-        } catch (InvalidParameterException error) {\n-            openLineageExceptionHandler.captureInvalidParameterException(response, error);\n-        } catch (org.odpi.openmetadata.frameworks.connectors.ffdc.PropertyServerException error) {\n-            openLineageExceptionHandler.capturePropertyServerException(response, error);\n-        } catch (UserNotAuthorizedException error) {\n-            openLineageExceptionHandler.captureUserNotAuthorizedException(response, error);\n-        } catch (OpenLineageException error) {\n-            openLineageExceptionHandler.captureOpenLineageException(response, error);\n-        }catch (Throwable error) {\n-            openLineageExceptionHandler.captureThrowable(response, error, methodName);\n+        } catch (InvalidParameterException e) {\n+            openLineageExceptionHandler.captureInvalidParameterException(response, e);\n+            log.debug(\"Open Lineage Services: An exception occurred during a lineage HTTP request\", e);\n+        } catch (org.odpi.openmetadata.frameworks.connectors.ffdc.PropertyServerException e) {\n+            openLineageExceptionHandler.capturePropertyServerException(response, e);\n+            log.debug(\"Open Lineage Services: An exception occurred during a lineage HTTP request\", e);\n+        } catch (UserNotAuthorizedException e) {\n+            openLineageExceptionHandler.captureUserNotAuthorizedException(response, e);\n+            log.debug(\"Open Lineage Services: An exception occurred during a lineage HTTP request\", e);\n+        } catch (OpenLineageException e) {\n+            openLineageExceptionHandler.captureOpenLineageException(response, e);\n+            log.debug(\"Open Lineage Services: An exception occurred during a lineage HTTP request\", e);\n+        }catch (Throwable e) {\n+            openLineageExceptionHandler.captureThrowable(response, e, methodName);\n+            log.debug(\"Open Lineage Services: An exception occurred during a lineage HTTP request\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA2Nzk1MA=="}, "originalCommit": {"oid": "6b1b8422756e96c40317462de63c3e8ade47f81f"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2337, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}