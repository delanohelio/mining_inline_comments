{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NTUxNzQ1", "number": 2978, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzo0OToxNFrOD1yLNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDo1Nzo1N1rOD2noXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzIzMTkwOnYy", "diffSide": "RIGHT", "path": ".gitignore", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzo0OToxNFrOGLYl-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNToxNjo1OVrOGLcnsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU5MDQ1OQ==", "bodyText": "I wonder if this exclude is rather too general -- will we not have .json files in future?\nIf the files are GENERATED they should be under the target tree - those files are already entirely excluded from git.\nSee below for unit test too - we should generate them into a target directory\nThis helps keep excludes under control, and also makes it easier for packaging and assembly", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r414590459", "createdAt": "2020-04-24T13:49:14Z", "author": {"login": "planetf1"}, "path": ".gitignore", "diffHunk": "@@ -89,12 +89,10 @@ egeria-lineage-repositories/**\n *-graph-repository/**\n \n # Ignore archives\n-CloudInformationModel.json\n-CloudInformationModelGUIDMap.json\n-DataStoreConnectorTypes.json\n-DataStoreConnectorsGUIDMap.json\n-OpenMetadataTypes.json\n+*.json", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "568aa28472ca2707a418d74d9b36d9e17341dc2b"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU5NTMzMg==", "bodyText": "Another reason for this is that other build lifecycle aspects like 'clean' will work properly without extra work, as well as making it easier to run other utilities across the source - for docs etc.\nUnfortunately in both the UI and the subject area tests this wasn't done which caused a fair bit of heartache to fix up some consequential issues.", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r414595332", "createdAt": "2020-04-24T13:55:46Z", "author": {"login": "planetf1"}, "path": ".gitignore", "diffHunk": "@@ -89,12 +89,10 @@ egeria-lineage-repositories/**\n *-graph-repository/**\n \n # Ignore archives\n-CloudInformationModel.json\n-CloudInformationModelGUIDMap.json\n-DataStoreConnectorTypes.json\n-DataStoreConnectorsGUIDMap.json\n-OpenMetadataTypes.json\n+*.json", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU5MDQ1OQ=="}, "originalCommit": {"oid": "568aa28472ca2707a418d74d9b36d9e17341dc2b"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY1NjQzNA==", "bodyText": "@planetf1 I agree normally. I have changed the logic so the json file is generated from the model name - so we do not know it advance. It is the existing logic for the archive writer to write the output here - I have not changed that. As far as my change -there is a json file which is the archive which is picked up from here; this is the same as a the CIM model. There is a guid file is generated (also existing logic) - but you would not necessarily want it deleted as part of a maven clean - as it is the file that ensures subsequent builds use the same guids.    I suggest we raise a separate issue to review the input and output files locations as I see this as a separate issue; we can amend the .gitignore at that stage if required. Is that ok with you?\nI will look at the junit as that should write to target.", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r414656434", "createdAt": "2020-04-24T15:16:59Z", "author": {"login": "davidradl"}, "path": ".gitignore", "diffHunk": "@@ -89,12 +89,10 @@ egeria-lineage-repositories/**\n *-graph-repository/**\n \n # Ignore archives\n-CloudInformationModel.json\n-CloudInformationModelGUIDMap.json\n-DataStoreConnectorTypes.json\n-DataStoreConnectorsGUIDMap.json\n-OpenMetadataTypes.json\n+*.json", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU5MDQ1OQ=="}, "originalCommit": {"oid": "568aa28472ca2707a418d74d9b36d9e17341dc2b"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NTk2MjY1OnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/repository-services/repository-services-archive-utilities/src/main/java/org/odpi/openmetadata/repositoryservices/archiveutilities/OMRSArchiveGUIDMap.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDo1MToyMVrOGMc81g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMTozMDoyOVrOGMeYHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxMDQyMg==", "bodyText": "What is it likelihood of getting a GUID clash from RandomUUID given it uses a timestamp?", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415710422", "createdAt": "2020-04-27T10:51:21Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/repository-services/repository-services-archive-utilities/src/main/java/org/odpi/openmetadata/repositoryservices/archiveutilities/OMRSArchiveGUIDMap.java", "diffHunk": "@@ -88,8 +88,21 @@ public String  getGUID(String id)\n \n         if (guid == null)\n         {\n-            guid = UUID.randomUUID().toString();\n-\n+            boolean duplicate =true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczMzc5MA==", "bodyText": "I think you are looking at an old version of the fix this code is not in the current fix", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415733790", "createdAt": "2020-04-27T11:30:29Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/repository-services/repository-services-archive-utilities/src/main/java/org/odpi/openmetadata/repositoryservices/archiveutilities/OMRSArchiveGUIDMap.java", "diffHunk": "@@ -88,8 +88,21 @@ public String  getGUID(String id)\n \n         if (guid == null)\n         {\n-            guid = UUID.randomUUID().toString();\n-\n+            boolean duplicate =true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxMDQyMg=="}, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NTk2NjQ4OnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/user-interfaces/ui-chassis/ui-chassis-spring/src/main/java/org/odpi/openmetadata/userinterface/uichassis/springboot/api/rex/RepositoryExplorerController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDo1MjoxNFrOGMc-_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMTozMToyMFrOGMeaCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxMDk3Mw==", "bodyText": "Fix alignment", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415710973", "createdAt": "2020-04-27T10:52:14Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/user-interfaces/ui-chassis/ui-chassis-spring/src/main/java/org/odpi/openmetadata/userinterface/uichassis/springboot/api/rex/RepositoryExplorerController.java", "diffHunk": "@@ -496,7 +496,7 @@ public RexTraversalResponse rexTraversal(@RequestBody RexTraversalRequestBody bo\n         try {\n             serverName          = body.getServerName();\n             serverURLRoot       = body.getServerURLRoot();\n-            enterpriseOption    = body.getEnterpriseOption();\n+             enterpriseOption    = body.getEnterpriseOption();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczNDI4MQ==", "bodyText": "I think you are looking at an old version of the fix this file is not in the current fix", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415734281", "createdAt": "2020-04-27T11:31:20Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/user-interfaces/ui-chassis/ui-chassis-spring/src/main/java/org/odpi/openmetadata/userinterface/uichassis/springboot/api/rex/RepositoryExplorerController.java", "diffHunk": "@@ -496,7 +496,7 @@ public RexTraversalResponse rexTraversal(@RequestBody RexTraversalRequestBody bo\n         try {\n             serverName          = body.getServerName();\n             serverURLRoot       = body.getServerURLRoot();\n-            enterpriseOption    = body.getEnterpriseOption();\n+             enterpriseOption    = body.getEnterpriseOption();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxMDk3Mw=="}, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NTk3MDg2OnYy", "diffSide": "RIGHT", "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/base/DesignModelArchiveBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDo1MzoyMFrOGMdBiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMTozNzoxMFrOGMenlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxMTYyNQ==", "bodyText": "Formatting", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415711625", "createdAt": "2020-04-27T10:53:20Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/base/DesignModelArchiveBuilder.java", "diffHunk": "@@ -295,18 +326,65 @@ protected String addTerm(String       glossaryId,\n                              List<String> categoryIds,\n                              String       qualifiedName,\n                              String       displayName,\n-                             String       description)\n+                             String       description) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczNzc0OA==", "bodyText": "fixed", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415737748", "createdAt": "2020-04-27T11:37:10Z", "author": {"login": "davidradl"}, "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/base/DesignModelArchiveBuilder.java", "diffHunk": "@@ -295,18 +326,65 @@ protected String addTerm(String       glossaryId,\n                              List<String> categoryIds,\n                              String       qualifiedName,\n                              String       displayName,\n-                             String       description)\n+                             String       description) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxMTYyNQ=="}, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NTk3MjAyOnYy", "diffSide": "RIGHT", "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/base/DesignModelArchiveBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDo1MzozOFrOGMdCPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMTo0MToxMFrOGMew4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxMTgwNQ==", "bodyText": "Formatting", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415711805", "createdAt": "2020-04-27T10:53:38Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/base/DesignModelArchiveBuilder.java", "diffHunk": "@@ -326,6 +404,9 @@ protected String addTerm(String       glossaryId,\n             {\n                 if (categoryId != null)\n                 {\n+                    if (categoriesAsNames) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc0MDEzMQ==", "bodyText": "fixed", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415740131", "createdAt": "2020-04-27T11:41:10Z", "author": {"login": "davidradl"}, "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/base/DesignModelArchiveBuilder.java", "diffHunk": "@@ -326,6 +404,9 @@ protected String addTerm(String       glossaryId,\n             {\n                 if (categoryId != null)\n                 {\n+                    if (categoriesAsNames) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxMTgwNQ=="}, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 154}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NTk3MzEzOnYy", "diffSide": "RIGHT", "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/base/DesignModelArchiveBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDo1Mzo1NFrOGMdC6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMTozODowNVrOGMep5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxMTk3OQ==", "bodyText": "Formatting - problem continues futher down file", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415711979", "createdAt": "2020-04-27T10:53:54Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/base/DesignModelArchiveBuilder.java", "diffHunk": "@@ -754,6 +835,70 @@ protected void addLinkToBead(String                 beadId,\n                                                                      end2));\n     }\n \n+    /**\n+     * Add an is a relationship\n+     * @param specialTermQName qualified name of the specialized term\n+     * @param generalizedTermQName qualified name of the generalized term\n+     */\n+    protected void addISARelationship (String specialTermQName , String generalizedTermQName) {\n+\n+        String specializedTermId = idToGUIDMap.getGUID(specialTermQName);\n+        String generalizededTermId = idToGUIDMap.getGUID(generalizedTermQName);\n+\n+\n+        EntityProxy end1 = archiveHelper.getEntityProxy(archiveBuilder.getEntity(generalizededTermId));\n+        EntityProxy end2 = archiveHelper.getEntityProxy(archiveBuilder.getEntity(specializedTermId));\n+\n+        archiveBuilder.addRelationship(archiveHelper.getRelationship(ISA_RELATIONSHIP_NAME,\n+                                                                     idToGUIDMap.getGUID(generalizededTermId + \"_to_\" + specializedTermId),\n+                                                                     null,\n+                                                                     InstanceStatus.ACTIVE,\n+                                                                     end1,\n+                                                                     end2));\n+    }\n+    protected void addHasARelationship(String conceptQName, String propertyQName) {\n+        String conceptId = idToGUIDMap.getGUID(conceptQName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczODM0MA==", "bodyText": "I think you are looking at a back level fix - this is not in the current fix", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415738340", "createdAt": "2020-04-27T11:38:05Z", "author": {"login": "davidradl"}, "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/base/DesignModelArchiveBuilder.java", "diffHunk": "@@ -754,6 +835,70 @@ protected void addLinkToBead(String                 beadId,\n                                                                      end2));\n     }\n \n+    /**\n+     * Add an is a relationship\n+     * @param specialTermQName qualified name of the specialized term\n+     * @param generalizedTermQName qualified name of the generalized term\n+     */\n+    protected void addISARelationship (String specialTermQName , String generalizedTermQName) {\n+\n+        String specializedTermId = idToGUIDMap.getGUID(specialTermQName);\n+        String generalizededTermId = idToGUIDMap.getGUID(generalizedTermQName);\n+\n+\n+        EntityProxy end1 = archiveHelper.getEntityProxy(archiveBuilder.getEntity(generalizededTermId));\n+        EntityProxy end2 = archiveHelper.getEntityProxy(archiveBuilder.getEntity(specializedTermId));\n+\n+        archiveBuilder.addRelationship(archiveHelper.getRelationship(ISA_RELATIONSHIP_NAME,\n+                                                                     idToGUIDMap.getGUID(generalizededTermId + \"_to_\" + specializedTermId),\n+                                                                     null,\n+                                                                     InstanceStatus.ACTIVE,\n+                                                                     end1,\n+                                                                     end2));\n+    }\n+    protected void addHasARelationship(String conceptQName, String propertyQName) {\n+        String conceptId = idToGUIDMap.getGUID(conceptQName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxMTk3OQ=="}, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 186}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NTk3OTI0OnYy", "diffSide": "RIGHT", "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/owlcanonicalglossarymodel/CanonicalGlossaryOwlArchiveWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDo1NToyMFrOGMdGYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMTo0MDowMlrOGMeuMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxMjg2NA==", "bodyText": "Should this name be more specific as only works for industry models ?", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415712864", "createdAt": "2020-04-27T10:55:20Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/owlcanonicalglossarymodel/CanonicalGlossaryOwlArchiveWriter.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.archiveutilities.designmodels.owlcanonicalglossarymodel;\n+\n+import org.apache.log4j.varia.NullAppender;\n+import org.odpi.openmetadata.repositoryservices.archiveutilities.OMRSArchiveWriter;\n+\n+\n+/**\n+ * CanonicalGlossaryOwlArchiveWriter creates a physical open metadata archive file for the data model and glossary\n+ * content.\n+ */\n+public class CanonicalGlossaryOwlArchiveWriter extends OMRSArchiveWriter\n+{\n+    private  String openMetadataArchiveFileName;\n+\n+    private String modelLocation;\n+\n+\n+    /**\n+     * Default constructor\n+     *\n+     * @param modelLocation directory name for the model's JSON-LD files.\n+     */\n+    CanonicalGlossaryOwlArchiveWriter(String modelLocation)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczOTQ0MA==", "bodyText": "We hope that others in the community will adopt this way of modelling if it suits them, there is nothing in the format that is intended to be IBM specific.", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415739440", "createdAt": "2020-04-27T11:40:02Z", "author": {"login": "davidradl"}, "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/owlcanonicalglossarymodel/CanonicalGlossaryOwlArchiveWriter.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.archiveutilities.designmodels.owlcanonicalglossarymodel;\n+\n+import org.apache.log4j.varia.NullAppender;\n+import org.odpi.openmetadata.repositoryservices.archiveutilities.OMRSArchiveWriter;\n+\n+\n+/**\n+ * CanonicalGlossaryOwlArchiveWriter creates a physical open metadata archive file for the data model and glossary\n+ * content.\n+ */\n+public class CanonicalGlossaryOwlArchiveWriter extends OMRSArchiveWriter\n+{\n+    private  String openMetadataArchiveFileName;\n+\n+    private String modelLocation;\n+\n+\n+    /**\n+     * Default constructor\n+     *\n+     * @param modelLocation directory name for the model's JSON-LD files.\n+     */\n+    CanonicalGlossaryOwlArchiveWriter(String modelLocation)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxMjg2NA=="}, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NTk4NTk2OnYy", "diffSide": "RIGHT", "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/owlcanonicalglossarymodel/properties/ModelElement.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDo1Njo0OFrOGMdKTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMjoyMjowNVrOGMgTSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxMzg3MA==", "bodyText": "Javadoc missing on methods - this is a generic comment as occurs in other files", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415713870", "createdAt": "2020-04-27T10:56:48Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/owlcanonicalglossarymodel/properties/ModelElement.java", "diffHunk": "@@ -0,0 +1,226 @@\n+/* SPDX-License-Identifier: Apache 2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.archiveutilities.designmodels.owlcanonicalglossarymodel.properties;\n+\n+import java.util.*;\n+\n+/**\n+ * Attribute describes an attribute in the model\n+ */\n+public class ModelElement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc2NTMyMg==", "bodyText": "fixed", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415765322", "createdAt": "2020-04-27T12:22:05Z", "author": {"login": "davidradl"}, "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/owlcanonicalglossarymodel/properties/ModelElement.java", "diffHunk": "@@ -0,0 +1,226 @@\n+/* SPDX-License-Identifier: Apache 2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.archiveutilities.designmodels.owlcanonicalglossarymodel.properties;\n+\n+import java.util.*;\n+\n+/**\n+ * Attribute describes an attribute in the model\n+ */\n+public class ModelElement", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxMzg3MA=="}, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NTk5MDA1OnYy", "diffSide": "RIGHT", "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/test/JenaTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDo1Nzo1N1rOGMdMxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMToyOTowMlrOGMeUyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxNDUwMQ==", "bodyText": "Seems this is in the wrong package - should be in the OWL package", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415714501", "createdAt": "2020-04-27T10:57:57Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/test/JenaTest.java", "diffHunk": "@@ -0,0 +1,549 @@\n+/* SPDX-License-Identifier: Apache 2.0 */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczMjkzOQ==", "bodyText": "I think you are looking at an old version of the fix this file is not in the current fix", "url": "https://github.com/odpi/egeria/pull/2978#discussion_r415732939", "createdAt": "2020-04-27T11:29:02Z", "author": {"login": "davidradl"}, "path": "open-metadata-resources/open-metadata-archives/design-model-archives/src/main/java/org/odpi/openmetadata/archiveutilities/designmodels/test/JenaTest.java", "diffHunk": "@@ -0,0 +1,549 @@\n+/* SPDX-License-Identifier: Apache 2.0 */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcxNDUwMQ=="}, "originalCommit": {"oid": "3df1e8b4839c35423a5e315914a84c0444d61490"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2406, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}