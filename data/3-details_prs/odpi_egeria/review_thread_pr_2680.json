{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMjkyNjg5", "number": 2680, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMjoyNjoyOFrODlnCiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMjoyNjoyOFrODlnCiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNzYzNTI4OnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/access-services/docs/design/README.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMjoyNjoyOFrOFymeRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMTowNDo1MFrOFy1FHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYwMzQ2MA==", "bodyText": "What about outbound messages?", "url": "https://github.com/odpi/egeria/pull/2680#discussion_r388603460", "createdAt": "2020-03-05T22:26:28Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/docs/design/README.md", "diffHunk": "@@ -204,18 +204,26 @@ implementing the OMAS one scenario at a time.\n   \n   Link to the the top-level README.md for the OMAS's server module (***omas-name*/*omas-name*-server/README.md**).\n   \n-  Implement the ***omas-name*/*omas-name*-server-spring module for the OMAS.  This contains the sever-side\n+  Implement the ***omas-name*/*omas-name*-server-spring** module for the OMAS.  This contains the sever-side\n   resource classes that support the REST API.\n   \n-  Add the ***omas-name*/*omas-name*-server-spring module to the `pom.xml` file for the \n+  Add the ***omas-name*/*omas-name*-server-spring** module to the `pom.xml` file for the\n   [OMAG Server Chassis](../../../server-chassis/server-chassis-spring).\n \n * Design and implement the event handling.\n \n-* Implement the FVT and run it.\n-\n+  Log each event that is picked up (inbound) to be processed by the OMAS into its audit log using the `EVENT` severity.\n+  This ensures a record is kept of the asynchronous processing done by the OMAS.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4047de8e062fadf6577404255e85be0158346cf"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgwMTc0Mg==", "bodyText": "I wasn't sure what we want to recommend for outbound -- eg. if an OMAS produces an outbound event that nothing else processes then is it important to know that?  (If another services makes use of that event, then per this guidance that other services' inbound processing should log that it is using the event...)\nOn the other hand, from an auditing perspective, it would likely be good to be able to answer the question \"where did the inbound event that I'm processing come from\" in which case having the OMAS log its outbound-generated events also seems like a good idea.\nSuggestion / preference?", "url": "https://github.com/odpi/egeria/pull/2680#discussion_r388801742", "createdAt": "2020-03-06T09:40:21Z", "author": {"login": "cmgrote"}, "path": "open-metadata-implementation/access-services/docs/design/README.md", "diffHunk": "@@ -204,18 +204,26 @@ implementing the OMAS one scenario at a time.\n   \n   Link to the the top-level README.md for the OMAS's server module (***omas-name*/*omas-name*-server/README.md**).\n   \n-  Implement the ***omas-name*/*omas-name*-server-spring module for the OMAS.  This contains the sever-side\n+  Implement the ***omas-name*/*omas-name*-server-spring** module for the OMAS.  This contains the sever-side\n   resource classes that support the REST API.\n   \n-  Add the ***omas-name*/*omas-name*-server-spring module to the `pom.xml` file for the \n+  Add the ***omas-name*/*omas-name*-server-spring** module to the `pom.xml` file for the\n   [OMAG Server Chassis](../../../server-chassis/server-chassis-spring).\n \n * Design and implement the event handling.\n \n-* Implement the FVT and run it.\n-\n+  Log each event that is picked up (inbound) to be processed by the OMAS into its audit log using the `EVENT` severity.\n+  This ensures a record is kept of the asynchronous processing done by the OMAS.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYwMzQ2MA=="}, "originalCommit": {"oid": "a4047de8e062fadf6577404255e85be0158346cf"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNjQxMA==", "bodyText": "I think we shuld recommend logging both in and out.  One of the hardest things to diagnose is when something does not happen that should have :)", "url": "https://github.com/odpi/egeria/pull/2680#discussion_r388816410", "createdAt": "2020-03-06T10:08:25Z", "author": {"login": "mandy-chessell"}, "path": "open-metadata-implementation/access-services/docs/design/README.md", "diffHunk": "@@ -204,18 +204,26 @@ implementing the OMAS one scenario at a time.\n   \n   Link to the the top-level README.md for the OMAS's server module (***omas-name*/*omas-name*-server/README.md**).\n   \n-  Implement the ***omas-name*/*omas-name*-server-spring module for the OMAS.  This contains the sever-side\n+  Implement the ***omas-name*/*omas-name*-server-spring** module for the OMAS.  This contains the sever-side\n   resource classes that support the REST API.\n   \n-  Add the ***omas-name*/*omas-name*-server-spring module to the `pom.xml` file for the \n+  Add the ***omas-name*/*omas-name*-server-spring** module to the `pom.xml` file for the\n   [OMAG Server Chassis](../../../server-chassis/server-chassis-spring).\n \n * Design and implement the event handling.\n \n-* Implement the FVT and run it.\n-\n+  Log each event that is picked up (inbound) to be processed by the OMAS into its audit log using the `EVENT` severity.\n+  This ensures a record is kept of the asynchronous processing done by the OMAS.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYwMzQ2MA=="}, "originalCommit": {"oid": "a4047de8e062fadf6577404255e85be0158346cf"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0Mjc4Mw==", "bodyText": "Makes sense -- latest commit adds a line immediately after the inbound statement as follows: \"Also log each event that is produced (outbound) by the OMAS into its audit log using the EVENT severity.\"", "url": "https://github.com/odpi/egeria/pull/2680#discussion_r388842783", "createdAt": "2020-03-06T11:04:50Z", "author": {"login": "cmgrote"}, "path": "open-metadata-implementation/access-services/docs/design/README.md", "diffHunk": "@@ -204,18 +204,26 @@ implementing the OMAS one scenario at a time.\n   \n   Link to the the top-level README.md for the OMAS's server module (***omas-name*/*omas-name*-server/README.md**).\n   \n-  Implement the ***omas-name*/*omas-name*-server-spring module for the OMAS.  This contains the sever-side\n+  Implement the ***omas-name*/*omas-name*-server-spring** module for the OMAS.  This contains the sever-side\n   resource classes that support the REST API.\n   \n-  Add the ***omas-name*/*omas-name*-server-spring module to the `pom.xml` file for the \n+  Add the ***omas-name*/*omas-name*-server-spring** module to the `pom.xml` file for the\n   [OMAG Server Chassis](../../../server-chassis/server-chassis-spring).\n \n * Design and implement the event handling.\n \n-* Implement the FVT and run it.\n-\n+  Log each event that is picked up (inbound) to be processed by the OMAS into its audit log using the `EVENT` severity.\n+  This ensures a record is kept of the asynchronous processing done by the OMAS.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYwMzQ2MA=="}, "originalCommit": {"oid": "a4047de8e062fadf6577404255e85be0158346cf"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2412, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}