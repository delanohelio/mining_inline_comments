{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3ODY3MzA1", "number": 3624, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoxMTozMFrOEj_HFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoxMTozMFrOEj_HFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTY5NjIwOnYy", "diffSide": "RIGHT", "path": "open-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/handlers/SubjectAreaGlossaryHandler.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMDoxMTozMFrOHSp7fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjo1Mjo1OFrOHSvW6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyMzM4OA==", "bodyText": "We can move these constructions to setUniqueQualifiedName method and write this:\n    protected void setUniqueQualifiedNameIfBlank(Node node) {\n               if (StringUtils.isBlank(node.getQualifiedName())) {\n                    node.setQualifiedName(node.getName() + \".\" + UUID.randomUUID().toString());\n                }\n    }\n\nAnd then remove duplicate code.\nStringUtils.isBlank specification:\n StringUtils.isBlank(null)      = true\n StringUtils.isBlank(\"\")        = true  \n StringUtils.isBlank(\" \")       = true  \n StringUtils.isBlank(\"bob\")     = false", "url": "https://github.com/odpi/egeria/pull/3624#discussion_r489323388", "createdAt": "2020-09-16T10:11:30Z", "author": {"login": "immmus"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/handlers/SubjectAreaGlossaryHandler.java", "diffHunk": "@@ -78,12 +78,15 @@ public SubjectAreaGlossaryHandler(OMRSAPIHelper oMRSAPIHelper) {\n         try {\n             InputValidator.validateNodeType(className, methodName, suppliedGlossary.getNodeType(), NodeType.Glossary, NodeType.Taxonomy, NodeType.TaxonomyAndCanonicalGlossary, NodeType.CanonicalGlossary);\n             final String suppliedGlossaryName = suppliedGlossary.getName();\n-\n+            final String suppliedGlossaryQualifiedName = suppliedGlossary.getQualifiedName();\n             // need to check we have a name\n             if (suppliedGlossaryName == null || suppliedGlossaryName.equals(\"\")) {\n                 ExceptionMessageDefinition messageDefinition = SubjectAreaErrorCode.GLOSSARY_CREATE_WITHOUT_NAME.getMessageDefinition();\n                 throw new InvalidParameterException(messageDefinition, className, methodName, \"name\");\n             } else {\n+                if (suppliedGlossaryQualifiedName == null || suppliedGlossaryQualifiedName.equals(\"\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcf2320d14771bc5d6c529ee123c552aa1edbae1"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyNjkwNA==", "bodyText": "And I prefer to use \"@\" instead of \".\"", "url": "https://github.com/odpi/egeria/pull/3624#discussion_r489326904", "createdAt": "2020-09-16T10:17:06Z", "author": {"login": "immmus"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/handlers/SubjectAreaGlossaryHandler.java", "diffHunk": "@@ -78,12 +78,15 @@ public SubjectAreaGlossaryHandler(OMRSAPIHelper oMRSAPIHelper) {\n         try {\n             InputValidator.validateNodeType(className, methodName, suppliedGlossary.getNodeType(), NodeType.Glossary, NodeType.Taxonomy, NodeType.TaxonomyAndCanonicalGlossary, NodeType.CanonicalGlossary);\n             final String suppliedGlossaryName = suppliedGlossary.getName();\n-\n+            final String suppliedGlossaryQualifiedName = suppliedGlossary.getQualifiedName();\n             // need to check we have a name\n             if (suppliedGlossaryName == null || suppliedGlossaryName.equals(\"\")) {\n                 ExceptionMessageDefinition messageDefinition = SubjectAreaErrorCode.GLOSSARY_CREATE_WITHOUT_NAME.getMessageDefinition();\n                 throw new InvalidParameterException(messageDefinition, className, methodName, \"name\");\n             } else {\n+                if (suppliedGlossaryQualifiedName == null || suppliedGlossaryQualifiedName.equals(\"\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyMzM4OA=="}, "originalCommit": {"oid": "bcf2320d14771bc5d6c529ee123c552aa1edbae1"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM5Mzk4NQ==", "bodyText": "@immmus I assume you are thinking of the Spring StringUtils, this module should not have a Spring dependancy, so I have followed your feedback but wrote out the tests without the utility.", "url": "https://github.com/odpi/egeria/pull/3624#discussion_r489393985", "createdAt": "2020-09-16T12:23:04Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/handlers/SubjectAreaGlossaryHandler.java", "diffHunk": "@@ -78,12 +78,15 @@ public SubjectAreaGlossaryHandler(OMRSAPIHelper oMRSAPIHelper) {\n         try {\n             InputValidator.validateNodeType(className, methodName, suppliedGlossary.getNodeType(), NodeType.Glossary, NodeType.Taxonomy, NodeType.TaxonomyAndCanonicalGlossary, NodeType.CanonicalGlossary);\n             final String suppliedGlossaryName = suppliedGlossary.getName();\n-\n+            final String suppliedGlossaryQualifiedName = suppliedGlossary.getQualifiedName();\n             // need to check we have a name\n             if (suppliedGlossaryName == null || suppliedGlossaryName.equals(\"\")) {\n                 ExceptionMessageDefinition messageDefinition = SubjectAreaErrorCode.GLOSSARY_CREATE_WITHOUT_NAME.getMessageDefinition();\n                 throw new InvalidParameterException(messageDefinition, className, methodName, \"name\");\n             } else {\n+                if (suppliedGlossaryQualifiedName == null || suppliedGlossaryQualifiedName.equals(\"\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyMzM4OA=="}, "originalCommit": {"oid": "bcf2320d14771bc5d6c529ee123c552aa1edbae1"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM5NTU2Ng==", "bodyText": "@davidradl I am talking about apache commons StringUtils.", "url": "https://github.com/odpi/egeria/pull/3624#discussion_r489395566", "createdAt": "2020-09-16T12:25:41Z", "author": {"login": "immmus"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/handlers/SubjectAreaGlossaryHandler.java", "diffHunk": "@@ -78,12 +78,15 @@ public SubjectAreaGlossaryHandler(OMRSAPIHelper oMRSAPIHelper) {\n         try {\n             InputValidator.validateNodeType(className, methodName, suppliedGlossary.getNodeType(), NodeType.Glossary, NodeType.Taxonomy, NodeType.TaxonomyAndCanonicalGlossary, NodeType.CanonicalGlossary);\n             final String suppliedGlossaryName = suppliedGlossary.getName();\n-\n+            final String suppliedGlossaryQualifiedName = suppliedGlossary.getQualifiedName();\n             // need to check we have a name\n             if (suppliedGlossaryName == null || suppliedGlossaryName.equals(\"\")) {\n                 ExceptionMessageDefinition messageDefinition = SubjectAreaErrorCode.GLOSSARY_CREATE_WITHOUT_NAME.getMessageDefinition();\n                 throw new InvalidParameterException(messageDefinition, className, methodName, \"name\");\n             } else {\n+                if (suppliedGlossaryQualifiedName == null || suppliedGlossaryQualifiedName.equals(\"\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyMzM4OA=="}, "originalCommit": {"oid": "bcf2320d14771bc5d6c529ee123c552aa1edbae1"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQxMDA0OQ==", "bodyText": "@davidradl I am talking about apache commons StringUtils.\n\n@immmus Thanks for the clarification, I have coded it in a simple if, I think this should be sufficient for now.", "url": "https://github.com/odpi/egeria/pull/3624#discussion_r489410049", "createdAt": "2020-09-16T12:49:24Z", "author": {"login": "davidradl"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/handlers/SubjectAreaGlossaryHandler.java", "diffHunk": "@@ -78,12 +78,15 @@ public SubjectAreaGlossaryHandler(OMRSAPIHelper oMRSAPIHelper) {\n         try {\n             InputValidator.validateNodeType(className, methodName, suppliedGlossary.getNodeType(), NodeType.Glossary, NodeType.Taxonomy, NodeType.TaxonomyAndCanonicalGlossary, NodeType.CanonicalGlossary);\n             final String suppliedGlossaryName = suppliedGlossary.getName();\n-\n+            final String suppliedGlossaryQualifiedName = suppliedGlossary.getQualifiedName();\n             // need to check we have a name\n             if (suppliedGlossaryName == null || suppliedGlossaryName.equals(\"\")) {\n                 ExceptionMessageDefinition messageDefinition = SubjectAreaErrorCode.GLOSSARY_CREATE_WITHOUT_NAME.getMessageDefinition();\n                 throw new InvalidParameterException(messageDefinition, className, methodName, \"name\");\n             } else {\n+                if (suppliedGlossaryQualifiedName == null || suppliedGlossaryQualifiedName.equals(\"\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyMzM4OA=="}, "originalCommit": {"oid": "bcf2320d14771bc5d6c529ee123c552aa1edbae1"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQxMjMzMQ==", "bodyText": "@davidradl yes, it's sufficient)", "url": "https://github.com/odpi/egeria/pull/3624#discussion_r489412331", "createdAt": "2020-09-16T12:52:58Z", "author": {"login": "immmus"}, "path": "open-metadata-implementation/access-services/subject-area/subject-area-server/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/handlers/SubjectAreaGlossaryHandler.java", "diffHunk": "@@ -78,12 +78,15 @@ public SubjectAreaGlossaryHandler(OMRSAPIHelper oMRSAPIHelper) {\n         try {\n             InputValidator.validateNodeType(className, methodName, suppliedGlossary.getNodeType(), NodeType.Glossary, NodeType.Taxonomy, NodeType.TaxonomyAndCanonicalGlossary, NodeType.CanonicalGlossary);\n             final String suppliedGlossaryName = suppliedGlossary.getName();\n-\n+            final String suppliedGlossaryQualifiedName = suppliedGlossary.getQualifiedName();\n             // need to check we have a name\n             if (suppliedGlossaryName == null || suppliedGlossaryName.equals(\"\")) {\n                 ExceptionMessageDefinition messageDefinition = SubjectAreaErrorCode.GLOSSARY_CREATE_WITHOUT_NAME.getMessageDefinition();\n                 throw new InvalidParameterException(messageDefinition, className, methodName, \"name\");\n             } else {\n+                if (suppliedGlossaryQualifiedName == null || suppliedGlossaryQualifiedName.equals(\"\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMyMzM4OA=="}, "originalCommit": {"oid": "bcf2320d14771bc5d6c529ee123c552aa1edbae1"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2536, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}