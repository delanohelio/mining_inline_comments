{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYxODI2NTUx", "number": 2728, "title": "ClassValue substitution: Fix computeValue usage", "bodyText": "This PR fixes #2421.\nThe \"get\" method of ClassValue  has the special property that racing threads must return the same value.\nIn the substitution this is ensured by using a ConcurrentHashMap. The problem is, that this map can't handle null values - but null is a valid response. Without the PR a NPE occurs if null is a response.\nTo support null we can use a dummy null. This dummy null can be store in the map.\nThe dummy null is also here to distinguish between \"value was computed = null\" and \"value was not yet computed\".\nBecause a simple if (newValue == null) return null; is not correct.\nIf we would do this simple check, instead of using a dummy null, the next time the \"get\" method is called for the same type, \"computeValue\" would be called again. This is not correct.", "createdAt": "2020-08-02T16:09:54Z", "url": "https://github.com/oracle/graal/pull/2728", "merged": true, "mergeCommit": {"oid": "b6ef6bdbf0e75c2b27c9842f311ccbbead14d3b1"}, "closed": true, "closedAt": "2020-08-12T17:51:14Z", "author": {"login": "tfaller"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6_bTiAH2gAyNDYxODI2NTUxOjdkZmRkYWU4MWYwNDRiMjYyYzllN2YxYjhkYWVhMjk1MDc3MmM3MjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9-voQAFqTQ2NTQ3NjkyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7dfddae81f044b262c9e7f1b8daea2950772c720", "author": {"user": {"login": "tfaller", "name": "Thomas Faller"}}, "url": "https://github.com/oracle/graal/commit/7dfddae81f044b262c9e7f1b8daea2950772c720", "committedDate": "2020-08-02T15:47:32Z", "message": "ClassValue substitution: Fix computeValue usage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMjMyNDU1", "url": "https://github.com/oracle/graal/pull/2728#pullrequestreview-461232455", "createdAt": "2020-08-04T22:59:54Z", "commit": {"oid": "7dfddae81f044b262c9e7f1b8daea2950772c720"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMjo1OTo1NFrOG70VAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMjo1OTo1NFrOG70VAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NjUxNQ==", "bodyText": "dummy is not a good name. A better name is something like NULL_MARKER.", "url": "https://github.com/oracle/graal/pull/2728#discussion_r465376515", "createdAt": "2020-08-04T22:59:54Z", "author": {"login": "christianwimmer"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/JavaLangSubstitutions.java", "diffHunk": "@@ -569,6 +569,8 @@ private static double log1p(double x) {\n     @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.Custom, declClass = JavaLangSubstitutions.ClassValueInitializer.class)//\n     private final ConcurrentMap<Class<?>, Object> values;\n \n+    private static final Object dummyNull = new Object();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dfddae81f044b262c9e7f1b8daea2950772c720"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6ef6bdbf0e75c2b27c9842f311ccbbead14d3b1", "author": {"user": {"login": "tfaller", "name": "Thomas Faller"}}, "url": "https://github.com/oracle/graal/commit/b6ef6bdbf0e75c2b27c9842f311ccbbead14d3b1", "committedDate": "2020-08-05T18:45:22Z", "message": "ClassValue: Use better name for null replacement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NDc2OTI2", "url": "https://github.com/oracle/graal/pull/2728#pullrequestreview-465476926", "createdAt": "2020-08-11T22:41:36Z", "commit": {"oid": "b6ef6bdbf0e75c2b27c9842f311ccbbead14d3b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1073, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}