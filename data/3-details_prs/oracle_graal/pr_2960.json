{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0ODIxNjc3", "number": 2960, "title": "--target parameter, Platform/LibC changes", "bodyText": "Add --target parameter which can be used as:\nnative-image --target=linux-amd64 HelloWorld\n\n\nAdded initial Android/iOS Platform classes as part of initial mobile support.\nLoad platforms and LibCs via ServiceLoader\nAdd os.name system property support (as specified in JDK)", "createdAt": "2020-11-03T15:41:44Z", "url": "https://github.com/oracle/graal/pull/2960", "merged": true, "mergeCommit": {"oid": "372b87b76f073b7aa60b41979a3a90d80e1b0ba2"}, "closed": true, "closedAt": "2020-12-05T22:10:26Z", "author": {"login": "lazar-mitrovic"}, "timelineItems": {"totalCount": 37, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZOj1MgBqjM5NTc4MjYyNDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdi9D60gBqjQwNzQxODY5NDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9d7bf0a3816ca6d3d92f650f348469e8c65bda7", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/d9d7bf0a3816ca6d3d92f650f348469e8c65bda7", "committedDate": "2020-11-03T13:44:11Z", "message": "Added LINUX_BASE, DARWIN_BASE and WINDOWS_BASE meta platforms"}, "afterCommit": {"oid": "332c191834da183d20218c30092767dec48c2e32", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/332c191834da183d20218c30092767dec48c2e32", "committedDate": "2020-11-04T14:22:55Z", "message": "Added LINUX_BASE, DARWIN_BASE and WINDOWS_BASE meta platforms"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNDMwNzgy", "url": "https://github.com/oracle/graal/pull/2960#pullrequestreview-523430782", "createdAt": "2020-11-04T14:47:08Z", "commit": {"oid": "332c191834da183d20218c30092767dec48c2e32"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo0NzowOVrOHtbZzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo0NzowOVrOHtbZzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM5Njk0MA==", "bodyText": "21.0", "url": "https://github.com/oracle/graal/pull/2960#discussion_r517396940", "createdAt": "2020-11-04T14:47:09Z", "author": {"login": "vjovanov"}, "path": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/Platform.java", "diffHunk": "@@ -84,6 +86,31 @@ static boolean includedIn(Class<? extends Platform> platformGroup) {\n         return platformGroup.isInstance(ImageSingletons.lookup(Platform.class));\n     }\n \n+    /**\n+     * Returns string representing Platform's OS name\n+     * <p>\n+     * This method should be implemented either in final class or as default in respective OS\n+     * interface.\n+     *\n+     * @since 20.3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332c191834da183d20218c30092767dec48c2e32"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNDMzMTEy", "url": "https://github.com/oracle/graal/pull/2960#pullrequestreview-523433112", "createdAt": "2020-11-04T14:49:33Z", "commit": {"oid": "332c191834da183d20218c30092767dec48c2e32"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo0OTozNFrOHtbgjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo0OTozNFrOHtbgjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM5ODY2OA==", "bodyText": "the string representation", "url": "https://github.com/oracle/graal/pull/2960#discussion_r517398668", "createdAt": "2020-11-04T14:49:34Z", "author": {"login": "vjovanov"}, "path": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/Platform.java", "diffHunk": "@@ -84,6 +86,31 @@ static boolean includedIn(Class<? extends Platform> platformGroup) {\n         return platformGroup.isInstance(ImageSingletons.lookup(Platform.class));\n     }\n \n+    /**\n+     * Returns string representing Platform's OS name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332c191834da183d20218c30092767dec48c2e32"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNDM3NDAy", "url": "https://github.com/oracle/graal/pull/2960#pullrequestreview-523437402", "createdAt": "2020-11-04T14:53:53Z", "commit": {"oid": "332c191834da183d20218c30092767dec48c2e32"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo1Mzo1M1rOHtbs8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo1Mzo1M1rOHtbs8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQwMTg0MQ==", "bodyText": "a final class\nas default is unclear", "url": "https://github.com/oracle/graal/pull/2960#discussion_r517401841", "createdAt": "2020-11-04T14:53:53Z", "author": {"login": "vjovanov"}, "path": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/Platform.java", "diffHunk": "@@ -84,6 +86,31 @@ static boolean includedIn(Class<? extends Platform> platformGroup) {\n         return platformGroup.isInstance(ImageSingletons.lookup(Platform.class));\n     }\n \n+    /**\n+     * Returns string representing Platform's OS name\n+     * <p>\n+     * This method should be implemented either in final class or as default in respective OS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332c191834da183d20218c30092767dec48c2e32"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNDM5MjY4", "url": "https://github.com/oracle/graal/pull/2960#pullrequestreview-523439268", "createdAt": "2020-11-04T14:55:43Z", "commit": {"oid": "332c191834da183d20218c30092767dec48c2e32"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo1NTo0M1rOHtbypw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo1NTo0M1rOHtbypw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQwMzMwMw==", "bodyText": "I don't think we need WINDOWS_BASE?", "url": "https://github.com/oracle/graal/pull/2960#discussion_r517403303", "createdAt": "2020-11-04T14:55:43Z", "author": {"login": "vjovanov"}, "path": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/Platform.java", "diffHunk": "@@ -113,26 +171,54 @@ static boolean includedIn(Class<? extends Platform> platformGroup) {\n      *\n      * @since 19.0\n      */\n-    interface LINUX extends InternalPlatform.PLATFORM_JNI {\n+    interface LINUX extends LINUX_BASE {\n+        default String getOS() {\n+            return \"linux\";\n+        }\n+    }\n \n+    /**\n+     * Supported operating system: Android.\n+     *\n+     * @since 20.3\n+     */\n+    interface ANDROID extends LINUX_BASE {\n+        default String getOS() {\n+            return \"android\";\n+        }\n     }\n \n     /**\n      * Supported operating system: Darwin (MacOS).\n      *\n      * @since 19.0\n      */\n-    interface DARWIN extends InternalPlatform.PLATFORM_JNI {\n+    interface DARWIN extends DARWIN_BASE {\n+        default String getOS() {\n+            return \"darwin\";\n+        }\n+    }\n \n+    /**\n+     * Supported operating system: iOS.\n+     *\n+     * @since 20.3\n+     */\n+    interface IOS extends DARWIN_BASE {\n+        default String getOS() {\n+            return \"ios\";\n+        }\n     }\n \n     /**\n      * Supported operating system: Windows.\n      *\n      * @since 19.0\n      */\n-    interface WINDOWS extends InternalPlatform.PLATFORM_JNI {\n-\n+    interface WINDOWS extends WINDOWS_BASE {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332c191834da183d20218c30092767dec48c2e32"}, "originalPosition": 141}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNDQ4MzA3", "url": "https://github.com/oracle/graal/pull/2960#pullrequestreview-523448307", "createdAt": "2020-11-04T15:04:23Z", "commit": {"oid": "332c191834da183d20218c30092767dec48c2e32"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTowNDoyM1rOHtcMgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTowNDoyM1rOHtcMgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQwOTkyMg==", "bodyText": "We  should fix this function.", "url": "https://github.com/oracle/graal/pull/2960#discussion_r517409922", "createdAt": "2020-11-04T15:04:23Z", "author": {"login": "vjovanov"}, "path": "substratevm/src/com.oracle.objectfile/src/com/oracle/objectfile/macho/MachOObjectFile.java", "diffHunk": "@@ -80,7 +82,7 @@\n      * Create an empty Mach-O object file.\n      */\n     public MachOObjectFile(int pageSize) {\n-        this(pageSize, MachOCpuType.from(System.getProperty(\"svm.targetArch\") == null ? System.getProperty(\"os.arch\") : System.getProperty(\"svm.targetArch\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332c191834da183d20218c30092767dec48c2e32"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21aff2f69643bf00703dc4e347572c9c1729a8bb", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/21aff2f69643bf00703dc4e347572c9c1729a8bb", "committedDate": "2020-11-04T15:11:50Z", "message": "Typo"}, "afterCommit": {"oid": "8444920941135aa6baff98a0fafbe969b8c83168", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/8444920941135aa6baff98a0fafbe969b8c83168", "committedDate": "2020-11-04T15:28:47Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8444920941135aa6baff98a0fafbe969b8c83168", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/8444920941135aa6baff98a0fafbe969b8c83168", "committedDate": "2020-11-04T15:28:47Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "da1f68eb282b832532d37a81d311df5e89be503f", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/da1f68eb282b832532d37a81d311df5e89be503f", "committedDate": "2020-11-04T19:03:06Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da1f68eb282b832532d37a81d311df5e89be503f", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/da1f68eb282b832532d37a81d311df5e89be503f", "committedDate": "2020-11-04T19:03:06Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "2c961dbb150b372e67ec942676a9fe7d90548069", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/2c961dbb150b372e67ec942676a9fe7d90548069", "committedDate": "2020-11-04T19:16:50Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c961dbb150b372e67ec942676a9fe7d90548069", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/2c961dbb150b372e67ec942676a9fe7d90548069", "committedDate": "2020-11-04T19:16:50Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "2cfdc349a163f20f89248572167373e2a6b93817", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/2cfdc349a163f20f89248572167373e2a6b93817", "committedDate": "2020-11-04T21:50:35Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2cfdc349a163f20f89248572167373e2a6b93817", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/2cfdc349a163f20f89248572167373e2a6b93817", "committedDate": "2020-11-04T21:50:35Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "37c41bd65513237c7ee032478983627d6be3c694", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/37c41bd65513237c7ee032478983627d6be3c694", "committedDate": "2020-11-09T23:09:56Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37c41bd65513237c7ee032478983627d6be3c694", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/37c41bd65513237c7ee032478983627d6be3c694", "committedDate": "2020-11-09T23:09:56Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "9162867bc236e43ecc2edcccc972698244fb5599", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/9162867bc236e43ecc2edcccc972698244fb5599", "committedDate": "2020-11-10T16:12:13Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9162867bc236e43ecc2edcccc972698244fb5599", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/9162867bc236e43ecc2edcccc972698244fb5599", "committedDate": "2020-11-10T16:12:13Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "47f2cc142191b07f8d90379a31e0c0bee4d6fdd2", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/47f2cc142191b07f8d90379a31e0c0bee4d6fdd2", "committedDate": "2020-11-12T16:53:52Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "47f2cc142191b07f8d90379a31e0c0bee4d6fdd2", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/47f2cc142191b07f8d90379a31e0c0bee4d6fdd2", "committedDate": "2020-11-12T16:53:52Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "32c071452a9b7c8d5c2e60cc762a2ffdfed71c96", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/32c071452a9b7c8d5c2e60cc762a2ffdfed71c96", "committedDate": "2020-11-13T00:04:43Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32c071452a9b7c8d5c2e60cc762a2ffdfed71c96", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/32c071452a9b7c8d5c2e60cc762a2ffdfed71c96", "committedDate": "2020-11-13T00:04:43Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "57f96c3a8aa591215bd19c52d8b9c00fafb4a3bc", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/57f96c3a8aa591215bd19c52d8b9c00fafb4a3bc", "committedDate": "2020-11-13T19:37:35Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "57f96c3a8aa591215bd19c52d8b9c00fafb4a3bc", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/57f96c3a8aa591215bd19c52d8b9c00fafb4a3bc", "committedDate": "2020-11-13T19:37:35Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "eee677c648dec276588ea7baa6043e98b4b87440", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/eee677c648dec276588ea7baa6043e98b4b87440", "committedDate": "2020-11-13T20:14:12Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eee677c648dec276588ea7baa6043e98b4b87440", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/eee677c648dec276588ea7baa6043e98b4b87440", "committedDate": "2020-11-13T20:14:12Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "075675284ee808ed8d7ef016cac2fd7c59c7b857", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/075675284ee808ed8d7ef016cac2fd7c59c7b857", "committedDate": "2020-11-16T12:56:47Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "075675284ee808ed8d7ef016cac2fd7c59c7b857", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/075675284ee808ed8d7ef016cac2fd7c59c7b857", "committedDate": "2020-11-16T12:56:47Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "0acc263e5800c8dabad12618f4fea25a66a7b4b6", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/0acc263e5800c8dabad12618f4fea25a66a7b4b6", "committedDate": "2020-11-19T14:04:01Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0acc263e5800c8dabad12618f4fea25a66a7b4b6", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/0acc263e5800c8dabad12618f4fea25a66a7b4b6", "committedDate": "2020-11-19T14:04:01Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "43aae8e543c27e0e5ddb78eb22c2461b6b38ee8c", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/43aae8e543c27e0e5ddb78eb22c2461b6b38ee8c", "committedDate": "2020-11-19T17:27:06Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "43aae8e543c27e0e5ddb78eb22c2461b6b38ee8c", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/43aae8e543c27e0e5ddb78eb22c2461b6b38ee8c", "committedDate": "2020-11-19T17:27:06Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "68754fd11ff53863a7ced212179fd200590a35f6", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/68754fd11ff53863a7ced212179fd200590a35f6", "committedDate": "2020-11-27T13:21:26Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "68754fd11ff53863a7ced212179fd200590a35f6", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/68754fd11ff53863a7ced212179fd200590a35f6", "committedDate": "2020-11-27T13:21:26Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "abed4d45cb047f476cc0a18312cd81d0c902383f", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/abed4d45cb047f476cc0a18312cd81d0c902383f", "committedDate": "2020-11-27T13:23:54Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abed4d45cb047f476cc0a18312cd81d0c902383f", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/abed4d45cb047f476cc0a18312cd81d0c902383f", "committedDate": "2020-11-27T13:23:54Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "5cdb9fb339d219bcb685ba46d1fac8b51e79eb32", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/5cdb9fb339d219bcb685ba46d1fac8b51e79eb32", "committedDate": "2020-12-01T14:55:19Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5cdb9fb339d219bcb685ba46d1fac8b51e79eb32", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/5cdb9fb339d219bcb685ba46d1fac8b51e79eb32", "committedDate": "2020-12-01T14:55:19Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "5cce4ad5b671a377816efa9c061f6e0107352da1", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/5cce4ad5b671a377816efa9c061f6e0107352da1", "committedDate": "2020-12-02T21:40:36Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5cce4ad5b671a377816efa9c061f6e0107352da1", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/5cce4ad5b671a377816efa9c061f6e0107352da1", "committedDate": "2020-12-02T21:40:36Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "5baadc1ea688ad5b6ea5c700e13f68be5be6d61b", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/5baadc1ea688ad5b6ea5c700e13f68be5be6d61b", "committedDate": "2020-12-02T23:35:44Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5baadc1ea688ad5b6ea5c700e13f68be5be6d61b", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/5baadc1ea688ad5b6ea5c700e13f68be5be6d61b", "committedDate": "2020-12-02T23:35:44Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "24a13f8d82a66d3597f9a13e9a5a74f97508d959", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/24a13f8d82a66d3597f9a13e9a5a74f97508d959", "committedDate": "2020-12-03T03:04:01Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "24a13f8d82a66d3597f9a13e9a5a74f97508d959", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/24a13f8d82a66d3597f9a13e9a5a74f97508d959", "committedDate": "2020-12-03T03:04:01Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "7db981fa1fb8fa3059c76cbb730f3733daac94cf", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/7db981fa1fb8fa3059c76cbb730f3733daac94cf", "committedDate": "2020-12-03T10:54:16Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzODQ3NDU1", "url": "https://github.com/oracle/graal/pull/2960#pullrequestreview-543847455", "createdAt": "2020-12-03T11:12:31Z", "commit": {"oid": "24a13f8d82a66d3597f9a13e9a5a74f97508d959"}, "state": "APPROVED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMToxMzoxM1rOH-U9mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTozOTowNlrOH-Wk8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTExNzIwOA==", "bodyText": "@gradinac can we use >= here?", "url": "https://github.com/oracle/graal/pull/2960#discussion_r535117208", "createdAt": "2020-12-03T11:13:13Z", "author": {"login": "vjovanov"}, "path": "substratevm/src/com.oracle.svm.core.posix/src/com/oracle/svm/core/posix/linux/libc/MuslLibC.java", "diffHunk": "@@ -70,4 +61,14 @@ public boolean hasIsolatedNamespaces() {\n     public boolean requiresLibCSpecificStaticJDKLibraries() {\n         return true;\n     }\n+\n+    @Override\n+    public void checkIfLibCSupported() {\n+        if (!SubstrateOptions.StaticExecutable.getValue()) {\n+            throw UserError.abort(\"Musl can only be used for statically linked executables.\");\n+        }\n+        if (JavaVersionUtil.JAVA_SPEC != 11) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7db981fa1fb8fa3059c76cbb730f3733daac94cf"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTExODE3MQ==", "bodyText": "@gradinac why can't we use Musl with dynamic linking?", "url": "https://github.com/oracle/graal/pull/2960#discussion_r535118171", "createdAt": "2020-12-03T11:14:15Z", "author": {"login": "vjovanov"}, "path": "substratevm/src/com.oracle.svm.core.posix/src/com/oracle/svm/core/posix/linux/libc/MuslLibC.java", "diffHunk": "@@ -70,4 +61,14 @@ public boolean hasIsolatedNamespaces() {\n     public boolean requiresLibCSpecificStaticJDKLibraries() {\n         return true;\n     }\n+\n+    @Override\n+    public void checkIfLibCSupported() {\n+        if (!SubstrateOptions.StaticExecutable.getValue()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7db981fa1fb8fa3059c76cbb730f3733daac94cf"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEyNjczOQ==", "bodyText": "Why don't we solve this right away?", "url": "https://github.com/oracle/graal/pull/2960#discussion_r535126739", "createdAt": "2020-12-03T11:22:20Z", "author": {"login": "vjovanov"}, "path": "substratevm/src/com.oracle.svm.core.windows/src/com/oracle/svm/core/windows/WindowsSystemPropertiesSupport.java", "diffHunk": "@@ -122,13 +132,194 @@ private static String toJavaString(WCharPointer wcString, UnsignedWord length) {\n         return CTypeConversion.toJavaString((CCharPointer) wcString, SizeOf.unsigned(WCharPointer.class).multiply(length), StandardCharsets.UTF_16LE);\n     }\n \n+    private Pair<String, String> cachedOsNameAndVersion;\n+\n+    @Override\n+    protected String osNameValue() {\n+        if (cachedOsNameAndVersion == null) {\n+            cachedOsNameAndVersion = getOsNameAndVersion();\n+        }\n+        return cachedOsNameAndVersion.getLeft();\n+    }\n+\n     @Override\n     protected String osVersionValue() {\n-        ByteBuffer versionBytes = ByteBuffer.allocate(4);\n-        versionBytes.putInt(SysinfoAPI.GetVersion());\n-        int majorVersion = versionBytes.get(3);\n-        int minorVersion = versionBytes.get(2);\n-        return majorVersion + \".\" + minorVersion;\n+        if (cachedOsNameAndVersion == null) {\n+            cachedOsNameAndVersion = getOsNameAndVersion();\n+        }\n+        return cachedOsNameAndVersion.getRight();\n+    }\n+\n+    public Pair<String, String> getOsNameAndVersion() {\n+        /*\n+         * Reimplementation of code from java_props_md.c\n+         */\n+        SysinfoAPI.OSVERSIONINFOEXA ver = StackValue.get(SysinfoAPI.OSVERSIONINFOEXA.class);\n+        ver.dwOSVersionInfoSize(SizeOf.get(SysinfoAPI.OSVERSIONINFOEXA.class));\n+        SysinfoAPI.GetVersionExA(ver);\n+\n+        boolean is64bit = true; /* ATM we only support 64-bit Windows OS's */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7db981fa1fb8fa3059c76cbb730f3733daac94cf"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEyODQzNA==", "bodyText": "I would add a number of bits to architecture.", "url": "https://github.com/oracle/graal/pull/2960#discussion_r535128434", "createdAt": "2020-12-03T11:23:54Z", "author": {"login": "vjovanov"}, "path": "substratevm/src/com.oracle.svm.core.windows/src/com/oracle/svm/core/windows/WindowsSystemPropertiesSupport.java", "diffHunk": "@@ -122,13 +132,194 @@ private static String toJavaString(WCharPointer wcString, UnsignedWord length) {\n         return CTypeConversion.toJavaString((CCharPointer) wcString, SizeOf.unsigned(WCharPointer.class).multiply(length), StandardCharsets.UTF_16LE);\n     }\n \n+    private Pair<String, String> cachedOsNameAndVersion;\n+\n+    @Override\n+    protected String osNameValue() {\n+        if (cachedOsNameAndVersion == null) {\n+            cachedOsNameAndVersion = getOsNameAndVersion();\n+        }\n+        return cachedOsNameAndVersion.getLeft();\n+    }\n+\n     @Override\n     protected String osVersionValue() {\n-        ByteBuffer versionBytes = ByteBuffer.allocate(4);\n-        versionBytes.putInt(SysinfoAPI.GetVersion());\n-        int majorVersion = versionBytes.get(3);\n-        int minorVersion = versionBytes.get(2);\n-        return majorVersion + \".\" + minorVersion;\n+        if (cachedOsNameAndVersion == null) {\n+            cachedOsNameAndVersion = getOsNameAndVersion();\n+        }\n+        return cachedOsNameAndVersion.getRight();\n+    }\n+\n+    public Pair<String, String> getOsNameAndVersion() {\n+        /*\n+         * Reimplementation of code from java_props_md.c\n+         */\n+        SysinfoAPI.OSVERSIONINFOEXA ver = StackValue.get(SysinfoAPI.OSVERSIONINFOEXA.class);\n+        ver.dwOSVersionInfoSize(SizeOf.get(SysinfoAPI.OSVERSIONINFOEXA.class));\n+        SysinfoAPI.GetVersionExA(ver);\n+\n+        boolean is64bit = true; /* ATM we only support 64-bit Windows OS's */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEyNjczOQ=="}, "originalCommit": {"oid": "7db981fa1fb8fa3059c76cbb730f3733daac94cf"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEzMjU0NQ==", "bodyText": "the linker call", "url": "https://github.com/oracle/graal/pull/2960#discussion_r535132545", "createdAt": "2020-12-03T11:27:47Z", "author": {"login": "vjovanov"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java", "diffHunk": "@@ -140,6 +144,9 @@ public static void setDebugInfoValueUpdateHandler(ValueUpdateHandler updateHandl\n     @Option(help = \"Path passed to the linker as the -rpath (list of comma-separated directories)\")//\n     public static final HostedOptionKey<String[]> LinkerRPath = new HostedOptionKey<>(null);\n \n+    @Option(help = \"String which would be appended to linker call\")//", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7db981fa1fb8fa3059c76cbb730f3733daac94cf"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEzMjgwMQ==", "bodyText": "Unrelated change.", "url": "https://github.com/oracle/graal/pull/2960#discussion_r535132801", "createdAt": "2020-12-03T11:28:03Z", "author": {"login": "vjovanov"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/VMInspection.java", "diffHunk": "@@ -97,7 +97,7 @@ public static boolean isEnabled() {\n \n class DumpAllStacks implements SignalHandler {\n     static void install() {\n-        Signal.handle(Platform.includedIn(WINDOWS.class) ? new Signal(\"BREAK\") : new Signal(\"QUIT\"), new DumpAllStacks());\n+        Signal.handle(Platform.includedIn(Platform.WINDOWS.class) ? new Signal(\"BREAK\") : new Signal(\"QUIT\"), new DumpAllStacks());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7db981fa1fb8fa3059c76cbb730f3733daac94cf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEzNzg4OA==", "bodyText": "I think this line can be returned back.", "url": "https://github.com/oracle/graal/pull/2960#discussion_r535137888", "createdAt": "2020-12-03T11:33:06Z", "author": {"login": "vjovanov"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java", "diffHunk": "@@ -314,57 +315,64 @@ public NativeImageGenerator(ImageClassLoader loader, HostedOptionProvider option\n         optionProvider.getRuntimeValues().put(GraalOptions.EagerSnippets, true);\n     }\n \n-    public static Platform defaultPlatform(ClassLoader classLoader) {\n+    public static Platform loadPlatform(ClassLoader classLoader, String platformClassName) throws ClassNotFoundException {\n+        Class<?> platformClass;\n+\n+        platformClass = classLoader.loadClass(platformClassName);\n+\n+        Object result;\n+        try {\n+            result = ReflectionUtil.newInstance(platformClass);\n+        } catch (ReflectionUtilError ex) {\n+            throw UserError.abort(ex.getCause(), \"Could not instantiate platform class %s. Ensure the class is not abstract and has a no-argument constructor.\", platformClassName);\n+        }\n+\n+        if (!(result instanceof Platform)) {\n+            throw UserError.abort(\"Platform class %s does not implement %s\", platformClassName, Platform.class.getTypeName());\n+        }\n+        return (Platform) result;\n+    }\n+\n+    public static Platform loadPlatform(String os, String arch) {\n+        ServiceLoader<Platform> loader = ServiceLoader.load(Platform.class);\n+        for (Platform platform : loader) {\n+            if (platform.getOS().equals(os) && platform.getArchitecture().equals(arch)) {\n+                return platform;\n+            }\n+        }\n+        throw UserError.abort(\"Platform specified as \" + os + \"-\" + arch +\n+                        \" isn't supported.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7db981fa1fb8fa3059c76cbb730f3733daac94cf"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEzODM0OA==", "bodyText": "I don't see a need for an extra line here.", "url": "https://github.com/oracle/graal/pull/2960#discussion_r535138348", "createdAt": "2020-12-03T11:33:33Z", "author": {"login": "vjovanov"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/ServiceLoaderFeature.java", "diffHunk": "@@ -103,7 +103,9 @@\n      */\n     private static final Set<String> SERVICES_TO_SKIP = new HashSet<>(Arrays.asList(\n                     \"java.security.Provider\",                       // see SecurityServicesFeature\n-                    \"sun.util.locale.provider.LocaleDataMetaInfo\"   // see LocaleSubstitutions\n+                    \"sun.util.locale.provider.LocaleDataMetaInfo\",  // see LocaleSubstitutions\n+                    \"org.graalvm.nativeimage.Platform\"  // type shouldn't be reachable after\n+                                                        // intrinsification", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7db981fa1fb8fa3059c76cbb730f3733daac94cf"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEzODk0Mg==", "bodyText": "I would also describe better why is this necessary.", "url": "https://github.com/oracle/graal/pull/2960#discussion_r535138942", "createdAt": "2020-12-03T11:34:11Z", "author": {"login": "vjovanov"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/ServiceLoaderFeature.java", "diffHunk": "@@ -103,7 +103,9 @@\n      */\n     private static final Set<String> SERVICES_TO_SKIP = new HashSet<>(Arrays.asList(\n                     \"java.security.Provider\",                       // see SecurityServicesFeature\n-                    \"sun.util.locale.provider.LocaleDataMetaInfo\"   // see LocaleSubstitutions\n+                    \"sun.util.locale.provider.LocaleDataMetaInfo\",  // see LocaleSubstitutions\n+                    \"org.graalvm.nativeimage.Platform\"  // type shouldn't be reachable after\n+                                                        // intrinsification", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEzODM0OA=="}, "originalCommit": {"oid": "7db981fa1fb8fa3059c76cbb730f3733daac94cf"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE0MzY2NA==", "bodyText": "This is hard to understand.", "url": "https://github.com/oracle/graal/pull/2960#discussion_r535143664", "createdAt": "2020-12-03T11:39:06Z", "author": {"login": "vjovanov"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java", "diffHunk": "@@ -66,7 +72,23 @@\n \n     public static class Options {\n         @Option(help = \"Indicate the C Annotation Processor to use previously cached native information when generating C Type information.\")//\n-        public static final HostedOptionKey<Boolean> UseCAPCache = new HostedOptionKey<>(false);\n+        public static final HostedOptionKey<Boolean> UseCAPCache = new HostedOptionKey<Boolean>(false) {\n+            @Override\n+            public Boolean getValueOrDefault(UnmodifiableEconomicMap<OptionKey<?>, Object> values) {\n+                if (!values.containsKey(this)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7db981fa1fb8fa3059c76cbb730f3733daac94cf"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7db981fa1fb8fa3059c76cbb730f3733daac94cf", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/7db981fa1fb8fa3059c76cbb730f3733daac94cf", "committedDate": "2020-12-03T10:54:16Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "6c41f986b3c394800904f4d9ac28796564613bee", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/6c41f986b3c394800904f4d9ac28796564613bee", "committedDate": "2020-12-03T16:20:54Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c41f986b3c394800904f4d9ac28796564613bee", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/6c41f986b3c394800904f4d9ac28796564613bee", "committedDate": "2020-12-03T16:20:54Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "3afaa2e35add6c6cd00e181dc243bca8e761f601", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/3afaa2e35add6c6cd00e181dc243bca8e761f601", "committedDate": "2020-12-03T17:00:28Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3afaa2e35add6c6cd00e181dc243bca8e761f601", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/3afaa2e35add6c6cd00e181dc243bca8e761f601", "committedDate": "2020-12-03T17:00:28Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "887bc8e2d381ed23a440203b37efc38cbd2ac8e4", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/887bc8e2d381ed23a440203b37efc38cbd2ac8e4", "committedDate": "2020-12-03T18:58:47Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NTYxMDQx", "url": "https://github.com/oracle/graal/pull/2960#pullrequestreview-544561041", "createdAt": "2020-12-04T00:02:55Z", "commit": {"oid": "887bc8e2d381ed23a440203b37efc38cbd2ac8e4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMDowMjo1NVrOH-6wXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMDoxMTo0OVrOH-69bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTczNjQxMg==", "bodyText": "How is it ever possible that ImageSingletons.lookup(Platform.class).getArchitecture() does not return the correct architecture?\nI think a goal of this PR should be to remove the system properties svm.targetArch and svm.targetName", "url": "https://github.com/oracle/graal/pull/2960#discussion_r535736412", "createdAt": "2020-12-04T00:02:55Z", "author": {"login": "christianwimmer"}, "path": "substratevm/src/com.oracle.objectfile/src/com/oracle/objectfile/macho/MachOObjectFile.java", "diffHunk": "@@ -80,7 +82,7 @@\n      * Create an empty Mach-O object file.\n      */\n     public MachOObjectFile(int pageSize) {\n-        this(pageSize, MachOCpuType.from(System.getProperty(\"svm.targetArch\") == null ? System.getProperty(\"os.arch\") : System.getProperty(\"svm.targetArch\")));\n+        this(pageSize, MachOCpuType.from(System.getProperty(\"svm.targetArch\") == null ? ImageSingletons.lookup(Platform.class).getArchitecture() : System.getProperty(\"svm.targetArch\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "887bc8e2d381ed23a440203b37efc38cbd2ac8e4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTczNzMyMw==", "bodyText": "I don't think we should introduce these BASE interfaces. We get a too deep and confusing hierarchy. I would not know when to use LINUX vs. LINUX_BASE in a Platforms annotation.", "url": "https://github.com/oracle/graal/pull/2960#discussion_r535737323", "createdAt": "2020-12-04T00:05:28Z", "author": {"login": "christianwimmer"}, "path": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/Platform.java", "diffHunk": "@@ -103,6 +136,33 @@ static boolean includedIn(Class<? extends Platform> platformGroup) {\n      */\n     interface AARCH64 extends Platform {\n \n+        /**\n+         * Returns string representing AARCH64 architecture.\n+         *\n+         * @since 21.0\n+         */\n+        default String getArchitecture() {\n+            return \"aarch64\";\n+        }\n+    }\n+\n+    /*\n+     * Operating system bases.\n+     */\n+    /**\n+     * Interface encapsulating all linux-derived operating systems.\n+     *\n+     * @since 21.0\n+     */\n+    interface LINUX_BASE extends InternalPlatform.PLATFORM_JNI {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "887bc8e2d381ed23a440203b37efc38cbd2ac8e4"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTczOTc1OA==", "bodyText": "@pejovica FYI", "url": "https://github.com/oracle/graal/pull/2960#discussion_r535739758", "createdAt": "2020-12-04T00:11:49Z", "author": {"login": "christianwimmer"}, "path": "substratevm/src/com.oracle.svm.core.windows/src/com/oracle/svm/core/windows/WindowsSystemPropertiesSupport.java", "diffHunk": "@@ -122,13 +132,194 @@ private static String toJavaString(WCharPointer wcString, UnsignedWord length) {\n         return CTypeConversion.toJavaString((CCharPointer) wcString, SizeOf.unsigned(WCharPointer.class).multiply(length), StandardCharsets.UTF_16LE);\n     }\n \n+    private Pair<String, String> cachedOsNameAndVersion;\n+\n+    @Override\n+    protected String osNameValue() {\n+        if (cachedOsNameAndVersion == null) {\n+            cachedOsNameAndVersion = getOsNameAndVersion();\n+        }\n+        return cachedOsNameAndVersion.getLeft();\n+    }\n+\n     @Override\n     protected String osVersionValue() {\n-        ByteBuffer versionBytes = ByteBuffer.allocate(4);\n-        versionBytes.putInt(SysinfoAPI.GetVersion());\n-        int majorVersion = versionBytes.get(3);\n-        int minorVersion = versionBytes.get(2);\n-        return majorVersion + \".\" + minorVersion;\n+        if (cachedOsNameAndVersion == null) {\n+            cachedOsNameAndVersion = getOsNameAndVersion();\n+        }\n+        return cachedOsNameAndVersion.getRight();\n+    }\n+\n+    public Pair<String, String> getOsNameAndVersion() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "887bc8e2d381ed23a440203b37efc38cbd2ac8e4"}, "originalPosition": 70}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "887bc8e2d381ed23a440203b37efc38cbd2ac8e4", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/887bc8e2d381ed23a440203b37efc38cbd2ac8e4", "committedDate": "2020-12-03T18:58:47Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "ef3fe79b560d685d7445af05d3e13aad3c48e9fc", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/ef3fe79b560d685d7445af05d3e13aad3c48e9fc", "committedDate": "2020-12-04T18:52:12Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f706780f4a1be776c7a04db5a6e120cf5debcd6", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/8f706780f4a1be776c7a04db5a6e120cf5debcd6", "committedDate": "2020-12-04T19:35:31Z", "message": "--target parameter, initial Android/iOS support\n\nAndroid/iOS platform defaults\nNew Platform methods\nBetter CAP cache defaults"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29f31eaaf23b4d77d5f96aafb9840cae882edc04", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/29f31eaaf23b4d77d5f96aafb9840cae882edc04", "committedDate": "2020-12-04T19:36:25Z", "message": "os.name system property support\n\nBetter Windows version detection (JDK-8066504)\n\nWindows fixes and cleanup\nCo-authored-by: Aleksandar Pejovi\u0107 <aleksandar.pejovic@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb7992181040287f437b611963f41ca4684c259f", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/cb7992181040287f437b611963f41ca4684c259f", "committedDate": "2020-12-04T19:36:25Z", "message": "Load LibC using ServiceLoader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "372b87b76f073b7aa60b41979a3a90d80e1b0ba2", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/372b87b76f073b7aa60b41979a3a90d80e1b0ba2", "committedDate": "2020-12-04T19:36:25Z", "message": "Load Platforms using ServiceLoader"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef3fe79b560d685d7445af05d3e13aad3c48e9fc", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/ef3fe79b560d685d7445af05d3e13aad3c48e9fc", "committedDate": "2020-12-04T18:52:12Z", "message": "Added LINUX_BASE and DARWIN_BASE meta platforms"}, "afterCommit": {"oid": "372b87b76f073b7aa60b41979a3a90d80e1b0ba2", "author": {"user": {"login": "lazar-mitrovic", "name": "Lazar Mitrovi\u0107"}}, "url": "https://github.com/oracle/graal/commit/372b87b76f073b7aa60b41979a3a90d80e1b0ba2", "committedDate": "2020-12-04T19:36:25Z", "message": "Load Platforms using ServiceLoader"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 962, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}