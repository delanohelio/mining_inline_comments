{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMjM2NDE1", "number": 3050, "title": "[GR-32289] Programmatic serialization registration from inside features", "bodyText": "It is only possible to add serialization registrations from serialization-config.json files, these changes would add a RuntimeSerialization class which is accessible from within feature implementations so during image building, classes can be registered for serialization programatically using RuntimeSerialization.register(YourClass.class).\nThis PR does 3 things:\n\nadd programatical registration of serialization classes\nchange the output of the serialization-config.json file to write out array classes as org.example.ClassName[] instead of [org.example.ClassName;\nsupport reading in the []-suffix syntax from the config file, so this also fixes #3048", "createdAt": "2020-12-06T17:40:02Z", "url": "https://github.com/oracle/graal/pull/3050", "merged": true, "mergeCommit": {"oid": "a1b86ff01b03d824c6c9c18375f73923dfefb77d"}, "closed": true, "closedAt": "2021-08-10T02:07:17Z", "author": {"login": "kkriske"}, "timelineItems": {"totalCount": 43, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdjlDs_gBqjQwNzY4NjEwNDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABeynzg7AH2gAyNTMzMjM2NDE1OjEyZmFkZjE0ZTgzZDUzMjk0ZjQ5NGUwMjU5NjIzYjZkZDBiY2IzZTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5335058ad8c37f8d6301d7b40dd37e570669f95d", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/5335058ad8c37f8d6301d7b40dd37e570669f95d", "committedDate": "2020-12-06T17:39:41Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "9b4dedd1b67a1bb3b53f0ca96454e7c5bc08adcb", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/9b4dedd1b67a1bb3b53f0ca96454e7c5bc08adcb", "committedDate": "2020-12-06T18:14:50Z", "message": "serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b4dedd1b67a1bb3b53f0ca96454e7c5bc08adcb", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/9b4dedd1b67a1bb3b53f0ca96454e7c5bc08adcb", "committedDate": "2020-12-06T18:14:50Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "4dc8d37a0fd322673657e1aa7fc2b46a9be7ea70", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/4dc8d37a0fd322673657e1aa7fc2b46a9be7ea70", "committedDate": "2020-12-06T19:04:21Z", "message": "serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4dc8d37a0fd322673657e1aa7fc2b46a9be7ea70", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/4dc8d37a0fd322673657e1aa7fc2b46a9be7ea70", "committedDate": "2020-12-06T19:04:21Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "87a1c27585c91cfba4b7d07d4116d6b32dacd68a", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/87a1c27585c91cfba4b7d07d4116d6b32dacd68a", "committedDate": "2020-12-06T19:27:35Z", "message": "serialization registration from inside features"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMDk1NjUx", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-550095651", "createdAt": "2020-12-11T13:27:43Z", "commit": {"oid": "87a1c27585c91cfba4b7d07d4116d6b32dacd68a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87a1c27585c91cfba4b7d07d4116d6b32dacd68a", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/87a1c27585c91cfba4b7d07d4116d6b32dacd68a", "committedDate": "2020-12-06T19:27:35Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "d323592f98089c553b3228a8b857681bcceedad3", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/d323592f98089c553b3228a8b857681bcceedad3", "committedDate": "2020-12-11T23:07:57Z", "message": "serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d323592f98089c553b3228a8b857681bcceedad3", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/d323592f98089c553b3228a8b857681bcceedad3", "committedDate": "2020-12-11T23:07:57Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "f64be274855230dbee5443f69247a78b348dcc70", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/f64be274855230dbee5443f69247a78b348dcc70", "committedDate": "2020-12-12T11:29:17Z", "message": "serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f64be274855230dbee5443f69247a78b348dcc70", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/f64be274855230dbee5443f69247a78b348dcc70", "committedDate": "2020-12-12T11:29:17Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "e238f576e8bfc316d0f8c1920d7c247471809bc8", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/e238f576e8bfc316d0f8c1920d7c247471809bc8", "committedDate": "2020-12-17T12:20:53Z", "message": "serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e238f576e8bfc316d0f8c1920d7c247471809bc8", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/e238f576e8bfc316d0f8c1920d7c247471809bc8", "committedDate": "2020-12-17T12:20:53Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "acea686b4527b5bc805b7369e7a2967d1720383a", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/acea686b4527b5bc805b7369e7a2967d1720383a", "committedDate": "2020-12-17T13:44:18Z", "message": "serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "acea686b4527b5bc805b7369e7a2967d1720383a", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/acea686b4527b5bc805b7369e7a2967d1720383a", "committedDate": "2020-12-17T13:44:18Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "a96fa4359e7916c87a49c3a6a47118412df6c9f4", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/a96fa4359e7916c87a49c3a6a47118412df6c9f4", "committedDate": "2020-12-20T12:47:31Z", "message": "serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a96fa4359e7916c87a49c3a6a47118412df6c9f4", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/a96fa4359e7916c87a49c3a6a47118412df6c9f4", "committedDate": "2020-12-20T12:47:31Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "012872406ba6f5e2bfbdf1405c56f9988137246c", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/012872406ba6f5e2bfbdf1405c56f9988137246c", "committedDate": "2020-12-20T13:22:00Z", "message": "serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "012872406ba6f5e2bfbdf1405c56f9988137246c", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/012872406ba6f5e2bfbdf1405c56f9988137246c", "committedDate": "2020-12-20T13:22:00Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "561fc0078f66d63024be64f75358add76e8300b1", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/561fc0078f66d63024be64f75358add76e8300b1", "committedDate": "2020-12-20T17:52:19Z", "message": "serialization registration from inside features"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzNDIzOTk1", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-563423995", "createdAt": "2021-01-07T11:47:22Z", "commit": {"oid": "561fc0078f66d63024be64f75358add76e8300b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMTo0NzoyMlrOIPphLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMTo0NzoyMlrOIPphLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzI3OTc5MQ==", "bodyText": "Having a default method here just to save a few lines of code over here \n  \n    \n      graal/substratevm/src/com.oracle.svm.reflect/src/com/oracle/svm/reflect/serialize/hosted/SerializationFeature.java\n    \n    \n         Line 98\n      in\n      561fc00\n    \n    \n    \n    \n\n        \n          \n           new SerializationRegistryAdapter((clazz, checkSums) -> deniedClasses.put(clazz, true), imageClassLoader)); \n        \n    \n  \n\n seems like a bad idea.", "url": "https://github.com/oracle/graal/pull/3050#discussion_r553279791", "createdAt": "2021-01-07T11:47:22Z", "author": {"login": "olpaw"}, "path": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeSerializationSupport.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The Universal Permissive License (UPL), Version 1.0\n+ *\n+ * Subject to the condition set forth below, permission is hereby granted to any\n+ * person obtaining a copy of this software, associated documentation and/or\n+ * data (collectively the \"Software\"), free of charge and under any and all\n+ * copyright rights in the Software, and any and all patent rights owned or\n+ * freely licensable by each licensor hereunder covering either (i) the\n+ * unmodified Software as contributed to or provided by such licensor, or (ii)\n+ * the Larger Works (as defined below), to deal in both\n+ *\n+ * (a) the Software, and\n+ *\n+ * (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if\n+ * one is included with the Software each a \"Larger Work\" to which the Software\n+ * is contributed by such licensors),\n+ *\n+ * without restriction, including without limitation the rights to copy, create\n+ * derivative works of, display, perform, and distribute the Software and make,\n+ * use, sell, offer for sale, import, export, have made, and have sold the\n+ * Software and the Larger Work(s), and to sublicense the foregoing rights on\n+ * either these or other terms.\n+ *\n+ * This license is subject to the following condition:\n+ *\n+ * The above copyright notice and either this complete permission notice or at a\n+ * minimum a reference to the UPL must be included in all copies or substantial\n+ * portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.graalvm.nativeimage.impl;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+public interface RuntimeSerializationSupport {\n+\n+    default void register(Class<?>... classes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "561fc0078f66d63024be64f75358add76e8300b1"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzNDI1MTYw", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-563425160", "createdAt": "2021-01-07T11:49:29Z", "commit": {"oid": "561fc0078f66d63024be64f75358add76e8300b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMTo0OToyOVrOIPpkpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMTo0OToyOVrOIPpkpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzI4MDY3OQ==", "bodyText": "Adding public API requires corresponding changes in https://github.com/oracle/graal/blob/561fc0078f66d63024be64f75358add76e8300b1/sdk/src/org.graalvm.nativeimage/snapshot.sigtest", "url": "https://github.com/oracle/graal/pull/3050#discussion_r553280679", "createdAt": "2021-01-07T11:49:29Z", "author": {"login": "olpaw"}, "path": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The Universal Permissive License (UPL), Version 1.0\n+ *\n+ * Subject to the condition set forth below, permission is hereby granted to any\n+ * person obtaining a copy of this software, associated documentation and/or\n+ * data (collectively the \"Software\"), free of charge and under any and all\n+ * copyright rights in the Software, and any and all patent rights owned or\n+ * freely licensable by each licensor hereunder covering either (i) the\n+ * unmodified Software as contributed to or provided by such licensor, or (ii)\n+ * the Larger Works (as defined below), to deal in both\n+ *\n+ * (a) the Software, and\n+ *\n+ * (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if\n+ * one is included with the Software each a \"Larger Work\" to which the Software\n+ * is contributed by such licensors),\n+ *\n+ * without restriction, including without limitation the rights to copy, create\n+ * derivative works of, display, perform, and distribute the Software and make,\n+ * use, sell, offer for sale, import, export, have made, and have sold the\n+ * Software and the Larger Work(s), and to sublicense the foregoing rights on\n+ * either these or other terms.\n+ *\n+ * This license is subject to the following condition:\n+ *\n+ * The above copyright notice and either this complete permission notice or at a\n+ * minimum a reference to the UPL must be included in all copies or substantial\n+ * portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.graalvm.nativeimage.hosted;\n+\n+import org.graalvm.nativeimage.ImageSingletons;\n+import org.graalvm.nativeimage.Platform;\n+import org.graalvm.nativeimage.Platforms;\n+import org.graalvm.nativeimage.impl.RuntimeSerializationSupport;\n+\n+@Platforms(Platform.HOSTED_ONLY.class)\n+public final class RuntimeSerialization {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "561fc0078f66d63024be64f75358add76e8300b1"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzNTkxNjk5", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-563591699", "createdAt": "2021-01-07T15:42:07Z", "commit": {"oid": "561fc0078f66d63024be64f75358add76e8300b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNTo0MjowN1rOIPxWGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNTo0MjowN1rOIPxWGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQwODAyNA==", "bodyText": "RuntimeSerializationSupportImpl must not be an inner class of hosted class SerializationFeature. It extends com.oracle.svm.reflect.serialize.SerializationSupport which holds data that will be part of an image. We do not allow any hosted classes to get built into an image. If you build an image that uses serialization with image builder assertions enabled (native-image -J-ea) you would run into issues with com.oracle.svm.hosted.NativeImageGenerator#checkName.", "url": "https://github.com/oracle/graal/pull/3050#discussion_r553408024", "createdAt": "2021-01-07T15:42:07Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.svm.reflect/src/com/oracle/svm/reflect/serialize/hosted/SerializationFeature.java", "diffHunk": "@@ -209,6 +200,28 @@ static void println(String str) {\n         System.out.println(str);\n         // Checkstyle: resume\n     }\n+\n+    private class RuntimeSerializationSupportImpl extends SerializationSupport implements RuntimeSerializationSupport {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "561fc0078f66d63024be64f75358add76e8300b1"}, "originalPosition": 180}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzNTkyMDg0", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-563592084", "createdAt": "2021-01-07T15:42:33Z", "commit": {"oid": "561fc0078f66d63024be64f75358add76e8300b1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "561fc0078f66d63024be64f75358add76e8300b1", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/561fc0078f66d63024be64f75358add76e8300b1", "committedDate": "2020-12-20T17:52:19Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "9cef9bd2606c18832b54eca0785006d63c5966eb", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/9cef9bd2606c18832b54eca0785006d63c5966eb", "committedDate": "2021-01-11T09:54:02Z", "message": "serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9cef9bd2606c18832b54eca0785006d63c5966eb", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/9cef9bd2606c18832b54eca0785006d63c5966eb", "committedDate": "2021-01-11T09:54:02Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "c1e8cfe1e8778cdac14e281ff12d3ded20952d36", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/c1e8cfe1e8778cdac14e281ff12d3ded20952d36", "committedDate": "2021-01-11T10:53:26Z", "message": "serialization registration from inside features"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1MjgyODcy", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-565282872", "createdAt": "2021-01-11T11:50:01Z", "commit": {"oid": "c1e8cfe1e8778cdac14e281ff12d3ded20952d36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxMTo1MDowMlrOIRSFlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxMTo1MDowMlrOIRSFlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDk5MzA0NQ==", "bodyText": "RuntimeSerializationSupportImpl is in package com.oracle.svm.reflect.serialize.hosted yet it extends SerializationSupport. We do not allow classes with package names *.hosted to be part of the image heap. But this is exactly what happens when you make the RuntimeSerializationSupport ImageSingleton a *.hosted-class. We depend on the RuntimeSerializationSupport ImageSingleton at image runtime (via getSerializationConstructorAccessor). Please keep classes that end up in the image heap strictly separate from classes that are only needed at image build time (for configuration).", "url": "https://github.com/oracle/graal/pull/3050#discussion_r554993045", "createdAt": "2021-01-11T11:50:02Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.svm.reflect/src/com/oracle/svm/reflect/serialize/hosted/SerializationFeature.java", "diffHunk": "@@ -40,82 +40,170 @@\n import java.net.URL;\n import java.net.URLClassLoader;\n import java.security.NoSuchAlgorithmException;\n+import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n-import java.util.List;\n import java.util.Map;\n import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n \n import org.graalvm.nativeimage.ImageSingletons;\n import org.graalvm.nativeimage.hosted.Feature;\n import org.graalvm.nativeimage.hosted.RuntimeReflection;\n+import org.graalvm.nativeimage.impl.RuntimeSerializationSupport;\n \n import com.oracle.svm.core.annotate.AutomaticFeature;\n import com.oracle.svm.core.configure.ConfigurationFiles;\n import com.oracle.svm.core.configure.SerializationConfigurationParser;\n-import com.oracle.svm.core.configure.SerializationConfigurationParser.SerializationParserFunction;\n+import com.oracle.svm.core.configure.SerializationDenyConfigurationParser;\n import com.oracle.svm.core.jdk.Package_jdk_internal_reflect;\n-import com.oracle.svm.core.jdk.serialize.SerializationRegistry;\n import com.oracle.svm.core.option.SubstrateOptionsParser;\n import com.oracle.svm.core.util.UserError;\n import com.oracle.svm.core.util.VMError;\n-import com.oracle.svm.core.util.json.JSONParserException;\n import com.oracle.svm.hosted.FallbackFeature;\n import com.oracle.svm.hosted.FeatureImpl;\n import com.oracle.svm.hosted.ImageClassLoader;\n import com.oracle.svm.hosted.NativeImageOptions;\n import com.oracle.svm.hosted.config.ConfigurationParserUtils;\n+import com.oracle.svm.hosted.config.SerializationRegistryAdapter;\n import com.oracle.svm.reflect.serialize.SerializationSupport;\n import com.oracle.svm.util.ReflectionUtil;\n import com.oracle.svm.util.SerializationChecksumCalculator;\n \n-import jdk.vm.ci.meta.MetaUtil;\n-\n @AutomaticFeature\n public class SerializationFeature implements Feature {\n+    private RuntimeSerializationSupportImpl runtimeSerializationSupport;\n     private int loadedConfigurations;\n \n     @Override\n-    public void beforeAnalysis(BeforeAnalysisAccess a) {\n-        FeatureImpl.BeforeAnalysisAccessImpl access = (FeatureImpl.BeforeAnalysisAccessImpl) a;\n+    public void duringSetup(DuringSetupAccess a) {\n+        FeatureImpl.DuringSetupAccessImpl access = (FeatureImpl.DuringSetupAccessImpl) a;\n+\n+        SerializationDenyRegistry serializationDenyRegistry = new SerializationDenyRegistry();\n         SerializationBuilder serializationBuilder = new SerializationBuilder(access);\n+        runtimeSerializationSupport = new RuntimeSerializationSupportImpl(serializationDenyRegistry, serializationBuilder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1e8cfe1e8778cdac14e281ff12d3ded20952d36"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1Mjg1NDYz", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-565285463", "createdAt": "2021-01-11T11:53:48Z", "commit": {"oid": "c1e8cfe1e8778cdac14e281ff12d3ded20952d36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxMTo1Mzo0OFrOIRSNLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxMTo1Mzo0OFrOIRSNLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDk5NDk5MQ==", "bodyText": "Do not move SerializationRegistry to a *.hosted package name. See https://github.com/oracle/graal/pull/3050/files#r554993045", "url": "https://github.com/oracle/graal/pull/3050#discussion_r554994991", "createdAt": "2021-01-11T11:53:48Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.svm.reflect/src/com/oracle/svm/reflect/serialize/hosted/SerializationRegistry.java", "diffHunk": "@@ -23,7 +23,7 @@\n  * or visit www.oracle.com if you need additional information or have any\n  * questions.\n  */\n-package com.oracle.svm.core.jdk.serialize;\n+package com.oracle.svm.reflect.serialize.hosted;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1e8cfe1e8778cdac14e281ff12d3ded20952d36"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1Mjg4NzQ2", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-565288746", "createdAt": "2021-01-11T11:58:38Z", "commit": {"oid": "c1e8cfe1e8778cdac14e281ff12d3ded20952d36"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c1e8cfe1e8778cdac14e281ff12d3ded20952d36", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/c1e8cfe1e8778cdac14e281ff12d3ded20952d36", "committedDate": "2021-01-11T10:53:26Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "84da4f9929a5ba11aa88240bdd5aa10082923601", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/84da4f9929a5ba11aa88240bdd5aa10082923601", "committedDate": "2021-01-11T12:57:21Z", "message": "serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "84da4f9929a5ba11aa88240bdd5aa10082923601", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/84da4f9929a5ba11aa88240bdd5aa10082923601", "committedDate": "2021-01-11T12:57:21Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "f1c7dad4e941b855b8ebd97369ecc7f71338165b", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/f1c7dad4e941b855b8ebd97369ecc7f71338165b", "committedDate": "2021-01-11T14:03:47Z", "message": "serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f1c7dad4e941b855b8ebd97369ecc7f71338165b", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/f1c7dad4e941b855b8ebd97369ecc7f71338165b", "committedDate": "2021-01-11T14:03:47Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "95dbeae353bf52afebcfb708d6a711e9a39dca5c", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/95dbeae353bf52afebcfb708d6a711e9a39dca5c", "committedDate": "2021-01-11T14:55:32Z", "message": "serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95dbeae353bf52afebcfb708d6a711e9a39dca5c", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/95dbeae353bf52afebcfb708d6a711e9a39dca5c", "committedDate": "2021-01-11T14:55:32Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "04a28ad5411b609bdfa227f651412f8df5bb4ea6", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/04a28ad5411b609bdfa227f651412f8df5bb4ea6", "committedDate": "2021-01-30T20:00:30Z", "message": "serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "04a28ad5411b609bdfa227f651412f8df5bb4ea6", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/04a28ad5411b609bdfa227f651412f8df5bb4ea6", "committedDate": "2021-01-30T20:00:30Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "0de81dfdf0e4af545ce27cf2e3b5273e07422fd4", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/0de81dfdf0e4af545ce27cf2e3b5273e07422fd4", "committedDate": "2021-01-30T20:06:48Z", "message": "serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0de81dfdf0e4af545ce27cf2e3b5273e07422fd4", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/0de81dfdf0e4af545ce27cf2e3b5273e07422fd4", "committedDate": "2021-01-30T20:06:48Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "c83d2f54123fb50cb8e7f09e1ce949f61556d6a8", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/c83d2f54123fb50cb8e7f09e1ce949f61556d6a8", "committedDate": "2021-03-07T12:57:42Z", "message": "serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c83d2f54123fb50cb8e7f09e1ce949f61556d6a8", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/c83d2f54123fb50cb8e7f09e1ce949f61556d6a8", "committedDate": "2021-03-07T12:57:42Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "2d05e4e2de823a7dbbcf811990c58d6d3db2203f", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/2d05e4e2de823a7dbbcf811990c58d6d3db2203f", "committedDate": "2021-03-21T20:48:10Z", "message": "serialization registration from inside features"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA5MDE4OTgy", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-709018982", "createdAt": "2021-07-18T11:58:28Z", "commit": {"oid": "2d05e4e2de823a7dbbcf811990c58d6d3db2203f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xOFQxMTo1ODoyOFrOKAtVzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0xOFQxMTo1ODoyOFrOKAtVzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3MTgzMTUwMQ==", "bodyText": "Should the naming of these be changed to for example registerWithTargetConstructorClass? To avoid confusion between the vararg register call.", "url": "https://github.com/oracle/graal/pull/3050#discussion_r671831501", "createdAt": "2021-07-18T11:58:28Z", "author": {"login": "kkriske"}, "path": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeSerializationSupport.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The Universal Permissive License (UPL), Version 1.0\n+ *\n+ * Subject to the condition set forth below, permission is hereby granted to any\n+ * person obtaining a copy of this software, associated documentation and/or\n+ * data (collectively the \"Software\"), free of charge and under any and all\n+ * copyright rights in the Software, and any and all patent rights owned or\n+ * freely licensable by each licensor hereunder covering either (i) the\n+ * unmodified Software as contributed to or provided by such licensor, or (ii)\n+ * the Larger Works (as defined below), to deal in both\n+ *\n+ * (a) the Software, and\n+ *\n+ * (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if\n+ * one is included with the Software each a \"Larger Work\" to which the Software\n+ * is contributed by such licensors),\n+ *\n+ * without restriction, including without limitation the rights to copy, create\n+ * derivative works of, display, perform, and distribute the Software and make,\n+ * use, sell, offer for sale, import, export, have made, and have sold the\n+ * Software and the Larger Work(s), and to sublicense the foregoing rights on\n+ * either these or other terms.\n+ *\n+ * This license is subject to the following condition:\n+ *\n+ * The above copyright notice and either this complete permission notice or at a\n+ * minimum a reference to the UPL must be included in all copies or substantial\n+ * portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.graalvm.nativeimage.impl;\n+\n+public interface RuntimeSerializationSupport {\n+\n+    void register(Class<?>... classes);\n+\n+    void register(Class<?> clazz, Class<?> customTargetConstructorClazz);\n+\n+    void register(String className, String customTargetConstructorClassName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d05e4e2de823a7dbbcf811990c58d6d3db2203f"}, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d05e4e2de823a7dbbcf811990c58d6d3db2203f", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/2d05e4e2de823a7dbbcf811990c58d6d3db2203f", "committedDate": "2021-03-21T20:48:10Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "f20affb3329191d92bb6032b149f457edd720b19", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/f20affb3329191d92bb6032b149f457edd720b19", "committedDate": "2021-07-21T23:12:29Z", "message": "serialization registration from inside features"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIxMzIwMjQ1", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-721320245", "createdAt": "2021-08-03T15:06:52Z", "commit": {"oid": "f20affb3329191d92bb6032b149f457edd720b19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wM1QxNTowNjo1MlrOKKQ2WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wM1QxNTowNjo1MlrOKKQ2WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MTg1MDQ1Nw==", "bodyText": "Public API needs JavaDoc comment", "url": "https://github.com/oracle/graal/pull/3050#discussion_r681850457", "createdAt": "2021-08-03T15:06:52Z", "author": {"login": "olpaw"}, "path": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The Universal Permissive License (UPL), Version 1.0\n+ *\n+ * Subject to the condition set forth below, permission is hereby granted to any\n+ * person obtaining a copy of this software, associated documentation and/or\n+ * data (collectively the \"Software\"), free of charge and under any and all\n+ * copyright rights in the Software, and any and all patent rights owned or\n+ * freely licensable by each licensor hereunder covering either (i) the\n+ * unmodified Software as contributed to or provided by such licensor, or (ii)\n+ * the Larger Works (as defined below), to deal in both\n+ *\n+ * (a) the Software, and\n+ *\n+ * (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if\n+ * one is included with the Software each a \"Larger Work\" to which the Software\n+ * is contributed by such licensors),\n+ *\n+ * without restriction, including without limitation the rights to copy, create\n+ * derivative works of, display, perform, and distribute the Software and make,\n+ * use, sell, offer for sale, import, export, have made, and have sold the\n+ * Software and the Larger Work(s), and to sublicense the foregoing rights on\n+ * either these or other terms.\n+ *\n+ * This license is subject to the following condition:\n+ *\n+ * The above copyright notice and either this complete permission notice or at a\n+ * minimum a reference to the UPL must be included in all copies or substantial\n+ * portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.graalvm.nativeimage.hosted;\n+\n+import org.graalvm.nativeimage.ImageSingletons;\n+import org.graalvm.nativeimage.Platform;\n+import org.graalvm.nativeimage.Platforms;\n+import org.graalvm.nativeimage.impl.RuntimeSerializationSupport;\n+\n+@Platforms(Platform.HOSTED_ONLY.class)\n+public final class RuntimeSerialization {\n+\n+    public static void register(Class<?>... classes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20affb3329191d92bb6032b149f457edd720b19"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIxMzIwNDAx", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-721320401", "createdAt": "2021-08-03T15:07:01Z", "commit": {"oid": "f20affb3329191d92bb6032b149f457edd720b19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wM1QxNTowNzowMVrOKKQ2sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wM1QxNTowNzowMVrOKKQ2sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MTg1MDU0Nw==", "bodyText": "Public API needs JavaDoc comment", "url": "https://github.com/oracle/graal/pull/3050#discussion_r681850547", "createdAt": "2021-08-03T15:07:01Z", "author": {"login": "olpaw"}, "path": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/hosted/RuntimeSerialization.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The Universal Permissive License (UPL), Version 1.0\n+ *\n+ * Subject to the condition set forth below, permission is hereby granted to any\n+ * person obtaining a copy of this software, associated documentation and/or\n+ * data (collectively the \"Software\"), free of charge and under any and all\n+ * copyright rights in the Software, and any and all patent rights owned or\n+ * freely licensable by each licensor hereunder covering either (i) the\n+ * unmodified Software as contributed to or provided by such licensor, or (ii)\n+ * the Larger Works (as defined below), to deal in both\n+ *\n+ * (a) the Software, and\n+ *\n+ * (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if\n+ * one is included with the Software each a \"Larger Work\" to which the Software\n+ * is contributed by such licensors),\n+ *\n+ * without restriction, including without limitation the rights to copy, create\n+ * derivative works of, display, perform, and distribute the Software and make,\n+ * use, sell, offer for sale, import, export, have made, and have sold the\n+ * Software and the Larger Work(s), and to sublicense the foregoing rights on\n+ * either these or other terms.\n+ *\n+ * This license is subject to the following condition:\n+ *\n+ * The above copyright notice and either this complete permission notice or at a\n+ * minimum a reference to the UPL must be included in all copies or substantial\n+ * portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.graalvm.nativeimage.hosted;\n+\n+import org.graalvm.nativeimage.ImageSingletons;\n+import org.graalvm.nativeimage.Platform;\n+import org.graalvm.nativeimage.Platforms;\n+import org.graalvm.nativeimage.impl.RuntimeSerializationSupport;\n+\n+@Platforms(Platform.HOSTED_ONLY.class)\n+public final class RuntimeSerialization {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20affb3329191d92bb6032b149f457edd720b19"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIxMzY1NDYz", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-721365463", "createdAt": "2021-08-03T15:45:41Z", "commit": {"oid": "f20affb3329191d92bb6032b149f457edd720b19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wM1QxNTo0NTo0MlrOKKS8jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wM1QxNTo0NTo0MlrOKKS8jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MTg4NDgxMw==", "bodyText": "Nice refactoring!", "url": "https://github.com/oracle/graal/pull/3050#discussion_r681884813", "createdAt": "2021-08-03T15:45:42Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.svm.configure/src/com/oracle/svm/configure/config/SignatureUtil.java", "diffHunk": "@@ -69,4 +69,29 @@ public static String toInternalSignature(List<?> parameterTypes) {\n         }\n         return sb.append(')').toString();\n     }\n+\n+    public static String toInternalClassName(String qualifiedForNameString) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20affb3329191d92bb6032b149f457edd720b19"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIxMzY2OTA3", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-721366907", "createdAt": "2021-08-03T15:46:59Z", "commit": {"oid": "f20affb3329191d92bb6032b149f457edd720b19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wM1QxNTo0Njo1OVrOKKTA1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wM1QxNTo0Njo1OVrOKKTA1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MTg4NTkwOQ==", "bodyText": "2021", "url": "https://github.com/oracle/graal/pull/3050#discussion_r681885909", "createdAt": "2021-08-03T15:46:59Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.svm.reflect/src/com/oracle/svm/reflect/serialize/hosted/package-info.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20affb3329191d92bb6032b149f457edd720b19"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIxMzY3ODc3", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-721367877", "createdAt": "2021-08-03T15:47:51Z", "commit": {"oid": "f20affb3329191d92bb6032b149f457edd720b19"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f20affb3329191d92bb6032b149f457edd720b19", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/f20affb3329191d92bb6032b149f457edd720b19", "committedDate": "2021-07-21T23:12:29Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "87813992770104978d520d2ee5bd963bdf48ff44", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/87813992770104978d520d2ee5bd963bdf48ff44", "committedDate": "2021-08-03T19:49:54Z", "message": "serialization registration from inside features"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b212ebf24bc69b32459386ba42738c038e5ec9c", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/1b212ebf24bc69b32459386ba42738c038e5ec9c", "committedDate": "2021-08-04T22:49:37Z", "message": "Serialization registration from inside features"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87813992770104978d520d2ee5bd963bdf48ff44", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/87813992770104978d520d2ee5bd963bdf48ff44", "committedDate": "2021-08-03T19:49:54Z", "message": "serialization registration from inside features"}, "afterCommit": {"oid": "1b212ebf24bc69b32459386ba42738c038e5ec9c", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/1b212ebf24bc69b32459386ba42738c038e5ec9c", "committedDate": "2021-08-04T22:49:37Z", "message": "Serialization registration from inside features"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIzMTI1NTM1", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-723125535", "createdAt": "2021-08-05T09:17:22Z", "commit": {"oid": "1b212ebf24bc69b32459386ba42738c038e5ec9c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05f48f745f82629707c24fe02db970106c5beb90", "author": {"user": {"login": "olpaw", "name": "Paul Woegerer"}}, "url": "https://github.com/oracle/graal/commit/05f48f745f82629707c24fe02db970106c5beb90", "committedDate": "2021-08-05T09:37:18Z", "message": "Style fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIzMjQ5NDU3", "url": "https://github.com/oracle/graal/pull/3050#pullrequestreview-723249457", "createdAt": "2021-08-05T11:39:41Z", "commit": {"oid": "05f48f745f82629707c24fe02db970106c5beb90"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wNVQxMTozOTo0MVrOKLt1-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wNVQxMTo0ODoxNFrOKLuKHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MzM3NDA3Mw==", "bodyText": "Shouldn't this already match our hosted-only package filter?", "url": "https://github.com/oracle/graal/pull/3050#discussion_r683374073", "createdAt": "2021-08-05T11:39:41Z", "author": {"login": "peter-hofer"}, "path": "substratevm/src/com.oracle.svm.reflect/src/com/oracle/svm/reflect/serialize/hosted/package-info.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright (c) 2021, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n+@Platforms(Platform.HOSTED_ONLY.class)\n+package com.oracle.svm.reflect.serialize.hosted;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05f48f745f82629707c24fe02db970106c5beb90"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MzM3NTIyMg==", "bodyText": "It's dangerous to have a test-specific feature as an @AutomaticFeature like this because it might be enabled for other tests or on an even broader scope. Please use @RequiredFeatures.", "url": "https://github.com/oracle/graal/pull/3050#discussion_r683375222", "createdAt": "2021-08-05T11:41:34Z", "author": {"login": "peter-hofer"}, "path": "substratevm/src/com.oracle.svm.test/src/com/oracle/svm/test/SerializationRegistrationTest.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Copyright (c) 2021, 2021, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+package com.oracle.svm.test;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import com.oracle.svm.core.annotate.AutomaticFeature;\n+import com.oracle.svm.core.util.VMError;\n+import org.graalvm.nativeimage.hosted.Feature;\n+import org.graalvm.nativeimage.hosted.RuntimeSerialization;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class SerializationRegistrationTest {\n+\n+    public static class SerializableTestClass implements Serializable {\n+        private static final long serialVersionUID = 1L;\n+        private final String content;\n+\n+        public SerializableTestClass(String content) {\n+            this.content = content;\n+        }\n+\n+        @Override\n+        public boolean equals(Object o) {\n+            if (this == o) {\n+                return true;\n+            }\n+            if (o == null || getClass() != o.getClass()) {\n+                return false;\n+            }\n+            SerializableTestClass that = (SerializableTestClass) o;\n+            return Objects.equals(content, that.content);\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return Objects.hash(content);\n+        }\n+    }\n+\n+    private static final byte[] serializedObject;\n+    private static final List<SerializableTestClass> list;\n+\n+    static {\n+        list = new ArrayList<>();\n+        list.add(new SerializableTestClass(\"Dummy\"));\n+        list.add(new SerializableTestClass(\"Test\"));\n+\n+        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n+        try {\n+            ObjectOutputStream objectOutputStream = new ObjectOutputStream(byteArrayOutputStream);\n+            objectOutputStream.writeObject(list);\n+            objectOutputStream.flush();\n+        } catch (IOException e) {\n+            VMError.shouldNotReachHere(e);\n+        }\n+\n+        serializedObject = byteArrayOutputStream.toByteArray();\n+    }\n+\n+    @Test\n+    public void testSerializationRegistration() throws IOException, ClassNotFoundException {\n+        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(serializedObject);\n+        ObjectInputStream objectInputStream = new ObjectInputStream(byteArrayInputStream);\n+        Object deserializedObject = objectInputStream.readObject();\n+        Assert.assertEquals(list, deserializedObject);\n+    }\n+}\n+\n+@AutomaticFeature", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05f48f745f82629707c24fe02db970106c5beb90"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MzM3OTIzMQ==", "bodyText": "If these are not exposed through RuntimeSerialization, we should move them to an internal subinterface.", "url": "https://github.com/oracle/graal/pull/3050#discussion_r683379231", "createdAt": "2021-08-05T11:48:14Z", "author": {"login": "peter-hofer"}, "path": "sdk/src/org.graalvm.nativeimage/src/org/graalvm/nativeimage/impl/RuntimeSerializationSupport.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright (c) 2021, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The Universal Permissive License (UPL), Version 1.0\n+ *\n+ * Subject to the condition set forth below, permission is hereby granted to any\n+ * person obtaining a copy of this software, associated documentation and/or\n+ * data (collectively the \"Software\"), free of charge and under any and all\n+ * copyright rights in the Software, and any and all patent rights owned or\n+ * freely licensable by each licensor hereunder covering either (i) the\n+ * unmodified Software as contributed to or provided by such licensor, or (ii)\n+ * the Larger Works (as defined below), to deal in both\n+ *\n+ * (a) the Software, and\n+ *\n+ * (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if\n+ * one is included with the Software each a \"Larger Work\" to which the Software\n+ * is contributed by such licensors),\n+ *\n+ * without restriction, including without limitation the rights to copy, create\n+ * derivative works of, display, perform, and distribute the Software and make,\n+ * use, sell, offer for sale, import, export, have made, and have sold the\n+ * Software and the Larger Work(s), and to sublicense the foregoing rights on\n+ * either these or other terms.\n+ *\n+ * This license is subject to the following condition:\n+ *\n+ * The above copyright notice and either this complete permission notice or at a\n+ * minimum a reference to the UPL must be included in all copies or substantial\n+ * portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package org.graalvm.nativeimage.impl;\n+\n+public interface RuntimeSerializationSupport {\n+\n+    void register(Class<?>... classes);\n+\n+    void registerWithTargetConstructorClass(Class<?> clazz, Class<?> customTargetConstructorClazz);\n+\n+    void registerWithTargetConstructorClass(String className, String customTargetConstructorClassName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05f48f745f82629707c24fe02db970106c5beb90"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "091c0e14de155f6b78303ebfd24ae2c4e3a09401", "author": {"user": {"login": "olpaw", "name": "Paul Woegerer"}}, "url": "https://github.com/oracle/graal/commit/091c0e14de155f6b78303ebfd24ae2c4e3a09401", "committedDate": "2021-08-05T12:28:19Z", "message": "Add missing module export"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e12b11f9b01645fdde5bfdc8a1c829ba224dd35", "author": {"user": {"login": "kkriske", "name": "Kristof"}}, "url": "https://github.com/oracle/graal/commit/8e12b11f9b01645fdde5bfdc8a1c829ba224dd35", "committedDate": "2021-08-05T18:35:19Z", "message": "Add 'registerWithTargetConstructorClass' call to public API, fix NPE in SerializationConfigurationType sorting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12fadf14e83d53294f494e0259623b6dd0bcb3e1", "author": {"user": {"login": "olpaw", "name": "Paul Woegerer"}}, "url": "https://github.com/oracle/graal/commit/12fadf14e83d53294f494e0259623b6dd0bcb3e1", "committedDate": "2021-08-09T08:07:10Z", "message": "Improve API method documentation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 985, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}