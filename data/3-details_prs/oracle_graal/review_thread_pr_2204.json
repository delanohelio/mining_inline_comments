{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMzQwNDg4", "number": 2204, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzowNToyMlrODk2UwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzowNToyMlrODk2UwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTY1Mzc3OnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/JavaMainWrapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzowNToyMlrOFxZ4ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTo0NTo1OFrOFxmUCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM0ODYxOA==", "bodyText": "I don't like catching exceptions as normal control flow (and on Windows this is normal control flow). Better would be to make the check method return a boolean and in the callers either return -1 or throw an exception.", "url": "https://github.com/oracle/graal/pull/2204#discussion_r387348618", "createdAt": "2020-03-03T23:05:22Z", "author": {"login": "christianwimmer"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/JavaMainWrapper.java", "diffHunk": "@@ -200,8 +209,12 @@ public static int run(int paramArgc, CCharPointerPointer paramArgv) {\n      * @return maximum length of C chars that can be stored in the program argument part of the\n      *         contiguous memory block without writing into the environment variables part.\n      */\n-    public static long getCRuntimeArgumentBlockLength() {\n-        VMError.guarantee(argv.notEqual(WordFactory.zero()) && argc > 0, \"Requires JavaMainWrapper.run(int, CCharPointerPointer) entry point!\");\n+    public static int getCRuntimeArgumentBlockLength() {\n+        try {\n+            checkArgumentBlockSupported();\n+        } catch (UnsupportedOperationException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8564e018069a6034c2d758f06efbe77e095bf5cb"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1MjI2Nw==", "bodyText": "Will do that in the follow up PR (where I remove the CompilerCommandPlugin stuff). The reason I didn't do that was to keep separate UnsupportedOperationException message strings (\"Argument vector not accessible (called from shared library image?)\" vs. \"Argument vector manipulation unsupported for platform \" + ...).", "url": "https://github.com/oracle/graal/pull/2204#discussion_r387552267", "createdAt": "2020-03-04T09:45:58Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/JavaMainWrapper.java", "diffHunk": "@@ -200,8 +209,12 @@ public static int run(int paramArgc, CCharPointerPointer paramArgv) {\n      * @return maximum length of C chars that can be stored in the program argument part of the\n      *         contiguous memory block without writing into the environment variables part.\n      */\n-    public static long getCRuntimeArgumentBlockLength() {\n-        VMError.guarantee(argv.notEqual(WordFactory.zero()) && argc > 0, \"Requires JavaMainWrapper.run(int, CCharPointerPointer) entry point!\");\n+    public static int getCRuntimeArgumentBlockLength() {\n+        try {\n+            checkArgumentBlockSupported();\n+        } catch (UnsupportedOperationException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM0ODYxOA=="}, "originalCommit": {"oid": "8564e018069a6034c2d758f06efbe77e095bf5cb"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 831, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}