{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NjYzMjQy", "number": 2603, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNTo1Mzo1MlrOEICBUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNTo1Mzo1MlrOEICBUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODU3MTY5OnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNTo1Mzo1MlrOGnvzCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNTo1Mzo1MlrOGnvzCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMzMDc2Mg==", "bodyText": "The indirection here allows us to have EE do other things for -H:GenerateDebugInfo=2", "url": "https://github.com/oracle/graal/pull/2603#discussion_r444330762", "createdAt": "2020-06-23T15:53:52Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java", "diffHunk": "@@ -464,16 +469,22 @@ public static int codeAlignment() {\n     @Option(help = \"Populate reference queues in a separate thread rather than after a garbage collection.\", type = OptionType.Expert) //\n     public static final HostedOptionKey<Boolean> UseReferenceHandlerThread = new HostedOptionKey<>(false);\n \n+    @APIOption(name = \"-g\", fixedValue = \"2\", customHelp = \"generate debugging information\")//\n     @Option(help = \"Insert debug info into the generated native image or library\")//\n     public static final HostedOptionKey<Integer> GenerateDebugInfo = new HostedOptionKey<Integer>(0) {\n         @Override\n         protected void onValueUpdate(EconomicMap<OptionKey<?>, Object> values, Integer oldValue, Integer newValue) {\n-            // force update of TrackNodeSourcePosition\n-            if (newValue > 0 && !Boolean.TRUE.equals(values.get(TrackNodeSourcePosition))) {\n-                TrackNodeSourcePosition.update(values, true);\n-            }\n+            debugInfoValueUpdateHandler.onValueUpdate(values, oldValue, newValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9bf83d6234f6c8547dcad8558a82af47cb0f4dc"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 775, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}