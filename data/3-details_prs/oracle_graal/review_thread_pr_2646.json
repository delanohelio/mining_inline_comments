{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNTA5ODA3", "number": 2646, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzoyMDowM1rOEVaPlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDo0Mzo0NVrOEVxpEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODg1NTI1OnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/TimeSubstitutions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzoyMDowM1rOG8JVGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzoyMDowM1rOG8JVGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyMDYwMw==", "bodyText": "LGTM but there are some styling issues and it's missing the copyright header.\n\n@galderz please take care of the styling issues. Ensure that mx eclipseformat and mx checkstyle pass without issues.", "url": "https://github.com/oracle/graal/pull/2646#discussion_r465720603", "createdAt": "2020-08-05T13:20:03Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/TimeSubstitutions.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.oracle.svm.core.jdk;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "545232502cefa9807a960057836138c1d4e21d1e"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTg3ODg1OnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/TimeSubstitutions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzoyNToxNFrOG8Tcsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzoyNToxNFrOG8Tcsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg4NjM4Ng==", "bodyText": "For all new code we are switching to the model where each Target_... class is in its own .java file. In your case this avoids the awkward class TimeSubstitutions.", "url": "https://github.com/oracle/graal/pull/2646#discussion_r465886386", "createdAt": "2020-08-05T17:25:14Z", "author": {"login": "christianwimmer"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/TimeSubstitutions.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.oracle.svm.core.jdk;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+import java.time.zone.ZoneOffsetTransition;\n+import java.time.zone.ZoneRules;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+\n+@TargetClass(ZoneRules.class)\n+final class Target_java_time_zone_ZoneRules {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "545232502cefa9807a960057836138c1d4e21d1e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjY4ODgyOnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_time_zone_ZoneRules.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDo0Mzo0NVrOG8uPVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMjowNDowMFrOG8wjXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNTMzNA==", "bodyText": "I think the following is a bit more readable :)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @SuppressWarnings(\"unused\") @Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) private transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;\n          \n          \n            \n                @SuppressWarnings(\"unused\") //\n          \n          \n            \n                @Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) //\n          \n          \n            \n                private transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;", "url": "https://github.com/oracle/graal/pull/2646#discussion_r466325334", "createdAt": "2020-08-06T10:43:45Z", "author": {"login": "zakkak"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_time_zone_ZoneRules.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2020, 2020, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+package com.oracle.svm.core.jdk;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+import java.time.zone.ZoneOffsetTransition;\n+import java.time.zone.ZoneRules;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+\n+@TargetClass(ZoneRules.class)\n+final class Target_java_time_zone_ZoneRules {\n+\n+    @SuppressWarnings(\"unused\") @Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) private transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cd2db6d335b0dfab539a03e4b21e471be947f30"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMzMjQ2MQ==", "bodyText": "@zakkak Blame it on mx eclipseformat...", "url": "https://github.com/oracle/graal/pull/2646#discussion_r466332461", "createdAt": "2020-08-06T10:58:24Z", "author": {"login": "galderz"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_time_zone_ZoneRules.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2020, 2020, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+package com.oracle.svm.core.jdk;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+import java.time.zone.ZoneOffsetTransition;\n+import java.time.zone.ZoneRules;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+\n+@TargetClass(ZoneRules.class)\n+final class Target_java_time_zone_ZoneRules {\n+\n+    @SuppressWarnings(\"unused\") @Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) private transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNTMzNA=="}, "originalCommit": {"oid": "7cd2db6d335b0dfab539a03e4b21e471be947f30"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMzNTU0Mg==", "bodyText": "I guessed so. Note though that eclipseformat and checkstyle should be happy (didn't check it but I see other classes following this style) with the above change.", "url": "https://github.com/oracle/graal/pull/2646#discussion_r466335542", "createdAt": "2020-08-06T11:04:45Z", "author": {"login": "zakkak"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_time_zone_ZoneRules.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2020, 2020, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+package com.oracle.svm.core.jdk;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+import java.time.zone.ZoneOffsetTransition;\n+import java.time.zone.ZoneRules;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+\n+@TargetClass(ZoneRules.class)\n+final class Target_java_time_zone_ZoneRules {\n+\n+    @SuppressWarnings(\"unused\") @Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) private transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNTMzNA=="}, "originalCommit": {"oid": "7cd2db6d335b0dfab539a03e4b21e471be947f30"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMzNjgxMg==", "bodyText": "@galderz you can make mx eclipseformat happy with the following trick\n@SuppressWarnings(\"unused\") //\n@Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) //\nprivate transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;\n\nUse git grep '  \\+//$' to see many examples in our sourcebase.", "url": "https://github.com/oracle/graal/pull/2646#discussion_r466336812", "createdAt": "2020-08-06T11:07:38Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_time_zone_ZoneRules.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2020, 2020, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+package com.oracle.svm.core.jdk;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+import java.time.zone.ZoneOffsetTransition;\n+import java.time.zone.ZoneRules;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+\n+@TargetClass(ZoneRules.class)\n+final class Target_java_time_zone_ZoneRules {\n+\n+    @SuppressWarnings(\"unused\") @Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) private transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNTMzNA=="}, "originalCommit": {"oid": "7cd2db6d335b0dfab539a03e4b21e471be947f30"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM2MzIyOA==", "bodyText": "Fixed and pushed.", "url": "https://github.com/oracle/graal/pull/2646#discussion_r466363228", "createdAt": "2020-08-06T12:04:00Z", "author": {"login": "galderz"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_time_zone_ZoneRules.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2020, 2020, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+package com.oracle.svm.core.jdk;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+import java.time.zone.ZoneOffsetTransition;\n+import java.time.zone.ZoneRules;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+\n+@TargetClass(ZoneRules.class)\n+final class Target_java_time_zone_ZoneRules {\n+\n+    @SuppressWarnings(\"unused\") @Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) private transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNTMzNA=="}, "originalCommit": {"oid": "7cd2db6d335b0dfab539a03e4b21e471be947f30"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 782, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}