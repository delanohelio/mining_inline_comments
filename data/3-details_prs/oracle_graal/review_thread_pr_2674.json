{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MDYzMTE0", "number": 2674, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMTozNDoxMlrOEQlQVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNjowMzo0MVrOEUqh2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1ODIzMDYzOnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMTozNDoxMlrOG0z4Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDoxOToyMVrOG06QZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyOTA5MQ==", "bodyText": "can queryCodeDir be null ?\nBetter to use isEmpty()", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458029091", "createdAt": "2020-07-21T11:34:12Z", "author": {"login": "johanvos"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java", "diffHunk": "@@ -71,6 +73,12 @@ public CAnnotationProcessor(NativeLibraries nativeLibs, NativeCodeContext codeCt\n         }\n         this.compilerInvoker = ImageSingletons.lookup(CCompilerInvoker.class);\n         this.tempDirectory = compilerInvoker.tempDirectory;\n+        this.queryCodeDirectory = compilerInvoker.tempDirectory;\n+\n+        String queryCodeDir = CAnnotationProcessorCache.Options.CAPQueryCodeDir.getValue();\n+        if (!queryCodeDir.equals(\"\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a97cf1f4ae35dba6e91f75821a3dfe33f9f36034"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEzMzYwNA==", "bodyText": "Good idea, changed!", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458133604", "createdAt": "2020-07-21T14:19:21Z", "author": {"login": "lazar-mitrovic"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java", "diffHunk": "@@ -71,6 +73,12 @@ public CAnnotationProcessor(NativeLibraries nativeLibs, NativeCodeContext codeCt\n         }\n         this.compilerInvoker = ImageSingletons.lookup(CCompilerInvoker.class);\n         this.tempDirectory = compilerInvoker.tempDirectory;\n+        this.queryCodeDirectory = compilerInvoker.tempDirectory;\n+\n+        String queryCodeDir = CAnnotationProcessorCache.Options.CAPQueryCodeDir.getValue();\n+        if (!queryCodeDir.equals(\"\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyOTA5MQ=="}, "originalCommit": {"oid": "a97cf1f4ae35dba6e91f75821a3dfe33f9f36034"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTA1MDUxOnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDo1MDo1NFrOG07xnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDozNzo1NFrOG1I3jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1ODQ5Mg==", "bodyText": "We could check if it has been set and fail if the user specified a bad path:\nif (CAnnotationProcessorCache.Options.CAPQueryCodeDir.hasBeenSet()) {\n    String queryCodeDir = CAnnotationProcessorCache.Options.CAPQueryCodeDir.getValue();\n    if (!File.exists(queryCodeDir)) {\n        // create the directory\n    } else if (!File.isDirectory(queryCodeDir)) {\n        // we can throw UserError.abort here\n    }\n    this.queryCodeDirectory = queryCodeDir;\n}", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458158492", "createdAt": "2020-07-21T14:50:54Z", "author": {"login": "gradinac"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java", "diffHunk": "@@ -71,6 +73,12 @@ public CAnnotationProcessor(NativeLibraries nativeLibs, NativeCodeContext codeCt\n         }\n         this.compilerInvoker = ImageSingletons.lookup(CCompilerInvoker.class);\n         this.tempDirectory = compilerInvoker.tempDirectory;\n+        this.queryCodeDirectory = compilerInvoker.tempDirectory;\n+\n+        String queryCodeDir = CAnnotationProcessorCache.Options.CAPQueryCodeDir.getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2ba0c3f890d2171cb4eb03f1d2e5b6bb6c5db9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1OTA3MQ==", "bodyText": "This is already checked here :)", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458359071", "createdAt": "2020-07-21T20:11:34Z", "author": {"login": "lazar-mitrovic"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java", "diffHunk": "@@ -71,6 +73,12 @@ public CAnnotationProcessor(NativeLibraries nativeLibs, NativeCodeContext codeCt\n         }\n         this.compilerInvoker = ImageSingletons.lookup(CCompilerInvoker.class);\n         this.tempDirectory = compilerInvoker.tempDirectory;\n+        this.queryCodeDirectory = compilerInvoker.tempDirectory;\n+\n+        String queryCodeDir = CAnnotationProcessorCache.Options.CAPQueryCodeDir.getValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1ODQ5Mg=="}, "originalCommit": {"oid": "9c2ba0c3f890d2171cb4eb03f1d2e5b6bb6c5db9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM3MzAwNw==", "bodyText": "Ah, my bad! :) That's a good point - can we then turn it into:\nif (CAnnotationProcessorCache.Options.CAPQueryCodeDir.hasBeenSet()) {\n    this.queryCodeDirectory = CAnnotationProcessorCache.Options.CAPQueryCodeDir.getValue();\n} else {\n    this.queryCodeDirectory = compilerInvoker.tempDirectory;\n}", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458373007", "createdAt": "2020-07-21T20:37:54Z", "author": {"login": "gradinac"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java", "diffHunk": "@@ -71,6 +73,12 @@ public CAnnotationProcessor(NativeLibraries nativeLibs, NativeCodeContext codeCt\n         }\n         this.compilerInvoker = ImageSingletons.lookup(CCompilerInvoker.class);\n         this.tempDirectory = compilerInvoker.tempDirectory;\n+        this.queryCodeDirectory = compilerInvoker.tempDirectory;\n+\n+        String queryCodeDir = CAnnotationProcessorCache.Options.CAPQueryCodeDir.getValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1ODQ5Mg=="}, "originalCommit": {"oid": "9c2ba0c3f890d2171cb4eb03f1d2e5b6bb6c5db9"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTUxOTMzOnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjozNToyMlrOG1AZ7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDoxODowOVrOG1IOlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIzNDM0OQ==", "bodyText": "mx eclipseformat can sometimes bug up :) Put the comment above this line between /* and */ - I think that wouldn't cause it to break into 3 lines", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458234349", "createdAt": "2020-07-21T16:35:22Z", "author": {"login": "gradinac"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java", "diffHunk": "@@ -87,13 +95,19 @@ public NativeCodeInfo process(CAnnotationProcessorCache cache) {\n              * Generate C source file (the \"Query\") that will produce the information needed (e.g.,\n              * size of struct/union and offsets to their fields, value of enum/macros etc.).\n              */\n-            writer = new QueryCodeWriter(tempDirectory);\n+            writer = new QueryCodeWriter(queryCodeDirectory);\n             Path queryFile = writer.write(codeInfo);\n             if (nativeLibs.getErrors().size() > 0) {\n                 return codeInfo;\n             }\n             assert Files.exists(queryFile);\n \n+            if (CAnnotationProcessorCache.Options.DontRunCAPQueryCode.getValue()) { // Only output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2ba0c3f890d2171cb4eb03f1d2e5b6bb6c5db9"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2MjUxNw==", "bodyText": "Should be fixed now :)", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458362517", "createdAt": "2020-07-21T20:18:09Z", "author": {"login": "lazar-mitrovic"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java", "diffHunk": "@@ -87,13 +95,19 @@ public NativeCodeInfo process(CAnnotationProcessorCache cache) {\n              * Generate C source file (the \"Query\") that will produce the information needed (e.g.,\n              * size of struct/union and offsets to their fields, value of enum/macros etc.).\n              */\n-            writer = new QueryCodeWriter(tempDirectory);\n+            writer = new QueryCodeWriter(queryCodeDirectory);\n             Path queryFile = writer.write(codeInfo);\n             if (nativeLibs.getErrors().size() > 0) {\n                 return codeInfo;\n             }\n             assert Files.exists(queryFile);\n \n+            if (CAnnotationProcessorCache.Options.DontRunCAPQueryCode.getValue()) { // Only output", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIzNDM0OQ=="}, "originalCommit": {"oid": "9c2ba0c3f890d2171cb4eb03f1d2e5b6bb6c5db9"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTUyNDA4OnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjozNjozN1rOG1Ac4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDoxODoyMFrOG1IO9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIzNTEwNA==", "bodyText": "We can also check if CAPQueryCodeDir is set here with Options.CAPQueryCodeDir.hasBeenSet()", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458235104", "createdAt": "2020-07-21T16:36:37Z", "author": {"login": "gradinac"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java", "diffHunk": "@@ -102,6 +109,20 @@ public CAnnotationProcessorCache() {\n                 clearCache();\n             }\n         }\n+\n+        if (Options.CAPQueryCodeDir.getValue() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2ba0c3f890d2171cb4eb03f1d2e5b6bb6c5db9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2MjYxNQ==", "bodyText": "Done", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458362615", "createdAt": "2020-07-21T20:18:20Z", "author": {"login": "lazar-mitrovic"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java", "diffHunk": "@@ -102,6 +109,20 @@ public CAnnotationProcessorCache() {\n                 clearCache();\n             }\n         }\n+\n+        if (Options.CAPQueryCodeDir.getValue() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIzNTEwNA=="}, "originalCommit": {"oid": "9c2ba0c3f890d2171cb4eb03f1d2e5b6bb6c5db9"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTUyNjM0OnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/codegen/QueryCodeWriter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjozNzoxM1rOG1AeZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjozNzoxM1rOG1AeZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIzNTQ5Mg==", "bodyText": "Neat!", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458235492", "createdAt": "2020-07-21T16:37:13Z", "author": {"login": "gradinac"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/codegen/QueryCodeWriter.java", "diffHunk": "@@ -123,13 +123,21 @@ protected void visitNativeCodeInfo(NativeCodeInfo nativeCodeInfo) {\n         writer.appendln(\"#define IS_CONST_UNSIGNED(a) (a>=0 ? 1 : 0)\");\n \n         /* Write the main function with all the outputs for the children. */\n+        String functionName = nativeCodeInfo.getName().replaceAll(\"\\\\W\", \"_\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2ba0c3f890d2171cb4eb03f1d2e5b6bb6c5db9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDkxOTM3OnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNTozMjozMlrOG6-Rug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMToyOTozM1rOG7yLRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5MDkzOA==", "bodyText": "Please call this option ExitAfterQueryCodeGeneration", "url": "https://github.com/oracle/graal/pull/2674#discussion_r464490938", "createdAt": "2020-08-03T15:32:32Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java", "diffHunk": "@@ -76,9 +76,16 @@\n \n         @Option(help = \"Exit image generation after C Annotation Processor Cache creation.\")//\n         public static final HostedOptionKey<Boolean> ExitAfterCAPCache = new HostedOptionKey<>(false);\n+\n+        @Option(help = \"Output query code for target platform without executing it\")//\n+        public static final HostedOptionKey<Boolean> DontRunCAPQueryCode = new HostedOptionKey<>(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9478272484f173be8de5b29cc5c73ccc24ac9e3b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MTI1Mg==", "bodyText": "Done", "url": "https://github.com/oracle/graal/pull/2674#discussion_r465341252", "createdAt": "2020-08-04T21:29:33Z", "author": {"login": "lazar-mitrovic"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java", "diffHunk": "@@ -76,9 +76,16 @@\n \n         @Option(help = \"Exit image generation after C Annotation Processor Cache creation.\")//\n         public static final HostedOptionKey<Boolean> ExitAfterCAPCache = new HostedOptionKey<>(false);\n+\n+        @Option(help = \"Output query code for target platform without executing it\")//\n+        public static final HostedOptionKey<Boolean> DontRunCAPQueryCode = new HostedOptionKey<>(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5MDkzOA=="}, "originalCommit": {"oid": "9478272484f173be8de5b29cc5c73ccc24ac9e3b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDkzMTIyOnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNTozNTo0MFrOG6-Y6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMToyOTo0NlrOG7yLoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5Mjc3OA==", "bodyText": "Please move this above\nif (CAnnotationProcessorCache.Options.ExitAfterCAPCache.getValue()) {", "url": "https://github.com/oracle/graal/pull/2674#discussion_r464492778", "createdAt": "2020-08-03T15:35:40Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java", "diffHunk": "@@ -1042,6 +1044,9 @@ private NativeLibraries setupNativeLibraries(String imageName, ConstantReflectio\n             if (CAnnotationProcessorCache.Options.ExitAfterCAPCache.getValue()) {\n                 throw new InterruptImageBuilding(\"Exiting image generation because of \" + SubstrateOptionsParser.commandArgument(CAnnotationProcessorCache.Options.ExitAfterCAPCache, \"+\"));\n             }\n+            if (CAnnotationProcessorCache.Options.DontRunCAPQueryCode.getValue()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9478272484f173be8de5b29cc5c73ccc24ac9e3b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MTM0NA==", "bodyText": "Done", "url": "https://github.com/oracle/graal/pull/2674#discussion_r465341344", "createdAt": "2020-08-04T21:29:46Z", "author": {"login": "lazar-mitrovic"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java", "diffHunk": "@@ -1042,6 +1044,9 @@ private NativeLibraries setupNativeLibraries(String imageName, ConstantReflectio\n             if (CAnnotationProcessorCache.Options.ExitAfterCAPCache.getValue()) {\n                 throw new InterruptImageBuilding(\"Exiting image generation because of \" + SubstrateOptionsParser.commandArgument(CAnnotationProcessorCache.Options.ExitAfterCAPCache, \"+\"));\n             }\n+            if (CAnnotationProcessorCache.Options.DontRunCAPQueryCode.getValue()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5Mjc3OA=="}, "originalCommit": {"oid": "9478272484f173be8de5b29cc5c73ccc24ac9e3b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDk5MzgyOnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNTo1MjowN1rOG6-_sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNTo1MjowN1rOG6-_sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUwMjcwNQ==", "bodyText": "Maybe\nboolean withoutCompilerInvoker = ExitAfterQueryCodeGeneration.getValue() ||\n                                 (UseCAPCache.getValue() && ExitAfterRelocatableImageWrite.getValue());\nif (!withoutCompilerInvoker) {\n    ...\nfor better readability.", "url": "https://github.com/oracle/graal/pull/2674#discussion_r464502705", "createdAt": "2020-08-03T15:52:07Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java", "diffHunk": "@@ -861,7 +861,9 @@ private void setupNativeImage(String imageName, OptionValues options, Map<Method\n \n                 if (!(NativeImageOptions.ExitAfterRelocatableImageWrite.getValue() && CAnnotationProcessorCache.Options.UseCAPCache.getValue())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9478272484f173be8de5b29cc5c73ccc24ac9e3b"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTAwNDUwOnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNTo1NDo1MlrOG6_GRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTozMDowN1rOG7yMTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUwNDM4OA==", "bodyText": "If you don't run the compiler driver because you exit after right QueryCode generation you should not even need to register the singleton. See https://github.com/oracle/graal/pull/2674/files#r464502705", "url": "https://github.com/oracle/graal/pull/2674#discussion_r464504388", "createdAt": "2020-08-03T15:54:52Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java", "diffHunk": "@@ -861,7 +861,9 @@ private void setupNativeImage(String imageName, OptionValues options, Map<Method\n \n                 if (!(NativeImageOptions.ExitAfterRelocatableImageWrite.getValue() && CAnnotationProcessorCache.Options.UseCAPCache.getValue())) {\n                     CCompilerInvoker compilerInvoker = CCompilerInvoker.create(ImageSingletons.lookup(TemporaryBuildDirectoryProvider.class).getTemporaryBuildDirectory());\n-                    compilerInvoker.verifyCompiler();\n+                    if (!CAnnotationProcessorCache.Options.DontRunCAPQueryCode.getValue()) {\n+                        compilerInvoker.verifyCompiler();\n+                    }\n                     ImageSingletons.add(CCompilerInvoker.class, compilerInvoker);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9478272484f173be8de5b29cc5c73ccc24ac9e3b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MTUxOA==", "bodyText": "Changed", "url": "https://github.com/oracle/graal/pull/2674#discussion_r465341518", "createdAt": "2020-08-04T21:30:07Z", "author": {"login": "lazar-mitrovic"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java", "diffHunk": "@@ -861,7 +861,9 @@ private void setupNativeImage(String imageName, OptionValues options, Map<Method\n \n                 if (!(NativeImageOptions.ExitAfterRelocatableImageWrite.getValue() && CAnnotationProcessorCache.Options.UseCAPCache.getValue())) {\n                     CCompilerInvoker compilerInvoker = CCompilerInvoker.create(ImageSingletons.lookup(TemporaryBuildDirectoryProvider.class).getTemporaryBuildDirectory());\n-                    compilerInvoker.verifyCompiler();\n+                    if (!CAnnotationProcessorCache.Options.DontRunCAPQueryCode.getValue()) {\n+                        compilerInvoker.verifyCompiler();\n+                    }\n                     ImageSingletons.add(CCompilerInvoker.class, compilerInvoker);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUwNDM4OA=="}, "originalCommit": {"oid": "9478272484f173be8de5b29cc5c73ccc24ac9e3b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTAzNzY5OnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNjowMzo0MVrOG6_aqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTozMDoyMVrOG7yMuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUwOTYwOQ==", "bodyText": "I'd call this QueryCodeDir to better differentiate it from the regular CAP.... usecases (cached NativeCodeInfo result files).", "url": "https://github.com/oracle/graal/pull/2674#discussion_r464509609", "createdAt": "2020-08-03T16:03:41Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java", "diffHunk": "@@ -76,9 +76,16 @@\n \n         @Option(help = \"Exit image generation after C Annotation Processor Cache creation.\")//\n         public static final HostedOptionKey<Boolean> ExitAfterCAPCache = new HostedOptionKey<>(false);\n+\n+        @Option(help = \"Output query code for target platform without executing it\")//\n+        public static final HostedOptionKey<Boolean> DontRunCAPQueryCode = new HostedOptionKey<>(false);\n+\n+        @Option(help = \"Directory where query code for target platform should be output\")//\n+        public static final HostedOptionKey<String> CAPQueryCodeDir = new HostedOptionKey<>(\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9478272484f173be8de5b29cc5c73ccc24ac9e3b"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MTYyNA==", "bodyText": "Changed", "url": "https://github.com/oracle/graal/pull/2674#discussion_r465341624", "createdAt": "2020-08-04T21:30:21Z", "author": {"login": "lazar-mitrovic"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java", "diffHunk": "@@ -76,9 +76,16 @@\n \n         @Option(help = \"Exit image generation after C Annotation Processor Cache creation.\")//\n         public static final HostedOptionKey<Boolean> ExitAfterCAPCache = new HostedOptionKey<>(false);\n+\n+        @Option(help = \"Output query code for target platform without executing it\")//\n+        public static final HostedOptionKey<Boolean> DontRunCAPQueryCode = new HostedOptionKey<>(false);\n+\n+        @Option(help = \"Directory where query code for target platform should be output\")//\n+        public static final HostedOptionKey<String> CAPQueryCodeDir = new HostedOptionKey<>(\"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUwOTYwOQ=="}, "originalCommit": {"oid": "9478272484f173be8de5b29cc5c73ccc24ac9e3b"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 795, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}