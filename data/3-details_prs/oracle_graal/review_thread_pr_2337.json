{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxOTcwMTkz", "number": 2337, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMTo0MzozOFrODw8K6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjowNzowMVrODxnSgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNjQ0MDcyOnYy", "diffSide": "RIGHT", "path": "sdk/mx.sdk/mx_sdk_vm.py", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMTo0MzozOFrOGEMmEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMTo0NzoxNlrOGFK1GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1Mzg0MQ==", "bodyText": "I don't think -XX:ThreadPriorityPolicy is related to -XX:+EnableJVMCIProduct is it?", "url": "https://github.com/oracle/graal/pull/2337#discussion_r407053841", "createdAt": "2020-04-11T11:43:38Z", "author": {"login": "dougxc"}, "path": "sdk/mx.sdk/mx_sdk_vm.py", "diffHunk": "@@ -649,19 +661,22 @@ def jlink_new_jdk(jdk, dst_jdk_dir, module_dists,\n         jlink.append('--keep-packaged-modules=' + join(dst_jdk_dir, 'jmods'))\n \n         if jdk_has_new_jlink_options(jdk):\n-            if jdk_omits_warning_for_jlink_set_ThreadPriorityPolicy(jdk):\n-                thread_priority_policy_option = ' -XX:ThreadPriorityPolicy=1'\n-            else:\n-                mx.logv('[Creating JDK without -XX:ThreadPriorityPolicy=1]')\n-                thread_priority_policy_option = ''\n-\n-            if any((m.name == 'jdk.internal.vm.compiler' for m in modules)):\n-                jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+            if jdk_supports_enablejvmciproduct(jdk):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "623e6733604ea8b364704fd1f1583721057cceaf"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA1NDg3Nw==", "bodyText": "No, but isn't -XX:ThreadPriorityPolicy=1 intended for libgraal usage? If so, isn't EnableJVMCIProduct enabling libgraal. That was my thinking anyway. Happy to change that, though.", "url": "https://github.com/oracle/graal/pull/2337#discussion_r408054877", "createdAt": "2020-04-14T11:10:18Z", "author": {"login": "jerboaa"}, "path": "sdk/mx.sdk/mx_sdk_vm.py", "diffHunk": "@@ -649,19 +661,22 @@ def jlink_new_jdk(jdk, dst_jdk_dir, module_dists,\n         jlink.append('--keep-packaged-modules=' + join(dst_jdk_dir, 'jmods'))\n \n         if jdk_has_new_jlink_options(jdk):\n-            if jdk_omits_warning_for_jlink_set_ThreadPriorityPolicy(jdk):\n-                thread_priority_policy_option = ' -XX:ThreadPriorityPolicy=1'\n-            else:\n-                mx.logv('[Creating JDK without -XX:ThreadPriorityPolicy=1]')\n-                thread_priority_policy_option = ''\n-\n-            if any((m.name == 'jdk.internal.vm.compiler' for m in modules)):\n-                jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+            if jdk_supports_enablejvmciproduct(jdk):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1Mzg0MQ=="}, "originalCommit": {"oid": "623e6733604ea8b364704fd1f1583721057cceaf"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2MjYxNQ==", "bodyText": "No, setting ThreadPriorityPolicy is independent of libgraal so that should be reflected here.", "url": "https://github.com/oracle/graal/pull/2337#discussion_r408062615", "createdAt": "2020-04-14T11:25:45Z", "author": {"login": "dougxc"}, "path": "sdk/mx.sdk/mx_sdk_vm.py", "diffHunk": "@@ -649,19 +661,22 @@ def jlink_new_jdk(jdk, dst_jdk_dir, module_dists,\n         jlink.append('--keep-packaged-modules=' + join(dst_jdk_dir, 'jmods'))\n \n         if jdk_has_new_jlink_options(jdk):\n-            if jdk_omits_warning_for_jlink_set_ThreadPriorityPolicy(jdk):\n-                thread_priority_policy_option = ' -XX:ThreadPriorityPolicy=1'\n-            else:\n-                mx.logv('[Creating JDK without -XX:ThreadPriorityPolicy=1]')\n-                thread_priority_policy_option = ''\n-\n-            if any((m.name == 'jdk.internal.vm.compiler' for m in modules)):\n-                jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+            if jdk_supports_enablejvmciproduct(jdk):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1Mzg0MQ=="}, "originalCommit": {"oid": "623e6733604ea8b364704fd1f1583721057cceaf"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA3MzQ5Ng==", "bodyText": "OK, thanks! Should be fixed now.", "url": "https://github.com/oracle/graal/pull/2337#discussion_r408073496", "createdAt": "2020-04-14T11:47:16Z", "author": {"login": "jerboaa"}, "path": "sdk/mx.sdk/mx_sdk_vm.py", "diffHunk": "@@ -649,19 +661,22 @@ def jlink_new_jdk(jdk, dst_jdk_dir, module_dists,\n         jlink.append('--keep-packaged-modules=' + join(dst_jdk_dir, 'jmods'))\n \n         if jdk_has_new_jlink_options(jdk):\n-            if jdk_omits_warning_for_jlink_set_ThreadPriorityPolicy(jdk):\n-                thread_priority_policy_option = ' -XX:ThreadPriorityPolicy=1'\n-            else:\n-                mx.logv('[Creating JDK without -XX:ThreadPriorityPolicy=1]')\n-                thread_priority_policy_option = ''\n-\n-            if any((m.name == 'jdk.internal.vm.compiler' for m in modules)):\n-                jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+            if jdk_supports_enablejvmciproduct(jdk):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1Mzg0MQ=="}, "originalCommit": {"oid": "623e6733604ea8b364704fd1f1583721057cceaf"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzUwNTI4OnYy", "diffSide": "RIGHT", "path": "sdk/mx.sdk/mx_sdk_vm.py", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjowNzowMVrOGFLd-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTozNjozM1rOGFUq9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4Mzk2MA==", "bodyText": "You need the following to make ThreadPriorityPolicy still be applied when EnableJVMCIProduct is not supported :\nif thread_priority_policy_option:\n    jlink.append('--add-options=' + thread_priority_policy_option.strip())", "url": "https://github.com/oracle/graal/pull/2337#discussion_r408083960", "createdAt": "2020-04-14T12:07:01Z", "author": {"login": "dougxc"}, "path": "sdk/mx.sdk/mx_sdk_vm.py", "diffHunk": "@@ -655,13 +667,16 @@ def jlink_new_jdk(jdk, dst_jdk_dir, module_dists,\n                 mx.logv('[Creating JDK without -XX:ThreadPriorityPolicy=1]')\n                 thread_priority_policy_option = ''\n \n-            if any((m.name == 'jdk.internal.vm.compiler' for m in modules)):\n-                jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+            if jdk_supports_enablejvmciproduct(jdk):\n+                if any((m.name == 'jdk.internal.vm.compiler' for m in modules)):\n+                    jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+                else:\n+                    # Don't default to using JVMCI as JIT unless Graal is being updated in the image.\n+                    # This avoids unexpected issues with using the out-of-date Graal compiler in\n+                    # the JDK itself.\n+                    jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UseJVMCICompiler -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n             else:\n-                # Don't default to using JVMCI as JIT unless Graal is being updated in the image.\n-                # This avoids unexpected issues with using the out-of-date Graal compiler in\n-                # the JDK itself.\n-                jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UseJVMCICompiler -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+                mx.logv('[Creating JDK without -XX:+EnableJVMCIProduct]')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f3f57eec95587494c93744abbbf2c268e2042e4"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMDc5NA==", "bodyText": "Right, sorry about that. Should be fixed now. More thoughts?", "url": "https://github.com/oracle/graal/pull/2337#discussion_r408130794", "createdAt": "2020-04-14T13:21:43Z", "author": {"login": "jerboaa"}, "path": "sdk/mx.sdk/mx_sdk_vm.py", "diffHunk": "@@ -655,13 +667,16 @@ def jlink_new_jdk(jdk, dst_jdk_dir, module_dists,\n                 mx.logv('[Creating JDK without -XX:ThreadPriorityPolicy=1]')\n                 thread_priority_policy_option = ''\n \n-            if any((m.name == 'jdk.internal.vm.compiler' for m in modules)):\n-                jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+            if jdk_supports_enablejvmciproduct(jdk):\n+                if any((m.name == 'jdk.internal.vm.compiler' for m in modules)):\n+                    jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+                else:\n+                    # Don't default to using JVMCI as JIT unless Graal is being updated in the image.\n+                    # This avoids unexpected issues with using the out-of-date Graal compiler in\n+                    # the JDK itself.\n+                    jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UseJVMCICompiler -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n             else:\n-                # Don't default to using JVMCI as JIT unless Graal is being updated in the image.\n-                # This avoids unexpected issues with using the out-of-date Graal compiler in\n-                # the JDK itself.\n-                jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UseJVMCICompiler -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+                mx.logv('[Creating JDK without -XX:+EnableJVMCIProduct]')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4Mzk2MA=="}, "originalCommit": {"oid": "5f3f57eec95587494c93744abbbf2c268e2042e4"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMjk2OQ==", "bodyText": "looks good", "url": "https://github.com/oracle/graal/pull/2337#discussion_r408132969", "createdAt": "2020-04-14T13:24:39Z", "author": {"login": "dougxc"}, "path": "sdk/mx.sdk/mx_sdk_vm.py", "diffHunk": "@@ -655,13 +667,16 @@ def jlink_new_jdk(jdk, dst_jdk_dir, module_dists,\n                 mx.logv('[Creating JDK without -XX:ThreadPriorityPolicy=1]')\n                 thread_priority_policy_option = ''\n \n-            if any((m.name == 'jdk.internal.vm.compiler' for m in modules)):\n-                jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+            if jdk_supports_enablejvmciproduct(jdk):\n+                if any((m.name == 'jdk.internal.vm.compiler' for m in modules)):\n+                    jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+                else:\n+                    # Don't default to using JVMCI as JIT unless Graal is being updated in the image.\n+                    # This avoids unexpected issues with using the out-of-date Graal compiler in\n+                    # the JDK itself.\n+                    jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UseJVMCICompiler -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n             else:\n-                # Don't default to using JVMCI as JIT unless Graal is being updated in the image.\n-                # This avoids unexpected issues with using the out-of-date Graal compiler in\n-                # the JDK itself.\n-                jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UseJVMCICompiler -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+                mx.logv('[Creating JDK without -XX:+EnableJVMCIProduct]')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4Mzk2MA=="}, "originalCommit": {"oid": "5f3f57eec95587494c93744abbbf2c268e2042e4"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIzNDc0Mw==", "bodyText": "Thanks very much for the review, Doug!", "url": "https://github.com/oracle/graal/pull/2337#discussion_r408234743", "createdAt": "2020-04-14T15:36:33Z", "author": {"login": "jerboaa"}, "path": "sdk/mx.sdk/mx_sdk_vm.py", "diffHunk": "@@ -655,13 +667,16 @@ def jlink_new_jdk(jdk, dst_jdk_dir, module_dists,\n                 mx.logv('[Creating JDK without -XX:ThreadPriorityPolicy=1]')\n                 thread_priority_policy_option = ''\n \n-            if any((m.name == 'jdk.internal.vm.compiler' for m in modules)):\n-                jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+            if jdk_supports_enablejvmciproduct(jdk):\n+                if any((m.name == 'jdk.internal.vm.compiler' for m in modules)):\n+                    jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+                else:\n+                    # Don't default to using JVMCI as JIT unless Graal is being updated in the image.\n+                    # This avoids unexpected issues with using the out-of-date Graal compiler in\n+                    # the JDK itself.\n+                    jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UseJVMCICompiler -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n             else:\n-                # Don't default to using JVMCI as JIT unless Graal is being updated in the image.\n-                # This avoids unexpected issues with using the out-of-date Graal compiler in\n-                # the JDK itself.\n-                jlink.append('--add-options=-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UseJVMCICompiler -XX:-UnlockExperimentalVMOptions' + thread_priority_policy_option)\n+                mx.logv('[Creating JDK without -XX:+EnableJVMCIProduct]')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4Mzk2MA=="}, "originalCommit": {"oid": "5f3f57eec95587494c93744abbbf2c268e2042e4"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 849, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}