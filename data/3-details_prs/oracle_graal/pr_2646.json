{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNTA5ODA3", "number": 2646, "title": "Keep image zone rules cache separate #2637", "bodyText": "Closes #2637\n\nBefore this patch, the image would contain zone rules cache from the JVM computing the image.\nSide effects here, such as class or source cache lookups, were affecting its contents and leading to error when writing image.\nWith this change, we guarantee that the zone rules cache in the image is a brand new instance, separate from the one in the JVM computing the image.", "createdAt": "2020-07-02T13:15:29Z", "url": "https://github.com/oracle/graal/pull/2646", "merged": true, "mergeCommit": {"oid": "d7dbcfe66c8116a3bfdd468371e49bf42354a2ca"}, "closed": true, "closedAt": "2020-08-06T19:51:15Z", "author": {"login": "galderz"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc739PYgFqTQ2MTUwMTgwMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8On3OgBqjM2Mjg3MTgyNjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNTAxODAw", "url": "https://github.com/oracle/graal/pull/2646#pullrequestreview-461501800", "createdAt": "2020-08-05T09:39:17Z", "commit": {"oid": "545232502cefa9807a960057836138c1d4e21d1e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNTI2MTM4", "url": "https://github.com/oracle/graal/pull/2646#pullrequestreview-461526138", "createdAt": "2020-08-05T10:14:15Z", "commit": {"oid": "545232502cefa9807a960057836138c1d4e21d1e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNjA3MDU4", "url": "https://github.com/oracle/graal/pull/2646#pullrequestreview-461607058", "createdAt": "2020-08-05T12:16:48Z", "commit": {"oid": "545232502cefa9807a960057836138c1d4e21d1e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNjU1Nzc2", "url": "https://github.com/oracle/graal/pull/2646#pullrequestreview-461655776", "createdAt": "2020-08-05T13:20:03Z", "commit": {"oid": "545232502cefa9807a960057836138c1d4e21d1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzoyMDowM1rOG8JVGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzoyMDowM1rOG8JVGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyMDYwMw==", "bodyText": "LGTM but there are some styling issues and it's missing the copyright header.\n\n@galderz please take care of the styling issues. Ensure that mx eclipseformat and mx checkstyle pass without issues.", "url": "https://github.com/oracle/graal/pull/2646#discussion_r465720603", "createdAt": "2020-08-05T13:20:03Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/TimeSubstitutions.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.oracle.svm.core.jdk;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "545232502cefa9807a960057836138c1d4e21d1e"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxODc0MTM4", "url": "https://github.com/oracle/graal/pull/2646#pullrequestreview-461874138", "createdAt": "2020-08-05T17:25:14Z", "commit": {"oid": "545232502cefa9807a960057836138c1d4e21d1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzoyNToxNFrOG8Tcsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzoyNToxNFrOG8Tcsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg4NjM4Ng==", "bodyText": "For all new code we are switching to the model where each Target_... class is in its own .java file. In your case this avoids the awkward class TimeSubstitutions.", "url": "https://github.com/oracle/graal/pull/2646#discussion_r465886386", "createdAt": "2020-08-05T17:25:14Z", "author": {"login": "christianwimmer"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/TimeSubstitutions.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.oracle.svm.core.jdk;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+import java.time.zone.ZoneOffsetTransition;\n+import java.time.zone.ZoneRules;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+\n+@TargetClass(ZoneRules.class)\n+final class Target_java_time_zone_ZoneRules {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "545232502cefa9807a960057836138c1d4e21d1e"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMDA1NTU0", "url": "https://github.com/oracle/graal/pull/2646#pullrequestreview-462005554", "createdAt": "2020-08-05T20:37:51Z", "commit": {"oid": "545232502cefa9807a960057836138c1d4e21d1e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "545232502cefa9807a960057836138c1d4e21d1e", "author": {"user": {"login": "galderz", "name": "Galder Zamarre\u00f1o"}}, "url": "https://github.com/oracle/graal/commit/545232502cefa9807a960057836138c1d4e21d1e", "committedDate": "2020-07-02T13:09:44Z", "message": "Keep image zone rules cache separate #2637\n\n* Before this patch,\nthe image would contain zone rules cache from the JVM computing the image.\n* Side effects here,\nsuch as class or source cache lookups,\nwere affecting its contents and leading to error when writing image.\n* With this change,\nwe guarantee that the zone rules cache in the image is a brand new instance,\nseparate from the one in the JVM computing the image."}, "afterCommit": {"oid": "7cd2db6d335b0dfab539a03e4b21e471be947f30", "author": {"user": {"login": "galderz", "name": "Galder Zamarre\u00f1o"}}, "url": "https://github.com/oracle/graal/commit/7cd2db6d335b0dfab539a03e4b21e471be947f30", "committedDate": "2020-08-06T09:48:06Z", "message": "Keep image zone rules cache separate #2637\n\n* Before this patch,\nthe image would contain zone rules cache from the JVM computing the image.\n* Side effects here,\nsuch as class or source cache lookups,\nwere affecting its contents and leading to error when writing image.\n* With this change,\nwe guarantee that the zone rules cache in the image is a brand new instance,\nseparate from the one in the JVM computing the image."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNDA1OTcw", "url": "https://github.com/oracle/graal/pull/2646#pullrequestreview-462405970", "createdAt": "2020-08-06T10:43:45Z", "commit": {"oid": "7cd2db6d335b0dfab539a03e4b21e471be947f30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDo0Mzo0NVrOG8uPVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMDo0Mzo0NVrOG8uPVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNTMzNA==", "bodyText": "I think the following is a bit more readable :)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @SuppressWarnings(\"unused\") @Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) private transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;\n          \n          \n            \n                @SuppressWarnings(\"unused\") //\n          \n          \n            \n                @Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) //\n          \n          \n            \n                private transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;", "url": "https://github.com/oracle/graal/pull/2646#discussion_r466325334", "createdAt": "2020-08-06T10:43:45Z", "author": {"login": "zakkak"}, "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_time_zone_ZoneRules.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2020, 2020, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+package com.oracle.svm.core.jdk;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+import java.time.zone.ZoneOffsetTransition;\n+import java.time.zone.ZoneRules;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+\n+@TargetClass(ZoneRules.class)\n+final class Target_java_time_zone_ZoneRules {\n+\n+    @SuppressWarnings(\"unused\") @Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) private transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cd2db6d335b0dfab539a03e4b21e471be947f30"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNDA2MDcy", "url": "https://github.com/oracle/graal/pull/2646#pullrequestreview-462406072", "createdAt": "2020-08-06T10:43:55Z", "commit": {"oid": "7cd2db6d335b0dfab539a03e4b21e471be947f30"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71c0dcf49e7e4e5e19e4d2a75bbc544412d44c92", "author": {"user": {"login": "galderz", "name": "Galder Zamarre\u00f1o"}}, "url": "https://github.com/oracle/graal/commit/71c0dcf49e7e4e5e19e4d2a75bbc544412d44c92", "committedDate": "2020-08-06T12:03:35Z", "message": "Keep image zone rules cache separate #2637\n\n* Before this patch,\nthe image would contain zone rules cache from the JVM computing the image.\n* Side effects here,\nsuch as class or source cache lookups,\nwere affecting its contents and leading to error when writing image.\n* With this change,\nwe guarantee that the zone rules cache in the image is a brand new instance,\nseparate from the one in the JVM computing the image."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7cd2db6d335b0dfab539a03e4b21e471be947f30", "author": {"user": {"login": "galderz", "name": "Galder Zamarre\u00f1o"}}, "url": "https://github.com/oracle/graal/commit/7cd2db6d335b0dfab539a03e4b21e471be947f30", "committedDate": "2020-08-06T09:48:06Z", "message": "Keep image zone rules cache separate #2637\n\n* Before this patch,\nthe image would contain zone rules cache from the JVM computing the image.\n* Side effects here,\nsuch as class or source cache lookups,\nwere affecting its contents and leading to error when writing image.\n* With this change,\nwe guarantee that the zone rules cache in the image is a brand new instance,\nseparate from the one in the JVM computing the image."}, "afterCommit": {"oid": "71c0dcf49e7e4e5e19e4d2a75bbc544412d44c92", "author": {"user": {"login": "galderz", "name": "Galder Zamarre\u00f1o"}}, "url": "https://github.com/oracle/graal/commit/71c0dcf49e7e4e5e19e4d2a75bbc544412d44c92", "committedDate": "2020-08-06T12:03:35Z", "message": "Keep image zone rules cache separate #2637\n\n* Before this patch,\nthe image would contain zone rules cache from the JVM computing the image.\n* Side effects here,\nsuch as class or source cache lookups,\nwere affecting its contents and leading to error when writing image.\n* With this change,\nwe guarantee that the zone rules cache in the image is a brand new instance,\nseparate from the one in the JVM computing the image."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1044, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}