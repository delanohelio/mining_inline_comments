{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMTE3MDM3", "number": 2411, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDowMTozMVrOD6Ldiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMToxOToyOVrOD6my-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMzMxNzg3OnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.objectfile/src/com/oracle/objectfile/elf/dwarf/DwarfDebugInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMDowMTozMVrOGR3dYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNDo1MzoyOVrOGSChQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4NzYxOA==", "bodyText": "You don't need an accessor if you make elfMachine a public final field.", "url": "https://github.com/oracle/graal/pull/2411#discussion_r421387618", "createdAt": "2020-05-07T10:01:31Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.objectfile/src/com/oracle/objectfile/elf/dwarf/DwarfDebugInfo.java", "diffHunk": "@@ -201,4 +203,8 @@ public DwarfARangesSectionImpl getARangesSectionImpl() {\n     public DwarfLineSectionImpl getLineSectionImpl() {\n         return dwarfLineSection;\n     }\n+\n+    public ELFMachine getELFMachine() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24d6da17cea6ba18592d2e726ca44f48f0fda68c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU2ODgzMg==", "bodyText": "Sure, no point making the API surface larger than it needs to be. Fixed", "url": "https://github.com/oracle/graal/pull/2411#discussion_r421568832", "createdAt": "2020-05-07T14:53:29Z", "author": {"login": "adinn"}, "path": "substratevm/src/com.oracle.objectfile/src/com/oracle/objectfile/elf/dwarf/DwarfDebugInfo.java", "diffHunk": "@@ -201,4 +203,8 @@ public DwarfARangesSectionImpl getARangesSectionImpl() {\n     public DwarfLineSectionImpl getLineSectionImpl() {\n         return dwarfLineSection;\n     }\n+\n+    public ELFMachine getELFMachine() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM4NzYxOA=="}, "originalCommit": {"oid": "24d6da17cea6ba18592d2e726ca44f48f0fda68c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNzc5NjQwOnYy", "diffSide": "RIGHT", "path": "substratevm/src/com.oracle.objectfile/src/com/oracle/objectfile/elf/dwarf/DwarfLineSectionImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMToxOToyOVrOGSiNag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMToxOToyOVrOGSiNag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA4ODA0Mg==", "bodyText": "If doing the same also for AMD64 does not have any negative side effects then maybe it's not worth to make this piece architecture specific.", "url": "https://github.com/oracle/graal/pull/2411#discussion_r422088042", "createdAt": "2020-05-08T11:19:29Z", "author": {"login": "olpaw"}, "path": "substratevm/src/com.oracle.objectfile/src/com/oracle/objectfile/elf/dwarf/DwarfLineSectionImpl.java", "diffHunk": "@@ -478,6 +479,32 @@ private int writeLineNumberTable(DebugContext context, ClassEntry classEntry, by\n             }\n             pos = writeCopyOp(context, buffer, pos);\n \n+            /*\n+             * On AArch64 gdb expects to see a line record at the start of the method and a second\n+             * one at the end of the prologue marking the point where the method code begins for\n+             * real. If we don't provide it then gdb will skip to the second line record when we\n+             * place a breakpoint on the method.\n+             *\n+             * We can identify the end of the prologue for normal methods by noting where the stack\n+             * frame height is first adjusted. This should normally be no more a few instructions in\n+             * total.\n+             */\n+            if (isAArch64() && !primaryEntry.getFrameSizeInfos().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c24f78610741fb043bccce38c60e3cf8249429d8"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 898, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}