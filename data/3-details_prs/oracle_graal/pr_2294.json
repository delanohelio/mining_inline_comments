{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0Mjg2MjE1", "number": 2294, "title": "Capture NoClassDefFoundError and report with source type", "bodyText": "Some NCDE errors can appear when trying to use a graalvm built with OpenJDK 11 to build native images.\nThis is due to OpenJDK 11 using JVMCI code that relies on Class.getDeclaredMethods as opposed to using JDK 13+ JVMCI code present in Labs JDK.\nThe code below catches those NCDE and reports them in a way that we can see which type is the one that contains the import that's causing the issues.\nFor more details see quarkusio/quarkus#8081", "createdAt": "2020-03-26T16:41:06Z", "url": "https://github.com/oracle/graal/pull/2294", "merged": true, "mergeCommit": {"oid": "3b7780461bff4628d4a8abd52c961c2d1c449b99"}, "closed": true, "closedAt": "2020-06-02T21:56:27Z", "author": {"login": "galderz"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRtTMKgFqTM4MjY5NzU0NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABclphlKABqjMzODE2NjkxMzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNjk3NTQ0", "url": "https://github.com/oracle/graal/pull/2294#pullrequestreview-382697544", "createdAt": "2020-03-27T09:29:29Z", "commit": {"oid": "3d180cefc8df92444cf383698b86ea06fc0722a0"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MjAwNzYy", "url": "https://github.com/oracle/graal/pull/2294#pullrequestreview-398200762", "createdAt": "2020-04-22T13:39:39Z", "commit": {"oid": "3d180cefc8df92444cf383698b86ea06fc0722a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzozOTozOVrOGJ2-8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzozOTozOVrOGJ2-8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk5MTIxNg==", "bodyText": "Is there an action we could suggest to the user that gets this error?\nAlso, should we re-throw if AllowIncompleteClasspath is enabled? Maybe we should just ignore in that case and return false?", "url": "https://github.com/oracle/graal/pull/2294#discussion_r412991216", "createdAt": "2020-04-22T13:39:39Z", "author": {"login": "vjovanov"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/classinitialization/ClassInitializationFeature.java", "diffHunk": "@@ -368,17 +369,22 @@ static boolean declaresDefaultMethods(ResolvedJavaType type) {\n             /* Only interfaces can declare default methods. */\n             return false;\n         }\n-        /*\n-         * We call getDeclaredMethods() directly on the wrapped type. We avoid calling it on the\n-         * AnalysisType because it resolves all the methods in the AnalysisUniverse.\n-         */\n-        for (ResolvedJavaMethod method : Inflation.toWrappedType(type).getDeclaredMethods()) {\n-            if (method.isDefault()) {\n-                assert !Modifier.isStatic(method.getModifiers()) : \"Default method that is static?\";\n-                return true;\n+\n+        try {\n+            /*\n+             * We call getDeclaredMethods() directly on the wrapped type. We avoid calling it on the\n+             * AnalysisType because it resolves all the methods in the AnalysisUniverse.\n+             */\n+            for (ResolvedJavaMethod method : Inflation.toWrappedType(type).getDeclaredMethods()) {\n+                if (method.isDefault()) {\n+                    assert !Modifier.isStatic(method.getModifiers()) : \"Default method that is static?\";\n+                    return true;\n+                }\n             }\n+            return false;\n+        } catch (NoClassDefFoundError e) {\n+            throw new GraalError(e, \"Unable to resolve all classes in class: %s\", type.toClassName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d180cefc8df92444cf383698b86ea06fc0722a0"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d180cefc8df92444cf383698b86ea06fc0722a0", "author": {"user": {"login": "galderz", "name": "Galder Zamarre\u00f1o"}}, "url": "https://github.com/oracle/graal/commit/3d180cefc8df92444cf383698b86ea06fc0722a0", "committedDate": "2020-03-26T11:50:39Z", "message": "Capture NoClassDefFoundError and report with source type"}, "afterCommit": {"oid": "decc5813df4c0aae8dcc0ba3e2eae2483851405e", "author": {"user": {"login": "galderz", "name": "Galder Zamarre\u00f1o"}}, "url": "https://github.com/oracle/graal/commit/decc5813df4c0aae8dcc0ba3e2eae2483851405e", "committedDate": "2020-05-28T08:11:56Z", "message": "Capture NoClassDefFoundError and report with source type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bc9e05481fa933e3882410fe47ad73d6c9bd617", "author": {"user": {"login": "galderz", "name": "Galder Zamarre\u00f1o"}}, "url": "https://github.com/oracle/graal/commit/8bc9e05481fa933e3882410fe47ad73d6c9bd617", "committedDate": "2020-05-28T08:23:49Z", "message": "Capture NoClassDefFoundError and report with source type"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "decc5813df4c0aae8dcc0ba3e2eae2483851405e", "author": {"user": {"login": "galderz", "name": "Galder Zamarre\u00f1o"}}, "url": "https://github.com/oracle/graal/commit/decc5813df4c0aae8dcc0ba3e2eae2483851405e", "committedDate": "2020-05-28T08:11:56Z", "message": "Capture NoClassDefFoundError and report with source type"}, "afterCommit": {"oid": "8bc9e05481fa933e3882410fe47ad73d6c9bd617", "author": {"user": {"login": "galderz", "name": "Galder Zamarre\u00f1o"}}, "url": "https://github.com/oracle/graal/commit/8bc9e05481fa933e3882410fe47ad73d6c9bd617", "committedDate": "2020-05-28T08:23:49Z", "message": "Capture NoClassDefFoundError and report with source type"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1120, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}