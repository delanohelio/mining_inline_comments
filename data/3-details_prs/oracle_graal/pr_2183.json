{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4ODk2ODc4", "number": 2183, "title": "sulong: Initial AArch64 syscall support", "bodyText": "*Add AArch64 platform check.\n*Add the AArch64 syscall map.\n*Commonise the Exit and Unknown syscalls and use in AArch64.\n*Commonise the syscall scaffolding and boilerplate files.\nNote, I've been fairly aggressive taking files that were used for both X86 Linux and X86 Darwin and using them with AArch64 Linux too. I don't believe anything I've made common is X86 specific.\nI'll add the other syscalls to AArch64 in later patches, making files common where possible.", "createdAt": "2020-02-24T09:50:04Z", "url": "https://github.com/oracle/graal/pull/2183", "merged": true, "mergeCommit": {"oid": "7b448824c36cc0c29cad071db757e78e2fd64e23"}, "closed": true, "closedAt": "2020-02-27T21:11:40Z", "author": {"login": "a74nh"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHfje9AFqTM2MzQ5MTg0Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIXRdnABqjMwNzY5MTM0NDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNDkxODQ2", "url": "https://github.com/oracle/graal/pull/2183#pullrequestreview-363491846", "createdAt": "2020-02-24T15:49:21Z", "commit": {"oid": "f58aa9040f50146dc53fbaff98c425a3a51ba27d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo0OToyMlrOFtllzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo0OToyMlrOFtllzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0NjEyNQ==", "bodyText": "I'd rename cachedsyscallNum to cachedSyscallNum.", "url": "https://github.com/oracle/graal/pull/2183#discussion_r383346125", "createdAt": "2020-02-24T15:49:22Z", "author": {"login": "zapster"}, "path": "sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/nodes/asm/syscall/LLVMSyscallNode.java", "diffHunk": "@@ -41,29 +41,29 @@\n import com.oracle.truffle.llvm.runtime.memory.LLVMSyscallOperationNode;\n import com.oracle.truffle.llvm.runtime.nodes.api.LLVMExpressionNode;\n \n-@NodeChild(\"rax\")\n-@NodeChild(\"rdi\")\n-@NodeChild(\"rsi\")\n-@NodeChild(\"rdx\")\n-@NodeChild(\"r10\")\n-@NodeChild(\"r8\")\n-@NodeChild(\"r9\")\n-public abstract class LLVMAMD64SyscallNode extends LLVMExpressionNode {\n+@NodeChild(\"syscallNum\")\n+@NodeChild(\"arg1\")\n+@NodeChild(\"arg2\")\n+@NodeChild(\"arg3\")\n+@NodeChild(\"arg4\")\n+@NodeChild(\"arg5\")\n+@NodeChild(\"arg6\")\n+public abstract class LLVMSyscallNode extends LLVMExpressionNode {\n     protected static final int NUM_SYSCALLS = 332;\n \n-    protected LLVMSyscallOperationNode createNode(long rax) {\n-        return LLVMLanguage.getLanguage().getCapability(PlatformCapability.class).createSyscallNode(rax);\n+    protected LLVMSyscallOperationNode createNode(long syscallNum) {\n+        return LLVMLanguage.getLanguage().getCapability(PlatformCapability.class).createSyscallNode(syscallNum);\n     }\n \n-    @Specialization(guards = \"rax == cachedRax\", limit = \"NUM_SYSCALLS\")\n-    protected long cachedSyscall(@SuppressWarnings(\"unused\") long rax, Object rdi, Object rsi, Object rdx, Object r10, Object r8, Object r9,\n-                    @Cached(\"rax\") @SuppressWarnings(\"unused\") long cachedRax,\n-                    @Cached(\"createNode(rax)\") LLVMSyscallOperationNode node,\n+    @Specialization(guards = \"syscallNum == cachedsyscallNum\", limit = \"NUM_SYSCALLS\")\n+    protected long cachedSyscall(@SuppressWarnings(\"unused\") long syscallNum, Object arg1, Object arg2, Object arg3, Object arg4, Object arg5, Object arg6,\n+                    @Cached(\"syscallNum\") @SuppressWarnings(\"unused\") long cachedsyscallNum,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58aa9040f50146dc53fbaff98c425a3a51ba27d"}, "originalPosition": 41}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f58aa9040f50146dc53fbaff98c425a3a51ba27d", "author": {"user": {"login": "a74nh", "name": "Alan Hayward"}}, "url": "https://github.com/oracle/graal/commit/f58aa9040f50146dc53fbaff98c425a3a51ba27d", "committedDate": "2020-02-24T09:36:17Z", "message": "sulong: Initial AArch64 syscall support\n\n*Add AArch64 platform check.\n*Add the AArch64 syscall map.\n*Commonise the Exit and Unknown syscalls and use in AArch64.\n*Commonise the syscall scaffolding and boilerplate files."}, "afterCommit": {"oid": "7b4691ec6e7b33ec70556fad5091364a5f81b1d7", "author": {"user": {"login": "a74nh", "name": "Alan Hayward"}}, "url": "https://github.com/oracle/graal/commit/7b4691ec6e7b33ec70556fad5091364a5f81b1d7", "committedDate": "2020-02-25T11:08:15Z", "message": "sulong: Initial AArch64 syscall support\n\n*Add AArch64 platform check.\n*Add the AArch64 syscall map.\n*Commonise the Exit and Unknown syscalls and use in AArch64.\n*Commonise the syscall scaffolding and boilerplate files."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NDgxODI4", "url": "https://github.com/oracle/graal/pull/2183#pullrequestreview-365481828", "createdAt": "2020-02-27T08:15:22Z", "commit": {"oid": "7b4691ec6e7b33ec70556fad5091364a5f81b1d7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwODoxNToyMlrOFvIrFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwODoxNTo1MVrOFvIr5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk2OTQ5Mw==", "bodyText": "Please drop the \"All rights reserved.\" In the BSD header this is superfluous since its already there just 2 lines below.", "url": "https://github.com/oracle/graal/pull/2183#discussion_r384969493", "createdAt": "2020-02-27T08:15:22Z", "author": {"login": "zapster"}, "path": "sulong/projects/com.oracle.truffle.llvm.parser.factories/src/com/oracle/truffle/llvm/parser/factories/LinuxAArch64PlatformCapability.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright (c) 2020, Oracle and/or its affiliates.\n+ * Copyright (c) 2020, Arm Limited. All rights reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b4691ec6e7b33ec70556fad5091364a5f81b1d7"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk2OTcwMQ==", "bodyText": "Please drop the \"All rights reserved.\" In the BSD header this is superfluous since its already there just 2 lines below.", "url": "https://github.com/oracle/graal/pull/2183#discussion_r384969701", "createdAt": "2020-02-27T08:15:51Z", "author": {"login": "zapster"}, "path": "sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/nodes/asm/syscall/linux/aarch64/LinuxAArch64Syscall.java", "diffHunk": "@@ -0,0 +1,331 @@\n+/*\n+ * Copyright (c) 2020, Oracle and/or its affiliates.\n+ * Copyright (c) 2020, Arm Limited. All rights reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b4691ec6e7b33ec70556fad5091364a5f81b1d7"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b448824c36cc0c29cad071db757e78e2fd64e23", "author": {"user": {"login": "a74nh", "name": "Alan Hayward"}}, "url": "https://github.com/oracle/graal/commit/7b448824c36cc0c29cad071db757e78e2fd64e23", "committedDate": "2020-02-27T08:43:05Z", "message": "sulong: Initial AArch64 syscall support\n\n*Add AArch64 platform check.\n*Add the AArch64 syscall map.\n*Commonise the Exit and Unknown syscalls and use in AArch64.\n*Commonise the syscall scaffolding and boilerplate files."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b4691ec6e7b33ec70556fad5091364a5f81b1d7", "author": {"user": {"login": "a74nh", "name": "Alan Hayward"}}, "url": "https://github.com/oracle/graal/commit/7b4691ec6e7b33ec70556fad5091364a5f81b1d7", "committedDate": "2020-02-25T11:08:15Z", "message": "sulong: Initial AArch64 syscall support\n\n*Add AArch64 platform check.\n*Add the AArch64 syscall map.\n*Commonise the Exit and Unknown syscalls and use in AArch64.\n*Commonise the syscall scaffolding and boilerplate files."}, "afterCommit": {"oid": "7b448824c36cc0c29cad071db757e78e2fd64e23", "author": {"user": {"login": "a74nh", "name": "Alan Hayward"}}, "url": "https://github.com/oracle/graal/commit/7b448824c36cc0c29cad071db757e78e2fd64e23", "committedDate": "2020-02-27T08:43:05Z", "message": "sulong: Initial AArch64 syscall support\n\n*Add AArch64 platform check.\n*Add the AArch64 syscall map.\n*Commonise the Exit and Unknown syscalls and use in AArch64.\n*Commonise the syscall scaffolding and boilerplate files."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1100, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}