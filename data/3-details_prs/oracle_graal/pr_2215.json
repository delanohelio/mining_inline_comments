{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMzAwOTE1", "number": 2215, "title": "Move analysis universe cleanup before Feature.beforeCompilation() call.", "bodyText": "Feature.beforeCompilation() should not depend on the analysis universe.", "createdAt": "2020-03-04T02:24:07Z", "url": "https://github.com/oracle/graal/pull/2215", "merged": true, "mergeCommit": {"oid": "7fac48312332347cc9b81915a3902f19014bfea8"}, "closed": true, "closedAt": "2020-03-05T21:50:50Z", "author": {"login": "cstancu"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKWDy_gFqTM2ODczNTcxMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKvrjVAH2gAyMzgzMzAwOTE1OjhhOGU0OTc1NGZiMzJkZmEzZmQ2YjNmZDIyYzBjYWM4YmVhMmY5YjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NzM1NzEy", "url": "https://github.com/oracle/graal/pull/2215#pullrequestreview-368735712", "createdAt": "2020-03-04T12:27:23Z", "commit": {"oid": "4f0ca59cf246b9a24e78790c1a490d56f3a7c30f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NzQyNTMz", "url": "https://github.com/oracle/graal/pull/2215#pullrequestreview-369742533", "createdAt": "2020-03-05T16:54:37Z", "commit": {"oid": "4f0ca59cf246b9a24e78790c1a490d56f3a7c30f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNjo1NDozN1rOFybr0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNjo1NDozN1rOFybr0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyNjcwNA==", "bodyText": "This line should remain the last one before the catch, otherwise we could miss unsupported features that get accumulated in the UnsupportedFeatures object.", "url": "https://github.com/oracle/graal/pull/2215#discussion_r388426704", "createdAt": "2020-03-05T16:54:37Z", "author": {"login": "christianwimmer"}, "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java", "diffHunk": "@@ -565,31 +565,31 @@ private void doRun(Map<Method, CEntryPointData> entryPoints,\n                     throw UserError.abort(\"Warning: no entry points found, i.e., no method annotated with @\" + CEntryPoint.class.getSimpleName());\n                 }\n \n+                bigbang.getUnsupportedFeatures().report(bigbang);\n+\n+                recordMethodsWithStackValues();\n+                recordRestrictHeapAccessCallees(aUniverse.getMethods());\n+\n+                /*\n+                 * After this point, all TypeFlow (and therefore also TypeState) objects are\n+                 * unreachable and can be garbage collected. This is important to keep the overall\n+                 * memory footprint low. However, this also means we no longer have complete call\n+                 * chain information. Only the summarized information stored in the\n+                 * StaticAnalysisResult objects is available after this point.\n+                 */\n+                bigbang.cleanupAfterAnalysis();\n+\n                 ImageHeapLayouter heapLayouter = ImageSingletons.lookup(ImageHeapLayouter.class);\n                 heap = new NativeImageHeap(aUniverse, hUniverse, hMetaAccess, heapLayouter);\n \n                 BeforeCompilationAccessImpl config = new BeforeCompilationAccessImpl(featureHandler, loader, aUniverse, hUniverse, hMetaAccess, heap, debug, runtime);\n                 featureHandler.forEachFeature(feature -> feature.beforeCompilation(config));\n \n                 runtime.updateLazyState(hMetaAccess);\n-\n-                bigbang.getUnsupportedFeatures().report(bigbang);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f0ca59cf246b9a24e78790c1a490d56f3a7c30f"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a8e49754fb32dfa3fd6b3fd22c0cac8bea2f9b4", "author": {"user": {"login": "cstancu", "name": "Codrut Stancu"}}, "url": "https://github.com/oracle/graal/commit/8a8e49754fb32dfa3fd6b3fd22c0cac8bea2f9b4", "committedDate": "2020-03-05T18:18:26Z", "message": "Move analysis universe cleanup before Feature.beforeCompilation() call.\n\nFeature.beforeCompilation() should not depend on the analysis universe."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1106, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}