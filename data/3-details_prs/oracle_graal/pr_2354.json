{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NTY4MDc0", "number": 2354, "title": "Add LLVM Round Instrinsic", "bodyText": "llvm spec; https://llvm.org/docs/LangRef.html#llvm-round-intrinsic\nReferenced code from llvm ceil/floor. I found this missing as it was used by a Ruby library, oj.\nShopify#1", "createdAt": "2020-04-16T17:55:22Z", "url": "https://github.com/oracle/graal/pull/2354", "merged": true, "mergeCommit": {"oid": "9f9d49e2cc59f27a280b33c1913cceb3532084a7"}, "closed": true, "closedAt": "2020-05-05T15:12:18Z", "author": {"login": "kipply"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYQdCqAH2gAyNDA0NTY4MDc0OjQxOTJjYzM5MWU4MGVhMjY5ZDE0ODMyNWM0ZTFlNTQ4OGNkMzY2OWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYiUy2gFqTM5NTUxMTM4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4192cc391e80ea269d148325c4e1e5488cd3669c", "author": {"user": {"login": "kipply", "name": "Carol Chen"}}, "url": "https://github.com/oracle/graal/commit/4192cc391e80ea269d148325c4e1e5488cd3669c", "committedDate": "2020-04-16T17:50:28Z", "message": "add round intrinsic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0ODcxMTMw", "url": "https://github.com/oracle/graal/pull/2354#pullrequestreview-394871130", "createdAt": "2020-04-16T17:56:45Z", "commit": {"oid": "4192cc391e80ea269d148325c4e1e5488cd3669c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzo1Njo0NVrOGGw28w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzo1Njo0NVrOGGw28w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0NTEzOQ==", "bodyText": "I believe this is imprecise\n\n  \n    \n      graal/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/floating/LLVM80BitFloat.java\n    \n    \n         Line 689\n      in\n      6feb36b\n    \n    \n    \n    \n\n        \n          \n           // imprecise workaround for cases in which NFI isn't available", "url": "https://github.com/oracle/graal/pull/2354#discussion_r409745139", "createdAt": "2020-04-16T17:56:45Z", "author": {"login": "kipply"}, "path": "sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/nodes/intrinsics/c/LLVMCMathsIntrinsics.java", "diffHunk": "@@ -248,6 +248,26 @@ protected LLVM80BitFloat doIntrinsic(LLVM80BitFloat value) {\n         }\n     }\n \n+    @NodeChild(type = LLVMExpressionNode.class)\n+    public abstract static class LLVMRound extends LLVMBuiltin {\n+\n+        @Specialization\n+        protected float doIntrinsic(float value) {\n+            return (float) Math.round(value);\n+        }\n+\n+        @Specialization\n+        protected double doIntrinsic(double value) {\n+            return Math.round(value);\n+        }\n+\n+        @Specialization\n+        protected LLVM80BitFloat doIntrinsic(LLVM80BitFloat value) {\n+            double result = doIntrinsic(value.getDoubleValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4192cc391e80ea269d148325c4e1e5488cd3669c"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69d9a21ebb1bbc13d5ef98f59f14dc853b65706f", "author": {"user": {"login": "kipply", "name": "Carol Chen"}}, "url": "https://github.com/oracle/graal/commit/69d9a21ebb1bbc13d5ef98f59f14dc853b65706f", "committedDate": "2020-04-16T19:18:44Z", "message": "Remove unessesary `(float)`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f9d49e2cc59f27a280b33c1913cceb3532084a7", "author": {"user": {"login": "kipply", "name": "Carol Chen"}}, "url": "https://github.com/oracle/graal/commit/9f9d49e2cc59f27a280b33c1913cceb3532084a7", "committedDate": "2020-04-16T22:02:51Z", "message": "Update copyright year"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NTExMzg5", "url": "https://github.com/oracle/graal/pull/2354#pullrequestreview-395511389", "createdAt": "2020-04-17T14:37:12Z", "commit": {"oid": "9f9d49e2cc59f27a280b33c1913cceb3532084a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNDozNzoxMlrOGHQqiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNDozNzoxMlrOGHQqiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI2NjI0OQ==", "bodyText": "I guess we can also put llvm.round.f32 and llvm.round.f64 here, right?", "url": "https://github.com/oracle/graal/pull/2354#discussion_r410266249", "createdAt": "2020-04-17T14:37:12Z", "author": {"login": "rschatz"}, "path": "sulong/projects/com.oracle.truffle.llvm.parser.factories/src/com/oracle/truffle/llvm/parser/factories/BasicNodeFactory.java", "diffHunk": "@@ -1362,6 +1362,8 @@ protected LLVMExpressionNode getLLVMBuiltin(FunctionDeclaration declaration, LLV\n                     return LLVMPowNodeGen.create(args[1], args[2]);\n                 case \"llvm.powi.f80\":\n                     return LLVMPowNodeGen.create(args[1], args[2]);\n+                case \"llvm.round.f80\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f9d49e2cc59f27a280b33c1913cceb3532084a7"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1140, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}