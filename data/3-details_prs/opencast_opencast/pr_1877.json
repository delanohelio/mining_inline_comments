{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzOTc5MDkw", "number": 1877, "title": "Extended CoverImageWOH to be able to use extended and series metadata", "bodyText": "This PR should fix #1787 . The user can now specify the flavor of the episode and series in the workflow using the parameters episodeFlavor and seriesFlavor. If not specified dublincore/episode and dublincore/series will be used as default values. Depending on what flavor was specified, the metadata of the episode gets extracted and built into xml format including a field for the metadata of the corresponding series (if there is any). I did not change the names of the other fields, so there shouldn't come up any conflicts with older workflows.\nLike before all fields can be accessed in the coverimage.xsl and therefore can be included in the cover image.\n\n have a concise title\n close an accompanying issue if one exists\n be against the correct branch (features can only go into develop)\n include migration scripts and documentation, if appropriate\n pass automated testing\n have a clean commit history\n have proper commit messages (title and body) for all commits\n have appropriate tags applied", "createdAt": "2020-09-28T08:33:31Z", "url": "https://github.com/opencast/opencast/pull/1877", "merged": true, "mergeCommit": {"oid": "8226e623520a907f8bfd4ebaaa5bdc63232693a8"}, "closed": true, "closedAt": "2021-05-13T22:20:03Z", "author": {"login": "jduehring"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHqOU7AH2gAyNDkzOTc5MDkwOmUzMWYwYzc3YmVlOTYzOGFlMjA0ODVlOGU1YzM4YTk4NGQ5NzQzZGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd7KN0tgH2gAyNDkzOTc5MDkwOjdkODI3YzUzNjhhM2ZhNmJhMDJkNWZkN2ZjMDRiNWViYzU2ZGE5NmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e31f0c77bee9638ae20485e8e5c38a984d9743dc", "author": {"user": null}, "url": "https://github.com/opencast/opencast/commit/e31f0c77bee9638ae20485e8e5c38a984d9743dc", "committedDate": "2020-09-11T00:26:22Z", "message": "added basic functionality for extended dublincore episodes and series"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c70f8e813cf327354125564e4955c7d8da6d5ad", "author": {"user": null}, "url": "https://github.com/opencast/opencast/commit/2c70f8e813cf327354125564e4955c7d8da6d5ad", "committedDate": "2020-09-11T00:29:06Z", "message": "removed unused function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64daa896ea520469c610e7bd02fb969721c84f88", "author": {"user": null}, "url": "https://github.com/opencast/opencast/commit/64daa896ea520469c610e7bd02fb969721c84f88", "committedDate": "2020-09-11T00:31:07Z", "message": "removed unneccessary comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2", "author": {"user": null}, "url": "https://github.com/opencast/opencast/commit/614d225a3f24d5e05ec8fa5dd67215a92f2b48a2", "committedDate": "2020-09-27T11:47:18Z", "message": "finished CoverImageWOH functionality, cleaned up code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3Nzg0MDQ5", "url": "https://github.com/opencast/opencast/pull/1877#pullrequestreview-497784049", "createdAt": "2020-09-28T18:18:56Z", "commit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoxODo1N1rOHZKT_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoyODoxM1rOHZKn0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0NTQwNw==", "bodyText": "This is easier than to check manually for empty values:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));\n          \n          \n            \n                final String configuredEpisodeFlavor = Objects.toString(StringUtils.trimToNull(operation.getConfiguration(EPISODE_FLAVOR)), \"dublincore/episode);", "url": "https://github.com/opencast/opencast/pull/1877#discussion_r496145407", "createdAt": "2020-09-28T18:18:57Z", "author": {"login": "lkiesow"}, "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "diffHunk": "@@ -302,57 +304,87 @@ protected String loadXsl(WorkflowOperationInstance operation) throws WorkflowOpe\n     }\n   }\n \n-  protected String getMetadataXml(MediaPackage mp) {\n-    StaticMetadata metadata = getStaticMetadataService().getMetadata(mp);\n+  protected String getMetadataXml(MediaPackage mp, WorkflowOperationInstance operation) {\n+    //get specified episode/series flavor\n+    String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0NzY4Ng==", "bodyText": "Better use\nMediaPackageElementFlavor.parseFlavor(flavorStr);\nYou can then access the flavor and subflavor via the flavor object's methods.\nAnd it assures that it's a valid flavor or directly use it since you want a flavor object down below anyway.", "url": "https://github.com/opencast/opencast/pull/1877#discussion_r496147686", "createdAt": "2020-09-28T18:23:07Z", "author": {"login": "lkiesow"}, "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "diffHunk": "@@ -302,57 +304,87 @@ protected String loadXsl(WorkflowOperationInstance operation) throws WorkflowOpe\n     }\n   }\n \n-  protected String getMetadataXml(MediaPackage mp) {\n-    StaticMetadata metadata = getStaticMetadataService().getMetadata(mp);\n+  protected String getMetadataXml(MediaPackage mp, WorkflowOperationInstance operation) {\n+    //get specified episode/series flavor\n+    String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));\n+    String configuredSeriesFlavor = StringUtils.trimToEmpty(operation.getConfiguration(SERIES_FLAVOR));\n \n+    //use dublincore/episode and dublincore/series metadata-catalogs as default\n+    if ((\"\").equals(configuredEpisodeFlavor)) {\n+      configuredEpisodeFlavor = \"dublincore/episode\";\n+    }\n+    if ((\"\").equals(configuredSeriesFlavor)) {\n+      configuredSeriesFlavor = \"dublincore/series\";\n+    }\n+\n+    String episodeFlavorType = configuredEpisodeFlavor.split(\"/\")[0];\n+    String episodeFlavorSubtype = configuredEpisodeFlavor.split(\"/\")[1];\n+    String seriesFlavorType = configuredSeriesFlavor.split(\"/\")[0];\n+    String seriesFlavorSubtype = configuredSeriesFlavor.split(\"/\")[1];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0ODQzOQ==", "bodyText": "indentation", "url": "https://github.com/opencast/opencast/pull/1877#discussion_r496148439", "createdAt": "2020-09-28T18:24:29Z", "author": {"login": "lkiesow"}, "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "diffHunk": "@@ -302,57 +304,87 @@ protected String loadXsl(WorkflowOperationInstance operation) throws WorkflowOpe\n     }\n   }\n \n-  protected String getMetadataXml(MediaPackage mp) {\n-    StaticMetadata metadata = getStaticMetadataService().getMetadata(mp);\n+  protected String getMetadataXml(MediaPackage mp, WorkflowOperationInstance operation) {\n+    //get specified episode/series flavor\n+    String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));\n+    String configuredSeriesFlavor = StringUtils.trimToEmpty(operation.getConfiguration(SERIES_FLAVOR));\n \n+    //use dublincore/episode and dublincore/series metadata-catalogs as default\n+    if ((\"\").equals(configuredEpisodeFlavor)) {\n+      configuredEpisodeFlavor = \"dublincore/episode\";\n+    }\n+    if ((\"\").equals(configuredSeriesFlavor)) {\n+      configuredSeriesFlavor = \"dublincore/series\";\n+    }\n+\n+    String episodeFlavorType = configuredEpisodeFlavor.split(\"/\")[0];\n+    String episodeFlavorSubtype = configuredEpisodeFlavor.split(\"/\")[1];\n+    String seriesFlavorType = configuredSeriesFlavor.split(\"/\")[0];\n+    String seriesFlavorSubtype = configuredSeriesFlavor.split(\"/\")[1];\n+\n+    //Get episode metadata-catalog\n+    Catalog[] catalogs = mp.\n+            getCatalogs(new MediaPackageElementFlavor(episodeFlavorType, StringUtils.lowerCase(episodeFlavorSubtype)));\n+\n+   //load metadata-catalog", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE1MDQ4MQ==", "bodyText": "All these fields can exist not at all or multiple times. Will this work if they do not exist? Onbly using the first is probably okay but should be documented.", "url": "https://github.com/opencast/opencast/pull/1877#discussion_r496150481", "createdAt": "2020-09-28T18:28:13Z", "author": {"login": "lkiesow"}, "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "diffHunk": "@@ -302,57 +304,87 @@ protected String loadXsl(WorkflowOperationInstance operation) throws WorkflowOpe\n     }\n   }\n \n-  protected String getMetadataXml(MediaPackage mp) {\n-    StaticMetadata metadata = getStaticMetadataService().getMetadata(mp);\n+  protected String getMetadataXml(MediaPackage mp, WorkflowOperationInstance operation) {\n+    //get specified episode/series flavor\n+    String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));\n+    String configuredSeriesFlavor = StringUtils.trimToEmpty(operation.getConfiguration(SERIES_FLAVOR));\n \n+    //use dublincore/episode and dublincore/series metadata-catalogs as default\n+    if ((\"\").equals(configuredEpisodeFlavor)) {\n+      configuredEpisodeFlavor = \"dublincore/episode\";\n+    }\n+    if ((\"\").equals(configuredSeriesFlavor)) {\n+      configuredSeriesFlavor = \"dublincore/series\";\n+    }\n+\n+    String episodeFlavorType = configuredEpisodeFlavor.split(\"/\")[0];\n+    String episodeFlavorSubtype = configuredEpisodeFlavor.split(\"/\")[1];\n+    String seriesFlavorType = configuredSeriesFlavor.split(\"/\")[0];\n+    String seriesFlavorSubtype = configuredSeriesFlavor.split(\"/\")[1];\n+\n+    //Get episode metadata-catalog\n+    Catalog[] catalogs = mp.\n+            getCatalogs(new MediaPackageElementFlavor(episodeFlavorType, StringUtils.lowerCase(episodeFlavorSubtype)));\n+\n+   //load metadata-catalog\n+    DublinCoreCatalog dc = DublinCoreUtil.loadDublinCore(getWorkspace(), catalogs[0]);\n+    Map<EName, List<DublinCoreValue>> data = dc.getValues();\n+\n+    //build xml from metadata\n     StringBuilder xml = new StringBuilder();\n     xml.append(\"<metadata xmlns:dcterms=\\\"http://purl.org/dc/terms/\\\">\");\n \n-    for (String title : getFirstMetadataValue(metadata.getTitles()))\n-      appendXml(xml, \"title\", title);\n-    for (String description : getFirstMetadataValue(metadata.getDescription()))\n-      appendXml(xml, \"description\", description);\n-    for (String language : metadata.getLanguage())\n-      appendXml(xml, \"language\", language);\n-    for (Date created : metadata.getCreated())\n-      /* Method formatDate of org.apache.xalan.lib.ExsltDatetime requires the format CCYY-MM-DDThh:mm:ss */\n-      appendXml(xml, \"date\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(created));\n-    for (Date[] period : metadata.getTemporalPeriod()) {\n-      if (period[0] != null) {\n-        appendXml(xml, \"start\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[0]));\n-      }\n-      if (period[1] != null) {\n-        appendXml(xml, \"end\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[1]));\n+    for (Map.Entry<EName, List<DublinCoreValue>> entry : data.entrySet()) {\n+      String currentKey = entry.getKey().getLocalName();\n+      switch(currentKey) {\n+        case \"creator\": appendXml(xml, \"creators\", entry.getValue().get(0).getValue()); break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20318bee86f4da10721e92d9706ac1f880ab4347", "author": {"user": null}, "url": "https://github.com/opencast/opencast/commit/20318bee86f4da10721e92d9706ac1f880ab4347", "committedDate": "2020-10-10T21:25:26Z", "message": "use flavor objects, small style improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b572c4d3d5d79b79113271259143a47c661f214", "author": {"user": null}, "url": "https://github.com/opencast/opencast/commit/4b572c4d3d5d79b79113271259143a47c661f214", "committedDate": "2020-10-10T22:59:42Z", "message": "updated coverimageWOH doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a92cf79d731508e03a3d3a37aad93b416d311641", "author": {"user": null}, "url": "https://github.com/opencast/opencast/commit/a92cf79d731508e03a3d3a37aad93b416d311641", "committedDate": "2021-02-02T13:56:37Z", "message": "added function to include all values of one field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3396c55d966f1c7f4fc547ecdc8dadd23e4f669a", "author": {"user": null}, "url": "https://github.com/opencast/opencast/commit/3396c55d966f1c7f4fc547ecdc8dadd23e4f669a", "committedDate": "2021-02-02T14:17:58Z", "message": "fixed checkstyle violations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d827c5368a3fa6ba02d5fd7fc04b5ebc56da96c", "author": {"user": null}, "url": "https://github.com/opencast/opencast/commit/7d827c5368a3fa6ba02d5fd7fc04b5ebc56da96c", "committedDate": "2021-02-18T00:32:55Z", "message": "resolved merge conflicts"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1768, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}