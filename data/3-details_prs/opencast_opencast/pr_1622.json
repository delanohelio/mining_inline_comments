{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NjIwMjA1", "number": 1622, "title": "Fix LTI Without Persistence", "bodyText": "This patch fixes LTI which was completely broken if persisting user\nreferences were not enabled and partly broken if it was enabled but the\nuser was not yet persisted.\nThis problem was caused by pull request #1532 which this pull request\ncomplete reverts.\nIn addition, this pull request fixes the problem #1532 was originally\nsupposed to fix: On concurrent LTI requests it could happen that\nOpencast would try to create the same user multiple times in parallel.\nThis patch fixes the problem by using an optimistic approach,\ndeliberately allowing an insert to fail, if an entry already exists.\nYour pull request should\u2026\n\n have a concise title\n close an accompanying issue if one exists\n be against the correct branch (features can only go into develop)\n include migration scripts and documentation, if appropriate\n pass automated testing\n have a clean commit history\n have proper commit messages (title and body) for all commits\n have appropriate tags applied", "createdAt": "2020-06-05T17:52:56Z", "url": "https://github.com/opencast/opencast/pull/1622", "merged": true, "mergeCommit": {"oid": "177334e0f03db53499acd29d07a11a45e6dbe4b5"}, "closed": true, "closedAt": "2020-06-08T17:18:03Z", "author": {"login": "lkiesow"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoT0fbgH2gAyNDI4NjIwMjA1OmIyZGZkNjFhYTFjNDYyNDJlYzkzNDYzYzA2YjQ4NjYyOGQzMDhiN2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpStZLgBqjM0MjA4NjI0OTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b2dfd61aa1c46242ec93463c06b486628d308b7e", "author": {"user": {"login": "lkiesow", "name": "Lars Kiesow"}}, "url": "https://github.com/opencast/opencast/commit/b2dfd61aa1c46242ec93463c06b486628d308b7e", "committedDate": "2020-06-05T14:48:35Z", "message": "Reset LTI to 071f935\n\nThis patch resets the LtiLaunchAuthenticationHandler to git commit\n071f935, removing the introduced caching of requests which completely\nbroke LTI without persistent references (the default configuration)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MzUzNjUy", "url": "https://github.com/opencast/opencast/pull/1622#pullrequestreview-426353652", "createdAt": "2020-06-08T15:24:16Z", "commit": {"oid": "b217dfaff4e4417d53a0b1119836fd32543baa5f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNToyNDoxNlrOGgjuAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNToyNDoxNlrOGgjuAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc5MjgzNA==", "bodyText": "IMO the \"scare quotes\" should go, it's considered bad form.", "url": "https://github.com/opencast/opencast/pull/1622#discussion_r436792834", "createdAt": "2020-06-08T15:24:16Z", "author": {"login": "gregorydlogan"}, "path": "modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java", "diffHunk": "@@ -290,42 +280,25 @@ public Authentication createAuthentication(HttpServletRequest request, ConsumerA\n       logger.debug(\"LTI user id is : {}\", username);\n     }\n \n-    UserDetails userDetails = null;\n-    Collection<GrantedAuthority> userAuthorities = new HashSet<>();\n+    UserDetails userDetails;\n+    Collection<GrantedAuthority> userAuthorities;\n     try {\n+      userDetails = userDetailsService.loadUserByUsername(username);\n \n-      userDetailsCache = CacheBuilder.newBuilder().expireAfterWrite(1, TimeUnit.MINUTES).build(new CacheLoader<String, Object>() {\n-\n-        @Override\n-        public Object load(String username) {\n-          logger.trace(\"Loading user '{}' from cache or by service\", username);\n-          UserDetails userDetails = userDetailsService.loadUserByUsername(username);\n-          return userDetails == null ? nullToken : userDetails;\n-        }\n-      });\n-\n-      try {\n-        // use #getUnchecked since the loader does not throw any checked exceptions\n-        userDetails = (UserDetails)userDetailsCache.getUnchecked(username);\n-        if (userDetails != nullToken) {\n-          // userDetails returns a Collection<? extends GrantedAuthority>, which cannot be directly casted to a\n-          // Collection<GrantedAuthority>.\n-          // On the other hand, one cannot add non-null elements or modify the existing ones in a Collection<? extends\n-          // GrantedAuthority>. Therefore, we *must* instantiate a new Collection<GrantedAuthority> (an ArrayList in this\n-          // case) and populate it with whatever elements are returned by getAuthorities()\n-          userAuthorities = new HashSet<>(userDetails.getAuthorities());\n-\n-          // we still need to enrich this user with the LTI Roles\n-          String roles = request.getParameter(ROLES);\n-          String context = request.getParameter(CONTEXT_ID);\n-          enrichRoleGrants(roles, context, userAuthorities);\n-        }\n-      } catch (UncheckedExecutionException e) {\n-        logger.warn(\"Exception while loading UserDetails from cache \" + username, e);\n-      }\n+      // userDetails returns a Collection<? extends GrantedAuthority>, which cannot be directly casted to a\n+      // Collection<GrantedAuthority>.\n+      // On the other hand, one cannot add non-null elements or modify the existing ones in a Collection<? extends\n+      // GrantedAuthority>. Therefore, we *must* instantiate a new Collection<GrantedAuthority> (an ArrayList in this\n+      // case) and populate it with whatever elements are returned by getAuthorities()\n+      userAuthorities = new HashSet<>(userDetails.getAuthorities());\n \n+      // we still need to enrich this user with the LTI Roles\n+      String roles = request.getParameter(ROLES);\n+      String context = request.getParameter(CONTEXT_ID);\n+      enrichRoleGrants(roles, context, userAuthorities);\n     } catch (UsernameNotFoundException e) {\n-      // This user is known to the tool consumer, but not to Opencast. Create a user \"on the fly\"\n+      logger.trace(\"This user is known to the tool consumer, but not to Opencast. Create a user `on the fly`\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b217dfaff4e4417d53a0b1119836fd32543baa5f"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "177334e0f03db53499acd29d07a11a45e6dbe4b5", "author": {"user": {"login": "lkiesow", "name": "Lars Kiesow"}}, "url": "https://github.com/opencast/opencast/commit/177334e0f03db53499acd29d07a11a45e6dbe4b5", "committedDate": "2020-06-08T16:04:24Z", "message": "Fix LTI Without persistence\n\nThis patch fixes LTI which was completely broken if persisting user\nreferences was not enabled and partly broken if it was enabled but the\nuser was not yet persisted.\n\nThis problem was caused by pull request #1532 which this pull request\ncomplete reverts.\n\nIn addition, this pull request fixes the problem #1532 was originally\nsupposed to fix: On concurrent LTI requests it could happen that\nOpencast would try to create the same user multiple times in parallel.\nThis patch fixes the problem by using an optimistic approach,\ndeliberately allowing an insert to fail, if an entry already exist."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b217dfaff4e4417d53a0b1119836fd32543baa5f", "author": {"user": {"login": "lkiesow", "name": "Lars Kiesow"}}, "url": "https://github.com/opencast/opencast/commit/b217dfaff4e4417d53a0b1119836fd32543baa5f", "committedDate": "2020-06-05T17:41:42Z", "message": "Fix LTI Without persistence\n\nThis patch fixes LTI which was completely broken if persisting user\nreferences was not enabled and partly broken if it was enabled but the\nuser was not yet persisted.\n\nThis problem was caused by pull request #1532 which this pull request\ncomplete reverts.\n\nIn addition, this pull request fixes the problem #1532 was originally\nsupposed to fix: On concurrent LTI requests it could happen that\nOpencast would try to create the same user multiple times in parallel.\nThis patch fixes the problem by using an optimistic approach,\ndeliberately allowing an insert to fail, if an entry already exist."}, "afterCommit": {"oid": "177334e0f03db53499acd29d07a11a45e6dbe4b5", "author": {"user": {"login": "lkiesow", "name": "Lars Kiesow"}}, "url": "https://github.com/opencast/opencast/commit/177334e0f03db53499acd29d07a11a45e6dbe4b5", "committedDate": "2020-06-08T16:04:24Z", "message": "Fix LTI Without persistence\n\nThis patch fixes LTI which was completely broken if persisting user\nreferences was not enabled and partly broken if it was enabled but the\nuser was not yet persisted.\n\nThis problem was caused by pull request #1532 which this pull request\ncomplete reverts.\n\nIn addition, this pull request fixes the problem #1532 was originally\nsupposed to fix: On concurrent LTI requests it could happen that\nOpencast would try to create the same user multiple times in parallel.\nThis patch fixes the problem by using an optimistic approach,\ndeliberately allowing an insert to fail, if an entry already exist."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1901, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}