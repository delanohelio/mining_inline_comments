{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2ODMzNTI0", "number": 1764, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMTowNzowM1rOEe2q1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMToxNzowM1rOEe23PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzg4NDM3OnYy", "diffSide": "RIGHT", "path": "etc/org.opencastproject.security.lti.LtiLaunchAuthenticationHandler.cfg", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMTowNzowM1rOHKxYyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOTowMjozN1rOHNFw7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA1Njk3MQ==", "bodyText": "Is the first sentence complete?", "url": "https://github.com/opencast/opencast/pull/1764#discussion_r481056971", "createdAt": "2020-09-01T11:07:03Z", "author": {"login": "mtneug"}, "path": "etc/org.opencastproject.security.lti.LtiLaunchAuthenticationHandler.cfg", "diffHunk": "@@ -61,3 +61,17 @@\n #lti.custom_role_name=Instructor\n #This Role set is an example for a user which can open the editor for an event and upload videos via opencast studio.\n #lti.custom_roles=ROLE_ADMIN_UI,ROLE_API_EVENTS_METADATA_DELETE,ROLE_API_EVENTS_METADATA_EDIT,ROLE_API_EVENTS_METADATA_VIEW,ROLE_UI_EVENTS_DETAILS_COMMENTS_CREATE,ROLE_UI_EVENTS_DETAILS_COMMENTS_DELETE,ROLE_UI_EVENTS_DETAILS_COMMENTS_EDIT,ROLE_UI_EVENTS_DETAILS_COMMENTS_REPLY,ROLE_UI_EVENTS_DETAILS_COMMENTS_RESOLVE,ROLE_UI_EVENTS_DETAILS_COMMENTS_VIEW,ROLE_UI_EVENTS_EDITOR_EDIT,ROLE_UI_EVENTS_EDITOR_VIEW,ROLE_STUDIO\n+\n+# Prefix for LTI context based roles based on OAuth consumer keys.\n+# The LTI context (e.g. the course identifier) is used to generate context roles like \u201c12345_Learner\u201d.\n+# If multiple LTI consumers are used, this can clash, causing users from one consumer to get access to content from\n+# another consumer. The prefix can be used to prevent this by generating context roles like \u201cPREFIX1_123_Learner\u201d and\n+# \u201cPREFIX2_123_Learner\u201d instead.\n+#\n+# Note that context roles starting with \u201cROLE_\u201d in Opencast. Thus, you should not use this as a prefix.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03b4ddefdb9a69856724d39178256c65b1d15896"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4Nzk4MQ==", "bodyText": "fixed", "url": "https://github.com/opencast/opencast/pull/1764#discussion_r483487981", "createdAt": "2020-09-04T09:02:37Z", "author": {"login": "lkiesow"}, "path": "etc/org.opencastproject.security.lti.LtiLaunchAuthenticationHandler.cfg", "diffHunk": "@@ -61,3 +61,17 @@\n #lti.custom_role_name=Instructor\n #This Role set is an example for a user which can open the editor for an event and upload videos via opencast studio.\n #lti.custom_roles=ROLE_ADMIN_UI,ROLE_API_EVENTS_METADATA_DELETE,ROLE_API_EVENTS_METADATA_EDIT,ROLE_API_EVENTS_METADATA_VIEW,ROLE_UI_EVENTS_DETAILS_COMMENTS_CREATE,ROLE_UI_EVENTS_DETAILS_COMMENTS_DELETE,ROLE_UI_EVENTS_DETAILS_COMMENTS_EDIT,ROLE_UI_EVENTS_DETAILS_COMMENTS_REPLY,ROLE_UI_EVENTS_DETAILS_COMMENTS_RESOLVE,ROLE_UI_EVENTS_DETAILS_COMMENTS_VIEW,ROLE_UI_EVENTS_EDITOR_EDIT,ROLE_UI_EVENTS_EDITOR_VIEW,ROLE_STUDIO\n+\n+# Prefix for LTI context based roles based on OAuth consumer keys.\n+# The LTI context (e.g. the course identifier) is used to generate context roles like \u201c12345_Learner\u201d.\n+# If multiple LTI consumers are used, this can clash, causing users from one consumer to get access to content from\n+# another consumer. The prefix can be used to prevent this by generating context roles like \u201cPREFIX1_123_Learner\u201d and\n+# \u201cPREFIX2_123_Learner\u201d instead.\n+#\n+# Note that context roles starting with \u201cROLE_\u201d in Opencast. Thus, you should not use this as a prefix.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA1Njk3MQ=="}, "originalCommit": {"oid": "03b4ddefdb9a69856724d39178256c65b1d15896"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzkxNjEyOnYy", "diffSide": "RIGHT", "path": "modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMToxNzowM1rOHKxrxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwODo0NzoyMlrOHNFPVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA2MTgzMQ==", "bodyText": "The group is never added! Is anybody relying on having groups like ROLE_GROUP_Learner,\nROLE_GROUP_Instructor? I don't think this was advertised. And as far as I know, no role provider adds these roles.\nI suggest to remove the two above lines and create a new PR if this feature is needed.", "url": "https://github.com/opencast/opencast/pull/1764#discussion_r481061831", "createdAt": "2020-09-01T11:17:03Z", "author": {"login": "mtneug"}, "path": "modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java", "diffHunk": "@@ -405,31 +425,27 @@ public Authentication createAuthentication(HttpServletRequest request, ConsumerA\n    * @param userAuthorities\n    *          Collection to append to.\n    */\n-  private void enrichRoleGrants(String roles, String context, Collection<GrantedAuthority> userAuthorities) {\n-    // Roles could be a list\n+  private void enrichRoleGrants(String roles, String context, final String rolePrefix,\n+      Collection<GrantedAuthority> userAuthorities) {\n     if (roles != null) {\n+      // Roles could be a list\n       String[] roleList = roles.split(\",\");\n \n       // Use a generic context and learner if none is given:\n       context = StringUtils.isBlank(context) ? DEFAULT_CONTEXT : context;\n \n-      for (String learner : roleList) {\n+      for (final String ltiRole : roleList) {\n         // Build the role\n-        String role;\n-        String group;\n-        if (learner.equals(customRoleName)) {\n-          for (String rolename : customRoles) {\n-            userAuthorities.add(new SimpleGrantedAuthority(rolename));\n+        if (ltiRole.equals(customRoleName)) {\n+          for (String roleName : customRoles) {\n+            userAuthorities.add(new SimpleGrantedAuthority(roleName));\n           }\n         }\n \n-        if (StringUtils.isBlank(learner)) {\n-          role = context + \"_\" + DEFAULT_LEARNER;\n-        } else {\n-          role = context + \"_\" + learner;\n-          group = \"ROLE_GROUP_\" + learner.toUpperCase();\n-          logger.debug(\"Adding group: {}\", group);\n-        }\n+        final String normalizedLtiRole = StringUtils.defaultIfBlank(ltiRole, DEFAULT_LEARNER);\n+        final String role = rolePrefix + context + \"_\" + normalizedLtiRole;\n+        final String group = \"ROLE_GROUP_\" + rolePrefix + normalizedLtiRole.toUpperCase();\n+        logger.debug(\"Adding group: {}\", group);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03b4ddefdb9a69856724d39178256c65b1d15896"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ3OTM4Mg==", "bodyText": "Interesting. You are right. I just modified the old code where the group role is created:\n\n  \n    \n      opencast/modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java\n    \n    \n        Lines 428 to 432\n      in\n      18e4e5f\n    \n    \n    \n    \n\n        \n          \n           } else { \n        \n\n        \n          \n             role = context + \"_\" + learner; \n        \n\n        \n          \n             group = \"ROLE_GROUP_\" + learner.toUpperCase(); \n        \n\n        \n          \n             logger.debug(\"Adding group: {}\", group); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nBut even here it's never actually used. Will remove it.", "url": "https://github.com/opencast/opencast/pull/1764#discussion_r483479382", "createdAt": "2020-09-04T08:47:22Z", "author": {"login": "lkiesow"}, "path": "modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java", "diffHunk": "@@ -405,31 +425,27 @@ public Authentication createAuthentication(HttpServletRequest request, ConsumerA\n    * @param userAuthorities\n    *          Collection to append to.\n    */\n-  private void enrichRoleGrants(String roles, String context, Collection<GrantedAuthority> userAuthorities) {\n-    // Roles could be a list\n+  private void enrichRoleGrants(String roles, String context, final String rolePrefix,\n+      Collection<GrantedAuthority> userAuthorities) {\n     if (roles != null) {\n+      // Roles could be a list\n       String[] roleList = roles.split(\",\");\n \n       // Use a generic context and learner if none is given:\n       context = StringUtils.isBlank(context) ? DEFAULT_CONTEXT : context;\n \n-      for (String learner : roleList) {\n+      for (final String ltiRole : roleList) {\n         // Build the role\n-        String role;\n-        String group;\n-        if (learner.equals(customRoleName)) {\n-          for (String rolename : customRoles) {\n-            userAuthorities.add(new SimpleGrantedAuthority(rolename));\n+        if (ltiRole.equals(customRoleName)) {\n+          for (String roleName : customRoles) {\n+            userAuthorities.add(new SimpleGrantedAuthority(roleName));\n           }\n         }\n \n-        if (StringUtils.isBlank(learner)) {\n-          role = context + \"_\" + DEFAULT_LEARNER;\n-        } else {\n-          role = context + \"_\" + learner;\n-          group = \"ROLE_GROUP_\" + learner.toUpperCase();\n-          logger.debug(\"Adding group: {}\", group);\n-        }\n+        final String normalizedLtiRole = StringUtils.defaultIfBlank(ltiRole, DEFAULT_LEARNER);\n+        final String role = rolePrefix + context + \"_\" + normalizedLtiRole;\n+        final String group = \"ROLE_GROUP_\" + rolePrefix + normalizedLtiRole.toUpperCase();\n+        logger.debug(\"Adding group: {}\", group);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA2MTgzMQ=="}, "originalCommit": {"oid": "03b4ddefdb9a69856724d39178256c65b1d15896"}, "originalPosition": 117}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3167, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}