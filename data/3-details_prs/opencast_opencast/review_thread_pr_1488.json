{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMTI3OTIx", "number": 1488, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTo1MjoxNVrODq8krg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTo1MjoxNVrODq8krg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MzU5MjE0OnYy", "diffSide": "RIGHT", "path": "etc/encoding/adaptive-streaming-movies.properties", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTo1MjoxNVrOF7AoNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDozMjo0N1rOF8Aixg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQyMDU5OQ==", "bodyText": "Wouldn't force_original_aspect_ratio=decrease and force_divisible_by=2 make way more sense than chaining two scale filters? I know that the latter option is somewhat new but the release of 9.x is also quite some time off.\nEssentially:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              -filter:v crop='floor(iw/2)*2:floor(ih/2)*2',scale='-2:min(ih\\\\,1080)',fps=fps=25 \\\n          \n          \n            \n              -filter:v scale=1920:1080:force_original_aspect_ratio=decrease:force_divisible_by=2,fps=25 \\", "url": "https://github.com/opencast/opencast/pull/1488#discussion_r397420599", "createdAt": "2020-03-24T19:52:15Z", "author": {"login": "lkiesow"}, "path": "etc/encoding/adaptive-streaming-movies.properties", "diffHunk": "@@ -40,7 +40,7 @@ profile.adaptive-1080p.http.suffix = -preview.mp4\n profile.adaptive-1080p.http.ffmpeg.command = -i #{in.video.path} \\\n   -c:v libx264 -crf 23 -maxrate 4000k -bufsize 8000k -profile:v high -level 4.0 -pix_fmt yuv420p \\\n   -x264opts keyint=25:min-keyint=25:no-scenecut -movflags +faststart \\\n-  -filter:v scale='-2:min(ih\\\\,1080)',fps=fps=25 \\\n+  -filter:v crop='floor(iw/2)*2:floor(ih/2)*2',scale='-2:min(ih\\\\,1080)',fps=fps=25 \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3850dcd85d1e241391db756933b982ea573864b4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA4NzczOQ==", "bodyText": "(Your edit should probably say scale=, not crop=.)\nI tried to use force_divisible_by but on my CentOS 7 machine neither the package version of ffmpeg nor the statically linked one from https://johnvansickle.com/ffmpeg/ support it. So I couldn't test that yet.\nTechnically the new profile uses a crop and a scale filter, not two scale filters. I compared execution times with vs without the crop on a video with even width/height. Videos with odd widht or height can't be encoded without the the original profile, so I had nothing to compare it against.\nWithout crop:\nreal    2m3.469s\nuser    3m38.199s\nsys     0m1.443s\n\nWith crop:\nreal    1m56.107s\nuser    3m34.956s\nsys     0m1.481s\n\nSo the crop operation doesn't seem to make a difference performance-wise. Probably because nothing is cropped when using a video with an even width and height.", "url": "https://github.com/opencast/opencast/pull/1488#discussion_r398087739", "createdAt": "2020-03-25T18:43:15Z", "author": {"login": "t-schroeder"}, "path": "etc/encoding/adaptive-streaming-movies.properties", "diffHunk": "@@ -40,7 +40,7 @@ profile.adaptive-1080p.http.suffix = -preview.mp4\n profile.adaptive-1080p.http.ffmpeg.command = -i #{in.video.path} \\\n   -c:v libx264 -crf 23 -maxrate 4000k -bufsize 8000k -profile:v high -level 4.0 -pix_fmt yuv420p \\\n   -x264opts keyint=25:min-keyint=25:no-scenecut -movflags +faststart \\\n-  -filter:v scale='-2:min(ih\\\\,1080)',fps=fps=25 \\\n+  -filter:v crop='floor(iw/2)*2:floor(ih/2)*2',scale='-2:min(ih\\\\,1080)',fps=fps=25 \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQyMDU5OQ=="}, "originalCommit": {"oid": "3850dcd85d1e241391db756933b982ea573864b4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI3Njc0Mg==", "bodyText": "Just wondering: Do you want to get this into 8.x (maybe even 8.3)? If yes, then rebase this against r/8.x and we can leave it like this. The feature I mentioned is too new for that and this could be counted as a bug fix. Note that 8.3 should be released this morning (CET).\n\nIf this is targeted at develop:\nIt's not in the stable but it is in the master build of johnvansickle.com/ffmpeg and it's also in the release which is in Opencast's package repo.\nWith the target release for this probably ending up to be in December, that's more than enough time for that feature to settle and I just think that that filter chain makes more sense ;-)", "url": "https://github.com/opencast/opencast/pull/1488#discussion_r398276742", "createdAt": "2020-03-26T02:08:40Z", "author": {"login": "lkiesow"}, "path": "etc/encoding/adaptive-streaming-movies.properties", "diffHunk": "@@ -40,7 +40,7 @@ profile.adaptive-1080p.http.suffix = -preview.mp4\n profile.adaptive-1080p.http.ffmpeg.command = -i #{in.video.path} \\\n   -c:v libx264 -crf 23 -maxrate 4000k -bufsize 8000k -profile:v high -level 4.0 -pix_fmt yuv420p \\\n   -x264opts keyint=25:min-keyint=25:no-scenecut -movflags +faststart \\\n-  -filter:v scale='-2:min(ih\\\\,1080)',fps=fps=25 \\\n+  -filter:v crop='floor(iw/2)*2:floor(ih/2)*2',scale='-2:min(ih\\\\,1080)',fps=fps=25 \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQyMDU5OQ=="}, "originalCommit": {"oid": "3850dcd85d1e241391db756933b982ea573864b4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ2Nzc4Mg==", "bodyText": "Ok. I rebased this PR against r/8.x and made a new one with your suggested change for develop: #1490", "url": "https://github.com/opencast/opencast/pull/1488#discussion_r398467782", "createdAt": "2020-03-26T10:32:47Z", "author": {"login": "t-schroeder"}, "path": "etc/encoding/adaptive-streaming-movies.properties", "diffHunk": "@@ -40,7 +40,7 @@ profile.adaptive-1080p.http.suffix = -preview.mp4\n profile.adaptive-1080p.http.ffmpeg.command = -i #{in.video.path} \\\n   -c:v libx264 -crf 23 -maxrate 4000k -bufsize 8000k -profile:v high -level 4.0 -pix_fmt yuv420p \\\n   -x264opts keyint=25:min-keyint=25:no-scenecut -movflags +faststart \\\n-  -filter:v scale='-2:min(ih\\\\,1080)',fps=fps=25 \\\n+  -filter:v crop='floor(iw/2)*2:floor(ih/2)*2',scale='-2:min(ih\\\\,1080)',fps=fps=25 \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQyMDU5OQ=="}, "originalCommit": {"oid": "3850dcd85d1e241391db756933b982ea573864b4"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3273, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}