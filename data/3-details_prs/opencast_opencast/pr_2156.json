{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMzAwNDU3", "number": 2156, "title": "Fix Google transcription service indefinite errors generation #1664 #2146", "bodyText": "If media package has been deleted or Google speech to text APIs encounters a problem, The Google transcription service will keep generating errors without stopping.\nThis pull request addresses those issues.\nThis fixes  #1664  #2146\nYour pull request should\u2026\n\n have a concise title\n close an accompanying issue if one exists\n be against the correct branch (features can only go into develop)\n include migration scripts and documentation, if appropriate\n pass automated tests\n have a clean commit history\n have proper commit messages (title and body) for all commits", "createdAt": "2020-12-15T14:40:17Z", "url": "https://github.com/opencast/opencast/pull/2156", "merged": true, "mergeCommit": {"oid": "c87ef69acd1ad2a3dfbc23e0e0129adeab3b2abd"}, "closed": true, "closedAt": "2021-02-02T14:58:51Z", "author": {"login": "tyfranck"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmXfmCgH2gAyNTQwMzAwNDU3OjVlNDgwYjMwMzhhNzk5NTk1MjU1ZjI1MmQ2MDRiNzA5NGQxYzQ0YTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd2M_znAFqTU4MTQzMTUzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5e480b3038a799595255f252d604b7094d1c44a3", "author": {"user": {"login": "tyfranck", "name": "Franck"}}, "url": "https://github.com/opencast/opencast/commit/5e480b3038a799595255f252d604b7094d1c44a3", "committedDate": "2020-12-15T10:08:41Z", "message": "#1664 Stopped Google transcription service generating error indefinitely when mediapackage deleted."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33d0902ae73b4ac4c3e4d3453a08c04edbb075be", "author": {"user": {"login": "tyfranck", "name": "Franck"}}, "url": "https://github.com/opencast/opencast/commit/33d0902ae73b4ac4c3e4d3453a08c04edbb075be", "committedDate": "2020-12-15T10:31:42Z", "message": "#2146 Dead Google transcription jobs are canceled after a time limit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c346f9f8795bc58c5fabc0c80b0ed76fe8f52bb7", "author": {"user": {"login": "tyfranck", "name": "Franck"}}, "url": "https://github.com/opencast/opencast/commit/c346f9f8795bc58c5fabc0c80b0ed76fe8f52bb7", "committedDate": "2020-12-15T10:48:34Z", "message": "Fixed typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc3NDg1MDg4", "url": "https://github.com/opencast/opencast/pull/2156#pullrequestreview-577485088", "createdAt": "2021-01-27T15:51:47Z", "commit": {"oid": "c346f9f8795bc58c5fabc0c80b0ed76fe8f52bb7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QxNTo1MTo0N1rOIbOmZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QxNTo1MTo0N1rOIbOmZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTQyMTY2OA==", "bodyText": "Would it make sense to return true when there is an ERROR level error? Or is it useful to allow manual intervention to troubleshot the issue before cancelling the transcript? I'm wonder why it is better to leave the job in perpetual non-expired state during an exception. For example, maybe an issue with the database connection at that point or the transcription job has not been fully at this point.", "url": "https://github.com/opencast/opencast/pull/2156#discussion_r565421668", "createdAt": "2021-01-27T15:51:47Z", "author": {"login": "karendolan"}, "path": "modules/transcription-service-google-speech-impl/src/main/java/org/opencastproject/transcription/googlespeech/GoogleSpeechTranscriptionService.java", "diffHunk": "@@ -866,6 +870,37 @@ private String buildResultsFileName(String jobId) {\n     return PathSupport.toSafeName(jobId + \".json\");\n   }\n \n+  private void cancelTranscription(String jobId, String message) {\n+    try {\n+      database.updateJobControl(jobId, TranscriptionJobControl.Status.Canceled.name());\n+      String mpId = database.findByJob(jobId).getMediaPackageId();\n+      try {\n+        // Delete file stored on Google storage\n+        String token = getRefreshAccessToken();\n+        deleteStorageFile(mpId, token);\n+      } catch (Exception ex) {\n+        logger.warn(String.format(\"could not delete file %s.%s from Google cloud storage\", mpId, defaultEncoding), ex);\n+      }\n+      // Send notification email\n+      sendEmail(\"Transcription ERROR\", String.format(\"%s(media package %s, job id %s).\", message, mpId, jobId));\n+    } catch (Exception e) {\n+      logger.error(String.format(\"ERROR while deleting transcription job: %s\", jobId), e);\n+    }\n+  }\n+\n+  private boolean hasTranscriptionRequestExpired(String jobId) {\n+    try {\n+      // set a time limit based on video duration and maximum processing time\n+      if (database.findByJob(jobId).getDateCreated().getTime() + database.findByJob(jobId).getTrackDuration()\n+              + (completionCheckBuffer + maxProcessingSeconds) * 1000 < System.currentTimeMillis()) {\n+        return true;\n+      }\n+    } catch (Exception e) {\n+      logger.error(String.format(\"ERROR while calculating transcription request expiration for job: %s\", jobId), e);\n+    }\n+    return false;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c346f9f8795bc58c5fabc0c80b0ed76fe8f52bb7"}, "originalPosition": 114}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc3NDg3MzQ5", "url": "https://github.com/opencast/opencast/pull/2156#pullrequestreview-577487349", "createdAt": "2021-01-27T15:53:48Z", "commit": {"oid": "c346f9f8795bc58c5fabc0c80b0ed76fe8f52bb7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QxNTo1Mzo0OFrOIbOtEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QxNTo1Mzo0OFrOIbOtEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTQyMzM3OA==", "bodyText": "\"Jobs that get here have state TranscriptionCompleted [... or had an IOException]\"", "url": "https://github.com/opencast/opencast/pull/2156#discussion_r565423378", "createdAt": "2021-01-27T15:53:48Z", "author": {"login": "karendolan"}, "path": "modules/transcription-service-google-speech-impl/src/main/java/org/opencastproject/transcription/googlespeech/GoogleSpeechTranscriptionService.java", "diffHunk": "@@ -1014,7 +1048,7 @@ public void run() {\n             // Apply workflow to attach transcripts", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c346f9f8795bc58c5fabc0c80b0ed76fe8f52bb7"}, "originalPosition": 130}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc3NDk0OTc4", "url": "https://github.com/opencast/opencast/pull/2156#pullrequestreview-577494978", "createdAt": "2021-01-27T16:00:42Z", "commit": {"oid": "c346f9f8795bc58c5fabc0c80b0ed76fe8f52bb7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QxNjowMDo0MlrOIbPDEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QxNjowMDo0MlrOIbPDEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTQyOTAxMQ==", "bodyText": "It might be helpful to put the sendMail in a finally block to include the general Exception, or, condense into one try-catch block.", "url": "https://github.com/opencast/opencast/pull/2156#discussion_r565429011", "createdAt": "2021-01-27T16:00:42Z", "author": {"login": "karendolan"}, "path": "modules/transcription-service-google-speech-impl/src/main/java/org/opencastproject/transcription/googlespeech/GoogleSpeechTranscriptionService.java", "diffHunk": "@@ -866,6 +870,37 @@ private String buildResultsFileName(String jobId) {\n     return PathSupport.toSafeName(jobId + \".json\");\n   }\n \n+  private void cancelTranscription(String jobId, String message) {\n+    try {\n+      database.updateJobControl(jobId, TranscriptionJobControl.Status.Canceled.name());\n+      String mpId = database.findByJob(jobId).getMediaPackageId();\n+      try {\n+        // Delete file stored on Google storage\n+        String token = getRefreshAccessToken();\n+        deleteStorageFile(mpId, token);\n+      } catch (Exception ex) {\n+        logger.warn(String.format(\"could not delete file %s.%s from Google cloud storage\", mpId, defaultEncoding), ex);\n+      }\n+      // Send notification email\n+      sendEmail(\"Transcription ERROR\", String.format(\"%s(media package %s, job id %s).\", message, mpId, jobId));\n+    } catch (Exception e) {\n+      logger.error(String.format(\"ERROR while deleting transcription job: %s\", jobId), e);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c346f9f8795bc58c5fabc0c80b0ed76fe8f52bb7"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc3NTQ1MDMw", "url": "https://github.com/opencast/opencast/pull/2156#pullrequestreview-577545030", "createdAt": "2021-01-27T16:47:51Z", "commit": {"oid": "c346f9f8795bc58c5fabc0c80b0ed76fe8f52bb7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QxNjo0Nzo1MlrOIbRU7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QxNjo0Nzo1MlrOIbRU7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTQ2NjM1MA==", "bodyText": "It's too bad that the workflow service is not (or cannot be?) queried here to verify that the mpId still exists when the asset manager has no knowledge of the mpId.  For example, when the event is deleted before Google transcript is attached, a 5 hour timeout plus length of video plus buffer has to be waited through before cancelling the transcript job. .... it might be useful to include the countdown in that Skipped log line. For example\nlogger.warn(\"Media package {} has not been archived yet or has been deleted. Will keep trying for {} more minutes before cancelling transcript job {}.\", mpId, getRemainingTranscriptionExpireTimeInMin(jobId), jobId);", "url": "https://github.com/opencast/opencast/pull/2156#discussion_r565466350", "createdAt": "2021-01-27T16:47:52Z", "author": {"login": "karendolan"}, "path": "modules/transcription-service-google-speech-impl/src/main/java/org/opencastproject/transcription/googlespeech/GoogleSpeechTranscriptionService.java", "diffHunk": "@@ -1043,8 +1077,13 @@ private String startWorkflow(String mpId, String wfDefId, Map<String, String> pa\n     final AQueryBuilder q = assetManager.createQuery();\n     final AResult r = q.select(q.snapshot()).where(q.mediaPackageId(mpId).and(q.version().isLatest())).run();\n     if (r.getSize() == 0) {\n-      // Media package not archived yet.\n-      logger.warn(\"Media package {} has not been archived yet.\", mpId);\n+      if (!hasTranscriptionRequestExpired(jobId)) {\n+        // Media package not archived but still within completion time? Skip until next time.\n+        logger.warn(\"Media package {} has not been archived yet. Skipped.\", mpId);\n+      } else {\n+        // Close transcription job and email admin\n+        cancelTranscription(jobId, \"Transcription job canceled, archived media package not found\");\n+      }\n       return null;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c346f9f8795bc58c5fabc0c80b0ed76fe8f52bb7"}, "originalPosition": 161}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc3ODEyMTA5", "url": "https://github.com/opencast/opencast/pull/2156#pullrequestreview-577812109", "createdAt": "2021-01-27T22:18:54Z", "commit": {"oid": "c346f9f8795bc58c5fabc0c80b0ed76fe8f52bb7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QyMjoxODo1NFrOIbeLtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QyMjoxODo1NFrOIbeLtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTY3Njk4MA==", "bodyText": "It would help to log an INFO that the job is being cancelled, in addition to the email. Since there are 5 hours of retry logs, this would be the one log bringing the logs to closure for this transcription job.\nAlso, IMHO, it would help to add \"Google Transcription\" to the cancelTranscription email text, since the email message is coming from the Google Transcription service (vs IBM Watson Transcription service)", "url": "https://github.com/opencast/opencast/pull/2156#discussion_r565676980", "createdAt": "2021-01-27T22:18:54Z", "author": {"login": "karendolan"}, "path": "modules/transcription-service-google-speech-impl/src/main/java/org/opencastproject/transcription/googlespeech/GoogleSpeechTranscriptionService.java", "diffHunk": "@@ -604,6 +604,10 @@ boolean getAndSaveJobResults(String jobId) throws TranscriptionServiceException,\n     } catch (TranscriptionServiceException e) {\n       throw e;\n     } catch (Exception e) {\n+      if (hasTranscriptionRequestExpired(jobId)) {\n+        // Cancel the job and inform admin\n+        cancelTranscription(jobId, \"Transcription job canceled due to errors\");\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c346f9f8795bc58c5fabc0c80b0ed76fe8f52bb7"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f92811903f87515743cd6c76f4f3bdb61dea8591", "author": {"user": {"login": "tyfranck", "name": "Franck"}}, "url": "https://github.com/opencast/opencast/commit/f92811903f87515743cd6c76f4f3bdb61dea8591", "committedDate": "2021-02-02T14:25:29Z", "message": "fix transcription cancellation delay and log messages following review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgxNDMxNTM4", "url": "https://github.com/opencast/opencast/pull/2156#pullrequestreview-581431538", "createdAt": "2021-02-02T14:57:42Z", "commit": {"oid": "f92811903f87515743cd6c76f4f3bdb61dea8591"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1710, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}