{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNzg3MDc0", "number": 1800, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo1NToyMFrOEnjRWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMzowMjozNVrOEnpSew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTA3ODAwOnYy", "diffSide": "RIGHT", "path": "modules/admin-ui-frontend/app/scripts/shared/partials/modals/registration-modal.html", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo1NToyMFrOHYNRag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo1NToyMFrOHYNRag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE0NTMyMg==", "bodyText": "IMO we need a button here to close the modal.  Having to manually find and hit the X at the top is annoying.", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495145322", "createdAt": "2020-09-25T17:55:20Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/app/scripts/shared/partials/modals/registration-modal.html", "diffHunk": "@@ -0,0 +1,326 @@\n+<section ng-show=\"open\" id=\"registration-modal\" ng-keyup=\"keyUp($event)\"\n+  tabindex=\"1\" class=\"modal active modal-open modal-animation\"\n+  ng-controller=\"RegistrationCtrl\">\n+  <header>\n+    <a ng-show=\"states[state]['buttons']['close']\" ng-click=\"nextState(0)\"\n+      class=\"fa fa-times close-modal\"></a>\n+    <h2 translate=\"ADOPTER_REGISTRATION.MODAL.CAPTION\">\n+      <!--Registration-->\n+    </h2>\n+  </header>\n+\n+  <div ng-show=\"state == 'information'\" class=\"modal-content\"\n+    style=\"display: block;\">\n+    <div class=\"modal-body\">\n+      <div class=\"registration-header\" style=\"padding: 5px 0 15px 0\">\n+        <h2 translate=\"ADOPTER_REGISTRATION.MODAL.INFORMATION_STATE.HEADER\"></h2>\n+      </div>\n+      <div>\n+        <div class=\"row\">\n+          <p translate=\"ADOPTER_REGISTRATION.MODAL.INFORMATION_STATE.INFORMATION_PARAGRAPH_1\"></p>\n+          <br/>\n+          <p translate=\"ADOPTER_REGISTRATION.MODAL.INFORMATION_STATE.INFORMATION_PARAGRAPH_2\"></p>\n+        </div>\n+      </div>\n+    </div>\n+  </div>\n+\n+  <div ng-show=\"state == 'legal_info'\" class=\"modal-content\"\n+    style=\"display: block;\">\n+    <div class=\"modal-body\">\n+      <div>\n+        <div class=\"row\">\n+          <div class=\"scrollbox\">\n+            <ng-include\n+              src=\"'modules/registration/partials/terms-of-use.html'\">\n+              </ng-include>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  </div>\n+\n+  <div ng-show=\"state == 'skip'\" class=\"modal-content\"\n+    style=\"display: block;\">\n+    <div class=\"modal-body\">\n+      <div class=\"registration-header\">\n+        <h2 translate=\"ADOPTER_REGISTRATION.MODAL.SKIP_STATE.HEADER\"></h2>\n+      </div>\n+      <div>\n+        <div class=\"row\">\n+          <p>\n+            <span translate=\"ADOPTER_REGISTRATION.MODAL.SKIP_STATE.TEXT\"></span>\n+            <br />\n+          </p>\n+        </div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTA4NzQ0OnYy", "diffSide": "RIGHT", "path": "modules/admin-ui-frontend/resources/public/org/opencastproject/adminui/languages/lang-en_US.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo1ODo0NlrOHYNXyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo1ODo0NlrOHYNXyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE0Njk1Mg==", "bodyText": "Add'l address information, or additional address info", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495146952", "createdAt": "2020-09-25T17:58:46Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/resources/public/org/opencastproject/adminui/languages/lang-en_US.json", "diffHunk": "@@ -384,6 +389,63 @@\n        \"TITLE\": \"Statistics\"\n      }\n    },\n+   \"ADOPTER_REGISTRATION\": {\n+      \"MODAL\": {\n+         \"CAPTION\": \"Registration\",\n+         \"SKIP\": \"Not now\",\n+         \"CONTINUE\": \"Continue\",\n+         \"BACK\": \"Back\",\n+         \"LEGAL_INFO_STATE\": {\n+           \"HEADER\": \"Terms of Service and Privacy Policy\"\n+         },\n+         \"INFORMATION_STATE\": {\n+           \"HEADER\": \"Thank you for using Opencast!\",\n+           \"INFORMATION_PARAGRAPH_1\": \"Our developers are constantly working to provide you the best possible user experience. For that, we need to know more about who uses Opencast and how it is used. You can help us with a quick registration.\",\n+           \"INFORMATION_PARAGRAPH_2\": \"We highly appreciate any feedback, as even some of the data that we gather about the Opencast usage will help us to create better software, have better chances for additional funding and attract more companies to provide services around Opencast.\"\n+         },\n+         \"FORM_STATE\": {\n+           \"ORGANISATION\": \"Organisation\",\n+           \"DEPARTMENT\": \"Department\",\n+           \"COUNTRY\": \"Country\",\n+           \"POSTAL_CODE\": \"Postal code\",\n+           \"CITY\": \"City\",\n+           \"CONTACT_INFO\": \"Contact information\",\n+           \"GENDER\": \"Gender\",\n+           \"GENDER_MALE\": \"male\",\n+           \"GENDER_FEMALE\": \"female\",\n+           \"FIRST_NAME\": \"First name\",\n+           \"LAST_NAME\": \"Last name\",\n+           \"STREET\": \"Street\",\n+           \"NUMBER\": \"Number\",\n+           \"ADDITIONAL_ADRESS_INFO\": \"Add. adress information\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTA4OTQzOnYy", "diffSide": "RIGHT", "path": "modules/admin-ui-frontend/resources/public/org/opencastproject/adminui/languages/lang-en_US.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo1OToyMFrOHYNY-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo1OToyMFrOHYNY-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE0NzI1Ng==", "bodyText": "Organization is the correct spelling in en_US (ugh ;) )", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495147256", "createdAt": "2020-09-25T17:59:20Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/resources/public/org/opencastproject/adminui/languages/lang-en_US.json", "diffHunk": "@@ -384,6 +389,63 @@\n        \"TITLE\": \"Statistics\"\n      }\n    },\n+   \"ADOPTER_REGISTRATION\": {\n+      \"MODAL\": {\n+         \"CAPTION\": \"Registration\",\n+         \"SKIP\": \"Not now\",\n+         \"CONTINUE\": \"Continue\",\n+         \"BACK\": \"Back\",\n+         \"LEGAL_INFO_STATE\": {\n+           \"HEADER\": \"Terms of Service and Privacy Policy\"\n+         },\n+         \"INFORMATION_STATE\": {\n+           \"HEADER\": \"Thank you for using Opencast!\",\n+           \"INFORMATION_PARAGRAPH_1\": \"Our developers are constantly working to provide you the best possible user experience. For that, we need to know more about who uses Opencast and how it is used. You can help us with a quick registration.\",\n+           \"INFORMATION_PARAGRAPH_2\": \"We highly appreciate any feedback, as even some of the data that we gather about the Opencast usage will help us to create better software, have better chances for additional funding and attract more companies to provide services around Opencast.\"\n+         },\n+         \"FORM_STATE\": {\n+           \"ORGANISATION\": \"Organisation\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTA5MzYzOnYy", "diffSide": "RIGHT", "path": "modules/admin-ui-frontend/resources/public/org/opencastproject/adminui/languages/lang-en_US.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODowMDozOVrOHYNbmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODowMDozOVrOHYNbmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE0NzkzMQ==", "bodyText": "clicking the question mark in the top right corner maybe?", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495147931", "createdAt": "2020-09-25T18:00:39Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/resources/public/org/opencastproject/adminui/languages/lang-en_US.json", "diffHunk": "@@ -384,6 +389,63 @@\n        \"TITLE\": \"Statistics\"\n      }\n    },\n+   \"ADOPTER_REGISTRATION\": {\n+      \"MODAL\": {\n+         \"CAPTION\": \"Registration\",\n+         \"SKIP\": \"Not now\",\n+         \"CONTINUE\": \"Continue\",\n+         \"BACK\": \"Back\",\n+         \"LEGAL_INFO_STATE\": {\n+           \"HEADER\": \"Terms of Service and Privacy Policy\"\n+         },\n+         \"INFORMATION_STATE\": {\n+           \"HEADER\": \"Thank you for using Opencast!\",\n+           \"INFORMATION_PARAGRAPH_1\": \"Our developers are constantly working to provide you the best possible user experience. For that, we need to know more about who uses Opencast and how it is used. You can help us with a quick registration.\",\n+           \"INFORMATION_PARAGRAPH_2\": \"We highly appreciate any feedback, as even some of the data that we gather about the Opencast usage will help us to create better software, have better chances for additional funding and attract more companies to provide services around Opencast.\"\n+         },\n+         \"FORM_STATE\": {\n+           \"ORGANISATION\": \"Organisation\",\n+           \"DEPARTMENT\": \"Department\",\n+           \"COUNTRY\": \"Country\",\n+           \"POSTAL_CODE\": \"Postal code\",\n+           \"CITY\": \"City\",\n+           \"CONTACT_INFO\": \"Contact information\",\n+           \"GENDER\": \"Gender\",\n+           \"GENDER_MALE\": \"male\",\n+           \"GENDER_FEMALE\": \"female\",\n+           \"FIRST_NAME\": \"First name\",\n+           \"LAST_NAME\": \"Last name\",\n+           \"STREET\": \"Street\",\n+           \"NUMBER\": \"Number\",\n+           \"ADDITIONAL_ADRESS_INFO\": \"Add. adress information\",\n+           \"MAIL\": \"Email\",\n+           \"CONTACT_ME\": \"Contact me for updates and secruity issues\",\n+           \"WHICH_DATA_TO_SHARE\": \"Which data do you want to share?\",\n+           \"POLICY_HEADLINE\": \"Privacy policy and terms of use\",\n+           \"USAGE_STATISTICS\": \"Usage statistcs\",\n+           \"ERROR_REPORTS\": \"Error reports\",\n+           \"READ_TERMS_OF_USE_BEFORE\": \"I have read and agree to the\",\n+           \"READ_TERMS_OF_USE_LINK\": \"privacy policy and terms of use\",\n+           \"READ_TERMS_OF_USE_AFTER\": \"\"\n+         },\n+         \"SKIP_STATE\": {\n+           \"HEADER\": \"Maybe next time!\",\n+           \"TEXT\": \"If you want to register later on, you can do that by pressing the help button in the top right corner.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTA5ODQ0OnYy", "diffSide": "RIGHT", "path": "modules/admin-ui-frontend/resources/public/org/opencastproject/adminui/languages/lang-en_US.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODowMjoyMVrOHYNewA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODowMjoyMVrOHYNewA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE0ODczNg==", "bodyText": "Postal/Zip code I think.", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495148736", "createdAt": "2020-09-25T18:02:21Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/resources/public/org/opencastproject/adminui/languages/lang-en_US.json", "diffHunk": "@@ -384,6 +389,63 @@\n        \"TITLE\": \"Statistics\"\n      }\n    },\n+   \"ADOPTER_REGISTRATION\": {\n+      \"MODAL\": {\n+         \"CAPTION\": \"Registration\",\n+         \"SKIP\": \"Not now\",\n+         \"CONTINUE\": \"Continue\",\n+         \"BACK\": \"Back\",\n+         \"LEGAL_INFO_STATE\": {\n+           \"HEADER\": \"Terms of Service and Privacy Policy\"\n+         },\n+         \"INFORMATION_STATE\": {\n+           \"HEADER\": \"Thank you for using Opencast!\",\n+           \"INFORMATION_PARAGRAPH_1\": \"Our developers are constantly working to provide you the best possible user experience. For that, we need to know more about who uses Opencast and how it is used. You can help us with a quick registration.\",\n+           \"INFORMATION_PARAGRAPH_2\": \"We highly appreciate any feedback, as even some of the data that we gather about the Opencast usage will help us to create better software, have better chances for additional funding and attract more companies to provide services around Opencast.\"\n+         },\n+         \"FORM_STATE\": {\n+           \"ORGANISATION\": \"Organisation\",\n+           \"DEPARTMENT\": \"Department\",\n+           \"COUNTRY\": \"Country\",\n+           \"POSTAL_CODE\": \"Postal code\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTEwNzAzOnYy", "diffSide": "RIGHT", "path": "etc/custom.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODowNToxMFrOHYNj7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODowNToxMFrOHYNj7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE1MDA2Mg==", "bodyText": "This should probably be somewhere in opencast.org, right?", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495150062", "createdAt": "2020-09-25T18:05:10Z", "author": {"login": "gregorydlogan"}, "path": "etc/custom.properties", "diffHunk": "@@ -314,6 +314,13 @@ karaf.shutdown.command=3500d4e3-ce93-4ae3-abb4-5e90cef4deb\n # used as fallback.\n karaf.pid.file=${karaf.data}/pid\n \n+######### Adopter statistics #########\n+\n+# The base url for the adopter statistic server.\n+org.opencastproject.adopter.statistic.server.url=http://127.0.0.1:5000/api/1.0/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTExODMwOnYy", "diffSide": "RIGHT", "path": "modules/admin-ui-frontend/app/scripts/modules/registration/partials/terms-of-use.html", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODowODo1NFrOHYNq0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODowODo1NFrOHYNq0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE1MTgyNA==", "bodyText": "installation, and want to remove your information from our records please write an email to", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495151824", "createdAt": "2020-09-25T18:08:54Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/app/scripts/modules/registration/partials/terms-of-use.html", "diffHunk": "@@ -0,0 +1,110 @@\n+\n+<h1 style=\"font-size: x-large;margin-bottom: 15px\"\n+    translate=\"ADOPTER_REGISTRATION.MODAL.LEGAL_INFO_STATE.HEADER\">\n+</h1>\n+\n+<p style=\"padding-bottom: 15px\">\n+  Thank you for using Opencast. We really appreciate your registration.\n+  You can change the data you provided at any time. To do so, go to the \u201cOpencast Registration\u201d\n+  in the menu \u201cHelp\u201d of the administrative user interface. If you deleted your Opencast\n+  installation, want to remove your account but cannot anymore, please write an email to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTExOTcxOnYy", "diffSide": "RIGHT", "path": "modules/admin-ui-frontend/app/scripts/modules/registration/partials/terms-of-use.html", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODowOToyMFrOHYNrow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODowOToyMFrOHYNrow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE1MjAzNQ==", "bodyText": "Who's checking this email? :)", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495152035", "createdAt": "2020-09-25T18:09:20Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/app/scripts/modules/registration/partials/terms-of-use.html", "diffHunk": "@@ -0,0 +1,110 @@\n+\n+<h1 style=\"font-size: x-large;margin-bottom: 15px\"\n+    translate=\"ADOPTER_REGISTRATION.MODAL.LEGAL_INFO_STATE.HEADER\">\n+</h1>\n+\n+<p style=\"padding-bottom: 15px\">\n+  Thank you for using Opencast. We really appreciate your registration.\n+  You can change the data you provided at any time. To do so, go to the \u201cOpencast Registration\u201d\n+  in the menu \u201cHelp\u201d of the administrative user interface. If you deleted your Opencast\n+  installation, want to remove your account but cannot anymore, please write an email to\n+  support@opencast.org.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTEyMjUxOnYy", "diffSide": "RIGHT", "path": "modules/admin-ui-frontend/app/scripts/modules/registration/partials/terms-of-use.html", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODoxMDowOFrOHYNtOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODoxMDowOFrOHYNtOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE1MjQ0MQ==", "bodyText": "Remove the trailing comma here.", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495152441", "createdAt": "2020-09-25T18:10:08Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/app/scripts/modules/registration/partials/terms-of-use.html", "diffHunk": "@@ -0,0 +1,110 @@\n+\n+<h1 style=\"font-size: x-large;margin-bottom: 15px\"\n+    translate=\"ADOPTER_REGISTRATION.MODAL.LEGAL_INFO_STATE.HEADER\">\n+</h1>\n+\n+<p style=\"padding-bottom: 15px\">\n+  Thank you for using Opencast. We really appreciate your registration.\n+  You can change the data you provided at any time. To do so, go to the \u201cOpencast Registration\u201d\n+  in the menu \u201cHelp\u201d of the administrative user interface. If you deleted your Opencast\n+  installation, want to remove your account but cannot anymore, please write an email to\n+  support@opencast.org.\n+</p>\n+\n+<p style=\"padding-bottom: 15px\">\n+  Although Opencast is free, open-source software it is important for us,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTEyNTY2OnYy", "diffSide": "RIGHT", "path": "modules/admin-ui-frontend/app/scripts/modules/registration/partials/terms-of-use.html", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODoxMDo1MFrOHYNu9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODoxMDo1MFrOHYNu9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE1Mjg4NA==", "bodyText": "Include a link to the map here.", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495152884", "createdAt": "2020-09-25T18:10:50Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/app/scripts/modules/registration/partials/terms-of-use.html", "diffHunk": "@@ -0,0 +1,110 @@\n+\n+<h1 style=\"font-size: x-large;margin-bottom: 15px\"\n+    translate=\"ADOPTER_REGISTRATION.MODAL.LEGAL_INFO_STATE.HEADER\">\n+</h1>\n+\n+<p style=\"padding-bottom: 15px\">\n+  Thank you for using Opencast. We really appreciate your registration.\n+  You can change the data you provided at any time. To do so, go to the \u201cOpencast Registration\u201d\n+  in the menu \u201cHelp\u201d of the administrative user interface. If you deleted your Opencast\n+  installation, want to remove your account but cannot anymore, please write an email to\n+  support@opencast.org.\n+</p>\n+\n+<p style=\"padding-bottom: 15px\">\n+  Although Opencast is free, open-source software it is important for us,\n+  to know how Opencast is used. For instance, hardware vendors want to know how\n+  large the market is before they make their devices Opencast compatible. Even public\n+  funding for further development relies on such data.\n+</p>\n+\n+<p style=\"padding-bottom: 15px\">\n+  Note that you can choose which data you want to provide and do not have to\n+  agree to sending data from all categories.\n+</p>\n+\n+\n+\n+<h1 style=\"font-size: x-large;margin: 15px 0\">\n+  What Happens With Your Data\n+</h1>\n+\n+<p style=\"padding-bottom: 10px; font-weight: bold\">\n+  <span>Personal/Organizational Data</span>\n+</p>\n+\n+<p style=\"padding-bottom: 15px\">\n+  If provided, we will publish the name of your institution on opencast.org and set\n+  a geographical marker for your institution on the Opencast adopter\u2019s map.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTE0NjkxOnYy", "diffSide": "RIGHT", "path": "modules/admin-ui-frontend/app/scripts/modules/registration/partials/terms-of-use.html", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODoxNzoyMVrOHYN7Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODoxNzoyMVrOHYN7Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE1NjA1OQ==", "bodyText": "any feedback.  We will use this data to help us build a better Opencast, and attract additional funding and corporate interest to the Opencast community.", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495156059", "createdAt": "2020-09-25T18:17:21Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/app/scripts/modules/registration/partials/terms-of-use.html", "diffHunk": "@@ -0,0 +1,110 @@\n+\n+<h1 style=\"font-size: x-large;margin-bottom: 15px\"\n+    translate=\"ADOPTER_REGISTRATION.MODAL.LEGAL_INFO_STATE.HEADER\">\n+</h1>\n+\n+<p style=\"padding-bottom: 15px\">\n+  Thank you for using Opencast. We really appreciate your registration.\n+  You can change the data you provided at any time. To do so, go to the \u201cOpencast Registration\u201d\n+  in the menu \u201cHelp\u201d of the administrative user interface. If you deleted your Opencast\n+  installation, want to remove your account but cannot anymore, please write an email to\n+  support@opencast.org.\n+</p>\n+\n+<p style=\"padding-bottom: 15px\">\n+  Although Opencast is free, open-source software it is important for us,\n+  to know how Opencast is used. For instance, hardware vendors want to know how\n+  large the market is before they make their devices Opencast compatible. Even public\n+  funding for further development relies on such data.\n+</p>\n+\n+<p style=\"padding-bottom: 15px\">\n+  Note that you can choose which data you want to provide and do not have to\n+  agree to sending data from all categories.\n+</p>\n+\n+\n+\n+<h1 style=\"font-size: x-large;margin: 15px 0\">\n+  What Happens With Your Data\n+</h1>\n+\n+<p style=\"padding-bottom: 10px; font-weight: bold\">\n+  <span>Personal/Organizational Data</span>\n+</p>\n+\n+<p style=\"padding-bottom: 15px\">\n+  If provided, we will publish the name of your institution on opencast.org and set\n+  a geographical marker for your institution on the Opencast adopter\u2019s map.\n+</p>\n+\n+<p style=\"padding-bottom: 10px; font-weight: bold\">\n+  <span>Usage Statistics and Technical Data</span>\n+</p>\n+\n+<p style=\"padding-bottom: 15px\">\n+  This data is anonymized and will be stored without any relation to your organizational\n+  or personal data. The data will be sent in a regular interval. The data sent may include\n+  the following information:\n+</p>\n+\n+<ul style=\"padding-left: 30px; list-style: disc; padding-bottom: 15px; color: #333\">\n+  <li>A timestamp at which this data has been created</li>\n+  <li>An identifier marking the data source but is impossible\n+    to link to your personal or organizational data\n+  </li>\n+  <li>The number and status of events in your Opencast system</li>\n+  <li>The total duration of all media in your Opencast system</li>\n+  <li>The number of series in your Opencast system</li>\n+  <li>The number of capture agents connected to your Opencast system</li>\n+  <li>The version of your Opencast system</li>\n+  <li>Technical data regarding servers in your Opencast system\n+    <ul style=\"padding-left: 80px; list-style: circle\">\n+      <li>A unique anonymous identifier for each server</li>\n+      <li>The number of CPU cores of each server</li>\n+      <li>The system memory of each server</li>\n+      <li>The disk space of each server</li>\n+      <li>The Opencast services running on each server</li>\n+    </ul>\n+  </li>\n+</ul>\n+\n+<p style=\"padding-bottom: 10px; font-weight: bold\">\n+  <span>Error Reports</span>\n+</p>\n+\n+<p style=\"padding-bottom: 15px\">\n+  Error reports can be automatically sent so that we can monitor if there\n+  are systematic errors within Opencast that were not detected in our QA.\n+</p>\n+\n+<p style=\"padding-bottom: 15px\">\n+  Note that this data will be linked to your organization so that we are\n+  able to warn you in case we found a critical behavior. The error reports\n+  may also contain information about your content. This data will not be public.\n+  It will only be accessible to Opencast committers.\n+</p>\n+\n+<p style=\"padding-bottom: 10px\">\n+  The data sent may include the following information:\n+</p>\n+\n+<ul style=\"padding-left: 30px; list-style: disc; padding-bottom: 15px; color: #333\">\n+  <li><span>Stack traces</span></li>\n+  <li>Error messages</li>\n+  <li>A timestamp when the error occurred</li>\n+  <li>The Opencast version</li>\n+</ul>\n+\n+\n+\n+<h1 style=\"font-size: x-large;margin: 15px 0\">\n+  Thanks!\n+</h1>\n+\n+<p style=\"padding-bottom: 25px\">\n+  We highly appreciate any feedback, as even some of the data that we gather", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTE1MTI4OnYy", "diffSide": "RIGHT", "path": "modules/admin-ui-frontend/app/scripts/shared/controllers/applicationController.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODoxODo0OFrOHYN-Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODoxODo0OFrOHYN-Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE1Njc2Mw==", "bodyText": "Generally we use the longer form here.", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495156763", "createdAt": "2020-09-25T18:18:48Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/app/scripts/shared/controllers/applicationController.js", "diffHunk": "@@ -105,6 +107,21 @@ angular.module('adminNg.controllers')\n       });\n     }\n \n+    AdopterRegistrationResource.get({}, function(adopter) {\n+      if(adopter.dateModified == null) {\n+        ResourceModal.show('registration-modal');\n+        return;\n+      }\n+      if(adopter.registered === false) {\n+        var now = new Date();\n+        var lastModified = new Date(adopter.dateModified);\n+        var numberOfDaysPassed = Math.ceil((now - lastModified) / 8.64e7);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTE2MTcyOnYy", "diffSide": "RIGHT", "path": "modules/admin-ui-frontend/app/scripts/modules/registration/controllers/registrationController.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODoyMjoxNlrOHYOEpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjozNjowOVrOHYV7Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE1ODQzOA==", "bodyText": "I was able to save the form giving only my name, country, org, and city while also selecting the please-contact-me box -> no way to contact anyone with just that information :)", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495158438", "createdAt": "2020-09-25T18:22:16Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/app/scripts/modules/registration/controllers/registrationController.js", "diffHunk": "@@ -0,0 +1,120 @@\n+/**\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ *\n+ * The Apereo Foundation licenses this file to you under the Educational\n+ * Community License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License\n+ * at:\n+ *\n+ *   http://opensource.org/licenses/ecl2.txt\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+'use strict';\n+\n+// Controller for creating a new event. This is a wizard, so it implements a state machine design pattern.\n+angular.module('adminNg.controllers')\n+.controller('RegistrationCtrl', ['$scope', '$timeout', 'Table', 'AdopterRegistrationStates',\n+  'AdopterRegistrationResource', 'CountryResource', 'NewEventStates', 'NewEventResource', 'EVENT_TAB_CHANGE',\n+  'Notifications', 'Modal', 'AuthService',\n+  function ($scope, $timeout, Table, AdopterRegistrationStates, AdopterRegistrationResource, CountryResource,\n+    NewEventStates, NewEventResource, EVENT_TAB_CHANGE, Notifications, Modal, AuthService) {\n+\n+    $scope.state = AdopterRegistrationStates.getInitialState($scope.$parent.resourceId);\n+    $scope.states = AdopterRegistrationStates.get($scope.$parent.resourceId);\n+    $scope.countries = CountryResource.getCountries();\n+    $scope.adopter = new AdopterRegistrationResource();\n+\n+    document.getElementById('help-dd').classList.remove('active');\n+\n+    // Filling the form fields\n+    AdopterRegistrationResource.get({}, function (adopter) {\n+      for (var field in adopter) {\n+        if(field === 'registered') {\n+          $scope.registered = adopter[field];\n+          continue;\n+        }\n+        $scope.adopter[field] = adopter[field];\n+      }\n+    });\n+\n+\n+    $scope.nextState = function (inputAction) {\n+      if ($scope.state === 'form' && (inputAction === 1 || inputAction === 3)) { // 1:Save, 3:Update\n+        if ($scope.adopterRegistrationForm.$invalid || !$scope.adopter.agreedToPolicy) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI4NzEzNQ==", "bodyText": "The modal will close with zero input as well, so I'm guessing this is either a deliberate design choice, or validation isnt' working at all.", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495287135", "createdAt": "2020-09-25T22:36:09Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/app/scripts/modules/registration/controllers/registrationController.js", "diffHunk": "@@ -0,0 +1,120 @@\n+/**\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ *\n+ * The Apereo Foundation licenses this file to you under the Educational\n+ * Community License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License\n+ * at:\n+ *\n+ *   http://opensource.org/licenses/ecl2.txt\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+'use strict';\n+\n+// Controller for creating a new event. This is a wizard, so it implements a state machine design pattern.\n+angular.module('adminNg.controllers')\n+.controller('RegistrationCtrl', ['$scope', '$timeout', 'Table', 'AdopterRegistrationStates',\n+  'AdopterRegistrationResource', 'CountryResource', 'NewEventStates', 'NewEventResource', 'EVENT_TAB_CHANGE',\n+  'Notifications', 'Modal', 'AuthService',\n+  function ($scope, $timeout, Table, AdopterRegistrationStates, AdopterRegistrationResource, CountryResource,\n+    NewEventStates, NewEventResource, EVENT_TAB_CHANGE, Notifications, Modal, AuthService) {\n+\n+    $scope.state = AdopterRegistrationStates.getInitialState($scope.$parent.resourceId);\n+    $scope.states = AdopterRegistrationStates.get($scope.$parent.resourceId);\n+    $scope.countries = CountryResource.getCountries();\n+    $scope.adopter = new AdopterRegistrationResource();\n+\n+    document.getElementById('help-dd').classList.remove('active');\n+\n+    // Filling the form fields\n+    AdopterRegistrationResource.get({}, function (adopter) {\n+      for (var field in adopter) {\n+        if(field === 'registered') {\n+          $scope.registered = adopter[field];\n+          continue;\n+        }\n+        $scope.adopter[field] = adopter[field];\n+      }\n+    });\n+\n+\n+    $scope.nextState = function (inputAction) {\n+      if ($scope.state === 'form' && (inputAction === 1 || inputAction === 3)) { // 1:Save, 3:Update\n+        if ($scope.adopterRegistrationForm.$invalid || !$scope.adopter.agreedToPolicy) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE1ODQzOA=="}, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTk4NTE4OnYy", "diffSide": "RIGHT", "path": "modules/adopter-statistics-impl/src/main/java/org/opencastproject/adopter/registration/AdopterRegistrationServiceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjo0MDo0M1rOHYWFqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjo0MDo0M1rOHYWFqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI4OTc2OQ==", "bodyText": "Since this is new code we should use the new style DI bits.  Take a look at #1771 for an example.  I'll omit further comments on this.", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495289769", "createdAt": "2020-09-25T22:40:43Z", "author": {"login": "gregorydlogan"}, "path": "modules/adopter-statistics-impl/src/main/java/org/opencastproject/adopter/registration/AdopterRegistrationServiceImpl.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/**\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ *\n+ * The Apereo Foundation licenses this file to you under the Educational\n+ * Community License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License\n+ * at:\n+ *\n+ *   http://opensource.org/licenses/ecl2.txt\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+package org.opencastproject.adopter.registration;\n+\n+import org.opencastproject.security.api.SecurityService;\n+\n+/**\n+ * This service is used for registration and retrieving form data for\n+ * the logged in user in the context of adopter statistics.\n+ */\n+public class AdopterRegistrationServiceImpl implements Service {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTk4NzIwOnYy", "diffSide": "RIGHT", "path": "modules/adopter-statistics-impl/src/main/java/org/opencastproject/adopter/registration/Controller.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjo0MToyNVrOHYWG-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjo0MToyNVrOHYWG-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI5MDEwNw==", "bodyText": "This should be named something like AdopterStatisticsRegistrationEndpoint to align with the rest of the code.", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495290107", "createdAt": "2020-09-25T22:41:25Z", "author": {"login": "gregorydlogan"}, "path": "modules/adopter-statistics-impl/src/main/java/org/opencastproject/adopter/registration/Controller.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/**\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ *\n+ * The Apereo Foundation licenses this file to you under the Educational\n+ * Community License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License\n+ * at:\n+ *\n+ *   http://opensource.org/licenses/ecl2.txt\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+package org.opencastproject.adopter.registration;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_OK;\n+import static org.opencastproject.util.RestUtil.R.ok;\n+import static org.opencastproject.util.RestUtil.R.serverError;\n+\n+import org.opencastproject.util.doc.rest.RestQuery;\n+import org.opencastproject.util.doc.rest.RestResponse;\n+import org.opencastproject.util.doc.rest.RestService;\n+\n+import com.google.gson.Gson;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+/**\n+ * The REST endpoint for the adopter statistics service.\n+ */\n+@Path(\"/\")\n+@RestService(name = \"registrationController\",\n+        title = \"Adopter Statistics Registration Service Endpoint\",\n+        abstractText = \"Rest Endpoint for the registration form.\",\n+        notes = {\"Provides operations regarding the adopter registration form\"})\n+public class Controller {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTk5Njg4OnYy", "diffSide": "RIGHT", "path": "modules/adopter-statistics-impl/src/main/java/org/opencastproject/adopter/registration/Controller.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjo0NDoxMVrOHYWNJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjo0NDoxMVrOHYWNJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI5MTY4Nw==", "bodyText": "I don't see a setter for docs, does this work?", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495291687", "createdAt": "2020-09-25T22:44:11Z", "author": {"login": "gregorydlogan"}, "path": "modules/adopter-statistics-impl/src/main/java/org/opencastproject/adopter/registration/Controller.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/**\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ *\n+ * The Apereo Foundation licenses this file to you under the Educational\n+ * Community License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License\n+ * at:\n+ *\n+ *   http://opensource.org/licenses/ecl2.txt\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+package org.opencastproject.adopter.registration;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_OK;\n+import static org.opencastproject.util.RestUtil.R.ok;\n+import static org.opencastproject.util.RestUtil.R.serverError;\n+\n+import org.opencastproject.util.doc.rest.RestQuery;\n+import org.opencastproject.util.doc.rest.RestResponse;\n+import org.opencastproject.util.doc.rest.RestService;\n+\n+import com.google.gson.Gson;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.servlet.http.HttpServletResponse;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+/**\n+ * The REST endpoint for the adopter statistics service.\n+ */\n+@Path(\"/\")\n+@RestService(name = \"registrationController\",\n+        title = \"Adopter Statistics Registration Service Endpoint\",\n+        abstractText = \"Rest Endpoint for the registration form.\",\n+        notes = {\"Provides operations regarding the adopter registration form\"})\n+public class Controller {\n+\n+  /** The logger */\n+  private static final Logger logger = LoggerFactory.getLogger(Controller.class);\n+\n+  /** The JSON parser */\n+  private static final Gson gson = new Gson();\n+\n+  /** The rest docs */\n+  protected String docs;\n+\n+  /** The service that provides methods for the registration */\n+  protected Service registrationService;\n+\n+  /** OSGi setter for the registration service */\n+  public void setRegistrationService(Service registrationService) {\n+    this.registrationService = registrationService;\n+  }\n+\n+\n+  @GET\n+  @Path(\"registration\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @RestQuery(name = \"getregistrationform\", description = \"GETs the adopter registration data.\", responses = {\n+          @RestResponse(description = \"Retrieved registration data.\",\n+                        responseCode = HttpServletResponse.SC_OK),\n+          @RestResponse(description = \"Error while retrieving adopter registration data.\",\n+                        responseCode = HttpServletResponse.SC_INTERNAL_SERVER_ERROR) },\n+                        returnDescription = \"GETs the adopter registration data.\")\n+  public String getRegistrationForm() {\n+    logger.info(\"Retrieving adopter registration data.\");\n+    return gson.toJson(registrationService.retrieveFormData());\n+  }\n+\n+\n+  @POST\n+  @Path(\"registration\")\n+  @Consumes({MediaType.TEXT_PLAIN, MediaType.APPLICATION_JSON})\n+  @Produces(MediaType.APPLICATION_JSON)\n+  @RestQuery(name = \"saveregistrationform\", description = \"Saves the adopter registration data.\",\n+             returnDescription = \"Status\", responses = {\n+          @RestResponse(responseCode = SC_OK,\n+                  description = \"Adopter registration data saved.\"),\n+          @RestResponse(responseCode = SC_BAD_REQUEST,\n+                  description = \"Couldn't save adopter registration data.\")})\n+  public Response register(String data) {\n+    logger.info(\"Saving adopter registration data.\");\n+    Form form = gson.fromJson(data, Form.class);\n+    try {\n+      registrationService.saveFormData(form);\n+    } catch (Exception e) {\n+      logger.error(\"Error while saving adopter registration data.\", e);\n+      return Response.serverError().build();\n+    }\n+    return Response.ok().build();\n+  }\n+\n+\n+  @DELETE\n+  @Path(\"registration\")\n+  @RestQuery(name = \"deleteregistrationform\", description = \"Deletes the adopter registration data\", responses = {\n+          @RestResponse(description = \"Successful deleted form data.\",\n+                  responseCode = HttpServletResponse.SC_OK),\n+          @RestResponse(description = \"Error while deleting adopter registration data.\",\n+                  responseCode = HttpServletResponse.SC_INTERNAL_SERVER_ERROR) },\n+          returnDescription = \"DELETEs the adopter registration data.\")\n+  public Response deleteRegistrationData() {\n+    logger.info(\"Deleting adopter registration data.\");\n+    try {\n+      registrationService.deleteFormData();\n+      return ok();\n+    } catch (Exception e) {\n+      logger.error(\"Error while deleting adopter registration data.\", e);\n+      return serverError();\n+    }\n+  }\n+\n+\n+  @GET\n+  @Produces(MediaType.TEXT_HTML)\n+  @Path(\"docs\")\n+  public String getDocs() {\n+    return docs;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMDAwNDI5OnYy", "diffSide": "RIGHT", "path": "modules/adopter-statistics-impl/src/main/java/org/opencastproject/adopter/registration/Form.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjo0NjowOFrOHYWR4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjo0NjowOFrOHYWR4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI5Mjg5OA==", "bodyText": "These should have their lengths specified explicitly IMO.", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495292898", "createdAt": "2020-09-25T22:46:08Z", "author": {"login": "gregorydlogan"}, "path": "modules/adopter-statistics-impl/src/main/java/org/opencastproject/adopter/registration/Form.java", "diffHunk": "@@ -0,0 +1,326 @@\n+/**\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ *\n+ * The Apereo Foundation licenses this file to you under the Educational\n+ * Community License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License\n+ * at:\n+ *\n+ *   http://opensource.org/licenses/ecl2.txt\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+package org.opencastproject.adopter.registration;\n+\n+import org.opencastproject.security.api.Organization;\n+import org.opencastproject.util.EqualsUtil;\n+\n+import java.util.Date;\n+\n+import javax.persistence.Access;\n+import javax.persistence.AccessType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.NamedQueries;\n+import javax.persistence.NamedQuery;\n+import javax.persistence.Table;\n+import javax.persistence.Temporal;\n+import javax.persistence.TemporalType;\n+\n+/**\n+ * JPA-annotated registration form object.\n+ */\n+@Entity\n+@Access(AccessType.FIELD)\n+@Table(name = \"oc_adopter_registration\")\n+@NamedQueries({\n+        @NamedQuery(name = \"Form.findAll\", query = \"SELECT f FROM Form f\"),\n+        @NamedQuery(name = \"Form.deleteAll\", query = \"DELETE FROM Form f\")\n+})\n+public class Form implements IForm {\n+\n+\n+  //================================================================================\n+  // Properties\n+  //================================================================================\n+\n+  @Id\n+  @Column(name = \"adopter_key\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMDAxNTQ3OnYy", "diffSide": "RIGHT", "path": "modules/adopter-statistics-impl/src/main/java/org/opencastproject/adopter/registration/FormRepositoryImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjo0OToyMFrOHYWZUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjo0OToyMFrOHYWZUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI5NDgwMA==", "bodyText": "tx can be null at this point.", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495294800", "createdAt": "2020-09-25T22:49:20Z", "author": {"login": "gregorydlogan"}, "path": "modules/adopter-statistics-impl/src/main/java/org/opencastproject/adopter/registration/FormRepositoryImpl.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ *\n+ * The Apereo Foundation licenses this file to you under the Educational\n+ * Community License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License\n+ * at:\n+ *\n+ *   http://opensource.org/licenses/ecl2.txt\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+package org.opencastproject.adopter.registration;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Date;\n+import java.util.UUID;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityManagerFactory;\n+import javax.persistence.EntityTransaction;\n+import javax.persistence.NoResultException;\n+import javax.persistence.TypedQuery;\n+\n+/**\n+ * Repository that handles registration forms for the adopter statistics.\n+ */\n+public class FormRepositoryImpl implements FormRepository {\n+\n+  /** The logger */\n+  private static final Logger logger = LoggerFactory.getLogger(FormRepository.class);\n+\n+  /** The factory for creating the entity manager. */\n+  protected EntityManagerFactory emf = null;\n+\n+  /** OSGi setter for the entity manager factory. */\n+  void setEntityManagerFactory(EntityManagerFactory emf) {\n+    this.emf = emf;\n+  }\n+\n+\n+  //================================================================================\n+  // Methods\n+  //================================================================================\n+\n+  @Override\n+  public void save(IForm f) throws FormRepositoryException {\n+    Form form = (Form) f;\n+    EntityManager em = null;\n+    EntityTransaction tx = null;\n+    try {\n+      em = emf.createEntityManager();\n+      tx = em.getTransaction();\n+      tx.begin();\n+      Form dbForm = getForm(em);\n+      if (dbForm == null) {\n+        // Null means, that there is no entry in the DB yet, so we create UUIDs for the keys.\n+        form.setAdopterKey(UUID.randomUUID().toString());\n+        form.setStatisticKey(UUID.randomUUID().toString());\n+        form.setDateCreated(new Date());\n+        form.setDateModified(new Date());\n+        em.persist(form);\n+      } else {\n+        dbForm.merge(form);\n+        em.merge(dbForm);\n+      }\n+      tx.commit();\n+    } catch (Exception e) {\n+      logger.error(\"Couldn't update the adopter statistics registration form: {}\", e.getMessage());\n+      if (tx.isActive()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMDA2MDE2OnYy", "diffSide": "RIGHT", "path": "modules/adopter-statistics-impl/src/main/java/org/opencastproject/adopter/statistic/Sender.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMzowMTozMlrOHYW2DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMzowMTozMlrOHYW2DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTMwMjE1Ng==", "bodyText": "I would encourage the use of UrlSupport for this kind of thing.", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495302156", "createdAt": "2020-09-25T23:01:32Z", "author": {"login": "gregorydlogan"}, "path": "modules/adopter-statistics-impl/src/main/java/org/opencastproject/adopter/statistic/Sender.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/**\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ *\n+ * The Apereo Foundation licenses this file to you under the Educational\n+ * Community License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License\n+ * at:\n+ *\n+ *   http://opensource.org/licenses/ecl2.txt\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+package org.opencastproject.adopter.statistic;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.BufferedReader;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.OutputStream;\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+import java.nio.charset.StandardCharsets;\n+\n+/**\n+ * Contains methods for sending statistic data via rest.\n+ */\n+public class Sender {\n+\n+  /** The logger */\n+  private static final Logger logger = LoggerFactory.getLogger(Sender.class);\n+\n+  /** The base URL for the external server where the data will be send to */\n+  private String baseUrl;\n+\n+  // The suffixes for the base statistic server URL\n+  // they determine to which REST endpoint the data will be sent\n+  private static final String GENERAL_DATA_URL_SUFFIX = \"adopter\";\n+  private static final String STATISTIC_URL_SUFFIX = \"statistic\";\n+\n+  //================================================================================\n+  // Constructor\n+  //================================================================================\n+\n+  /**\n+   * Simple Constructor that requires the URL of the statistic server.\n+   * @param statisticServerBaseUrl The URL prefix of the statistic server.\n+   */\n+  public Sender(String statisticServerBaseUrl) {\n+    if (!statisticServerBaseUrl.endsWith(\"/\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMDA2Mzk1OnYy", "diffSide": "RIGHT", "path": "modules/adopter-statistics-impl/src/main/java/org/opencastproject/adopter/statistic/Sender.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMzowMjozNVrOHYW4ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMzowMjozNVrOHYW4ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTMwMjc5NA==", "bodyText": "Let's replace this logic with something like\nboolean errorOccurred = con.getResponseCode() < 200 || con.getResponseCode() >= 300", "url": "https://github.com/opencast/opencast/pull/1800#discussion_r495302794", "createdAt": "2020-09-25T23:02:35Z", "author": {"login": "gregorydlogan"}, "path": "modules/adopter-statistics-impl/src/main/java/org/opencastproject/adopter/statistic/Sender.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/**\n+ * Licensed to The Apereo Foundation under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ *\n+ * The Apereo Foundation licenses this file to you under the Educational\n+ * Community License, Version 2.0 (the \"License\"); you may not use this file\n+ * except in compliance with the License. You may obtain a copy of the License\n+ * at:\n+ *\n+ *   http://opensource.org/licenses/ecl2.txt\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ *\n+ */\n+\n+package org.opencastproject.adopter.statistic;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.BufferedReader;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.OutputStream;\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+import java.nio.charset.StandardCharsets;\n+\n+/**\n+ * Contains methods for sending statistic data via rest.\n+ */\n+public class Sender {\n+\n+  /** The logger */\n+  private static final Logger logger = LoggerFactory.getLogger(Sender.class);\n+\n+  /** The base URL for the external server where the data will be send to */\n+  private String baseUrl;\n+\n+  // The suffixes for the base statistic server URL\n+  // they determine to which REST endpoint the data will be sent\n+  private static final String GENERAL_DATA_URL_SUFFIX = \"adopter\";\n+  private static final String STATISTIC_URL_SUFFIX = \"statistic\";\n+\n+  //================================================================================\n+  // Constructor\n+  //================================================================================\n+\n+  /**\n+   * Simple Constructor that requires the URL of the statistic server.\n+   * @param statisticServerBaseUrl The URL prefix of the statistic server.\n+   */\n+  public Sender(String statisticServerBaseUrl) {\n+    if (!statisticServerBaseUrl.endsWith(\"/\")) {\n+      statisticServerBaseUrl += \"/\";\n+    }\n+    this.baseUrl = statisticServerBaseUrl;\n+  }\n+\n+  //================================================================================\n+  // Methods\n+  //================================================================================\n+\n+  /**\n+   * Executes the 'send' method with the proper REST URL suffix.\n+   * @param json The data which shall be sent.\n+   * @throws Exception General exception that can occur while sending the data.\n+   */\n+  public void sendGeneralData(String json) throws Exception {\n+    send(json, GENERAL_DATA_URL_SUFFIX);\n+  }\n+\n+  /**\n+   * Executes the 'send' method with the proper REST URL suffix.\n+   * @param json The data which shall be sent.\n+   * @throws Exception General exception that can occur while sending the data.\n+   */\n+  public void sendStatistics(String json) throws Exception {\n+    send(json, STATISTIC_URL_SUFFIX);\n+  }\n+\n+  /**\n+   * Sends the JSON string via post request.\n+   * @param json The JSON string that has to be send.\n+   * @param urlSuffix The url suffix determines to which rest endpoint the data will be send.\n+   * @throws Exception General exception that can occur while processing the POST request.\n+   */\n+  private void send(String json, String urlSuffix) throws Exception {\n+    try {\n+      URL url = new URL(baseUrl + urlSuffix);\n+      HttpURLConnection con = (HttpURLConnection) url.openConnection();\n+      con.setRequestMethod(\"POST\");\n+      con.setRequestProperty(\"Content-Type\", \"application/json; utf-8\");\n+      con.setRequestProperty(\"Accept\", \"application/json\");\n+      con.setDoOutput(true);\n+\n+      try (OutputStream os = con.getOutputStream()) {\n+        byte[] input = json.getBytes(StandardCharsets.UTF_8);\n+        os.write(input, 0, input.length);\n+      }\n+\n+      String httpStatus = con.getResponseCode() + \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "566f7d733621dba65da47d0b01cc857e62d827b8"}, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3182, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}