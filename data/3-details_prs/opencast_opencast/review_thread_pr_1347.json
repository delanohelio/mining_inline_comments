{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjI3NzE2", "number": 1347, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwOTo0MzozNlrODZJkTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwOTo0MzozNlrODZJkTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3Njk3NzQyOnYy", "diffSide": "RIGHT", "path": "etc/security/mh_default_org.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwOTo0MzozNlrOFfYcCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzo1NzozMFrOFf61vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ1MDU3MA==", "bodyText": "The < ! - -  .....  - - - > Comment indicators needs to be changed to <!-- ..... --> because the previous generates a read error from Opencast.\nMaybe is because I had to uncomment some lines because this kind of file doesn't support nested comments. But anyways I think is more foolproof have all the comments not nested.", "url": "https://github.com/opencast/opencast/pull/1347#discussion_r368450570", "createdAt": "2020-01-20T09:43:36Z", "author": {"login": "mliradelc"}, "path": "etc/security/mh_default_org.xml", "diffHunk": "@@ -507,6 +507,56 @@\n   </bean>\n   -->\n \n+  <!-- ################ -->\n+  <!-- # LDAP Support # -->\n+  <!-- ################ -->\n+\n+  <!--\n+  <bean id=\"contextSource\"\n+    class=\"org.springframework.security.ldap.DefaultSpringSecurityContextSource\">\n+    < ! - - URL of the LDAP server - - >\n+    <constructor-arg value=\"ldap://myldapserver:myport\" />\n+    < ! - - \"Distinguished name\" for the unprivileged user - - >\n+    < ! - - This user is merely to perform searches in the LDAP to find the users to login - - >\n+    <property name=\"userDn\" value=\"uid=user-id,dc=example,dc=com\" />\n+    < ! - - Password of the user above - - >\n+    <property name=\"password\" value=\"mypassword\" />\n+  </bean>\n+  -->\n+\n+  <!--\n+  <bean id=\"ldapAuthProvider\"\n+    class=\"org.springframework.security.ldap.authentication.LdapAuthenticationProvider\">\n+    <constructor-arg>\n+      <bean\n+        class=\"org.springframework.security.ldap.authentication.BindAuthenticator\">\n+        <constructor-arg ref=\"contextSource\" />\n+        <property name=\"userDnPatterns\">\n+          <list>\n+            < ! - - Dn patterns to search for valid users. Multiple \"<value>\" tags are allowed - - >\n+            <value>uid={0},dc=example,dc=com</value>\n+          </list>\n+        </property>\n+        < ! - - If your user IDs are not part of the user Dn's, you can use a search filter to find them - - >\n+        < ! - - This property can be used together with the \"userDnPatterns\" above - - >\n+        < ! - -\n+        <property name=\"userSearch\">\n+          <bean name=\"filterUserSearch\" class=\"org.springframework.security.ldap.search.FilterBasedLdapUserSearch\">\n+            < ! - - Base Dn from where the users will be searched for - - >\n+            <constructor-arg index=\"0\" value=\"ou=GroupName,dc=my-institution,dc=country\" />\n+            < ! - - Filter to located valid users. Use {0} as a placeholder for the login name - - >\n+            <constructor-arg index=\"1\" value=\"(uid={0})\" />\n+            <constructor-arg ref=\"contextSource\" />\n+          </bean>\n+        </property>\n+        - - >\n+      </bean>\n+    </constructor-arg>\n+    < ! - - Defines how the user attributes are converted to authorities (roles) - - >", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4abe696322077881112b70771156908438d1244"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg4Njk3Nw==", "bodyText": "@lkiesow Please check my point with the comments, what do you think? Besides that detail is ok for me to merge.", "url": "https://github.com/opencast/opencast/pull/1347#discussion_r368886977", "createdAt": "2020-01-21T09:21:21Z", "author": {"login": "mliradelc"}, "path": "etc/security/mh_default_org.xml", "diffHunk": "@@ -507,6 +507,56 @@\n   </bean>\n   -->\n \n+  <!-- ################ -->\n+  <!-- # LDAP Support # -->\n+  <!-- ################ -->\n+\n+  <!--\n+  <bean id=\"contextSource\"\n+    class=\"org.springframework.security.ldap.DefaultSpringSecurityContextSource\">\n+    < ! - - URL of the LDAP server - - >\n+    <constructor-arg value=\"ldap://myldapserver:myport\" />\n+    < ! - - \"Distinguished name\" for the unprivileged user - - >\n+    < ! - - This user is merely to perform searches in the LDAP to find the users to login - - >\n+    <property name=\"userDn\" value=\"uid=user-id,dc=example,dc=com\" />\n+    < ! - - Password of the user above - - >\n+    <property name=\"password\" value=\"mypassword\" />\n+  </bean>\n+  -->\n+\n+  <!--\n+  <bean id=\"ldapAuthProvider\"\n+    class=\"org.springframework.security.ldap.authentication.LdapAuthenticationProvider\">\n+    <constructor-arg>\n+      <bean\n+        class=\"org.springframework.security.ldap.authentication.BindAuthenticator\">\n+        <constructor-arg ref=\"contextSource\" />\n+        <property name=\"userDnPatterns\">\n+          <list>\n+            < ! - - Dn patterns to search for valid users. Multiple \"<value>\" tags are allowed - - >\n+            <value>uid={0},dc=example,dc=com</value>\n+          </list>\n+        </property>\n+        < ! - - If your user IDs are not part of the user Dn's, you can use a search filter to find them - - >\n+        < ! - - This property can be used together with the \"userDnPatterns\" above - - >\n+        < ! - -\n+        <property name=\"userSearch\">\n+          <bean name=\"filterUserSearch\" class=\"org.springframework.security.ldap.search.FilterBasedLdapUserSearch\">\n+            < ! - - Base Dn from where the users will be searched for - - >\n+            <constructor-arg index=\"0\" value=\"ou=GroupName,dc=my-institution,dc=country\" />\n+            < ! - - Filter to located valid users. Use {0} as a placeholder for the login name - - >\n+            <constructor-arg index=\"1\" value=\"(uid={0})\" />\n+            <constructor-arg ref=\"contextSource\" />\n+          </bean>\n+        </property>\n+        - - >\n+      </bean>\n+    </constructor-arg>\n+    < ! - - Defines how the user attributes are converted to authorities (roles) - - >", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ1MDU3MA=="}, "originalCommit": {"oid": "b4abe696322077881112b70771156908438d1244"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAxNDIwNg==", "bodyText": "Unfortunately, we cannot just change that since you cannot use an XML comment within an XML comment. The notation of adding spaces \u2013 which need to be removed when removing the outer comment \u2013 is what the previous LDAP configuration was already using and I did not have a better idea than that:\n\n  \n    \n      opencast/etc/security/security_sample_ldap.xml-example\n    \n    \n        Lines 519 to 522\n      in\n      71480e1\n    \n    \n    \n    \n\n        \n          \n           < ! - - Base Dn from where the users will be searched for - - > \n        \n\n        \n          \n           <constructor-arg index=\"0\" value=\"ou=GroupName,dc=my-institution,dc=country\" /> \n        \n\n        \n          \n           < ! - - Filter to located valid users. Use {0} as a placeholder for the login name - - > \n        \n\n        \n          \n           <constructor-arg index=\"1\" value=\"(uid={0})\" />", "url": "https://github.com/opencast/opencast/pull/1347#discussion_r369014206", "createdAt": "2020-01-21T13:57:30Z", "author": {"login": "lkiesow"}, "path": "etc/security/mh_default_org.xml", "diffHunk": "@@ -507,6 +507,56 @@\n   </bean>\n   -->\n \n+  <!-- ################ -->\n+  <!-- # LDAP Support # -->\n+  <!-- ################ -->\n+\n+  <!--\n+  <bean id=\"contextSource\"\n+    class=\"org.springframework.security.ldap.DefaultSpringSecurityContextSource\">\n+    < ! - - URL of the LDAP server - - >\n+    <constructor-arg value=\"ldap://myldapserver:myport\" />\n+    < ! - - \"Distinguished name\" for the unprivileged user - - >\n+    < ! - - This user is merely to perform searches in the LDAP to find the users to login - - >\n+    <property name=\"userDn\" value=\"uid=user-id,dc=example,dc=com\" />\n+    < ! - - Password of the user above - - >\n+    <property name=\"password\" value=\"mypassword\" />\n+  </bean>\n+  -->\n+\n+  <!--\n+  <bean id=\"ldapAuthProvider\"\n+    class=\"org.springframework.security.ldap.authentication.LdapAuthenticationProvider\">\n+    <constructor-arg>\n+      <bean\n+        class=\"org.springframework.security.ldap.authentication.BindAuthenticator\">\n+        <constructor-arg ref=\"contextSource\" />\n+        <property name=\"userDnPatterns\">\n+          <list>\n+            < ! - - Dn patterns to search for valid users. Multiple \"<value>\" tags are allowed - - >\n+            <value>uid={0},dc=example,dc=com</value>\n+          </list>\n+        </property>\n+        < ! - - If your user IDs are not part of the user Dn's, you can use a search filter to find them - - >\n+        < ! - - This property can be used together with the \"userDnPatterns\" above - - >\n+        < ! - -\n+        <property name=\"userSearch\">\n+          <bean name=\"filterUserSearch\" class=\"org.springframework.security.ldap.search.FilterBasedLdapUserSearch\">\n+            < ! - - Base Dn from where the users will be searched for - - >\n+            <constructor-arg index=\"0\" value=\"ou=GroupName,dc=my-institution,dc=country\" />\n+            < ! - - Filter to located valid users. Use {0} as a placeholder for the login name - - >\n+            <constructor-arg index=\"1\" value=\"(uid={0})\" />\n+            <constructor-arg ref=\"contextSource\" />\n+          </bean>\n+        </property>\n+        - - >\n+      </bean>\n+    </constructor-arg>\n+    < ! - - Defines how the user attributes are converted to authorities (roles) - - >", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ1MDU3MA=="}, "originalCommit": {"oid": "b4abe696322077881112b70771156908438d1244"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3285, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}