{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NjIwMjA1", "number": 1622, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNToyNDoxNlrOEDgMuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNToyNDoxNlrOEDgMuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTA4NzI4OnYy", "diffSide": "RIGHT", "path": "modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNToyNDoxNlrOGgjuAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNToyNDoxNlrOGgjuAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc5MjgzNA==", "bodyText": "IMO the \"scare quotes\" should go, it's considered bad form.", "url": "https://github.com/opencast/opencast/pull/1622#discussion_r436792834", "createdAt": "2020-06-08T15:24:16Z", "author": {"login": "gregorydlogan"}, "path": "modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java", "diffHunk": "@@ -290,42 +280,25 @@ public Authentication createAuthentication(HttpServletRequest request, ConsumerA\n       logger.debug(\"LTI user id is : {}\", username);\n     }\n \n-    UserDetails userDetails = null;\n-    Collection<GrantedAuthority> userAuthorities = new HashSet<>();\n+    UserDetails userDetails;\n+    Collection<GrantedAuthority> userAuthorities;\n     try {\n+      userDetails = userDetailsService.loadUserByUsername(username);\n \n-      userDetailsCache = CacheBuilder.newBuilder().expireAfterWrite(1, TimeUnit.MINUTES).build(new CacheLoader<String, Object>() {\n-\n-        @Override\n-        public Object load(String username) {\n-          logger.trace(\"Loading user '{}' from cache or by service\", username);\n-          UserDetails userDetails = userDetailsService.loadUserByUsername(username);\n-          return userDetails == null ? nullToken : userDetails;\n-        }\n-      });\n-\n-      try {\n-        // use #getUnchecked since the loader does not throw any checked exceptions\n-        userDetails = (UserDetails)userDetailsCache.getUnchecked(username);\n-        if (userDetails != nullToken) {\n-          // userDetails returns a Collection<? extends GrantedAuthority>, which cannot be directly casted to a\n-          // Collection<GrantedAuthority>.\n-          // On the other hand, one cannot add non-null elements or modify the existing ones in a Collection<? extends\n-          // GrantedAuthority>. Therefore, we *must* instantiate a new Collection<GrantedAuthority> (an ArrayList in this\n-          // case) and populate it with whatever elements are returned by getAuthorities()\n-          userAuthorities = new HashSet<>(userDetails.getAuthorities());\n-\n-          // we still need to enrich this user with the LTI Roles\n-          String roles = request.getParameter(ROLES);\n-          String context = request.getParameter(CONTEXT_ID);\n-          enrichRoleGrants(roles, context, userAuthorities);\n-        }\n-      } catch (UncheckedExecutionException e) {\n-        logger.warn(\"Exception while loading UserDetails from cache \" + username, e);\n-      }\n+      // userDetails returns a Collection<? extends GrantedAuthority>, which cannot be directly casted to a\n+      // Collection<GrantedAuthority>.\n+      // On the other hand, one cannot add non-null elements or modify the existing ones in a Collection<? extends\n+      // GrantedAuthority>. Therefore, we *must* instantiate a new Collection<GrantedAuthority> (an ArrayList in this\n+      // case) and populate it with whatever elements are returned by getAuthorities()\n+      userAuthorities = new HashSet<>(userDetails.getAuthorities());\n \n+      // we still need to enrich this user with the LTI Roles\n+      String roles = request.getParameter(ROLES);\n+      String context = request.getParameter(CONTEXT_ID);\n+      enrichRoleGrants(roles, context, userAuthorities);\n     } catch (UsernameNotFoundException e) {\n-      // This user is known to the tool consumer, but not to Opencast. Create a user \"on the fly\"\n+      logger.trace(\"This user is known to the tool consumer, but not to Opencast. Create a user `on the fly`\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b217dfaff4e4417d53a0b1119836fd32543baa5f"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3255, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}