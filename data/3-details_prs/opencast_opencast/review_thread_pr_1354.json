{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMTQxNjk5", "number": 1354, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNToyNzozNVrODkTx7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNzowOToyNVrODkvaHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5Mzk5NDA1OnYy", "diffSide": "RIGHT", "path": "modules/admin-ui-frontend/app/scripts/shared/directives/timelineDirective.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNToyNzozNVrOFwjtLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzowNzoxOVrOGfPleA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2MDk3NQ==", "bodyText": "We don't really enforce code standards in the javascript, but please declare each variable on a separate line.", "url": "https://github.com/opencast/opencast/pull/1354#discussion_r386460975", "createdAt": "2020-03-02T15:27:35Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/app/scripts/shared/directives/timelineDirective.js", "diffHunk": "@@ -1264,6 +1264,122 @@ angular.module('adminNg.directives')\n           if (scope.timer) $timeout.cancel( scope.timer );\n         });\n \n+        /**\n+         * Creates a promise object to load the AuthService so that user properties\n+         * are available to the current scope.\n+         */\n+        AuthService.getUser().$promise.then(function (user) {\n+          var startLength = parseInt(user.org.properties['admin.editor.segment.start_length'] || 0, 10);\n+          var endLength = parseInt(user.org.properties['admin.editor.segment.end_length'] || 0, 10);\n+          var minLength = parseInt(user.org.properties['admin.editor.segment.minimum_length'] || 0, 10);\n+\n+          scope.startLength = startLength;\n+          scope.endLength = endLength;\n+          scope.minLength = minLength;\n+\n+          if (!startLength && !endLength && !minLength) {\n+            return;\n+          }\n+\n+          scope.video.$promise.then(function(vidObj) {\n+            var duration = parseInt(vidObj.duration, 10);\n+            var segments = vidObj.segments;\n+\n+            if (duration <= startLength + endLength) {\n+              return;\n+            }\n+\n+            var setSegment = function(_start, _end, _min, _del) {\n+\n+              if (_min > 0) {\n+                _end = (_start - _end < _min) ? _start + _min : _end;\n+              }\n+\n+              return {\n+                start: _start,\n+                end: _end,\n+                deleted: _del,\n+                selected: false\n+              };\n+            };\n+\n+            var getSegmentLength = function(_s) {\n+              return (_s.end - _s.start);\n+            };\n+\n+            var maxSegIdx = segments.length - 1;\n+            segments[0].start = 0;\n+            segments[maxSegIdx].end = duration;\n+\n+            if (segments.length == 1) {\n+\n+              var _start = 0, _duration = duration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd36f5e9d61662e8a3ff722903112c51f2ee638e"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxNDM5Mg==", "bodyText": "Updated", "url": "https://github.com/opencast/opencast/pull/1354#discussion_r435414392", "createdAt": "2020-06-04T17:07:19Z", "author": {"login": "NgoniChoga"}, "path": "modules/admin-ui-frontend/app/scripts/shared/directives/timelineDirective.js", "diffHunk": "@@ -1264,6 +1264,122 @@ angular.module('adminNg.directives')\n           if (scope.timer) $timeout.cancel( scope.timer );\n         });\n \n+        /**\n+         * Creates a promise object to load the AuthService so that user properties\n+         * are available to the current scope.\n+         */\n+        AuthService.getUser().$promise.then(function (user) {\n+          var startLength = parseInt(user.org.properties['admin.editor.segment.start_length'] || 0, 10);\n+          var endLength = parseInt(user.org.properties['admin.editor.segment.end_length'] || 0, 10);\n+          var minLength = parseInt(user.org.properties['admin.editor.segment.minimum_length'] || 0, 10);\n+\n+          scope.startLength = startLength;\n+          scope.endLength = endLength;\n+          scope.minLength = minLength;\n+\n+          if (!startLength && !endLength && !minLength) {\n+            return;\n+          }\n+\n+          scope.video.$promise.then(function(vidObj) {\n+            var duration = parseInt(vidObj.duration, 10);\n+            var segments = vidObj.segments;\n+\n+            if (duration <= startLength + endLength) {\n+              return;\n+            }\n+\n+            var setSegment = function(_start, _end, _min, _del) {\n+\n+              if (_min > 0) {\n+                _end = (_start - _end < _min) ? _start + _min : _end;\n+              }\n+\n+              return {\n+                start: _start,\n+                end: _end,\n+                deleted: _del,\n+                selected: false\n+              };\n+            };\n+\n+            var getSegmentLength = function(_s) {\n+              return (_s.end - _s.start);\n+            };\n+\n+            var maxSegIdx = segments.length - 1;\n+            segments[0].start = 0;\n+            segments[maxSegIdx].end = duration;\n+\n+            if (segments.length == 1) {\n+\n+              var _start = 0, _duration = duration;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2MDk3NQ=="}, "originalCommit": {"oid": "cd36f5e9d61662e8a3ff722903112c51f2ee638e"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5Mzk5Nzc4OnYy", "diffSide": "RIGHT", "path": "modules/admin-ui-frontend/app/scripts/shared/directives/timelineDirective.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNToyODoyOVrOFwjvaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzowNzo1OVrOGfPnAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2MTU0Nw==", "bodyText": "If there's only one segment, doesn't maxSegIdx end up at -1?", "url": "https://github.com/opencast/opencast/pull/1354#discussion_r386461547", "createdAt": "2020-03-02T15:28:29Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/app/scripts/shared/directives/timelineDirective.js", "diffHunk": "@@ -1264,6 +1264,122 @@ angular.module('adminNg.directives')\n           if (scope.timer) $timeout.cancel( scope.timer );\n         });\n \n+        /**\n+         * Creates a promise object to load the AuthService so that user properties\n+         * are available to the current scope.\n+         */\n+        AuthService.getUser().$promise.then(function (user) {\n+          var startLength = parseInt(user.org.properties['admin.editor.segment.start_length'] || 0, 10);\n+          var endLength = parseInt(user.org.properties['admin.editor.segment.end_length'] || 0, 10);\n+          var minLength = parseInt(user.org.properties['admin.editor.segment.minimum_length'] || 0, 10);\n+\n+          scope.startLength = startLength;\n+          scope.endLength = endLength;\n+          scope.minLength = minLength;\n+\n+          if (!startLength && !endLength && !minLength) {\n+            return;\n+          }\n+\n+          scope.video.$promise.then(function(vidObj) {\n+            var duration = parseInt(vidObj.duration, 10);\n+            var segments = vidObj.segments;\n+\n+            if (duration <= startLength + endLength) {\n+              return;\n+            }\n+\n+            var setSegment = function(_start, _end, _min, _del) {\n+\n+              if (_min > 0) {\n+                _end = (_start - _end < _min) ? _start + _min : _end;\n+              }\n+\n+              return {\n+                start: _start,\n+                end: _end,\n+                deleted: _del,\n+                selected: false\n+              };\n+            };\n+\n+            var getSegmentLength = function(_s) {\n+              return (_s.end - _s.start);\n+            };\n+\n+            var maxSegIdx = segments.length - 1;\n+            segments[0].start = 0;\n+            segments[maxSegIdx].end = duration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd36f5e9d61662e8a3ff722903112c51f2ee638e"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxNDc4Nw==", "bodyText": "maxSegIdx end up at 0 if there's only one segment.", "url": "https://github.com/opencast/opencast/pull/1354#discussion_r435414787", "createdAt": "2020-06-04T17:07:59Z", "author": {"login": "NgoniChoga"}, "path": "modules/admin-ui-frontend/app/scripts/shared/directives/timelineDirective.js", "diffHunk": "@@ -1264,6 +1264,122 @@ angular.module('adminNg.directives')\n           if (scope.timer) $timeout.cancel( scope.timer );\n         });\n \n+        /**\n+         * Creates a promise object to load the AuthService so that user properties\n+         * are available to the current scope.\n+         */\n+        AuthService.getUser().$promise.then(function (user) {\n+          var startLength = parseInt(user.org.properties['admin.editor.segment.start_length'] || 0, 10);\n+          var endLength = parseInt(user.org.properties['admin.editor.segment.end_length'] || 0, 10);\n+          var minLength = parseInt(user.org.properties['admin.editor.segment.minimum_length'] || 0, 10);\n+\n+          scope.startLength = startLength;\n+          scope.endLength = endLength;\n+          scope.minLength = minLength;\n+\n+          if (!startLength && !endLength && !minLength) {\n+            return;\n+          }\n+\n+          scope.video.$promise.then(function(vidObj) {\n+            var duration = parseInt(vidObj.duration, 10);\n+            var segments = vidObj.segments;\n+\n+            if (duration <= startLength + endLength) {\n+              return;\n+            }\n+\n+            var setSegment = function(_start, _end, _min, _del) {\n+\n+              if (_min > 0) {\n+                _end = (_start - _end < _min) ? _start + _min : _end;\n+              }\n+\n+              return {\n+                start: _start,\n+                end: _end,\n+                deleted: _del,\n+                selected: false\n+              };\n+            };\n+\n+            var getSegmentLength = function(_s) {\n+              return (_s.end - _s.start);\n+            };\n+\n+            var maxSegIdx = segments.length - 1;\n+            segments[0].start = 0;\n+            segments[maxSegIdx].end = duration;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2MTU0Nw=="}, "originalCommit": {"oid": "cd36f5e9d61662e8a3ff722903112c51f2ee638e"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODUyMDYxOnYy", "diffSide": "RIGHT", "path": "modules/admin-ui-frontend/app/scripts/shared/directives/timelineDirective.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNzowOToyNVrOFxOztg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzowOTowM1rOGfPpVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE2NzE1OA==", "bodyText": "I'm not a huge fan of the way this has nested function declarations.  Is this how the rest of Angular codebase is?  It's been a while, but we try to keep things similar, file to file.", "url": "https://github.com/opencast/opencast/pull/1354#discussion_r387167158", "createdAt": "2020-03-03T17:09:25Z", "author": {"login": "gregorydlogan"}, "path": "modules/admin-ui-frontend/app/scripts/shared/directives/timelineDirective.js", "diffHunk": "@@ -1264,6 +1264,122 @@ angular.module('adminNg.directives')\n           if (scope.timer) $timeout.cancel( scope.timer );\n         });\n \n+        /**\n+         * Creates a promise object to load the AuthService so that user properties\n+         * are available to the current scope.\n+         */\n+        AuthService.getUser().$promise.then(function (user) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd36f5e9d61662e8a3ff722903112c51f2ee638e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxNTM4MQ==", "bodyText": "This is how it was done in a number of different files.", "url": "https://github.com/opencast/opencast/pull/1354#discussion_r435415381", "createdAt": "2020-06-04T17:09:03Z", "author": {"login": "NgoniChoga"}, "path": "modules/admin-ui-frontend/app/scripts/shared/directives/timelineDirective.js", "diffHunk": "@@ -1264,6 +1264,122 @@ angular.module('adminNg.directives')\n           if (scope.timer) $timeout.cancel( scope.timer );\n         });\n \n+        /**\n+         * Creates a promise object to load the AuthService so that user properties\n+         * are available to the current scope.\n+         */\n+        AuthService.getUser().$promise.then(function (user) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE2NzE1OA=="}, "originalCommit": {"oid": "cd36f5e9d61662e8a3ff722903112c51f2ee638e"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3291, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}