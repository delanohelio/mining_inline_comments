{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMzA5ODcw", "number": 1633, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMzo0MjowN1rOEDqZ6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMzo0NDoxM1rOEDqbkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjc1OTQ1OnYy", "diffSide": "RIGHT", "path": "modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMzo0MjowN1rOGgz_Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMzo0MjowN1rOGgz_Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA1OTQxOA==", "bodyText": "This now becomes expected behavior and is not something we need to warn users about, is it?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    logger.warn(\"Concurrent access of user {}. Igoring.\", username);\n          \n          \n            \n                    logger.debug(\"Concurrent access of user {}. Igoring.\", username);", "url": "https://github.com/opencast/opencast/pull/1633#discussion_r437059418", "createdAt": "2020-06-08T23:42:07Z", "author": {"login": "lkiesow"}, "path": "modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java", "diffHunk": "@@ -315,37 +317,36 @@ public Authentication createAuthentication(HttpServletRequest request, ConsumerA\n     userAuthorities.add(new SimpleGrantedAuthority(\"ROLE_USER\"));\n     userAuthorities.add(new SimpleGrantedAuthority(\"ROLE_ANONYMOUS\"));\n \n-\n     // Create/Update the user reference\n     if (createJpaUserReference) {\n-      JpaOrganization organization = fromOrganization(securityService.getOrganization());\n-\n-      JpaUserReference jpaUserReference = userReferenceProvider.findUserReference(username, organization.getId());\n-\n-      Set<JpaRole> jpaRoles = new HashSet<>();\n-      for (GrantedAuthority authority : userAuthorities) {\n-        jpaRoles.add(new JpaRole(authority.getAuthority(), organization));\n-      }\n-\n-      Date loginDate = new Date();\n+      if (attempts.putIfAbsent(username, Boolean.TRUE) != null) {\n+        logger.warn(\"Concurrent access of user {}. Igoring.\", username);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd4fdb536875c867eb24f932c0194da07cfb464c"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjc2MzY5OnYy", "diffSide": "RIGHT", "path": "modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMzo0NDoxM1rOGg0B8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMzo0NDoxM1rOGg0B8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA2MDA4MA==", "bodyText": "Purely nitpicking but it's not that we count attempts so the choice for the name seems a bit odd.\n;aybe:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private Map<String, Boolean> attempts = new ConcurrentHashMap<>(128);\n          \n          \n            \n              private Map<String, Boolean> activePersistence = new ConcurrentHashMap<>(128);", "url": "https://github.com/opencast/opencast/pull/1633#discussion_r437060080", "createdAt": "2020-06-08T23:44:13Z", "author": {"login": "lkiesow"}, "path": "modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java", "diffHunk": "@@ -137,6 +137,9 @@\n   /** Set of usernames that should not authenticated as themselves even if the OAuth consumer keys is trusted */\n   private Set<String> usernameBlacklist = new HashSet<>();\n \n+  /** concurrent attemtps */\n+  private Map<String, Boolean> attempts = new ConcurrentHashMap<>(128);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd4fdb536875c867eb24f932c0194da07cfb464c"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3188, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}