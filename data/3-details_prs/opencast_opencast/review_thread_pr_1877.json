{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzOTc5MDkw", "number": 1877, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoxODo1N1rOEoNK1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoyODoxM1rOEoNXeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTk0MjYwOnYy", "diffSide": "RIGHT", "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoxODo1N1rOHZKT_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoxODo1N1rOHZKT_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0NTQwNw==", "bodyText": "This is easier than to check manually for empty values:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));\n          \n          \n            \n                final String configuredEpisodeFlavor = Objects.toString(StringUtils.trimToNull(operation.getConfiguration(EPISODE_FLAVOR)), \"dublincore/episode);", "url": "https://github.com/opencast/opencast/pull/1877#discussion_r496145407", "createdAt": "2020-09-28T18:18:57Z", "author": {"login": "lkiesow"}, "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "diffHunk": "@@ -302,57 +304,87 @@ protected String loadXsl(WorkflowOperationInstance operation) throws WorkflowOpe\n     }\n   }\n \n-  protected String getMetadataXml(MediaPackage mp) {\n-    StaticMetadata metadata = getStaticMetadataService().getMetadata(mp);\n+  protected String getMetadataXml(MediaPackage mp, WorkflowOperationInstance operation) {\n+    //get specified episode/series flavor\n+    String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTk1NzQwOnYy", "diffSide": "RIGHT", "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoyMzowN1rOHZKc5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoyMzowN1rOHZKc5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0NzY4Ng==", "bodyText": "Better use\nMediaPackageElementFlavor.parseFlavor(flavorStr);\nYou can then access the flavor and subflavor via the flavor object's methods.\nAnd it assures that it's a valid flavor or directly use it since you want a flavor object down below anyway.", "url": "https://github.com/opencast/opencast/pull/1877#discussion_r496147686", "createdAt": "2020-09-28T18:23:07Z", "author": {"login": "lkiesow"}, "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "diffHunk": "@@ -302,57 +304,87 @@ protected String loadXsl(WorkflowOperationInstance operation) throws WorkflowOpe\n     }\n   }\n \n-  protected String getMetadataXml(MediaPackage mp) {\n-    StaticMetadata metadata = getStaticMetadataService().getMetadata(mp);\n+  protected String getMetadataXml(MediaPackage mp, WorkflowOperationInstance operation) {\n+    //get specified episode/series flavor\n+    String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));\n+    String configuredSeriesFlavor = StringUtils.trimToEmpty(operation.getConfiguration(SERIES_FLAVOR));\n \n+    //use dublincore/episode and dublincore/series metadata-catalogs as default\n+    if ((\"\").equals(configuredEpisodeFlavor)) {\n+      configuredEpisodeFlavor = \"dublincore/episode\";\n+    }\n+    if ((\"\").equals(configuredSeriesFlavor)) {\n+      configuredSeriesFlavor = \"dublincore/series\";\n+    }\n+\n+    String episodeFlavorType = configuredEpisodeFlavor.split(\"/\")[0];\n+    String episodeFlavorSubtype = configuredEpisodeFlavor.split(\"/\")[1];\n+    String seriesFlavorType = configuredSeriesFlavor.split(\"/\")[0];\n+    String seriesFlavorSubtype = configuredSeriesFlavor.split(\"/\")[1];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTk2MjE0OnYy", "diffSide": "RIGHT", "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoyNDoyOVrOHZKf1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoyNDoyOVrOHZKf1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0ODQzOQ==", "bodyText": "indentation", "url": "https://github.com/opencast/opencast/pull/1877#discussion_r496148439", "createdAt": "2020-09-28T18:24:29Z", "author": {"login": "lkiesow"}, "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "diffHunk": "@@ -302,57 +304,87 @@ protected String loadXsl(WorkflowOperationInstance operation) throws WorkflowOpe\n     }\n   }\n \n-  protected String getMetadataXml(MediaPackage mp) {\n-    StaticMetadata metadata = getStaticMetadataService().getMetadata(mp);\n+  protected String getMetadataXml(MediaPackage mp, WorkflowOperationInstance operation) {\n+    //get specified episode/series flavor\n+    String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));\n+    String configuredSeriesFlavor = StringUtils.trimToEmpty(operation.getConfiguration(SERIES_FLAVOR));\n \n+    //use dublincore/episode and dublincore/series metadata-catalogs as default\n+    if ((\"\").equals(configuredEpisodeFlavor)) {\n+      configuredEpisodeFlavor = \"dublincore/episode\";\n+    }\n+    if ((\"\").equals(configuredSeriesFlavor)) {\n+      configuredSeriesFlavor = \"dublincore/series\";\n+    }\n+\n+    String episodeFlavorType = configuredEpisodeFlavor.split(\"/\")[0];\n+    String episodeFlavorSubtype = configuredEpisodeFlavor.split(\"/\")[1];\n+    String seriesFlavorType = configuredSeriesFlavor.split(\"/\")[0];\n+    String seriesFlavorSubtype = configuredSeriesFlavor.split(\"/\")[1];\n+\n+    //Get episode metadata-catalog\n+    Catalog[] catalogs = mp.\n+            getCatalogs(new MediaPackageElementFlavor(episodeFlavorType, StringUtils.lowerCase(episodeFlavorSubtype)));\n+\n+   //load metadata-catalog", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTk3NDk2OnYy", "diffSide": "RIGHT", "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoyODoxM1rOHZKn0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMTozMTo0MVrOIJVOzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE1MDQ4MQ==", "bodyText": "All these fields can exist not at all or multiple times. Will this work if they do not exist? Onbly using the first is probably okay but should be documented.", "url": "https://github.com/opencast/opencast/pull/1877#discussion_r496150481", "createdAt": "2020-09-28T18:28:13Z", "author": {"login": "lkiesow"}, "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "diffHunk": "@@ -302,57 +304,87 @@ protected String loadXsl(WorkflowOperationInstance operation) throws WorkflowOpe\n     }\n   }\n \n-  protected String getMetadataXml(MediaPackage mp) {\n-    StaticMetadata metadata = getStaticMetadataService().getMetadata(mp);\n+  protected String getMetadataXml(MediaPackage mp, WorkflowOperationInstance operation) {\n+    //get specified episode/series flavor\n+    String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));\n+    String configuredSeriesFlavor = StringUtils.trimToEmpty(operation.getConfiguration(SERIES_FLAVOR));\n \n+    //use dublincore/episode and dublincore/series metadata-catalogs as default\n+    if ((\"\").equals(configuredEpisodeFlavor)) {\n+      configuredEpisodeFlavor = \"dublincore/episode\";\n+    }\n+    if ((\"\").equals(configuredSeriesFlavor)) {\n+      configuredSeriesFlavor = \"dublincore/series\";\n+    }\n+\n+    String episodeFlavorType = configuredEpisodeFlavor.split(\"/\")[0];\n+    String episodeFlavorSubtype = configuredEpisodeFlavor.split(\"/\")[1];\n+    String seriesFlavorType = configuredSeriesFlavor.split(\"/\")[0];\n+    String seriesFlavorSubtype = configuredSeriesFlavor.split(\"/\")[1];\n+\n+    //Get episode metadata-catalog\n+    Catalog[] catalogs = mp.\n+            getCatalogs(new MediaPackageElementFlavor(episodeFlavorType, StringUtils.lowerCase(episodeFlavorSubtype)));\n+\n+   //load metadata-catalog\n+    DublinCoreCatalog dc = DublinCoreUtil.loadDublinCore(getWorkspace(), catalogs[0]);\n+    Map<EName, List<DublinCoreValue>> data = dc.getValues();\n+\n+    //build xml from metadata\n     StringBuilder xml = new StringBuilder();\n     xml.append(\"<metadata xmlns:dcterms=\\\"http://purl.org/dc/terms/\\\">\");\n \n-    for (String title : getFirstMetadataValue(metadata.getTitles()))\n-      appendXml(xml, \"title\", title);\n-    for (String description : getFirstMetadataValue(metadata.getDescription()))\n-      appendXml(xml, \"description\", description);\n-    for (String language : metadata.getLanguage())\n-      appendXml(xml, \"language\", language);\n-    for (Date created : metadata.getCreated())\n-      /* Method formatDate of org.apache.xalan.lib.ExsltDatetime requires the format CCYY-MM-DDThh:mm:ss */\n-      appendXml(xml, \"date\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(created));\n-    for (Date[] period : metadata.getTemporalPeriod()) {\n-      if (period[0] != null) {\n-        appendXml(xml, \"start\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[0]));\n-      }\n-      if (period[1] != null) {\n-        appendXml(xml, \"end\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[1]));\n+    for (Map.Entry<EName, List<DublinCoreValue>> entry : data.entrySet()) {\n+      String currentKey = entry.getKey().getLocalName();\n+      switch(currentKey) {\n+        case \"creator\": appendXml(xml, \"creators\", entry.getValue().get(0).getValue()); break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY2Mjc1Nw==", "bodyText": "Also the order of the list isn't fixed. I guess, we have to provide all values as list.", "url": "https://github.com/opencast/opencast/pull/1877#discussion_r501662757", "createdAt": "2020-10-08T11:58:24Z", "author": {"login": "wsmirnow"}, "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "diffHunk": "@@ -302,57 +304,87 @@ protected String loadXsl(WorkflowOperationInstance operation) throws WorkflowOpe\n     }\n   }\n \n-  protected String getMetadataXml(MediaPackage mp) {\n-    StaticMetadata metadata = getStaticMetadataService().getMetadata(mp);\n+  protected String getMetadataXml(MediaPackage mp, WorkflowOperationInstance operation) {\n+    //get specified episode/series flavor\n+    String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));\n+    String configuredSeriesFlavor = StringUtils.trimToEmpty(operation.getConfiguration(SERIES_FLAVOR));\n \n+    //use dublincore/episode and dublincore/series metadata-catalogs as default\n+    if ((\"\").equals(configuredEpisodeFlavor)) {\n+      configuredEpisodeFlavor = \"dublincore/episode\";\n+    }\n+    if ((\"\").equals(configuredSeriesFlavor)) {\n+      configuredSeriesFlavor = \"dublincore/series\";\n+    }\n+\n+    String episodeFlavorType = configuredEpisodeFlavor.split(\"/\")[0];\n+    String episodeFlavorSubtype = configuredEpisodeFlavor.split(\"/\")[1];\n+    String seriesFlavorType = configuredSeriesFlavor.split(\"/\")[0];\n+    String seriesFlavorSubtype = configuredSeriesFlavor.split(\"/\")[1];\n+\n+    //Get episode metadata-catalog\n+    Catalog[] catalogs = mp.\n+            getCatalogs(new MediaPackageElementFlavor(episodeFlavorType, StringUtils.lowerCase(episodeFlavorSubtype)));\n+\n+   //load metadata-catalog\n+    DublinCoreCatalog dc = DublinCoreUtil.loadDublinCore(getWorkspace(), catalogs[0]);\n+    Map<EName, List<DublinCoreValue>> data = dc.getValues();\n+\n+    //build xml from metadata\n     StringBuilder xml = new StringBuilder();\n     xml.append(\"<metadata xmlns:dcterms=\\\"http://purl.org/dc/terms/\\\">\");\n \n-    for (String title : getFirstMetadataValue(metadata.getTitles()))\n-      appendXml(xml, \"title\", title);\n-    for (String description : getFirstMetadataValue(metadata.getDescription()))\n-      appendXml(xml, \"description\", description);\n-    for (String language : metadata.getLanguage())\n-      appendXml(xml, \"language\", language);\n-    for (Date created : metadata.getCreated())\n-      /* Method formatDate of org.apache.xalan.lib.ExsltDatetime requires the format CCYY-MM-DDThh:mm:ss */\n-      appendXml(xml, \"date\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(created));\n-    for (Date[] period : metadata.getTemporalPeriod()) {\n-      if (period[0] != null) {\n-        appendXml(xml, \"start\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[0]));\n-      }\n-      if (period[1] != null) {\n-        appendXml(xml, \"end\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[1]));\n+    for (Map.Entry<EName, List<DublinCoreValue>> entry : data.entrySet()) {\n+      String currentKey = entry.getKey().getLocalName();\n+      switch(currentKey) {\n+        case \"creator\": appendXml(xml, \"creators\", entry.getValue().get(0).getValue()); break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE1MDQ4MQ=="}, "originalCommit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0Mzk2Nw==", "bodyText": "@lkiesow If they do not exist, they are not beeing added to the xml, so it should be fine. There were no issues during my tests with non existing fields. I also added a note in the documentation.\n@wsmirnow You mean the order of the fields in the resulting xml should stay intact?", "url": "https://github.com/opencast/opencast/pull/1877#discussion_r502843967", "createdAt": "2020-10-10T23:32:56Z", "author": {"login": "jduehring"}, "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "diffHunk": "@@ -302,57 +304,87 @@ protected String loadXsl(WorkflowOperationInstance operation) throws WorkflowOpe\n     }\n   }\n \n-  protected String getMetadataXml(MediaPackage mp) {\n-    StaticMetadata metadata = getStaticMetadataService().getMetadata(mp);\n+  protected String getMetadataXml(MediaPackage mp, WorkflowOperationInstance operation) {\n+    //get specified episode/series flavor\n+    String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));\n+    String configuredSeriesFlavor = StringUtils.trimToEmpty(operation.getConfiguration(SERIES_FLAVOR));\n \n+    //use dublincore/episode and dublincore/series metadata-catalogs as default\n+    if ((\"\").equals(configuredEpisodeFlavor)) {\n+      configuredEpisodeFlavor = \"dublincore/episode\";\n+    }\n+    if ((\"\").equals(configuredSeriesFlavor)) {\n+      configuredSeriesFlavor = \"dublincore/series\";\n+    }\n+\n+    String episodeFlavorType = configuredEpisodeFlavor.split(\"/\")[0];\n+    String episodeFlavorSubtype = configuredEpisodeFlavor.split(\"/\")[1];\n+    String seriesFlavorType = configuredSeriesFlavor.split(\"/\")[0];\n+    String seriesFlavorSubtype = configuredSeriesFlavor.split(\"/\")[1];\n+\n+    //Get episode metadata-catalog\n+    Catalog[] catalogs = mp.\n+            getCatalogs(new MediaPackageElementFlavor(episodeFlavorType, StringUtils.lowerCase(episodeFlavorSubtype)));\n+\n+   //load metadata-catalog\n+    DublinCoreCatalog dc = DublinCoreUtil.loadDublinCore(getWorkspace(), catalogs[0]);\n+    Map<EName, List<DublinCoreValue>> data = dc.getValues();\n+\n+    //build xml from metadata\n     StringBuilder xml = new StringBuilder();\n     xml.append(\"<metadata xmlns:dcterms=\\\"http://purl.org/dc/terms/\\\">\");\n \n-    for (String title : getFirstMetadataValue(metadata.getTitles()))\n-      appendXml(xml, \"title\", title);\n-    for (String description : getFirstMetadataValue(metadata.getDescription()))\n-      appendXml(xml, \"description\", description);\n-    for (String language : metadata.getLanguage())\n-      appendXml(xml, \"language\", language);\n-    for (Date created : metadata.getCreated())\n-      /* Method formatDate of org.apache.xalan.lib.ExsltDatetime requires the format CCYY-MM-DDThh:mm:ss */\n-      appendXml(xml, \"date\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(created));\n-    for (Date[] period : metadata.getTemporalPeriod()) {\n-      if (period[0] != null) {\n-        appendXml(xml, \"start\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[0]));\n-      }\n-      if (period[1] != null) {\n-        appendXml(xml, \"end\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[1]));\n+    for (Map.Entry<EName, List<DublinCoreValue>> entry : data.entrySet()) {\n+      String currentKey = entry.getKey().getLocalName();\n+      switch(currentKey) {\n+        case \"creator\": appendXml(xml, \"creators\", entry.getValue().get(0).getValue()); break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE1MDQ4MQ=="}, "originalCommit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5NjU0OA==", "bodyText": "iirc, the order isn't guaranteed in an XML document anyway.", "url": "https://github.com/opencast/opencast/pull/1877#discussion_r502896548", "createdAt": "2020-10-11T10:29:33Z", "author": {"login": "lkiesow"}, "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "diffHunk": "@@ -302,57 +304,87 @@ protected String loadXsl(WorkflowOperationInstance operation) throws WorkflowOpe\n     }\n   }\n \n-  protected String getMetadataXml(MediaPackage mp) {\n-    StaticMetadata metadata = getStaticMetadataService().getMetadata(mp);\n+  protected String getMetadataXml(MediaPackage mp, WorkflowOperationInstance operation) {\n+    //get specified episode/series flavor\n+    String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));\n+    String configuredSeriesFlavor = StringUtils.trimToEmpty(operation.getConfiguration(SERIES_FLAVOR));\n \n+    //use dublincore/episode and dublincore/series metadata-catalogs as default\n+    if ((\"\").equals(configuredEpisodeFlavor)) {\n+      configuredEpisodeFlavor = \"dublincore/episode\";\n+    }\n+    if ((\"\").equals(configuredSeriesFlavor)) {\n+      configuredSeriesFlavor = \"dublincore/series\";\n+    }\n+\n+    String episodeFlavorType = configuredEpisodeFlavor.split(\"/\")[0];\n+    String episodeFlavorSubtype = configuredEpisodeFlavor.split(\"/\")[1];\n+    String seriesFlavorType = configuredSeriesFlavor.split(\"/\")[0];\n+    String seriesFlavorSubtype = configuredSeriesFlavor.split(\"/\")[1];\n+\n+    //Get episode metadata-catalog\n+    Catalog[] catalogs = mp.\n+            getCatalogs(new MediaPackageElementFlavor(episodeFlavorType, StringUtils.lowerCase(episodeFlavorSubtype)));\n+\n+   //load metadata-catalog\n+    DublinCoreCatalog dc = DublinCoreUtil.loadDublinCore(getWorkspace(), catalogs[0]);\n+    Map<EName, List<DublinCoreValue>> data = dc.getValues();\n+\n+    //build xml from metadata\n     StringBuilder xml = new StringBuilder();\n     xml.append(\"<metadata xmlns:dcterms=\\\"http://purl.org/dc/terms/\\\">\");\n \n-    for (String title : getFirstMetadataValue(metadata.getTitles()))\n-      appendXml(xml, \"title\", title);\n-    for (String description : getFirstMetadataValue(metadata.getDescription()))\n-      appendXml(xml, \"description\", description);\n-    for (String language : metadata.getLanguage())\n-      appendXml(xml, \"language\", language);\n-    for (Date created : metadata.getCreated())\n-      /* Method formatDate of org.apache.xalan.lib.ExsltDatetime requires the format CCYY-MM-DDThh:mm:ss */\n-      appendXml(xml, \"date\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(created));\n-    for (Date[] period : metadata.getTemporalPeriod()) {\n-      if (period[0] != null) {\n-        appendXml(xml, \"start\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[0]));\n-      }\n-      if (period[1] != null) {\n-        appendXml(xml, \"end\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[1]));\n+    for (Map.Entry<EName, List<DublinCoreValue>> entry : data.entrySet()) {\n+      String currentKey = entry.getKey().getLocalName();\n+      switch(currentKey) {\n+        case \"creator\": appendXml(xml, \"creators\", entry.getValue().get(0).getValue()); break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE1MDQ4MQ=="}, "originalCommit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM2MTQzNA==", "bodyText": "I would prefer the same order. It may be technically not possible. If you put only the first value of the list, you may end up with different values each call of the handler.", "url": "https://github.com/opencast/opencast/pull/1877#discussion_r503361434", "createdAt": "2020-10-12T15:10:10Z", "author": {"login": "wsmirnow"}, "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "diffHunk": "@@ -302,57 +304,87 @@ protected String loadXsl(WorkflowOperationInstance operation) throws WorkflowOpe\n     }\n   }\n \n-  protected String getMetadataXml(MediaPackage mp) {\n-    StaticMetadata metadata = getStaticMetadataService().getMetadata(mp);\n+  protected String getMetadataXml(MediaPackage mp, WorkflowOperationInstance operation) {\n+    //get specified episode/series flavor\n+    String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));\n+    String configuredSeriesFlavor = StringUtils.trimToEmpty(operation.getConfiguration(SERIES_FLAVOR));\n \n+    //use dublincore/episode and dublincore/series metadata-catalogs as default\n+    if ((\"\").equals(configuredEpisodeFlavor)) {\n+      configuredEpisodeFlavor = \"dublincore/episode\";\n+    }\n+    if ((\"\").equals(configuredSeriesFlavor)) {\n+      configuredSeriesFlavor = \"dublincore/series\";\n+    }\n+\n+    String episodeFlavorType = configuredEpisodeFlavor.split(\"/\")[0];\n+    String episodeFlavorSubtype = configuredEpisodeFlavor.split(\"/\")[1];\n+    String seriesFlavorType = configuredSeriesFlavor.split(\"/\")[0];\n+    String seriesFlavorSubtype = configuredSeriesFlavor.split(\"/\")[1];\n+\n+    //Get episode metadata-catalog\n+    Catalog[] catalogs = mp.\n+            getCatalogs(new MediaPackageElementFlavor(episodeFlavorType, StringUtils.lowerCase(episodeFlavorSubtype)));\n+\n+   //load metadata-catalog\n+    DublinCoreCatalog dc = DublinCoreUtil.loadDublinCore(getWorkspace(), catalogs[0]);\n+    Map<EName, List<DublinCoreValue>> data = dc.getValues();\n+\n+    //build xml from metadata\n     StringBuilder xml = new StringBuilder();\n     xml.append(\"<metadata xmlns:dcterms=\\\"http://purl.org/dc/terms/\\\">\");\n \n-    for (String title : getFirstMetadataValue(metadata.getTitles()))\n-      appendXml(xml, \"title\", title);\n-    for (String description : getFirstMetadataValue(metadata.getDescription()))\n-      appendXml(xml, \"description\", description);\n-    for (String language : metadata.getLanguage())\n-      appendXml(xml, \"language\", language);\n-    for (Date created : metadata.getCreated())\n-      /* Method formatDate of org.apache.xalan.lib.ExsltDatetime requires the format CCYY-MM-DDThh:mm:ss */\n-      appendXml(xml, \"date\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(created));\n-    for (Date[] period : metadata.getTemporalPeriod()) {\n-      if (period[0] != null) {\n-        appendXml(xml, \"start\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[0]));\n-      }\n-      if (period[1] != null) {\n-        appendXml(xml, \"end\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[1]));\n+    for (Map.Entry<EName, List<DublinCoreValue>> entry : data.entrySet()) {\n+      String currentKey = entry.getKey().getLocalName();\n+      switch(currentKey) {\n+        case \"creator\": appendXml(xml, \"creators\", entry.getValue().get(0).getValue()); break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE1MDQ4MQ=="}, "originalCommit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM2ODQ1Mg==", "bodyText": "Now I'm confused as well :D\nThe code should be deterministic, shouldn't it?\nSo you would get the same. You just don't get all of them.\n@jduehring, what happens if you iterate e.g. over multiple creator fields and call appendXml every time?", "url": "https://github.com/opencast/opencast/pull/1877#discussion_r503368452", "createdAt": "2020-10-12T15:21:46Z", "author": {"login": "lkiesow"}, "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "diffHunk": "@@ -302,57 +304,87 @@ protected String loadXsl(WorkflowOperationInstance operation) throws WorkflowOpe\n     }\n   }\n \n-  protected String getMetadataXml(MediaPackage mp) {\n-    StaticMetadata metadata = getStaticMetadataService().getMetadata(mp);\n+  protected String getMetadataXml(MediaPackage mp, WorkflowOperationInstance operation) {\n+    //get specified episode/series flavor\n+    String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));\n+    String configuredSeriesFlavor = StringUtils.trimToEmpty(operation.getConfiguration(SERIES_FLAVOR));\n \n+    //use dublincore/episode and dublincore/series metadata-catalogs as default\n+    if ((\"\").equals(configuredEpisodeFlavor)) {\n+      configuredEpisodeFlavor = \"dublincore/episode\";\n+    }\n+    if ((\"\").equals(configuredSeriesFlavor)) {\n+      configuredSeriesFlavor = \"dublincore/series\";\n+    }\n+\n+    String episodeFlavorType = configuredEpisodeFlavor.split(\"/\")[0];\n+    String episodeFlavorSubtype = configuredEpisodeFlavor.split(\"/\")[1];\n+    String seriesFlavorType = configuredSeriesFlavor.split(\"/\")[0];\n+    String seriesFlavorSubtype = configuredSeriesFlavor.split(\"/\")[1];\n+\n+    //Get episode metadata-catalog\n+    Catalog[] catalogs = mp.\n+            getCatalogs(new MediaPackageElementFlavor(episodeFlavorType, StringUtils.lowerCase(episodeFlavorSubtype)));\n+\n+   //load metadata-catalog\n+    DublinCoreCatalog dc = DublinCoreUtil.loadDublinCore(getWorkspace(), catalogs[0]);\n+    Map<EName, List<DublinCoreValue>> data = dc.getValues();\n+\n+    //build xml from metadata\n     StringBuilder xml = new StringBuilder();\n     xml.append(\"<metadata xmlns:dcterms=\\\"http://purl.org/dc/terms/\\\">\");\n \n-    for (String title : getFirstMetadataValue(metadata.getTitles()))\n-      appendXml(xml, \"title\", title);\n-    for (String description : getFirstMetadataValue(metadata.getDescription()))\n-      appendXml(xml, \"description\", description);\n-    for (String language : metadata.getLanguage())\n-      appendXml(xml, \"language\", language);\n-    for (Date created : metadata.getCreated())\n-      /* Method formatDate of org.apache.xalan.lib.ExsltDatetime requires the format CCYY-MM-DDThh:mm:ss */\n-      appendXml(xml, \"date\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(created));\n-    for (Date[] period : metadata.getTemporalPeriod()) {\n-      if (period[0] != null) {\n-        appendXml(xml, \"start\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[0]));\n-      }\n-      if (period[1] != null) {\n-        appendXml(xml, \"end\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[1]));\n+    for (Map.Entry<EName, List<DublinCoreValue>> entry : data.entrySet()) {\n+      String currentKey = entry.getKey().getLocalName();\n+      switch(currentKey) {\n+        case \"creator\": appendXml(xml, \"creators\", entry.getValue().get(0).getValue()); break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE1MDQ4MQ=="}, "originalCommit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDAwMzM4Ng==", "bodyText": "Not sure how to test this. What would be the easiest way to get an episode containing metadata with multiple creator fields? Should this happen when I add multiple creators via the admin-ui? So for each creator one creator field?\nCurrently there seems to be a bug so that this does not happen. (Probably the reason for #1224 as well)\nIn theory my code should currently add  the same field multiple times, which is also not ideal, i guess.", "url": "https://github.com/opencast/opencast/pull/1877#discussion_r510003386", "createdAt": "2020-10-22T09:10:13Z", "author": {"login": "jduehring"}, "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "diffHunk": "@@ -302,57 +304,87 @@ protected String loadXsl(WorkflowOperationInstance operation) throws WorkflowOpe\n     }\n   }\n \n-  protected String getMetadataXml(MediaPackage mp) {\n-    StaticMetadata metadata = getStaticMetadataService().getMetadata(mp);\n+  protected String getMetadataXml(MediaPackage mp, WorkflowOperationInstance operation) {\n+    //get specified episode/series flavor\n+    String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));\n+    String configuredSeriesFlavor = StringUtils.trimToEmpty(operation.getConfiguration(SERIES_FLAVOR));\n \n+    //use dublincore/episode and dublincore/series metadata-catalogs as default\n+    if ((\"\").equals(configuredEpisodeFlavor)) {\n+      configuredEpisodeFlavor = \"dublincore/episode\";\n+    }\n+    if ((\"\").equals(configuredSeriesFlavor)) {\n+      configuredSeriesFlavor = \"dublincore/series\";\n+    }\n+\n+    String episodeFlavorType = configuredEpisodeFlavor.split(\"/\")[0];\n+    String episodeFlavorSubtype = configuredEpisodeFlavor.split(\"/\")[1];\n+    String seriesFlavorType = configuredSeriesFlavor.split(\"/\")[0];\n+    String seriesFlavorSubtype = configuredSeriesFlavor.split(\"/\")[1];\n+\n+    //Get episode metadata-catalog\n+    Catalog[] catalogs = mp.\n+            getCatalogs(new MediaPackageElementFlavor(episodeFlavorType, StringUtils.lowerCase(episodeFlavorSubtype)));\n+\n+   //load metadata-catalog\n+    DublinCoreCatalog dc = DublinCoreUtil.loadDublinCore(getWorkspace(), catalogs[0]);\n+    Map<EName, List<DublinCoreValue>> data = dc.getValues();\n+\n+    //build xml from metadata\n     StringBuilder xml = new StringBuilder();\n     xml.append(\"<metadata xmlns:dcterms=\\\"http://purl.org/dc/terms/\\\">\");\n \n-    for (String title : getFirstMetadataValue(metadata.getTitles()))\n-      appendXml(xml, \"title\", title);\n-    for (String description : getFirstMetadataValue(metadata.getDescription()))\n-      appendXml(xml, \"description\", description);\n-    for (String language : metadata.getLanguage())\n-      appendXml(xml, \"language\", language);\n-    for (Date created : metadata.getCreated())\n-      /* Method formatDate of org.apache.xalan.lib.ExsltDatetime requires the format CCYY-MM-DDThh:mm:ss */\n-      appendXml(xml, \"date\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(created));\n-    for (Date[] period : metadata.getTemporalPeriod()) {\n-      if (period[0] != null) {\n-        appendXml(xml, \"start\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[0]));\n-      }\n-      if (period[1] != null) {\n-        appendXml(xml, \"end\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[1]));\n+    for (Map.Entry<EName, List<DublinCoreValue>> entry : data.entrySet()) {\n+      String currentKey = entry.getKey().getLocalName();\n+      switch(currentKey) {\n+        case \"creator\": appendXml(xml, \"creators\", entry.getValue().get(0).getValue()); break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE1MDQ4MQ=="}, "originalCommit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY1NTk1MQ==", "bodyText": "Sorry for the late reply \ud83d\ude48\nThe following cURL command will ingest media with two titles (which will mostly be ignored by Opencast code and just the first is usually being used) and multiple creators (which Opencast can handle just fine\u2026 mostly):\ncurl -i -u admin:opencast \\\n  https://develop.opencast.org/ingest/addMediaPackage \\\n  -F 'flavor=presentation/source' \\\n  -F 'BODY=@sintel_trailer-1080p.mp4' \\\n  -F title=\"Title 1\" \\\n  -F title=\"Title 2\" \\\n  -F creator=\"Creator 1\" \\\n  -F creator=\"Creator 2\"", "url": "https://github.com/opencast/opencast/pull/1877#discussion_r546655951", "createdAt": "2020-12-21T11:31:41Z", "author": {"login": "lkiesow"}, "path": "modules/cover-image-workflowoperation/src/main/java/org/opencastproject/workflow/handler/coverimage/CoverImageWorkflowOperationHandlerBase.java", "diffHunk": "@@ -302,57 +304,87 @@ protected String loadXsl(WorkflowOperationInstance operation) throws WorkflowOpe\n     }\n   }\n \n-  protected String getMetadataXml(MediaPackage mp) {\n-    StaticMetadata metadata = getStaticMetadataService().getMetadata(mp);\n+  protected String getMetadataXml(MediaPackage mp, WorkflowOperationInstance operation) {\n+    //get specified episode/series flavor\n+    String configuredEpisodeFlavor = StringUtils.trimToEmpty(operation.getConfiguration(EPISODE_FLAVOR));\n+    String configuredSeriesFlavor = StringUtils.trimToEmpty(operation.getConfiguration(SERIES_FLAVOR));\n \n+    //use dublincore/episode and dublincore/series metadata-catalogs as default\n+    if ((\"\").equals(configuredEpisodeFlavor)) {\n+      configuredEpisodeFlavor = \"dublincore/episode\";\n+    }\n+    if ((\"\").equals(configuredSeriesFlavor)) {\n+      configuredSeriesFlavor = \"dublincore/series\";\n+    }\n+\n+    String episodeFlavorType = configuredEpisodeFlavor.split(\"/\")[0];\n+    String episodeFlavorSubtype = configuredEpisodeFlavor.split(\"/\")[1];\n+    String seriesFlavorType = configuredSeriesFlavor.split(\"/\")[0];\n+    String seriesFlavorSubtype = configuredSeriesFlavor.split(\"/\")[1];\n+\n+    //Get episode metadata-catalog\n+    Catalog[] catalogs = mp.\n+            getCatalogs(new MediaPackageElementFlavor(episodeFlavorType, StringUtils.lowerCase(episodeFlavorSubtype)));\n+\n+   //load metadata-catalog\n+    DublinCoreCatalog dc = DublinCoreUtil.loadDublinCore(getWorkspace(), catalogs[0]);\n+    Map<EName, List<DublinCoreValue>> data = dc.getValues();\n+\n+    //build xml from metadata\n     StringBuilder xml = new StringBuilder();\n     xml.append(\"<metadata xmlns:dcterms=\\\"http://purl.org/dc/terms/\\\">\");\n \n-    for (String title : getFirstMetadataValue(metadata.getTitles()))\n-      appendXml(xml, \"title\", title);\n-    for (String description : getFirstMetadataValue(metadata.getDescription()))\n-      appendXml(xml, \"description\", description);\n-    for (String language : metadata.getLanguage())\n-      appendXml(xml, \"language\", language);\n-    for (Date created : metadata.getCreated())\n-      /* Method formatDate of org.apache.xalan.lib.ExsltDatetime requires the format CCYY-MM-DDThh:mm:ss */\n-      appendXml(xml, \"date\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(created));\n-    for (Date[] period : metadata.getTemporalPeriod()) {\n-      if (period[0] != null) {\n-        appendXml(xml, \"start\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[0]));\n-      }\n-      if (period[1] != null) {\n-        appendXml(xml, \"end\", new SimpleDateFormat(\"YYYY-MM-dd'T'HH:mm:ss\").format(period[1]));\n+    for (Map.Entry<EName, List<DublinCoreValue>> entry : data.entrySet()) {\n+      String currentKey = entry.getKey().getLocalName();\n+      switch(currentKey) {\n+        case \"creator\": appendXml(xml, \"creators\", entry.getValue().get(0).getValue()); break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE1MDQ4MQ=="}, "originalCommit": {"oid": "614d225a3f24d5e05ec8fa5dd67215a92f2b48a2"}, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3127, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}