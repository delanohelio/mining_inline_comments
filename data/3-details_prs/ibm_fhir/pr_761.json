{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NDY2OTQ2", "number": 761, "title": "Issue #686 - added Javadoc to FHIRPath model", "bodyText": "Signed-off-by: John T.E. Timm johntimm@us.ibm.com", "createdAt": "2020-03-05T19:48:05Z", "url": "https://github.com/IBM/FHIR/pull/761", "merged": true, "mergeCommit": {"oid": "bca9c54121276c4e63606581c02ec2ee9757cb84"}, "closed": true, "closedAt": "2020-03-06T21:44:05Z", "author": {"login": "JohnTimm"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKw9WrgH2gAyMzg0NDY2OTQ2Ojg3NjhiNTk2YTQ4OTlmOGExYThlNjhjZTIzN2VhOTE3OTBjYzU1ZTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLHEeEAFqTM3MDY0MDAzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8768b596a4899f8a1a8e68ce237ea91790cc55e5", "author": {"user": {"login": "JohnTimm", "name": "John T.E. Timm"}}, "url": "https://github.com/IBM/FHIR/commit/8768b596a4899f8a1a8e68ce237ea91790cc55e5", "committedDate": "2020-03-05T19:47:47Z", "message": "Issue #686 - added Javadoc to FHIRPath model\n\nSigned-off-by: John T.E. Timm <johntimm@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be7dcdbb4173ca0c327dcea562e1cbb86c4589ac", "author": {"user": {"login": "JohnTimm", "name": "John T.E. Timm"}}, "url": "https://github.com/IBM/FHIR/commit/be7dcdbb4173ca0c327dcea562e1cbb86c4589ac", "committedDate": "2020-03-05T19:56:22Z", "message": "Issue #686 - minor tweaks\n\nSigned-off-by: John T.E. Timm <johntimm@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMzYyOTYy", "url": "https://github.com/IBM/FHIR/pull/761#pullrequestreview-370362962", "createdAt": "2020-03-06T14:31:45Z", "commit": {"oid": "be7dcdbb4173ca0c327dcea562e1cbb86c4589ac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDozMTo0NVrOFy6sfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDozMTo0NVrOFy6sfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzNDc4MA==", "bodyText": "I think @inheritDoc is just if you want to combine some new text with the parent text.  If you're not adding anything, just leave it off.  But maybe double-check me :-)", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r388934780", "createdAt": "2020-03-06T14:31:45Z", "author": {"login": "lmsurpre"}, "path": "fhir-path/src/main/java/com/ibm/fhir/path/FHIRPathAbstractNode.java", "diffHunk": "@@ -28,56 +28,92 @@ protected FHIRPathAbstractNode(Builder builder) {\n         children = Collections.unmodifiableCollection(builder.children);\n     }\n     \n+    /**\n+     * {@inheritDoc}\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7dcdbb4173ca0c327dcea562e1cbb86c4589ac"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2297aaf312804d806f0f918fd82d5278c7060104", "author": {"user": {"login": "JohnTimm", "name": "John T.E. Timm"}}, "url": "https://github.com/IBM/FHIR/commit/2297aaf312804d806f0f918fd82d5278c7060104", "committedDate": "2020-03-06T17:13:34Z", "message": "Issue #686 - Updated per PR feedback\n\nSigned-off-by: John T.E. Timm <johntimm@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNDkyNjI0", "url": "https://github.com/IBM/FHIR/pull/761#pullrequestreview-370492624", "createdAt": "2020-03-06T17:18:41Z", "commit": {"oid": "2297aaf312804d806f0f918fd82d5278c7060104"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzoxODo0MVrOFzA0OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzoxODo0MVrOFzA0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNTA2NQ==", "bodyText": "is is worth keeping the \"potentially-empty non-null\" part?", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389035065", "createdAt": "2020-03-06T17:18:41Z", "author": {"login": "lmsurpre"}, "path": "fhir-path/src/main/java/com/ibm/fhir/path/evaluator/FHIRPathEvaluator.java", "diffHunk": "@@ -118,29 +146,95 @@ public EvaluationContext getEvaluationContext() {\n                 resourceOrElement.getClass().getName());\n     }\n     \n+    /**\n+     * Evaluate a FHIRPath expression against a {@link Resource}\n+     * \n+     * @param resource\n+     *     the resource\n+     * @param expr\n+     *     the FHIRPath expression to evaluate\n+     * @return\n+     *     the result of evaluation as a collection of FHIRPath nodes\n+     * @throws NullPointerException\n+     *     if any of the parameters are null    \n+     * @throws FHIRPathException\n+     *     if an exception occurs during evaluation\n+     */\n     public Collection<FHIRPathNode> evaluate(Resource resource, String expr) throws FHIRPathException {\n         return evaluate(new EvaluationContext(resource), expr);\n     }\n     \n+    /**\n+     * Evaluate a FHIRPath expression against an {@link Element}\n+     * \n+     * @param element\n+     *     the element\n+     * @param expr\n+     *     the FHIRPath expression to evaluate\n+     * @return\n+     *     the result of evaluation as a collection of FHIRPath nodes\n+     * @throws NullPointerException\n+     *     if any of the parameters are null    \n+     * @throws FHIRPathException\n+     *     if an exception occurs during evaluation\n+     */\n     public Collection<FHIRPathNode> evaluate(Element element, String expr) throws FHIRPathException {\n         return evaluate(new EvaluationContext(element), expr);\n     }\n     \n+    /**\n+     * Evaluate a FHIRPath expression using an existing evaluation context\n+     * \n+     * @param evaluationContext\n+     *     the evaluation context\n+     * @param expr\n+     *     the FHIRPath expression to evaluate\n+     * @return\n+     *     the result of evaluation as a collection of FHIRPath nodes\n+     * @throws NullPointerException\n+     *     if any of the parameters are null    \n+     * @throws FHIRPathException\n+     *     if an exception occurs during evaluation\n+     */\n     public Collection<FHIRPathNode> evaluate(EvaluationContext evaluationContext, String expr) throws FHIRPathException {\n         return evaluate(evaluationContext, expr, evaluationContext.getTree().getRoot());\n     }\n     \n+    /**\n+     * Evaluate a FHIRPath expression using an existing evaluation context against a FHIRPath node\n+     * \n+     * @param evaluationContext\n+     *     the evaluation context\n+     * @param expr\n+     *     the FHIRPath expression to evaluate\n+     * @param node\n+     *     the FHIRPath node\n+     * @return\n+     *     the result of evaluation as a collection of FHIRPath nodes\n+     * @throws NullPointerException\n+     *     if any of the parameters are null    \n+     * @throws FHIRPathException\n+     *     if an exception occurs during evaluation\n+     */\n     public Collection<FHIRPathNode> evaluate(EvaluationContext evaluationContext, String expr, FHIRPathNode node) throws FHIRPathException {\n         return evaluate(evaluationContext, expr, singleton(node));\n     }\n     \n     /**\n+     * Evaluate a FHIRPathExpression using an existing EvaluationContext against a collection of FHIRPath nodes\n+     * \n      * @param evaluationContext\n+     *     the evaluation context\n      * @param expr\n+     *     the FHIRPath expression to evaluate\n      * @param initialContext\n-     * @return a potentially-empty non-null collection of FHIRPathNodes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2297aaf312804d806f0f918fd82d5278c7060104"}, "originalPosition": 151}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNDkzNDE1", "url": "https://github.com/IBM/FHIR/pull/761#pullrequestreview-370493415", "createdAt": "2020-03-06T17:20:00Z", "commit": {"oid": "2297aaf312804d806f0f918fd82d5278c7060104"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzoyMDowMFrOFzA2gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzoyMDowMFrOFzA2gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNTY0OQ==", "bodyText": "how does this use a FHIRPath node?", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389035649", "createdAt": "2020-03-06T17:20:00Z", "author": {"login": "lmsurpre"}, "path": "fhir-path/src/main/java/com/ibm/fhir/path/evaluator/FHIRPathEvaluator.java", "diffHunk": "@@ -1262,22 +1369,58 @@ private EvaluationContext(FHIRPathTree tree) {\n             this.tree = tree;\n         }\n         \n+        /**\n+         * Get the FHIRPath tree associated with this EvaluationContext\n+         * \n+         * @return\n+         *     the FHIRPath tree associated with this EvaluationContext\n+         */\n         public FHIRPathTree getTree() {\n             return tree;\n         }\n         \n+        /**\n+         * Set an external constant using a name and FHIRPath node\n+         * \n+         * @param name\n+         *     the name\n+         * @param node\n+         *     the FHIRPath node\n+         */\n         public void setExternalConstant(String name, FHIRPathNode node) {\n             externalConstantMap.put(name, singleton(node));\n         }\n         \n+        /**\n+         * Set an external constant using a name and a collection of FHIRPath node\n+         * \n+         * @param name\n+         *     the name\n+         * @param nodes\n+         *     the collection of FHIRPath nodes\n+         */\n         public void setExternalConstant(String name, Collection<FHIRPathNode> nodes) {\n             externalConstantMap.put(name, nodes);\n         }\n         \n+        /**\n+         * Unset an external constant using a name and FHIRPath node", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2297aaf312804d806f0f918fd82d5278c7060104"}, "originalPosition": 247}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNDkzNzUz", "url": "https://github.com/IBM/FHIR/pull/761#pullrequestreview-370493753", "createdAt": "2020-03-06T17:20:30Z", "commit": {"oid": "2297aaf312804d806f0f918fd82d5278c7060104"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzoyMDozMFrOFzA3iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzoyMDozMFrOFzA3iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNTkxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     *     true if this EvaluationContext has an external constant with the given name if exists, otherwise false\n          \n          \n            \n                     *     true if this EvaluationContext has an external constant with the given name, otherwise false", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389035912", "createdAt": "2020-03-06T17:20:30Z", "author": {"login": "lmsurpre"}, "path": "fhir-path/src/main/java/com/ibm/fhir/path/evaluator/FHIRPathEvaluator.java", "diffHunk": "@@ -1297,6 +1440,14 @@ public void unsetExternalConstant(String name) {\n             }\n         }\n         \n+        /**\n+         * Indicates whether this EvaluationContext has an external constant with the given name\n+         * \n+         * @param name\n+         *     the name\n+         * @return\n+         *     true if this EvaluationContext has an external constant with the given name if exists, otherwise false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2297aaf312804d806f0f918fd82d5278c7060104"}, "originalPosition": 277}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNDk0MzEx", "url": "https://github.com/IBM/FHIR/pull/761#pullrequestreview-370494311", "createdAt": "2020-03-06T17:21:22Z", "commit": {"oid": "2297aaf312804d806f0f918fd82d5278c7060104"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzoyMToyMlrOFzA5NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzoyMToyMlrOFzA5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNjM0MQ==", "bodyText": "does it not throw NPE any more?", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389036341", "createdAt": "2020-03-06T17:21:22Z", "author": {"login": "lmsurpre"}, "path": "fhir-path/src/main/java/com/ibm/fhir/path/evaluator/FHIRPathEvaluator.java", "diffHunk": "@@ -90,20 +93,45 @@\n     \n     private FHIRPathEvaluator() { }\n     \n+    /**\n+     * Get the EvaluationContext associated with this FHIRPathEvaluator\n+     * \n+     * @return\n+     *     get the EvaluationContext associated with this FHIRPathEvaluator\n+     */\n     public EvaluationContext getEvaluationContext() {\n         return visitor.getEvaluationContext();\n     }\n     \n+    /**\n+     * Evaluate a FHIRPath expression\n+     * \n+     * @param expr\n+     *     the FHIRPath expression to evaluate\n+     * @return\n+     *     the result of evaluation as a collection of FHIRPath nodes\n+     * @throws NullPointerException\n+     *     if any of the parameters are null    \n+     * @throws FHIRPathException\n+     *     if an exception occurs during evaluation\n+     */\n     public Collection<FHIRPathNode> evaluate(String expr) throws FHIRPathException {\n         return evaluate(new EvaluationContext(), expr, empty());\n     }\n     \n     /**\n+     * Evaluate a FHIRPath expression against a {@link Resource} or {@link Element}\n+     * \n      * @param resourceOrElement\n+     *     the {@link Resource} or {@link Element}\n      * @param expr\n-     * @return a potentially-empty non-null collection of FHIRPathNodes\n+     *     the FHIRPath expression to evaluate\n+     * @return\n+     *     the result of evaluation as a collection of FHIRPath nodes\n+     * @throws NullPointerException\n+     *     if any of the parameters are null    \n      * @throws FHIRPathException\n-     * @throws NullPointerException if any of the passed arguments are null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2297aaf312804d806f0f918fd82d5278c7060104"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNDk0OTgx", "url": "https://github.com/IBM/FHIR/pull/761#pullrequestreview-370494981", "createdAt": "2020-03-06T17:22:23Z", "commit": {"oid": "2297aaf312804d806f0f918fd82d5278c7060104"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzoyMjoyM1rOFzA7YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzoyMjoyM1rOFzA7YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNjg5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Indicates whether the {@link TypeInfo} wrapped by this FHIRPathTypeInfoNode is equal the parameter\n          \n          \n            \n                 * Indicates whether the {@link TypeInfo} wrapped by this FHIRPathTypeInfoNode is equal to the parameter", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389036897", "createdAt": "2020-03-06T17:22:23Z", "author": {"login": "lmsurpre"}, "path": "fhir-path/src/main/java/com/ibm/fhir/path/FHIRPathTypeInfoNode.java", "diffHunk": "@@ -44,23 +69,35 @@ private Builder(FHIRPathType type, TypeInfo typeInfo) {\n                 children.add(FHIRPathStringValue.stringValue(\"name\", typeInfo.getName()));\n             }\n         }\n-\n+        \n+        /**\n+         * Build a FHIRPathTypeInfoNode instance using this builder\n+         * \n+         * @return\n+         *     a new FHIRPathTypeInfoNode instance\n+         */\n         @Override\n         public FHIRPathTypeInfoNode build() {\n             return new FHIRPathTypeInfoNode(this);\n         }\n     }\n-\n-    @Override\n-    public void accept(FHIRPathNodeVisitor visitor) {\n-        visitor.visit(this);\n-    }\n-\n+    \n+    /**\n+     * The compareTo operation is not supported for this FHIRPathTypeInfoNode\n+     */\n     @Override\n     public int compareTo(FHIRPathNode o) {\n         throw new UnsupportedOperationException();\n     }\n     \n+    /**\n+     * Indicates whether the {@link TypeInfo} wrapped by this FHIRPathTypeInfoNode is equal the parameter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2297aaf312804d806f0f918fd82d5278c7060104"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNDk3MjYx", "url": "https://github.com/IBM/FHIR/pull/761#pullrequestreview-370497261", "createdAt": "2020-03-06T17:26:02Z", "commit": {"oid": "2297aaf312804d806f0f918fd82d5278c7060104"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNTAzMzk3", "url": "https://github.com/IBM/FHIR/pull/761#pullrequestreview-370503397", "createdAt": "2020-03-06T17:35:49Z", "commit": {"oid": "2297aaf312804d806f0f918fd82d5278c7060104"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzozNTo0OVrOFzBWJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzozNTo0OVrOFzBWJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0Mzc1MA==", "bodyText": "how is it set?  to each node in the collection?", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389043750", "createdAt": "2020-03-06T17:35:49Z", "author": {"login": "lmsurpre"}, "path": "fhir-path/src/main/java/com/ibm/fhir/path/evaluator/FHIRPathEvaluator.java", "diffHunk": "@@ -1262,22 +1369,58 @@ private EvaluationContext(FHIRPathTree tree) {\n             this.tree = tree;\n         }\n         \n+        /**\n+         * Get the FHIRPath tree associated with this EvaluationContext\n+         * \n+         * @return\n+         *     the FHIRPath tree associated with this EvaluationContext\n+         */\n         public FHIRPathTree getTree() {\n             return tree;\n         }\n         \n+        /**\n+         * Set an external constant using a name and FHIRPath node\n+         * \n+         * @param name\n+         *     the name\n+         * @param node\n+         *     the FHIRPath node\n+         */\n         public void setExternalConstant(String name, FHIRPathNode node) {\n             externalConstantMap.put(name, singleton(node));\n         }\n         \n+        /**\n+         * Set an external constant using a name and a collection of FHIRPath node", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2297aaf312804d806f0f918fd82d5278c7060104"}, "originalPosition": 235}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "545b3010fdb96e60fa067af1b63413851a8e1381", "author": {"user": {"login": "JohnTimm", "name": "John T.E. Timm"}}, "url": "https://github.com/IBM/FHIR/commit/545b3010fdb96e60fa067af1b63413851a8e1381", "committedDate": "2020-03-06T18:27:14Z", "message": "Issue #686 - more updates per PR feedback\n\nSigned-off-by: John T.E. Timm <johntimm@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjQwMDM0", "url": "https://github.com/IBM/FHIR/pull/761#pullrequestreview-370640034", "createdAt": "2020-03-06T21:33:28Z", "commit": {"oid": "545b3010fdb96e60fa067af1b63413851a8e1381"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 489, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}