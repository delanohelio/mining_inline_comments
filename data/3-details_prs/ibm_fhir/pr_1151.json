{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMjg1ODI3", "number": 1151, "title": "Issue #1148 - introduced class to represent match result for translate", "bodyText": "Signed-off-by: John T.E. Timm johntimm@us.ibm.com", "createdAt": "2020-05-26T15:37:52Z", "url": "https://github.com/IBM/FHIR/pull/1151", "merged": true, "mergeCommit": {"oid": "9e19a8a7a358d83548fe7754ee083674a46afe07"}, "closed": true, "closedAt": "2020-05-26T16:30:49Z", "author": {"login": "JohnTimm"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclGhvjAH2gAyNDIzMjg1ODI3OjY1NzY5ZTQ2ZmVjYjY5ZTFkZjEyM2U1NDU3M2EwMjA0ZDIwNGE3MTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclGlWBAFqTQxODQzMDE0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "65769e46fecb69e1df123e54573a0204d204a718", "author": {"user": {"login": "JohnTimm", "name": "John T.E. Timm"}}, "url": "https://github.com/IBM/FHIR/commit/65769e46fecb69e1df123e54573a0204d204a718", "committedDate": "2020-05-26T15:37:34Z", "message": "Issue #1148 - introduced class to represent match result for translate\n\nSigned-off-by: John T.E. Timm <johntimm@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NDI5ODM4", "url": "https://github.com/IBM/FHIR/pull/1151#pullrequestreview-418429838", "createdAt": "2020-05-26T15:41:10Z", "commit": {"oid": "65769e46fecb69e1df123e54573a0204d204a718"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0MToxMFrOGakcIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0MToxMFrOGakcIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxMzE4NA==", "bodyText": "just noticing this now... any reason to combine 34,35", "url": "https://github.com/IBM/FHIR/pull/1151#discussion_r430513184", "createdAt": "2020-05-26T15:41:10Z", "author": {"login": "prb112"}, "path": "fhir-term/src/main/java/com/ibm/fhir/term/util/ConceptMapSupport.java", "diffHunk": "@@ -11,30 +11,68 @@\n import java.util.stream.Collectors;\n \n import com.ibm.fhir.model.resource.ConceptMap;\n-import com.ibm.fhir.model.resource.ConceptMap.Group.Element.Target;\n+import com.ibm.fhir.model.resource.ConceptMap.Group;\n+import com.ibm.fhir.model.resource.ConceptMap.Group.Element;\n import com.ibm.fhir.model.type.Coding;\n+import com.ibm.fhir.model.type.String;\n+import com.ibm.fhir.model.type.Uri;\n import com.ibm.fhir.registry.FHIRRegistry;\n+import com.ibm.fhir.term.spi.Match;\n \n public final class ConceptMapSupport {\n     private ConceptMapSupport() { }\n \n-    public static List<Target> translate(ConceptMap conceptMap, Coding coding) {\n+    public static List<Match> translate(ConceptMap conceptMap, Coding coding) {\n         return conceptMap.getGroup().stream()\n                 .filter(group -> group.getSource() != null)\n                 .filter(group -> group.getSource().equals(coding.getSystem()))\n                 .filter(group -> group.getSourceVersion() == null ||\n                     coding.getVersion() == null ||\n                     group.getSourceVersion().equals(coding.getVersion()))\n-                .map(group -> group.getElement())\n-                .flatMap(List::stream)\n-                .filter(element -> element.getCode() != null)\n-                .filter(element -> element.getCode().equals(coding.getCode()))\n-                .map(element -> element.getTarget())\n+                .map(group -> group.toBuilder()\n+                    .element(group.getElement().stream()\n+                        .filter(element -> element.getCode() != null)\n+                        .filter(element -> element.getCode().equals(coding.getCode()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65769e46fecb69e1df123e54573a0204d204a718"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NDMwMTQ1", "url": "https://github.com/IBM/FHIR/pull/1151#pullrequestreview-418430145", "createdAt": "2020-05-26T15:41:30Z", "commit": {"oid": "65769e46fecb69e1df123e54573a0204d204a718"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 236, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}