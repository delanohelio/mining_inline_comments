{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0NDg2Njgw", "number": 1502, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMjowODoxOFrOEihG_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMjoxMjoxOFrOEihL8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NjI5NTAxOnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMjowODoxOFrOHQcNLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMTo1ODo0M1rOHSdQjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAwMTM5MA==", "bodyText": "small comment, no action necessary, just awareness.\nit comes off as a double negative and makes it slightly less readable", "url": "https://github.com/IBM/FHIR/pull/1502#discussion_r487001390", "createdAt": "2020-09-11T12:08:18Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -59,6 +59,7 @@\n  */\n public class FHIRResource {\n     private static final Logger log = java.util.logging.Logger.getLogger(FHIRResource.class.getName());\n+    protected static final boolean NO_SKIP_VALIDATION = false; // do not skip validation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33777741716112876736efb0f9c5f6baa2fe67ab"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2NjE5Ng==", "bodyText": "Yeah, I struggled with this myself...I have SKIP_VALIDATION in other places. I thought of DO_VALIDATION...but then the value would be false also, so that's just as confusing. No win.", "url": "https://github.com/IBM/FHIR/pull/1502#discussion_r487066196", "createdAt": "2020-09-11T14:02:30Z", "author": {"login": "punktilious"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -59,6 +59,7 @@\n  */\n public class FHIRResource {\n     private static final Logger log = java.util.logging.Logger.getLogger(FHIRResource.class.getName());\n+    protected static final boolean NO_SKIP_VALIDATION = false; // do not skip validation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAwMTM5MA=="}, "originalCommit": {"oid": "33777741716112876736efb0f9c5f6baa2fe67ab"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM0NjE2Mg==", "bodyText": "FWIW I find either SKIP_VALIDATION = false or DO_VALIDATION = true to be less confusing than NO_SKIP_VALIDATION = false", "url": "https://github.com/IBM/FHIR/pull/1502#discussion_r488346162", "createdAt": "2020-09-15T02:33:36Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -59,6 +59,7 @@\n  */\n public class FHIRResource {\n     private static final Logger log = java.util.logging.Logger.getLogger(FHIRResource.class.getName());\n+    protected static final boolean NO_SKIP_VALIDATION = false; // do not skip validation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAwMTM5MA=="}, "originalCommit": {"oid": "33777741716112876736efb0f9c5f6baa2fe67ab"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExNTc4OQ==", "bodyText": "I've addressed this by taking John's suggestion of using a couple of default methods in the interface.", "url": "https://github.com/IBM/FHIR/pull/1502#discussion_r489115789", "createdAt": "2020-09-16T01:58:43Z", "author": {"login": "punktilious"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -59,6 +59,7 @@\n  */\n public class FHIRResource {\n     private static final Logger log = java.util.logging.Logger.getLogger(FHIRResource.class.getName());\n+    protected static final boolean NO_SKIP_VALIDATION = false; // do not skip validation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAwMTM5MA=="}, "originalCommit": {"oid": "33777741716112876736efb0f9c5f6baa2fe67ab"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NjI5NzkzOnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMjowOToxOVrOHQcPDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMTo1ODo1N1rOHSdQ3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAwMTg3MQ==", "bodyText": "Since this is used in two spots, perhaps it should be reconciled into one constant", "url": "https://github.com/IBM/FHIR/pull/1502#discussion_r487001871", "createdAt": "2020-09-11T12:09:19Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "diffHunk": "@@ -100,7 +100,9 @@\n \n     private static final String EXTENSION_URL = \"http://ibm.com/fhir/extension\";\n     private static final String LOCAL_REF_PREFIX = \"urn:\";\n-\n+    private static final boolean SKIP_VALIDATION = true; // constant for when we want to avoid repeating validation\n+    private static final boolean NO_SKIP_VALIDATION = false; // do not skip validation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33777741716112876736efb0f9c5f6baa2fe67ab"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTExNTg3MA==", "bodyText": "cleaned up", "url": "https://github.com/IBM/FHIR/pull/1502#discussion_r489115870", "createdAt": "2020-09-16T01:58:57Z", "author": {"login": "punktilious"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "diffHunk": "@@ -100,7 +100,9 @@\n \n     private static final String EXTENSION_URL = \"http://ibm.com/fhir/extension\";\n     private static final String LOCAL_REF_PREFIX = \"urn:\";\n-\n+    private static final boolean SKIP_VALIDATION = true; // constant for when we want to avoid repeating validation\n+    private static final boolean NO_SKIP_VALIDATION = false; // do not skip validation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAwMTg3MQ=="}, "originalCommit": {"oid": "33777741716112876736efb0f9c5f6baa2fe67ab"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NjMwNDY1OnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMjoxMToxN1rOHQcTAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNDowNzowNlrOHQgVmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAwMjg4Mw==", "bodyText": "should it just be the validateInput(newResource)'s output not passing to a new arraylist?", "url": "https://github.com/IBM/FHIR/pull/1502#discussion_r487002883", "createdAt": "2020-09-11T12:11:17Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "diffHunk": "@@ -382,7 +385,7 @@ private FHIRRestOperationResponse doPatchOrUpdate(String type, String id, FHIRPa\n             }\n \n             // Validate the input and, if valid, start collecting supplemental warnings\n-            List<Issue> warnings = new ArrayList<>(validateInput(newResource));\n+            List<Issue> warnings = skipValidation ? new ArrayList<>() : new ArrayList<>(validateInput(newResource));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33777741716112876736efb0f9c5f6baa2fe67ab"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA2OTA4MA==", "bodyText": "I wanted to keep the semantics the same as the old code. I thought that warnings might be added to later on, hence the need to put it into its own list (the validateInput could be immutable). I think a better pattern would be to create the list, then pass it in for example: validateInput(warnings, newResource); The validateInput method could simply return the number of warnings it added.", "url": "https://github.com/IBM/FHIR/pull/1502#discussion_r487069080", "createdAt": "2020-09-11T14:07:06Z", "author": {"login": "punktilious"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "diffHunk": "@@ -382,7 +385,7 @@ private FHIRRestOperationResponse doPatchOrUpdate(String type, String id, FHIRPa\n             }\n \n             // Validate the input and, if valid, start collecting supplemental warnings\n-            List<Issue> warnings = new ArrayList<>(validateInput(newResource));\n+            List<Issue> warnings = skipValidation ? new ArrayList<>() : new ArrayList<>(validateInput(newResource));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAwMjg4Mw=="}, "originalCommit": {"oid": "33777741716112876736efb0f9c5f6baa2fe67ab"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NjMwNzY5OnYy", "diffSide": "RIGHT", "path": "operation/fhir-operation-document/src/main/java/com/ibm/fhir/operation/document/DocumentOperation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMjoxMjoxOFrOHQcUyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMjoxMjoxOFrOHQcUyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAwMzMzNw==", "bodyText": "should we drop this line?", "url": "https://github.com/IBM/FHIR/pull/1502#discussion_r487003337", "createdAt": "2020-09-11T12:12:18Z", "author": {"login": "prb112"}, "path": "operation/fhir-operation-document/src/main/java/com/ibm/fhir/operation/document/DocumentOperation.java", "diffHunk": "@@ -76,7 +76,7 @@ protected Parameters doInvoke(FHIROperationContext operationContext, Class<? ext\n                     \n                     if (persist) {\n                         // FHIRResourceHelper resourceHelper = (FHIRResourceHelper) operationContext.getProperty(FHIROperationContext.PROPNAME_RESOURCE_HELPER;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33777741716112876736efb0f9c5f6baa2fe67ab"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4676, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}