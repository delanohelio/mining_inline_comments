{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1Nzc0Njk3", "number": 866, "reviewThreads": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1Mjo1M1rODsw6Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNjoyNzowM1rODtMHSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjY1MjcxOnYy", "diffSide": "RIGHT", "path": ".github/workflows/build.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1Mjo1M1rOF9zEkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1Mjo1M1rOF9zEkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0NDIwOA==", "bodyText": "wasn't sure whether to use the same build.yml or introduce new one for this", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400344208", "createdAt": "2020-03-30T16:52:53Z", "author": {"login": "lmsurpre"}, "path": ".github/workflows/build.yml", "diffHunk": "@@ -266,3 +266,57 @@ jobs:\n       with:\n         name: integration-test-results-db2-${{ matrix.java }}\n         path: integration-test-results\n+db2-migration:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f864b54e2ee4af55559ddecb04d81f804110f2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjY1ODYzOnYy", "diffSide": "RIGHT", "path": "build/pre-migration-test-docker.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1NDoxMlrOF9zINQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1NDoxMlrOF9zINQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0NTE0MQ==", "bodyText": "this script is much like pre-integration-test-docker.sh except it calls a modified copy-dependencies script that downloads a previous schema cli jar instead of taking the newly built one from fhir-persistence-schema/target", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400345141", "createdAt": "2020-03-30T16:54:12Z", "author": {"login": "lmsurpre"}, "path": "build/pre-migration-test-docker.sh", "diffHunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env bash\n+###############################################################################\n+# (C) Copyright IBM Corp. 2016, 2020\n+#\n+# SPDX-License-Identifier: Apache-2.0\n+###############################################################################\n+set -ex\n+\n+echo \"Preparing environment for fhir-server integration tests...\"\n+if [[ -z \"${WORKSPACE}\" ]]; then\n+    echo \"ERROR: WORKSPACE environment variable not set!\"\n+    exit 2\n+fi\n+\n+# Set up installers and config files where docker processing can see them\n+cd ${WORKSPACE}/fhir-install/docker\n+./copy-dependencies-db2-migration.sh", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f864b54e2ee4af55559ddecb04d81f804110f2"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjY2MzQ3OnYy", "diffSide": "RIGHT", "path": "build/pre-migration-test-docker.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1NToyNlrOF9zLbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1NToyNlrOF9zLbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0NTk2NA==", "bodyText": "this will overwrite the \"previous version\" of the schema cli jar with the newly built one", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400345964", "createdAt": "2020-03-30T16:55:26Z", "author": {"login": "lmsurpre"}, "path": "build/pre-migration-test-docker.sh", "diffHunk": "@@ -0,0 +1,103 @@\n+#!/usr/bin/env bash\n+###############################################################################\n+# (C) Copyright IBM Corp. 2016, 2020\n+#\n+# SPDX-License-Identifier: Apache-2.0\n+###############################################################################\n+set -ex\n+\n+echo \"Preparing environment for fhir-server integration tests...\"\n+if [[ -z \"${WORKSPACE}\" ]]; then\n+    echo \"ERROR: WORKSPACE environment variable not set!\"\n+    exit 2\n+fi\n+\n+# Set up installers and config files where docker processing can see them\n+cd ${WORKSPACE}/fhir-install/docker\n+./copy-dependencies-db2-migration.sh\n+./copy-test-operations.sh\n+\n+# Stand up a docker container running the fhir server configured for integration tests\n+echo \"Bringing down any fhir server containers that might already be running as a precaution\"\n+docker-compose kill\n+docker-compose rm -f\n+\n+echo \"Bringing up db2... be patient, this will take a minute\"\n+docker-compose build --pull db2\n+docker-compose up -d db2\n+echo \">>> Current time: \" $(date)\n+\n+# TODO wait for it to be healthy instead of just Sleeping\n+(docker-compose logs --timestamps --follow db2 & P=$! && sleep 100 && kill $P)\n+\n+\n+echo \"Deploying the Db2 schema...\"\n+./deploySchemaAndTenant.sh\n+\n+echo \"Migrating the schema to the latest version...\"\n+./copy-dependencies-db2.sh", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f864b54e2ee4af55559ddecb04d81f804110f2"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDEwNzE0OnYy", "diffSide": "RIGHT", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/api/IDatabaseAdapter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDozNDozNlrOF-BJEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo1NDozM1rOF-UV6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NDczOQ==", "bodyText": "Is the purpose of this change to make it possible to run grant access multiple times for the same tenant?", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400574739", "createdAt": "2020-03-31T00:34:36Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/api/IDatabaseAdapter.java", "diffHunk": "@@ -185,7 +185,7 @@ public void createIndex(String schemaName, String tableName, String indexName, S\n      * @param tableName\n      * @param predicate\n      */\n-    public void createPermission(String schemaName, String permissionName, String tableName, String predicate);\n+    public void createOrReplacePermission(String schemaName, String permissionName, String tableName, String predicate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYxMzQyMw==", "bodyText": "no, its so that we can call it after updating the table (e.g. adding or removing columns).\ni found that without calling createOrReplacePermission after adjusting the table, then db2 would complain about the permission.", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400613423", "createdAt": "2020-03-31T02:57:41Z", "author": {"login": "lmsurpre"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/api/IDatabaseAdapter.java", "diffHunk": "@@ -185,7 +185,7 @@ public void createIndex(String schemaName, String tableName, String indexName, S\n      * @param tableName\n      * @param predicate\n      */\n-    public void createPermission(String schemaName, String permissionName, String tableName, String predicate);\n+    public void createOrReplacePermission(String schemaName, String permissionName, String tableName, String predicate);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NDczOQ=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg4OTMyMw==", "bodyText": "ha, this is really interesting finding! I don't know this before, I thought we don't use column access control, so should not have to ...", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400889323", "createdAt": "2020-03-31T12:54:33Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/api/IDatabaseAdapter.java", "diffHunk": "@@ -185,7 +185,7 @@ public void createIndex(String schemaName, String tableName, String indexName, S\n      * @param tableName\n      * @param predicate\n      */\n-    public void createPermission(String schemaName, String permissionName, String tableName, String predicate);\n+    public void createOrReplacePermission(String schemaName, String permissionName, String tableName, String predicate);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NDczOQ=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDExNTIyOnYy", "diffSide": "RIGHT", "path": ".github/workflows/build.yml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDozOToxMFrOF-BOAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDozNTo1OFrOF-PiIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NjAwMw==", "bodyText": "are you going to make db2 migration test part of the pipeline? seems it's only needed if there is any new db schema version available ...  and are you going to cover the migration path from all the previous versions to the current version ...", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400576003", "createdAt": "2020-03-31T00:39:10Z", "author": {"login": "albertwang-ibm"}, "path": ".github/workflows/build.yml", "diffHunk": "@@ -266,3 +266,56 @@ jobs:\n       with:\n         name: integration-test-results-db2-${{ matrix.java }}\n         path: integration-test-results\n+  db2-migration:\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        java: [ 'openjdk8' ]\n+      fail-fast: false\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Set up OpenJDK\n+      uses: joschi/setup-jdk@v1\n+      with:\n+        java-version: ${{ matrix.java }}\n+    - name: Build samples\n+      run: mvn -B install --file fhir-examples --no-transfer-progress\n+    - name: Build parent without tests\n+      run: |\n+        mvn -B install --file fhir-parent -DskipTests -P integration --no-transfer-progress\n+    - name: Server Integration Tests\n+      env:\n+        # debian-based linux uses C.UTF-8 by default and Derby doesn't like that\n+        LC_ALL: en_US.UTF-8\n+      run: |\n+        export WORKSPACE=${GITHUB_WORKSPACE}\n+        build/db2-migration-test-docker.sh\n+        mvn -B test -DskipTests=false -f fhir-server-test -DskipWebSocketTest=true --no-transfer-progress\n+        build/post-integration-test-docker.sh\n+    - name: Gather error logs\n+      if: failure()\n+      run: |\n+        it_results=integration-test-results\n+        rm -fr ${it_results} 2>/dev/null\n+        mkdir -p ${it_results}/server-logs\n+        mkdir -p ${it_results}/fhir-server-test\n+        containerId=$(docker ps -a | grep fhir | cut -d ' ' -f 1)\n+        if [[ -z \"${containerId}\" ]]; then\n+            echo \"Warning: Could not find fhir container!!!\"\n+        else\n+            echo \"fhir container id: $containerId\"\n+\n+            # Grab the container's console log\n+            docker logs $containerId  >& ${it_results}/docker-console.txt\n+\n+            echo \"Gathering post-test server logs from docker container: $containerId\"\n+            docker cp -L $containerId:/logs ${it_results}/server-logs\n+        fi\n+        echo \"Gathering integration test output\"\n+        cp -pr ${GITHUB_WORKSPACE}/fhir-server-test/target/surefire-reports/* ${it_results}/fhir-server-test\n+    - name: Upload logs\n+      if: always()\n+      uses: actions/upload-artifact@master\n+      with:\n+        name: db2-migration-test-results-${{ matrix.java }}\n+        path: integration-test-results", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYxMzcxMQ==", "bodyText": "for now, I just wanted to get db2 migration tests into the pipeline...we can add smarts about selectively running it in the future", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400613711", "createdAt": "2020-03-31T02:58:37Z", "author": {"login": "lmsurpre"}, "path": ".github/workflows/build.yml", "diffHunk": "@@ -266,3 +266,56 @@ jobs:\n       with:\n         name: integration-test-results-db2-${{ matrix.java }}\n         path: integration-test-results\n+  db2-migration:\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        java: [ 'openjdk8' ]\n+      fail-fast: false\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Set up OpenJDK\n+      uses: joschi/setup-jdk@v1\n+      with:\n+        java-version: ${{ matrix.java }}\n+    - name: Build samples\n+      run: mvn -B install --file fhir-examples --no-transfer-progress\n+    - name: Build parent without tests\n+      run: |\n+        mvn -B install --file fhir-parent -DskipTests -P integration --no-transfer-progress\n+    - name: Server Integration Tests\n+      env:\n+        # debian-based linux uses C.UTF-8 by default and Derby doesn't like that\n+        LC_ALL: en_US.UTF-8\n+      run: |\n+        export WORKSPACE=${GITHUB_WORKSPACE}\n+        build/db2-migration-test-docker.sh\n+        mvn -B test -DskipTests=false -f fhir-server-test -DskipWebSocketTest=true --no-transfer-progress\n+        build/post-integration-test-docker.sh\n+    - name: Gather error logs\n+      if: failure()\n+      run: |\n+        it_results=integration-test-results\n+        rm -fr ${it_results} 2>/dev/null\n+        mkdir -p ${it_results}/server-logs\n+        mkdir -p ${it_results}/fhir-server-test\n+        containerId=$(docker ps -a | grep fhir | cut -d ' ' -f 1)\n+        if [[ -z \"${containerId}\" ]]; then\n+            echo \"Warning: Could not find fhir container!!!\"\n+        else\n+            echo \"fhir container id: $containerId\"\n+\n+            # Grab the container's console log\n+            docker logs $containerId  >& ${it_results}/docker-console.txt\n+\n+            echo \"Gathering post-test server logs from docker container: $containerId\"\n+            docker cp -L $containerId:/logs ${it_results}/server-logs\n+        fi\n+        echo \"Gathering integration test output\"\n+        cp -pr ${GITHUB_WORKSPACE}/fhir-server-test/target/surefire-reports/* ${it_results}/fhir-server-test\n+    - name: Upload logs\n+      if: always()\n+      uses: actions/upload-artifact@master\n+      with:\n+        name: db2-migration-test-results-${{ matrix.java }}\n+        path: integration-test-results", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NjAwMw=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYxMzg1Mw==", "bodyText": "without this, then there is no way to know if the migrations you wrote actually work with db2", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400613853", "createdAt": "2020-03-31T02:59:04Z", "author": {"login": "lmsurpre"}, "path": ".github/workflows/build.yml", "diffHunk": "@@ -266,3 +266,56 @@ jobs:\n       with:\n         name: integration-test-results-db2-${{ matrix.java }}\n         path: integration-test-results\n+  db2-migration:\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        java: [ 'openjdk8' ]\n+      fail-fast: false\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Set up OpenJDK\n+      uses: joschi/setup-jdk@v1\n+      with:\n+        java-version: ${{ matrix.java }}\n+    - name: Build samples\n+      run: mvn -B install --file fhir-examples --no-transfer-progress\n+    - name: Build parent without tests\n+      run: |\n+        mvn -B install --file fhir-parent -DskipTests -P integration --no-transfer-progress\n+    - name: Server Integration Tests\n+      env:\n+        # debian-based linux uses C.UTF-8 by default and Derby doesn't like that\n+        LC_ALL: en_US.UTF-8\n+      run: |\n+        export WORKSPACE=${GITHUB_WORKSPACE}\n+        build/db2-migration-test-docker.sh\n+        mvn -B test -DskipTests=false -f fhir-server-test -DskipWebSocketTest=true --no-transfer-progress\n+        build/post-integration-test-docker.sh\n+    - name: Gather error logs\n+      if: failure()\n+      run: |\n+        it_results=integration-test-results\n+        rm -fr ${it_results} 2>/dev/null\n+        mkdir -p ${it_results}/server-logs\n+        mkdir -p ${it_results}/fhir-server-test\n+        containerId=$(docker ps -a | grep fhir | cut -d ' ' -f 1)\n+        if [[ -z \"${containerId}\" ]]; then\n+            echo \"Warning: Could not find fhir container!!!\"\n+        else\n+            echo \"fhir container id: $containerId\"\n+\n+            # Grab the container's console log\n+            docker logs $containerId  >& ${it_results}/docker-console.txt\n+\n+            echo \"Gathering post-test server logs from docker container: $containerId\"\n+            docker cp -L $containerId:/logs ${it_results}/server-logs\n+        fi\n+        echo \"Gathering integration test output\"\n+        cp -pr ${GITHUB_WORKSPACE}/fhir-server-test/target/surefire-reports/* ${it_results}/fhir-server-test\n+    - name: Upload logs\n+      if: always()\n+      uses: actions/upload-artifact@master\n+      with:\n+        name: db2-migration-test-results-${{ matrix.java }}\n+        path: integration-test-results", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NjAwMw=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxMDUzMA==", "bodyText": "at a minimum the code would have to run with any downstream dependency changes (database-utils/model)", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400810530", "createdAt": "2020-03-31T10:35:58Z", "author": {"login": "prb112"}, "path": ".github/workflows/build.yml", "diffHunk": "@@ -266,3 +266,56 @@ jobs:\n       with:\n         name: integration-test-results-db2-${{ matrix.java }}\n         path: integration-test-results\n+  db2-migration:\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        java: [ 'openjdk8' ]\n+      fail-fast: false\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Set up OpenJDK\n+      uses: joschi/setup-jdk@v1\n+      with:\n+        java-version: ${{ matrix.java }}\n+    - name: Build samples\n+      run: mvn -B install --file fhir-examples --no-transfer-progress\n+    - name: Build parent without tests\n+      run: |\n+        mvn -B install --file fhir-parent -DskipTests -P integration --no-transfer-progress\n+    - name: Server Integration Tests\n+      env:\n+        # debian-based linux uses C.UTF-8 by default and Derby doesn't like that\n+        LC_ALL: en_US.UTF-8\n+      run: |\n+        export WORKSPACE=${GITHUB_WORKSPACE}\n+        build/db2-migration-test-docker.sh\n+        mvn -B test -DskipTests=false -f fhir-server-test -DskipWebSocketTest=true --no-transfer-progress\n+        build/post-integration-test-docker.sh\n+    - name: Gather error logs\n+      if: failure()\n+      run: |\n+        it_results=integration-test-results\n+        rm -fr ${it_results} 2>/dev/null\n+        mkdir -p ${it_results}/server-logs\n+        mkdir -p ${it_results}/fhir-server-test\n+        containerId=$(docker ps -a | grep fhir | cut -d ' ' -f 1)\n+        if [[ -z \"${containerId}\" ]]; then\n+            echo \"Warning: Could not find fhir container!!!\"\n+        else\n+            echo \"fhir container id: $containerId\"\n+\n+            # Grab the container's console log\n+            docker logs $containerId  >& ${it_results}/docker-console.txt\n+\n+            echo \"Gathering post-test server logs from docker container: $containerId\"\n+            docker cp -L $containerId:/logs ${it_results}/server-logs\n+        fi\n+        echo \"Gathering integration test output\"\n+        cp -pr ${GITHUB_WORKSPACE}/fhir-server-test/target/surefire-reports/* ${it_results}/fhir-server-test\n+    - name: Upload logs\n+      if: always()\n+      uses: actions/upload-artifact@master\n+      with:\n+        name: db2-migration-test-results-${{ matrix.java }}\n+        path: integration-test-results", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NjAwMw=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDEyNDU2OnYy", "diffSide": "RIGHT", "path": "build/db2-migration-test-docker.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo0NDowMFrOF-BTcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMzowMDo1MlrOF-Dj0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NzM5NQ==", "bodyText": "which version of the schema is used here? version 1?", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400577395", "createdAt": "2020-03-31T00:44:00Z", "author": {"login": "albertwang-ibm"}, "path": "build/db2-migration-test-docker.sh", "diffHunk": "@@ -0,0 +1,102 @@\n+#!/usr/bin/env bash\n+###############################################################################\n+# (C) Copyright IBM Corp. 2016, 2020\n+#\n+# SPDX-License-Identifier: Apache-2.0\n+###############################################################################\n+set -ex\n+\n+echo \"Preparing environment for fhir-server integration tests...\"\n+if [[ -z \"${WORKSPACE}\" ]]; then\n+    echo \"ERROR: WORKSPACE environment variable not set!\"\n+    exit 2\n+fi\n+\n+# Set up installers and config files where docker processing can see them\n+cd ${WORKSPACE}/fhir-install/docker\n+./copy-dependencies-db2-migration.sh\n+\n+# Stand up a docker container running the fhir server configured for integration tests\n+echo \"Bringing down any fhir server containers that might already be running as a precaution\"\n+docker-compose kill\n+docker-compose rm -f\n+\n+echo \"Bringing up db2... be patient, this will take a minute\"\n+docker-compose build --pull db2\n+docker-compose up -d db2\n+echo \">>> Current time: \" $(date)\n+\n+# TODO wait for it to be healthy instead of just Sleeping\n+(docker-compose logs --timestamps --follow db2 & P=$! && sleep 100 && kill $P)\n+\n+echo \"Deploying the Db2 schema...\"\n+./deploySchemaAndTenant.sh\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYxNDM1NQ==", "bodyText": "the deploySchemaAndTenant script will actually work with any version of the cli jar; in this case its running with the version added there by copy-dependencies-db2-migration.sh which happens to be SCHEMA_VERSION=\"4.0.1\"", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400614355", "createdAt": "2020-03-31T03:00:52Z", "author": {"login": "lmsurpre"}, "path": "build/db2-migration-test-docker.sh", "diffHunk": "@@ -0,0 +1,102 @@\n+#!/usr/bin/env bash\n+###############################################################################\n+# (C) Copyright IBM Corp. 2016, 2020\n+#\n+# SPDX-License-Identifier: Apache-2.0\n+###############################################################################\n+set -ex\n+\n+echo \"Preparing environment for fhir-server integration tests...\"\n+if [[ -z \"${WORKSPACE}\" ]]; then\n+    echo \"ERROR: WORKSPACE environment variable not set!\"\n+    exit 2\n+fi\n+\n+# Set up installers and config files where docker processing can see them\n+cd ${WORKSPACE}/fhir-install/docker\n+./copy-dependencies-db2-migration.sh\n+\n+# Stand up a docker container running the fhir server configured for integration tests\n+echo \"Bringing down any fhir server containers that might already be running as a precaution\"\n+docker-compose kill\n+docker-compose rm -f\n+\n+echo \"Bringing up db2... be patient, this will take a minute\"\n+docker-compose build --pull db2\n+docker-compose up -d db2\n+echo \">>> Current time: \" $(date)\n+\n+# TODO wait for it to be healthy instead of just Sleeping\n+(docker-compose logs --timestamps --follow db2 & P=$! && sleep 100 && kill $P)\n+\n+echo \"Deploying the Db2 schema...\"\n+./deploySchemaAndTenant.sh\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NzM5NQ=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDEyNjc3OnYy", "diffSide": "RIGHT", "path": "build/db2-migration-test-docker.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo0NToxNVrOF-BU5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMzowOTo0NFrOF-DtFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3Nzc2Ng==", "bodyText": "can this script can always (and only) upgrade version 1 to the latest version?", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400577766", "createdAt": "2020-03-31T00:45:15Z", "author": {"login": "albertwang-ibm"}, "path": "build/db2-migration-test-docker.sh", "diffHunk": "@@ -0,0 +1,102 @@\n+#!/usr/bin/env bash\n+###############################################################################\n+# (C) Copyright IBM Corp. 2016, 2020\n+#\n+# SPDX-License-Identifier: Apache-2.0\n+###############################################################################\n+set -ex\n+\n+echo \"Preparing environment for fhir-server integration tests...\"\n+if [[ -z \"${WORKSPACE}\" ]]; then\n+    echo \"ERROR: WORKSPACE environment variable not set!\"\n+    exit 2\n+fi\n+\n+# Set up installers and config files where docker processing can see them\n+cd ${WORKSPACE}/fhir-install/docker\n+./copy-dependencies-db2-migration.sh\n+\n+# Stand up a docker container running the fhir server configured for integration tests\n+echo \"Bringing down any fhir server containers that might already be running as a precaution\"\n+docker-compose kill\n+docker-compose rm -f\n+\n+echo \"Bringing up db2... be patient, this will take a minute\"\n+docker-compose build --pull db2\n+docker-compose up -d db2\n+echo \">>> Current time: \" $(date)\n+\n+# TODO wait for it to be healthy instead of just Sleeping\n+(docker-compose logs --timestamps --follow db2 & P=$! && sleep 100 && kill $P)\n+\n+echo \"Deploying the Db2 schema...\"\n+./deploySchemaAndTenant.sh\n+\n+\n+echo \"Bringing up the FHIR server... be patient, this will take a minute\"\n+./copy-test-operations.sh\n+docker-compose build --pull fhir\n+docker-compose up -d fhir\n+echo \">>> Current time: \" $(date)\n+\n+echo \"Migrating the schema to the latest version...\"\n+./copy-dependencies-db2.sh\n+./updateSchema.sh", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYxNjcyNQ==", "bodyText": "the updateSchema script is just invoking the fhir-persistence-schema-*-cli.jar --update-schema action with whatever version of that jar happens to be in the ${SCHEMA} dir.\nso, first we execute copy-dependencies-db2.sh to put the just built version there, then we run the script...the effect is that it will run update-schema with the \"latest version\" and invoke any migration steps from the code in the process.", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400616725", "createdAt": "2020-03-31T03:09:44Z", "author": {"login": "lmsurpre"}, "path": "build/db2-migration-test-docker.sh", "diffHunk": "@@ -0,0 +1,102 @@\n+#!/usr/bin/env bash\n+###############################################################################\n+# (C) Copyright IBM Corp. 2016, 2020\n+#\n+# SPDX-License-Identifier: Apache-2.0\n+###############################################################################\n+set -ex\n+\n+echo \"Preparing environment for fhir-server integration tests...\"\n+if [[ -z \"${WORKSPACE}\" ]]; then\n+    echo \"ERROR: WORKSPACE environment variable not set!\"\n+    exit 2\n+fi\n+\n+# Set up installers and config files where docker processing can see them\n+cd ${WORKSPACE}/fhir-install/docker\n+./copy-dependencies-db2-migration.sh\n+\n+# Stand up a docker container running the fhir server configured for integration tests\n+echo \"Bringing down any fhir server containers that might already be running as a precaution\"\n+docker-compose kill\n+docker-compose rm -f\n+\n+echo \"Bringing up db2... be patient, this will take a minute\"\n+docker-compose build --pull db2\n+docker-compose up -d db2\n+echo \">>> Current time: \" $(date)\n+\n+# TODO wait for it to be healthy instead of just Sleeping\n+(docker-compose logs --timestamps --follow db2 & P=$! && sleep 100 && kill $P)\n+\n+echo \"Deploying the Db2 schema...\"\n+./deploySchemaAndTenant.sh\n+\n+\n+echo \"Bringing up the FHIR server... be patient, this will take a minute\"\n+./copy-test-operations.sh\n+docker-compose build --pull fhir\n+docker-compose up -d fhir\n+echo \">>> Current time: \" $(date)\n+\n+echo \"Migrating the schema to the latest version...\"\n+./copy-dependencies-db2.sh\n+./updateSchema.sh", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3Nzc2Ng=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDIwMDc4OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirResourceTableGroup.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMToyNjowOVrOF-CBCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo1ODoxMlrOF-UfRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU4OTA2Nw==", "bodyText": "great catch! seems we have never noticed this before!!", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400589067", "createdAt": "2020-03-31T01:26:09Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirResourceTableGroup.java", "diffHunk": "@@ -679,12 +679,12 @@ public void addComposites(List<IDatabaseObject> group, String prefix) {\n                 }\n \n                 statements.add(new DropForeignKeyConstraint(schemaName, tableName,\n-                        \"FK_OBSERVATION_COMPOSITES_DATE\",\n-                        \"FK_OBSERVATION_COMPOSITES_LATLNG\",\n-                        \"FK_OBSERVATION_COMPOSITES_NUMBER\",\n-                        \"FK_OBSERVATION_COMPOSITES_QUANTITY\",\n-                        \"FK_OBSERVATION_COMPOSITES_STR\",\n-                        \"FK_OBSERVATION_COMPOSITES_TOKEN\"));\n+                        FK + tableName + _STR,\n+                        FK + tableName + _NUMBER,\n+                        FK + tableName + _DATE,\n+                        FK + tableName + _TOKEN,\n+                        FK + tableName + _QUANTITY,\n+                        FK + tableName + _LATLNG));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NDQzMw==", "bodyText": "and it could be nicer if we can keep the order for the FKs - still from _D to _T", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400594433", "createdAt": "2020-03-31T01:45:22Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirResourceTableGroup.java", "diffHunk": "@@ -679,12 +679,12 @@ public void addComposites(List<IDatabaseObject> group, String prefix) {\n                 }\n \n                 statements.add(new DropForeignKeyConstraint(schemaName, tableName,\n-                        \"FK_OBSERVATION_COMPOSITES_DATE\",\n-                        \"FK_OBSERVATION_COMPOSITES_LATLNG\",\n-                        \"FK_OBSERVATION_COMPOSITES_NUMBER\",\n-                        \"FK_OBSERVATION_COMPOSITES_QUANTITY\",\n-                        \"FK_OBSERVATION_COMPOSITES_STR\",\n-                        \"FK_OBSERVATION_COMPOSITES_TOKEN\"));\n+                        FK + tableName + _STR,\n+                        FK + tableName + _NUMBER,\n+                        FK + tableName + _DATE,\n+                        FK + tableName + _TOKEN,\n+                        FK + tableName + _QUANTITY,\n+                        FK + tableName + _LATLNG));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU4OTA2Nw=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYxNDg2OA==", "bodyText": "i didn't quite follow the order comment; i reordered these so that the order matches the order in the statements above it (in the same method)...did you want something different?", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400614868", "createdAt": "2020-03-31T03:02:48Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirResourceTableGroup.java", "diffHunk": "@@ -679,12 +679,12 @@ public void addComposites(List<IDatabaseObject> group, String prefix) {\n                 }\n \n                 statements.add(new DropForeignKeyConstraint(schemaName, tableName,\n-                        \"FK_OBSERVATION_COMPOSITES_DATE\",\n-                        \"FK_OBSERVATION_COMPOSITES_LATLNG\",\n-                        \"FK_OBSERVATION_COMPOSITES_NUMBER\",\n-                        \"FK_OBSERVATION_COMPOSITES_QUANTITY\",\n-                        \"FK_OBSERVATION_COMPOSITES_STR\",\n-                        \"FK_OBSERVATION_COMPOSITES_TOKEN\"));\n+                        FK + tableName + _STR,\n+                        FK + tableName + _NUMBER,\n+                        FK + tableName + _DATE,\n+                        FK + tableName + _TOKEN,\n+                        FK + tableName + _QUANTITY,\n+                        FK + tableName + _LATLNG));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU4OTA2Nw=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MTcxNw==", "bodyText": "I mean in the original codes, they are alphabet ordered.", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400891717", "createdAt": "2020-03-31T12:58:12Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirResourceTableGroup.java", "diffHunk": "@@ -679,12 +679,12 @@ public void addComposites(List<IDatabaseObject> group, String prefix) {\n                 }\n \n                 statements.add(new DropForeignKeyConstraint(schemaName, tableName,\n-                        \"FK_OBSERVATION_COMPOSITES_DATE\",\n-                        \"FK_OBSERVATION_COMPOSITES_LATLNG\",\n-                        \"FK_OBSERVATION_COMPOSITES_NUMBER\",\n-                        \"FK_OBSERVATION_COMPOSITES_QUANTITY\",\n-                        \"FK_OBSERVATION_COMPOSITES_STR\",\n-                        \"FK_OBSERVATION_COMPOSITES_TOKEN\"));\n+                        FK + tableName + _STR,\n+                        FK + tableName + _NUMBER,\n+                        FK + tableName + _DATE,\n+                        FK + tableName + _TOKEN,\n+                        FK + tableName + _QUANTITY,\n+                        FK + tableName + _LATLNG));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU4OTA2Nw=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDIxMjQ2OnYy", "diffSide": "RIGHT", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMTozMToyNlrOF-CHeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMTozMToyNlrOF-CHeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5MDcxMw==", "bodyText": "make a lot sense, as I remember, most of the alter table operations requires reorg before the table is really usable ... otherwise it will always show reorg pending error for sql ...", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400590713", "createdAt": "2020-03-31T01:31:26Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java", "diffHunk": "@@ -456,12 +456,10 @@ public void runStatement(IDatabaseStatement stmt) {\n \n             String qname = ((DropColumn) stmt).getSchemaName() + \".\" + ((DropColumn) stmt).getTableName();\n \n-            Db2AdminCommand runstats = new Db2AdminCommand(\"RUNSTATS ON TABLE \" + qname + \" WITH DISTRIBUTION AND DETAILED INDEXES ALL\");\n-            super.runStatement(runstats);\n-\n             String reorgCommand = \"REORG TABLE \" + qname;\n             super.runStatement(new Db2AdminCommand(reorgCommand));\n \n+            Db2AdminCommand runstats = new Db2AdminCommand(\"RUNSTATS ON TABLE \" + qname + \" WITH DISTRIBUTION AND DETAILED INDEXES ALL\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NDIyMDA0OnYy", "diffSide": "RIGHT", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Reorg.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMTozNDo1MVrOF-CLhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxOTo0Mjo1M1rOF-lZXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5MTc0OA==", "bodyText": "this does remember me of one question, should we force all db connections to drop first before we run reorg during migration?", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400591748", "createdAt": "2020-03-31T01:34:51Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Reorg.java", "diffHunk": "@@ -16,6 +16,10 @@\n \n /**\n  * Reorg the schema.table\n+ *\n+ * Be sure to complete all database operations and release all locks before you invoke REORG.\n+ * @see <a href=\"https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0001966.html\">\n+ *      https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0001966.html</a>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYxNTM1Nw==", "bodyText": "this is an excellent question.  the migration seems to work now without that.  my biggest concern is that calling the reorg command is actually committing the migrations under the covers because that would break our \"do all the migrations within a single transaction\" model.\nstill, i'd prefer to punt on that one for now so we can get this in for 4.1.0...maybe open it as a separate issue?", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400615357", "createdAt": "2020-03-31T03:04:41Z", "author": {"login": "lmsurpre"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Reorg.java", "diffHunk": "@@ -16,6 +16,10 @@\n \n /**\n  * Reorg the schema.table\n+ *\n+ * Be sure to complete all database operations and release all locks before you invoke REORG.\n+ * @see <a href=\"https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0001966.html\">\n+ *      https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0001966.html</a>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5MTc0OA=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMDkyMw==", "bodyText": "I think we should probably add to the documentation stating that.", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400820923", "createdAt": "2020-03-31T10:55:43Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Reorg.java", "diffHunk": "@@ -16,6 +16,10 @@\n \n /**\n  * Reorg the schema.table\n+ *\n+ * Be sure to complete all database operations and release all locks before you invoke REORG.\n+ * @see <a href=\"https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0001966.html\">\n+ *      https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0001966.html</a>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5MTc0OA=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5NTYwNw==", "bodyText": "which documentation.  i did add it here in the javadoc but not in the readme", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400895607", "createdAt": "2020-03-31T13:04:07Z", "author": {"login": "lmsurpre"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Reorg.java", "diffHunk": "@@ -16,6 +16,10 @@\n \n /**\n  * Reorg the schema.table\n+ *\n+ * Be sure to complete all database operations and release all locks before you invoke REORG.\n+ * @see <a href=\"https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0001966.html\">\n+ *      https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0001966.html</a>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5MTc0OA=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzOTE2NQ==", "bodyText": "I was thinking to the design considerations in Db2MultitenantSchema... Essentially what we discussed is 'offline' updates.", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400939165", "createdAt": "2020-03-31T14:03:24Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Reorg.java", "diffHunk": "@@ -16,6 +16,10 @@\n \n /**\n  * Reorg the schema.table\n+ *\n+ * Be sure to complete all database operations and release all locks before you invoke REORG.\n+ * @see <a href=\"https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0001966.html\">\n+ *      https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0001966.html</a>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5MTc0OA=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2ODczNA==", "bodyText": "I updated the doc", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r401168734", "createdAt": "2020-03-31T19:42:53Z", "author": {"login": "lmsurpre"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Reorg.java", "diffHunk": "@@ -16,6 +16,10 @@\n \n /**\n  * Reorg the schema.table\n+ *\n+ * Be sure to complete all database operations and release all locks before you invoke REORG.\n+ * @see <a href=\"https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0001966.html\">\n+ *      https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0001966.html</a>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5MTc0OA=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTYxOTc5OnYy", "diffSide": "RIGHT", "path": ".github/workflows/build.yml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDozNjozNVrOF-Pjcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDoyMTo1MVrOF-YQgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxMDg2Nw==", "bodyText": "I wonder if this is necessary in Db2. No fix necessary... just an outloud discussion.", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400810867", "createdAt": "2020-03-31T10:36:35Z", "author": {"login": "prb112"}, "path": ".github/workflows/build.yml", "diffHunk": "@@ -266,3 +266,56 @@ jobs:\n       with:\n         name: integration-test-results-db2-${{ matrix.java }}\n         path: integration-test-results\n+  db2-migration:\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        java: [ 'openjdk8' ]\n+      fail-fast: false\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Set up OpenJDK\n+      uses: joschi/setup-jdk@v1\n+      with:\n+        java-version: ${{ matrix.java }}\n+    - name: Build samples\n+      run: mvn -B install --file fhir-examples --no-transfer-progress\n+    - name: Build parent without tests\n+      run: |\n+        mvn -B install --file fhir-parent -DskipTests -P integration --no-transfer-progress\n+    - name: Server Integration Tests\n+      env:\n+        # debian-based linux uses C.UTF-8 by default and Derby doesn't like that\n+        LC_ALL: en_US.UTF-8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzNjY5NQ==", "bodyText": "probably not....will remove and find out :-)", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400936695", "createdAt": "2020-03-31T14:00:02Z", "author": {"login": "lmsurpre"}, "path": ".github/workflows/build.yml", "diffHunk": "@@ -266,3 +266,56 @@ jobs:\n       with:\n         name: integration-test-results-db2-${{ matrix.java }}\n         path: integration-test-results\n+  db2-migration:\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        java: [ 'openjdk8' ]\n+      fail-fast: false\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Set up OpenJDK\n+      uses: joschi/setup-jdk@v1\n+      with:\n+        java-version: ${{ matrix.java }}\n+    - name: Build samples\n+      run: mvn -B install --file fhir-examples --no-transfer-progress\n+    - name: Build parent without tests\n+      run: |\n+        mvn -B install --file fhir-parent -DskipTests -P integration --no-transfer-progress\n+    - name: Server Integration Tests\n+      env:\n+        # debian-based linux uses C.UTF-8 by default and Derby doesn't like that\n+        LC_ALL: en_US.UTF-8", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxMDg2Nw=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk1MzQ3NQ==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400953475", "createdAt": "2020-03-31T14:21:51Z", "author": {"login": "lmsurpre"}, "path": ".github/workflows/build.yml", "diffHunk": "@@ -266,3 +266,56 @@ jobs:\n       with:\n         name: integration-test-results-db2-${{ matrix.java }}\n         path: integration-test-results\n+  db2-migration:\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        java: [ 'openjdk8' ]\n+      fail-fast: false\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Set up OpenJDK\n+      uses: joschi/setup-jdk@v1\n+      with:\n+        java-version: ${{ matrix.java }}\n+    - name: Build samples\n+      run: mvn -B install --file fhir-examples --no-transfer-progress\n+    - name: Build parent without tests\n+      run: |\n+        mvn -B install --file fhir-parent -DskipTests -P integration --no-transfer-progress\n+    - name: Server Integration Tests\n+      env:\n+        # debian-based linux uses C.UTF-8 by default and Derby doesn't like that\n+        LC_ALL: en_US.UTF-8", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxMDg2Nw=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTYyNTYyOnYy", "diffSide": "RIGHT", "path": "build/db2-migration-test-docker.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDozODowN1rOF-PnBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDozODowN1rOF-PnBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxMTc4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # (C) Copyright IBM Corp. 2016, 2020\n          \n          \n            \n            # (C) Copyright IBM Corp. 2020\n          \n      \n    \n    \n  \n\nisn't this just 2020", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400811782", "createdAt": "2020-03-31T10:38:07Z", "author": {"login": "prb112"}, "path": "build/db2-migration-test-docker.sh", "diffHunk": "@@ -0,0 +1,102 @@\n+#!/usr/bin/env bash\n+###############################################################################\n+# (C) Copyright IBM Corp. 2016, 2020", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTYyODY5OnYy", "diffSide": "RIGHT", "path": ".github/workflows/build.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDozOTowM1rOF-Po8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDowMTo0M1rOF-XTtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxMjI3NA==", "bodyText": "you could probably map this in env to be consistent with the prior step", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400812274", "createdAt": "2020-03-31T10:39:03Z", "author": {"login": "prb112"}, "path": ".github/workflows/build.yml", "diffHunk": "@@ -266,3 +266,56 @@ jobs:\n       with:\n         name: integration-test-results-db2-${{ matrix.java }}\n         path: integration-test-results\n+  db2-migration:\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        java: [ 'openjdk8' ]\n+      fail-fast: false\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Set up OpenJDK\n+      uses: joschi/setup-jdk@v1\n+      with:\n+        java-version: ${{ matrix.java }}\n+    - name: Build samples\n+      run: mvn -B install --file fhir-examples --no-transfer-progress\n+    - name: Build parent without tests\n+      run: |\n+        mvn -B install --file fhir-parent -DskipTests -P integration --no-transfer-progress\n+    - name: Server Integration Tests\n+      env:\n+        # debian-based linux uses C.UTF-8 by default and Derby doesn't like that\n+        LC_ALL: en_US.UTF-8\n+      run: |\n+        export WORKSPACE=${GITHUB_WORKSPACE}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzNzkwOQ==", "bodyText": "its set this way in all the jobs in this build.yml\nI think I had some issue setting it from the env section, but I really don't remember...will leave as-is unless you want it changed", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400937909", "createdAt": "2020-03-31T14:01:43Z", "author": {"login": "lmsurpre"}, "path": ".github/workflows/build.yml", "diffHunk": "@@ -266,3 +266,56 @@ jobs:\n       with:\n         name: integration-test-results-db2-${{ matrix.java }}\n         path: integration-test-results\n+  db2-migration:\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        java: [ 'openjdk8' ]\n+      fail-fast: false\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Set up OpenJDK\n+      uses: joschi/setup-jdk@v1\n+      with:\n+        java-version: ${{ matrix.java }}\n+    - name: Build samples\n+      run: mvn -B install --file fhir-examples --no-transfer-progress\n+    - name: Build parent without tests\n+      run: |\n+        mvn -B install --file fhir-parent -DskipTests -P integration --no-transfer-progress\n+    - name: Server Integration Tests\n+      env:\n+        # debian-based linux uses C.UTF-8 by default and Derby doesn't like that\n+        LC_ALL: en_US.UTF-8\n+      run: |\n+        export WORKSPACE=${GITHUB_WORKSPACE}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxMjI3NA=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTYzODk3OnYy", "diffSide": "RIGHT", "path": "build/db2-migration-test-docker.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo0MjoxNVrOF-PvPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo0MjoxNVrOF-PvPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxMzg4NA==", "bodyText": "these lines are duplicate of other scripts. perhaps refactoring into an imported script is best?", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400813884", "createdAt": "2020-03-31T10:42:15Z", "author": {"login": "prb112"}, "path": "build/db2-migration-test-docker.sh", "diffHunk": "@@ -0,0 +1,102 @@\n+#!/usr/bin/env bash\n+###############################################################################\n+# (C) Copyright IBM Corp. 2016, 2020\n+#\n+# SPDX-License-Identifier: Apache-2.0\n+###############################################################################\n+set -ex\n+\n+echo \"Preparing environment for fhir-server integration tests...\"\n+if [[ -z \"${WORKSPACE}\" ]]; then\n+    echo \"ERROR: WORKSPACE environment variable not set!\"\n+    exit 2\n+fi\n+\n+# Set up installers and config files where docker processing can see them\n+cd ${WORKSPACE}/fhir-install/docker\n+./copy-dependencies-db2-migration.sh\n+\n+# Stand up a docker container running the fhir server configured for integration tests\n+echo \"Bringing down any fhir server containers that might already be running as a precaution\"\n+docker-compose kill\n+docker-compose rm -f\n+\n+echo \"Bringing up db2... be patient, this will take a minute\"\n+docker-compose build --pull db2\n+docker-compose up -d db2\n+echo \">>> Current time: \" $(date)\n+\n+# TODO wait for it to be healthy instead of just Sleeping\n+(docker-compose logs --timestamps --follow db2 & P=$! && sleep 100 && kill $P)\n+\n+echo \"Deploying the Db2 schema...\"\n+./deploySchemaAndTenant.sh\n+\n+\n+echo \"Bringing up the FHIR server... be patient, this will take a minute\"\n+./copy-test-operations.sh\n+docker-compose build --pull fhir\n+docker-compose up -d fhir\n+echo \">>> Current time: \" $(date)\n+\n+echo \"Migrating the schema to the latest version...\"\n+./copy-dependencies-db2.sh\n+./updateSchema.sh\n+\n+# TODO wait for it to be healthy instead of just Sleeping\n+(docker-compose logs --timestamps --follow fhir & P=$! && sleep 60 && kill $P)\n+\n+# Gather up all the server logs so we can trouble-shoot any problems during startup\n+cd -\n+pre_it_logs=${WORKSPACE}/pre-it-logs\n+zip_file=${WORKSPACE}/pre-it-logs.zip\n+rm -fr ${pre_it_logs} 2>/dev/null\n+mkdir -p ${pre_it_logs}\n+rm -f ${zip_file}\n+\n+echo \"\n+Docker container status:\"\n+docker ps -a\n+\n+containerId=$(docker ps -a | grep fhir | cut -d ' ' -f 1)\n+if [[ -z \"${containerId}\" ]]; then\n+    echo \"Warning: Could not find the fhir container!!!\"\n+else\n+    echo \"fhir container id: $containerId\"\n+\n+    # Grab the container's console log\n+    docker logs $containerId  >& ${pre_it_logs}/docker-console.txt\n+\n+    echo \"Gathering pre-test server logs from docker container: $containerId\"\n+    docker cp -L $containerId:/opt/ol/wlp/usr/servers/fhir-server/logs ${pre_it_logs}\n+\n+    echo \"Zipping up pre-test server logs\"\n+    zip -r ${zip_file} ${pre_it_logs}\n+fi\n+\n+# Wait until the fhir server is up and running...\n+echo \"Waiting for fhir-server to complete initialization...\"\n+healthcheck_url='https://localhost:9443/fhir-server/api/v4/$healthcheck'\n+tries=0\n+status=0\n+while [ $status -ne 200 -a $tries -lt 3 ]; do\n+    tries=$((tries + 1))\n+    cmd=\"curl -k -o ${WORKSPACE}/health.json -I -w \"%{http_code}\" -u fhiruser:change-password $healthcheck_url\"\n+    echo \"Executing[$tries]: $cmd\"\n+    status=$($cmd)\n+    echo \"Status code: $status\"\n+    if [ $status -ne 200 ]\n+    then\n+       echo \"Sleeping 10 secs...\"\n+       sleep 10\n+    fi\n+done\n+\n+if [ $status -ne 200 ]\n+then\n+    echo \"Could not establish a connection to the fhir-server within $tries REST API invocations!\"\n+    exit 1\n+fi\n+\n+echo \"The fhir-server appears to be running...\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTY0Njc3OnYy", "diffSide": "RIGHT", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo0NDozM1rOF-Pzzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzo1ODo0MlrOF-XK-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNTA1NA==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400815054", "createdAt": "2020-03-31T10:44:33Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java", "diffHunk": "@@ -105,15 +105,15 @@ public void createIntVariable(String schemaName, String variableName) {\n     }\n \n     @Override\n-    public void createPermission(String schemaName, String permissionName, String tableName, String predicate) {\n+    public void createOrReplacePermission(String schemaName, String permissionName, String tableName, String predicate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzNTY3NA==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400935674", "createdAt": "2020-03-31T13:58:42Z", "author": {"login": "lmsurpre"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java", "diffHunk": "@@ -105,15 +105,15 @@ public void createIntVariable(String schemaName, String variableName) {\n     }\n \n     @Override\n-    public void createPermission(String schemaName, String permissionName, String tableName, String predicate) {\n+    public void createOrReplacePermission(String schemaName, String permissionName, String tableName, String predicate) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNTA1NA=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTY1MzgzOnYy", "diffSide": "RIGHT", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo0Njo0MVrOF-P4Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzo1ODozMlrOF-XKbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNjE0Nw==", "bodyText": "Interesting... it's left aligned in the output.\nCREATE PERMISSION FHIRAPP.STR_VALUES_TENANT                      ON FHIRAPP.STR_VALUES          FOR ROWS WHERE FHIRAPP.STR_VALUES.MT_ID = FHIR_ADMIN.SV_TENANT_ID ENFORCED FOR ALL ACCESS ENABLE ;", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400816147", "createdAt": "2020-03-31T10:46:41Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java", "diffHunk": "@@ -105,15 +105,15 @@ public void createIntVariable(String schemaName, String variableName) {\n     }\n \n     @Override\n-    public void createPermission(String schemaName, String permissionName, String tableName, String predicate) {\n+    public void createOrReplacePermission(String schemaName, String permissionName, String tableName, String predicate) {\n         final String qualifiedPermissionName = DataDefinitionUtil.getQualifiedName(schemaName, permissionName);\n         final String qualifiedTableName = DataDefinitionUtil.getQualifiedName(schemaName, tableName);\n         DataDefinitionUtil.assertSecure(predicate);\n \n         final String ddl = \"\"\n-                + \"       CREATE PERMISSION \" + qualifiedPermissionName\n-                + \"                      ON \" + qualifiedTableName\n-                + \"          FOR ROWS WHERE \" + predicate\n+                + \"CREATE OR REPLACE PERMISSION \" + qualifiedPermissionName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MTk5Mw==", "bodyText": "i think this format is wonky...i just tried preservign what was there", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400891993", "createdAt": "2020-03-31T12:58:35Z", "author": {"login": "lmsurpre"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java", "diffHunk": "@@ -105,15 +105,15 @@ public void createIntVariable(String schemaName, String variableName) {\n     }\n \n     @Override\n-    public void createPermission(String schemaName, String permissionName, String tableName, String predicate) {\n+    public void createOrReplacePermission(String schemaName, String permissionName, String tableName, String predicate) {\n         final String qualifiedPermissionName = DataDefinitionUtil.getQualifiedName(schemaName, permissionName);\n         final String qualifiedTableName = DataDefinitionUtil.getQualifiedName(schemaName, tableName);\n         DataDefinitionUtil.assertSecure(predicate);\n \n         final String ddl = \"\"\n-                + \"       CREATE PERMISSION \" + qualifiedPermissionName\n-                + \"                      ON \" + qualifiedTableName\n-                + \"          FOR ROWS WHERE \" + predicate\n+                + \"CREATE OR REPLACE PERMISSION \" + qualifiedPermissionName", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNjE0Nw=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5NTExMg==", "bodyText": "actually, now i can't seem to find where i inhereted this from...will change", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400895112", "createdAt": "2020-03-31T13:03:25Z", "author": {"login": "lmsurpre"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java", "diffHunk": "@@ -105,15 +105,15 @@ public void createIntVariable(String schemaName, String variableName) {\n     }\n \n     @Override\n-    public void createPermission(String schemaName, String permissionName, String tableName, String predicate) {\n+    public void createOrReplacePermission(String schemaName, String permissionName, String tableName, String predicate) {\n         final String qualifiedPermissionName = DataDefinitionUtil.getQualifiedName(schemaName, permissionName);\n         final String qualifiedTableName = DataDefinitionUtil.getQualifiedName(schemaName, tableName);\n         DataDefinitionUtil.assertSecure(predicate);\n \n         final String ddl = \"\"\n-                + \"       CREATE PERMISSION \" + qualifiedPermissionName\n-                + \"                      ON \" + qualifiedTableName\n-                + \"          FOR ROWS WHERE \" + predicate\n+                + \"CREATE OR REPLACE PERMISSION \" + qualifiedPermissionName", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNjE0Nw=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkwNDUwNg==", "bodyText": "so sorry it was an observation - not intended to change.", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400904506", "createdAt": "2020-03-31T13:16:48Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java", "diffHunk": "@@ -105,15 +105,15 @@ public void createIntVariable(String schemaName, String variableName) {\n     }\n \n     @Override\n-    public void createPermission(String schemaName, String permissionName, String tableName, String predicate) {\n+    public void createOrReplacePermission(String schemaName, String permissionName, String tableName, String predicate) {\n         final String qualifiedPermissionName = DataDefinitionUtil.getQualifiedName(schemaName, permissionName);\n         final String qualifiedTableName = DataDefinitionUtil.getQualifiedName(schemaName, tableName);\n         DataDefinitionUtil.assertSecure(predicate);\n \n         final String ddl = \"\"\n-                + \"       CREATE PERMISSION \" + qualifiedPermissionName\n-                + \"                      ON \" + qualifiedTableName\n-                + \"          FOR ROWS WHERE \" + predicate\n+                + \"CREATE OR REPLACE PERMISSION \" + qualifiedPermissionName", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNjE0Nw=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzNTUzNQ==", "bodyText": "updated", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400935535", "createdAt": "2020-03-31T13:58:32Z", "author": {"login": "lmsurpre"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/db2/Db2Adapter.java", "diffHunk": "@@ -105,15 +105,15 @@ public void createIntVariable(String schemaName, String variableName) {\n     }\n \n     @Override\n-    public void createPermission(String schemaName, String permissionName, String tableName, String predicate) {\n+    public void createOrReplacePermission(String schemaName, String permissionName, String tableName, String predicate) {\n         final String qualifiedPermissionName = DataDefinitionUtil.getQualifiedName(schemaName, permissionName);\n         final String qualifiedTableName = DataDefinitionUtil.getQualifiedName(schemaName, tableName);\n         DataDefinitionUtil.assertSecure(predicate);\n \n         final String ddl = \"\"\n-                + \"       CREATE PERMISSION \" + qualifiedPermissionName\n-                + \"                      ON \" + qualifiedTableName\n-                + \"          FOR ROWS WHERE \" + predicate\n+                + \"CREATE OR REPLACE PERMISSION \" + qualifiedPermissionName", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNjE0Nw=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTY2MzgxOnYy", "diffSide": "RIGHT", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/DropForeignKeyConstraint.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo0OTo0NFrOF-P-OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzo1ODo1NFrOF-XLcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNzcyMQ==", "bodyText": "I think the prior line 45 was good defensive programming\nit asserts if the passed schemaName and constraintName are valid", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400817721", "createdAt": "2020-03-31T10:49:44Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/DropForeignKeyConstraint.java", "diffHunk": "@@ -42,8 +42,7 @@ public void run(IDatabaseTranslator translator, Connection c) {\n \n         for (String constraintName : constraintNames) {\n             StringBuilder ddl = new StringBuilder(\"ALTER TABLE \" + qTableName);\n-            String qConstraintName = DataDefinitionUtil.getQualifiedName(schemaName, constraintName);\n-            ddl.append(\"\\n\\t\" + \"DROP FOREIGN KEY \" + qConstraintName);\n+            ddl.append(\"\\n\\t\" + \"DROP FOREIGN KEY \" + constraintName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg4OTI5Mw==", "bodyText": "It was computing the qualified name which we don't want.  I will add DataDefinitionUtil.assertValidName(constraintName) in a loop in the constructor for the input validation.", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400889293", "createdAt": "2020-03-31T12:54:30Z", "author": {"login": "lmsurpre"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/DropForeignKeyConstraint.java", "diffHunk": "@@ -42,8 +42,7 @@ public void run(IDatabaseTranslator translator, Connection c) {\n \n         for (String constraintName : constraintNames) {\n             StringBuilder ddl = new StringBuilder(\"ALTER TABLE \" + qTableName);\n-            String qConstraintName = DataDefinitionUtil.getQualifiedName(schemaName, constraintName);\n-            ddl.append(\"\\n\\t\" + \"DROP FOREIGN KEY \" + qConstraintName);\n+            ddl.append(\"\\n\\t\" + \"DROP FOREIGN KEY \" + constraintName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNzcyMQ=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzNTc5NA==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400935794", "createdAt": "2020-03-31T13:58:54Z", "author": {"login": "lmsurpre"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/DropForeignKeyConstraint.java", "diffHunk": "@@ -42,8 +42,7 @@ public void run(IDatabaseTranslator translator, Connection c) {\n \n         for (String constraintName : constraintNames) {\n             StringBuilder ddl = new StringBuilder(\"ALTER TABLE \" + qTableName);\n-            String qConstraintName = DataDefinitionUtil.getQualifiedName(schemaName, constraintName);\n-            ddl.append(\"\\n\\t\" + \"DROP FOREIGN KEY \" + qConstraintName);\n+            ddl.append(\"\\n\\t\" + \"DROP FOREIGN KEY \" + constraintName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNzcyMQ=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTY4NjM3OnYy", "diffSide": "RIGHT", "path": "fhir-install/docker/copy-dependencies-db2-migration.sh", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo1NjozM1rOF-QMVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzoxNzo0NFrOF-VTvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMTMzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # (C) Copyright IBM Corp. 2016, 2020\n          \n          \n            \n            # (C) Copyright IBM Corp. 2020\n          \n      \n    \n    \n  \n\n2020", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400821335", "createdAt": "2020-03-31T10:56:33Z", "author": {"login": "prb112"}, "path": "fhir-install/docker/copy-dependencies-db2-migration.sh", "diffHunk": "@@ -0,0 +1,33 @@\n+#!/usr/bin/env bash\n+###############################################################################\n+# (C) Copyright IBM Corp. 2016, 2020", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5NjM5MA==", "bodyText": "its based on a script that was written in 2016, so i left the copyright from that", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400896390", "createdAt": "2020-03-31T13:05:07Z", "author": {"login": "lmsurpre"}, "path": "fhir-install/docker/copy-dependencies-db2-migration.sh", "diffHunk": "@@ -0,0 +1,33 @@\n+#!/usr/bin/env bash\n+###############################################################################\n+# (C) Copyright IBM Corp. 2016, 2020", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMTMzNQ=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkwNTE1MA==", "bodyText": "I'm OK marking as resolved.", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400905150", "createdAt": "2020-03-31T13:17:44Z", "author": {"login": "prb112"}, "path": "fhir-install/docker/copy-dependencies-db2-migration.sh", "diffHunk": "@@ -0,0 +1,33 @@\n+#!/usr/bin/env bash\n+###############################################################################\n+# (C) Copyright IBM Corp. 2016, 2020", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMTMzNQ=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTY4NzgzOnYy", "diffSide": "RIGHT", "path": "fhir-install/docker/copy-dependencies-db2-migration.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo1Njo1MlrOF-QNJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzo1NzoxOVrOF-XGrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMTU0Mg==", "bodyText": "We should document this needs to be updated in DB2SchemaMigration.md", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400821542", "createdAt": "2020-03-31T10:56:52Z", "author": {"login": "prb112"}, "path": "fhir-install/docker/copy-dependencies-db2-migration.sh", "diffHunk": "@@ -0,0 +1,33 @@\n+#!/usr/bin/env bash\n+###############################################################################\n+# (C) Copyright IBM Corp. 2016, 2020\n+#\n+# SPDX-License-Identifier: Apache-2.0\n+###############################################################################\n+set -ex\n+\n+SCHEMA_VERSION=\"4.0.1\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzNDU3Mg==", "bodyText": "I added it to a new \"Testing migrations\" section in that document", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400934572", "createdAt": "2020-03-31T13:57:19Z", "author": {"login": "lmsurpre"}, "path": "fhir-install/docker/copy-dependencies-db2-migration.sh", "diffHunk": "@@ -0,0 +1,33 @@\n+#!/usr/bin/env bash\n+###############################################################################\n+# (C) Copyright IBM Corp. 2016, 2020\n+#\n+# SPDX-License-Identifier: Apache-2.0\n+###############################################################################\n+set -ex\n+\n+SCHEMA_VERSION=\"4.0.1\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMTU0Mg=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTY5MTk1OnYy", "diffSide": "RIGHT", "path": "fhir-notification-kafka/src/main/java/com/ibm/fhir/notifications/kafka/impl/FHIRNotificationKafkaPublisher.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo1ODowNFrOF-QPtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzo1Nzo1MFrOF-XIOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMjE5OA==", "bodyText": "Any specific reasons other than whitespace for this update?", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400822198", "createdAt": "2020-03-31T10:58:04Z", "author": {"login": "prb112"}, "path": "fhir-notification-kafka/src/main/java/com/ibm/fhir/notifications/kafka/impl/FHIRNotificationKafkaPublisher.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * (C) Copyright IBM Corp. 2016,2019\n+ * (C) Copyright IBM Corp. 2016, 2020", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNDU0Nw==", "bodyText": "nope.  i had the edits sitting around and thought i might as well include them.  happy to remove if you prefer.", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400914547", "createdAt": "2020-03-31T13:30:30Z", "author": {"login": "lmsurpre"}, "path": "fhir-notification-kafka/src/main/java/com/ibm/fhir/notifications/kafka/impl/FHIRNotificationKafkaPublisher.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * (C) Copyright IBM Corp. 2016,2019\n+ * (C) Copyright IBM Corp. 2016, 2020", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMjE5OA=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzNDk3MQ==", "bodyText": "I didn't want to miss anything :) or the commit to.  This is A-OK!", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400934971", "createdAt": "2020-03-31T13:57:50Z", "author": {"login": "prb112"}, "path": "fhir-notification-kafka/src/main/java/com/ibm/fhir/notifications/kafka/impl/FHIRNotificationKafkaPublisher.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * (C) Copyright IBM Corp. 2016,2019\n+ * (C) Copyright IBM Corp. 2016, 2020", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMjE5OA=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTY5NDA0OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-jdbc/src/test/java/com/ibm/fhir/persistence/jdbc/search/test/JDBCSearchCompositeTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo1ODoyM1rOF-QQtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzozMDo1OVrOF-V6AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMjQ1NQ==", "bodyText": "Whitespace?", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400822455", "createdAt": "2020-03-31T10:58:23Z", "author": {"login": "prb112"}, "path": "fhir-persistence-jdbc/src/test/java/com/ibm/fhir/persistence/jdbc/search/test/JDBCSearchCompositeTest.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * (C) Copyright IBM Corp. 2018,2019\n+ * (C) Copyright IBM Corp. 2018, 2020", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNDk0NA==", "bodyText": "yeah, i had the edits sitting around and thought i might as well include them. happy to remove if you prefer.", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400914944", "createdAt": "2020-03-31T13:30:59Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-jdbc/src/test/java/com/ibm/fhir/persistence/jdbc/search/test/JDBCSearchCompositeTest.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * (C) Copyright IBM Corp. 2018,2019\n+ * (C) Copyright IBM Corp. 2018, 2020", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMjQ1NQ=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTcwMDk0OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/deployPriorVersions.sh", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMTowMDoyMVrOF-QU-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzo1NzoyMlrOF-XGzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMzU0Nw==", "bodyText": "let's document this file in Db2SchemaMigrations.md", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400823547", "createdAt": "2020-03-31T11:00:21Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/deployPriorVersions.sh", "diffHunk": "@@ -9,8 +9,9 @@ set -e\n \n # Version 4.0.1 of the fhir-persistence-schema cli doesn't support derby, but starting with 4.1.0 we should do something like this:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzMzc3Nw==", "bodyText": "added it to a new Testing migrations section", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400933777", "createdAt": "2020-03-31T13:56:19Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-schema/deployPriorVersions.sh", "diffHunk": "@@ -9,8 +9,9 @@ set -e\n \n # Version 4.0.1 of the fhir-persistence-schema cli doesn't support derby, but starting with 4.1.0 we should do something like this:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMzU0Nw=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzNDYwNw==", "bodyText": "awesome!", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r400934607", "createdAt": "2020-03-31T13:57:22Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/deployPriorVersions.sh", "diffHunk": "@@ -9,8 +9,9 @@ set -e\n \n # Version 4.0.1 of the fhir-persistence-schema cli doesn't support derby, but starting with 4.1.0 we should do something like this:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyMzU0Nw=="}, "originalCommit": {"oid": "66cd850024d41b3aa39549f2251a9399f93af902"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NzEwOTg2OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/docs/DB2SchemaMigration.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNjoyNzowM1rOF-eFSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNjozNDoxMFrOF-eXhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0ODkwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            When the schema is applied for the first time, it creates the table (and related constructs) as according to the definition.\n          \n          \n            \n            When the schema is applied to an existing database, the framework will check the `FHIR_ADMIN.VERSION_HISTORY` table and, \n          \n          \n            \n            if the version in the table is less than the version being applied, the framework will invoke the Migrations *instead*\n          \n          \n            \n            of calling CREATE with the table definition. Care should be taken to ensure that the migrated schema will match a freshly applied schema.\n          \n          \n            \n            See [Testing migrations](#testing-migrations) for information on verifying the fidelity of the schema migrations.\n          \n          \n            \n            \n          \n          \n            \n            NOTE: In Db2, certain alter table statements require a table REORG before the table becomes usable again. Additionally, the REORG\n          \n          \n            \n            may commit the current \"unit of work\" which can prevent the \"all or nothing\" semantics of the migration. For these reasons, its recommended\n          \n          \n            \n            to backup the database before invoking a migration and performing the migration off-line.\n          \n          \n            \n            \n          \n          \n            \n            In this way, if a new resource is added to the specification, the schema utility will automatically provision the corresponding table on the next execution of the fhir-persistence-schema `--update-schema` action. \n          \n          \n            \n            When the schema is applied for the first time, it creates the table (and related constructs) as according to the definition.\n          \n          \n            \n            When the schema is applied to an existing database, the framework checks the `FHIR_ADMIN.VERSION_HISTORY` table and, \n          \n          \n            \n            if the version in the table is less than the version being applied, the framework invokes the Migrations *instead*\n          \n          \n            \n            of calling CREATE with the table definition. **Care** should be taken to ensure that the migrated schema matches a freshly applied schema.\n          \n          \n            \n            See [Testing migrations](#testing-migrations) for information on verifying the fidelity of the schema migrations.\n          \n          \n            \n            \n          \n          \n            \n            NOTE: In Db2, certain alter table statements require a table REORG before the table becomes usable again. Additionally, the REORG\n          \n          \n            \n            may commit the current \"unit of work\" which can prevent the \"all or nothing\" semantics of the migration. For these reasons, its recommended\n          \n          \n            \n            to backup the database before invoking a migration and performing the migration offline.\n          \n          \n            \n            \n          \n          \n            \n            In this way, if a new resource is added to the specification, the schema utility automatically provisions the corresponding table on the next execution of the fhir-persistence-schema `--update-schema` action.", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r401048907", "createdAt": "2020-03-31T16:27:03Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/docs/DB2SchemaMigration.md", "diffHunk": "@@ -218,10 +226,27 @@ Table tbl = Table.builder(schemaName, tableName)\n     .setTablespace(fhirTablespace)\n     .addPrivileges(resourceTablePrivileges)\n     .enableAccessControl(this.sessionVariable)\n+    .addMigration(priorVersion -> {\n+            List<IDatabaseStatement> statements = new ArrayList<>();\n+                if (priorVersion == 1) {\n+                    // Add statements here\n+                }\n+                return statements;\n+            })\n     .build(model);\n ```\n \n-If a new resource is added to the specification, the schema utility automatically provisions it on the next execution of the update schema actions. \n+When the schema is applied for the first time, it creates the table (and related constructs) as according to the definition.\n+When the schema is applied to an existing database, the framework will check the `FHIR_ADMIN.VERSION_HISTORY` table and, \n+if the version in the table is less than the version being applied, the framework will invoke the Migrations *instead*\n+of calling CREATE with the table definition. Care should be taken to ensure that the migrated schema will match a freshly applied schema.\n+See [Testing migrations](#testing-migrations) for information on verifying the fidelity of the schema migrations.\n+\n+NOTE: In Db2, certain alter table statements require a table REORG before the table becomes usable again. Additionally, the REORG\n+may commit the current \"unit of work\" which can prevent the \"all or nothing\" semantics of the migration. For these reasons, its recommended\n+to backup the database before invoking a migration and performing the migration off-line.\n+\n+In this way, if a new resource is added to the specification, the schema utility will automatically provision the corresponding table on the next execution of the fhir-persistence-schema `--update-schema` action. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab45099b35d8175d0a367bfc089f9b8b00a56fec"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA1MzU3Mg==", "bodyText": "applied manually due to some other minor edits i had locally", "url": "https://github.com/IBM/FHIR/pull/866#discussion_r401053572", "createdAt": "2020-03-31T16:34:10Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-schema/docs/DB2SchemaMigration.md", "diffHunk": "@@ -218,10 +226,27 @@ Table tbl = Table.builder(schemaName, tableName)\n     .setTablespace(fhirTablespace)\n     .addPrivileges(resourceTablePrivileges)\n     .enableAccessControl(this.sessionVariable)\n+    .addMigration(priorVersion -> {\n+            List<IDatabaseStatement> statements = new ArrayList<>();\n+                if (priorVersion == 1) {\n+                    // Add statements here\n+                }\n+                return statements;\n+            })\n     .build(model);\n ```\n \n-If a new resource is added to the specification, the schema utility automatically provisions it on the next execution of the update schema actions. \n+When the schema is applied for the first time, it creates the table (and related constructs) as according to the definition.\n+When the schema is applied to an existing database, the framework will check the `FHIR_ADMIN.VERSION_HISTORY` table and, \n+if the version in the table is less than the version being applied, the framework will invoke the Migrations *instead*\n+of calling CREATE with the table definition. Care should be taken to ensure that the migrated schema will match a freshly applied schema.\n+See [Testing migrations](#testing-migrations) for information on verifying the fidelity of the schema migrations.\n+\n+NOTE: In Db2, certain alter table statements require a table REORG before the table becomes usable again. Additionally, the REORG\n+may commit the current \"unit of work\" which can prevent the \"all or nothing\" semantics of the migration. For these reasons, its recommended\n+to backup the database before invoking a migration and performing the migration off-line.\n+\n+In this way, if a new resource is added to the specification, the schema utility will automatically provision the corresponding table on the next execution of the fhir-persistence-schema `--update-schema` action. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0ODkwNw=="}, "originalCommit": {"oid": "ab45099b35d8175d0a367bfc089f9b8b00a56fec"}, "originalPosition": 126}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 149, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}