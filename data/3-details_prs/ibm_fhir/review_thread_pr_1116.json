{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NzEyNTgz", "number": 1116, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzozMDo1NFrOD_rKaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzo0Mjo0NFrOD_rd8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDk0MDU5OnYy", "diffSide": "RIGHT", "path": "fhir-parent/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzozMDo1NFrOGaeWUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxNjoxOVrOGagYEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxMzM5Mw==", "bodyText": "Please use\n<dependency>\n    <groupId>jakarta.enterprise</groupId>\n    <artifactId>jakarta.enterprise.cdi-api</artifactId>\n    <version>2.0.2</version>\n    <scope>provided</scope>\n</dependency>", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430413393", "createdAt": "2020-05-26T13:30:54Z", "author": {"login": "prb112"}, "path": "fhir-parent/pom.xml", "diffHunk": "@@ -297,6 +297,12 @@\n                 <artifactId>jakarta.inject-api</artifactId>\n                 <version>1.0</version>\n             </dependency>\n+            <dependency>\n+                <groupId>javax.enterprise</groupId>\n+                <artifactId>cdi-api</artifactId>\n+                <version>2.0.SP1</version>\n+                <scope>provided</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzMDY2MQ==", "bodyText": "good point, will change", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430430661", "createdAt": "2020-05-26T13:54:59Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-parent/pom.xml", "diffHunk": "@@ -297,6 +297,12 @@\n                 <artifactId>jakarta.inject-api</artifactId>\n                 <version>1.0</version>\n             </dependency>\n+            <dependency>\n+                <groupId>javax.enterprise</groupId>\n+                <artifactId>cdi-api</artifactId>\n+                <version>2.0.SP1</version>\n+                <scope>provided</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxMzM5Mw=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0NjYwOA==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430446608", "createdAt": "2020-05-26T14:16:19Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-parent/pom.xml", "diffHunk": "@@ -297,6 +297,12 @@\n                 <artifactId>jakarta.inject-api</artifactId>\n                 <version>1.0</version>\n             </dependency>\n+            <dependency>\n+                <groupId>javax.enterprise</groupId>\n+                <artifactId>cdi-api</artifactId>\n+                <version>2.0.SP1</version>\n+                <scope>provided</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxMzM5Mw=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDk0NDg2OnYy", "diffSide": "RIGHT", "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzozMTo1MlrOGaeY_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxODowNlrOGagdOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNDA3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            |`fhirServer/bulkdata/cosFileMaxResources`|int|Max FHIR resources per COS file, \"-1\" means no limit |\n          \n          \n            \n            |`fhirServer/bulkdata/cosFileMaxResources`|int|The maximum number of FHIR resources per COS file, \"-1\" means no limit |", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430414077", "createdAt": "2020-05-26T13:31:52Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "diffHunk": "@@ -1486,6 +1486,8 @@ This section contains reference information about each of the configuration prop\n |`fhirServer/bulkdata/validBaseUrls`|string|The list of supported urls which are approved for the fhir server to access|\n |`fhirServer/bulkdata/validBaseUrlsDisabled`|boolean|Disables the URL checking feature|\n |`fhirServer/bulkdata/maxInputPerRequest`|integer|The maximum inputs per bulk import|\n+|`fhirServer/bulkdata/cosFileMaxResources`|int|Max FHIR resources per COS file, \"-1\" means no limit |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0NzkzMQ==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430447931", "createdAt": "2020-05-26T14:18:06Z", "author": {"login": "albertwang-ibm"}, "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "diffHunk": "@@ -1486,6 +1486,8 @@ This section contains reference information about each of the configuration prop\n |`fhirServer/bulkdata/validBaseUrls`|string|The list of supported urls which are approved for the fhir server to access|\n |`fhirServer/bulkdata/validBaseUrlsDisabled`|boolean|Disables the URL checking feature|\n |`fhirServer/bulkdata/maxInputPerRequest`|integer|The maximum inputs per bulk import|\n+|`fhirServer/bulkdata/cosFileMaxResources`|int|Max FHIR resources per COS file, \"-1\" means no limit |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNDA3Nw=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDk0NjE2OnYy", "diffSide": "RIGHT", "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzozMjowOVrOGaeZvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxNjoyOFrOGagYfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNDI3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            |`fhirServer/bulkdata/cosFileMaxSize`|int|Max COS file size in bytes, \"-1\" means no limit |\n          \n          \n            \n            |`fhirServer/bulkdata/cosFileMaxSize`|int|The maximum COS file size in bytes, \"-1\" means no limit |", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430414271", "createdAt": "2020-05-26T13:32:09Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "diffHunk": "@@ -1486,6 +1486,8 @@ This section contains reference information about each of the configuration prop\n |`fhirServer/bulkdata/validBaseUrls`|string|The list of supported urls which are approved for the fhir server to access|\n |`fhirServer/bulkdata/validBaseUrlsDisabled`|boolean|Disables the URL checking feature|\n |`fhirServer/bulkdata/maxInputPerRequest`|integer|The maximum inputs per bulk import|\n+|`fhirServer/bulkdata/cosFileMaxResources`|int|Max FHIR resources per COS file, \"-1\" means no limit |\n+|`fhirServer/bulkdata/cosFileMaxSize`|int|Max COS file size in bytes, \"-1\" means no limit |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0NjcxNg==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430446716", "createdAt": "2020-05-26T14:16:28Z", "author": {"login": "albertwang-ibm"}, "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "diffHunk": "@@ -1486,6 +1486,8 @@ This section contains reference information about each of the configuration prop\n |`fhirServer/bulkdata/validBaseUrls`|string|The list of supported urls which are approved for the fhir server to access|\n |`fhirServer/bulkdata/validBaseUrlsDisabled`|boolean|Disables the URL checking feature|\n |`fhirServer/bulkdata/maxInputPerRequest`|integer|The maximum inputs per bulk import|\n+|`fhirServer/bulkdata/cosFileMaxResources`|int|Max FHIR resources per COS file, \"-1\" means no limit |\n+|`fhirServer/bulkdata/cosFileMaxSize`|int|Max COS file size in bytes, \"-1\" means no limit |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNDI3MQ=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDk0ODU1OnYy", "diffSide": "RIGHT", "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzozMjo0M1rOGaebTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxNjozOFrOGagY6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNDY3MA==", "bodyText": "What does this equate to? 2G?", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430414670", "createdAt": "2020-05-26T13:32:43Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "diffHunk": "@@ -1532,6 +1534,8 @@ This section contains reference information about each of the configuration prop\n |`fhirServer/audit/serviceProperties/geoCounty`|US|\n |`fhirServer/bulkdata/isExportPublic`|true|\n |`fhirServer/bulkdata/validBaseUrlsDisabled`|false|\n+|`fhirServer/bulkdata/cosFileMaxResources`|500000|\n+|`fhirServer/bulkdata/cosFileMaxSize`|209715200|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzMjA2MQ==", "bodyText": "200M", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430432061", "createdAt": "2020-05-26T13:56:50Z", "author": {"login": "albertwang-ibm"}, "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "diffHunk": "@@ -1532,6 +1534,8 @@ This section contains reference information about each of the configuration prop\n |`fhirServer/audit/serviceProperties/geoCounty`|US|\n |`fhirServer/bulkdata/isExportPublic`|true|\n |`fhirServer/bulkdata/validBaseUrlsDisabled`|false|\n+|`fhirServer/bulkdata/cosFileMaxResources`|500000|\n+|`fhirServer/bulkdata/cosFileMaxSize`|209715200|", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNDY3MA=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzOTA4Mg==", "bodyText": "I think it should be added to the documentation (not necessarily in this row), that it equates to 200M", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430439082", "createdAt": "2020-05-26T14:06:18Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "diffHunk": "@@ -1532,6 +1534,8 @@ This section contains reference information about each of the configuration prop\n |`fhirServer/audit/serviceProperties/geoCounty`|US|\n |`fhirServer/bulkdata/isExportPublic`|true|\n |`fhirServer/bulkdata/validBaseUrlsDisabled`|false|\n+|`fhirServer/bulkdata/cosFileMaxResources`|500000|\n+|`fhirServer/bulkdata/cosFileMaxSize`|209715200|", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNDY3MA=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0MjQzMA==", "bodyText": "let me add to the comment for this config. after -1.", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430442430", "createdAt": "2020-05-26T14:10:40Z", "author": {"login": "albertwang-ibm"}, "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "diffHunk": "@@ -1532,6 +1534,8 @@ This section contains reference information about each of the configuration prop\n |`fhirServer/audit/serviceProperties/geoCounty`|US|\n |`fhirServer/bulkdata/isExportPublic`|true|\n |`fhirServer/bulkdata/validBaseUrlsDisabled`|false|\n+|`fhirServer/bulkdata/cosFileMaxResources`|500000|\n+|`fhirServer/bulkdata/cosFileMaxSize`|209715200|", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNDY3MA=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0NjgyNg==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430446826", "createdAt": "2020-05-26T14:16:38Z", "author": {"login": "albertwang-ibm"}, "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "diffHunk": "@@ -1532,6 +1534,8 @@ This section contains reference information about each of the configuration prop\n |`fhirServer/audit/serviceProperties/geoCounty`|US|\n |`fhirServer/bulkdata/isExportPublic`|true|\n |`fhirServer/bulkdata/validBaseUrlsDisabled`|false|\n+|`fhirServer/bulkdata/cosFileMaxResources`|500000|\n+|`fhirServer/bulkdata/cosFileMaxSize`|209715200|", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNDY3MA=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDk1MDczOnYy", "diffSide": "RIGHT", "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzozMzoxNlrOGaecsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoyNDoyOVrOGagwHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNTAyNA==", "bodyText": "should this be server wide?", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430415024", "createdAt": "2020-05-26T13:33:16Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "diffHunk": "@@ -1596,6 +1600,8 @@ must restart the server for that change to take effect.\n |`fhirServer/bulkdata/validBaseUrls`|Y|Y|\n |`fhirServer/bulkdata/maxInputPerRequest`|Y|Y|\n |`fhirServer/bulkdata/validBaseUrlsDisabled`|Y|Y|\n+|`fhirServer/bulkdata/cosFileMaxResources`|N|Y|\n+|`fhirServer/bulkdata/cosFileMaxSize`|N|Y|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzMjc2OA==", "bodyText": "this is server wide at present.", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430432768", "createdAt": "2020-05-26T13:57:47Z", "author": {"login": "albertwang-ibm"}, "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "diffHunk": "@@ -1596,6 +1600,8 @@ must restart the server for that change to take effect.\n |`fhirServer/bulkdata/validBaseUrls`|Y|Y|\n |`fhirServer/bulkdata/maxInputPerRequest`|Y|Y|\n |`fhirServer/bulkdata/validBaseUrlsDisabled`|Y|Y|\n+|`fhirServer/bulkdata/cosFileMaxResources`|N|Y|\n+|`fhirServer/bulkdata/cosFileMaxSize`|N|Y|", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNTAyNA=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzODY4Mg==", "bodyText": "Right, is this something that should be configured by the tenant", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430438682", "createdAt": "2020-05-26T14:05:42Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "diffHunk": "@@ -1596,6 +1600,8 @@ must restart the server for that change to take effect.\n |`fhirServer/bulkdata/validBaseUrls`|Y|Y|\n |`fhirServer/bulkdata/maxInputPerRequest`|Y|Y|\n |`fhirServer/bulkdata/validBaseUrlsDisabled`|Y|Y|\n+|`fhirServer/bulkdata/cosFileMaxResources`|N|Y|\n+|`fhirServer/bulkdata/cosFileMaxSize`|N|Y|", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNTAyNA=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0Mzg3OA==", "bodyText": "this is the same as isExportPublic config, they are all server wide at present. we have another issue to make them per tenant.", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430443878", "createdAt": "2020-05-26T14:12:32Z", "author": {"login": "albertwang-ibm"}, "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "diffHunk": "@@ -1596,6 +1600,8 @@ must restart the server for that change to take effect.\n |`fhirServer/bulkdata/validBaseUrls`|Y|Y|\n |`fhirServer/bulkdata/maxInputPerRequest`|Y|Y|\n |`fhirServer/bulkdata/validBaseUrlsDisabled`|Y|Y|\n+|`fhirServer/bulkdata/cosFileMaxResources`|N|Y|\n+|`fhirServer/bulkdata/cosFileMaxSize`|N|Y|", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNTAyNA=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ1Mjc2Ng==", "bodyText": "issue #943", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430452766", "createdAt": "2020-05-26T14:24:29Z", "author": {"login": "albertwang-ibm"}, "path": "docs/src/pages/guides/FHIRServerUsersGuide.md", "diffHunk": "@@ -1596,6 +1600,8 @@ must restart the server for that change to take effect.\n |`fhirServer/bulkdata/validBaseUrls`|Y|Y|\n |`fhirServer/bulkdata/maxInputPerRequest`|Y|Y|\n |`fhirServer/bulkdata/validBaseUrlsDisabled`|Y|Y|\n+|`fhirServer/bulkdata/cosFileMaxResources`|N|Y|\n+|`fhirServer/bulkdata/cosFileMaxSize`|N|Y|", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNTAyNA=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDk1MTU5OnYy", "diffSide": "RIGHT", "path": "fhir-bulkimportexport-webapp/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzozMzoyOVrOGaedQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxNzowMVrOGagaDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNTE3MA==", "bodyText": "<dependency>\n    <groupId>jakarta.enterprise</groupId>\n    <artifactId>jakarta.enterprise.cdi-api</artifactId>\n    <version>2.0.2</version>\n    <scope>provided</scope>\n</dependency>", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430415170", "createdAt": "2020-05-26T13:33:29Z", "author": {"login": "prb112"}, "path": "fhir-bulkimportexport-webapp/pom.xml", "diffHunk": "@@ -33,6 +33,10 @@\n             <groupId>org.glassfish</groupId>\n             <artifactId>jakarta.json</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>javax.enterprise</groupId>\n+            <artifactId>cdi-api</artifactId>\n+        </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0NzExOQ==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430447119", "createdAt": "2020-05-26T14:17:01Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-bulkimportexport-webapp/pom.xml", "diffHunk": "@@ -33,6 +33,10 @@\n             <groupId>org.glassfish</groupId>\n             <artifactId>jakarta.json</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>javax.enterprise</groupId>\n+            <artifactId>cdi-api</artifactId>\n+        </dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNTE3MA=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDk1NDcxOnYy", "diffSide": "RIGHT", "path": "fhir-bulkimportexport-webapp/src/main/java/META-INF/batch-jobs/FhirBulkExportGroupChunkJob.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzozNDoxNFrOGaefQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDowMDoyN1rOGafpbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNTY4Mw==", "bodyText": "Why the change from the fhir. prefix?", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430415683", "createdAt": "2020-05-26T13:34:14Z", "author": {"login": "prb112"}, "path": "fhir-bulkimportexport-webapp/src/main/java/META-INF/batch-jobs/FhirBulkExportGroupChunkJob.xml", "diffHunk": "@@ -1,20 +1,23 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <job xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/jobXML_1_0.xsd\" id=\"bulkgroupexportchunkjob\" restartable=\"true\" version=\"1.0\">\n+    <listeners>\n+        <listener ref=\"com.ibm.fhir.bulkexport.system.ExportJobListener\"/>\n+    </listeners>\n     <step id=\"step1\">\n-        <chunk checkpoint-policy=\"item\" item-count=\"1\">\n+        <chunk checkpoint-policy=\"custom\">\n             <reader ref=\"com.ibm.fhir.bulkexport.group.ChunkReader\">\n                 <properties >\n                     <property name=\"fhir.tenant\" value=\"#{jobParameters['fhir.tenant']}\"/>\n                     <property name=\"fhir.datastoreid\" value=\"#{jobParameters['fhir.datastoreid']}\"/>                   \n-                    <property name=\"fhir.resourcetype\" value=\"#{jobParameters['fhir.resourcetype']}\"/>\n+                    <property name=\"partition.resourcetype\" value=\"#{partitionPlan['partition.resourcetype']}\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzNDY3MA==", "bodyText": "this is for the resourcetype processed by the partition(passed by the partition mapper to the chunk codes), this is different from the job parameter.", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430434670", "createdAt": "2020-05-26T14:00:27Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-bulkimportexport-webapp/src/main/java/META-INF/batch-jobs/FhirBulkExportGroupChunkJob.xml", "diffHunk": "@@ -1,20 +1,23 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <job xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/jobXML_1_0.xsd\" id=\"bulkgroupexportchunkjob\" restartable=\"true\" version=\"1.0\">\n+    <listeners>\n+        <listener ref=\"com.ibm.fhir.bulkexport.system.ExportJobListener\"/>\n+    </listeners>\n     <step id=\"step1\">\n-        <chunk checkpoint-policy=\"item\" item-count=\"1\">\n+        <chunk checkpoint-policy=\"custom\">\n             <reader ref=\"com.ibm.fhir.bulkexport.group.ChunkReader\">\n                 <properties >\n                     <property name=\"fhir.tenant\" value=\"#{jobParameters['fhir.tenant']}\"/>\n                     <property name=\"fhir.datastoreid\" value=\"#{jobParameters['fhir.datastoreid']}\"/>                   \n-                    <property name=\"fhir.resourcetype\" value=\"#{jobParameters['fhir.resourcetype']}\"/>\n+                    <property name=\"partition.resourcetype\" value=\"#{partitionPlan['partition.resourcetype']}\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNTY4Mw=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDk1NTc1OnYy", "diffSide": "RIGHT", "path": "fhir-bulkimportexport-webapp/src/main/java/META-INF/batch-jobs/FhirBulkExportGroupChunkJob.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzozNDozMVrOGaegAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDowMDo1OVrOGafq5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNTg3Mw==", "bodyText": "Why the change from the fhir. prefix?", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430415873", "createdAt": "2020-05-26T13:34:31Z", "author": {"login": "prb112"}, "path": "fhir-bulkimportexport-webapp/src/main/java/META-INF/batch-jobs/FhirBulkExportGroupChunkJob.xml", "diffHunk": "@@ -23,9 +26,24 @@\n                     <property name=\"cos.credential.ibm\" value=\"#{jobParameters['cos.credential.ibm']}\"/>\n                     <property name=\"cos.bucket.name\" value=\"#{jobParameters['cos.bucket.name']}\"/>\n                     <property name=\"cos.bucket.pathprefix\" value=\"#{jobParameters['cos.bucket.pathprefix']}\"/>\n-                    <property name=\"fhir.resourcetype\" value=\"#{jobParameters['fhir.resourcetype']}\"/>\n+                    <property name=\"partition.resourcetype\" value=\"#{partitionPlan['partition.resourcetype']}\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzNTA0NQ==", "bodyText": "answer as above.", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430435045", "createdAt": "2020-05-26T14:00:59Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-bulkimportexport-webapp/src/main/java/META-INF/batch-jobs/FhirBulkExportGroupChunkJob.xml", "diffHunk": "@@ -23,9 +26,24 @@\n                     <property name=\"cos.credential.ibm\" value=\"#{jobParameters['cos.credential.ibm']}\"/>\n                     <property name=\"cos.bucket.name\" value=\"#{jobParameters['cos.bucket.name']}\"/>\n                     <property name=\"cos.bucket.pathprefix\" value=\"#{jobParameters['cos.bucket.pathprefix']}\"/>\n-                    <property name=\"fhir.resourcetype\" value=\"#{jobParameters['fhir.resourcetype']}\"/>\n+                    <property name=\"partition.resourcetype\" value=\"#{partitionPlan['partition.resourcetype']}\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNTg3Mw=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDk2MTgzOnYy", "diffSide": "RIGHT", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/common/CheckPointAlgorithm.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzozNTo1N1rOGaej7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxNzoxOFrOGaga6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNjg3OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @BatchProperty(name = Constants.COS_BUCKET_FILE_MAX_SZIE)\n          \n          \n            \n                @BatchProperty(name = Constants.COS_BUCKET_FILE_MAX_SIZE)", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430416879", "createdAt": "2020-05-26T13:35:57Z", "author": {"login": "prb112"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/common/CheckPointAlgorithm.java", "diffHunk": "@@ -6,38 +6,45 @@\n \n package com.ibm.fhir.bulkexport.common;\n \n+import java.util.logging.Level;\n import java.util.logging.Logger;\n \n import javax.batch.api.BatchProperty;\n import javax.batch.api.chunk.CheckpointAlgorithm;\n-import javax.batch.runtime.context.JobContext;\n+import javax.batch.runtime.context.StepContext;\n+import javax.enterprise.context.Dependent;\n import javax.inject.Inject;\n \n import com.ibm.fhir.bulkcommon.Constants;\n+import com.ibm.fhir.config.FHIRConfigHelper;\n+import com.ibm.fhir.config.FHIRConfiguration;\n \n /**\n  * Bulk export Chunk implementation - custom checkpoint algorithm.\n  *\n  */\n-\n+@Dependent\n public class CheckPointAlgorithm implements CheckpointAlgorithm {\n     private final static Logger logger = Logger.getLogger(CheckPointAlgorithm.class.getName());\n+    private int cosFileMaxResources = FHIRConfigHelper.getIntProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_COSFILEMAXRESOURCES, Constants.DEFAULT_COSFILE_MAX_RESOURCESNUMBER);\n+    private int cosFileMaxSize = FHIRConfigHelper.getIntProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_COSFILEMAXSIZE  , Constants.DEFAULT_COSFILE_MAX_SIZE);\n+\n     @Inject\n-    JobContext jobContext;\n+    StepContext stepCtx;\n \n     /**\n-     * The cos.pagesperobject.\n+     * The file resources number limit when exporting to multiple COS files.\n      */\n     @Inject\n-    @BatchProperty(name = \"cos.pagesperobject\")\n-    String pagesPerCosObject;\n+    @BatchProperty(name = Constants.COS_BUCKET_FILE_MAX_RESOURCES)\n+    String cosBucketFileMaxResources;\n \n     /**\n      * The file size limit when exporting to multiple COS files.\n      */\n     @Inject\n-    @BatchProperty(name = \"cos.bucket.maxfilesize\")\n-    String cosBucketMaxFileSize;\n+    @BatchProperty(name = Constants.COS_BUCKET_FILE_MAX_SZIE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzNjY3NQ==", "bodyText": "ugly typo error, let me fix. :)", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430436675", "createdAt": "2020-05-26T14:03:06Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/common/CheckPointAlgorithm.java", "diffHunk": "@@ -6,38 +6,45 @@\n \n package com.ibm.fhir.bulkexport.common;\n \n+import java.util.logging.Level;\n import java.util.logging.Logger;\n \n import javax.batch.api.BatchProperty;\n import javax.batch.api.chunk.CheckpointAlgorithm;\n-import javax.batch.runtime.context.JobContext;\n+import javax.batch.runtime.context.StepContext;\n+import javax.enterprise.context.Dependent;\n import javax.inject.Inject;\n \n import com.ibm.fhir.bulkcommon.Constants;\n+import com.ibm.fhir.config.FHIRConfigHelper;\n+import com.ibm.fhir.config.FHIRConfiguration;\n \n /**\n  * Bulk export Chunk implementation - custom checkpoint algorithm.\n  *\n  */\n-\n+@Dependent\n public class CheckPointAlgorithm implements CheckpointAlgorithm {\n     private final static Logger logger = Logger.getLogger(CheckPointAlgorithm.class.getName());\n+    private int cosFileMaxResources = FHIRConfigHelper.getIntProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_COSFILEMAXRESOURCES, Constants.DEFAULT_COSFILE_MAX_RESOURCESNUMBER);\n+    private int cosFileMaxSize = FHIRConfigHelper.getIntProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_COSFILEMAXSIZE  , Constants.DEFAULT_COSFILE_MAX_SIZE);\n+\n     @Inject\n-    JobContext jobContext;\n+    StepContext stepCtx;\n \n     /**\n-     * The cos.pagesperobject.\n+     * The file resources number limit when exporting to multiple COS files.\n      */\n     @Inject\n-    @BatchProperty(name = \"cos.pagesperobject\")\n-    String pagesPerCosObject;\n+    @BatchProperty(name = Constants.COS_BUCKET_FILE_MAX_RESOURCES)\n+    String cosBucketFileMaxResources;\n \n     /**\n      * The file size limit when exporting to multiple COS files.\n      */\n     @Inject\n-    @BatchProperty(name = \"cos.bucket.maxfilesize\")\n-    String cosBucketMaxFileSize;\n+    @BatchProperty(name = Constants.COS_BUCKET_FILE_MAX_SZIE)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNjg3OQ=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0NzMzNw==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430447337", "createdAt": "2020-05-26T14:17:18Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/common/CheckPointAlgorithm.java", "diffHunk": "@@ -6,38 +6,45 @@\n \n package com.ibm.fhir.bulkexport.common;\n \n+import java.util.logging.Level;\n import java.util.logging.Logger;\n \n import javax.batch.api.BatchProperty;\n import javax.batch.api.chunk.CheckpointAlgorithm;\n-import javax.batch.runtime.context.JobContext;\n+import javax.batch.runtime.context.StepContext;\n+import javax.enterprise.context.Dependent;\n import javax.inject.Inject;\n \n import com.ibm.fhir.bulkcommon.Constants;\n+import com.ibm.fhir.config.FHIRConfigHelper;\n+import com.ibm.fhir.config.FHIRConfiguration;\n \n /**\n  * Bulk export Chunk implementation - custom checkpoint algorithm.\n  *\n  */\n-\n+@Dependent\n public class CheckPointAlgorithm implements CheckpointAlgorithm {\n     private final static Logger logger = Logger.getLogger(CheckPointAlgorithm.class.getName());\n+    private int cosFileMaxResources = FHIRConfigHelper.getIntProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_COSFILEMAXRESOURCES, Constants.DEFAULT_COSFILE_MAX_RESOURCESNUMBER);\n+    private int cosFileMaxSize = FHIRConfigHelper.getIntProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_COSFILEMAXSIZE  , Constants.DEFAULT_COSFILE_MAX_SIZE);\n+\n     @Inject\n-    JobContext jobContext;\n+    StepContext stepCtx;\n \n     /**\n-     * The cos.pagesperobject.\n+     * The file resources number limit when exporting to multiple COS files.\n      */\n     @Inject\n-    @BatchProperty(name = \"cos.pagesperobject\")\n-    String pagesPerCosObject;\n+    @BatchProperty(name = Constants.COS_BUCKET_FILE_MAX_RESOURCES)\n+    String cosBucketFileMaxResources;\n \n     /**\n      * The file size limit when exporting to multiple COS files.\n      */\n     @Inject\n-    @BatchProperty(name = \"cos.bucket.maxfilesize\")\n-    String cosBucketMaxFileSize;\n+    @BatchProperty(name = Constants.COS_BUCKET_FILE_MAX_SZIE)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNjg3OQ=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDk2MjkyOnYy", "diffSide": "RIGHT", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkcommon/Constants.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzozNjoxNFrOGaektA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxNzoyNlrOGagbQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNzA3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String COS_BUCKET_FILE_MAX_SZIE = \"cos.bucket.filemaxsize\";\n          \n          \n            \n                public static final String COS_BUCKET_FILE_MAX_SIZE = \"cos.bucket.filemaxsize\";", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430417076", "createdAt": "2020-05-26T13:36:14Z", "author": {"login": "prb112"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkcommon/Constants.java", "diffHunk": "@@ -40,17 +40,26 @@\n     public static final String COS_LOCATION = \"cos.location\";\n     public static final String COS_BUCKET_NAME = \"cos.bucket.name\";\n     public static final String COS_IS_IBM_CREDENTIAL = \"cos.credential.ibm\";\n+    public static final String COS_BUCKET_FILE_MAX_SZIE = \"cos.bucket.filemaxsize\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzNzUzMg==", "bodyText": "good catch", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430437532", "createdAt": "2020-05-26T14:04:16Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkcommon/Constants.java", "diffHunk": "@@ -40,17 +40,26 @@\n     public static final String COS_LOCATION = \"cos.location\";\n     public static final String COS_BUCKET_NAME = \"cos.bucket.name\";\n     public static final String COS_IS_IBM_CREDENTIAL = \"cos.credential.ibm\";\n+    public static final String COS_BUCKET_FILE_MAX_SZIE = \"cos.bucket.filemaxsize\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNzA3Ng=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0NzQyNg==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430447426", "createdAt": "2020-05-26T14:17:26Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkcommon/Constants.java", "diffHunk": "@@ -40,17 +40,26 @@\n     public static final String COS_LOCATION = \"cos.location\";\n     public static final String COS_BUCKET_NAME = \"cos.bucket.name\";\n     public static final String COS_IS_IBM_CREDENTIAL = \"cos.credential.ibm\";\n+    public static final String COS_BUCKET_FILE_MAX_SZIE = \"cos.bucket.filemaxsize\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNzA3Ng=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDk3MjEwOnYy", "diffSide": "RIGHT", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzozODoyNFrOGaeqbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDowNToxOVrOGaf34A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxODU0MA==", "bodyText": "protected?\nthis change from List is because each resourceType is split into separate executions?", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430418540", "createdAt": "2020-05-26T13:38:24Z", "author": {"login": "prb112"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "diffHunk": "@@ -41,23 +42,22 @@\n import com.ibm.fhir.persistence.context.FHIRPersistenceContextFactory;\n import com.ibm.fhir.persistence.helper.FHIRPersistenceHelper;\n import com.ibm.fhir.persistence.helper.FHIRTransactionHelper;\n-import com.ibm.fhir.search.compartment.CompartmentUtil;\n import com.ibm.fhir.search.context.FHIRSearchContext;\n import com.ibm.fhir.search.util.SearchUtil;\n \n /**\n  * Bulk patient export Chunk implementation - the Reader.\n  *\n  */\n+@Dependent\n public class ChunkReader extends AbstractItemReader {\n     private final static Logger logger = Logger.getLogger(ChunkReader.class.getName());\n     protected int pageNum = 1;\n-    protected int indexOfCurrentResourceType = 0;\n     // Control the number of records to read in each \"item\".\n     protected int pageSize = Constants.DEFAULT_SEARCH_PAGE_SIZE;\n \n     protected FHIRPersistence fhirPersistence;\n-    protected List<String> resourceTypes;\n+    Class<? extends Resource> resourceType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzODM2OA==", "bodyText": "yes, now each partition/chuck codes only need to process its own resouretype - one and only one resource type.", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430438368", "createdAt": "2020-05-26T14:05:19Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "diffHunk": "@@ -41,23 +42,22 @@\n import com.ibm.fhir.persistence.context.FHIRPersistenceContextFactory;\n import com.ibm.fhir.persistence.helper.FHIRPersistenceHelper;\n import com.ibm.fhir.persistence.helper.FHIRTransactionHelper;\n-import com.ibm.fhir.search.compartment.CompartmentUtil;\n import com.ibm.fhir.search.context.FHIRSearchContext;\n import com.ibm.fhir.search.util.SearchUtil;\n \n /**\n  * Bulk patient export Chunk implementation - the Reader.\n  *\n  */\n+@Dependent\n public class ChunkReader extends AbstractItemReader {\n     private final static Logger logger = Logger.getLogger(ChunkReader.class.getName());\n     protected int pageNum = 1;\n-    protected int indexOfCurrentResourceType = 0;\n     // Control the number of records to read in each \"item\".\n     protected int pageSize = Constants.DEFAULT_SEARCH_PAGE_SIZE;\n \n     protected FHIRPersistence fhirPersistence;\n-    protected List<String> resourceTypes;\n+    Class<? extends Resource> resourceType;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxODU0MA=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDk5MDU3OnYy", "diffSide": "RIGHT", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/system/ExportJobListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzo0Mjo0NFrOGae2EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDowNjozNFrOGaf7aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQyMTUyMQ==", "bodyText": "this seems like a good thing to have a log.fine", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430421521", "createdAt": "2020-05-26T13:42:44Z", "author": {"login": "prb112"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/system/ExportJobListener.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.bulkexport.system;\n+\n+import java.text.DecimalFormat;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import java.util.logging.Logger;\n+\n+import javax.batch.api.BatchProperty;\n+import javax.batch.api.listener.JobListener;\n+import javax.batch.operations.JobOperator;\n+import javax.batch.runtime.BatchRuntime;\n+import javax.batch.runtime.JobExecution;\n+import javax.batch.runtime.context.JobContext;\n+import javax.enterprise.context.Dependent;\n+import javax.inject.Inject;\n+\n+import com.ibm.fhir.bulkcommon.Constants;\n+import com.ibm.fhir.bulkexport.common.CheckPointUserData;\n+\n+@Dependent\n+public class ExportJobListener implements JobListener {\n+    private static final Logger logger = Logger.getLogger(ExportJobListener.class.getName());\n+\n+    long currentExecutionStartTimeInMS;\n+\n+    @Inject\n+    JobContext jobContext;\n+\n+    @Inject\n+    @BatchProperty(name = Constants.IMPORT_FHIR_DATASOURCES)\n+    String dataSourcesInfo;\n+\n+    public ExportJobListener() {\n+        // do nothing\n+    }\n+\n+\n+    @Override\n+    public void afterJob() {\n+        long currentExecutionEndTimeInMS = TimeUnit.NANOSECONDS.toMillis(System.nanoTime());\n+\n+        // Used for generating response for all the import data resources.\n+        @SuppressWarnings(\"unchecked\")\n+        List<CheckPointUserData> partitionSummaries = (List<CheckPointUserData>)jobContext.getTransientUserData();\n+\n+        JobOperator jobOperator = BatchRuntime.getJobOperator();\n+        long totalJobExecutionMilliSeconds = 0;\n+        // The job can be started, stopped and then started again, so we need to add them all to get the whole job execution duration.\n+        for ( JobExecution jobExecution: jobOperator.getJobExecutions(jobOperator.getJobInstance(jobContext.getExecutionId()))) {\n+            // For current execution, jobExecution.getEndTime() is either null or with wrong value because the current execution is not\n+            // finished yet, so always use system time for both job execution start time and end time.\n+            if (jobExecution.getExecutionId()  == jobContext.getExecutionId()) {\n+                totalJobExecutionMilliSeconds += (currentExecutionEndTimeInMS - currentExecutionStartTimeInMS);\n+            } else {\n+                totalJobExecutionMilliSeconds += (jobExecution.getEndTime().getTime() - jobExecution.getStartTime().getTime());\n+            }\n+        }\n+\n+        // If the job is stopped before any partition is finished, then nothing to show.\n+        if (partitionSummaries == null) {\n+            return;\n+        }\n+\n+        double jobProcessingSeconds = totalJobExecutionMilliSeconds / 1000.0;\n+        jobProcessingSeconds = jobProcessingSeconds < 1 ? 1.0 : jobProcessingSeconds;\n+\n+        // log the simple metrics.\n+        logger.info(\" ---- Fhir resources exported in \" + jobProcessingSeconds + \"seconds ----\");\n+        logger.info(\"ResourceType \\t| Exported\");\n+        int totalExportedFhirResources = 0;\n+        List<String> resourceTypeSummaries = new ArrayList<>();\n+        for (CheckPointUserData partitionSummary : partitionSummaries) {\n+            logger.info(partitionSummary.getResourceTypeSummary() + \"\\t|\"\n+                  + partitionSummary.getTotalResourcesNum());\n+            resourceTypeSummaries.add(partitionSummary.getResourceTypeSummary());\n+            totalExportedFhirResources += partitionSummary.getTotalResourcesNum();\n+        }\n+\n+        logger.info(\" ---- Total: \" + totalExportedFhirResources", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQzOTI3Mg==", "bodyText": "this is the summary of the whole export job, so I used info instead of fine.", "url": "https://github.com/IBM/FHIR/pull/1116#discussion_r430439272", "createdAt": "2020-05-26T14:06:34Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/system/ExportJobListener.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.bulkexport.system;\n+\n+import java.text.DecimalFormat;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import java.util.logging.Logger;\n+\n+import javax.batch.api.BatchProperty;\n+import javax.batch.api.listener.JobListener;\n+import javax.batch.operations.JobOperator;\n+import javax.batch.runtime.BatchRuntime;\n+import javax.batch.runtime.JobExecution;\n+import javax.batch.runtime.context.JobContext;\n+import javax.enterprise.context.Dependent;\n+import javax.inject.Inject;\n+\n+import com.ibm.fhir.bulkcommon.Constants;\n+import com.ibm.fhir.bulkexport.common.CheckPointUserData;\n+\n+@Dependent\n+public class ExportJobListener implements JobListener {\n+    private static final Logger logger = Logger.getLogger(ExportJobListener.class.getName());\n+\n+    long currentExecutionStartTimeInMS;\n+\n+    @Inject\n+    JobContext jobContext;\n+\n+    @Inject\n+    @BatchProperty(name = Constants.IMPORT_FHIR_DATASOURCES)\n+    String dataSourcesInfo;\n+\n+    public ExportJobListener() {\n+        // do nothing\n+    }\n+\n+\n+    @Override\n+    public void afterJob() {\n+        long currentExecutionEndTimeInMS = TimeUnit.NANOSECONDS.toMillis(System.nanoTime());\n+\n+        // Used for generating response for all the import data resources.\n+        @SuppressWarnings(\"unchecked\")\n+        List<CheckPointUserData> partitionSummaries = (List<CheckPointUserData>)jobContext.getTransientUserData();\n+\n+        JobOperator jobOperator = BatchRuntime.getJobOperator();\n+        long totalJobExecutionMilliSeconds = 0;\n+        // The job can be started, stopped and then started again, so we need to add them all to get the whole job execution duration.\n+        for ( JobExecution jobExecution: jobOperator.getJobExecutions(jobOperator.getJobInstance(jobContext.getExecutionId()))) {\n+            // For current execution, jobExecution.getEndTime() is either null or with wrong value because the current execution is not\n+            // finished yet, so always use system time for both job execution start time and end time.\n+            if (jobExecution.getExecutionId()  == jobContext.getExecutionId()) {\n+                totalJobExecutionMilliSeconds += (currentExecutionEndTimeInMS - currentExecutionStartTimeInMS);\n+            } else {\n+                totalJobExecutionMilliSeconds += (jobExecution.getEndTime().getTime() - jobExecution.getStartTime().getTime());\n+            }\n+        }\n+\n+        // If the job is stopped before any partition is finished, then nothing to show.\n+        if (partitionSummaries == null) {\n+            return;\n+        }\n+\n+        double jobProcessingSeconds = totalJobExecutionMilliSeconds / 1000.0;\n+        jobProcessingSeconds = jobProcessingSeconds < 1 ? 1.0 : jobProcessingSeconds;\n+\n+        // log the simple metrics.\n+        logger.info(\" ---- Fhir resources exported in \" + jobProcessingSeconds + \"seconds ----\");\n+        logger.info(\"ResourceType \\t| Exported\");\n+        int totalExportedFhirResources = 0;\n+        List<String> resourceTypeSummaries = new ArrayList<>();\n+        for (CheckPointUserData partitionSummary : partitionSummaries) {\n+            logger.info(partitionSummary.getResourceTypeSummary() + \"\\t|\"\n+                  + partitionSummary.getTotalResourcesNum());\n+            resourceTypeSummaries.add(partitionSummary.getResourceTypeSummary());\n+            totalExportedFhirResources += partitionSummary.getTotalResourcesNum();\n+        }\n+\n+        logger.info(\" ---- Total: \" + totalExportedFhirResources", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQyMTUyMQ=="}, "originalCommit": {"oid": "066c797643da029380943400aae495f9296c15da"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4837, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}