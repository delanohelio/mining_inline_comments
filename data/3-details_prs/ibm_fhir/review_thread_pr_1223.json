{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMTc0MzY5", "number": 1223, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjo0MDoyNVrOEEw6PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjo0MDoyNVrOEEw6PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDMxMTAwOnYy", "diffSide": "RIGHT", "path": "fhir-validation/src/test/java/com/ibm/fhir/validation/test/ObservationProfileTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjo0MDoyNVrOGilxyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjo1Njo0NFrOGimWtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkyMzcyMg==", "bodyText": "does it generate a lot of output?", "url": "https://github.com/IBM/FHIR/pull/1223#discussion_r438923722", "createdAt": "2020-06-11T16:40:25Z", "author": {"login": "lmsurpre"}, "path": "fhir-validation/src/test/java/com/ibm/fhir/validation/test/ObservationProfileTest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.validation.test;\n+\n+\n+import static com.ibm.fhir.path.util.FHIRPathUtil.compile;\n+import static org.testng.Assert.assertEquals;\n+\n+import java.util.List;\n+\n+import org.testng.annotations.Test;\n+\n+import com.ibm.fhir.model.annotation.Constraint;\n+import com.ibm.fhir.model.resource.StructureDefinition;\n+import com.ibm.fhir.profile.ConstraintGenerator;\n+import com.ibm.fhir.registry.FHIRRegistry;\n+\n+public class ObservationProfileTest {\n+    @Test\n+    public void testObservationProfile() throws Exception {\n+        StructureDefinition profile = FHIRRegistry.getInstance().getResource(\"http://ibm.com/fhir/StructureDefinition/my-observation\",  StructureDefinition.class);\n+        ConstraintGenerator generator = new ConstraintGenerator(profile);\n+        List<Constraint> constraints = generator.generate();\n+        constraints.forEach(System.out::println);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bb7bb4fe4200fb5c21dda0f32347d0072ce442f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkzMzE3Mw==", "bodyText": "It outputs a single line to the console.", "url": "https://github.com/IBM/FHIR/pull/1223#discussion_r438933173", "createdAt": "2020-06-11T16:56:44Z", "author": {"login": "JohnTimm"}, "path": "fhir-validation/src/test/java/com/ibm/fhir/validation/test/ObservationProfileTest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.validation.test;\n+\n+\n+import static com.ibm.fhir.path.util.FHIRPathUtil.compile;\n+import static org.testng.Assert.assertEquals;\n+\n+import java.util.List;\n+\n+import org.testng.annotations.Test;\n+\n+import com.ibm.fhir.model.annotation.Constraint;\n+import com.ibm.fhir.model.resource.StructureDefinition;\n+import com.ibm.fhir.profile.ConstraintGenerator;\n+import com.ibm.fhir.registry.FHIRRegistry;\n+\n+public class ObservationProfileTest {\n+    @Test\n+    public void testObservationProfile() throws Exception {\n+        StructureDefinition profile = FHIRRegistry.getInstance().getResource(\"http://ibm.com/fhir/StructureDefinition/my-observation\",  StructureDefinition.class);\n+        ConstraintGenerator generator = new ConstraintGenerator(profile);\n+        List<Constraint> constraints = generator.generate();\n+        constraints.forEach(System.out::println);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkyMzcyMg=="}, "originalCommit": {"oid": "3bb7bb4fe4200fb5c21dda0f32347d0072ce442f"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4886, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}