{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NTM4NzAx", "number": 873, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxOToxOTo1NFrODtQK4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxOToxOTo1NFrODtQK4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Nzc3NDQzOnYy", "diffSide": "RIGHT", "path": "fhir-profile/src/main/java/com/ibm/fhir/profile/ConstraintGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxOToxOTo1NFrOF-km8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxOToyNDo0MVrOF-kxzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE1NTgyNw==", "bodyText": "can we delete?", "url": "https://github.com/IBM/FHIR/pull/873#discussion_r401155827", "createdAt": "2020-03-31T19:19:54Z", "author": {"login": "lmsurpre"}, "path": "fhir-profile/src/main/java/com/ibm/fhir/profile/ConstraintGenerator.java", "diffHunk": "@@ -283,35 +293,45 @@ private String generateFixedValueConstraint(ElementDefinition elementDefinition)\n             // fixed code\n             sb.append(\" = '\").append(fixed.as(Code.class).getValue()).append(\"'\");\n         }\n-        \n+\n         return sb.toString();\n     }\n \n     private String generatePatternValueConstraint(ElementDefinition elementDefinition) {\n         StringBuilder sb = new StringBuilder();\n-        \n+\n         String identifier = getIdentifier(elementDefinition);\n         sb.append(identifier);\n-        \n+\n         Element pattern = elementDefinition.getPattern();\n         if (pattern.is(CodeableConcept.class)) {\n             CodeableConcept codeableConcept = pattern.as(CodeableConcept.class);\n             Coding coding = codeableConcept.getCoding().get(0);\n+            String system = (coding.getSystem() != null) ? coding.getSystem().getValue() : null;\n+            sb.append(\".where(coding.where(\");\n+            if (system != null) {\n+                sb.append(\"system = '\").append(system).append(\"' and \");\n+            }\n+            sb.append(\"code = '\")\n+                .append(coding.getCode().getValue())\n+                .append(\"').exists()).exists()\");\n+            /*\n             sb.append(\".where(coding.where(system = '\")\n                 .append(coding.getSystem().getValue())\n                 .append(\"' and code = '\")\n                 .append(coding.getCode().getValue())\n                 .append(\"').exists()).exists()\");\n+            */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47f23f62959c8e3b35d552e468471bf340c5b9bc"}, "originalPosition": 225}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE1ODYwNg==", "bodyText": "removed commented out lines", "url": "https://github.com/IBM/FHIR/pull/873#discussion_r401158606", "createdAt": "2020-03-31T19:24:41Z", "author": {"login": "JohnTimm"}, "path": "fhir-profile/src/main/java/com/ibm/fhir/profile/ConstraintGenerator.java", "diffHunk": "@@ -283,35 +293,45 @@ private String generateFixedValueConstraint(ElementDefinition elementDefinition)\n             // fixed code\n             sb.append(\" = '\").append(fixed.as(Code.class).getValue()).append(\"'\");\n         }\n-        \n+\n         return sb.toString();\n     }\n \n     private String generatePatternValueConstraint(ElementDefinition elementDefinition) {\n         StringBuilder sb = new StringBuilder();\n-        \n+\n         String identifier = getIdentifier(elementDefinition);\n         sb.append(identifier);\n-        \n+\n         Element pattern = elementDefinition.getPattern();\n         if (pattern.is(CodeableConcept.class)) {\n             CodeableConcept codeableConcept = pattern.as(CodeableConcept.class);\n             Coding coding = codeableConcept.getCoding().get(0);\n+            String system = (coding.getSystem() != null) ? coding.getSystem().getValue() : null;\n+            sb.append(\".where(coding.where(\");\n+            if (system != null) {\n+                sb.append(\"system = '\").append(system).append(\"' and \");\n+            }\n+            sb.append(\"code = '\")\n+                .append(coding.getCode().getValue())\n+                .append(\"').exists()).exists()\");\n+            /*\n             sb.append(\".where(coding.where(system = '\")\n                 .append(coding.getSystem().getValue())\n                 .append(\"' and code = '\")\n                 .append(coding.getCode().getValue())\n                 .append(\"').exists()).exists()\");\n+            */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE1NTgyNw=="}, "originalCommit": {"oid": "47f23f62959c8e3b35d552e468471bf340c5b9bc"}, "originalPosition": 225}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 155, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}