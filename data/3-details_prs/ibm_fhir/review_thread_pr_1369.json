{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3NDMxNDMz", "number": 1369, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMTo0OTo1M1rOESxmbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzozNjo1MFrOES0J_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTIyNDc5OnYy", "diffSide": "RIGHT", "path": "operation/fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/util/BulkDataExportUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMTo0OTo1M1rOG4I8jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMTo0OTo1M1rOG4I8jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTUyMDAxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return new String(cp.doFinal(Base64.getDecoder().decode(strToDecrypt)), \"UTF-8\").replaceAll(\"_\", \"/\");\n          \n          \n            \n                            return new String(cp.doFinal(Base64.getDecoder().decode(strToDecrypt.replaceAll(\"_\", \"/\"))), \"UTF-8\");", "url": "https://github.com/IBM/FHIR/pull/1369#discussion_r461520013", "createdAt": "2020-07-28T11:49:53Z", "author": {"login": "lmsurpre"}, "path": "operation/fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/util/BulkDataExportUtil.java", "diffHunk": "@@ -294,10 +297,10 @@ public static String decryptBatchJobId(String strToDecrypt, SecretKeySpec key) {\n                 cp.init(Cipher.DECRYPT_MODE, key);\n                 // The encrypted job id has already been urldecoded by liberty runtime before reaching this function,\n                 // so, we don't do urldecode here.\n-                return new String(cp.doFinal(Base64.getDecoder().decode(strToDecrypt)));\n+                return new String(cp.doFinal(Base64.getDecoder().decode(strToDecrypt)), \"UTF-8\").replaceAll(\"_\", \"/\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "313c61c49a0c2274c045803208446e1e00b6f752"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTY0MzQ5OnYy", "diffSide": "RIGHT", "path": "operation/fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/util/BulkDataExportUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzozNjo1MFrOG4M6yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzozNjo1MFrOG4M6yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4NTA5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            String encodedJobId = Base64.getEncoder().encodeToString(cp.doFinal(strToEncrypt.getBytes(\"UTF-8\"))).replaceAll(\"/\", \"_\");\n          \n          \n            \n                            String encodedJobId = Base64.getEncoder().withoutPadding().encodeToString(cp.doFinal(strToEncrypt.getBytes(\"UTF-8\"))).replaceAll(\"/\", \"_\");", "url": "https://github.com/IBM/FHIR/pull/1369#discussion_r461585097", "createdAt": "2020-07-28T13:36:50Z", "author": {"login": "lmsurpre"}, "path": "operation/fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/util/BulkDataExportUtil.java", "diffHunk": "@@ -275,8 +275,11 @@ public static String encryptBatchJobId(String strToEncrypt, SecretKeySpec key) {\n                 // Use light weight encryption without salt to simplify both the encryption/decryption and also config.\n                 Cipher cp = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");\n                 cp.init(Cipher.ENCRYPT_MODE, key);\n+\n+                // Encrypt the job id, base64-encode it, and replace all `/` chars with the less problematic `_` char\n+                String encodedJobId = Base64.getEncoder().encodeToString(cp.doFinal(strToEncrypt.getBytes(\"UTF-8\"))).replaceAll(\"/\", \"_\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebbe3e78aa45db1e483f9a4b2284a8d01956ab6d"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4775, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}