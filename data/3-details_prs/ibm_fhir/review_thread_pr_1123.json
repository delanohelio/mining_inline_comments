{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMzI5ODEx", "number": 1123, "reviewThreads": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyMDo0NVrOD99VTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzo1MjoxN1rOD-mtmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2Mjk0NjA3OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/JavaBatchSchemaGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyMDo0NVrOGXxJog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMzo0OToxNlrOGX2gFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3NTcxNA==", "bodyText": "maybe create these up front like we do in FHIRSchemaGenerator.  then, replaced these four lines with:\n.addPrivileges(List<GroupPrivilege>)\n\nin each of the add*Table methods", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427575714", "createdAt": "2020-05-19T20:20:45Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/JavaBatchSchemaGenerator.java", "diffHunk": "@@ -0,0 +1,450 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.schema.control;\n+\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.PK;\n+\n+import com.ibm.fhir.database.utils.model.Generated;\n+import com.ibm.fhir.database.utils.model.PhysicalDataModel;\n+import com.ibm.fhir.database.utils.model.Privilege;\n+import com.ibm.fhir.database.utils.model.Table;\n+\n+/**\n+ * Encapsulates the generation of the Liberty Java Batch schema artifacts.\n+ * This sql is generated using the Open Liberty tool ddlGen\n+ * <code>wlp/bin/ddlGen generate fhir-server</code>\n+ */\n+public class JavaBatchSchemaGenerator {\n+    public static final Boolean NOT_NULL = Boolean.FALSE;\n+    public static final Boolean NULL = Boolean.TRUE;\n+\n+    public static final String JOBPARAMETER_TABLE = \"JOBPARAMETER\";\n+    public static final String NAME = \"NAME\";\n+    public static final String VALUE = \"VALUE\";\n+    public static final String FK_JOBEXECID = \"FK_JOBEXECID\";\n+    public static final String JP_FKJOBEXECID_IX = \"JP_FKJOBEXECID_IX\";\n+\n+    public static final String JOBEXECUTION_TABLE = \"JOBEXECUTION\";\n+    public static final String JOBEXECID = \"JOBEXECID\";\n+    public static final String ENDTIME = \"ENDTIME\";\n+    public static final String EXECNUM = \"EXECNUM\";\n+    public static final String JOBPARAMETERS = \"JOBPARAMETERS\";\n+    public static final String LOGPATH = \"LOGPATH\";\n+    public static final String RESTURL = \"RESTURL\";\n+    public static final String SERVERID = \"SERVERID\";\n+    public static final String STARTTIME = \"STARTTIME\";\n+\n+    public static final String GROUPASSOCIATION_TABLE = \"GROUPASSOCIATION\";\n+    public static final String FK_JOBINSTANCEID = \"FK_JOBINSTANCEID\";\n+    public static final String GROUPNAMES = \"GROUPNAMES\";\n+\n+    public static final String JOBINSTANCE_TABLE = \"JOBINSTANCE\";\n+    public static final String JOBINSTANCEID = \"JOBINSTANCEID\";\n+    public static final String AMCNAME = \"AMCNAME\";\n+    public static final String BATCHSTATUS = \"BATCHSTATUS\";\n+    public static final String CREATETIME = \"CREATETIME\";\n+    public static final String EXITSTATUS = \"EXITSTATUS\";\n+    public static final String INSTANCESTATE = \"INSTANCESTATE\";\n+    public static final String JOBNAME = \"JOBNAME\";\n+    public static final String JOBXMLNAME = \"JOBXMLNAME\";\n+    public static final String JOBXML = \"JOBXML\";\n+    public static final String NUMEXECS = \"NUMEXECS\";\n+    public static final String RESTARTON = \"RESTARTON\";\n+    public static final String SUBMITTER = \"SUBMITTER\";\n+    public static final String UPDATETIME = \"UPDATETIME\";\n+\n+    public static final String STEPTHREADINSTANCE_TABLE = \"STEPTHREADINSTANCE\";\n+    public static final String PARTNUM = \"PARTNUM\";\n+    public static final String STEPNAME = \"STEPNAME\";\n+    public static final String THREADTYPE = \"THREADTYPE\";\n+    public static final String CHECKPOINTDATA = \"CHECKPOINTDATA\";\n+    public static final String PARTITIONED = \"PARTITIONED\";\n+    public static final String PARTITIONPLANSIZE = \"PARTITIONPLANSIZE\";\n+    public static final String STARTCOUNT  = \"STARTCOUNT\";\n+    public static final String FK_LATEST_STEPEXECID = \"FK_LATEST_STEPEXECID\";\n+\n+    public static final String STEPTHREADEXECUTION_TABLE = \"STEPTHREADEXECUTION\";\n+    public static final String STEPEXECID = \"STEPEXECID\";\n+\n+    public static final String REMOTABLEPARTITION_TABLE = \"REMOTABLEPARTITION_TABLE\";\n+    public static final String INTERNALSTATE = \"INTERNALSTATE\";\n+    public static final String LASTUPDATED = \"LASTUPDATED\";\n+    public static final String FK_JOBEXECUTIONID = \"FK_JOBEXECUTIONID\";\n+    public static final String FK_STEPEXECUTIONID = \"FK_STEPEXECUTIONID\";\n+\n+    public static final String M_COMMIT = \"M_COMMIT\";\n+    public static final String M_FILTER = \"M_FILTER\";\n+    public static final String INTERNALSTATUS = \"INTERNALSTATUS\";\n+    public static final String USERDATA = \"USERDATA\";\n+    public static final String M_PROCESSSKIP = \"M_PROCESSSKIP\";\n+    public static final String M_READ = \"M_READ\";\n+    public static final String M_READSKIP = \"M_READSKIP\";\n+    public static final String M_ROLLBACK = \"M_ROLLBACK\";\n+    public static final String M_WRITE = \"M_WRITE\";\n+    public static final String M_WRITESKIP = \"M_WRITESKIP\";\n+    public static final String ISPARTITIONEDSTEP = \"ISPARTITIONEDSTEP\";\n+    public static final String FK_TOPLVL_STEPEXECID = \"FK_TOPLVL_STEPEXECID\";\n+\n+    // The schema holding all the Java Batch data\n+    private final String schemaName;\n+\n+    /**\n+     * Configures the destination schema for JavaBatch\n+     * @param schemaName\n+     */\n+    public JavaBatchSchemaGenerator(String schemaName) {\n+        this.schemaName = schemaName;\n+    }\n+\n+    /**\n+     * Create the tables needed by the Liberty JBatch databaseStore\n+     * @param model\n+     */\n+    public void buildJavaBatchSchema(PhysicalDataModel model) {\n+        addJobInstanceTable(model);\n+        addJobExecutionTable(model);\n+        addStepThreadExecutionTable(model);\n+        addStepThreadInstanceTable(model);\n+        addRemotablePartitionTable(model);\n+        addGroupAssociationTable(model);\n+        addJobParameterTable(model);\n+    }\n+\n+    /**\n+     * Adds the job table with the following values:\n+     <code>\n+     CREATE TABLE FHIR_BATCH.JOBPARAMETER (\n+         NAME VARCHAR(255), \n+         VALUE VARCHAR(255),\n+         FK_JOBEXECID BIGINT)\n+     CREATE INDEX FHIR_BATCH.JP_FKJOBEXECID_IX ON FHIR_BATCH.JOBPARAMETER (FK_JOBEXECID)\n+     ALTER TABLE FHIR_BATCH.JOBPARAMETER ADD CONSTRAINT JBPRMETERFKJBXECID FOREIGN KEY (FK_JOBEXECID)\n+         REFERENCES FHIR_BATCH.JOBEXECUTION (JOBEXECID)\n+     </code>\n+     * @param model\n+     */\n+    public void addJobParameterTable(PhysicalDataModel model) {\n+        // The default for the value is 255, and chosen to update to 4096\n+        Table parameter = Table.builder(schemaName, JOBPARAMETER_TABLE)\n+                .addVarcharColumn(NAME, 255, NULL) // NAME VARCHAR(255)\n+                .addVarcharColumn(VALUE, 4096, NULL) // VALUE VARCHAR(255) (updated to 4096)\n+                .addBigIntColumn(FK_JOBEXECID, NOT_NULL) // FK_JOBEXECID BIGINT\n+                .addForeignKeyConstraintAltTarget(\"JBPRMETERFKJBXECID\", schemaName, JOBEXECUTION_TABLE, JOBEXECID, FK_JOBEXECID)\n+                .addIndex(\"JP_FKJOBEXECID_IX\", FK_JOBEXECID)\n+                .addPrivilege(FhirSchemaConstants.FHIR_BATCH_GRANT_GROUP, Privilege.SELECT)\n+                .addPrivilege(FhirSchemaConstants.FHIR_BATCH_GRANT_GROUP, Privilege.INSERT)\n+                .addPrivilege(FhirSchemaConstants.FHIR_BATCH_GRANT_GROUP, Privilege.DELETE)\n+                .addPrivilege(FhirSchemaConstants.FHIR_BATCH_GRANT_GROUP, Privilege.UPDATE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY2MzM4Mw==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427663383", "createdAt": "2020-05-19T23:49:16Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/JavaBatchSchemaGenerator.java", "diffHunk": "@@ -0,0 +1,450 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.schema.control;\n+\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.PK;\n+\n+import com.ibm.fhir.database.utils.model.Generated;\n+import com.ibm.fhir.database.utils.model.PhysicalDataModel;\n+import com.ibm.fhir.database.utils.model.Privilege;\n+import com.ibm.fhir.database.utils.model.Table;\n+\n+/**\n+ * Encapsulates the generation of the Liberty Java Batch schema artifacts.\n+ * This sql is generated using the Open Liberty tool ddlGen\n+ * <code>wlp/bin/ddlGen generate fhir-server</code>\n+ */\n+public class JavaBatchSchemaGenerator {\n+    public static final Boolean NOT_NULL = Boolean.FALSE;\n+    public static final Boolean NULL = Boolean.TRUE;\n+\n+    public static final String JOBPARAMETER_TABLE = \"JOBPARAMETER\";\n+    public static final String NAME = \"NAME\";\n+    public static final String VALUE = \"VALUE\";\n+    public static final String FK_JOBEXECID = \"FK_JOBEXECID\";\n+    public static final String JP_FKJOBEXECID_IX = \"JP_FKJOBEXECID_IX\";\n+\n+    public static final String JOBEXECUTION_TABLE = \"JOBEXECUTION\";\n+    public static final String JOBEXECID = \"JOBEXECID\";\n+    public static final String ENDTIME = \"ENDTIME\";\n+    public static final String EXECNUM = \"EXECNUM\";\n+    public static final String JOBPARAMETERS = \"JOBPARAMETERS\";\n+    public static final String LOGPATH = \"LOGPATH\";\n+    public static final String RESTURL = \"RESTURL\";\n+    public static final String SERVERID = \"SERVERID\";\n+    public static final String STARTTIME = \"STARTTIME\";\n+\n+    public static final String GROUPASSOCIATION_TABLE = \"GROUPASSOCIATION\";\n+    public static final String FK_JOBINSTANCEID = \"FK_JOBINSTANCEID\";\n+    public static final String GROUPNAMES = \"GROUPNAMES\";\n+\n+    public static final String JOBINSTANCE_TABLE = \"JOBINSTANCE\";\n+    public static final String JOBINSTANCEID = \"JOBINSTANCEID\";\n+    public static final String AMCNAME = \"AMCNAME\";\n+    public static final String BATCHSTATUS = \"BATCHSTATUS\";\n+    public static final String CREATETIME = \"CREATETIME\";\n+    public static final String EXITSTATUS = \"EXITSTATUS\";\n+    public static final String INSTANCESTATE = \"INSTANCESTATE\";\n+    public static final String JOBNAME = \"JOBNAME\";\n+    public static final String JOBXMLNAME = \"JOBXMLNAME\";\n+    public static final String JOBXML = \"JOBXML\";\n+    public static final String NUMEXECS = \"NUMEXECS\";\n+    public static final String RESTARTON = \"RESTARTON\";\n+    public static final String SUBMITTER = \"SUBMITTER\";\n+    public static final String UPDATETIME = \"UPDATETIME\";\n+\n+    public static final String STEPTHREADINSTANCE_TABLE = \"STEPTHREADINSTANCE\";\n+    public static final String PARTNUM = \"PARTNUM\";\n+    public static final String STEPNAME = \"STEPNAME\";\n+    public static final String THREADTYPE = \"THREADTYPE\";\n+    public static final String CHECKPOINTDATA = \"CHECKPOINTDATA\";\n+    public static final String PARTITIONED = \"PARTITIONED\";\n+    public static final String PARTITIONPLANSIZE = \"PARTITIONPLANSIZE\";\n+    public static final String STARTCOUNT  = \"STARTCOUNT\";\n+    public static final String FK_LATEST_STEPEXECID = \"FK_LATEST_STEPEXECID\";\n+\n+    public static final String STEPTHREADEXECUTION_TABLE = \"STEPTHREADEXECUTION\";\n+    public static final String STEPEXECID = \"STEPEXECID\";\n+\n+    public static final String REMOTABLEPARTITION_TABLE = \"REMOTABLEPARTITION_TABLE\";\n+    public static final String INTERNALSTATE = \"INTERNALSTATE\";\n+    public static final String LASTUPDATED = \"LASTUPDATED\";\n+    public static final String FK_JOBEXECUTIONID = \"FK_JOBEXECUTIONID\";\n+    public static final String FK_STEPEXECUTIONID = \"FK_STEPEXECUTIONID\";\n+\n+    public static final String M_COMMIT = \"M_COMMIT\";\n+    public static final String M_FILTER = \"M_FILTER\";\n+    public static final String INTERNALSTATUS = \"INTERNALSTATUS\";\n+    public static final String USERDATA = \"USERDATA\";\n+    public static final String M_PROCESSSKIP = \"M_PROCESSSKIP\";\n+    public static final String M_READ = \"M_READ\";\n+    public static final String M_READSKIP = \"M_READSKIP\";\n+    public static final String M_ROLLBACK = \"M_ROLLBACK\";\n+    public static final String M_WRITE = \"M_WRITE\";\n+    public static final String M_WRITESKIP = \"M_WRITESKIP\";\n+    public static final String ISPARTITIONEDSTEP = \"ISPARTITIONEDSTEP\";\n+    public static final String FK_TOPLVL_STEPEXECID = \"FK_TOPLVL_STEPEXECID\";\n+\n+    // The schema holding all the Java Batch data\n+    private final String schemaName;\n+\n+    /**\n+     * Configures the destination schema for JavaBatch\n+     * @param schemaName\n+     */\n+    public JavaBatchSchemaGenerator(String schemaName) {\n+        this.schemaName = schemaName;\n+    }\n+\n+    /**\n+     * Create the tables needed by the Liberty JBatch databaseStore\n+     * @param model\n+     */\n+    public void buildJavaBatchSchema(PhysicalDataModel model) {\n+        addJobInstanceTable(model);\n+        addJobExecutionTable(model);\n+        addStepThreadExecutionTable(model);\n+        addStepThreadInstanceTable(model);\n+        addRemotablePartitionTable(model);\n+        addGroupAssociationTable(model);\n+        addJobParameterTable(model);\n+    }\n+\n+    /**\n+     * Adds the job table with the following values:\n+     <code>\n+     CREATE TABLE FHIR_BATCH.JOBPARAMETER (\n+         NAME VARCHAR(255), \n+         VALUE VARCHAR(255),\n+         FK_JOBEXECID BIGINT)\n+     CREATE INDEX FHIR_BATCH.JP_FKJOBEXECID_IX ON FHIR_BATCH.JOBPARAMETER (FK_JOBEXECID)\n+     ALTER TABLE FHIR_BATCH.JOBPARAMETER ADD CONSTRAINT JBPRMETERFKJBXECID FOREIGN KEY (FK_JOBEXECID)\n+         REFERENCES FHIR_BATCH.JOBEXECUTION (JOBEXECID)\n+     </code>\n+     * @param model\n+     */\n+    public void addJobParameterTable(PhysicalDataModel model) {\n+        // The default for the value is 255, and chosen to update to 4096\n+        Table parameter = Table.builder(schemaName, JOBPARAMETER_TABLE)\n+                .addVarcharColumn(NAME, 255, NULL) // NAME VARCHAR(255)\n+                .addVarcharColumn(VALUE, 4096, NULL) // VALUE VARCHAR(255) (updated to 4096)\n+                .addBigIntColumn(FK_JOBEXECID, NOT_NULL) // FK_JOBEXECID BIGINT\n+                .addForeignKeyConstraintAltTarget(\"JBPRMETERFKJBXECID\", schemaName, JOBEXECUTION_TABLE, JOBEXECID, FK_JOBEXECID)\n+                .addIndex(\"JP_FKJOBEXECID_IX\", FK_JOBEXECID)\n+                .addPrivilege(FhirSchemaConstants.FHIR_BATCH_GRANT_GROUP, Privilege.SELECT)\n+                .addPrivilege(FhirSchemaConstants.FHIR_BATCH_GRANT_GROUP, Privilege.INSERT)\n+                .addPrivilege(FhirSchemaConstants.FHIR_BATCH_GRANT_GROUP, Privilege.DELETE)\n+                .addPrivilege(FhirSchemaConstants.FHIR_BATCH_GRANT_GROUP, Privilege.UPDATE)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3NTcxNA=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2Mjk1NDE4OnYy", "diffSide": "RIGHT", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/CommonDatabaseAdapter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyMzoyMlrOGXxPDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMTo0NTowM1rOGXzxCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3NzEwMQ==", "bodyText": "Fix spacing", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427577101", "createdAt": "2020-05-19T20:23:22Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/CommonDatabaseAdapter.java", "diffHunk": "@@ -318,20 +318,46 @@ public void createForeignKeyConstraint(String constraintName, String schemaName,\n         ddl.append(DataDefinitionUtil.join(cols));\n         ddl.append(\") REFERENCES \");\n         ddl.append(targetName);\n+        if(targetColumnName != null && !targetColumnName.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3NzMxMQ==", "bodyText": "Objects.isNull", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427577311", "createdAt": "2020-05-19T20:23:48Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/CommonDatabaseAdapter.java", "diffHunk": "@@ -318,20 +318,46 @@ public void createForeignKeyConstraint(String constraintName, String schemaName,\n         ddl.append(DataDefinitionUtil.join(cols));\n         ddl.append(\") REFERENCES \");\n         ddl.append(targetName);\n+        if(targetColumnName != null && !targetColumnName.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3NzEwMQ=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYxODU2OQ==", "bodyText": "Fixed", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427618569", "createdAt": "2020-05-19T21:45:03Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/CommonDatabaseAdapter.java", "diffHunk": "@@ -318,20 +318,46 @@ public void createForeignKeyConstraint(String constraintName, String schemaName,\n         ddl.append(DataDefinitionUtil.join(cols));\n         ddl.append(\") REFERENCES \");\n         ddl.append(targetName);\n+        if(targetColumnName != null && !targetColumnName.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3NzEwMQ=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2Mjk3NDgyOnYy", "diffSide": "RIGHT", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/derby/DerbyAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyOTo0M1rOGXxcPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMTo0Mzo0MVrOGXzuvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MDQ3Ng==", "bodyText": "Drop / Fix", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427580476", "createdAt": "2020-05-19T20:29:43Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/derby/DerbyAdapter.java", "diffHunk": "@@ -153,12 +149,17 @@ public void dropProcedure(String schemaName, String procedureName) {\n \n     @Override\n     public void createTablespace(String tablespaceName) {\n-        warnOnce(MessageKey.TABLESPACE, \"Create tablespace not supported in Derby\");\n+        logger.fine(\"Create tablespace not supported in Derby\");\n+    }\n+\n+    @Override\n+    public void createTablespace(String tablespaceName, int extentSizeKB) {\n+        logger.fine(\"Create tablespace not supported in Derby\");\n     }\n \n     @Override\n     public void dropTablespace(String tablespaceName) {\n-        warnOnce(MessageKey.TABLESPACE, \"Drop tablespace not supported in Derby\");\n+        logger.fine(\"Create tablespace not supported in Derby\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYxNzk4MA==", "bodyText": "Fixed", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427617980", "createdAt": "2020-05-19T21:43:41Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/derby/DerbyAdapter.java", "diffHunk": "@@ -153,12 +149,17 @@ public void dropProcedure(String schemaName, String procedureName) {\n \n     @Override\n     public void createTablespace(String tablespaceName) {\n-        warnOnce(MessageKey.TABLESPACE, \"Create tablespace not supported in Derby\");\n+        logger.fine(\"Create tablespace not supported in Derby\");\n+    }\n+\n+    @Override\n+    public void createTablespace(String tablespaceName, int extentSizeKB) {\n+        logger.fine(\"Create tablespace not supported in Derby\");\n     }\n \n     @Override\n     public void dropTablespace(String tablespaceName) {\n-        warnOnce(MessageKey.TABLESPACE, \"Drop tablespace not supported in Derby\");\n+        logger.fine(\"Create tablespace not supported in Derby\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MDQ3Ng=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2Mjk5MTAxOnYy", "diffSide": "RIGHT", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/DerbyBootstrapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDozNDo1M1rOGXxmiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMTo0NToyNVrOGXzxvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MzExNQ==", "bodyText": "cool so, we support or are going to support upgrading of OAUTH and BATCH tables.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427583115", "createdAt": "2020-05-19T20:34:53Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/DerbyBootstrapper.java", "diffHunk": "@@ -111,7 +113,7 @@ public static void bootstrap(Connection connection, String adminSchemaName, Stri\n         // Current version history for the database. This is used by applyWithHistory\n         // to determine which updates to apply and to record the new changes as they\n         // are applied\n-        VersionHistoryService vhs = new VersionHistoryService(adminSchemaName, dataSchemaName, OAUTH_SCHEMANAME);\n+        VersionHistoryService vhs = new VersionHistoryService(adminSchemaName, dataSchemaName, OAUTH_SCHEMANAME, BATCH_SCHEMANAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYxODc0OQ==", "bodyText": "Absolutely.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427618749", "createdAt": "2020-05-19T21:45:25Z", "author": {"login": "prb112"}, "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/DerbyBootstrapper.java", "diffHunk": "@@ -111,7 +113,7 @@ public static void bootstrap(Connection connection, String adminSchemaName, Stri\n         // Current version history for the database. This is used by applyWithHistory\n         // to determine which updates to apply and to record the new changes as they\n         // are applied\n-        VersionHistoryService vhs = new VersionHistoryService(adminSchemaName, dataSchemaName, OAUTH_SCHEMANAME);\n+        VersionHistoryService vhs = new VersionHistoryService(adminSchemaName, dataSchemaName, OAUTH_SCHEMANAME, BATCH_SCHEMANAME);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MzExNQ=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2Mjk5MjQ4OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirSchemaConstants.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDozNToxNVrOGXxnXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMzo0MjowOFrOGX2WTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MzMyNw==", "bodyText": "2", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427583327", "createdAt": "2020-05-19T20:35:15Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirSchemaConstants.java", "diffHunk": "@@ -10,10 +10,9 @@\n  * Constants related to Schema creation and updating. \n  */\n public class FhirSchemaConstants {\n-\n     // A lower pool size is selected as default to limit the likelihood of contention on the DBMS.\n     // Standard connection/thread pool size\n-    public static final int DEFAULT_POOL_SIZE = 1;\n+    public static final int DEFAULT_POOL_SIZE = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY2MDg3OA==", "bodyText": "Went to 1", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427660878", "createdAt": "2020-05-19T23:42:08Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirSchemaConstants.java", "diffHunk": "@@ -10,10 +10,9 @@\n  * Constants related to Schema creation and updating. \n  */\n public class FhirSchemaConstants {\n-\n     // A lower pool size is selected as default to limit the likelihood of contention on the DBMS.\n     // Standard connection/thread pool size\n-    public static final int DEFAULT_POOL_SIZE = 1;\n+    public static final int DEFAULT_POOL_SIZE = 10;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MzMyNw=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MzAyNzk1OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDo0NTozN1rOGXx9Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMjowOTowM1rOGX41Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4ODk1OA==", "bodyText": "Do we assume the javabatch tables are in the same database as fhir data but with different schema?", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427588958", "createdAt": "2020-05-19T20:45:37Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -575,6 +581,12 @@ protected void updateSchema() {\n             oauthSchemaGenerator.buildOAuthSchema(pdm);\n         }\n \n+        // Build/update the Liberty JBatch related tables", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYxOTMyOQ==", "bodyText": "that's right.  Same database, same schema.\nIf necessary, I can add a separate command to deploy the Batch tables", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427619329", "createdAt": "2020-05-19T21:46:42Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -575,6 +581,12 @@ protected void updateSchema() {\n             oauthSchemaGenerator.buildOAuthSchema(pdm);\n         }\n \n+        // Build/update the Liberty JBatch related tables", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4ODk1OA=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYxOTM3MQ==", "bodyText": "Thoughts?", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427619371", "createdAt": "2020-05-19T21:46:47Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -575,6 +581,12 @@ protected void updateSchema() {\n             oauthSchemaGenerator.buildOAuthSchema(pdm);\n         }\n \n+        // Build/update the Liberty JBatch related tables", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4ODk1OA=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYzMjUxNA==", "bodyText": "so, drop schema will keep the batch tables but only remove the fhirdata tables ...\nI think because we support different databases in the same fhir server, e.g, in CDT env, we configured performance## tenants using fhir-db2-perf1 database, and the others use databases of the other DB2 instances.   so, maybe it's better to use different job database for javabatch, because it's actually shared/used for export/import from/to all the other databases...  in CDT env, we used the same database as fhirdata, I think maybe this is not the best approach.  In my local, I always configure separated database for javabatch job repo...", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427632514", "createdAt": "2020-05-19T22:17:45Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -575,6 +581,12 @@ protected void updateSchema() {\n             oauthSchemaGenerator.buildOAuthSchema(pdm);\n         }\n \n+        // Build/update the Liberty JBatch related tables", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4ODk1OA=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYzNTg5Mg==", "bodyText": "I think we'd better to separate the job repo.  but this is not a block for 4.2.2. if necessary, we can just create a issue for future enhancement.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427635892", "createdAt": "2020-05-19T22:26:52Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -575,6 +581,12 @@ protected void updateSchema() {\n             oauthSchemaGenerator.buildOAuthSchema(pdm);\n         }\n \n+        // Build/update the Liberty JBatch related tables", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4ODk1OA=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY2MDA0Ng==", "bodyText": "I've added --batch-only so you can deploy to a different db.\nIt'll still install in the original main db, I don't think this is bad.\nAt least it can go into a separate db if needed (without the overhead of the rest of the tables)", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427660046", "createdAt": "2020-05-19T23:39:22Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -575,6 +581,12 @@ protected void updateSchema() {\n             oauthSchemaGenerator.buildOAuthSchema(pdm);\n         }\n \n+        // Build/update the Liberty JBatch related tables", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4ODk1OA=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcwMTU4Nw==", "bodyText": "haha, just read this one and at least i understand the motivation for the --batch-only flag now", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427701587", "createdAt": "2020-05-20T02:09:03Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -575,6 +581,12 @@ protected void updateSchema() {\n             oauthSchemaGenerator.buildOAuthSchema(pdm);\n         }\n \n+        // Build/update the Liberty JBatch related tables", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4ODk1OA=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MzA0NjkyOnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDo1MTowOVrOGXyJFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMzoyODozMlrOGX2FlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5MTk1Nw==", "bodyText": "if enable this command for postgresql, can we still use the Db2Adapter?", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427591957", "createdAt": "2020-05-19T20:51:09Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -798,7 +814,7 @@ protected void process() {\n      * @param groupName\n      */\n     protected void grantPrivileges(String groupName) {\n-        if (!MULTITENANT_FEATURE_ENABLED.contains(dbType)) {\n+        if (!PRIVILEGES_FEATURE_ENABLED.contains(dbType)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYxOTQ5OQ==", "bodyText": "Thank you for seeing this, I'll fix", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427619499", "createdAt": "2020-05-19T21:47:04Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -798,7 +814,7 @@ protected void process() {\n      * @param groupName\n      */\n     protected void grantPrivileges(String groupName) {\n-        if (!MULTITENANT_FEATURE_ENABLED.contains(dbType)) {\n+        if (!PRIVILEGES_FEATURE_ENABLED.contains(dbType)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5MTk1Nw=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY1NjU5Ng==", "bodyText": "I've fixed this.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427656596", "createdAt": "2020-05-19T23:28:32Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -798,7 +814,7 @@ protected void process() {\n      * @param groupName\n      */\n     protected void grantPrivileges(String groupName) {\n-        if (!MULTITENANT_FEATURE_ENABLED.contains(dbType)) {\n+        if (!PRIVILEGES_FEATURE_ENABLED.contains(dbType)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5MTk1Nw=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MzA2NDkwOnYy", "diffSide": "RIGHT", "path": "fhir-server/liberty-config/configDropins/defaults/bulkdata.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDo1NjozNlrOGXyUuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMzo1MzozMVrOGX2lEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NDkzNg==", "bodyText": "better to use FHIR_JBATCH, because JBATCH is the default schema of javabatch.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427594936", "createdAt": "2020-05-19T20:56:36Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/liberty-config/configDropins/defaults/bulkdata.xml", "diffHunk": "@@ -61,5 +61,5 @@\n     -->\n \n     <batchPersistence jobStoreRef=\"BatchDatabaseStore\"/>\n-    <databaseStore dataSourceRef=\"fhirbatchDS\" id=\"BatchDatabaseStore\" schema=\"JBATCH\" tablePrefix=\"\"/>\n+    <databaseStore dataSourceRef=\"fhirbatchDS\" id=\"BatchDatabaseStore\" schema=\"FHIR_BATCH\" tablePrefix=\"\" createTables=\"false\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY1Njc1Nw==", "bodyText": "does it make a difference? or just to align with the jbatch? it's definitely inspired by and to be used by", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427656757", "createdAt": "2020-05-19T23:29:02Z", "author": {"login": "prb112"}, "path": "fhir-server/liberty-config/configDropins/defaults/bulkdata.xml", "diffHunk": "@@ -61,5 +61,5 @@\n     -->\n \n     <batchPersistence jobStoreRef=\"BatchDatabaseStore\"/>\n-    <databaseStore dataSourceRef=\"fhirbatchDS\" id=\"BatchDatabaseStore\" schema=\"JBATCH\" tablePrefix=\"\"/>\n+    <databaseStore dataSourceRef=\"fhirbatchDS\" id=\"BatchDatabaseStore\" schema=\"FHIR_BATCH\" tablePrefix=\"\" createTables=\"false\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NDkzNg=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY2NDY1OA==", "bodyText": "Converted to JBatch", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427664658", "createdAt": "2020-05-19T23:53:31Z", "author": {"login": "prb112"}, "path": "fhir-server/liberty-config/configDropins/defaults/bulkdata.xml", "diffHunk": "@@ -61,5 +61,5 @@\n     -->\n \n     <batchPersistence jobStoreRef=\"BatchDatabaseStore\"/>\n-    <databaseStore dataSourceRef=\"fhirbatchDS\" id=\"BatchDatabaseStore\" schema=\"JBATCH\" tablePrefix=\"\"/>\n+    <databaseStore dataSourceRef=\"fhirbatchDS\" id=\"BatchDatabaseStore\" schema=\"FHIR_BATCH\" tablePrefix=\"\" createTables=\"false\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5NDkzNg=="}, "originalCommit": {"oid": "5741262170f111556620bfaa64ad85712de3a46f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MzczMDExOnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMjowMDo0OFrOGX4tRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMTozMToxMVrOGYegKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY5OTUyNA==", "bodyText": "whats the intent of this one?  why not just do it lock-step with the update-schema like we're doing for the OAuth schema?", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427699524", "createdAt": "2020-05-20T02:00:48Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -291,6 +301,9 @@ protected void parseArgs(String[] args) {\n             case \"--dry-run\":\n                 this.dryRun = Boolean.TRUE;\n                 break;\n+            case \"--batch-db-only\":\n+                this.batchOnly = Boolean.TRUE;\n+                break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f253d646f6619cfd379223194680c90be7b0cc1e"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcwMDI4NA==", "bodyText": "if it really needs to be separate, maybe we should split it into three actions?\n\n--update-schema\n--update-batch-schema\n--update-oauth-schema\n\nLike have those set the createFhirSchema, createOauthSchema, and createJavaBatchSchema flags respectively, then base the update on those flags alone...", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427700284", "createdAt": "2020-05-20T02:03:49Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -291,6 +301,9 @@ protected void parseArgs(String[] args) {\n             case \"--dry-run\":\n                 this.dryRun = Boolean.TRUE;\n                 break;\n+            case \"--batch-db-only\":\n+                this.batchOnly = Boolean.TRUE;\n+                break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY5OTUyNA=="}, "originalCommit": {"oid": "f253d646f6619cfd379223194680c90be7b0cc1e"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcwMDk5NA==", "bodyText": "when i did the oauth schema, i was going to do something like that until i decided that the separate actions weren't really needed and so i just did the oauth ones as part of the normal create and update schema actions", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427700994", "createdAt": "2020-05-20T02:06:40Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -291,6 +301,9 @@ protected void parseArgs(String[] args) {\n             case \"--dry-run\":\n                 this.dryRun = Boolean.TRUE;\n                 break;\n+            case \"--batch-db-only\":\n+                this.batchOnly = Boolean.TRUE;\n+                break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY5OTUyNA=="}, "originalCommit": {"oid": "f253d646f6619cfd379223194680c90be7b0cc1e"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxMTQ2OA==", "bodyText": "After discuss with @lmsurpre , we agree that both oauth and batch has the same issue. and we'd better allow to use different databases for batch and oauth which is/are shared by the whole service. so the wanted changes are: admin always created with each database; and admin keep info for schemas in the same database, not matter they are fhirbath, oauth or fhirdata; and fhirbatch, oauth or fhirdata schema can be updated seperately.\nFor now, @prb112 Could you please drop the --batch-db-only change from this PR? thanks!", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427711468", "createdAt": "2020-05-20T02:47:35Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -291,6 +301,9 @@ protected void parseArgs(String[] args) {\n             case \"--dry-run\":\n                 this.dryRun = Boolean.TRUE;\n                 break;\n+            case \"--batch-db-only\":\n+                this.batchOnly = Boolean.TRUE;\n+                break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY5OTUyNA=="}, "originalCommit": {"oid": "f253d646f6619cfd379223194680c90be7b0cc1e"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2NDYyNw==", "bodyText": "I'm not going to drop it - I'm just going to change to match Lee's request.\nI'd rather do this all at once, it's an easyish change", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427964627", "createdAt": "2020-05-20T12:21:58Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -291,6 +301,9 @@ protected void parseArgs(String[] args) {\n             case \"--dry-run\":\n                 this.dryRun = Boolean.TRUE;\n                 break;\n+            case \"--batch-db-only\":\n+                this.batchOnly = Boolean.TRUE;\n+                break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY5OTUyNA=="}, "originalCommit": {"oid": "f253d646f6619cfd379223194680c90be7b0cc1e"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk3NTgzOA==", "bodyText": "sound good! thanks!", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r427975838", "createdAt": "2020-05-20T12:40:06Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -291,6 +301,9 @@ protected void parseArgs(String[] args) {\n             case \"--dry-run\":\n                 this.dryRun = Boolean.TRUE;\n                 break;\n+            case \"--batch-db-only\":\n+                this.batchOnly = Boolean.TRUE;\n+                break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY5OTUyNA=="}, "originalCommit": {"oid": "f253d646f6619cfd379223194680c90be7b0cc1e"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMxODc2Mg==", "bodyText": "Paul added separate actions for\n    --update-schema-fhir SCHEMANAME\n    --update-schema-batch SCHEMANAME\n    --update-schema-oauth SCHEMANAME\n\nwhile preserving the existing behavior of --update-schema.\nI think the updated design manages to walk the fine line of backwards-compatibility while still adding the requested functionality.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428318762", "createdAt": "2020-05-20T21:31:11Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -291,6 +301,9 @@ protected void parseArgs(String[] args) {\n             case \"--dry-run\":\n                 this.dryRun = Boolean.TRUE;\n                 break;\n+            case \"--batch-db-only\":\n+                this.batchOnly = Boolean.TRUE;\n+                break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY5OTUyNA=="}, "originalCommit": {"oid": "f253d646f6619cfd379223194680c90be7b0cc1e"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzQ4Mzg5OnYy", "diffSide": "RIGHT", "path": "fhir-config/src/main/java/com/ibm/fhir/config/FHIRRequestContext.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMTowNToyM1rOGYdx7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzowNjo1NlrOGYyD6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMwNjkyNA==", "bodyText": "maybe better to show the reason like it's not needed anymore or not useful anymore because it's handled in fhirdaoimp..", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428306924", "createdAt": "2020-05-20T21:05:23Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-config/src/main/java/com/ibm/fhir/config/FHIRRequestContext.java", "diffHunk": "@@ -94,6 +95,7 @@ public void setTenantId(String tenantId) throws FHIRException {\n      * @param base64\n      * @throws FHIRException if the given value is not a valid Base64 string\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMzYwMA==", "bodyText": "I agree and so I just left a suggestion that I believe would address the comment.  Should we add a similar javadoc on the getTenantKey() method as well?", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428323600", "createdAt": "2020-05-20T21:41:00Z", "author": {"login": "lmsurpre"}, "path": "fhir-config/src/main/java/com/ibm/fhir/config/FHIRRequestContext.java", "diffHunk": "@@ -94,6 +95,7 @@ public void setTenantId(String tenantId) throws FHIRException {\n      * @param base64\n      * @throws FHIRException if the given value is not a valid Base64 string\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMwNjkyNA=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYzODU3Mw==", "bodyText": "Picked up the suggestion and applied... I'm going to apply to getTenantKey as well", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428638573", "createdAt": "2020-05-21T13:05:36Z", "author": {"login": "prb112"}, "path": "fhir-config/src/main/java/com/ibm/fhir/config/FHIRRequestContext.java", "diffHunk": "@@ -94,6 +95,7 @@ public void setTenantId(String tenantId) throws FHIRException {\n      * @param base64\n      * @throws FHIRException if the given value is not a valid Base64 string\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMwNjkyNA=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYzOTIxMQ==", "bodyText": "Applied in next commit", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428639211", "createdAt": "2020-05-21T13:06:56Z", "author": {"login": "prb112"}, "path": "fhir-config/src/main/java/com/ibm/fhir/config/FHIRRequestContext.java", "diffHunk": "@@ -94,6 +95,7 @@ public void setTenantId(String tenantId) throws FHIRException {\n      * @param base64\n      * @throws FHIRException if the given value is not a valid Base64 string\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMwNjkyNA=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzQ5MDIxOnYy", "diffSide": "RIGHT", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/api/IConnectionProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMTowNzo0OFrOGYd1-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMzozNTo0OFrOGYhZvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMwNzk2MA==", "bodyText": "does -1 mean no limit?", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428307960", "createdAt": "2020-05-20T21:07:48Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/api/IConnectionProvider.java", "diffHunk": "@@ -57,4 +56,11 @@\n      * @param key\n      */\n     public void describe(String prefix, StringBuilder cfg, String key);\n-}\n+\n+    /**\n+     * used to control threading size.\n+     */\n+    public default int getPoolSize() {\n+        return -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM2NjI3MQ==", "bodyText": "it means there is now pool and to signal the downstream code to change.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428366271", "createdAt": "2020-05-20T23:35:48Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/api/IConnectionProvider.java", "diffHunk": "@@ -57,4 +56,11 @@\n      * @param key\n      */\n     public void describe(String prefix, StringBuilder cfg, String key);\n-}\n+\n+    /**\n+     * used to control threading size.\n+     */\n+    public default int getPoolSize() {\n+        return -1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMwNzk2MA=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzU0NTQwOnYy", "diffSide": "RIGHT", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/postgresql/PostgreSqlAdapter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMToyNzowNlrOGYeY8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMDo0MToyNVrOGYih6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMxNjkxMg==", "bodyText": "does this always return true?\nthe comments for --checkCompatibility \"checks feature compatibility\" seems a little bit confusing for me...\nI didn't notice this before, could you help to tell what's this used for?", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428316912", "createdAt": "2020-05-20T21:27:06Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/postgresql/PostgreSqlAdapter.java", "diffHunk": "@@ -302,4 +304,33 @@ public void createIndex(String schemaName, String tableName, String indexName, S\n         String ddl = DataDefinitionUtil.createIndex(schemaName, tableName, indexName, indexColumns, false);\n         runStatement(ddl);\n     }\n-}\n+\n+    @Override\n+    public boolean checkCompatibility(String adminSchema) {\n+        final String statement = \"SELECT 1\";\n+        boolean result = false;\n+        try (Connection c = connectionProvider.getConnection(); PreparedStatement stmt = c.prepareStatement(statement)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM2NjM4MQ==", "bodyText": "it's used to check the connectivity to the database.\nreturns an exception if there is an issue.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428366381", "createdAt": "2020-05-20T23:36:09Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/postgresql/PostgreSqlAdapter.java", "diffHunk": "@@ -302,4 +304,33 @@ public void createIndex(String schemaName, String tableName, String indexName, S\n         String ddl = DataDefinitionUtil.createIndex(schemaName, tableName, indexName, indexColumns, false);\n         runStatement(ddl);\n     }\n-}\n+\n+    @Override\n+    public boolean checkCompatibility(String adminSchema) {\n+        final String statement = \"SELECT 1\";\n+        boolean result = false;\n+        try (Connection c = connectionProvider.getConnection(); PreparedStatement stmt = c.prepareStatement(statement)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMxNjkxMg=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM4NDc0NA==", "bodyText": "ha, interesting,  the function name seems a little bit confusing, I though it's compatible with something ...", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428384744", "createdAt": "2020-05-21T00:41:25Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/postgresql/PostgreSqlAdapter.java", "diffHunk": "@@ -302,4 +304,33 @@ public void createIndex(String schemaName, String tableName, String indexName, S\n         String ddl = DataDefinitionUtil.createIndex(schemaName, tableName, indexName, indexColumns, false);\n         runStatement(ddl);\n     }\n-}\n+\n+    @Override\n+    public boolean checkCompatibility(String adminSchema) {\n+        final String statement = \"SELECT 1\";\n+        boolean result = false;\n+        try (Connection c = connectionProvider.getConnection(); PreparedStatement stmt = c.prepareStatement(statement)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMxNjkxMg=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzU1Nzg1OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/docs/tests/Db2.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMTozMToyMlrOGYegwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMzozNjozM1rOGYhanQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMxODkxNA==", "bodyText": "postgresql.md is empty, is it the same as db2.md? if so, maybe should not name as db2.md ...", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428318914", "createdAt": "2020-05-20T21:31:22Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/docs/tests/Db2.md", "diffHunk": "@@ -0,0 +1,217 @@\n+For db2\n+# Test 1 - Existing --create-schemas\n+--create-schemas\n+--prop-file fhir-persistence-schema/db2.properties\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 select schemaname from syscat.schemata\n+SCHEMANAME\n+-------------\n+FHIRDATA\n+FHIR_ADMIN\n+FHIR_JBATCH\n+FHIR_OAUTH\n+\n+# Test 2 -- new --create-schema-fhir (mixed)\n+--prop-file fhir-persistence-schema/db2.properties\n+--create-schemas\n+--create-schema-batch fhir_batch1\n+--create-schema-fhir fhirdata1\n+--create-schema-oauth fhir_oauth1\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 select schemaname from syscat.schemata\n+SCHEMANAME\n+---------------\n+FHIRDATA\n+FHIRDATA1\n+FHIR_ADMIN\n+FHIR_BATCH1\n+FHIR_JBATCH\n+FHIR_OAUTH\n+FHIR_OAUTH1\n+\n+# Test 3 -- new --create-schema-fhir - single schema\n+--prop-file fhir-persistence-schema/db2.properties\n+--create-schema-batch fhir_batch1\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 select schemaname from syscat.schemata\n+SCHEMANAME\n+---------------\n+FHIRDATA  \n+FHIRDATA1 \n+FHIRDATA2 \n+FHIR_ADMIN\n+FHIR_BATCH1 \n+FHIR_BATCH2 \n+FHIR_JBATCH \n+FHIR_OAUTH\n+FHIR_OAUTH1 \n+FHIR_OAUTH2  \n+\n+# Test 4 - Existing Update Schema\n+--prop-file fhir-persistence-schema/db2.properties\n+--update-schema\n+--schema-name fhirdata\n+db2 \"SELECT COUNT(*) FROM FHIR_ADMIN.VERSION_HISTORY\"\n+1          \n+-----------\n+       1385\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 \"SELECT COUNT(*) FROM FHIR_ADMIN.VERSION_HISTORY WHERE SCHEMA_NAME = 'FHIR_OAUTH'\"\n+1          \n+-----------\n+          3\n+  1 record(s) selected.\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 \"SELECT COUNT(*) FROM FHIR_ADMIN.VERSION_HISTORY WHERE SCHEMA_NAME = 'FHIR_JBATCH'\"\n+1          \n+-----------\n+          7\n+\n+  1 record(s) selected.\n+\n+# Test 5 -- Check-Compatibility\n+--prop-file fhir-persistence-schema/db2.properties\n+--check-compatibility\n+\n+2020-05-20 12:05:40.568 00000001    INFO .common.JdbcConnectionProvider Opening connection to database: jdbc:db2://localhost:50000/FHIRDB\n+2020-05-20 12:05:41.260 00000001    INFO   com.ibm.fhir.schema.app.Main Processing took:   0.748 s\n+2020-05-20 12:05:41.261 00000001    INFO   com.ibm.fhir.schema.app.Main SCHEMA CHANGE: OK\n+\n+# Test 6 - Existing Update Schema - fhir data\n+--prop-file fhir-persistence-schema/db2.properties\n+--update-schema-fhir fhir_fudge\n+[db2inst1@4dda34a66a99 ~]$ db2 \"SELECT COUNT(*) FROM FHIR_ADMIN.VERSION_HISTORY WHERE SCHEMA_NAME = 'fhir_fudge'\"\n+1          \n+-----------\n+       1351\n+  1 record(s) selected.\n+\n+# Test 6 - Existing Update Schema Batch\n+--prop-file fhir-persistence-schema/db2.properties\n+--update-schema-batch fhir_fudge_batch\n+2020-05-20 12:18:34.108 00000001    INFO .common.JdbcConnectionProvider Opening connection to database: jdbc:db2://localhost:50000/FHIRDB\n+2020-05-20 12:18:34.786 00000001    INFO   com.ibm.fhir.schema.app.Main Collecting model update tasks\n+2020-05-20 12:18:34.790 00000001    INFO   com.ibm.fhir.schema.app.Main Starting model updates\n+2020-05-20 12:18:35.253 0000000c    INFO hir.task.core.impl.TaskManager Task complete callback for taskId: TABLE:fhir_fudge_batch.JOBINSTANCE\n+2020-05-20 12:18:35.721 0000000c    INFO hir.task.core.impl.TaskManager Task complete callback for taskId: TABLE:fhir_fudge_batch.GROUPASSOCIATION\n+2020-05-20 12:18:35.950 0000000c    INFO hir.task.core.impl.TaskManager Task complete callback for taskId: TABLE:fhir_fudge_batch.JOBEXECUTION\n+2020-05-20 12:18:36.230 0000000c    INFO hir.task.core.impl.TaskManager Task complete callback for taskId: TABLE:fhir_fudge_batch.STEPTHREADEXECUTION\n+2020-05-20 12:18:36.346 0000000c    INFO hir.task.core.impl.TaskManager Task complete callback for taskId: TABLE:fhir_fudge_batch.JOBPARAMETER\n+2020-05-20 12:18:36.601 0000000c    INFO hir.task.core.impl.TaskManager Task complete callback for taskId: TABLE:fhir_fudge_batch.STEPTHREADINSTANCE\n+2020-05-20 12:18:36.873 0000000c    INFO hir.task.core.impl.TaskManager Task complete callback for taskId: TABLE:fhir_fudge_batch.REMOTABLEPARTITION_TABLE\n+2020-05-20 12:18:36.875 00000001    INFO   com.ibm.fhir.schema.app.Main Processing took:   2.856 s\n+2020-05-20 12:18:36.875 00000001    INFO   com.ibm.fhir.schema.app.Main SCHEMA CHANGE: OK\n+\n+db2 -x \"SELECT COUNT(*) FROM FHIR_ADMIN.VERSION_HISTORY WHERE SCHEMA_NAME = 'fhir_fudge_batch'\"\n+          7\n+\n+# Test 7 - Existing Update Schema OAuth\n+--prop-file fhir-persistence-schema/db2.properties\n+--update-schema-oauth fhir_fudge_oauth\n+ db2 -x \"SELECT COUNT(*) FROM FHIR_ADMIN.VERSION_HISTORY WHERE SCHEMA_NAME = 'fhir_fudge_oauth'\"\n+          3\n+\n+# Test 8 - Existing Update Schema OAuth\n+--prop-file fhir-persistence-schema/db2.properties\n+--update-schema-fhir fhir_fudge_fhir\n+db2 -x \"SELECT COUNT(*) FROM FHIR_ADMIN.VERSION_HISTORY WHERE SCHEMA_NAME = 'fhir_fudge_fhir'\"\n+       1351\n+\n+# Test 9 - Grant To fhirdata - FHIR\n+--prop-file fhir-persistence-schema/db2.properties\n+--grant-to fhirserver\n+--target DATA fhir_fudge_fhir\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 \"SELECT DISTINCT GRANTOR,CONTROLAUTH, ALTERAUTH, DELETEAUTH, INDEXAUTH, INSERTAUTH, REFAUTH, SELECTAUTH, UPDATEAUTH FROM SYSCAT.TABAUTH WHERE TABSCHEMA = 'FHIRDATA'\"\n+\n+GRANTOR                                                                                                                          CONTROLAUTH ALTERAUTH DELETEAUTH INDEXAUTH INSERTAUTH REFAUTH SELECTAUTH UPDATEAUTH\n+-------------------------------------------------------------------------------------------------------------------------------- ----------- --------- ---------- --------- ---------- ------- ---------- ----------\n+SYSIBM                                                                                                                           Y           G         G          G         G          G       G          G         \n+DB2INST1                                                                                                                         N           N         Y          N         Y          N       Y          Y         \n+\n+  2 record(s) selected.\n+\n+# Test 10 - Grant To OAUTH - FHIR\n+--prop-file fhir-persistence-schema/db2.properties\n+--grant-to fhirserver\n+--target OAUTH FHIR_OAUTH\n+\n+2020-05-20 13:07:43.917 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_OAUTH.OAUTH20CACHE TO FHIRSERVER\n+2020-05-20 13:07:43.978 00000001    INFO .common.JdbcConnectionProvider Opening connection to database: jdbc:db2://localhost:50000/FHIRDB\n+2020-05-20 13:07:45.054 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_OAUTH.OAUTH20CLIENTCONFIG TO FHIRSERVER\n+2020-05-20 13:07:45.087 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_OAUTH.OAUTH20CONSENTCACHE TO FHIRSERVER\n+2020-05-20 13:07:45.135 00000001    INFO   com.ibm.fhir.schema.app.Main Processing took:   1.404 s\n+2020-05-20 13:07:45.136 00000001    INFO   com.ibm.fhir.schema.app.Main SCHEMA CHANGE: OK\n+\n+ db2 \"SELECT DISTINCT GRANTOR,CONTROLAUTH, ALTERAUTH, DELETEAUTH, INDEXAUTH, INSERTAUTH, REFAUTH, SELECTAUTH, UPDATEAUTH FROM SYSCAT.TABAUTH WHERE TABSCHEMA = 'FHIR_OAUTH'\"\n+\n+GRANTOR                                                                                                                          CONTROLAUTH ALTERAUTH DELETEAUTH INDEXAUTH INSERTAUTH REFAUTH SELECTAUTH UPDATEAUTH\n+-------------------------------------------------------------------------------------------------------------------------------- ----------- --------- ---------- --------- ---------- ------- ---------- ----------\n+SYSIBM                                                                                                                           Y           G         G          G         G          G       G          G         \n+DB2INST1                                                                                                                         N           N         Y          N         Y          N       Y          Y         \n+\n+  2 record(s) selected.\n+\n+\n+# Test 11 - Grant To BATCH - FHIR_JBATCH\n+--prop-file fhir-persistence-schema/db2.properties\n+--grant-to fhirserver\n+--target BATCH FHIR_JBATCH\n+2020-05-20 13:09:05.052 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_JBATCH.JOBINSTANCE TO FHIRSERVER\n+2020-05-20 13:09:05.085 00000001    INFO .common.JdbcConnectionProvider Opening connection to database: jdbc:db2://localhost:50000/FHIRDB\n+2020-05-20 13:09:05.945 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_JBATCH.JOBEXECUTION TO FHIRSERVER\n+2020-05-20 13:09:05.960 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_JBATCH.STEPTHREADEXECUTION TO FHIRSERVER\n+2020-05-20 13:09:05.974 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_JBATCH.STEPTHREADINSTANCE TO FHIRSERVER\n+2020-05-20 13:09:05.990 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_JBATCH.REMOTABLEPARTITION_TABLE TO FHIRSERVER\n+2020-05-20 13:09:06.002 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_JBATCH.GROUPASSOCIATION TO FHIRSERVER\n+2020-05-20 13:09:06.012 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_JBATCH.JOBPARAMETER TO FHIRSERVER\n+2020-05-20 13:09:06.038 00000001    INFO   com.ibm.fhir.schema.app.Main Processing took:   1.139 s\n+2020-05-20 13:09:06.039 00000001    INFO   com.ibm.fhir.schema.app.Main SCHEMA CHANGE: OK\n+\n+ db2 \"SELECT DISTINCT GRANTOR,CONTROLAUTH, ALTERAUTH, DELETEAUTH, INDEXAUTH, INSERTAUTH, REFAUTH, SELECTAUTH, UPDATEAUTH FROM SYSCAT.TABAUTH WHERE TABSCHEMA = 'FHIR_JBATCH'\"\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 \"SELECT DISTINCT TRIM(GRANTEE || ' '), SELECTAUTH|| UPDATEAUTH||DELETEAUTH||INSERTAUTH,CONTROLAUTH||ALTERAUTH||  INDEXAUTH||  REFAUTH  FROM SYSCAT.TABAUTH WHERE TABSCHEMA = 'FHIR_JBATCH'\"\n+\n+1                                                                                                                                 2    3   \n+--------------------------------------------------------------------------------------------------------------------------------- ---- ----\n+FHIRSERVER                                                                                                                        YYYY NNNN\n+DB2INST1                                                                                                                          GGGG YGGG     \n+\n+# Test 12 - Grant To All Default\n+--prop-file fhir-persistence-schema/db2.properties\n+--grant-to fhirserver\n+\n+db2 \"SELECT DISTINCT TRIM(GRANTEE || ' '), SELECTAUTH|| UPDATEAUTH||DELETEAUTH||INSERTAUTH,CONTROLAUTH||ALTERAUTH||  INDEXAUTH||  REFAUTH  FROM SYSCAT.TABAUTH WHERE TABSCHEMA IN ('FHIRDATA','FHIR_OAUTH','FHIR_JBATCH')\"\n+\n+2020-05-20 13:17:32.847 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT EXECUTE ON PROCEDURE FHIRDATA.ADD_RESOURCE_TYPE TO FHIRSERVER\n+2020-05-20 13:17:32.858 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT EXECUTE ON PROCEDURE FHIRDATA.ADD_ANY_RESOURCE TO FHIRSERVER\n+2020-05-20 13:17:32.868 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_OAUTH.OAUTH20CACHE TO FHIRSERVER\n+2020-05-20 13:17:32.891 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_OAUTH.OAUTH20CLIENTCONFIG TO FHIRSERVER\n+2020-05-20 13:17:32.924 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_OAUTH.OAUTH20CONSENTCACHE TO FHIRSERVER\n+2020-05-20 13:17:32.943 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_JBATCH.JOBINSTANCE TO FHIRSERVER\n+2020-05-20 13:17:32.969 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_JBATCH.JOBEXECUTION TO FHIRSERVER\n+2020-05-20 13:17:32.992 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_JBATCH.STEPTHREADEXECUTION TO FHIRSERVER\n+2020-05-20 13:17:33.017 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_JBATCH.STEPTHREADINSTANCE TO FHIRSERVER\n+2020-05-20 13:17:33.046 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_JBATCH.REMOTABLEPARTITION_TABLE TO FHIRSERVER\n+2020-05-20 13:17:33.079 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_JBATCH.GROUPASSOCIATION TO FHIRSERVER\n+2020-05-20 13:17:33.105 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_JBATCH.JOBPARAMETER TO FHIRSERVER\n+2020-05-20 13:17:33.140 00000001    INFO   com.ibm.fhir.schema.app.Main Processing took:  35.505 s\n+2020-05-20 13:17:33.140 00000001    INFO   com.ibm.fhir.schema.app.Main SCHEMA CHANGE: OK\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 \"SELECT DISTINCT TRIM(GRANTEE || ' '), SELECTAUTH|| UPDATEAUTH||DELETEAUTH||INSERTAUTH,CONTROLAUTH||ALTERAUTH||  INDEXAUTH||  REFAUTH  FROM SYSCAT.TABAUTH WHERE TABSCHEMA IN ('FHIRDATA','FHIR_OAUTH','FHIR_JBATCH')\"\n+1                                                                                                                                 2    3   \n+--------------------------------------------------------------------------------------------------------------------------------- ---- ----\n+FHIRSERVER                                                                                                                        YYYY NNNN\n+DB2INST1                                                                                                                          GGGG YGGG\n+\n+  2 record(s) selected.\n+\n+# Test 13 - Allocate Tenant - FHIRDATA\n+--prop-file fhir-persistence-schema/db2.properties\n+--schema-name FHIRDATA\n+--allocate-tenant default\n+2020-05-20 13:26:22.393 00000001    INFO   com.ibm.fhir.schema.app.Main tenantId [1] is being pre-populated with lookup table data.\n+2020-05-20 13:26:22.606 00000001    INFO   com.ibm.fhir.schema.app.Main Finished prepopulating the resource type and search parameter code/name tables tables\n+2020-05-20 13:26:22.649 00000001    INFO   com.ibm.fhir.schema.app.Main Allocated tenant: default [key=DOd7xmwhkx2FhJMyPLwaHeU8PAUWcpGj7VjYgMf2hy0=] with Id = 1\n+2020-05-20 13:26:22.651 00000001    INFO   com.ibm.fhir.schema.app.Main Processing took: 270.022 s\n+2020-05-20 13:26:22.651 00000001    INFO   com.ibm.fhir.schema.app.Main SCHEMA CHANGE: OK", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM2NjQ5Mw==", "bodyText": "intentional (I hadn't yet finished the tests)\nit'll be uploaded, thanks for noticing.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428366493", "createdAt": "2020-05-20T23:36:33Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/docs/tests/Db2.md", "diffHunk": "@@ -0,0 +1,217 @@\n+For db2\n+# Test 1 - Existing --create-schemas\n+--create-schemas\n+--prop-file fhir-persistence-schema/db2.properties\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 select schemaname from syscat.schemata\n+SCHEMANAME\n+-------------\n+FHIRDATA\n+FHIR_ADMIN\n+FHIR_JBATCH\n+FHIR_OAUTH\n+\n+# Test 2 -- new --create-schema-fhir (mixed)\n+--prop-file fhir-persistence-schema/db2.properties\n+--create-schemas\n+--create-schema-batch fhir_batch1\n+--create-schema-fhir fhirdata1\n+--create-schema-oauth fhir_oauth1\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 select schemaname from syscat.schemata\n+SCHEMANAME\n+---------------\n+FHIRDATA\n+FHIRDATA1\n+FHIR_ADMIN\n+FHIR_BATCH1\n+FHIR_JBATCH\n+FHIR_OAUTH\n+FHIR_OAUTH1\n+\n+# Test 3 -- new --create-schema-fhir - single schema\n+--prop-file fhir-persistence-schema/db2.properties\n+--create-schema-batch fhir_batch1\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 select schemaname from syscat.schemata\n+SCHEMANAME\n+---------------\n+FHIRDATA  \n+FHIRDATA1 \n+FHIRDATA2 \n+FHIR_ADMIN\n+FHIR_BATCH1 \n+FHIR_BATCH2 \n+FHIR_JBATCH \n+FHIR_OAUTH\n+FHIR_OAUTH1 \n+FHIR_OAUTH2  \n+\n+# Test 4 - Existing Update Schema\n+--prop-file fhir-persistence-schema/db2.properties\n+--update-schema\n+--schema-name fhirdata\n+db2 \"SELECT COUNT(*) FROM FHIR_ADMIN.VERSION_HISTORY\"\n+1          \n+-----------\n+       1385\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 \"SELECT COUNT(*) FROM FHIR_ADMIN.VERSION_HISTORY WHERE SCHEMA_NAME = 'FHIR_OAUTH'\"\n+1          \n+-----------\n+          3\n+  1 record(s) selected.\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 \"SELECT COUNT(*) FROM FHIR_ADMIN.VERSION_HISTORY WHERE SCHEMA_NAME = 'FHIR_JBATCH'\"\n+1          \n+-----------\n+          7\n+\n+  1 record(s) selected.\n+\n+# Test 5 -- Check-Compatibility\n+--prop-file fhir-persistence-schema/db2.properties\n+--check-compatibility\n+\n+2020-05-20 12:05:40.568 00000001    INFO .common.JdbcConnectionProvider Opening connection to database: jdbc:db2://localhost:50000/FHIRDB\n+2020-05-20 12:05:41.260 00000001    INFO   com.ibm.fhir.schema.app.Main Processing took:   0.748 s\n+2020-05-20 12:05:41.261 00000001    INFO   com.ibm.fhir.schema.app.Main SCHEMA CHANGE: OK\n+\n+# Test 6 - Existing Update Schema - fhir data\n+--prop-file fhir-persistence-schema/db2.properties\n+--update-schema-fhir fhir_fudge\n+[db2inst1@4dda34a66a99 ~]$ db2 \"SELECT COUNT(*) FROM FHIR_ADMIN.VERSION_HISTORY WHERE SCHEMA_NAME = 'fhir_fudge'\"\n+1          \n+-----------\n+       1351\n+  1 record(s) selected.\n+\n+# Test 6 - Existing Update Schema Batch\n+--prop-file fhir-persistence-schema/db2.properties\n+--update-schema-batch fhir_fudge_batch\n+2020-05-20 12:18:34.108 00000001    INFO .common.JdbcConnectionProvider Opening connection to database: jdbc:db2://localhost:50000/FHIRDB\n+2020-05-20 12:18:34.786 00000001    INFO   com.ibm.fhir.schema.app.Main Collecting model update tasks\n+2020-05-20 12:18:34.790 00000001    INFO   com.ibm.fhir.schema.app.Main Starting model updates\n+2020-05-20 12:18:35.253 0000000c    INFO hir.task.core.impl.TaskManager Task complete callback for taskId: TABLE:fhir_fudge_batch.JOBINSTANCE\n+2020-05-20 12:18:35.721 0000000c    INFO hir.task.core.impl.TaskManager Task complete callback for taskId: TABLE:fhir_fudge_batch.GROUPASSOCIATION\n+2020-05-20 12:18:35.950 0000000c    INFO hir.task.core.impl.TaskManager Task complete callback for taskId: TABLE:fhir_fudge_batch.JOBEXECUTION\n+2020-05-20 12:18:36.230 0000000c    INFO hir.task.core.impl.TaskManager Task complete callback for taskId: TABLE:fhir_fudge_batch.STEPTHREADEXECUTION\n+2020-05-20 12:18:36.346 0000000c    INFO hir.task.core.impl.TaskManager Task complete callback for taskId: TABLE:fhir_fudge_batch.JOBPARAMETER\n+2020-05-20 12:18:36.601 0000000c    INFO hir.task.core.impl.TaskManager Task complete callback for taskId: TABLE:fhir_fudge_batch.STEPTHREADINSTANCE\n+2020-05-20 12:18:36.873 0000000c    INFO hir.task.core.impl.TaskManager Task complete callback for taskId: TABLE:fhir_fudge_batch.REMOTABLEPARTITION_TABLE\n+2020-05-20 12:18:36.875 00000001    INFO   com.ibm.fhir.schema.app.Main Processing took:   2.856 s\n+2020-05-20 12:18:36.875 00000001    INFO   com.ibm.fhir.schema.app.Main SCHEMA CHANGE: OK\n+\n+db2 -x \"SELECT COUNT(*) FROM FHIR_ADMIN.VERSION_HISTORY WHERE SCHEMA_NAME = 'fhir_fudge_batch'\"\n+          7\n+\n+# Test 7 - Existing Update Schema OAuth\n+--prop-file fhir-persistence-schema/db2.properties\n+--update-schema-oauth fhir_fudge_oauth\n+ db2 -x \"SELECT COUNT(*) FROM FHIR_ADMIN.VERSION_HISTORY WHERE SCHEMA_NAME = 'fhir_fudge_oauth'\"\n+          3\n+\n+# Test 8 - Existing Update Schema OAuth\n+--prop-file fhir-persistence-schema/db2.properties\n+--update-schema-fhir fhir_fudge_fhir\n+db2 -x \"SELECT COUNT(*) FROM FHIR_ADMIN.VERSION_HISTORY WHERE SCHEMA_NAME = 'fhir_fudge_fhir'\"\n+       1351\n+\n+# Test 9 - Grant To fhirdata - FHIR\n+--prop-file fhir-persistence-schema/db2.properties\n+--grant-to fhirserver\n+--target DATA fhir_fudge_fhir\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 \"SELECT DISTINCT GRANTOR,CONTROLAUTH, ALTERAUTH, DELETEAUTH, INDEXAUTH, INSERTAUTH, REFAUTH, SELECTAUTH, UPDATEAUTH FROM SYSCAT.TABAUTH WHERE TABSCHEMA = 'FHIRDATA'\"\n+\n+GRANTOR                                                                                                                          CONTROLAUTH ALTERAUTH DELETEAUTH INDEXAUTH INSERTAUTH REFAUTH SELECTAUTH UPDATEAUTH\n+-------------------------------------------------------------------------------------------------------------------------------- ----------- --------- ---------- --------- ---------- ------- ---------- ----------\n+SYSIBM                                                                                                                           Y           G         G          G         G          G       G          G         \n+DB2INST1                                                                                                                         N           N         Y          N         Y          N       Y          Y         \n+\n+  2 record(s) selected.\n+\n+# Test 10 - Grant To OAUTH - FHIR\n+--prop-file fhir-persistence-schema/db2.properties\n+--grant-to fhirserver\n+--target OAUTH FHIR_OAUTH\n+\n+2020-05-20 13:07:43.917 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_OAUTH.OAUTH20CACHE TO FHIRSERVER\n+2020-05-20 13:07:43.978 00000001    INFO .common.JdbcConnectionProvider Opening connection to database: jdbc:db2://localhost:50000/FHIRDB\n+2020-05-20 13:07:45.054 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_OAUTH.OAUTH20CLIENTCONFIG TO FHIRSERVER\n+2020-05-20 13:07:45.087 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_OAUTH.OAUTH20CONSENTCACHE TO FHIRSERVER\n+2020-05-20 13:07:45.135 00000001    INFO   com.ibm.fhir.schema.app.Main Processing took:   1.404 s\n+2020-05-20 13:07:45.136 00000001    INFO   com.ibm.fhir.schema.app.Main SCHEMA CHANGE: OK\n+\n+ db2 \"SELECT DISTINCT GRANTOR,CONTROLAUTH, ALTERAUTH, DELETEAUTH, INDEXAUTH, INSERTAUTH, REFAUTH, SELECTAUTH, UPDATEAUTH FROM SYSCAT.TABAUTH WHERE TABSCHEMA = 'FHIR_OAUTH'\"\n+\n+GRANTOR                                                                                                                          CONTROLAUTH ALTERAUTH DELETEAUTH INDEXAUTH INSERTAUTH REFAUTH SELECTAUTH UPDATEAUTH\n+-------------------------------------------------------------------------------------------------------------------------------- ----------- --------- ---------- --------- ---------- ------- ---------- ----------\n+SYSIBM                                                                                                                           Y           G         G          G         G          G       G          G         \n+DB2INST1                                                                                                                         N           N         Y          N         Y          N       Y          Y         \n+\n+  2 record(s) selected.\n+\n+\n+# Test 11 - Grant To BATCH - FHIR_JBATCH\n+--prop-file fhir-persistence-schema/db2.properties\n+--grant-to fhirserver\n+--target BATCH FHIR_JBATCH\n+2020-05-20 13:09:05.052 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_JBATCH.JOBINSTANCE TO FHIRSERVER\n+2020-05-20 13:09:05.085 00000001    INFO .common.JdbcConnectionProvider Opening connection to database: jdbc:db2://localhost:50000/FHIRDB\n+2020-05-20 13:09:05.945 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_JBATCH.JOBEXECUTION TO FHIRSERVER\n+2020-05-20 13:09:05.960 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_JBATCH.STEPTHREADEXECUTION TO FHIRSERVER\n+2020-05-20 13:09:05.974 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_JBATCH.STEPTHREADINSTANCE TO FHIRSERVER\n+2020-05-20 13:09:05.990 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_JBATCH.REMOTABLEPARTITION_TABLE TO FHIRSERVER\n+2020-05-20 13:09:06.002 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_JBATCH.GROUPASSOCIATION TO FHIRSERVER\n+2020-05-20 13:09:06.012 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT UPDATE,DELETE,INSERT,SELECT ON FHIR_JBATCH.JOBPARAMETER TO FHIRSERVER\n+2020-05-20 13:09:06.038 00000001    INFO   com.ibm.fhir.schema.app.Main Processing took:   1.139 s\n+2020-05-20 13:09:06.039 00000001    INFO   com.ibm.fhir.schema.app.Main SCHEMA CHANGE: OK\n+\n+ db2 \"SELECT DISTINCT GRANTOR,CONTROLAUTH, ALTERAUTH, DELETEAUTH, INDEXAUTH, INSERTAUTH, REFAUTH, SELECTAUTH, UPDATEAUTH FROM SYSCAT.TABAUTH WHERE TABSCHEMA = 'FHIR_JBATCH'\"\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 \"SELECT DISTINCT TRIM(GRANTEE || ' '), SELECTAUTH|| UPDATEAUTH||DELETEAUTH||INSERTAUTH,CONTROLAUTH||ALTERAUTH||  INDEXAUTH||  REFAUTH  FROM SYSCAT.TABAUTH WHERE TABSCHEMA = 'FHIR_JBATCH'\"\n+\n+1                                                                                                                                 2    3   \n+--------------------------------------------------------------------------------------------------------------------------------- ---- ----\n+FHIRSERVER                                                                                                                        YYYY NNNN\n+DB2INST1                                                                                                                          GGGG YGGG     \n+\n+# Test 12 - Grant To All Default\n+--prop-file fhir-persistence-schema/db2.properties\n+--grant-to fhirserver\n+\n+db2 \"SELECT DISTINCT TRIM(GRANTEE || ' '), SELECTAUTH|| UPDATEAUTH||DELETEAUTH||INSERTAUTH,CONTROLAUTH||ALTERAUTH||  INDEXAUTH||  REFAUTH  FROM SYSCAT.TABAUTH WHERE TABSCHEMA IN ('FHIRDATA','FHIR_OAUTH','FHIR_JBATCH')\"\n+\n+2020-05-20 13:17:32.847 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT EXECUTE ON PROCEDURE FHIRDATA.ADD_RESOURCE_TYPE TO FHIRSERVER\n+2020-05-20 13:17:32.858 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT EXECUTE ON PROCEDURE FHIRDATA.ADD_ANY_RESOURCE TO FHIRSERVER\n+2020-05-20 13:17:32.868 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_OAUTH.OAUTH20CACHE TO FHIRSERVER\n+2020-05-20 13:17:32.891 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_OAUTH.OAUTH20CLIENTCONFIG TO FHIRSERVER\n+2020-05-20 13:17:32.924 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_OAUTH.OAUTH20CONSENTCACHE TO FHIRSERVER\n+2020-05-20 13:17:32.943 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_JBATCH.JOBINSTANCE TO FHIRSERVER\n+2020-05-20 13:17:32.969 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_JBATCH.JOBEXECUTION TO FHIRSERVER\n+2020-05-20 13:17:32.992 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_JBATCH.STEPTHREADEXECUTION TO FHIRSERVER\n+2020-05-20 13:17:33.017 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_JBATCH.STEPTHREADINSTANCE TO FHIRSERVER\n+2020-05-20 13:17:33.046 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_JBATCH.REMOTABLEPARTITION_TABLE TO FHIRSERVER\n+2020-05-20 13:17:33.079 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_JBATCH.GROUPASSOCIATION TO FHIRSERVER\n+2020-05-20 13:17:33.105 00000001    INFO s.common.CommonDatabaseAdapter Applying: GRANT SELECT,INSERT,UPDATE,DELETE ON FHIR_JBATCH.JOBPARAMETER TO FHIRSERVER\n+2020-05-20 13:17:33.140 00000001    INFO   com.ibm.fhir.schema.app.Main Processing took:  35.505 s\n+2020-05-20 13:17:33.140 00000001    INFO   com.ibm.fhir.schema.app.Main SCHEMA CHANGE: OK\n+\n+[db2inst1@4dda34a66a99 ~]$ db2 \"SELECT DISTINCT TRIM(GRANTEE || ' '), SELECTAUTH|| UPDATEAUTH||DELETEAUTH||INSERTAUTH,CONTROLAUTH||ALTERAUTH||  INDEXAUTH||  REFAUTH  FROM SYSCAT.TABAUTH WHERE TABSCHEMA IN ('FHIRDATA','FHIR_OAUTH','FHIR_JBATCH')\"\n+1                                                                                                                                 2    3   \n+--------------------------------------------------------------------------------------------------------------------------------- ---- ----\n+FHIRSERVER                                                                                                                        YYYY NNNN\n+DB2INST1                                                                                                                          GGGG YGGG\n+\n+  2 record(s) selected.\n+\n+# Test 13 - Allocate Tenant - FHIRDATA\n+--prop-file fhir-persistence-schema/db2.properties\n+--schema-name FHIRDATA\n+--allocate-tenant default\n+2020-05-20 13:26:22.393 00000001    INFO   com.ibm.fhir.schema.app.Main tenantId [1] is being pre-populated with lookup table data.\n+2020-05-20 13:26:22.606 00000001    INFO   com.ibm.fhir.schema.app.Main Finished prepopulating the resource type and search parameter code/name tables tables\n+2020-05-20 13:26:22.649 00000001    INFO   com.ibm.fhir.schema.app.Main Allocated tenant: default [key=DOd7xmwhkx2FhJMyPLwaHeU8PAUWcpGj7VjYgMf2hy0=] with Id = 1\n+2020-05-20 13:26:22.651 00000001    INFO   com.ibm.fhir.schema.app.Main Processing took: 270.022 s\n+2020-05-20 13:26:22.651 00000001    INFO   com.ibm.fhir.schema.app.Main SCHEMA CHANGE: OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMxODkxNA=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 217}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzU3NDc0OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/derby/DerbyFhirDatabase.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMTozNjo0NlrOGYeriA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMzozNzo0NFrOGYhb9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMTY3Mg==", "bodyText": "better to change to FHIR_JBATCH", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428321672", "createdAt": "2020-05-20T21:36:46Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/derby/DerbyFhirDatabase.java", "diffHunk": "@@ -40,6 +40,7 @@\n     private static final String SCHEMA_NAME = \"FHIRDATA\";\n     private static final String ADMIN_SCHEMA_NAME = \"FHIR_ADMIN\";\n     private static final String OAUTH_SCHEMANAME = \"FHIR_OAUTH\";\n+    private static final String BATCH_SCHEMANAME = \"FHIR_BATCH\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMjQyOQ==", "bodyText": "and are those constants common for derby, db2 etc.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428322429", "createdAt": "2020-05-20T21:38:26Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/derby/DerbyFhirDatabase.java", "diffHunk": "@@ -40,6 +40,7 @@\n     private static final String SCHEMA_NAME = \"FHIRDATA\";\n     private static final String ADMIN_SCHEMA_NAME = \"FHIR_ADMIN\";\n     private static final String OAUTH_SCHEMANAME = \"FHIR_OAUTH\";\n+    private static final String BATCH_SCHEMANAME = \"FHIR_BATCH\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMTY3Mg=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM2NjU2Mg==", "bodyText": "thanks for seeing this... I am trying to use JBATCH (good find)", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428366562", "createdAt": "2020-05-20T23:36:54Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/derby/DerbyFhirDatabase.java", "diffHunk": "@@ -40,6 +40,7 @@\n     private static final String SCHEMA_NAME = \"FHIRDATA\";\n     private static final String ADMIN_SCHEMA_NAME = \"FHIR_ADMIN\";\n     private static final String OAUTH_SCHEMANAME = \"FHIR_OAUTH\";\n+    private static final String BATCH_SCHEMANAME = \"FHIR_BATCH\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMTY3Mg=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM2NjgzOQ==", "bodyText": "Fixed in next PR.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428366839", "createdAt": "2020-05-20T23:37:44Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/derby/DerbyFhirDatabase.java", "diffHunk": "@@ -40,6 +40,7 @@\n     private static final String SCHEMA_NAME = \"FHIRDATA\";\n     private static final String ADMIN_SCHEMA_NAME = \"FHIR_ADMIN\";\n     private static final String OAUTH_SCHEMANAME = \"FHIR_OAUTH\";\n+    private static final String BATCH_SCHEMANAME = \"FHIR_BATCH\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMTY3Mg=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzU3OTA1OnYy", "diffSide": "RIGHT", "path": "fhir-config/src/main/java/com/ibm/fhir/config/FHIRRequestContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMTozODoxOVrOGYeuSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMzozODowNFrOGYhcfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMjM3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws FHIRException if the given value is not a valid Base64 string\n          \n          \n            \n                 * @throws FHIRException if the given value is not a valid Base64 string\n          \n          \n            \n                 * @deprecated tenantKey should be looked up on-the-fly from the fhir server configuration (e.g. from \n          \n          \n            \n                 *             FHIRDbDAOImpl.getConnection() in fhir-persistence-jdbc)", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428322377", "createdAt": "2020-05-20T21:38:19Z", "author": {"login": "lmsurpre"}, "path": "fhir-config/src/main/java/com/ibm/fhir/config/FHIRRequestContext.java", "diffHunk": "@@ -94,6 +95,7 @@ public void setTenantId(String tenantId) throws FHIRException {\n      * @param base64\n      * @throws FHIRException if the given value is not a valid Base64 string", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM2Njk3Mw==", "bodyText": "I'm going to leave this here to pick up shortly", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428366973", "createdAt": "2020-05-20T23:38:04Z", "author": {"login": "prb112"}, "path": "fhir-config/src/main/java/com/ibm/fhir/config/FHIRRequestContext.java", "diffHunk": "@@ -94,6 +95,7 @@ public void setTenantId(String tenantId) throws FHIRException {\n      * @param base64\n      * @throws FHIRException if the given value is not a valid Base64 string", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMjM3Nw=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzU4NzgxOnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/listener/FHIRServletContextListener.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMTo0MTozNFrOGYe0Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMjo1Njo0OVrOGYxwvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMzg3OQ==", "bodyText": "what if we already configured either DB2 or postgresql as job repo? will this still try to bootstrap derby job repo ...", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428323879", "createdAt": "2020-05-20T21:41:34Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/listener/FHIRServletContextListener.java", "diffHunk": "@@ -224,6 +224,17 @@ private void bootstrapDerbyDatabases(PropertyGroup fhirConfig) throws Exception\n                 log.info(\"No '\" + datasourceJndiName + \"' dataSource found; skipping OAuth client table bootstrapping\");\n             }\n \n+            try {\n+                // Check the batch database, if the batch database configuration is there, and available.\n+                ds = (DataSource) ctxt.lookup(\"jdbc/fhirbatchDB\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyNDc2OQ==", "bodyText": "and the same question for the OAUTH bootstraping...", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428324769", "createdAt": "2020-05-20T21:43:12Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/listener/FHIRServletContextListener.java", "diffHunk": "@@ -224,6 +224,17 @@ private void bootstrapDerbyDatabases(PropertyGroup fhirConfig) throws Exception\n                 log.info(\"No '\" + datasourceJndiName + \"' dataSource found; skipping OAuth client table bootstrapping\");\n             }\n \n+            try {\n+                // Check the batch database, if the batch database configuration is there, and available.\n+                ds = (DataSource) ctxt.lookup(\"jdbc/fhirbatchDB\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMzg3OQ=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM2NzEzNQ==", "bodyText": "only if you have enabled boostrap as true.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428367135", "createdAt": "2020-05-20T23:38:34Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/listener/FHIRServletContextListener.java", "diffHunk": "@@ -224,6 +224,17 @@ private void bootstrapDerbyDatabases(PropertyGroup fhirConfig) throws Exception\n                 log.info(\"No '\" + datasourceJndiName + \"' dataSource found; skipping OAuth client table bootstrapping\");\n             }\n \n+            try {\n+                // Check the batch database, if the batch database configuration is there, and available.\n+                ds = (DataSource) ctxt.lookup(\"jdbc/fhirbatchDB\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMzg3OQ=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM4NjY0MA==", "bodyText": "but our default setting is true, maybe better to check if the configured datasource is derby before bootstrap it ...", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428386640", "createdAt": "2020-05-21T00:48:44Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/listener/FHIRServletContextListener.java", "diffHunk": "@@ -224,6 +224,17 @@ private void bootstrapDerbyDatabases(PropertyGroup fhirConfig) throws Exception\n                 log.info(\"No '\" + datasourceJndiName + \"' dataSource found; skipping OAuth client table bootstrapping\");\n             }\n \n+            try {\n+                // Check the batch database, if the batch database configuration is there, and available.\n+                ds = (DataSource) ctxt.lookup(\"jdbc/fhirbatchDB\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMzg3OQ=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYzNDMwMA==", "bodyText": "I follow you. I am just testing my locallized fix (which is in boostrapBatchDb(ds)", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428634300", "createdAt": "2020-05-21T12:56:49Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/listener/FHIRServletContextListener.java", "diffHunk": "@@ -224,6 +224,17 @@ private void bootstrapDerbyDatabases(PropertyGroup fhirConfig) throws Exception\n                 log.info(\"No '\" + datasourceJndiName + \"' dataSource found; skipping OAuth client table bootstrapping\");\n             }\n \n+            try {\n+                // Check the batch database, if the batch database configuration is there, and available.\n+                ds = (DataSource) ctxt.lookup(\"jdbc/fhirbatchDB\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMzg3OQ=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzY5Njg0OnYy", "diffSide": "RIGHT", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/ProcedureDef.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyMTowNFrOGYf2fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzoxMDoxN1rOGYyKaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MDg2Mw==", "bodyText": "I'm not a huge fan of this design, but to be consistent with the objectName that actually gets created, we need to remove the _pg from the end of the object name when we apply the grant:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        target.grantProcedureAndFunctionPrivileges(getSchemaName(), getObjectName(), group, toUser);\n          \n          \n            \n                        target.grantProcedureAndFunctionPrivileges(getSchemaName(), getObjectName().replace(\"_pg\",\"\"), group, toUser);", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428340863", "createdAt": "2020-05-20T22:21:04Z", "author": {"login": "lmsurpre"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/ProcedureDef.java", "diffHunk": "@@ -72,7 +72,7 @@ protected void grantGroupPrivileges(IDatabaseAdapter target, Set<Privilege> grou\n         // Only apply DB Type specific store procedures.\n         if (driveClassName.contains(this.getDbType().value())) {\n             // Remove the postgresql tag \"_pg\" from the end of the object name and create the stored procedure.\n-            target.grantProcedurePrivileges(getSchemaName(), getObjectName(), group, toUser);\n+            target.grantProcedureAndFunctionPrivileges(getSchemaName(), getObjectName(), group, toUser);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM2NzIzMA==", "bodyText": "I'll change this... thanks", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428367230", "createdAt": "2020-05-20T23:38:56Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/ProcedureDef.java", "diffHunk": "@@ -72,7 +72,7 @@ protected void grantGroupPrivileges(IDatabaseAdapter target, Set<Privilege> grou\n         // Only apply DB Type specific store procedures.\n         if (driveClassName.contains(this.getDbType().value())) {\n             // Remove the postgresql tag \"_pg\" from the end of the object name and create the stored procedure.\n-            target.grantProcedurePrivileges(getSchemaName(), getObjectName(), group, toUser);\n+            target.grantProcedureAndFunctionPrivileges(getSchemaName(), getObjectName(), group, toUser);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MDg2Mw=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0MDg3Mg==", "bodyText": "Fixed in code", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428640872", "createdAt": "2020-05-21T13:10:17Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/ProcedureDef.java", "diffHunk": "@@ -72,7 +72,7 @@ protected void grantGroupPrivileges(IDatabaseAdapter target, Set<Privilege> grou\n         // Only apply DB Type specific store procedures.\n         if (driveClassName.contains(this.getDbType().value())) {\n             // Remove the postgresql tag \"_pg\" from the end of the object name and create the stored procedure.\n-            target.grantProcedurePrivileges(getSchemaName(), getObjectName(), group, toUser);\n+            target.grantProcedureAndFunctionPrivileges(getSchemaName(), getObjectName(), group, toUser);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MDg2Mw=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzcwNjI3OnYy", "diffSide": "RIGHT", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/ProcedureDef.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoyNTowMVrOGYf8TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzoxMDozM1rOGYyK6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MjM0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // Remove the postgresql tag \"_pg\" from the end of the object name and create the stored procedure.\n          \n          \n            \n                        // Remove the postgresql tag \"_pg\" from the end of the object name and execute the grants for the stored procedure.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428342348", "createdAt": "2020-05-20T22:25:01Z", "author": {"login": "lmsurpre"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/ProcedureDef.java", "diffHunk": "@@ -72,7 +72,7 @@ protected void grantGroupPrivileges(IDatabaseAdapter target, Set<Privilege> grou\n         // Only apply DB Type specific store procedures.\n         if (driveClassName.contains(this.getDbType().value())) {\n             // Remove the postgresql tag \"_pg\" from the end of the object name and create the stored procedure.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0MTAwMQ==", "bodyText": "Changed around and cleaned up", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428641001", "createdAt": "2020-05-21T13:10:33Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/ProcedureDef.java", "diffHunk": "@@ -72,7 +72,7 @@ protected void grantGroupPrivileges(IDatabaseAdapter target, Set<Privilege> grou\n         // Only apply DB Type specific store procedures.\n         if (driveClassName.contains(this.getDbType().value())) {\n             // Remove the postgresql tag \"_pg\" from the end of the object name and create the stored procedure.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MjM0OA=="}, "originalCommit": {"oid": "b88da7356848f84d2f45c925215861addfaaf6d5"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODA1MzA0OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirSchemaConstants.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMTozMzoyMVrOGYjUaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzoyOToxN1rOGYyx9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NzY3NQ==", "bodyText": "is it ever used anywhere?", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428397675", "createdAt": "2020-05-21T01:33:21Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirSchemaConstants.java", "diffHunk": "@@ -29,6 +28,7 @@\n \n     // Group of privilege grants used for FHIRUSER access\n     public static final String FHIR_USER_GRANT_GROUP = \"fhiruser\";\n+    public static final String FHIR_BATCH_GRANT_GROUP = \"fhirbatch\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fec138e8cc3ef17080703a7fa3e5c2be322356dd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU5MzY5Mw==", "bodyText": "no but it should be! great find", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428593693", "createdAt": "2020-05-21T11:22:13Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirSchemaConstants.java", "diffHunk": "@@ -29,6 +28,7 @@\n \n     // Group of privilege grants used for FHIRUSER access\n     public static final String FHIR_USER_GRANT_GROUP = \"fhiruser\";\n+    public static final String FHIR_BATCH_GRANT_GROUP = \"fhirbatch\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NzY3NQ=="}, "originalCommit": {"oid": "fec138e8cc3ef17080703a7fa3e5c2be322356dd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU5NDY2MQ==", "bodyText": "Fixed, it's now used", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428594661", "createdAt": "2020-05-21T11:24:48Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirSchemaConstants.java", "diffHunk": "@@ -29,6 +28,7 @@\n \n     // Group of privilege grants used for FHIRUSER access\n     public static final String FHIR_USER_GRANT_GROUP = \"fhiruser\";\n+    public static final String FHIR_BATCH_GRANT_GROUP = \"fhirbatch\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NzY3NQ=="}, "originalCommit": {"oid": "fec138e8cc3ef17080703a7fa3e5c2be322356dd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY1MDk5OA==", "bodyText": "It makes me wonder if we should have a FHIR_OAUTH_GRANT_GROUP as well, but I think this PR already has enough in it.\nWe'll need to remember to update the diagrams with this new role (e.g. in the fhir-persistence-schema/docs and update the guides to indicate that the batch user must be in the fhirbatch role for this feature to work).\nPersonally, I might have saved that for a separate PR, but I'm OK with including it here.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428650998", "createdAt": "2020-05-21T13:29:17Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirSchemaConstants.java", "diffHunk": "@@ -29,6 +28,7 @@\n \n     // Group of privilege grants used for FHIRUSER access\n     public static final String FHIR_USER_GRANT_GROUP = \"fhiruser\";\n+    public static final String FHIR_BATCH_GRANT_GROUP = \"fhirbatch\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NzY3NQ=="}, "originalCommit": {"oid": "fec138e8cc3ef17080703a7fa3e5c2be322356dd"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODA3ODU0OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/DerbyBootstrapper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMTo0OTo1OVrOGYjkMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMTo0OTo1OVrOGYjkMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQwMTcxMw==", "bodyText": "good catch.  i wonder how that second OAUTH_SCHEMANAME has slipped in there...", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428401713", "createdAt": "2020-05-21T01:49:59Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/DerbyBootstrapper.java", "diffHunk": "@@ -172,7 +174,7 @@ public static void bootstrapOauthDb(DataSource ds) throws Exception {\n                 // to determine which updates to apply and to record the new changes as they\n                 // are applied\n                 VersionHistoryService vhs =\n-                        new VersionHistoryService(ADMIN_SCHEMANAME, OAUTH_SCHEMANAME, OAUTH_SCHEMANAME);\n+                        new VersionHistoryService(ADMIN_SCHEMANAME, OAUTH_SCHEMANAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fec138e8cc3ef17080703a7fa3e5c2be322356dd"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTYwNjY4OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/DerbyBootstrapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzoxODo0MlrOGYybwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzoyNTo1OVrOGYyrHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0NTMxMg==", "bodyText": "I thought you may want to check the datasource configuration in server.xml, but this also works. thanks!", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428645312", "createdAt": "2020-05-21T13:18:42Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/DerbyBootstrapper.java", "diffHunk": "@@ -197,31 +199,48 @@ public static void bootstrapOauthDb(DataSource ds) throws Exception {\n      * @throws SQLException\n      */\n     public static void bootstrapBatchDb(DataSource ds) throws SQLException {\n+        // This is specific to boostrapping where we are not suppose to use the derby db, rather a remote db.\n+        boolean isDerby = false;\n         try (Connection c = ds.getConnection()) {\n-            try {\n-                JdbcTarget target = new JdbcTarget(c);\n-                IDatabaseAdapter adapter = new DerbyAdapter(target);\n-\n-                // Set up the version history service first if it doesn't yet exist\n-                CreateVersionHistory.createTableIfNeeded(ADMIN_SCHEMANAME, adapter);\n-\n-                // Current version history for the database. This is used by applyWithHistory\n-                // to determine which updates to apply and to record the new changes as they\n-                // are applied\n-                VersionHistoryService vhs =\n-                        new VersionHistoryService(ADMIN_SCHEMANAME, BATCH_SCHEMANAME);\n-                vhs.setTarget(adapter);\n-                vhs.init();\n+            try (Statement stmt = c.createStatement();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42d7af361135d264ad9be219d36844759405904b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0OTI0NA==", "bodyText": "yes, that was one approach, I considered - I thought this was easiest :)", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428649244", "createdAt": "2020-05-21T13:25:59Z", "author": {"login": "prb112"}, "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/DerbyBootstrapper.java", "diffHunk": "@@ -197,31 +199,48 @@ public static void bootstrapOauthDb(DataSource ds) throws Exception {\n      * @throws SQLException\n      */\n     public static void bootstrapBatchDb(DataSource ds) throws SQLException {\n+        // This is specific to boostrapping where we are not suppose to use the derby db, rather a remote db.\n+        boolean isDerby = false;\n         try (Connection c = ds.getConnection()) {\n-            try {\n-                JdbcTarget target = new JdbcTarget(c);\n-                IDatabaseAdapter adapter = new DerbyAdapter(target);\n-\n-                // Set up the version history service first if it doesn't yet exist\n-                CreateVersionHistory.createTableIfNeeded(ADMIN_SCHEMANAME, adapter);\n-\n-                // Current version history for the database. This is used by applyWithHistory\n-                // to determine which updates to apply and to record the new changes as they\n-                // are applied\n-                VersionHistoryService vhs =\n-                        new VersionHistoryService(ADMIN_SCHEMANAME, BATCH_SCHEMANAME);\n-                vhs.setTarget(adapter);\n-                vhs.init();\n+            try (Statement stmt = c.createStatement();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0NTMxMg=="}, "originalCommit": {"oid": "42d7af361135d264ad9be219d36844759405904b"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTcyNTcxOnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzo1MjoxN1rOGYzmrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMzo1ODowOFrOGYz0-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY2NDQ5NQ==", "bodyText": "I thought to limit the DB differences in the datautil/model layer, so I had added dbtype for the procedures, and then check dbtype before apply the objects.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428664495", "createdAt": "2020-05-21T13:52:17Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -219,7 +219,7 @@ protected void buildCommonModel(PhysicalDataModel pdm, boolean fhirSchema, boole\n             gen.buildSchema(pdm);\n             switch (dbType) {\n             case DB2:\n-                gen.buildDatabaseSpecificArtifactsPostgres(pdm);\n+                gen.buildDatabaseSpecificArtifactsDb2(pdm);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7d3157ba7bf1d9e06a0cb3361119d7102b187ba"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY2NTU5OQ==", "bodyText": "I totally agree with this change, just wanted to share my thoughts. :)", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428665599", "createdAt": "2020-05-21T13:54:05Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -219,7 +219,7 @@ protected void buildCommonModel(PhysicalDataModel pdm, boolean fhirSchema, boole\n             gen.buildSchema(pdm);\n             switch (dbType) {\n             case DB2:\n-                gen.buildDatabaseSpecificArtifactsPostgres(pdm);\n+                gen.buildDatabaseSpecificArtifactsDb2(pdm);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY2NDQ5NQ=="}, "originalCommit": {"oid": "e7d3157ba7bf1d9e06a0cb3361119d7102b187ba"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY2ODE1NQ==", "bodyText": "it worked, I changed it and thought I could get away with doing what you did.  It didn't work so I had to split it out at this layer.", "url": "https://github.com/IBM/FHIR/pull/1123#discussion_r428668155", "createdAt": "2020-05-21T13:58:08Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -219,7 +219,7 @@ protected void buildCommonModel(PhysicalDataModel pdm, boolean fhirSchema, boole\n             gen.buildSchema(pdm);\n             switch (dbType) {\n             case DB2:\n-                gen.buildDatabaseSpecificArtifactsPostgres(pdm);\n+                gen.buildDatabaseSpecificArtifactsDb2(pdm);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY2NDQ5NQ=="}, "originalCommit": {"oid": "e7d3157ba7bf1d9e06a0cb3361119d7102b187ba"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4845, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}