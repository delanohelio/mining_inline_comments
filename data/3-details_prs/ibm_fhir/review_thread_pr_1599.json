{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MjQ4NDY0", "number": 1599, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDoyMzo0NlrOEvfY5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo1MzowNFrOEvhLJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjMyODA2OnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDoyMzo0NlrOHkgSCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDoyMzo0NlrOHkgSCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAzOTY5MQ==", "bodyText": "Since OperationOutcome overrides equals, I think this is OK.  we're not comparing two pointers necessarily.\nConfirming (I also double checked this)", "url": "https://github.com/IBM/FHIR/pull/1599#discussion_r508039691", "createdAt": "2020-10-19T20:23:46Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "diffHunk": "@@ -2330,7 +2330,19 @@ private String getAbsoluteUri(String baseUri, String relativeUri) {\n             if (HTTPReturnPreference.REPRESENTATION.equals(FHIRRequestContext.get().getReturnPreference())) {\n                 bundleEntryBuilder.resource(resource);\n             } else if (HTTPReturnPreference.OPERATION_OUTCOME.equals(FHIRRequestContext.get().getReturnPreference())) {\n-                bundleEntryBuilder.resource(operationOutcome);\n+                OperationOutcome responseEntryOutcome = (OperationOutcome)responseEntry.getResource();\n+                if (responseEntryOutcome != null && !responseEntryOutcome.equals(FHIRUtil.ALL_OK)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f806a3720a0f5ff8420e494afa580cae1a18528"}, "originalPosition": 281}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjMzNTcyOnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDoyNTo1MVrOHkgWsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMzo0NToyOFrOHklf4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA0MDg4MQ==", "bodyText": "slight question here, should ALL_OK still be added along with the warning... Technically it's accepted.", "url": "https://github.com/IBM/FHIR/pull/1599#discussion_r508040881", "createdAt": "2020-10-19T20:25:51Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "diffHunk": "@@ -2330,7 +2330,19 @@ private String getAbsoluteUri(String baseUri, String relativeUri) {\n             if (HTTPReturnPreference.REPRESENTATION.equals(FHIRRequestContext.get().getReturnPreference())) {\n                 bundleEntryBuilder.resource(resource);\n             } else if (HTTPReturnPreference.OPERATION_OUTCOME.equals(FHIRRequestContext.get().getReturnPreference())) {\n-                bundleEntryBuilder.resource(operationOutcome);\n+                OperationOutcome responseEntryOutcome = (OperationOutcome)responseEntry.getResource();\n+                if (responseEntryOutcome != null && !responseEntryOutcome.equals(FHIRUtil.ALL_OK)) {\n+                    if (operationOutcome.equals(FHIRUtil.ALL_OK)) {\n+                        bundleEntryBuilder.resource(responseEntryOutcome);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f806a3720a0f5ff8420e494afa580cae1a18528"}, "originalPosition": 283}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA0ODExNg==", "bodyText": "the way it's currently working in doCreate and doPatchOrUpdate is that the OperationOutcome is generated by the FHIRUtil.buildOperationOutcome(issues) method, passing in any warnings found during the create or update. In that method, the ALL_OK is only added if there are no warnings. So that's the logic I used - will only return the ALL_OK if there are no warnings.", "url": "https://github.com/IBM/FHIR/pull/1599#discussion_r508048116", "createdAt": "2020-10-19T20:39:38Z", "author": {"login": "michaelwschroeder"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "diffHunk": "@@ -2330,7 +2330,19 @@ private String getAbsoluteUri(String baseUri, String relativeUri) {\n             if (HTTPReturnPreference.REPRESENTATION.equals(FHIRRequestContext.get().getReturnPreference())) {\n                 bundleEntryBuilder.resource(resource);\n             } else if (HTTPReturnPreference.OPERATION_OUTCOME.equals(FHIRRequestContext.get().getReturnPreference())) {\n-                bundleEntryBuilder.resource(operationOutcome);\n+                OperationOutcome responseEntryOutcome = (OperationOutcome)responseEntry.getResource();\n+                if (responseEntryOutcome != null && !responseEntryOutcome.equals(FHIRUtil.ALL_OK)) {\n+                    if (operationOutcome.equals(FHIRUtil.ALL_OK)) {\n+                        bundleEntryBuilder.resource(responseEntryOutcome);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA0MDg4MQ=="}, "originalCommit": {"oid": "7f806a3720a0f5ff8420e494afa580cae1a18528"}, "originalPosition": 283}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyNTE1NA==", "bodyText": "Works for me,", "url": "https://github.com/IBM/FHIR/pull/1599#discussion_r508125154", "createdAt": "2020-10-19T23:45:28Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "diffHunk": "@@ -2330,7 +2330,19 @@ private String getAbsoluteUri(String baseUri, String relativeUri) {\n             if (HTTPReturnPreference.REPRESENTATION.equals(FHIRRequestContext.get().getReturnPreference())) {\n                 bundleEntryBuilder.resource(resource);\n             } else if (HTTPReturnPreference.OPERATION_OUTCOME.equals(FHIRRequestContext.get().getReturnPreference())) {\n-                bundleEntryBuilder.resource(operationOutcome);\n+                OperationOutcome responseEntryOutcome = (OperationOutcome)responseEntry.getResource();\n+                if (responseEntryOutcome != null && !responseEntryOutcome.equals(FHIRUtil.ALL_OK)) {\n+                    if (operationOutcome.equals(FHIRUtil.ALL_OK)) {\n+                        bundleEntryBuilder.resource(responseEntryOutcome);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA0MDg4MQ=="}, "originalCommit": {"oid": "7f806a3720a0f5ff8420e494afa580cae1a18528"}, "originalPosition": 283}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjYyMDUzOnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo1MzowNFrOHkjBhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjo0NTo1MVrOHk6hjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4NDYxMw==", "bodyText": "Does it matter whether the request was a batch vs a transaction?\nI know for failed transaction requests we send back a single OperationOutcome (vs. sending one-per-resource in batch)...just want to make sure this logic works for both bundle types.", "url": "https://github.com/IBM/FHIR/pull/1599#discussion_r508084613", "createdAt": "2020-10-19T21:53:04Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "diffHunk": "@@ -2330,7 +2330,19 @@ private String getAbsoluteUri(String baseUri, String relativeUri) {\n             if (HTTPReturnPreference.REPRESENTATION.equals(FHIRRequestContext.get().getReturnPreference())) {\n                 bundleEntryBuilder.resource(resource);\n             } else if (HTTPReturnPreference.OPERATION_OUTCOME.equals(FHIRRequestContext.get().getReturnPreference())) {\n-                bundleEntryBuilder.resource(operationOutcome);\n+                OperationOutcome responseEntryOutcome = (OperationOutcome)responseEntry.getResource();\n+                if (responseEntryOutcome != null && !responseEntryOutcome.equals(FHIRUtil.ALL_OK)) {\n+                    if (operationOutcome.equals(FHIRUtil.ALL_OK)) {\n+                        bundleEntryBuilder.resource(responseEntryOutcome);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f806a3720a0f5ff8420e494afa580cae1a18528"}, "originalPosition": 283}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ2OTY0NA==", "bodyText": "Yes, this works for both types. This method will only get called after a successful call to the persistence layer, so the only change is that on a successful request, the OperationOutcome object may now contain warnings that it didn't contain before. In the case of a failed transaction request during validation, that code path is unchanged - it returns all validation warnings/errors for the failed bundle entry only. In the case of a failed transaction request during create or update, that code path is also unchanged from before. An exception is thrown and a bad request code is returned.", "url": "https://github.com/IBM/FHIR/pull/1599#discussion_r508469644", "createdAt": "2020-10-20T12:45:51Z", "author": {"login": "michaelwschroeder"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "diffHunk": "@@ -2330,7 +2330,19 @@ private String getAbsoluteUri(String baseUri, String relativeUri) {\n             if (HTTPReturnPreference.REPRESENTATION.equals(FHIRRequestContext.get().getReturnPreference())) {\n                 bundleEntryBuilder.resource(resource);\n             } else if (HTTPReturnPreference.OPERATION_OUTCOME.equals(FHIRRequestContext.get().getReturnPreference())) {\n-                bundleEntryBuilder.resource(operationOutcome);\n+                OperationOutcome responseEntryOutcome = (OperationOutcome)responseEntry.getResource();\n+                if (responseEntryOutcome != null && !responseEntryOutcome.equals(FHIRUtil.ALL_OK)) {\n+                    if (operationOutcome.equals(FHIRUtil.ALL_OK)) {\n+                        bundleEntryBuilder.resource(responseEntryOutcome);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4NDYxMw=="}, "originalCommit": {"oid": "7f806a3720a0f5ff8420e494afa580cae1a18528"}, "originalPosition": 283}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4727, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}