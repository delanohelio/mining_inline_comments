{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNjU1MzAz", "number": 1524, "title": "Implicit base not picked up in FHIR Reference search #300", "bodyText": "Signed-off-by: Paul Bastide pbastide@us.ibm.com", "createdAt": "2020-09-24T19:29:45Z", "url": "https://github.com/IBM/FHIR/pull/1524", "merged": true, "mergeCommit": {"oid": "db7ca028543ff49b1c8cca94af3afcd166596c4c"}, "closed": true, "closedAt": "2020-10-05T12:43:25Z", "author": {"login": "prb112"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMGW8WgH2gAyNDkyNjU1MzAzOmY5ZGU3NzYyZGI5NGFkMTI1ZDEyOWIzYTdmYjgxMTkyMDgxNjJhZDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPjJPOAH2gAyNDkyNjU1MzAzOmViMDQ5MzQxOWU1ZmRkNjhlMThkYmY4ZDZkZDFiM2Q3ZjFkN2VjMjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f9de7762db94ad125d129b3a7fb8119208162ad7", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/f9de7762db94ad125d129b3a7fb8119208162ad7", "committedDate": "2020-09-24T19:28:49Z", "message": "Implicit base not picked up in FHIR Reference search #300\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20fb25271adf36ab3ec0a3b75b13b8bc3354fdc0", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/20fb25271adf36ab3ec0a3b75b13b8bc3354fdc0", "committedDate": "2020-09-24T19:39:14Z", "message": "Implicit base not picked up in FHIR Reference search #300\n\n- Added Integration Test\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDE5Mzky", "url": "https://github.com/IBM/FHIR/pull/1524#pullrequestreview-497019392", "createdAt": "2020-09-26T17:26:32Z", "commit": {"oid": "20fb25271adf36ab3ec0a3b75b13b8bc3354fdc0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzoyNjozMlrOHYhjvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzoyNjozMlrOHYhjvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3NzY5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //", "url": "https://github.com/IBM/FHIR/pull/1524#discussion_r495477693", "createdAt": "2020-09-26T17:26:32Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence/src/test/java/com/ibm/fhir/persistence/search/test/AbstractSearchReferenceTest.java", "diffHunk": "@@ -75,13 +82,12 @@ public void testSearchReference_Reference_relative_revinclude() throws Exception\n \n     @Test\n     public void testSearchReference_Reference_absolute() throws Exception {\n-        // TODO if the resource contained an absolute URI which matches the hostname\n-        // where the current test was running, would these work?\n-//        assertSearchReturnsSavedResource(\"Reference-absolute\", \"123\");\n-//        assertSearchReturnsSavedResource(\"Reference-absolute\", \"Patient/123\");\n-//        assertSearchReturnsSavedResource(\"Reference-absolute:Patient\", \"123\");\n-\n         assertSearchReturnsSavedResource(\"Reference-absolute\", \"https://example.com/Patient/123\");\n+        assertSearchReturnsSavedResource(\"Reference-absolute\", \"Patient/123\");\n+        assertSearchReturnsSavedResource(\"Reference-absolute\", \"123\");\n+\n+        //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20fb25271adf36ab3ec0a3b75b13b8bc3354fdc0"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDE5NTEy", "url": "https://github.com/IBM/FHIR/pull/1524#pullrequestreview-497019512", "createdAt": "2020-09-26T17:28:43Z", "commit": {"oid": "20fb25271adf36ab3ec0a3b75b13b8bc3354fdc0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzoyODo0M1rOHYhkaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzoyODo0M1rOHYhkaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3Nzg2Nw==", "bodyText": "probably want to flip these back to INFO", "url": "https://github.com/IBM/FHIR/pull/1524#discussion_r495477867", "createdAt": "2020-09-26T17:28:43Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence/src/test/resources/logging.unitTest.properties", "diffHunk": "@@ -49,5 +49,5 @@ java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter\n ############################################################\n \n # Set this to FINE or higher to output the SQL statements and related debug info\n-com.ibm.fhir.persistence.level = INFO\n-com.ibm.fhir.search.level = INFO\n+com.ibm.fhir.persistence.level = FINE\n+com.ibm.fhir.search.level = FINE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20fb25271adf36ab3ec0a3b75b13b8bc3354fdc0"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e9a05923726013b5755b47176a6b4eb5976d225", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/3e9a05923726013b5755b47176a6b4eb5976d225", "committedDate": "2020-09-29T00:04:28Z", "message": "fix: changed the FHIR Request Context that is set in the default of the tests for SortParameter, the reason is when a refernece is used, we requery it parse the possible values needed in the search\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48f5bb0c93fa5e9f87a5de175390bf934371a578", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/48f5bb0c93fa5e9f87a5de175390bf934371a578", "committedDate": "2020-09-29T00:05:51Z", "message": "fix: turned the logging back to the default of info\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e3e65db1f635c18d4d2782200d7d2cc9c1e44bd", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/9e3e65db1f635c18d4d2782200d7d2cc9c1e44bd", "committedDate": "2020-09-29T00:07:05Z", "message": "fix: formatting in a test\r\n\r\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>\n\nCo-authored-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c673ee7ba72f4986001abc2f219acadcae26d4b", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/6c673ee7ba72f4986001abc2f219acadcae26d4b", "committedDate": "2020-09-29T12:53:47Z", "message": "fix: wrong resource was compared to id\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "638e6fff08f48ac21cdb109e6759a04531fd6b76", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/638e6fff08f48ac21cdb109e6759a04531fd6b76", "committedDate": "2020-09-29T12:54:19Z", "message": "Merge branch 'issue-300a' of github.com:IBM/FHIR into issue-300a"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7219374d26a94d15a38fd634f39f94f96ff2031d", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/7219374d26a94d15a38fd634f39f94f96ff2031d", "committedDate": "2020-09-29T18:41:51Z", "message": "Merge branch 'master' into issue-300a"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d193ceddbeac1a247263e84cb75863452da0a08", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/5d193ceddbeac1a247263e84cb75863452da0a08", "committedDate": "2020-09-29T19:48:42Z", "message": "fix: bulk export missing the incoming url\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NDMzNjk2", "url": "https://github.com/IBM/FHIR/pull/1524#pullrequestreview-499433696", "createdAt": "2020-09-30T13:32:45Z", "commit": {"oid": "5d193ceddbeac1a247263e84cb75863452da0a08"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzozMjo0NVrOHaduvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzozMjo0NVrOHaduvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUxMjEyNA==", "bodyText": "is this related to issue #300 at all, or its just a \"bonus\" ?", "url": "https://github.com/IBM/FHIR/pull/1524#discussion_r497512124", "createdAt": "2020-09-30T13:32:45Z", "author": {"login": "lmsurpre"}, "path": "fhir-bulkimportexport-webapp/src/main/java/META-INF/batch-jobs/FhirBulkExportChunkJob.xml", "diffHunk": "@@ -15,6 +15,7 @@\n                     <property name=\"fhir.search.pagesize\" value=\"#{jobParameters['fhir.search.pagesize']}\"/>\n                     <property name=\"fhir.typeFilters\" value=\"#{jobParameters['fhir.typeFilters']}\"/>\n                     <property name=\"fhir.exportFormat\" value=\"#{jobParameters['fhir.exportFormat']}\"/>\n+                    <property name=\"incomingUrl\" value=\"#{jobParameters['incomingUrl']}\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d193ceddbeac1a247263e84cb75863452da0a08"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NDQxNjk1", "url": "https://github.com/IBM/FHIR/pull/1524#pullrequestreview-499441695", "createdAt": "2020-09-30T13:40:43Z", "commit": {"oid": "5d193ceddbeac1a247263e84cb75863452da0a08"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0MDo0NFrOHaeFeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0MDo0NFrOHaeFeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUxNzk0Ng==", "bodyText": "I don't think this is right.  The value of the extension extracted by Reference-relative is Patient/123, whereas here we are explicitly saying we'd like a Basic resource.", "url": "https://github.com/IBM/FHIR/pull/1524#discussion_r497517946", "createdAt": "2020-09-30T13:40:44Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence/src/test/java/com/ibm/fhir/persistence/search/test/AbstractSearchReferenceTest.java", "diffHunk": "@@ -34,22 +36,27 @@ protected void setTenant() throws Exception {\n         FHIRRequestContext.get().setTenantId(\"reference\");\n     }\n \n+    @BeforeClass\n+    public void createReference() throws FHIRException {\n+        String originalRequestUri = \"https://example.com/Patient/123\";\n+        FHIRRequestContext context = FHIRRequestContext.get();\n+        context.setOriginalRequestUri(originalRequestUri);\n+    }\n+\n     @Test\n     public void testSearchReference_Reference_relative() throws Exception {\n         // Reference by id really only works when the system knows which resource type(s)\n         // can be referenced from a given element.\n-        // TODO does this work if you define the extension in a StructureDefinition\n-        // and declare the allowed types?\n-//        assertSearchReturnsSavedResource(\"Reference-relative\", \"123\");\n-\n         assertSearchReturnsSavedResource(\"Reference-relative\", \"Patient/123\");\n+        assertSearchReturnsSavedResource(\"Reference-relative\", \"123\");\n \n-        // TODO if this matched the hostname that the test was running on, would it work?\n-//        assertSearchReturnsSavedResource(\"Reference-relative\", \"https://example.com/Patient/123\");\n+        assertSearchReturnsSavedResource(\"Reference-relative\", \"https://example.com/Patient/123\");\n \n         assertSearchReturnsSavedResource(\"Reference-relative:Patient\", \"123\");\n-        assertSearchDoesntReturnSavedResource(\"Reference-relative:Basic\", \"123\");\n \n+        // Originally the following test was set to not return a value, as we are now using 123 as a valid value, it\n+        // does return the expected resource\n+        assertSearchReturnsSavedResource(\"Reference-relative:Basic\", \"123\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d193ceddbeac1a247263e84cb75863452da0a08"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NDUwODk0", "url": "https://github.com/IBM/FHIR/pull/1524#pullrequestreview-499450894", "createdAt": "2020-09-30T13:49:31Z", "commit": {"oid": "5d193ceddbeac1a247263e84cb75863452da0a08"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0OTozMVrOHaegSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0OTozMVrOHaegSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUyNDgxMA==", "bodyText": "I think this was an inadvertent find/replace\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Set this to INFO or higher to output the SQL statements and related debug info\n          \n          \n            \n            # Set this to FINE or higher to output the SQL statements and related debug info", "url": "https://github.com/IBM/FHIR/pull/1524#discussion_r497524810", "createdAt": "2020-09-30T13:49:31Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence/src/test/resources/logging.unitTest.properties", "diffHunk": "@@ -48,6 +48,6 @@ java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter\n # Provides extra control for each logger.\n ############################################################\n \n-# Set this to FINE or higher to output the SQL statements and related debug info\n+# Set this to INFO or higher to output the SQL statements and related debug info", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d193ceddbeac1a247263e84cb75863452da0a08"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bad8fd0cf8bd8bcfd304592040d27602126916af", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/bad8fd0cf8bd8bcfd304592040d27602126916af", "committedDate": "2020-09-30T13:50:34Z", "message": "Update fhir-persistence/src/test/resources/logging.unitTest.properties\r\n\r\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>\n\nCo-authored-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NDUzMzY2", "url": "https://github.com/IBM/FHIR/pull/1524#pullrequestreview-499453366", "createdAt": "2020-09-30T13:51:54Z", "commit": {"oid": "5d193ceddbeac1a247263e84cb75863452da0a08"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo1MTo1NFrOHaennw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo1MTo1NFrOHaennw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUyNjY4Nw==", "bodyText": "Given the other find/replace issue, I'm not sure if this change was intentional or not.  I think we should leave it at FINE so that you only need to change one place (below) to enable FINE logging to console.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            java.util.logging.ConsoleHandler.level = INFO\n          \n          \n            \n            java.util.logging.ConsoleHandler.level = FINE", "url": "https://github.com/IBM/FHIR/pull/1524#discussion_r497526687", "createdAt": "2020-09-30T13:51:54Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence/src/test/resources/logging.unitTest.properties", "diffHunk": "@@ -35,7 +35,7 @@ handlers= java.util.logging.ConsoleHandler\n ############################################################\n \n # Limit the messages that are printed to the console\n-java.util.logging.ConsoleHandler.level = FINE\n+java.util.logging.ConsoleHandler.level = INFO", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d193ceddbeac1a247263e84cb75863452da0a08"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NDU3NDUy", "url": "https://github.com/IBM/FHIR/pull/1524#pullrequestreview-499457452", "createdAt": "2020-09-30T13:55:44Z", "commit": {"oid": "bad8fd0cf8bd8bcfd304592040d27602126916af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo1NTo0NFrOHaezkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo1NTo0NFrOHaezkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUyOTc0NA==", "bodyText": "minor formatting suggestion, take or leave:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return \"JobParameter [fhirResourceType=\" + fhirResourceType + \", fhirSearchFromDate=\" + fhirSearchFromDate + \", fhirTenant=\" + fhirTenant\n          \n          \n            \n                            + \", fhirDataStoreId=\" + fhirDataStoreId + \", fhirPatientGroupId=\" + fhirPatientGroupId + \", fhirTypeFilters=\" + fhirTypeFilters\n          \n          \n            \n                            + \", fhirExportFormat=\" + fhirExportFormat + \", inputs=\" + inputs + \", storageDetail=\" + storageDetail + \", incomingUrl=\" + incomingUrl\n          \n          \n            \n                            + \", cosBucketName=\" + cosBucketName + \", cosOperationBucketNameOo=\" + cosOperationBucketNameOo + \", cosLocation=\" + cosLocation\n          \n          \n            \n                            + \", cosEndpointUrl=\" + cosEndpointUrl + \", cosCredentialIbm=\" + cosCredentialIbm + \", cosApiKey=\" + cosApiKey + \", cosSrvInstId=\"\n          \n          \n            \n                            + cosSrvInstId + \", cosBucketPathPrefix=\" + cosBucketPathPrefix + \"]\";\n          \n          \n            \n                    return \"JobParameter [fhirResourceType=\" + fhirResourceType + \n          \n          \n            \n                            \", fhirSearchFromDate=\" + fhirSearchFromDate + \n          \n          \n            \n                            \", fhirTenant=\" + fhirTenant + \n          \n          \n            \n                            \", fhirDataStoreId=\" + fhirDataStoreId + \n          \n          \n            \n                            \", fhirPatientGroupId=\" + fhirPatientGroupId + \n          \n          \n            \n                            \", fhirTypeFilters=\" + fhirTypeFilters + \n          \n          \n            \n                            \", fhirExportFormat=\" + fhirExportFormat + \n          \n          \n            \n                            \", inputs=\" + inputs + \n          \n          \n            \n                            \", storageDetail=\" + storageDetail + \n          \n          \n            \n                            \", incomingUrl=\" + incomingUrl + \n          \n          \n            \n                            \", cosBucketName=\" + cosBucketName + \n          \n          \n            \n                            \", cosOperationBucketNameOo=\" + cosOperationBucketNameOo + \n          \n          \n            \n                            \", cosLocation=\" + cosLocation + \n          \n          \n            \n                            \", cosEndpointUrl=\" + cosEndpointUrl + \n          \n          \n            \n                            \", cosCredentialIbm=\" + cosCredentialIbm + \n          \n          \n            \n                            \", cosApiKey=\" + cosApiKey + \n          \n          \n            \n                            \", cosSrvInstId=\" + cosSrvInstId + \n          \n          \n            \n                            \", cosBucketPathPrefix=\" + cosBucketPathPrefix + \"]\";", "url": "https://github.com/IBM/FHIR/pull/1524#discussion_r497529744", "createdAt": "2020-09-30T13:55:44Z", "author": {"login": "lmsurpre"}, "path": "operation/fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/model/type/JobParameter.java", "diffHunk": "@@ -475,11 +500,11 @@ public static void parse(Builder builder, JsonObject obj) throws FHIROperationEx\n \n     @Override\n     public String toString() {\n-        return \"JobParameter [fhirResourceType=\" + fhirResourceType + \", fhirSearchFromDate=\" + fhirSearchFromDate\n-                + \", fhirTenant=\" + fhirTenant + \", fhirDataStoreId=\" + fhirDataStoreId + \", fhirPatientGroupId=\"\n-                + fhirPatientGroupId + \", fhirTypeFilters=\" + fhirTypeFilters + \", cosBucketName=\" + cosBucketName\n-                + \", cosLocation=\" + cosLocation + \", cosEndpointUrl=\" + cosEndpointUrl + \", cosCredentialIbm=\"\n-                + cosCredentialIbm + \", cosApiKey=\" + cosApiKey + \", cosSrvInstId=\" + cosSrvInstId\n-                + \", cosBucketPathPrefix=\" + cosBucketPathPrefix + \"]\";\n+        return \"JobParameter [fhirResourceType=\" + fhirResourceType + \", fhirSearchFromDate=\" + fhirSearchFromDate + \", fhirTenant=\" + fhirTenant\n+                + \", fhirDataStoreId=\" + fhirDataStoreId + \", fhirPatientGroupId=\" + fhirPatientGroupId + \", fhirTypeFilters=\" + fhirTypeFilters\n+                + \", fhirExportFormat=\" + fhirExportFormat + \", inputs=\" + inputs + \", storageDetail=\" + storageDetail + \", incomingUrl=\" + incomingUrl\n+                + \", cosBucketName=\" + cosBucketName + \", cosOperationBucketNameOo=\" + cosOperationBucketNameOo + \", cosLocation=\" + cosLocation\n+                + \", cosEndpointUrl=\" + cosEndpointUrl + \", cosCredentialIbm=\" + cosCredentialIbm + \", cosApiKey=\" + cosApiKey + \", cosSrvInstId=\"\n+                + cosSrvInstId + \", cosBucketPathPrefix=\" + cosBucketPathPrefix + \"]\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bad8fd0cf8bd8bcfd304592040d27602126916af"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NDU5OTk2", "url": "https://github.com/IBM/FHIR/pull/1524#pullrequestreview-499459996", "createdAt": "2020-09-30T13:58:04Z", "commit": {"oid": "bad8fd0cf8bd8bcfd304592040d27602126916af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo1ODowNVrOHae66A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo1ODowNVrOHae66A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUzMTYyNA==", "bodyText": "minor formatting suggestion\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Response response =\n          \n          \n            \n                            target.path(\"AllergyIntolerance\").queryParam(\"patient\", patientId).request(FHIRMediaType.APPLICATION_FHIR_JSON).header(\"X-FHIR-TENANT-ID\", tenantName).header(\"X-FHIR-DSID\", dataStoreId).get();\n          \n          \n            \n                    Response response = target.path(\"AllergyIntolerance\")\n          \n          \n            \n                            .queryParam(\"patient\", patientId)\n          \n          \n            \n                            .request(FHIRMediaType.APPLICATION_FHIR_JSON)\n          \n          \n            \n                            .header(\"X-FHIR-TENANT-ID\", tenantName)\n          \n          \n            \n                            .header(\"X-FHIR-DSID\", dataStoreId)\n          \n          \n            \n                            .get();", "url": "https://github.com/IBM/FHIR/pull/1524#discussion_r497531624", "createdAt": "2020-09-30T13:58:05Z", "author": {"login": "lmsurpre"}, "path": "fhir-server-test/src/test/java/com/ibm/fhir/server/test/SearchTest.java", "diffHunk": "@@ -1474,4 +1474,22 @@ public void testSearchAllergyIntoleranceWithWildcardMultipleIncludedAndProvenceR\n         }\n     }\n \n-}\n+    @Test(groups = { \"server-search\" }, dependsOnMethods = { \"testCreateAllergyIntolerance\", \"testCreateProvenance\" })\n+    public void testSearchWithRelativePatientId() {\n+        WebTarget target = getWebTarget();\n+        Response response =\n+                target.path(\"AllergyIntolerance\").queryParam(\"patient\", patientId).request(FHIRMediaType.APPLICATION_FHIR_JSON).header(\"X-FHIR-TENANT-ID\", tenantName).header(\"X-FHIR-DSID\", dataStoreId).get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bad8fd0cf8bd8bcfd304592040d27602126916af"}, "originalPosition": 98}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8f9aee55eea00cff803279734e1a98e431fce43", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/b8f9aee55eea00cff803279734e1a98e431fce43", "committedDate": "2020-09-30T14:26:32Z", "message": "Update operation/fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/model/type/JobParameter.java\r\n\r\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>\n\nCo-authored-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b45c3ff845483f9429a2e4ae06cf2ce9f16c072c", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/b45c3ff845483f9429a2e4ae06cf2ce9f16c072c", "committedDate": "2020-09-30T14:26:43Z", "message": "Update fhir-server-test/src/test/java/com/ibm/fhir/server/test/SearchTest.java\r\n\r\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>\n\nCo-authored-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5127bbf02383e01276eea0d0ad7f334a491d817", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/a5127bbf02383e01276eea0d0ad7f334a491d817", "committedDate": "2020-09-30T14:26:56Z", "message": "Update fhir-persistence/src/test/resources/logging.unitTest.properties\r\n\r\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>\n\nCo-authored-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NTA3MzE0", "url": "https://github.com/IBM/FHIR/pull/1524#pullrequestreview-499507314", "createdAt": "2020-09-30T14:42:04Z", "commit": {"oid": "a5127bbf02383e01276eea0d0ad7f334a491d817"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDo0MjowNVrOHahCCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDo0MjowNVrOHahCCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2NjIxNw==", "bodyText": "sorry, missed this one on first pass.  the extra indent here is used here to distinguish this as a continuation of the method signature and not the first line of the method\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String queryParameterValueString) throws FHIRSearchException, Exception {\n          \n          \n            \n                        String queryParameterValueString) throws FHIRSearchException, Exception {", "url": "https://github.com/IBM/FHIR/pull/1524#discussion_r497566217", "createdAt": "2020-09-30T14:42:05Z", "author": {"login": "lmsurpre"}, "path": "fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java", "diffHunk": "@@ -804,13 +805,13 @@ public static FHIRSearchContext parseQueryParameters(Class<?> resourceType,\n      * Common logic from handling a single queryParameterValueString based on its type\n      */\n     private static List<QueryParameterValue> processQueryParameterValueString(Class<?> resourceType, SearchParameter searchParameter, Modifier modifier,\n-            String queryParameterValueString) throws FHIRSearchException, Exception {\n+        String queryParameterValueString) throws FHIRSearchException, Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5127bbf02383e01276eea0d0ad7f334a491d817"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NTA4MjQ3", "url": "https://github.com/IBM/FHIR/pull/1524#pullrequestreview-499508247", "createdAt": "2020-09-30T14:42:56Z", "commit": {"oid": "a5127bbf02383e01276eea0d0ad7f334a491d817"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDo0Mjo1NlrOHahEwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDo0Mjo1NlrOHahEwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2NjkxMw==", "bodyText": "the extra indent here is used to distinguish this as a continuation of the method signature and not the first line of the method\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<Type> compTypes, String queryParameterValuesString) throws FHIRSearchException {\n          \n          \n            \n                        List<Type> compTypes, String queryParameterValuesString) throws FHIRSearchException {", "url": "https://github.com/IBM/FHIR/pull/1524#discussion_r497566913", "createdAt": "2020-09-30T14:42:56Z", "author": {"login": "lmsurpre"}, "path": "fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java", "diffHunk": "@@ -823,16 +824,16 @@ public static FHIRSearchContext parseQueryParameters(Class<?> resourceType,\n                     SearchParameter referencedParam = getSearchParameter(resourceType, component.getDefinition());\n                     compTypes.add(Type.fromValue(referencedParam.getType().getValue()));\n                 }\n-                queryParameterValues = parseCompositeQueryParameterValuesString(parameterCode, compTypes, queryParameterValueString);\n+                queryParameterValues = parseCompositeQueryParameterValuesString(searchParameter, parameterCode, compTypes, queryParameterValueString);\n             } else {\n-                queryParameterValues = parseQueryParameterValuesString(type, queryParameterValueString);\n+                queryParameterValues = parseQueryParameterValuesString(searchParameter, type, queryParameterValueString, null);\n             }\n         }\n         return queryParameterValues;\n     }\n \n-    private static List<QueryParameterValue> parseCompositeQueryParameterValuesString(String compositeParamCode, List<Type> compTypes,\n-            String queryParameterValuesString) throws FHIRSearchException {\n+    private static List<QueryParameterValue> parseCompositeQueryParameterValuesString(SearchParameter searchParameter, String compositeParamCode,\n+        List<Type> compTypes, String queryParameterValuesString) throws FHIRSearchException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5127bbf02383e01276eea0d0ad7f334a491d817"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NTA5MDM1", "url": "https://github.com/IBM/FHIR/pull/1524#pullrequestreview-499509035", "createdAt": "2020-09-30T14:43:41Z", "commit": {"oid": "a5127bbf02383e01276eea0d0ad7f334a491d817"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDo0Mzo0MVrOHahHBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDo0Mzo0MVrOHahHBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2NzQ5Mw==", "bodyText": "the extra indent here is used to distinguish this as a continuation of the method signature and not the first line of the method\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String queryParameterValuesString, String modifierResourceTypeName) throws FHIRSearchException {\n          \n          \n            \n                        String queryParameterValuesString, String modifierResourceTypeName) throws FHIRSearchException {", "url": "https://github.com/IBM/FHIR/pull/1524#discussion_r497567493", "createdAt": "2020-09-30T14:43:41Z", "author": {"login": "lmsurpre"}, "path": "fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java", "diffHunk": "@@ -861,12 +862,13 @@ public static FHIRSearchContext parseQueryParameters(Class<?> resourceType,\n         return parameterValues;\n     }\n \n-    private static List<QueryParameterValue> parseQueryParameterValuesString(Type type,\n-            String queryParameterValuesString) throws FHIRSearchException {\n+    private static List<QueryParameterValue> parseQueryParameterValuesString(SearchParameter searchParameter, Type type,\n+        String queryParameterValuesString, String modifierResourceTypeName) throws FHIRSearchException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5127bbf02383e01276eea0d0ad7f334a491d817"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3229b86a2ef138b5013e9699d640d257b4f72f1", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/c3229b86a2ef138b5013e9699d640d257b4f72f1", "committedDate": "2020-10-01T17:13:43Z", "message": "fix: reverted a change to relative test and support for modifier types\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4ba6538a30300038f700a637a0dad7b0ecc6598", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/b4ba6538a30300038f700a637a0dad7b0ecc6598", "committedDate": "2020-10-01T17:14:11Z", "message": "Merge branch 'issue-300a' of github.com:IBM/FHIR into issue-300a"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1e37d0dd8a9ee851bdb662b207be847ab9ccbc5", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/d1e37d0dd8a9ee851bdb662b207be847ab9ccbc5", "committedDate": "2020-10-01T17:18:59Z", "message": "Update fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java\r\n\r\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>\n\nCo-authored-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxOTkxNDcy", "url": "https://github.com/IBM/FHIR/pull/1524#pullrequestreview-501991472", "createdAt": "2020-10-05T12:12:21Z", "commit": {"oid": "d1e37d0dd8a9ee851bdb662b207be847ab9ccbc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMjoxMjoyMVrOHcaNug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMjoxMjoyMVrOHcaNug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU1MTY3NA==", "bodyText": "what does it do for parameters that can point at multiple different types?", "url": "https://github.com/IBM/FHIR/pull/1524#discussion_r499551674", "createdAt": "2020-10-05T12:12:21Z", "author": {"login": "lmsurpre"}, "path": "fhir-search/src/test/java/com/ibm/fhir/search/reference/ReferenceTypeTest.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package com.ibm.fhir.search.reference;\n+\n+import static org.testng.Assert.assertEquals;\n+import static org.testng.Assert.assertTrue;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.testng.annotations.Test;\n+\n+import com.ibm.fhir.search.parameters.QueryParameterValue;\n+import com.ibm.fhir.search.reference.value.CanonicalUrlHandlerImpl;\n+import com.ibm.fhir.search.reference.value.IdHandlerImpl;\n+import com.ibm.fhir.search.reference.value.TypeIdHandlerImpl;\n+import com.ibm.fhir.search.reference.value.UrlHandlerImpl;\n+\n+public class ReferenceTypeTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1e37d0dd8a9ee851bdb662b207be847ab9ccbc5"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxOTk4NzAx", "url": "https://github.com/IBM/FHIR/pull/1524#pullrequestreview-501998701", "createdAt": "2020-10-05T12:22:06Z", "commit": {"oid": "d1e37d0dd8a9ee851bdb662b207be847ab9ccbc5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb0493419e5fdd68e18dbf8d6dd1b3d7f1d7ec20", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/eb0493419e5fdd68e18dbf8d6dd1b3d7f1d7ec20", "committedDate": "2020-10-05T12:42:52Z", "message": "doc: update the conformance document to indicate how references are treated\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 848, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}