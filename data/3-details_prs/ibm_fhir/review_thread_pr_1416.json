{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MTk0NTYx", "number": 1416, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoyMjo1MlrOEZcueQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjozMDozMVrOEZc5sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTIwNTA1OnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/IssueTypeToHttpStatusMapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoyMjo1MlrOHCQ6KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjo1NzoyNlrOHCSrhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzNjIzMw==", "bodyText": "this is our internal Status... not HTTPStatus (removed my prior comment)", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472136233", "createdAt": "2020-08-18T12:22:52Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/IssueTypeToHttpStatusMapper.java", "diffHunk": "@@ -54,16 +54,16 @@\n                             FHIRUtil.getExtensionStringValue(code, EXTENSION_URL_HTTP_FAILED_PRECONDITION) != null) {\n                         return Status.PRECONDITION_FAILED;\n                     } else if (issueType == IssueType.ValueSet.NOT_SUPPORTED &&\n-                            \"interaction\".equals(FHIRUtil.getExtensionStringValue(code, EXTENSION_URL_NOT_SUPPORTED_DETAIL))) {\n-                        return Status.BAD_REQUEST;\n+                            \"resource\".equals(FHIRUtil.getExtensionStringValue(code, EXTENSION_URL_NOT_SUPPORTED_DETAIL))) {\n+                        return Status.NOT_FOUND;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE2NTI1Mg==", "bodyText": "this class maps IssueTypes to HTTP statuses, but in some cases IssueTypes can't be mapped cleanly.  so I invented this approach of adding an extension to the IssueType which carries the extra information needed to map it into a proper HTTPStatus.\nin this case, the extra detail is about \"what isn't supported\" for the NOT_SUPPORTED value.  it isn't a perfect semantic fit with 404, but in practice we only set this detail extension to \"resource\" in cases where we receive a request to a [base]/ResourceType endpoint for a resource type that isn't supported...hence the mapping to 404 instead of 400 for this case.", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472165252", "createdAt": "2020-08-18T12:57:26Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/IssueTypeToHttpStatusMapper.java", "diffHunk": "@@ -54,16 +54,16 @@\n                             FHIRUtil.getExtensionStringValue(code, EXTENSION_URL_HTTP_FAILED_PRECONDITION) != null) {\n                         return Status.PRECONDITION_FAILED;\n                     } else if (issueType == IssueType.ValueSet.NOT_SUPPORTED &&\n-                            \"interaction\".equals(FHIRUtil.getExtensionStringValue(code, EXTENSION_URL_NOT_SUPPORTED_DETAIL))) {\n-                        return Status.BAD_REQUEST;\n+                            \"resource\".equals(FHIRUtil.getExtensionStringValue(code, EXTENSION_URL_NOT_SUPPORTED_DETAIL))) {\n+                        return Status.NOT_FOUND;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzNjIzMw=="}, "originalCommit": {"oid": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTIxMTIxOnYy", "diffSide": "RIGHT", "path": "fhir-search/src/main/java/com/ibm/fhir/search/parameters/QueryParameter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoyNDozOVrOHCQ91g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoyNDozOVrOHCQ91g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzNzE3NA==", "bodyText": "Copyright", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472137174", "createdAt": "2020-08-18T12:24:39Z", "author": {"login": "prb112"}, "path": "fhir-search/src/main/java/com/ibm/fhir/search/parameters/QueryParameter.java", "diffHunk": "@@ -19,7 +19,7 @@\n import com.ibm.fhir.search.SearchConstants.Type;\n \n /**\n- * general type of parameter. \n+ * general type of parameter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTIyMTg2OnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoyNzoxNVrOHCRD8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoyNzoxNVrOHCRD8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzODczNg==", "bodyText": "there is a high amount of duplication, just a small suggestion to push it down into the method buildUnsupportedResourceTypeException and make it a void method.", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472138736", "createdAt": "2020-08-18T12:27:15Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/FHIRRestHelper.java", "diffHunk": "@@ -913,7 +914,7 @@ public Bundle doSearch(String type, String compartment, String compartmentId,\n             // Check to see if it's supported, else, throw a bad request.\n             // If this is removed, it'll result in nullpointer when processing the request\n             if (!ModelSupport.isResourceType(type)) {\n-                throw buildUnsupportedResourceTypeException(type, IssueType.NOT_SUPPORTED);\n+                throw buildUnsupportedResourceTypeException(type);\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTIyNjA5OnYy", "diffSide": "LEFT", "path": "fhir-persistence/src/test/java/com/ibm/fhir/persistence/search/test/AbstractSearchURITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoyODoyOVrOHCRGfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoyODoyOVrOHCRGfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzOTM5MQ==", "bodyText": "Copyright", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472139391", "createdAt": "2020-08-18T12:28:29Z", "author": {"login": "prb112"}, "path": "fhir-persistence/src/test/java/com/ibm/fhir/persistence/search/test/AbstractSearchURITest.java", "diffHunk": "@@ -21,14 +21,16 @@\n \n /**\n  * <a href=\"https://hl7.org/fhir/r4/search.html#uri\">FHIR Specification: Search - uri</a>\n- * ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTIyODQ5OnYy", "diffSide": "RIGHT", "path": "fhir-persistence/src/test/java/com/ibm/fhir/persistence/search/test/AbstractSearchStringTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoyOToxNFrOHCRICg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoyOToxNFrOHCRICg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzOTc4Ng==", "bodyText": "Copyright", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472139786", "createdAt": "2020-08-18T12:29:14Z", "author": {"login": "prb112"}, "path": "fhir-persistence/src/test/java/com/ibm/fhir/persistence/search/test/AbstractSearchStringTest.java", "diffHunk": "@@ -26,103 +26,99 @@\n  */\n public abstract class AbstractSearchStringTest extends AbstractPLSearchTest {\n \n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTIyOTc1OnYy", "diffSide": "RIGHT", "path": "fhir-persistence/src/test/java/com/ibm/fhir/persistence/search/test/AbstractSearchReferenceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoyOTozM1rOHCRIww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjoyOTozM1rOHCRIww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEzOTk3MQ==", "bodyText": "Copyright", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472139971", "createdAt": "2020-08-18T12:29:33Z", "author": {"login": "prb112"}, "path": "fhir-persistence/src/test/java/com/ibm/fhir/persistence/search/test/AbstractSearchReferenceTest.java", "diffHunk": "@@ -24,30 +24,32 @@\n  */\n public abstract class AbstractSearchReferenceTest extends AbstractPLSearchTest {\n \n+    @Override\n     protected Basic getBasicResource() throws Exception {\n         return TestUtil.readExampleResource(\"json/ibm/basic/BasicReference.json\");\n     }\n \n+    @Override\n     protected void setTenant() throws Exception {\n         FHIRRequestContext.get().setTenantId(\"reference\");\n     }\n \n     @Test\n     public void testSearchReference_Reference_relative() throws Exception {\n-        // Reference by id really only works when the system knows which resource type(s) \n+        // Reference by id really only works when the system knows which resource type(s)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTIzMzc4OnYy", "diffSide": "RIGHT", "path": "fhir-persistence/src/test/java/com/ibm/fhir/persistence/search/test/AbstractSearchDateTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjozMDozMVrOHCRLHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjozMDozMVrOHCRLHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0MDU3Mg==", "bodyText": "Copyright", "url": "https://github.com/IBM/FHIR/pull/1416#discussion_r472140572", "createdAt": "2020-08-18T12:30:31Z", "author": {"login": "prb112"}, "path": "fhir-persistence/src/test/java/com/ibm/fhir/persistence/search/test/AbstractSearchDateTest.java", "diffHunk": "@@ -26,22 +26,24 @@\n  * - Date</a> Tests\n  */\n public abstract class AbstractSearchDateTest extends AbstractPLSearchTest {\n+    @Override\n     protected Basic getBasicResource() throws Exception {\n         return TestUtil.readExampleResource(\"json/ibm/basic/BasicDate.json\");\n     }\n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12a1dfb4ac98b15cc053de2fd9455832f8326b0e"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4793, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}