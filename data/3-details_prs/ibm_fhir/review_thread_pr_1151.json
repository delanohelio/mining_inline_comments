{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMjg1ODI3", "number": 1151, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0MToxMFrOD_u6hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0MToxMFrOD_u6hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTU1NTI2OnYy", "diffSide": "RIGHT", "path": "fhir-term/src/main/java/com/ibm/fhir/term/util/ConceptMapSupport.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0MToxMFrOGakcIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0MjoxMFrOGakfDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxMzE4NA==", "bodyText": "just noticing this now... any reason to combine 34,35", "url": "https://github.com/IBM/FHIR/pull/1151#discussion_r430513184", "createdAt": "2020-05-26T15:41:10Z", "author": {"login": "prb112"}, "path": "fhir-term/src/main/java/com/ibm/fhir/term/util/ConceptMapSupport.java", "diffHunk": "@@ -11,30 +11,68 @@\n import java.util.stream.Collectors;\n \n import com.ibm.fhir.model.resource.ConceptMap;\n-import com.ibm.fhir.model.resource.ConceptMap.Group.Element.Target;\n+import com.ibm.fhir.model.resource.ConceptMap.Group;\n+import com.ibm.fhir.model.resource.ConceptMap.Group.Element;\n import com.ibm.fhir.model.type.Coding;\n+import com.ibm.fhir.model.type.String;\n+import com.ibm.fhir.model.type.Uri;\n import com.ibm.fhir.registry.FHIRRegistry;\n+import com.ibm.fhir.term.spi.Match;\n \n public final class ConceptMapSupport {\n     private ConceptMapSupport() { }\n \n-    public static List<Target> translate(ConceptMap conceptMap, Coding coding) {\n+    public static List<Match> translate(ConceptMap conceptMap, Coding coding) {\n         return conceptMap.getGroup().stream()\n                 .filter(group -> group.getSource() != null)\n                 .filter(group -> group.getSource().equals(coding.getSystem()))\n                 .filter(group -> group.getSourceVersion() == null ||\n                     coding.getVersion() == null ||\n                     group.getSourceVersion().equals(coding.getVersion()))\n-                .map(group -> group.getElement())\n-                .flatMap(List::stream)\n-                .filter(element -> element.getCode() != null)\n-                .filter(element -> element.getCode().equals(coding.getCode()))\n-                .map(element -> element.getTarget())\n+                .map(group -> group.toBuilder()\n+                    .element(group.getElement().stream()\n+                        .filter(element -> element.getCode() != null)\n+                        .filter(element -> element.getCode().equals(coding.getCode()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65769e46fecb69e1df123e54573a0204d204a718"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxMzkzMw==", "bodyText": "I keep them separate for readability", "url": "https://github.com/IBM/FHIR/pull/1151#discussion_r430513933", "createdAt": "2020-05-26T15:42:10Z", "author": {"login": "JohnTimm"}, "path": "fhir-term/src/main/java/com/ibm/fhir/term/util/ConceptMapSupport.java", "diffHunk": "@@ -11,30 +11,68 @@\n import java.util.stream.Collectors;\n \n import com.ibm.fhir.model.resource.ConceptMap;\n-import com.ibm.fhir.model.resource.ConceptMap.Group.Element.Target;\n+import com.ibm.fhir.model.resource.ConceptMap.Group;\n+import com.ibm.fhir.model.resource.ConceptMap.Group.Element;\n import com.ibm.fhir.model.type.Coding;\n+import com.ibm.fhir.model.type.String;\n+import com.ibm.fhir.model.type.Uri;\n import com.ibm.fhir.registry.FHIRRegistry;\n+import com.ibm.fhir.term.spi.Match;\n \n public final class ConceptMapSupport {\n     private ConceptMapSupport() { }\n \n-    public static List<Target> translate(ConceptMap conceptMap, Coding coding) {\n+    public static List<Match> translate(ConceptMap conceptMap, Coding coding) {\n         return conceptMap.getGroup().stream()\n                 .filter(group -> group.getSource() != null)\n                 .filter(group -> group.getSource().equals(coding.getSystem()))\n                 .filter(group -> group.getSourceVersion() == null ||\n                     coding.getVersion() == null ||\n                     group.getSourceVersion().equals(coding.getVersion()))\n-                .map(group -> group.getElement())\n-                .flatMap(List::stream)\n-                .filter(element -> element.getCode() != null)\n-                .filter(element -> element.getCode().equals(coding.getCode()))\n-                .map(element -> element.getTarget())\n+                .map(group -> group.toBuilder()\n+                    .element(group.getElement().stream()\n+                        .filter(element -> element.getCode() != null)\n+                        .filter(element -> element.getCode().equals(coding.getCode()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxMzE4NA=="}, "originalCommit": {"oid": "65769e46fecb69e1df123e54573a0204d204a718"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4853, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}