{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NTgwNTY0", "number": 556, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjowOToxMlrODWA5tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNzoxNjo0MlrODWnMZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NDEwMDM5OnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjowOToxMlrOFahzMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxODozODowOFrOFalpSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM2MTA3Mg==", "bodyText": "We can probably use DateTimeHandler from Search's pattern and use a parseBest\nSnippet\nprivate static final DateTimeFormatter DATE_TIME_PARSER_FORMATTER =\n            new DateTimeFormatterBuilder()\n                    .appendPattern(\"yyyy\")\n                    .optionalStart()\n                        .appendLiteral('-')\n                        .appendPattern(\"MM\")\n                        .optionalStart()\n                            .appendLiteral('-')\n                            .appendPattern(\"dd\")\n                            .optionalStart()\n                                .appendLiteral(\"T\")\n                                .optionalStart()\n                                .appendPattern(\"HH\")\n                                .optionalStart()\n                                    .appendLiteral(':')\n                                    .appendPattern(\"mm\")\n                                    .optionalStart()\n                                        .appendLiteral(':')\n                                        .appendPattern(\"ss\")\n                                        .optionalStart()\n                                            .appendFraction(ChronoField.MICRO_OF_SECOND, 0, 6, true)\n                                        .optionalEnd()\n                                    .optionalEnd()\n                                .optionalEnd()\n                                .optionalStart()\n                                    .appendPattern(\"XXX\")\n                                .optionalEnd()\n                            .optionalEnd()\n                            .optionalEnd()\n                        .optionalEnd()\n                    .optionalEnd()\n                    .toFormatter();\n    // @formatter:on\n\nthen one call to\nreturn DATE_TIME_PARSER_FORMATTER.withResolverStyle(ResolverStyle.SMART).parseBest(value,\n                    ZonedDateTime::from, LocalDateTime::from, LocalDate::from, YearMonth::from, Year::from);", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363361072", "createdAt": "2020-01-06T16:09:12Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -600,6 +618,30 @@ public Response conditionalDelete(@PathParam(\"type\") String type) throws Excepti\n             log.exiting(this.getClass().getName(), \"delete(String,String)\");\n         }\n     }\n+    \n+    \n+    private long parseIfModifiedSince() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4d02a30d5e2a3030a4ed2c0b74aacf32a892cbe"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM4NDE4Ng==", "bodyText": "en... seems the new pattern is much more complicated then using SimpleDateFormat, but let me try to change to use it ... :)", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363384186", "createdAt": "2020-01-06T16:58:32Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -600,6 +618,30 @@ public Response conditionalDelete(@PathParam(\"type\") String type) throws Excepti\n             log.exiting(this.getClass().getName(), \"delete(String,String)\");\n         }\n     }\n+    \n+    \n+    private long parseIfModifiedSince() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM2MTA3Mg=="}, "originalCommit": {"oid": "d4d02a30d5e2a3030a4ed2c0b74aacf32a892cbe"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQxOTI0MA==", "bodyText": "just noticed that it's mainly used for formater with optional elements, but in my case, we need 2 different formaters with the required different elements. so I would prefer to keep current implementation.", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363419240", "createdAt": "2020-01-06T18:26:33Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -600,6 +618,30 @@ public Response conditionalDelete(@PathParam(\"type\") String type) throws Excepti\n             log.exiting(this.getClass().getName(), \"delete(String,String)\");\n         }\n     }\n+    \n+    \n+    private long parseIfModifiedSince() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM2MTA3Mg=="}, "originalCommit": {"oid": "d4d02a30d5e2a3030a4ed2c0b74aacf32a892cbe"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQyNDA3Mg==", "bodyText": "I don't think you need two formatters.  I think breaking this discussion out and talking with John may be best", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363424072", "createdAt": "2020-01-06T18:38:08Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -600,6 +618,30 @@ public Response conditionalDelete(@PathParam(\"type\") String type) throws Excepti\n             log.exiting(this.getClass().getName(), \"delete(String,String)\");\n         }\n     }\n+    \n+    \n+    private long parseIfModifiedSince() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM2MTA3Mg=="}, "originalCommit": {"oid": "d4d02a30d5e2a3030a4ed2c0b74aacf32a892cbe"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTE4ODc2OnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMzo0Nzo0MVrOFaseFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNDozNDo1MFrOFa7GNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNTg5Mg==", "bodyText": "Maybe add a comment indicating what it supports? and format?", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363535892", "createdAt": "2020-01-06T23:47:41Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -162,6 +172,17 @@\n     private static final String LOCAL_REF_PREFIX = \"urn:\";\n     private static final String HEADERNAME_IF_NONE_EXIST = \"If-None-Exist\";\n     private static final String HEADERNAME_PREFER = \"Prefer\";\n+    private static final String HEADERNAME_IF_MODIFIED_SINCE = \"If-Modified-Since\";\n+    private static final String HEADERNAME_IF_NONE_MATCH = \"If-None-Match\";\n+\n+    public static final DateTimeFormatter PARSER_FORMATTER = new DateTimeFormatterBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb89226e632a08bf6f13965956d72ff07ba43b51"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2OTI3MA==", "bodyText": "good point, will add comment", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363769270", "createdAt": "2020-01-07T14:21:38Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -162,6 +172,17 @@\n     private static final String LOCAL_REF_PREFIX = \"urn:\";\n     private static final String HEADERNAME_IF_NONE_EXIST = \"If-None-Exist\";\n     private static final String HEADERNAME_PREFER = \"Prefer\";\n+    private static final String HEADERNAME_IF_MODIFIED_SINCE = \"If-Modified-Since\";\n+    private static final String HEADERNAME_IF_NONE_MATCH = \"If-None-Match\";\n+\n+    public static final DateTimeFormatter PARSER_FORMATTER = new DateTimeFormatterBuilder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNTg5Mg=="}, "originalCommit": {"oid": "cb89226e632a08bf6f13965956d72ff07ba43b51"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc3NTU0MA==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363775540", "createdAt": "2020-01-07T14:34:50Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -162,6 +172,17 @@\n     private static final String LOCAL_REF_PREFIX = \"urn:\";\n     private static final String HEADERNAME_IF_NONE_EXIST = \"If-None-Exist\";\n     private static final String HEADERNAME_PREFER = \"Prefer\";\n+    private static final String HEADERNAME_IF_MODIFIED_SINCE = \"If-Modified-Since\";\n+    private static final String HEADERNAME_IF_NONE_MATCH = \"If-None-Match\";\n+\n+    public static final DateTimeFormatter PARSER_FORMATTER = new DateTimeFormatterBuilder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNTg5Mg=="}, "originalCommit": {"oid": "cb89226e632a08bf6f13965956d72ff07ba43b51"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTE4OTQ5OnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMzo0ODoxNlrOFaseiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNjoxNzo1NlrOFa-T0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNjAwOQ==", "bodyText": "so it can be a long? or timestamp?", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363536009", "createdAt": "2020-01-06T23:48:16Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -600,6 +621,28 @@ public Response conditionalDelete(@PathParam(\"type\") String type) throws Excepti\n             log.exiting(this.getClass().getName(), \"delete(String,String)\");\n         }\n     }\n+    \n+    \n+    private long parseIfModifiedSince() {\n+        long modifiedSince = -1;\n+        try {\n+            // Handle RFC_1123 and RFC_850 formats first. \n+            // e.g \"Sun, 06 Nov 1994 08:49:37 GMT\", \"Sunday, 06-Nov-94 08:49:37 GMT\", \"Sunday, 06-Nov-1994 08:49:37 GMT\"\n+            // If 2 digits year is used, then means 1940 to 2039.\n+            modifiedSince = httpServletRequest.getDateHeader(HEADERNAME_IF_MODIFIED_SINCE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb89226e632a08bf6f13965956d72ff07ba43b51"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2ODkxNA==", "bodyText": "long, the getDateHeader function returns EpochMilli. will add comment to clarify this.", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363768914", "createdAt": "2020-01-07T14:20:56Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -600,6 +621,28 @@ public Response conditionalDelete(@PathParam(\"type\") String type) throws Excepti\n             log.exiting(this.getClass().getName(), \"delete(String,String)\");\n         }\n     }\n+    \n+    \n+    private long parseIfModifiedSince() {\n+        long modifiedSince = -1;\n+        try {\n+            // Handle RFC_1123 and RFC_850 formats first. \n+            // e.g \"Sun, 06 Nov 1994 08:49:37 GMT\", \"Sunday, 06-Nov-94 08:49:37 GMT\", \"Sunday, 06-Nov-1994 08:49:37 GMT\"\n+            // If 2 digits year is used, then means 1940 to 2039.\n+            modifiedSince = httpServletRequest.getDateHeader(HEADERNAME_IF_MODIFIED_SINCE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNjAwOQ=="}, "originalCommit": {"oid": "cb89226e632a08bf6f13965956d72ff07ba43b51"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc3NDY2MA==", "bodyText": "I'm not sure that this pattern is exactly what we want. You have two optional segments and, technically, they could both be present and it would still work.", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363774660", "createdAt": "2020-01-07T14:33:04Z", "author": {"login": "JohnTimm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -600,6 +621,28 @@ public Response conditionalDelete(@PathParam(\"type\") String type) throws Excepti\n             log.exiting(this.getClass().getName(), \"delete(String,String)\");\n         }\n     }\n+    \n+    \n+    private long parseIfModifiedSince() {\n+        long modifiedSince = -1;\n+        try {\n+            // Handle RFC_1123 and RFC_850 formats first. \n+            // e.g \"Sun, 06 Nov 1994 08:49:37 GMT\", \"Sunday, 06-Nov-94 08:49:37 GMT\", \"Sunday, 06-Nov-1994 08:49:37 GMT\"\n+            // If 2 digits year is used, then means 1940 to 2039.\n+            modifiedSince = httpServletRequest.getDateHeader(HEADERNAME_IF_MODIFIED_SINCE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNjAwOQ=="}, "originalCommit": {"oid": "cb89226e632a08bf6f13965956d72ff07ba43b51"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc3NTQ2Mw==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363775463", "createdAt": "2020-01-07T14:34:41Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -600,6 +621,28 @@ public Response conditionalDelete(@PathParam(\"type\") String type) throws Excepti\n             log.exiting(this.getClass().getName(), \"delete(String,String)\");\n         }\n     }\n+    \n+    \n+    private long parseIfModifiedSince() {\n+        long modifiedSince = -1;\n+        try {\n+            // Handle RFC_1123 and RFC_850 formats first. \n+            // e.g \"Sun, 06 Nov 1994 08:49:37 GMT\", \"Sunday, 06-Nov-94 08:49:37 GMT\", \"Sunday, 06-Nov-1994 08:49:37 GMT\"\n+            // If 2 digits year is used, then means 1940 to 2039.\n+            modifiedSince = httpServletRequest.getDateHeader(HEADERNAME_IF_MODIFIED_SINCE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNjAwOQ=="}, "originalCommit": {"oid": "cb89226e632a08bf6f13965956d72ff07ba43b51"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc4NTQzMA==", "bodyText": "we want to support 2 different patterns with only one formatter, this is the only way so far which works in my tests. I don't need they work together, just need it works if any of them presents.  :( .   PARSER_FORMATTER.parse(httpHeaders.getHeaderString(HEADERNAME_IF_MODIFIED_SINCE), LocalDateTime::from).     and I require to parse as LocalDateTime, let me add test codes to find out what happens if both present, I would guess it will throw exception.", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363785430", "createdAt": "2020-01-07T14:54:40Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -600,6 +621,28 @@ public Response conditionalDelete(@PathParam(\"type\") String type) throws Excepti\n             log.exiting(this.getClass().getName(), \"delete(String,String)\");\n         }\n     }\n+    \n+    \n+    private long parseIfModifiedSince() {\n+        long modifiedSince = -1;\n+        try {\n+            // Handle RFC_1123 and RFC_850 formats first. \n+            // e.g \"Sun, 06 Nov 1994 08:49:37 GMT\", \"Sunday, 06-Nov-94 08:49:37 GMT\", \"Sunday, 06-Nov-1994 08:49:37 GMT\"\n+            // If 2 digits year is used, then means 1940 to 2039.\n+            modifiedSince = httpServletRequest.getDateHeader(HEADERNAME_IF_MODIFIED_SINCE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNjAwOQ=="}, "originalCommit": {"oid": "cb89226e632a08bf6f13965956d72ff07ba43b51"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgyODE3Nw==", "bodyText": "added more test codes to cover negative cases.", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363828177", "createdAt": "2020-01-07T16:17:56Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -600,6 +621,28 @@ public Response conditionalDelete(@PathParam(\"type\") String type) throws Excepti\n             log.exiting(this.getClass().getName(), \"delete(String,String)\");\n         }\n     }\n+    \n+    \n+    private long parseIfModifiedSince() {\n+        long modifiedSince = -1;\n+        try {\n+            // Handle RFC_1123 and RFC_850 formats first. \n+            // e.g \"Sun, 06 Nov 1994 08:49:37 GMT\", \"Sunday, 06-Nov-94 08:49:37 GMT\", \"Sunday, 06-Nov-1994 08:49:37 GMT\"\n+            // If 2 digits year is used, then means 1940 to 2039.\n+            modifiedSince = httpServletRequest.getDateHeader(HEADERNAME_IF_MODIFIED_SINCE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNjAwOQ=="}, "originalCommit": {"oid": "cb89226e632a08bf6f13965956d72ff07ba43b51"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTE5MTkxOnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMzo0OTo1NFrOFasgDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNDozNDoyMVrOFa7FRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNjM5Ng==", "bodyText": "I think this part should be done one time, not twice as on 664/666", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363536396", "createdAt": "2020-01-06T23:49:54Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -610,9 +653,50 @@ public Response read(@PathParam(\"type\") String type, @PathParam(\"id\") String id)\n         try {\n             checkInitComplete();\n             MultivaluedMap<String, String> queryParameters = uriInfo.getQueryParameters();\n+            long modifiedSince = parseIfModifiedSince();\n+            \n+            String ifNoneMatch = httpHeaders.getHeaderString(HEADERNAME_IF_NONE_MATCH);\n+            \n             Resource resource = doRead(type, id, true, false, null, null, queryParameters);\n-            ResponseBuilder response = Response.ok().entity(resource);\n-            response = addHeaders(response, resource);\n+            int version2Match = -1;\n+            // Support ETag value with or without \" (and W/)\n+            // e.g:  1, \"1\", W/1, W/\"1\" (the first format is used by TouchStone)\n+            if (ifNoneMatch != null && !ifNoneMatch.replaceAll(\"\\\"\", \"\").replaceAll(\"W/\", \"\").trim().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb89226e632a08bf6f13965956d72ff07ba43b51"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc3Mjg5Nw==", "bodyText": "I thought about this also, and because this requires another if block, so, I didn't. make sense to parse only once, will change.", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363772897", "createdAt": "2020-01-07T14:29:22Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -610,9 +653,50 @@ public Response read(@PathParam(\"type\") String type, @PathParam(\"id\") String id)\n         try {\n             checkInitComplete();\n             MultivaluedMap<String, String> queryParameters = uriInfo.getQueryParameters();\n+            long modifiedSince = parseIfModifiedSince();\n+            \n+            String ifNoneMatch = httpHeaders.getHeaderString(HEADERNAME_IF_NONE_MATCH);\n+            \n             Resource resource = doRead(type, id, true, false, null, null, queryParameters);\n-            ResponseBuilder response = Response.ok().entity(resource);\n-            response = addHeaders(response, resource);\n+            int version2Match = -1;\n+            // Support ETag value with or without \" (and W/)\n+            // e.g:  1, \"1\", W/1, W/\"1\" (the first format is used by TouchStone)\n+            if (ifNoneMatch != null && !ifNoneMatch.replaceAll(\"\\\"\", \"\").replaceAll(\"W/\", \"\").trim().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNjM5Ng=="}, "originalCommit": {"oid": "cb89226e632a08bf6f13965956d72ff07ba43b51"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc3NTMwMQ==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363775301", "createdAt": "2020-01-07T14:34:21Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -610,9 +653,50 @@ public Response read(@PathParam(\"type\") String type, @PathParam(\"id\") String id)\n         try {\n             checkInitComplete();\n             MultivaluedMap<String, String> queryParameters = uriInfo.getQueryParameters();\n+            long modifiedSince = parseIfModifiedSince();\n+            \n+            String ifNoneMatch = httpHeaders.getHeaderString(HEADERNAME_IF_NONE_MATCH);\n+            \n             Resource resource = doRead(type, id, true, false, null, null, queryParameters);\n-            ResponseBuilder response = Response.ok().entity(resource);\n-            response = addHeaders(response, resource);\n+            int version2Match = -1;\n+            // Support ETag value with or without \" (and W/)\n+            // e.g:  1, \"1\", W/1, W/\"1\" (the first format is used by TouchStone)\n+            if (ifNoneMatch != null && !ifNoneMatch.replaceAll(\"\\\"\", \"\").replaceAll(\"W/\", \"\").trim().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNjM5Ng=="}, "originalCommit": {"oid": "cb89226e632a08bf6f13965956d72ff07ba43b51"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTE5Mzc0OnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMzo1MDo0N1rOFashFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNDozNDozMFrOFa7Fgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNjY2MA==", "bodyText": "slight spelling ... Modified", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363536660", "createdAt": "2020-01-06T23:50:47Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -610,9 +653,50 @@ public Response read(@PathParam(\"type\") String type, @PathParam(\"id\") String id)\n         try {\n             checkInitComplete();\n             MultivaluedMap<String, String> queryParameters = uriInfo.getQueryParameters();\n+            long modifiedSince = parseIfModifiedSince();\n+            \n+            String ifNoneMatch = httpHeaders.getHeaderString(HEADERNAME_IF_NONE_MATCH);\n+            \n             Resource resource = doRead(type, id, true, false, null, null, queryParameters);\n-            ResponseBuilder response = Response.ok().entity(resource);\n-            response = addHeaders(response, resource);\n+            int version2Match = -1;\n+            // Support ETag value with or without \" (and W/)\n+            // e.g:  1, \"1\", W/1, W/\"1\" (the first format is used by TouchStone)\n+            if (ifNoneMatch != null && !ifNoneMatch.replaceAll(\"\\\"\", \"\").replaceAll(\"W/\", \"\").trim().isEmpty()) {\n+                try {\n+                    version2Match = Integer.parseInt(ifNoneMatch.replaceAll(\"\\\"\", \"\").replaceAll(\"W/\", \"\").trim());\n+                }\n+                catch (NumberFormatException e)\n+                {\n+                    // ignore invalid version\n+                    version2Match = -1;\n+                }\n+            }\n+            Instant modifiedTime2Compare = null;\n+            if (modifiedSince > 0 ) {\n+                modifiedTime2Compare = Instant.ofEpochMilli(modifiedSince);\n+            }\n+            \n+            boolean isModifed = true;\n+            // check if-not-match first\n+            if (version2Match != -1) {\n+                if (version2Match == Integer.parseInt(resource.getMeta().getVersionId().getValue())) {\n+                    isModifed = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb89226e632a08bf6f13965956d72ff07ba43b51"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc3MTg5MA==", "bodyText": "ha, good catch!", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363771890", "createdAt": "2020-01-07T14:27:10Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -610,9 +653,50 @@ public Response read(@PathParam(\"type\") String type, @PathParam(\"id\") String id)\n         try {\n             checkInitComplete();\n             MultivaluedMap<String, String> queryParameters = uriInfo.getQueryParameters();\n+            long modifiedSince = parseIfModifiedSince();\n+            \n+            String ifNoneMatch = httpHeaders.getHeaderString(HEADERNAME_IF_NONE_MATCH);\n+            \n             Resource resource = doRead(type, id, true, false, null, null, queryParameters);\n-            ResponseBuilder response = Response.ok().entity(resource);\n-            response = addHeaders(response, resource);\n+            int version2Match = -1;\n+            // Support ETag value with or without \" (and W/)\n+            // e.g:  1, \"1\", W/1, W/\"1\" (the first format is used by TouchStone)\n+            if (ifNoneMatch != null && !ifNoneMatch.replaceAll(\"\\\"\", \"\").replaceAll(\"W/\", \"\").trim().isEmpty()) {\n+                try {\n+                    version2Match = Integer.parseInt(ifNoneMatch.replaceAll(\"\\\"\", \"\").replaceAll(\"W/\", \"\").trim());\n+                }\n+                catch (NumberFormatException e)\n+                {\n+                    // ignore invalid version\n+                    version2Match = -1;\n+                }\n+            }\n+            Instant modifiedTime2Compare = null;\n+            if (modifiedSince > 0 ) {\n+                modifiedTime2Compare = Instant.ofEpochMilli(modifiedSince);\n+            }\n+            \n+            boolean isModifed = true;\n+            // check if-not-match first\n+            if (version2Match != -1) {\n+                if (version2Match == Integer.parseInt(resource.getMeta().getVersionId().getValue())) {\n+                    isModifed = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNjY2MA=="}, "originalCommit": {"oid": "cb89226e632a08bf6f13965956d72ff07ba43b51"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc3NTM2Mw==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r363775363", "createdAt": "2020-01-07T14:34:30Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -610,9 +653,50 @@ public Response read(@PathParam(\"type\") String type, @PathParam(\"id\") String id)\n         try {\n             checkInitComplete();\n             MultivaluedMap<String, String> queryParameters = uriInfo.getQueryParameters();\n+            long modifiedSince = parseIfModifiedSince();\n+            \n+            String ifNoneMatch = httpHeaders.getHeaderString(HEADERNAME_IF_NONE_MATCH);\n+            \n             Resource resource = doRead(type, id, true, false, null, null, queryParameters);\n-            ResponseBuilder response = Response.ok().entity(resource);\n-            response = addHeaders(response, resource);\n+            int version2Match = -1;\n+            // Support ETag value with or without \" (and W/)\n+            // e.g:  1, \"1\", W/1, W/\"1\" (the first format is used by TouchStone)\n+            if (ifNoneMatch != null && !ifNoneMatch.replaceAll(\"\\\"\", \"\").replaceAll(\"W/\", \"\").trim().isEmpty()) {\n+                try {\n+                    version2Match = Integer.parseInt(ifNoneMatch.replaceAll(\"\\\"\", \"\").replaceAll(\"W/\", \"\").trim());\n+                }\n+                catch (NumberFormatException e)\n+                {\n+                    // ignore invalid version\n+                    version2Match = -1;\n+                }\n+            }\n+            Instant modifiedTime2Compare = null;\n+            if (modifiedSince > 0 ) {\n+                modifiedTime2Compare = Instant.ofEpochMilli(modifiedSince);\n+            }\n+            \n+            boolean isModifed = true;\n+            // check if-not-match first\n+            if (version2Match != -1) {\n+                if (version2Match == Integer.parseInt(resource.getMeta().getVersionId().getValue())) {\n+                    isModifed = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNjY2MA=="}, "originalCommit": {"oid": "cb89226e632a08bf6f13965956d72ff07ba43b51"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MDM3Mjg2OnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNzoxNjoyMVrOFbd8PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNzoxNjoyMVrOFbd8PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM0NjQyOA==", "bodyText": "this was not right.  should have been 2016,2020", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r364346428", "createdAt": "2020-01-08T17:16:21Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * (C) Copyright IBM Corp. 2016,2019\n+ * (C) Copyright IBM Corp. 2020", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d923190840429f311a7ce855f435a9c826febb25"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MDM3NDE0OnYy", "diffSide": "RIGHT", "path": "fhir-client/src/main/java/com/ibm/fhir/client/impl/FHIRResponseImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNzoxNjo0MlrOFbd88A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNzoxNjo0MlrOFbd88A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM0NjYwOA==", "bodyText": "not right.  should be 2016,2020", "url": "https://github.com/IBM/FHIR/pull/556#discussion_r364346608", "createdAt": "2020-01-08T17:16:42Z", "author": {"login": "lmsurpre"}, "path": "fhir-client/src/main/java/com/ibm/fhir/client/impl/FHIRResponseImpl.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * (C) Copyright IBM Corp. 2016,2019\n+ * (C) Copyright IBM Corp. 2020", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d923190840429f311a7ce855f435a9c826febb25"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 274, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}