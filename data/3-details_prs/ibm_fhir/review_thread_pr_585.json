{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMjc2NzY1", "number": 585, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxOTo1ODozMVrODXo6eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMDowNDoyNFrODXpAVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTE0MTY4OnYy", "diffSide": "RIGHT", "path": "fhir-config/src/test/java/com/ibm/fhir/config/test/FHIRConfigHelperTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxOTo1ODozMVrOFdC1pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMDoyODoxOFrOFdDkzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk5OTUyNw==", "bodyText": "please update copyright year", "url": "https://github.com/IBM/FHIR/pull/585#discussion_r365999527", "createdAt": "2020-01-13T19:58:31Z", "author": {"login": "prb112"}, "path": "fhir-config/src/test/java/com/ibm/fhir/config/test/FHIRConfigHelperTest.java", "diffHunk": "@@ -22,7 +22,6 @@\n import com.ibm.fhir.config.FHIRConfigHelper;\n import com.ibm.fhir.config.FHIRConfiguration;\n import com.ibm.fhir.config.FHIRRequestContext;\n-import com.ibm.fhir.config.PropertyGroup;\n \n public class FHIRConfigHelperTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c2e14f10e6259259283f53807be8d4d1e83788e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAxMTU5OQ==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/585#discussion_r366011599", "createdAt": "2020-01-13T20:28:18Z", "author": {"login": "lmsurpre"}, "path": "fhir-config/src/test/java/com/ibm/fhir/config/test/FHIRConfigHelperTest.java", "diffHunk": "@@ -22,7 +22,6 @@\n import com.ibm.fhir.config.FHIRConfigHelper;\n import com.ibm.fhir.config.FHIRConfiguration;\n import com.ibm.fhir.config.FHIRRequestContext;\n-import com.ibm.fhir.config.PropertyGroup;\n \n public class FHIRConfigHelperTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk5OTUyNw=="}, "originalCommit": {"oid": "0c2e14f10e6259259283f53807be8d4d1e83788e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTE1MTE3OnYy", "diffSide": "RIGHT", "path": "fhir-config/pom.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMDowMjoxNlrOFdC72Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMDo0MjoxMlrOFdD7Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAwMTExMw==", "bodyText": "Have you tried a build with java9?\nper http://repo1.maven.org/maven2/org/glassfish/json/1.1.6/json-1.1.6.pom\n\n[9,)\n\nYou'll end up with lots of modules.\napi\nimpl\njaxrs\njaxrs-1x\ntests\ngf\ndemos\nbundles\nit's worth double checking instead of embedding the 'extra' jars everytime.", "url": "https://github.com/IBM/FHIR/pull/585#discussion_r366001113", "createdAt": "2020-01-13T20:02:16Z", "author": {"login": "prb112"}, "path": "fhir-config/pom.xml", "diffHunk": "@@ -17,19 +17,14 @@\n             <version>${project.version}</version>\n         </dependency>\n         <dependency>\n-            <groupId>jakarta.json</groupId>\n-            <artifactId>jakarta.json-api</artifactId>\n+            <groupId>org.glassfish</groupId>\n+            <artifactId>jakarta.json</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c2e14f10e6259259283f53807be8d4d1e83788e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAwNjExMg==", "bodyText": "I'm building with openjdk 11.0.5, but with a target of Java 8 thanks to the maven-compile-plugin.\nAnyway, I think those extra dependencies you're looking at are all in the dependencyManagement section.\n[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ fhir-config ---\n[INFO] com.ibm.fhir:fhir-config:jar:4.0.0-SNAPSHOT\n[INFO] +- com.ibm.fhir:fhir-core:jar:4.0.0-SNAPSHOT:compile\n[INFO] +- org.glassfish:jakarta.json:jar:1.1.5:compile\n[INFO] +- org.testng:testng:jar:6.14.3:test\n[INFO] |  +- com.beust:jcommander:jar:1.72:test\n[INFO] |  \\- org.apache-extras.beanshell:bsh:jar:2.0b6:test\n[INFO] \\- com.google.code.gson:gson:jar:2.8.1:compile", "url": "https://github.com/IBM/FHIR/pull/585#discussion_r366006112", "createdAt": "2020-01-13T20:14:38Z", "author": {"login": "lmsurpre"}, "path": "fhir-config/pom.xml", "diffHunk": "@@ -17,19 +17,14 @@\n             <version>${project.version}</version>\n         </dependency>\n         <dependency>\n-            <groupId>jakarta.json</groupId>\n-            <artifactId>jakarta.json-api</artifactId>\n+            <groupId>org.glassfish</groupId>\n+            <artifactId>jakarta.json</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAwMTExMw=="}, "originalCommit": {"oid": "0c2e14f10e6259259283f53807be8d4d1e83788e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAxNjM2Mg==", "bodyText": "never mind, now i see what you're talking about.  there's a profile section in their pom:\n<profile>\n  <id>jdk9-all</id>\n  <activation>\n    <jdk>[9,)</jdk>\n  </activation>\n  <modules>\n    <module>api</module>\n    <module>impl</module>\n    <module>jaxrs</module>\n    <module>jaxrs-1x</module>\n    <module>tests</module>\n    <module>gf</module>\n    <module>demos</module>\n    <module>bundles</module>\n  </modules>\n</profile>\n\nstill, i'm not sure how it relates to our usage.  we already have quite a few 'compile' dependencies on this module and i don't see any ways of asking for specific sub-modules from maven.", "url": "https://github.com/IBM/FHIR/pull/585#discussion_r366016362", "createdAt": "2020-01-13T20:39:59Z", "author": {"login": "lmsurpre"}, "path": "fhir-config/pom.xml", "diffHunk": "@@ -17,19 +17,14 @@\n             <version>${project.version}</version>\n         </dependency>\n         <dependency>\n-            <groupId>jakarta.json</groupId>\n-            <artifactId>jakarta.json-api</artifactId>\n+            <groupId>org.glassfish</groupId>\n+            <artifactId>jakarta.json</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAwMTExMw=="}, "originalCommit": {"oid": "0c2e14f10e6259259283f53807be8d4d1e83788e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAxNzM1MQ==", "bodyText": "it's active with java9.  just worth us thinking about...", "url": "https://github.com/IBM/FHIR/pull/585#discussion_r366017351", "createdAt": "2020-01-13T20:42:12Z", "author": {"login": "prb112"}, "path": "fhir-config/pom.xml", "diffHunk": "@@ -17,19 +17,14 @@\n             <version>${project.version}</version>\n         </dependency>\n         <dependency>\n-            <groupId>jakarta.json</groupId>\n-            <artifactId>jakarta.json-api</artifactId>\n+            <groupId>org.glassfish</groupId>\n+            <artifactId>jakarta.json</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAwMTExMw=="}, "originalCommit": {"oid": "0c2e14f10e6259259283f53807be8d4d1e83788e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTE1NTQ0OnYy", "diffSide": "RIGHT", "path": "fhir-swagger-generator/src/main/java/com/ibm/fhir/swagger/generator/FHIRSwaggerGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMDowMzo1MFrOFdC-eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMDowMzo1MFrOFdC-eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAwMTc4Ng==", "bodyText": "Looks good", "url": "https://github.com/IBM/FHIR/pull/585#discussion_r366001786", "createdAt": "2020-01-13T20:03:50Z", "author": {"login": "prb112"}, "path": "fhir-swagger-generator/src/main/java/com/ibm/fhir/swagger/generator/FHIRSwaggerGenerator.java", "diffHunk": "@@ -169,8 +172,8 @@ public static void main(String[] args) throws Exception {\n                 config.put(JsonGenerator.PRETTY_PRINTING, true);\n                 JsonWriterFactory factory = Json.createWriterFactory(config);\n \n-                File outFile = new File(\"./src/main/resources/swagger/\" + resourceClassName + \"-swagger.json\");\n-                try (JsonWriter writer = factory.createWriter(new FileWriter(outFile))) {\n+                File outFile = new File(OUTDIR + File.separator +  resourceClassName + \"-swagger.json\");\n+                try (JsonWriter writer = factory.createWriter(new FileOutputStream(outFile), StandardCharsets.UTF_8)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c2e14f10e6259259283f53807be8d4d1e83788e"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTE1NjcxOnYy", "diffSide": "RIGHT", "path": "fhir-swagger-generator/src/main/java/com/ibm/fhir/openapi/generator/FHIROpenApiGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMDowNDoyNFrOFdC_Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMDowNDoyNFrOFdC_Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjAwMjAwNw==", "bodyText": "Looks Good", "url": "https://github.com/IBM/FHIR/pull/585#discussion_r366002007", "createdAt": "2020-01-13T20:04:24Z", "author": {"login": "prb112"}, "path": "fhir-swagger-generator/src/main/java/com/ibm/fhir/openapi/generator/FHIROpenApiGenerator.java", "diffHunk": "@@ -462,8 +466,8 @@ private static void generateBatchTransactionOpenApi(Filter filter) throws Except\n         config.put(JsonGenerator.PRETTY_PRINTING, true);\n         JsonWriterFactory factory = Json.createWriterFactory(config);\n         \n-        File outFile = new File(\"./src/main/resources/swagger/batch-swagger.json\");\n-        try (JsonWriter writer = factory.createWriter(new FileWriter(outFile))) {\n+        File outFile = new File(OUTDIR + File.separator + \"batch-swagger.json\");\n+        try (JsonWriter writer = factory.createWriter(new FileOutputStream(outFile), StandardCharsets.UTF_8)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c2e14f10e6259259283f53807be8d4d1e83788e"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 189, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}