{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMzQxNTU2", "number": 667, "title": "issue #665 #638 #672 null checks for Cadf generator & Enhanced bulkimport", "bodyText": "Changes in this PR:\n\nfixed issue #665 by adding null checks.\nfinished issue #638 and #672:\na. partitionized the import by using separate partition/thread for each data source.\nb. added partition collector to collect statistic info from each partition.\nc. added partition analyzer to aggregate the info from all the partitions.\nd. added job listener to calculate basic import performance metrics using info gathered by the analyzer. Currently we simply print out the metrics to console, in the future, we may consider to push those metrics to liberty MicroProfiles metrics application registry.\ne. In addition to COS/S3 data source support, also added support for https and local file system.\nf. uploaded import operationoutcome to COS/S3 to allow us generate the links in the output/error parts of the bulkdata import API.\n\nSigned-off-by: Albert Wang xuwang@us.ibm.com", "createdAt": "2020-02-03T14:15:32Z", "url": "https://github.com/IBM/FHIR/pull/667", "merged": true, "mergeCommit": {"oid": "6c9e4e9384b871f49f4e8a61489f33a3f0cf5946"}, "closed": true, "closedAt": "2020-02-12T21:37:01Z", "author": {"login": "albertwang-ibm"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAtnY5AH2gAyMzcwMzQxNTU2OmJiMTI5NmVkOTNkOTQyMjA3NmJhNTViYmFjZjcyYTgyOWYyYmQ5Mzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDtCt2gFqTM1Nzc5MzAxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bb1296ed93d9422076ba55bbacf72a829f2bd939", "author": {"user": {"login": "albertwang-ibm", "name": "Albert(Xu) Wang"}}, "url": "https://github.com/IBM/FHIR/commit/bb1296ed93d9422076ba55bbacf72a829f2bd939", "committedDate": "2020-02-03T14:14:50Z", "message": "issue #665 add null checks to Cadf generator\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzOTI4MTc5", "url": "https://github.com/IBM/FHIR/pull/667#pullrequestreview-353928179", "createdAt": "2020-02-05T18:06:37Z", "commit": {"oid": "bb1296ed93d9422076ba55bbacf72a829f2bd939"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxODowNjozOFrOFmBw_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxODowNjozOFrOFmBw_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQxOTEzNQ==", "bodyText": "maybe some javadoc to explain the behavior when null is passed?", "url": "https://github.com/IBM/FHIR/pull/667#discussion_r375419135", "createdAt": "2020-02-05T18:06:38Z", "author": {"login": "lmsurpre"}, "path": "fhir-audit/src/main/java/com/ibm/fhir/audit/cadf/model/CadfResource.java", "diffHunk": "@@ -377,6 +377,9 @@ public static String generate(CadfResource obj)\n         }\n \n         public static void generate(CadfResource obj, JsonGenerator generator) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1296ed93d9422076ba55bbacf72a829f2bd939"}, "originalPosition": 126}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzOTI4MzI4", "url": "https://github.com/IBM/FHIR/pull/667#pullrequestreview-353928328", "createdAt": "2020-02-05T18:06:52Z", "commit": {"oid": "bb1296ed93d9422076ba55bbacf72a829f2bd939"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxODowNjo1MlrOFmBxeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxODowNjo1MlrOFmBxeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQxOTI1Nw==", "bodyText": "maybe some javadoc to explain the behavior when null is passed?", "url": "https://github.com/IBM/FHIR/pull/667#discussion_r375419257", "createdAt": "2020-02-05T18:06:52Z", "author": {"login": "lmsurpre"}, "path": "fhir-audit/src/main/java/com/ibm/fhir/audit/cadf/model/CadfReporterStep.java", "diffHunk": "@@ -281,6 +281,9 @@ public static String generate(CadfReporterStep obj)\n \n         public static void generate(CadfReporterStep obj, JsonGenerator generator)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1296ed93d9422076ba55bbacf72a829f2bd939"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzOTI4NDM0", "url": "https://github.com/IBM/FHIR/pull/667#pullrequestreview-353928434", "createdAt": "2020-02-05T18:07:02Z", "commit": {"oid": "bb1296ed93d9422076ba55bbacf72a829f2bd939"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxODowNzowM1rOFmBxyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxODowNzowM1rOFmBxyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQxOTMzOQ==", "bodyText": "maybe some javadoc to explain the behavior when null is passed?", "url": "https://github.com/IBM/FHIR/pull/667#discussion_r375419339", "createdAt": "2020-02-05T18:07:03Z", "author": {"login": "lmsurpre"}, "path": "fhir-audit/src/main/java/com/ibm/fhir/audit/cadf/model/CadfReason.java", "diffHunk": "@@ -138,6 +138,9 @@ public static String generate(CadfReason obj)\n \n         public static void generate(CadfReason obj, JsonGenerator generator)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1296ed93d9422076ba55bbacf72a829f2bd939"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzOTMyMDE0", "url": "https://github.com/IBM/FHIR/pull/667#pullrequestreview-353932014", "createdAt": "2020-02-05T18:12:33Z", "commit": {"oid": "bb1296ed93d9422076ba55bbacf72a829f2bd939"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxODoxMjozM1rOFmB8vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxODoxMjozM1rOFmB8vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQyMjE0Mg==", "bodyText": "Can the CadfEvent (obj) really contain nulls in its repeating members?", "url": "https://github.com/IBM/FHIR/pull/667#discussion_r375422142", "createdAt": "2020-02-05T18:12:33Z", "author": {"login": "lmsurpre"}, "path": "fhir-audit/src/main/java/com/ibm/fhir/audit/cadf/model/CadfEvent.java", "diffHunk": "@@ -765,50 +765,64 @@ public static void generate(CadfEvent obj, JsonGenerator generator)\n             if (obj.getTags() != null) {\n                 generator.writeStartArray(\"tags\");\n                 for (String tag : obj.getTags()) {\n-                    generator.write(tag);\n+                    if (tag != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1296ed93d9422076ba55bbacf72a829f2bd939"}, "originalPosition": 138}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzOTMyODEz", "url": "https://github.com/IBM/FHIR/pull/667#pullrequestreview-353932813", "createdAt": "2020-02-05T18:13:45Z", "commit": {"oid": "bb1296ed93d9422076ba55bbacf72a829f2bd939"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxODoxMzo0NVrOFmB_FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxODoxMzo0NVrOFmB_FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQyMjc0MQ==", "bodyText": "maybe some javadoc to explain the behavior when null is passed?", "url": "https://github.com/IBM/FHIR/pull/667#discussion_r375422741", "createdAt": "2020-02-05T18:13:45Z", "author": {"login": "lmsurpre"}, "path": "fhir-audit/src/main/java/com/ibm/fhir/audit/cadf/model/CadfAttachment.java", "diffHunk": "@@ -136,6 +136,9 @@ public static String generate(CadfAttachment obj)\n \n         public static void generate(CadfAttachment obj, JsonGenerator generator)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb1296ed93d9422076ba55bbacf72a829f2bd939"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MDEwNjI1", "url": "https://github.com/IBM/FHIR/pull/667#pullrequestreview-354010625", "createdAt": "2020-02-05T20:15:10Z", "commit": {"oid": "bb1296ed93d9422076ba55bbacf72a829f2bd939"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b4db3efbff0e18bc0b83e10a66e0f6eb56e91aa", "author": {"user": {"login": "albertwang-ibm", "name": "Albert(Xu) Wang"}}, "url": "https://github.com/IBM/FHIR/commit/3b4db3efbff0e18bc0b83e10a66e0f6eb56e91aa", "committedDate": "2020-02-06T02:03:47Z", "message": "issue #638 initial code drop with partition support\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aca952691135cafa1bad385ea10d6d6b23ea24ba", "author": {"user": {"login": "albertwang-ibm", "name": "Albert(Xu) Wang"}}, "url": "https://github.com/IBM/FHIR/commit/aca952691135cafa1bad385ea10d6d6b23ea24ba", "committedDate": "2020-02-06T02:07:41Z", "message": "Merge pull request #682 from IBM/issue-638\n\nsync with master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52f0afca29589fec739bbf7d0e85b8c4482fa969", "author": {"user": {"login": "albertwang-ibm", "name": "Albert(Xu) Wang"}}, "url": "https://github.com/IBM/FHIR/commit/52f0afca29589fec739bbf7d0e85b8c4482fa969", "committedDate": "2020-02-06T23:35:42Z", "message": "issue #638 multiple types of data sources support for import\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45b7e7ebf6d82bd3f6a9835f05e0c6e60184f965", "author": {"user": {"login": "albertwang-ibm", "name": "Albert(Xu) Wang"}}, "url": "https://github.com/IBM/FHIR/commit/45b7e7ebf6d82bd3f6a9835f05e0c6e60184f965", "committedDate": "2020-02-07T15:33:07Z", "message": "issue #638 refactor bulkdatautil.java\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82f5332cac7df066049d72df34f306ef6e7a17f2", "author": {"user": {"login": "albertwang-ibm", "name": "Albert(Xu) Wang"}}, "url": "https://github.com/IBM/FHIR/commit/82f5332cac7df066049d72df34f306ef6e7a17f2", "committedDate": "2020-02-11T17:58:15Z", "message": "issue #672 #638 Import Operationoutcomes and performance metrics\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d366010be8aa7c1e8a975b84ab0c7e065869118", "author": {"user": {"login": "albertwang-ibm", "name": "Albert(Xu) Wang"}}, "url": "https://github.com/IBM/FHIR/commit/7d366010be8aa7c1e8a975b84ab0c7e065869118", "committedDate": "2020-02-11T19:41:16Z", "message": "issue #638 refactor codes\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d0f6ea8aa44f8696a19c2a8a0928f3c1ed9ca73", "author": {"user": {"login": "albertwang-ibm", "name": "Albert(Xu) Wang"}}, "url": "https://github.com/IBM/FHIR/commit/2d0f6ea8aa44f8696a19c2a8a0928f3c1ed9ca73", "committedDate": "2020-02-11T19:46:02Z", "message": "issue #638 update import batch size\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d799a447a0a0775bbcf120a34108adee1039b5f3", "author": {"user": {"login": "albertwang-ibm", "name": "Albert(Xu) Wang"}}, "url": "https://github.com/IBM/FHIR/commit/d799a447a0a0775bbcf120a34108adee1039b5f3", "committedDate": "2020-02-11T20:55:54Z", "message": "issue #638 enable publicaccess to operationoutcomes\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6330a03d02a295d0413a82de31d4cd6e22fd43c9", "author": {"user": {"login": "albertwang-ibm", "name": "Albert(Xu) Wang"}}, "url": "https://github.com/IBM/FHIR/commit/6330a03d02a295d0413a82de31d4cd6e22fd43c9", "committedDate": "2020-02-12T02:47:23Z", "message": "issue #665 added comments for the null checks\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3Mzg2MTYw", "url": "https://github.com/IBM/FHIR/pull/667#pullrequestreview-357386160", "createdAt": "2020-02-12T11:41:54Z", "commit": {"oid": "6330a03d02a295d0413a82de31d4cd6e22fd43c9"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTo0MTo1NFrOFore5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMTo1NTowOFrOFor2eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE5OTc4Mw==", "bodyText": "Maybe you can use ObjectUtils.isEmpty to validade this obj.\nDocument link", "url": "https://github.com/IBM/FHIR/pull/667#discussion_r378199783", "createdAt": "2020-02-12T11:41:54Z", "author": {"login": "yurizp"}, "path": "fhir-audit/src/main/java/com/ibm/fhir/audit/cadf/model/CadfAttachment.java", "diffHunk": "@@ -136,6 +136,10 @@ public static String generate(CadfAttachment obj)\n \n         public static void generate(CadfAttachment obj, JsonGenerator generator)\n                 throws IOException {\n+            // If the CADF attachment is null, then simply skip it.\n+            if (obj == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6330a03d02a295d0413a82de31d4cd6e22fd43c9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIwMDA2MA==", "bodyText": "It's really necessary this comment?", "url": "https://github.com/IBM/FHIR/pull/667#discussion_r378200060", "createdAt": "2020-02-12T11:42:35Z", "author": {"login": "yurizp"}, "path": "fhir-audit/src/main/java/com/ibm/fhir/audit/cadf/model/CadfAttachment.java", "diffHunk": "@@ -136,6 +136,10 @@ public static String generate(CadfAttachment obj)\n \n         public static void generate(CadfAttachment obj, JsonGenerator generator)\n                 throws IOException {\n+            // If the CADF attachment is null, then simply skip it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6330a03d02a295d0413a82de31d4cd6e22fd43c9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIwMTA2Mw==", "bodyText": "Maybe you can use ObjectUtils.isNotEmpty to validade this obj", "url": "https://github.com/IBM/FHIR/pull/667#discussion_r378201063", "createdAt": "2020-02-12T11:44:42Z", "author": {"login": "yurizp"}, "path": "fhir-audit/src/main/java/com/ibm/fhir/audit/cadf/model/CadfEvent.java", "diffHunk": "@@ -765,50 +765,64 @@ public static void generate(CadfEvent obj, JsonGenerator generator)\n             if (obj.getTags() != null) {\n                 generator.writeStartArray(\"tags\");\n                 for (String tag : obj.getTags()) {\n-                    generator.write(tag);\n+                    if (tag != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6330a03d02a295d0413a82de31d4cd6e22fd43c9"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIwMjUxMw==", "bodyText": "It's possible move this code inside for to other method.", "url": "https://github.com/IBM/FHIR/pull/667#discussion_r378202513", "createdAt": "2020-02-12T11:47:47Z", "author": {"login": "yurizp"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ChunkWriter.java", "diffHunk": "@@ -108,32 +121,98 @@ public void writeItems(List<java.lang.Object> arg0) throws Exception {\n             fhirDatastoreId = Constants.DEFAULT_FHIR_TENANT;\n             logger.info(\"writeItems: Set DatastoreId to default!\");\n         }\n-        cosClient = COSUtils.getCosClient(cosCredentialIbm, cosApiKeyProperty, cosSrvinstId, cosEndpintUrl,\n-                cosLocation);\n-        if (cosClient == null) {\n-            logger.warning(\"writeItems: Failed to get CosClient!\");\n-            return;\n-        } else {\n-            logger.finer(\"writeItems: Got CosClient successfully!\");\n-        }\n \n         FHIRConfiguration.setConfigHome(\"./\");\n         FHIRRequestContext.set(new FHIRRequestContext(fhirTenant, fhirDatastoreId));\n \n         FHIRPersistenceHelper fhirPersistenceHelper = new FHIRPersistenceHelper();\n         FHIRPersistence fhirPersistence = fhirPersistenceHelper.getFHIRPersistenceImplementation();\n         FHIRPersistenceContext persistenceContext = FHIRPersistenceContextFactory.createPersistenceContext(null);\n+        FHIRTransactionHelper txn = new FHIRTransactionHelper(fhirPersistence.getTransaction());\n \n-        int imported = 0;\n+        int processedNum = 0, succeededNum =0, failedNum = 0;\n+        ImportTransientUserData chunkData = (ImportTransientUserData) stepCtx.getTransientUserData();\n         for (Object objResJasonList : arg0) {\n-            List<String> resCosObjectNameList = (List<String>) objResJasonList;\n+            List<Resource> fhirResourceList = (List<Resource>) objResJasonList;\n+\n+            for (Resource fhirResource : fhirResourceList) {\n+                try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6330a03d02a295d0413a82de31d4cd6e22fd43c9"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIwNDE0Mw==", "bodyText": "I believe i have by default 0 with value. So it's not necessary set 0 in this.\nDocument link", "url": "https://github.com/IBM/FHIR/pull/667#discussion_r378204143", "createdAt": "2020-02-12T11:51:21Z", "author": {"login": "yurizp"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportCheckPointData.java", "diffHunk": "@@ -0,0 +1,204 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.bulkimport;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import com.ibm.cloud.objectstorage.services.s3.model.PartETag;\n+import com.ibm.fhir.model.util.FHIRUtil;\n+\n+// Class for tracking the partition import progress and for Batch job check points.\n+// Also used as data carrier for collecting and aggregation of import metrics.\n+public class ImportCheckPointData implements Serializable {\n+    private static final long serialVersionUID = 2189917861035732241L;\n+    // URL or COS/S3 object name.\n+    private String importPartitionWorkitem;\n+    private int numOfProcessedResources = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6330a03d02a295d0413a82de31d4cd6e22fd43c9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIwNTEzMg==", "bodyText": "Maybe you can separe this method in smalls ones.\nIn this way you make the ciclomatic complexiti donw to.", "url": "https://github.com/IBM/FHIR/pull/667#discussion_r378205132", "createdAt": "2020-02-12T11:53:30Z", "author": {"login": "yurizp"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkimport/ImportJobListener.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.bulkimport;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+\n+import javax.batch.api.listener.JobListener;\n+import javax.batch.runtime.context.JobContext;\n+import javax.inject.Inject;\n+\n+public class ImportJobListener implements JobListener {\n+    @Inject\n+    JobContext jobContext;\n+\n+    private long jobStartTimeInMS, jobEndTimeInMS;\n+\n+    public ImportJobListener() {\n+\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public void afterJob() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6330a03d02a295d0413a82de31d4cd6e22fd43c9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIwNTgxOA==", "bodyText": "Do you dont have the value to verify in this?\nMaybe is return the wrong value but in this Test is pass becouse is not empty.", "url": "https://github.com/IBM/FHIR/pull/667#discussion_r378205818", "createdAt": "2020-02-12T11:55:08Z", "author": {"login": "yurizp"}, "path": "fhir-model/src/test/java/com/ibm/fhir/model/util/test/RandomKeyGeneratorTest.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * (C) Copyright IBM Corp. 2019\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.model.util.test;\n+\n+import static org.testng.Assert.assertFalse;\n+\n+import org.testng.annotations.Test;\n+\n+import com.ibm.fhir.model.util.FHIRUtil;\n+\n+\n+public class RandomKeyGeneratorTest {\n+\n+    @Test\n+    public void testGetRandomKey() {\n+        String output = FHIRUtil.getRandomKey(\"AES\");\n+        assertFalse(output.isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6330a03d02a295d0413a82de31d4cd6e22fd43c9"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e4ec0b04de3c13ccf96a44f92f14a8d49a14f92", "author": {"user": {"login": "albertwang-ibm", "name": "Albert(Xu) Wang"}}, "url": "https://github.com/IBM/FHIR/commit/2e4ec0b04de3c13ccf96a44f92f14a8d49a14f92", "committedDate": "2020-02-12T13:41:55Z", "message": "Merge branch 'master' into Albert-Master-New"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74d727fc9ff17af6a7eef8ae5eaa31b560ad7081", "author": {"user": {"login": "albertwang-ibm", "name": "Albert(Xu) Wang"}}, "url": "https://github.com/IBM/FHIR/commit/74d727fc9ff17af6a7eef8ae5eaa31b560ad7081", "committedDate": "2020-02-12T14:30:16Z", "message": "issue #638 import reorg\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b76d81a15535b79ab4f261920e62711f7bbed4b", "author": {"user": {"login": "JohnTimm", "name": "John T.E. Timm"}}, "url": "https://github.com/IBM/FHIR/commit/4b76d81a15535b79ab4f261920e62711f7bbed4b", "committedDate": "2020-02-12T21:16:05Z", "message": "Merge branch 'master' into Albert-Master-New"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NzkzMDE0", "url": "https://github.com/IBM/FHIR/pull/667#pullrequestreview-357793014", "createdAt": "2020-02-12T21:16:33Z", "commit": {"oid": "4b76d81a15535b79ab4f261920e62711f7bbed4b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 683, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}