{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NTk4NjY4", "number": 1571, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMjoxOTo0M1rOErz2WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMTo1MzowOFrOEr3TRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MzczNzIwOnYy", "diffSide": "RIGHT", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMjoxOTo0M1rOHeyVOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMzo0MDozN1rOHe0k1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA0Mzk2Mg==", "bodyText": "should it be a log statement?  or remove altogether?", "url": "https://github.com/IBM/FHIR/pull/1571#discussion_r502043962", "createdAt": "2020-10-08T22:19:43Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java", "diffHunk": "@@ -529,6 +527,7 @@ private SqlQueryData processReferenceParm(Class<?> resourceType, QueryParameter\n             // Handle query parm representing this name/value pair construct:\n             // <code>{name}:{Resource Type} = {resource-id}</code>\n             if (queryParm.getModifier() != null && queryParm.getModifier().equals(Modifier.TYPE)) {\n+                System.out.println(queryParm.getType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3a1ec36538fd1ddcbe16bd67b38df8d3b8b642e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA4MDcyNQ==", "bodyText": "fixed  - it was meant  for debugging, and then I wanted to remove it.  Thanks for the eagle eyes", "url": "https://github.com/IBM/FHIR/pull/1571#discussion_r502080725", "createdAt": "2020-10-08T23:40:37Z", "author": {"login": "prb112"}, "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java", "diffHunk": "@@ -529,6 +527,7 @@ private SqlQueryData processReferenceParm(Class<?> resourceType, QueryParameter\n             // Handle query parm representing this name/value pair construct:\n             // <code>{name}:{Resource Type} = {resource-id}</code>\n             if (queryParm.getModifier() != null && queryParm.getModifier().equals(Modifier.TYPE)) {\n+                System.out.println(queryParm.getType());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA0Mzk2Mg=="}, "originalCommit": {"oid": "f3a1ec36538fd1ddcbe16bd67b38df8d3b8b642e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Mzk3NTk4OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMzozOTozNlrOHe0jcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMzozOTozNlrOHe0jcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA4MDM3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            System.out.println(queryParm.getType());", "url": "https://github.com/IBM/FHIR/pull/1571#discussion_r502080371", "createdAt": "2020-10-08T23:39:36Z", "author": {"login": "prb112"}, "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/util/JDBCQueryBuilder.java", "diffHunk": "@@ -529,6 +527,7 @@ private SqlQueryData processReferenceParm(Class<?> resourceType, QueryParameter\n             // Handle query parm representing this name/value pair construct:\n             // <code>{name}:{Resource Type} = {resource-id}</code>\n             if (queryParm.getModifier() != null && queryParm.getModifier().equals(Modifier.TYPE)) {\n+                System.out.println(queryParm.getType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3a1ec36538fd1ddcbe16bd67b38df8d3b8b642e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDI4Nzg4OnYy", "diffSide": "RIGHT", "path": "fhir-search/src/main/java/com/ibm/fhir/search/reference/value/UrlHandlerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMTo0MzozM1rOHe3Y9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMTo0ODoyN1rOHe3dXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjEyNjgzOQ==", "bodyText": "I assume the limit here is for performance reasons?\nThe longest resource type I found is 30 chars, but I still wonder if we should bump this to like 48 or 64 just to be catious.\nAlternatively, we could check the actual list of resource names from the resourceTypes valueset and then use the one with max length, but thats probably overkill.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String REGEX = \"/([A-z][a-z]{2,36}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";\n          \n          \n            \n                private static final String REGEX = \"/([A-z][a-z]{2,64}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";", "url": "https://github.com/IBM/FHIR/pull/1571#discussion_r502126839", "createdAt": "2020-10-09T01:43:33Z", "author": {"login": "lmsurpre"}, "path": "fhir-search/src/main/java/com/ibm/fhir/search/reference/value/UrlHandlerImpl.java", "diffHunk": "@@ -18,11 +18,11 @@\n  * http://server/Patient/1\n  * -> http://server/Patient/1\n  * -> Patient/1\n- * -> 1\n+ * -> 1 (only when there is one target)\n  */\n public class UrlHandlerImpl implements ParameterValueHandler {\n \n-    private static final String REGEX = \"/[A-z][a-z]{2,10}/[A-Za-z0-9\\\\-\\\\.]{1,64}$\";\n+    private static final String REGEX = \"/([A-z][a-z]{2,36}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab7f7f1efa41377f11d0c1802567d1302c3e2726"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjEyNzk2NA==", "bodyText": "we also have a related URL pattern in FHIRUtil.buildReferencePattern()\nsb.append(\")\\\\/[A-Za-z0-9\\\\-\\\\.]{1,64}(\\\\/_history\\\\/[A-Za-z0-9\\\\-\\\\.]{1,64})?\");\n\nalthough i'm not sure why the / chars are escaped in that one...", "url": "https://github.com/IBM/FHIR/pull/1571#discussion_r502127964", "createdAt": "2020-10-09T01:48:27Z", "author": {"login": "lmsurpre"}, "path": "fhir-search/src/main/java/com/ibm/fhir/search/reference/value/UrlHandlerImpl.java", "diffHunk": "@@ -18,11 +18,11 @@\n  * http://server/Patient/1\n  * -> http://server/Patient/1\n  * -> Patient/1\n- * -> 1\n+ * -> 1 (only when there is one target)\n  */\n public class UrlHandlerImpl implements ParameterValueHandler {\n \n-    private static final String REGEX = \"/[A-z][a-z]{2,10}/[A-Za-z0-9\\\\-\\\\.]{1,64}$\";\n+    private static final String REGEX = \"/([A-z][a-z]{2,36}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjEyNjgzOQ=="}, "originalCommit": {"oid": "ab7f7f1efa41377f11d0c1802567d1302c3e2726"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDMwMjc4OnYy", "diffSide": "RIGHT", "path": "fhir-search/src/main/java/com/ibm/fhir/search/reference/value/TypeIdHandlerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMTo1MzowOFrOHe3hcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMTo1MzowOFrOHe3hcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjEyOTAwOA==", "bodyText": "same comment about erring on the side of caution on referencetype length\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String REGEX = \"^([A-z][a-z]{2,36}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";\n          \n          \n            \n                private static final String REGEX = \"^([A-z][a-z]{2,64}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";", "url": "https://github.com/IBM/FHIR/pull/1571#discussion_r502129008", "createdAt": "2020-10-09T01:53:08Z", "author": {"login": "lmsurpre"}, "path": "fhir-search/src/main/java/com/ibm/fhir/search/reference/value/TypeIdHandlerImpl.java", "diffHunk": "@@ -6,18 +6,26 @@\n package com.ibm.fhir.search.reference.value;\n \n import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n \n import com.ibm.fhir.search.parameters.QueryParameterValue;\n \n /**\n  * The supported cases are:\n  * Patient/1\n  * -> http://server/Patient/1\n+ * -> 1 (only when there is one target)\n  */\n public class TypeIdHandlerImpl implements ParameterValueHandler {\n+\n+    private static final String REGEX = \"^([A-z][a-z]{2,36}/[A-Za-z0-9\\\\-\\\\.]{1,64})$\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab7f7f1efa41377f11d0c1802567d1302c3e2726"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4710, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}