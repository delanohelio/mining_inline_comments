{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxOTMxNjk1", "number": 920, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDozMjo0N1rODww3sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDozMjo0N1rODww3sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDU4OTI5OnYy", "diffSide": "RIGHT", "path": "fhir-model/src/test/java/com/ibm/fhir/model/test/Base64BinaryTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDozMjo0N1rOGD8Jag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNDozMjo0N1rOGD8Jag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4NDM2Mg==", "bodyText": "there's also a way to just tell TestNG that you expect it to fail with an IllegalArgumentException, but this is fine", "url": "https://github.com/IBM/FHIR/pull/920#discussion_r406784362", "createdAt": "2020-04-10T14:32:47Z", "author": {"login": "lmsurpre"}, "path": "fhir-model/src/test/java/com/ibm/fhir/model/test/Base64BinaryTest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.model.test;\n+\n+import static org.testng.Assert.fail;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import com.ibm.fhir.model.type.Base64Binary;\n+\n+public class Base64BinaryTest {\n+    @Test\n+    public void testBase64BinaryValid() throws Exception {\n+        Base64Binary base64Binary = Base64Binary.builder().value(\"ABCDEA==\").build();\n+        Assert.assertNotNull(base64Binary);\n+    }\n+\n+    @Test\n+    public void testBase64BinaryInvalid() throws Exception {\n+        try {\n+            Base64Binary.builder().value(\"ABCDEF\").build();\n+            fail();\n+        } catch (Exception e) {\n+            Assert.assertTrue(e instanceof IllegalArgumentException);\n+            Assert.assertEquals(e.getMessage(), \"Invalid base64 encoded string: incorrect padding\");\n+        }\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc4b3b50691fe989c2107d01b6aa727fcf7c62b"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 184, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}