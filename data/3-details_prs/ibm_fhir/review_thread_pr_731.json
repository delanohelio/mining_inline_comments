{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMzkxNTIx", "number": 731, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODozNToxMVrODjMRWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTo1NDo0MlrODky0lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjI3ODAyOnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/IssueTypeToHttpStatusMapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODozNToxMVrOFu3R5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDoxNjo1NVrOFu6tFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NDUxNg==", "bodyText": "is this method used anywhere else? is it in FHIRUtil because you think it will be? it might be more containable to add it to this class.", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r384684516", "createdAt": "2020-02-26T18:35:11Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/IssueTypeToHttpStatusMapper.java", "diffHunk": "@@ -36,15 +43,20 @@\n             for (Issue issue : issues) {\n                 IssueType code = issue.getCode();\n                 if (code != null && code.getValue() != null) {\n-                    return issueTypeToResponseCode(IssueType.ValueSet.from(code.getValue()));\n+                    ValueSet issueType = IssueType.ValueSet.from(code.getValue());\n+                    // Special case for IssueType CONFLICT which can be either an HTTP 409 (Conflict) or HTTP 412 (Precondition failed)\n+                    if (issueType == IssueType.ValueSet.CONFLICT &&\n+                            FHIRUtil.getExtensionStringValue(code, EXTENSION_URL_HTTP_FAILED_PRECONDITION) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72f6504799036868a81813629ffa14f3202d25b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc0MDYyOQ==", "bodyText": "FHIRUtil already had getExtensionStringValue(Resource, String) so I basically just added a sister one for Elements.  I think both could be modified to be more generic, but at least it won't throw a ClassCastException any more when you specify an extension url with a non-string value ;-)", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r384740629", "createdAt": "2020-02-26T20:16:55Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/IssueTypeToHttpStatusMapper.java", "diffHunk": "@@ -36,15 +43,20 @@\n             for (Issue issue : issues) {\n                 IssueType code = issue.getCode();\n                 if (code != null && code.getValue() != null) {\n-                    return issueTypeToResponseCode(IssueType.ValueSet.from(code.getValue()));\n+                    ValueSet issueType = IssueType.ValueSet.from(code.getValue());\n+                    // Special case for IssueType CONFLICT which can be either an HTTP 409 (Conflict) or HTTP 412 (Precondition failed)\n+                    if (issueType == IssueType.ValueSet.CONFLICT &&\n+                            FHIRUtil.getExtensionStringValue(code, EXTENSION_URL_HTTP_FAILED_PRECONDITION) != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NDUxNg=="}, "originalCommit": {"oid": "f72f6504799036868a81813629ffa14f3202d25b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjI4MTY0OnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/IssueTypeToHttpStatusMapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODozNjoxOFrOFu3UVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDoxNzo1NVrOFu6uzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NTE0MQ==", "bodyText": "any reason to 'lock' it down?", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r384685141", "createdAt": "2020-02-26T18:36:18Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/IssueTypeToHttpStatusMapper.java", "diffHunk": "@@ -36,15 +43,20 @@\n             for (Issue issue : issues) {\n                 IssueType code = issue.getCode();\n                 if (code != null && code.getValue() != null) {\n-                    return issueTypeToResponseCode(IssueType.ValueSet.from(code.getValue()));\n+                    ValueSet issueType = IssueType.ValueSet.from(code.getValue());\n+                    // Special case for IssueType CONFLICT which can be either an HTTP 409 (Conflict) or HTTP 412 (Precondition failed)\n+                    if (issueType == IssueType.ValueSet.CONFLICT &&\n+                            FHIRUtil.getExtensionStringValue(code, EXTENSION_URL_HTTP_FAILED_PRECONDITION) != null) {\n+                        return Status.PRECONDITION_FAILED;\n+                    }\n+                    return issueTypeToResponseCode(issueType);\n                 }\n             }\n         }\n-        \n         return Status.INTERNAL_SERVER_ERROR;\n     }\n     \n-    public static Status issueTypeToResponseCode(IssueType.ValueSet value) {\n+    private static Status issueTypeToResponseCode(IssueType.ValueSet value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72f6504799036868a81813629ffa14f3202d25b"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc0MTA3MQ==", "bodyText": "I added special logic into the other method (which calls this one).  If you called this one directly (e.g. by accident) then you'd miss out on that new logic.", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r384741071", "createdAt": "2020-02-26T20:17:55Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/IssueTypeToHttpStatusMapper.java", "diffHunk": "@@ -36,15 +43,20 @@\n             for (Issue issue : issues) {\n                 IssueType code = issue.getCode();\n                 if (code != null && code.getValue() != null) {\n-                    return issueTypeToResponseCode(IssueType.ValueSet.from(code.getValue()));\n+                    ValueSet issueType = IssueType.ValueSet.from(code.getValue());\n+                    // Special case for IssueType CONFLICT which can be either an HTTP 409 (Conflict) or HTTP 412 (Precondition failed)\n+                    if (issueType == IssueType.ValueSet.CONFLICT &&\n+                            FHIRUtil.getExtensionStringValue(code, EXTENSION_URL_HTTP_FAILED_PRECONDITION) != null) {\n+                        return Status.PRECONDITION_FAILED;\n+                    }\n+                    return issueTypeToResponseCode(issueType);\n                 }\n             }\n         }\n-        \n         return Status.INTERNAL_SERVER_ERROR;\n     }\n     \n-    public static Status issueTypeToResponseCode(IssueType.ValueSet value) {\n+    private static Status issueTypeToResponseCode(IssueType.ValueSet value) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NTE0MQ=="}, "originalCommit": {"oid": "f72f6504799036868a81813629ffa14f3202d25b"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjI4NTE5OnYy", "diffSide": "RIGHT", "path": "fhir-server-test/src/test/java/com/ibm/fhir/server/test/ServerSpecTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODozNzoyOVrOFu3WcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDozNzozM1rOFu7UVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NTY4MA==", "bodyText": "Confirming... this changed due to the IssueType mapping", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r384685680", "createdAt": "2020-02-26T18:37:29Z", "author": {"login": "prb112"}, "path": "fhir-server-test/src/test/java/com/ibm/fhir/server/test/ServerSpecTest.java", "diffHunk": "@@ -299,7 +299,7 @@ public void testUpdatePatientVersionAwareError3() throws Exception {\n                         .request()\n                         .header(\"If-Match\", ifMatchValue)\n                         .put(entity, Response.class);\n-        assertResponse(response, Response.Status.CONFLICT.getStatusCode());\n+        assertResponse(response, Response.Status.PRECONDITION_FAILED.getStatusCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72f6504799036868a81813629ffa14f3202d25b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc0MjA5Nw==", "bodyText": "actually, I broke the test on accident, by following the spec instead of the current behavior.\nfrom https://www.hl7.org/fhir/http.html#concurrency\n\nIf the version id given in the If-Match header does not match, the server returns a 412 Precondition Failed status code instead of updating the resource.\n\nso i think it was a bug in our current impl and I'm HOPING fixing that doesn't break our touchstone results.", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r384742097", "createdAt": "2020-02-26T20:20:11Z", "author": {"login": "lmsurpre"}, "path": "fhir-server-test/src/test/java/com/ibm/fhir/server/test/ServerSpecTest.java", "diffHunk": "@@ -299,7 +299,7 @@ public void testUpdatePatientVersionAwareError3() throws Exception {\n                         .request()\n                         .header(\"If-Match\", ifMatchValue)\n                         .put(entity, Response.class);\n-        assertResponse(response, Response.Status.CONFLICT.getStatusCode());\n+        assertResponse(response, Response.Status.PRECONDITION_FAILED.getStatusCode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NTY4MA=="}, "originalCommit": {"oid": "f72f6504799036868a81813629ffa14f3202d25b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc0MjI3Ng==", "bodyText": "P.S. let me know if you think i should open a separate issue for it", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r384742276", "createdAt": "2020-02-26T20:20:30Z", "author": {"login": "lmsurpre"}, "path": "fhir-server-test/src/test/java/com/ibm/fhir/server/test/ServerSpecTest.java", "diffHunk": "@@ -299,7 +299,7 @@ public void testUpdatePatientVersionAwareError3() throws Exception {\n                         .request()\n                         .header(\"If-Match\", ifMatchValue)\n                         .put(entity, Response.class);\n-        assertResponse(response, Response.Status.CONFLICT.getStatusCode());\n+        assertResponse(response, Response.Status.PRECONDITION_FAILED.getStatusCode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NTY4MA=="}, "originalCommit": {"oid": "f72f6504799036868a81813629ffa14f3202d25b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1MDY3Nw==", "bodyText": "small... small... suggestion, add the comment to the issue, these are harder to find in the PRs.\nif it's in the issue, at least we can search on it (and I'm suggesting adding to the issue related to this PR only)", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r384750677", "createdAt": "2020-02-26T20:37:33Z", "author": {"login": "prb112"}, "path": "fhir-server-test/src/test/java/com/ibm/fhir/server/test/ServerSpecTest.java", "diffHunk": "@@ -299,7 +299,7 @@ public void testUpdatePatientVersionAwareError3() throws Exception {\n                         .request()\n                         .header(\"If-Match\", ifMatchValue)\n                         .put(entity, Response.class);\n-        assertResponse(response, Response.Status.CONFLICT.getStatusCode());\n+        assertResponse(response, Response.Status.PRECONDITION_FAILED.getStatusCode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NTY4MA=="}, "originalCommit": {"oid": "f72f6504799036868a81813629ffa14f3202d25b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjI5MTEyOnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODozOToxMlrOFu3aGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDozNjoxN1rOFu7SBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NjYxNg==", "bodyText": "do you need the capabilityStatement instance? immediately responding with it seems preferred", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r384686616", "createdAt": "2020-02-26T18:39:12Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -249,23 +249,21 @@ public FHIRResource() throws Exception {\n     public Response metadata() throws ClassNotFoundException {\n         log.entering(this.getClass().getName(), \"metadata()\");\n         Date startTime = new Date();\n-        Response.Status status = Response.Status.INTERNAL_SERVER_ERROR;\n         String errMsg = \"Caught exception while processing 'metadata' request.\";\n \n         try {\n             checkInitComplete();\n \n-            status = Response.Status.OK;\n-            RestAuditLogger.logMetadata(httpServletRequest, startTime, new Date(), status);\n+            CapabilityStatement capabilityStatement = getCapabilityStatement();\n+            RestAuditLogger.logMetadata(httpServletRequest, startTime, new Date(), Response.Status.OK);\n \n-            return Response.ok().entity(getCapabilityStatement()).build();\n-        } catch (FHIRHttpException e) {\n+            return Response.ok().entity(capabilityStatement).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72f6504799036868a81813629ffa14f3202d25b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc0MzI3NQ==", "bodyText": "I forget why I split it out...maybe I thought I was going to use it but then never did.  I can revert that part of the change and call it inline if you prefer.", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r384743275", "createdAt": "2020-02-26T20:22:36Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -249,23 +249,21 @@ public FHIRResource() throws Exception {\n     public Response metadata() throws ClassNotFoundException {\n         log.entering(this.getClass().getName(), \"metadata()\");\n         Date startTime = new Date();\n-        Response.Status status = Response.Status.INTERNAL_SERVER_ERROR;\n         String errMsg = \"Caught exception while processing 'metadata' request.\";\n \n         try {\n             checkInitComplete();\n \n-            status = Response.Status.OK;\n-            RestAuditLogger.logMetadata(httpServletRequest, startTime, new Date(), status);\n+            CapabilityStatement capabilityStatement = getCapabilityStatement();\n+            RestAuditLogger.logMetadata(httpServletRequest, startTime, new Date(), Response.Status.OK);\n \n-            return Response.ok().entity(getCapabilityStatement()).build();\n-        } catch (FHIRHttpException e) {\n+            return Response.ok().entity(capabilityStatement).build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NjYxNg=="}, "originalCommit": {"oid": "f72f6504799036868a81813629ffa14f3202d25b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc0Mzg4Ng==", "bodyText": "In general, I'd love to start caching this, maybe on a per-tenant basis....our calls to metadata take a long time and it shouldn't change unless someone updates the config...\nI just opened #734 for that.", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r384743886", "createdAt": "2020-02-26T20:23:53Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -249,23 +249,21 @@ public FHIRResource() throws Exception {\n     public Response metadata() throws ClassNotFoundException {\n         log.entering(this.getClass().getName(), \"metadata()\");\n         Date startTime = new Date();\n-        Response.Status status = Response.Status.INTERNAL_SERVER_ERROR;\n         String errMsg = \"Caught exception while processing 'metadata' request.\";\n \n         try {\n             checkInitComplete();\n \n-            status = Response.Status.OK;\n-            RestAuditLogger.logMetadata(httpServletRequest, startTime, new Date(), status);\n+            CapabilityStatement capabilityStatement = getCapabilityStatement();\n+            RestAuditLogger.logMetadata(httpServletRequest, startTime, new Date(), Response.Status.OK);\n \n-            return Response.ok().entity(getCapabilityStatement()).build();\n-        } catch (FHIRHttpException e) {\n+            return Response.ok().entity(capabilityStatement).build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NjYxNg=="}, "originalCommit": {"oid": "f72f6504799036868a81813629ffa14f3202d25b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1MDA4Ng==", "bodyText": "no need to revert, I wanted to confirm the intent.  I didn't know if there was a side effect", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r384750086", "createdAt": "2020-02-26T20:36:17Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -249,23 +249,21 @@ public FHIRResource() throws Exception {\n     public Response metadata() throws ClassNotFoundException {\n         log.entering(this.getClass().getName(), \"metadata()\");\n         Date startTime = new Date();\n-        Response.Status status = Response.Status.INTERNAL_SERVER_ERROR;\n         String errMsg = \"Caught exception while processing 'metadata' request.\";\n \n         try {\n             checkInitComplete();\n \n-            status = Response.Status.OK;\n-            RestAuditLogger.logMetadata(httpServletRequest, startTime, new Date(), status);\n+            CapabilityStatement capabilityStatement = getCapabilityStatement();\n+            RestAuditLogger.logMetadata(httpServletRequest, startTime, new Date(), Response.Status.OK);\n \n-            return Response.ok().entity(getCapabilityStatement()).build();\n-        } catch (FHIRHttpException e) {\n+            return Response.ok().entity(capabilityStatement).build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NjYxNg=="}, "originalCommit": {"oid": "f72f6504799036868a81813629ffa14f3202d25b"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjI5ODg3OnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODo0MTozN1rOFu3fJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODo0MTozN1rOFu3fJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4NzkxMA==", "bodyText": "very helpful comment", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r384687910", "createdAt": "2020-02-26T18:41:37Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/FHIRResource.java", "diffHunk": "@@ -673,9 +645,8 @@ public Response delete(@PathParam(\"type\") String type, @PathParam(\"id\") String i\n                 response = addHeaders(response, ior.getResource());\n             }\n             return response.build();\n-        } catch (FHIRHttpException e) {\n-            return exceptionResponse(e);\n         } catch (FHIRPersistenceResourceNotFoundException e) {\n+            // Overwrite the exception response status because we want NOT_FOUND to be success for delete", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72f6504799036868a81813629ffa14f3202d25b"}, "originalPosition": 211}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Mjk5OTQ0OnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/IssueTypeToHttpStatusMapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjowOTowMVrOFu-Kwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDo1NzozNlrOFvUy-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5NzM3OA==", "bodyText": "Should this use the new getValueAsEnumConstant method?", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r384797378", "createdAt": "2020-02-26T22:09:01Z", "author": {"login": "JohnTimm"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/IssueTypeToHttpStatusMapper.java", "diffHunk": "@@ -36,15 +43,20 @@\n             for (Issue issue : issues) {\n                 IssueType code = issue.getCode();\n                 if (code != null && code.getValue() != null) {\n-                    return issueTypeToResponseCode(IssueType.ValueSet.from(code.getValue()));\n+                    ValueSet issueType = IssueType.ValueSet.from(code.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72f6504799036868a81813629ffa14f3202d25b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2ODEyMw==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r385168123", "createdAt": "2020-02-27T14:57:36Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/IssueTypeToHttpStatusMapper.java", "diffHunk": "@@ -36,15 +43,20 @@\n             for (Issue issue : issues) {\n                 IssueType code = issue.getCode();\n                 if (code != null && code.getValue() != null) {\n-                    return issueTypeToResponseCode(IssueType.ValueSet.from(code.getValue()));\n+                    ValueSet issueType = IssueType.ValueSet.from(code.getValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5NzM3OA=="}, "originalCommit": {"oid": "f72f6504799036868a81813629ffa14f3202d25b"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTA3NDQwOnYy", "diffSide": "RIGHT", "path": "fhir-model/src/main/java/com/ibm/fhir/model/util/FHIRUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTo1MzowNVrOFxURNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDoyNDo1OVrOFxVRJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI1NjYyOQ==", "bodyText": "Essentially 460 is duplicate - just a different origin.  Perhaps refactor into an intermediate method.", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r387256629", "createdAt": "2020-03-03T19:53:05Z", "author": {"login": "prb112"}, "path": "fhir-model/src/main/java/com/ibm/fhir/model/util/FHIRUtil.java", "diffHunk": "@@ -433,7 +438,8 @@ public static String getExtensionStringValue(Resource resource, String extension\n             if (DomainResource.class.isAssignableFrom(resource.getClass())) {\n                 DomainResource dr = (DomainResource) resource;\n                 for (Extension ext : dr.getExtension()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc1a6d23df1ea8840e589d76a975a57132a7752f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3Mjk5OQ==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r387272999", "createdAt": "2020-03-03T20:24:59Z", "author": {"login": "lmsurpre"}, "path": "fhir-model/src/main/java/com/ibm/fhir/model/util/FHIRUtil.java", "diffHunk": "@@ -433,7 +438,8 @@ public static String getExtensionStringValue(Resource resource, String extension\n             if (DomainResource.class.isAssignableFrom(resource.getClass())) {\n                 DomainResource dr = (DomainResource) resource;\n                 for (Extension ext : dr.getExtension()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI1NjYyOQ=="}, "originalCommit": {"oid": "dc1a6d23df1ea8840e589d76a975a57132a7752f"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTA3ODQ4OnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/exception/FHIRRestBundledRequestException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTo1NDoxMVrOFxUTkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTo1NDoxMVrOFxUTkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI1NzIzNA==", "bodyText": "Please update copyright", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r387257234", "createdAt": "2020-03-03T19:54:11Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/exception/FHIRRestBundledRequestException.java", "diffHunk": "@@ -6,14 +6,10 @@\n \n package com.ibm.fhir.server.exception;\n \n-import java.util.Collection;\n-\n-import javax.ws.rs.core.Response.Status;\n-\n+import com.ibm.fhir.exception.FHIROperationException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc1a6d23df1ea8840e589d76a975a57132a7752f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTA3OTkwOnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/IssueTypeToHttpStatusMapper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTo1NDo0MlrOFxUUhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxOTo1NDo0MlrOFxUUhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI1NzQ3Nw==", "bodyText": "please update copyright", "url": "https://github.com/IBM/FHIR/pull/731#discussion_r387257477", "createdAt": "2020-03-03T19:54:42Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/util/IssueTypeToHttpStatusMapper.java", "diffHunk": "@@ -14,8 +14,20 @@\n import com.ibm.fhir.model.resource.OperationOutcome;\n import com.ibm.fhir.model.resource.OperationOutcome.Issue;\n import com.ibm.fhir.model.type.code.IssueType;\n+import com.ibm.fhir.model.util.FHIRUtil;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc1a6d23df1ea8840e589d76a975a57132a7752f"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 269, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}