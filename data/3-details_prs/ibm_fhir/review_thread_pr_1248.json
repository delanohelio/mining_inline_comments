{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MTg0MTU0", "number": 1248, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjoxOTowMlrOEHK6Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjoxOTowMlrOEHK6Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTU0MTk5OnYy", "diffSide": "RIGHT", "path": "fhir-audit/src/main/java/com/ibm/fhir/audit/logging/impl/WhcAuditCadfLogService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjoxOTowMlrOGmaZow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjoxOTowMlrOGmaZow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkzMTYxOQ==", "bodyText": "definitely just a style preference, but maybe change to equalsIgnoreCase while we're touching it?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            && logEntry.getContext().getOperationName().compareToIgnoreCase(HEALTHCHECKOP) == 0)) {\n          \n          \n            \n                            && logEntry.getContext().getOperationName().equalsIgnoreCase(HEALTHCHECKOP))) {", "url": "https://github.com/IBM/FHIR/pull/1248#discussion_r442931619", "createdAt": "2020-06-19T16:19:02Z", "author": {"login": "lmsurpre"}, "path": "fhir-audit/src/main/java/com/ibm/fhir/audit/logging/impl/WhcAuditCadfLogService.java", "diffHunk": "@@ -157,10 +157,10 @@ public void logEntry(AuditLogEntry logEntry) throws Exception {\n         final String METHODNAME = \"logEntry\";\n         logger.entering(CLASSNAME, METHODNAME);\n \n-        // skip healthcheck and other bad operations\n+        // skip healthcheck operation\n         if (logEntry == null || logEntry.getContext() == null\n-                || logEntry.getContext().getOperationName() == null\n-                || logEntry.getContext().getOperationName().compareToIgnoreCase(HEALTHCHECKOP) == 0) {\n+                || (logEntry.getContext().getOperationName() != null\n+                && logEntry.getContext().getOperationName().compareToIgnoreCase(HEALTHCHECKOP) == 0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4a9b3679c9f38d3b5d9b10d8ed4c161e5c45d1"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4898, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}