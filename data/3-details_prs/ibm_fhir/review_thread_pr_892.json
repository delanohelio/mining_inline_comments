{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MTU4NjY0", "number": 892, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoyNTo0NVrODuc2CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjo0OTozMlrODudYBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDMzNjcyOnYy", "diffSide": "RIGHT", "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoyNTo0NVrOGAc5rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoyNTo0NVrOGAc5rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEyNjcwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. \n          \n          \n            \n                  - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>`.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**.", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403126703", "createdAt": "2020-04-03T16:25:45Z", "author": {"login": "lmsurpre"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDM0MzUyOnYy", "diffSide": "RIGHT", "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoyNzoyNFrOGAc9wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNzozMDoxOFrOGAfzVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEyNzc0Ng==", "bodyText": "The cpu/memory can be scaled up or down, but the storage can only go up (no scaling down storage).  Probably worth mentioning.", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403127746", "createdAt": "2020-04-03T16:27:24Z", "author": {"login": "lmsurpre"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. \n+      \n+1. Create `Create`\n \n-You can use the Lite plan for development or evaluation workloads. This plan has a limit of 5 concurrent connections; the IBM FHIR server connection-pool needs to be sized accordingly to avoid failures.\n+Your instance is now creating or created.\n \n-### Scale the Instance\n+### **Scale the Instance**\n \n-If you chose Flex, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Scaling the instance requires a service restart.\n+If you chose the Flex plan, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Please note, the scaling of the instance requires a service restart.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE3NDIyOQ==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403174229", "createdAt": "2020-04-03T17:30:18Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. \n+      \n+1. Create `Create`\n \n-You can use the Lite plan for development or evaluation workloads. This plan has a limit of 5 concurrent connections; the IBM FHIR server connection-pool needs to be sized accordingly to avoid failures.\n+Your instance is now creating or created.\n \n-### Scale the Instance\n+### **Scale the Instance**\n \n-If you chose Flex, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Scaling the instance requires a service restart.\n+If you chose the Flex plan, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Please note, the scaling of the instance requires a service restart.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEyNzc0Ng=="}, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDM1NDY3OnYy", "diffSide": "RIGHT", "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjozMDozN1rOGAdFHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjozMDozN1rOGAdFHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEyOTYyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This **BLUADMIN** user is used to deploy the schema objects (tables, indexes, stored procedures etc) only. \n          \n          \n            \n            For improved security, the **BLUADMIN** user should only be used to deploy the schema objects (tables, indexes, stored procedures etc) and administer the database, NOT for connecting from the fhir-server application.", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403129628", "createdAt": "2020-04-03T16:30:37Z", "author": {"login": "lmsurpre"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. \n+      \n+1. Create `Create`\n \n-You can use the Lite plan for development or evaluation workloads. This plan has a limit of 5 concurrent connections; the IBM FHIR server connection-pool needs to be sized accordingly to avoid failures.\n+Your instance is now creating or created.\n \n-### Scale the Instance\n+### **Scale the Instance**\n \n-If you chose Flex, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Scaling the instance requires a service restart.\n+If you chose the Flex plan, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Please note, the scaling of the instance requires a service restart.\n \n-### Create the Administrator Credential\n+### **Create the Administrator Credential**\n \n-The administrator will be BLUADMIN but you need to create a credential. Open the `Service credentials` panel for the Db2 instance resource you just created. If you don't yet have any service credentials in the table at the bottom of the page, create a new one by clicking the `New credential (+)` button. Any name will do.\n+The administrator is `BLUADMIN` but you need to create a credential. \n \n-To access the credential, select View Credentials for the entry you just created. The result will be a block of JSON full of secrets (blanked out here):\n+1. Navigate to the Db2 instance you created. \n \n-``` json\n-{\n-  \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n-  \"password\": \"bluadmin-password-very-secret\",\n-  \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n-  \"port\": 50000,\n-  \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n-  \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n-  \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"db\": \"BLUDB\",\n-  \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n-  \"username\": \"bluadmin\",\n-  \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n-}\n-```\n+1. Click on the `Service credentials` panel. \n+    - If the list of service credentials is empty, create a new one.\n+        1. Click `New credential (+)`\n+        1. Enter the Name. Any name works for example, `ibm-fhir-server-db2`.\n+        1. Click Add\n \n-These properties are needed to deploy and manage the IBM FHIR Server schema.\n+1. Access the credential, select View Credentials. The entry you just created looks like the following block of JSON(the secrets are blanked out here):\n \n+    ``` json\n+    {\n+        \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n+        \"password\": \"bluadmin-password-very-secret\",\n+        \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n+        \"port\": 50000,\n+        \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n+        \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n+        \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"db\": \"BLUDB\",\n+        \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n+        \"username\": \"bluadmin\",\n+        \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n+    }\n+    ```\n \n-### FHIRSERVER User and API Key\n+4. Save these details for later, as these properties are needed to deploy and manage the IBM FHIR Server schema.\n \n-The **BLUADMIN** user is used to deploy the initial schema objects (tables, indexes, stored procedures etc). Following the least-privilege principle, the FHIR server itself does not use **BLUADMIN**. The FHIR server uses an API Key associated with an IAM Service Id. This Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n+This **BLUADMIN** user is used to deploy the schema objects (tables, indexes, stored procedures etc) only. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDM3NDY0OnYy", "diffSide": "RIGHT", "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjozNTozOFrOGAdReg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNzoyOTowNVrOGAfvUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzMjc5NA==", "bodyText": "We don't do this.  We use the apikey to connect to db2.  Db2 validates the apikey itself.  This is why we set \"securityMechanism\": 15 in the connection properties in fhir-server-config.json", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403132794", "createdAt": "2020-04-03T16:35:38Z", "author": {"login": "lmsurpre"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. \n+      \n+1. Create `Create`\n \n-You can use the Lite plan for development or evaluation workloads. This plan has a limit of 5 concurrent connections; the IBM FHIR server connection-pool needs to be sized accordingly to avoid failures.\n+Your instance is now creating or created.\n \n-### Scale the Instance\n+### **Scale the Instance**\n \n-If you chose Flex, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Scaling the instance requires a service restart.\n+If you chose the Flex plan, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Please note, the scaling of the instance requires a service restart.\n \n-### Create the Administrator Credential\n+### **Create the Administrator Credential**\n \n-The administrator will be BLUADMIN but you need to create a credential. Open the `Service credentials` panel for the Db2 instance resource you just created. If you don't yet have any service credentials in the table at the bottom of the page, create a new one by clicking the `New credential (+)` button. Any name will do.\n+The administrator is `BLUADMIN` but you need to create a credential. \n \n-To access the credential, select View Credentials for the entry you just created. The result will be a block of JSON full of secrets (blanked out here):\n+1. Navigate to the Db2 instance you created. \n \n-``` json\n-{\n-  \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n-  \"password\": \"bluadmin-password-very-secret\",\n-  \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n-  \"port\": 50000,\n-  \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n-  \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n-  \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"db\": \"BLUDB\",\n-  \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n-  \"username\": \"bluadmin\",\n-  \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n-}\n-```\n+1. Click on the `Service credentials` panel. \n+    - If the list of service credentials is empty, create a new one.\n+        1. Click `New credential (+)`\n+        1. Enter the Name. Any name works for example, `ibm-fhir-server-db2`.\n+        1. Click Add\n \n-These properties are needed to deploy and manage the IBM FHIR Server schema.\n+1. Access the credential, select View Credentials. The entry you just created looks like the following block of JSON(the secrets are blanked out here):\n \n+    ``` json\n+    {\n+        \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n+        \"password\": \"bluadmin-password-very-secret\",\n+        \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n+        \"port\": 50000,\n+        \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n+        \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n+        \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"db\": \"BLUDB\",\n+        \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n+        \"username\": \"bluadmin\",\n+        \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n+    }\n+    ```\n \n-### FHIRSERVER User and API Key\n+4. Save these details for later, as these properties are needed to deploy and manage the IBM FHIR Server schema.\n \n-The **BLUADMIN** user is used to deploy the initial schema objects (tables, indexes, stored procedures etc). Following the least-privilege principle, the FHIR server itself does not use **BLUADMIN**. The FHIR server uses an API Key associated with an IAM Service Id. This Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n+This **BLUADMIN** user is used to deploy the schema objects (tables, indexes, stored procedures etc) only. \n \n-```\n-    API KEY -------> Service Id -------> DB2 User ------> SELECT/UPDATE/EXECUTE etc Privileges\n- (FHIR Config)          (IAM)              (DB2)                          (DB2)\n-```\n+### **Add the FHIRSERVER User and API Key**\n \n-On the IBM Cloud console, select Manage / Access (IAM).\n+Following the least-privilege principle, the IBM FHIR server itself does not use **BLUADMIN**. The IBM FHIR server uses an API Key associated with an [IAM Service Id](https://cloud.ibm.com/iam/serviceids). The IAM Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n \n-Select the [Service IDs panel](https://cloud.ibm.com/iam/serviceids).\n+The IBM FHIR Server uses the access flow: \n \n-Wait for the table to populate. If you do not yet have an appropriate service id, click `Create (+)`\n+1. Read API Key from the fhir-server-config.json\n+2. Connect to IAM which maps the ServiceId to a Db2 User", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzMzYzNQ==", "bodyText": "let me clarify ... the blob of text depicting the flow wasn't well described.", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403133635", "createdAt": "2020-04-03T16:37:09Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. \n+      \n+1. Create `Create`\n \n-You can use the Lite plan for development or evaluation workloads. This plan has a limit of 5 concurrent connections; the IBM FHIR server connection-pool needs to be sized accordingly to avoid failures.\n+Your instance is now creating or created.\n \n-### Scale the Instance\n+### **Scale the Instance**\n \n-If you chose Flex, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Scaling the instance requires a service restart.\n+If you chose the Flex plan, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Please note, the scaling of the instance requires a service restart.\n \n-### Create the Administrator Credential\n+### **Create the Administrator Credential**\n \n-The administrator will be BLUADMIN but you need to create a credential. Open the `Service credentials` panel for the Db2 instance resource you just created. If you don't yet have any service credentials in the table at the bottom of the page, create a new one by clicking the `New credential (+)` button. Any name will do.\n+The administrator is `BLUADMIN` but you need to create a credential. \n \n-To access the credential, select View Credentials for the entry you just created. The result will be a block of JSON full of secrets (blanked out here):\n+1. Navigate to the Db2 instance you created. \n \n-``` json\n-{\n-  \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n-  \"password\": \"bluadmin-password-very-secret\",\n-  \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n-  \"port\": 50000,\n-  \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n-  \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n-  \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"db\": \"BLUDB\",\n-  \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n-  \"username\": \"bluadmin\",\n-  \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n-}\n-```\n+1. Click on the `Service credentials` panel. \n+    - If the list of service credentials is empty, create a new one.\n+        1. Click `New credential (+)`\n+        1. Enter the Name. Any name works for example, `ibm-fhir-server-db2`.\n+        1. Click Add\n \n-These properties are needed to deploy and manage the IBM FHIR Server schema.\n+1. Access the credential, select View Credentials. The entry you just created looks like the following block of JSON(the secrets are blanked out here):\n \n+    ``` json\n+    {\n+        \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n+        \"password\": \"bluadmin-password-very-secret\",\n+        \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n+        \"port\": 50000,\n+        \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n+        \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n+        \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"db\": \"BLUDB\",\n+        \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n+        \"username\": \"bluadmin\",\n+        \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n+    }\n+    ```\n \n-### FHIRSERVER User and API Key\n+4. Save these details for later, as these properties are needed to deploy and manage the IBM FHIR Server schema.\n \n-The **BLUADMIN** user is used to deploy the initial schema objects (tables, indexes, stored procedures etc). Following the least-privilege principle, the FHIR server itself does not use **BLUADMIN**. The FHIR server uses an API Key associated with an IAM Service Id. This Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n+This **BLUADMIN** user is used to deploy the schema objects (tables, indexes, stored procedures etc) only. \n \n-```\n-    API KEY -------> Service Id -------> DB2 User ------> SELECT/UPDATE/EXECUTE etc Privileges\n- (FHIR Config)          (IAM)              (DB2)                          (DB2)\n-```\n+### **Add the FHIRSERVER User and API Key**\n \n-On the IBM Cloud console, select Manage / Access (IAM).\n+Following the least-privilege principle, the IBM FHIR server itself does not use **BLUADMIN**. The IBM FHIR server uses an API Key associated with an [IAM Service Id](https://cloud.ibm.com/iam/serviceids). The IAM Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n \n-Select the [Service IDs panel](https://cloud.ibm.com/iam/serviceids).\n+The IBM FHIR Server uses the access flow: \n \n-Wait for the table to populate. If you do not yet have an appropriate service id, click `Create (+)`\n+1. Read API Key from the fhir-server-config.json\n+2. Connect to IAM which maps the ServiceId to a Db2 User", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzMjc5NA=="}, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE3MzIwMg==", "bodyText": "Expanded/Clarified", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403173202", "createdAt": "2020-04-03T17:29:05Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. \n+      \n+1. Create `Create`\n \n-You can use the Lite plan for development or evaluation workloads. This plan has a limit of 5 concurrent connections; the IBM FHIR server connection-pool needs to be sized accordingly to avoid failures.\n+Your instance is now creating or created.\n \n-### Scale the Instance\n+### **Scale the Instance**\n \n-If you chose Flex, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Scaling the instance requires a service restart.\n+If you chose the Flex plan, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Please note, the scaling of the instance requires a service restart.\n \n-### Create the Administrator Credential\n+### **Create the Administrator Credential**\n \n-The administrator will be BLUADMIN but you need to create a credential. Open the `Service credentials` panel for the Db2 instance resource you just created. If you don't yet have any service credentials in the table at the bottom of the page, create a new one by clicking the `New credential (+)` button. Any name will do.\n+The administrator is `BLUADMIN` but you need to create a credential. \n \n-To access the credential, select View Credentials for the entry you just created. The result will be a block of JSON full of secrets (blanked out here):\n+1. Navigate to the Db2 instance you created. \n \n-``` json\n-{\n-  \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n-  \"password\": \"bluadmin-password-very-secret\",\n-  \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n-  \"port\": 50000,\n-  \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n-  \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n-  \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"db\": \"BLUDB\",\n-  \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n-  \"username\": \"bluadmin\",\n-  \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n-}\n-```\n+1. Click on the `Service credentials` panel. \n+    - If the list of service credentials is empty, create a new one.\n+        1. Click `New credential (+)`\n+        1. Enter the Name. Any name works for example, `ibm-fhir-server-db2`.\n+        1. Click Add\n \n-These properties are needed to deploy and manage the IBM FHIR Server schema.\n+1. Access the credential, select View Credentials. The entry you just created looks like the following block of JSON(the secrets are blanked out here):\n \n+    ``` json\n+    {\n+        \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n+        \"password\": \"bluadmin-password-very-secret\",\n+        \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n+        \"port\": 50000,\n+        \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n+        \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n+        \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"db\": \"BLUDB\",\n+        \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n+        \"username\": \"bluadmin\",\n+        \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n+    }\n+    ```\n \n-### FHIRSERVER User and API Key\n+4. Save these details for later, as these properties are needed to deploy and manage the IBM FHIR Server schema.\n \n-The **BLUADMIN** user is used to deploy the initial schema objects (tables, indexes, stored procedures etc). Following the least-privilege principle, the FHIR server itself does not use **BLUADMIN**. The FHIR server uses an API Key associated with an IAM Service Id. This Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n+This **BLUADMIN** user is used to deploy the schema objects (tables, indexes, stored procedures etc) only. \n \n-```\n-    API KEY -------> Service Id -------> DB2 User ------> SELECT/UPDATE/EXECUTE etc Privileges\n- (FHIR Config)          (IAM)              (DB2)                          (DB2)\n-```\n+### **Add the FHIRSERVER User and API Key**\n \n-On the IBM Cloud console, select Manage / Access (IAM).\n+Following the least-privilege principle, the IBM FHIR server itself does not use **BLUADMIN**. The IBM FHIR server uses an API Key associated with an [IAM Service Id](https://cloud.ibm.com/iam/serviceids). The IAM Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n \n-Select the [Service IDs panel](https://cloud.ibm.com/iam/serviceids).\n+The IBM FHIR Server uses the access flow: \n \n-Wait for the table to populate. If you do not yet have an appropriate service id, click `Create (+)`\n+1. Read API Key from the fhir-server-config.json\n+2. Connect to IAM which maps the ServiceId to a Db2 User", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzMjc5NA=="}, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDM3NjU2OnYy", "diffSide": "RIGHT", "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjozNjowOVrOGAdSpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNzoyNzoxOFrOGAfpGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzMzA5NA==", "bodyText": "worth mentioning the tenantKey here as well?", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403133094", "createdAt": "2020-04-03T16:36:09Z", "author": {"login": "lmsurpre"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. \n+      \n+1. Create `Create`\n \n-You can use the Lite plan for development or evaluation workloads. This plan has a limit of 5 concurrent connections; the IBM FHIR server connection-pool needs to be sized accordingly to avoid failures.\n+Your instance is now creating or created.\n \n-### Scale the Instance\n+### **Scale the Instance**\n \n-If you chose Flex, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Scaling the instance requires a service restart.\n+If you chose the Flex plan, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Please note, the scaling of the instance requires a service restart.\n \n-### Create the Administrator Credential\n+### **Create the Administrator Credential**\n \n-The administrator will be BLUADMIN but you need to create a credential. Open the `Service credentials` panel for the Db2 instance resource you just created. If you don't yet have any service credentials in the table at the bottom of the page, create a new one by clicking the `New credential (+)` button. Any name will do.\n+The administrator is `BLUADMIN` but you need to create a credential. \n \n-To access the credential, select View Credentials for the entry you just created. The result will be a block of JSON full of secrets (blanked out here):\n+1. Navigate to the Db2 instance you created. \n \n-``` json\n-{\n-  \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n-  \"password\": \"bluadmin-password-very-secret\",\n-  \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n-  \"port\": 50000,\n-  \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n-  \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n-  \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"db\": \"BLUDB\",\n-  \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n-  \"username\": \"bluadmin\",\n-  \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n-}\n-```\n+1. Click on the `Service credentials` panel. \n+    - If the list of service credentials is empty, create a new one.\n+        1. Click `New credential (+)`\n+        1. Enter the Name. Any name works for example, `ibm-fhir-server-db2`.\n+        1. Click Add\n \n-These properties are needed to deploy and manage the IBM FHIR Server schema.\n+1. Access the credential, select View Credentials. The entry you just created looks like the following block of JSON(the secrets are blanked out here):\n \n+    ``` json\n+    {\n+        \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n+        \"password\": \"bluadmin-password-very-secret\",\n+        \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n+        \"port\": 50000,\n+        \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n+        \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n+        \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"db\": \"BLUDB\",\n+        \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n+        \"username\": \"bluadmin\",\n+        \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n+    }\n+    ```\n \n-### FHIRSERVER User and API Key\n+4. Save these details for later, as these properties are needed to deploy and manage the IBM FHIR Server schema.\n \n-The **BLUADMIN** user is used to deploy the initial schema objects (tables, indexes, stored procedures etc). Following the least-privilege principle, the FHIR server itself does not use **BLUADMIN**. The FHIR server uses an API Key associated with an IAM Service Id. This Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n+This **BLUADMIN** user is used to deploy the schema objects (tables, indexes, stored procedures etc) only. \n \n-```\n-    API KEY -------> Service Id -------> DB2 User ------> SELECT/UPDATE/EXECUTE etc Privileges\n- (FHIR Config)          (IAM)              (DB2)                          (DB2)\n-```\n+### **Add the FHIRSERVER User and API Key**\n \n-On the IBM Cloud console, select Manage / Access (IAM).\n+Following the least-privilege principle, the IBM FHIR server itself does not use **BLUADMIN**. The IBM FHIR server uses an API Key associated with an [IAM Service Id](https://cloud.ibm.com/iam/serviceids). The IAM Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n \n-Select the [Service IDs panel](https://cloud.ibm.com/iam/serviceids).\n+The IBM FHIR Server uses the access flow: \n \n-Wait for the table to populate. If you do not yet have an appropriate service id, click `Create (+)`\n+1. Read API Key from the fhir-server-config.json", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE3MTYwOQ==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403171609", "createdAt": "2020-04-03T17:27:18Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. \n+      \n+1. Create `Create`\n \n-You can use the Lite plan for development or evaluation workloads. This plan has a limit of 5 concurrent connections; the IBM FHIR server connection-pool needs to be sized accordingly to avoid failures.\n+Your instance is now creating or created.\n \n-### Scale the Instance\n+### **Scale the Instance**\n \n-If you chose Flex, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Scaling the instance requires a service restart.\n+If you chose the Flex plan, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Please note, the scaling of the instance requires a service restart.\n \n-### Create the Administrator Credential\n+### **Create the Administrator Credential**\n \n-The administrator will be BLUADMIN but you need to create a credential. Open the `Service credentials` panel for the Db2 instance resource you just created. If you don't yet have any service credentials in the table at the bottom of the page, create a new one by clicking the `New credential (+)` button. Any name will do.\n+The administrator is `BLUADMIN` but you need to create a credential. \n \n-To access the credential, select View Credentials for the entry you just created. The result will be a block of JSON full of secrets (blanked out here):\n+1. Navigate to the Db2 instance you created. \n \n-``` json\n-{\n-  \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n-  \"password\": \"bluadmin-password-very-secret\",\n-  \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n-  \"port\": 50000,\n-  \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n-  \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n-  \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"db\": \"BLUDB\",\n-  \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n-  \"username\": \"bluadmin\",\n-  \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n-}\n-```\n+1. Click on the `Service credentials` panel. \n+    - If the list of service credentials is empty, create a new one.\n+        1. Click `New credential (+)`\n+        1. Enter the Name. Any name works for example, `ibm-fhir-server-db2`.\n+        1. Click Add\n \n-These properties are needed to deploy and manage the IBM FHIR Server schema.\n+1. Access the credential, select View Credentials. The entry you just created looks like the following block of JSON(the secrets are blanked out here):\n \n+    ``` json\n+    {\n+        \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n+        \"password\": \"bluadmin-password-very-secret\",\n+        \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n+        \"port\": 50000,\n+        \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n+        \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n+        \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"db\": \"BLUDB\",\n+        \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n+        \"username\": \"bluadmin\",\n+        \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n+    }\n+    ```\n \n-### FHIRSERVER User and API Key\n+4. Save these details for later, as these properties are needed to deploy and manage the IBM FHIR Server schema.\n \n-The **BLUADMIN** user is used to deploy the initial schema objects (tables, indexes, stored procedures etc). Following the least-privilege principle, the FHIR server itself does not use **BLUADMIN**. The FHIR server uses an API Key associated with an IAM Service Id. This Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n+This **BLUADMIN** user is used to deploy the schema objects (tables, indexes, stored procedures etc) only. \n \n-```\n-    API KEY -------> Service Id -------> DB2 User ------> SELECT/UPDATE/EXECUTE etc Privileges\n- (FHIR Config)          (IAM)              (DB2)                          (DB2)\n-```\n+### **Add the FHIRSERVER User and API Key**\n \n-On the IBM Cloud console, select Manage / Access (IAM).\n+Following the least-privilege principle, the IBM FHIR server itself does not use **BLUADMIN**. The IBM FHIR server uses an API Key associated with an [IAM Service Id](https://cloud.ibm.com/iam/serviceids). The IAM Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n \n-Select the [Service IDs panel](https://cloud.ibm.com/iam/serviceids).\n+The IBM FHIR Server uses the access flow: \n \n-Wait for the table to populate. If you do not yet have an appropriate service id, click `Create (+)`\n+1. Read API Key from the fhir-server-config.json", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzMzA5NA=="}, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDM5NTU3OnYy", "diffSide": "RIGHT", "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjo0MToyNlrOGAdeaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNzoyNjoxOVrOGAfl4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzNjEwNA==", "bodyText": "wow, interesting", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403136104", "createdAt": "2020-04-03T16:41:26Z", "author": {"login": "lmsurpre"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. \n+      \n+1. Create `Create`\n \n-You can use the Lite plan for development or evaluation workloads. This plan has a limit of 5 concurrent connections; the IBM FHIR server connection-pool needs to be sized accordingly to avoid failures.\n+Your instance is now creating or created.\n \n-### Scale the Instance\n+### **Scale the Instance**\n \n-If you chose Flex, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Scaling the instance requires a service restart.\n+If you chose the Flex plan, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Please note, the scaling of the instance requires a service restart.\n \n-### Create the Administrator Credential\n+### **Create the Administrator Credential**\n \n-The administrator will be BLUADMIN but you need to create a credential. Open the `Service credentials` panel for the Db2 instance resource you just created. If you don't yet have any service credentials in the table at the bottom of the page, create a new one by clicking the `New credential (+)` button. Any name will do.\n+The administrator is `BLUADMIN` but you need to create a credential. \n \n-To access the credential, select View Credentials for the entry you just created. The result will be a block of JSON full of secrets (blanked out here):\n+1. Navigate to the Db2 instance you created. \n \n-``` json\n-{\n-  \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n-  \"password\": \"bluadmin-password-very-secret\",\n-  \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n-  \"port\": 50000,\n-  \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n-  \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n-  \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"db\": \"BLUDB\",\n-  \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n-  \"username\": \"bluadmin\",\n-  \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n-}\n-```\n+1. Click on the `Service credentials` panel. \n+    - If the list of service credentials is empty, create a new one.\n+        1. Click `New credential (+)`\n+        1. Enter the Name. Any name works for example, `ibm-fhir-server-db2`.\n+        1. Click Add\n \n-These properties are needed to deploy and manage the IBM FHIR Server schema.\n+1. Access the credential, select View Credentials. The entry you just created looks like the following block of JSON(the secrets are blanked out here):\n \n+    ``` json\n+    {\n+        \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n+        \"password\": \"bluadmin-password-very-secret\",\n+        \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n+        \"port\": 50000,\n+        \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n+        \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n+        \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"db\": \"BLUDB\",\n+        \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n+        \"username\": \"bluadmin\",\n+        \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n+    }\n+    ```\n \n-### FHIRSERVER User and API Key\n+4. Save these details for later, as these properties are needed to deploy and manage the IBM FHIR Server schema.\n \n-The **BLUADMIN** user is used to deploy the initial schema objects (tables, indexes, stored procedures etc). Following the least-privilege principle, the FHIR server itself does not use **BLUADMIN**. The FHIR server uses an API Key associated with an IAM Service Id. This Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n+This **BLUADMIN** user is used to deploy the schema objects (tables, indexes, stored procedures etc) only. \n \n-```\n-    API KEY -------> Service Id -------> DB2 User ------> SELECT/UPDATE/EXECUTE etc Privileges\n- (FHIR Config)          (IAM)              (DB2)                          (DB2)\n-```\n+### **Add the FHIRSERVER User and API Key**\n \n-On the IBM Cloud console, select Manage / Access (IAM).\n+Following the least-privilege principle, the IBM FHIR server itself does not use **BLUADMIN**. The IBM FHIR server uses an API Key associated with an [IAM Service Id](https://cloud.ibm.com/iam/serviceids). The IAM Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n \n-Select the [Service IDs panel](https://cloud.ibm.com/iam/serviceids).\n+The IBM FHIR Server uses the access flow: \n \n-Wait for the table to populate. If you do not yet have an appropriate service id, click `Create (+)`\n+1. Read API Key from the fhir-server-config.json\n+2. Connect to IAM which maps the ServiceId to a Db2 User\n+3. Connect to Db2 to access authorized data\n \n-Specify a meaningful name and description. After creating the Service ID, record the ID value which will start with `ServiceId-...`.\n+The steps to create the API key are: \n \n-Select the API keys tab on the Service ID management page. Note that this is not the `IBM Cloud API keys` on the left.\n+1. On the IBM Cloud console, select `Manage` > `Access (IAM)`.\n \n-Select `Create (+)` to add a new API key. Copy or download the key. If you mess up and don't retain a copy, don't panic - you can simply delete the API key and create a new one. API keys are designed to support rolling so you can add as many as you need and delete others if you need to revoke access for any reason.\n+1. Select the [Service IDs panel](https://cloud.ibm.com/iam/serviceids).\n \n-The API key is used in the database configuration section of the `fhir-server-config.json` file.\n+1. Click `Create (+)`\n+    \n+    1. Enter a meaningful name, such as `fhir-service-id`.\n+    1. Enter a description, such as `for instance db2-ho`.\n+    1. Click the `Create`.\n+    \n+    - Note (1): If you have already created the entry, click the entry. \n+    - Note (2): You may have to wait for the table to populate. \n \n-Before the API key can be used, we need to create a Db2 user and associate it with the new ServiceId.\n+1. Select the `API keys` tab. \n+    - Note: This tab is not the same `IBM Cloud API keys` on the left.\n \n-Navigate to the IBM Cloud Db2 resource page for your instance and select Manage. Click Open Console to access the IBM Db2 on Cloud console.\n+1. To create an API Key, select `Create (+)`.\n \n-Select SETTINGS > Manage Users.\n+    1. Enter a name for the api key, for example, `fhir-server-api`.\n+    1. Click `Create`.\n+    1. Copy or download the key. \n+    \n+    - Note: if you don't retain a copy, don't panic - you can simply delete the API key and create a new one. API keys are designed to support additions and deletions, so you add as many as you need and delete others for any reason.\n \n-Click Add. This opens a panel on the right-hand side.\n+This API key is used in the database configuration section of the `fhir-server-config.json` file.\n \n-Select Add IBMid User at the top.\n+Before the API key can be used, you need to create a Db2 user and associate it with the new ServiceId.\n \n-- User ID: FHIRSERVER\n+1. Navigate to the [Resources](https://cloud.ibm.com/resources) page\n \n-- IBMid: paste the ServiceId-... value from the Service Id created previously.\n+1. Find and click on your IBM Db2 on Cloud instance. \n \n-The page forces the value to lower-case, so `ServiceId` becomes `serviceid`. Don't be alarmed, it still works.\n+1. Click on Manage.\n \n-Do NOT select Administrator. One should follow the least-privelege principal for the FHIRSERVER user.\n+1. Click on Open Console.\n \n-Click Create.\n+1. Click `SETTINGS` > `Manage Users`.\n \n-You should now be able to connect to the database as the FHIRSERVER user using only the API key created above.\n+    - Note: If you do not see `Manage Users`, you are probably using a [non-IAM instance](https://www.ibm.com/support/knowledgecenter/SS6NHC/com.ibm.swg.im.dashdb.security.doc/doc/iam.html). To confirm: \n+        1. Click Run Sql\n+        1. Enter the SQL\n+            ``` sql\n+            SELECT CASE WHEN VALUE = 'IBMIAMauth' THEN 1 ELSE 0 END AS IAM_ENABLED FROM SYSIBMADM.DBMCFG WHERE NAME = 'srvcon_gssplugin_list'\n+            ```\n+        1. You see `0` if not IAM enabled. \n \n-### Testing the Connection\n+1. Click Add. A panel opens on the right-hand side.\n \n-The Db2 driver jar contains a main which can be executed to test the connection - very convenient for checking the API-key/Service-Id/Db2-User-Id configuration is correct.\n+1. Select Add IBMid User at the top.\n \n-``` bash\n-java -cp /path/to/db2jcc4.jar com.ibm.db2.jcc.DB2Jcc  -url \"jdbc:db2://<DB2-HOSTNAME>:50001/BLUDB:apiKey=<API-KEY>;securityMechanism=15;sslConnection=true;sslTrustStoreLocation=/path/to/truststore.jks;sslTrustStorePassword=<TRUSTSTORE-PASSWORD>;\"\n-```\n+    - User ID: FHIRSERVER\n \n-- `<DB-HOSTNAME>`: the hostname of your Db2 service from the Service Credentials page\n-- `<API-KEY>`: the API key value created in the previous section\n-- `<TRUSTSTORE-PASSWORD>`: the password for your truststore\n+    - IBMid: paste the service id `fhir-server-id` from the Service Id created previously.\n \n-Notes:\n-  1. Don't forget the trailing `;` in the URL. Some of the documented examples don't include it, but it is required in order for the connection to work, although this may be fixed in a future driver release. This only affects this test URL, not the actual FHIR server configuration.\n-  2. When using an API Key, no username needs to be provided. This is because the API Key maps to a ServiceId, and that ServiceId is mapped to the Db2 user.\n+    - Note (1): The page forces the value to lower-case, so `ServiceId` becomes `serviceid`. Don't be alarmed, it still works.\n \n-### Configuring a Liberty Datasource with API Key\n+    - Note (2): Do NOT select Administrator. One should follow the least-privelege principal for the FHIRSERVER user.\n \n-The IBM FHIR Server Import/Export feature utilizes Java Batch (JSR-352) provided by the batch-1.0 feature in Liberty Profile. The persistence layer can be configured to use Db2 as follows:\n+1. Click `Create`.\n \n-Create a Db2 user (e.g. FHIRBATCH) and associate it with a ServiceId (no need to create an Administration user, a simple user has sufficient privileges). Using a valid API-KEY for the given ServiceId, configure a new datasource and the Java Batch persistence layer as follows:\n+You are now able to connect to the database as the FHIRSERVER user using only the API key created above.\n \n-``` xml\n-    <dataSource id=\"fhirbatchDS\" jndiName=\"jdbc/fhirbatchDB\">\n-        <jdbcDriver libraryRef=\"fhirSharedLib\"/>\n-        <properties.db2.jcc\n-            serverName=\"dashdb-txn-flex-************.services.dal.bluemix.net\"\n-            portNumber=\"50001\"\n-            apiKey=\"<API-KEY>\"\n-            securityMechanism=\"15\"\n-            pluginName=\"IBMIAMauth\"\n-            databaseName=\"BLUDB\"\n-            currentSchema=\"JBATCH\"\n-            driverType=\"4\" sslConnection=\"true\" sslTrustStoreLocation=\"resources/security/dbTruststore.jks\" sslTrustStorePassword=\"<TRUSTSTORE-PASSWORD>\"/>\n-    </dataSource>\n+### **Testing the Connection**\n \n-    <batchPersistence jobStoreRef=\"BatchDatabaseStore\" />\n-    <databaseStore id=\"BatchDatabaseStore\" dataSourceRef=\"fhirbatchDS\" schema=\"JBATCH\" tablePrefix=\"\" />\n-```\n+The [Db2 driver](https://repo1.maven.org/maven2/com/ibm/db2/jcc/11.5.0.0/jcc-11.5.0.0.jar) is able to execute a connectivity test to check the configuration of the combo of API-key/Service-Id/Db2-User-Id.\n+\n+1. Copy the command to your code editor\n \n-Note, the Java Batch is configured in batchDs.xml  and included from the default server.xml that gets installed to the `{wlp}/usr/server/fhir-server`.\n+    ``` bash\n+    java -cp /path/to/db2jcc4.jar com.ibm.db2.jcc.DB2Jcc  -url \"jdbc:db2://<DB2-HOSTNAME>:50001/BLUDB:apiKey=<API-KEY>;securityMechanism=15;sslConnection=true;sslTrustStoreLocation=/path/to/truststore.jks;sslTrustStorePassword=<TRUSTSTORE-PASSWORD>;\"\n+    ```\n \n-### Configuring FHIR Datasource\n+    - Note: Don't forget the trailing `;` in the URL. Some of the documented examples don't include it, but it is required in order for the connection to work, although this may be fixed in a future driver release. This only affects this test URL, not the actual FHIR server configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 239}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE3MDc4NQ==", "bodyText": "yeah - I left it there (originally from Robin)", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403170785", "createdAt": "2020-04-03T17:26:19Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. \n+      \n+1. Create `Create`\n \n-You can use the Lite plan for development or evaluation workloads. This plan has a limit of 5 concurrent connections; the IBM FHIR server connection-pool needs to be sized accordingly to avoid failures.\n+Your instance is now creating or created.\n \n-### Scale the Instance\n+### **Scale the Instance**\n \n-If you chose Flex, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Scaling the instance requires a service restart.\n+If you chose the Flex plan, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Please note, the scaling of the instance requires a service restart.\n \n-### Create the Administrator Credential\n+### **Create the Administrator Credential**\n \n-The administrator will be BLUADMIN but you need to create a credential. Open the `Service credentials` panel for the Db2 instance resource you just created. If you don't yet have any service credentials in the table at the bottom of the page, create a new one by clicking the `New credential (+)` button. Any name will do.\n+The administrator is `BLUADMIN` but you need to create a credential. \n \n-To access the credential, select View Credentials for the entry you just created. The result will be a block of JSON full of secrets (blanked out here):\n+1. Navigate to the Db2 instance you created. \n \n-``` json\n-{\n-  \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n-  \"password\": \"bluadmin-password-very-secret\",\n-  \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n-  \"port\": 50000,\n-  \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n-  \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n-  \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"db\": \"BLUDB\",\n-  \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n-  \"username\": \"bluadmin\",\n-  \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n-}\n-```\n+1. Click on the `Service credentials` panel. \n+    - If the list of service credentials is empty, create a new one.\n+        1. Click `New credential (+)`\n+        1. Enter the Name. Any name works for example, `ibm-fhir-server-db2`.\n+        1. Click Add\n \n-These properties are needed to deploy and manage the IBM FHIR Server schema.\n+1. Access the credential, select View Credentials. The entry you just created looks like the following block of JSON(the secrets are blanked out here):\n \n+    ``` json\n+    {\n+        \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n+        \"password\": \"bluadmin-password-very-secret\",\n+        \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n+        \"port\": 50000,\n+        \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n+        \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n+        \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"db\": \"BLUDB\",\n+        \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n+        \"username\": \"bluadmin\",\n+        \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n+    }\n+    ```\n \n-### FHIRSERVER User and API Key\n+4. Save these details for later, as these properties are needed to deploy and manage the IBM FHIR Server schema.\n \n-The **BLUADMIN** user is used to deploy the initial schema objects (tables, indexes, stored procedures etc). Following the least-privilege principle, the FHIR server itself does not use **BLUADMIN**. The FHIR server uses an API Key associated with an IAM Service Id. This Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n+This **BLUADMIN** user is used to deploy the schema objects (tables, indexes, stored procedures etc) only. \n \n-```\n-    API KEY -------> Service Id -------> DB2 User ------> SELECT/UPDATE/EXECUTE etc Privileges\n- (FHIR Config)          (IAM)              (DB2)                          (DB2)\n-```\n+### **Add the FHIRSERVER User and API Key**\n \n-On the IBM Cloud console, select Manage / Access (IAM).\n+Following the least-privilege principle, the IBM FHIR server itself does not use **BLUADMIN**. The IBM FHIR server uses an API Key associated with an [IAM Service Id](https://cloud.ibm.com/iam/serviceids). The IAM Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n \n-Select the [Service IDs panel](https://cloud.ibm.com/iam/serviceids).\n+The IBM FHIR Server uses the access flow: \n \n-Wait for the table to populate. If you do not yet have an appropriate service id, click `Create (+)`\n+1. Read API Key from the fhir-server-config.json\n+2. Connect to IAM which maps the ServiceId to a Db2 User\n+3. Connect to Db2 to access authorized data\n \n-Specify a meaningful name and description. After creating the Service ID, record the ID value which will start with `ServiceId-...`.\n+The steps to create the API key are: \n \n-Select the API keys tab on the Service ID management page. Note that this is not the `IBM Cloud API keys` on the left.\n+1. On the IBM Cloud console, select `Manage` > `Access (IAM)`.\n \n-Select `Create (+)` to add a new API key. Copy or download the key. If you mess up and don't retain a copy, don't panic - you can simply delete the API key and create a new one. API keys are designed to support rolling so you can add as many as you need and delete others if you need to revoke access for any reason.\n+1. Select the [Service IDs panel](https://cloud.ibm.com/iam/serviceids).\n \n-The API key is used in the database configuration section of the `fhir-server-config.json` file.\n+1. Click `Create (+)`\n+    \n+    1. Enter a meaningful name, such as `fhir-service-id`.\n+    1. Enter a description, such as `for instance db2-ho`.\n+    1. Click the `Create`.\n+    \n+    - Note (1): If you have already created the entry, click the entry. \n+    - Note (2): You may have to wait for the table to populate. \n \n-Before the API key can be used, we need to create a Db2 user and associate it with the new ServiceId.\n+1. Select the `API keys` tab. \n+    - Note: This tab is not the same `IBM Cloud API keys` on the left.\n \n-Navigate to the IBM Cloud Db2 resource page for your instance and select Manage. Click Open Console to access the IBM Db2 on Cloud console.\n+1. To create an API Key, select `Create (+)`.\n \n-Select SETTINGS > Manage Users.\n+    1. Enter a name for the api key, for example, `fhir-server-api`.\n+    1. Click `Create`.\n+    1. Copy or download the key. \n+    \n+    - Note: if you don't retain a copy, don't panic - you can simply delete the API key and create a new one. API keys are designed to support additions and deletions, so you add as many as you need and delete others for any reason.\n \n-Click Add. This opens a panel on the right-hand side.\n+This API key is used in the database configuration section of the `fhir-server-config.json` file.\n \n-Select Add IBMid User at the top.\n+Before the API key can be used, you need to create a Db2 user and associate it with the new ServiceId.\n \n-- User ID: FHIRSERVER\n+1. Navigate to the [Resources](https://cloud.ibm.com/resources) page\n \n-- IBMid: paste the ServiceId-... value from the Service Id created previously.\n+1. Find and click on your IBM Db2 on Cloud instance. \n \n-The page forces the value to lower-case, so `ServiceId` becomes `serviceid`. Don't be alarmed, it still works.\n+1. Click on Manage.\n \n-Do NOT select Administrator. One should follow the least-privelege principal for the FHIRSERVER user.\n+1. Click on Open Console.\n \n-Click Create.\n+1. Click `SETTINGS` > `Manage Users`.\n \n-You should now be able to connect to the database as the FHIRSERVER user using only the API key created above.\n+    - Note: If you do not see `Manage Users`, you are probably using a [non-IAM instance](https://www.ibm.com/support/knowledgecenter/SS6NHC/com.ibm.swg.im.dashdb.security.doc/doc/iam.html). To confirm: \n+        1. Click Run Sql\n+        1. Enter the SQL\n+            ``` sql\n+            SELECT CASE WHEN VALUE = 'IBMIAMauth' THEN 1 ELSE 0 END AS IAM_ENABLED FROM SYSIBMADM.DBMCFG WHERE NAME = 'srvcon_gssplugin_list'\n+            ```\n+        1. You see `0` if not IAM enabled. \n \n-### Testing the Connection\n+1. Click Add. A panel opens on the right-hand side.\n \n-The Db2 driver jar contains a main which can be executed to test the connection - very convenient for checking the API-key/Service-Id/Db2-User-Id configuration is correct.\n+1. Select Add IBMid User at the top.\n \n-``` bash\n-java -cp /path/to/db2jcc4.jar com.ibm.db2.jcc.DB2Jcc  -url \"jdbc:db2://<DB2-HOSTNAME>:50001/BLUDB:apiKey=<API-KEY>;securityMechanism=15;sslConnection=true;sslTrustStoreLocation=/path/to/truststore.jks;sslTrustStorePassword=<TRUSTSTORE-PASSWORD>;\"\n-```\n+    - User ID: FHIRSERVER\n \n-- `<DB-HOSTNAME>`: the hostname of your Db2 service from the Service Credentials page\n-- `<API-KEY>`: the API key value created in the previous section\n-- `<TRUSTSTORE-PASSWORD>`: the password for your truststore\n+    - IBMid: paste the service id `fhir-server-id` from the Service Id created previously.\n \n-Notes:\n-  1. Don't forget the trailing `;` in the URL. Some of the documented examples don't include it, but it is required in order for the connection to work, although this may be fixed in a future driver release. This only affects this test URL, not the actual FHIR server configuration.\n-  2. When using an API Key, no username needs to be provided. This is because the API Key maps to a ServiceId, and that ServiceId is mapped to the Db2 user.\n+    - Note (1): The page forces the value to lower-case, so `ServiceId` becomes `serviceid`. Don't be alarmed, it still works.\n \n-### Configuring a Liberty Datasource with API Key\n+    - Note (2): Do NOT select Administrator. One should follow the least-privelege principal for the FHIRSERVER user.\n \n-The IBM FHIR Server Import/Export feature utilizes Java Batch (JSR-352) provided by the batch-1.0 feature in Liberty Profile. The persistence layer can be configured to use Db2 as follows:\n+1. Click `Create`.\n \n-Create a Db2 user (e.g. FHIRBATCH) and associate it with a ServiceId (no need to create an Administration user, a simple user has sufficient privileges). Using a valid API-KEY for the given ServiceId, configure a new datasource and the Java Batch persistence layer as follows:\n+You are now able to connect to the database as the FHIRSERVER user using only the API key created above.\n \n-``` xml\n-    <dataSource id=\"fhirbatchDS\" jndiName=\"jdbc/fhirbatchDB\">\n-        <jdbcDriver libraryRef=\"fhirSharedLib\"/>\n-        <properties.db2.jcc\n-            serverName=\"dashdb-txn-flex-************.services.dal.bluemix.net\"\n-            portNumber=\"50001\"\n-            apiKey=\"<API-KEY>\"\n-            securityMechanism=\"15\"\n-            pluginName=\"IBMIAMauth\"\n-            databaseName=\"BLUDB\"\n-            currentSchema=\"JBATCH\"\n-            driverType=\"4\" sslConnection=\"true\" sslTrustStoreLocation=\"resources/security/dbTruststore.jks\" sslTrustStorePassword=\"<TRUSTSTORE-PASSWORD>\"/>\n-    </dataSource>\n+### **Testing the Connection**\n \n-    <batchPersistence jobStoreRef=\"BatchDatabaseStore\" />\n-    <databaseStore id=\"BatchDatabaseStore\" dataSourceRef=\"fhirbatchDS\" schema=\"JBATCH\" tablePrefix=\"\" />\n-```\n+The [Db2 driver](https://repo1.maven.org/maven2/com/ibm/db2/jcc/11.5.0.0/jcc-11.5.0.0.jar) is able to execute a connectivity test to check the configuration of the combo of API-key/Service-Id/Db2-User-Id.\n+\n+1. Copy the command to your code editor\n \n-Note, the Java Batch is configured in batchDs.xml  and included from the default server.xml that gets installed to the `{wlp}/usr/server/fhir-server`.\n+    ``` bash\n+    java -cp /path/to/db2jcc4.jar com.ibm.db2.jcc.DB2Jcc  -url \"jdbc:db2://<DB2-HOSTNAME>:50001/BLUDB:apiKey=<API-KEY>;securityMechanism=15;sslConnection=true;sslTrustStoreLocation=/path/to/truststore.jks;sslTrustStorePassword=<TRUSTSTORE-PASSWORD>;\"\n+    ```\n \n-### Configuring FHIR Datasource\n+    - Note: Don't forget the trailing `;` in the URL. Some of the documented examples don't include it, but it is required in order for the connection to work, although this may be fixed in a future driver release. This only affects this test URL, not the actual FHIR server configuration.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzNjEwNA=="}, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 239}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDQwMzE5OnYy", "diffSide": "RIGHT", "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjo0MzozN1rOGAdjKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNzozMjowN1rOGAf5Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzNzMyMw==", "bodyText": "worth mentioning which file to put this in and where to find it?  or maybe just link to that section of the user's guide?", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403137323", "createdAt": "2020-04-03T16:43:37Z", "author": {"login": "lmsurpre"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. \n+      \n+1. Create `Create`\n \n-You can use the Lite plan for development or evaluation workloads. This plan has a limit of 5 concurrent connections; the IBM FHIR server connection-pool needs to be sized accordingly to avoid failures.\n+Your instance is now creating or created.\n \n-### Scale the Instance\n+### **Scale the Instance**\n \n-If you chose Flex, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Scaling the instance requires a service restart.\n+If you chose the Flex plan, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Please note, the scaling of the instance requires a service restart.\n \n-### Create the Administrator Credential\n+### **Create the Administrator Credential**\n \n-The administrator will be BLUADMIN but you need to create a credential. Open the `Service credentials` panel for the Db2 instance resource you just created. If you don't yet have any service credentials in the table at the bottom of the page, create a new one by clicking the `New credential (+)` button. Any name will do.\n+The administrator is `BLUADMIN` but you need to create a credential. \n \n-To access the credential, select View Credentials for the entry you just created. The result will be a block of JSON full of secrets (blanked out here):\n+1. Navigate to the Db2 instance you created. \n \n-``` json\n-{\n-  \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n-  \"password\": \"bluadmin-password-very-secret\",\n-  \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n-  \"port\": 50000,\n-  \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n-  \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n-  \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"db\": \"BLUDB\",\n-  \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n-  \"username\": \"bluadmin\",\n-  \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n-}\n-```\n+1. Click on the `Service credentials` panel. \n+    - If the list of service credentials is empty, create a new one.\n+        1. Click `New credential (+)`\n+        1. Enter the Name. Any name works for example, `ibm-fhir-server-db2`.\n+        1. Click Add\n \n-These properties are needed to deploy and manage the IBM FHIR Server schema.\n+1. Access the credential, select View Credentials. The entry you just created looks like the following block of JSON(the secrets are blanked out here):\n \n+    ``` json\n+    {\n+        \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n+        \"password\": \"bluadmin-password-very-secret\",\n+        \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n+        \"port\": 50000,\n+        \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n+        \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n+        \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"db\": \"BLUDB\",\n+        \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n+        \"username\": \"bluadmin\",\n+        \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n+    }\n+    ```\n \n-### FHIRSERVER User and API Key\n+4. Save these details for later, as these properties are needed to deploy and manage the IBM FHIR Server schema.\n \n-The **BLUADMIN** user is used to deploy the initial schema objects (tables, indexes, stored procedures etc). Following the least-privilege principle, the FHIR server itself does not use **BLUADMIN**. The FHIR server uses an API Key associated with an IAM Service Id. This Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n+This **BLUADMIN** user is used to deploy the schema objects (tables, indexes, stored procedures etc) only. \n \n-```\n-    API KEY -------> Service Id -------> DB2 User ------> SELECT/UPDATE/EXECUTE etc Privileges\n- (FHIR Config)          (IAM)              (DB2)                          (DB2)\n-```\n+### **Add the FHIRSERVER User and API Key**\n \n-On the IBM Cloud console, select Manage / Access (IAM).\n+Following the least-privilege principle, the IBM FHIR server itself does not use **BLUADMIN**. The IBM FHIR server uses an API Key associated with an [IAM Service Id](https://cloud.ibm.com/iam/serviceids). The IAM Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n \n-Select the [Service IDs panel](https://cloud.ibm.com/iam/serviceids).\n+The IBM FHIR Server uses the access flow: \n \n-Wait for the table to populate. If you do not yet have an appropriate service id, click `Create (+)`\n+1. Read API Key from the fhir-server-config.json\n+2. Connect to IAM which maps the ServiceId to a Db2 User\n+3. Connect to Db2 to access authorized data\n \n-Specify a meaningful name and description. After creating the Service ID, record the ID value which will start with `ServiceId-...`.\n+The steps to create the API key are: \n \n-Select the API keys tab on the Service ID management page. Note that this is not the `IBM Cloud API keys` on the left.\n+1. On the IBM Cloud console, select `Manage` > `Access (IAM)`.\n \n-Select `Create (+)` to add a new API key. Copy or download the key. If you mess up and don't retain a copy, don't panic - you can simply delete the API key and create a new one. API keys are designed to support rolling so you can add as many as you need and delete others if you need to revoke access for any reason.\n+1. Select the [Service IDs panel](https://cloud.ibm.com/iam/serviceids).\n \n-The API key is used in the database configuration section of the `fhir-server-config.json` file.\n+1. Click `Create (+)`\n+    \n+    1. Enter a meaningful name, such as `fhir-service-id`.\n+    1. Enter a description, such as `for instance db2-ho`.\n+    1. Click the `Create`.\n+    \n+    - Note (1): If you have already created the entry, click the entry. \n+    - Note (2): You may have to wait for the table to populate. \n \n-Before the API key can be used, we need to create a Db2 user and associate it with the new ServiceId.\n+1. Select the `API keys` tab. \n+    - Note: This tab is not the same `IBM Cloud API keys` on the left.\n \n-Navigate to the IBM Cloud Db2 resource page for your instance and select Manage. Click Open Console to access the IBM Db2 on Cloud console.\n+1. To create an API Key, select `Create (+)`.\n \n-Select SETTINGS > Manage Users.\n+    1. Enter a name for the api key, for example, `fhir-server-api`.\n+    1. Click `Create`.\n+    1. Copy or download the key. \n+    \n+    - Note: if you don't retain a copy, don't panic - you can simply delete the API key and create a new one. API keys are designed to support additions and deletions, so you add as many as you need and delete others for any reason.\n \n-Click Add. This opens a panel on the right-hand side.\n+This API key is used in the database configuration section of the `fhir-server-config.json` file.\n \n-Select Add IBMid User at the top.\n+Before the API key can be used, you need to create a Db2 user and associate it with the new ServiceId.\n \n-- User ID: FHIRSERVER\n+1. Navigate to the [Resources](https://cloud.ibm.com/resources) page\n \n-- IBMid: paste the ServiceId-... value from the Service Id created previously.\n+1. Find and click on your IBM Db2 on Cloud instance. \n \n-The page forces the value to lower-case, so `ServiceId` becomes `serviceid`. Don't be alarmed, it still works.\n+1. Click on Manage.\n \n-Do NOT select Administrator. One should follow the least-privelege principal for the FHIRSERVER user.\n+1. Click on Open Console.\n \n-Click Create.\n+1. Click `SETTINGS` > `Manage Users`.\n \n-You should now be able to connect to the database as the FHIRSERVER user using only the API key created above.\n+    - Note: If you do not see `Manage Users`, you are probably using a [non-IAM instance](https://www.ibm.com/support/knowledgecenter/SS6NHC/com.ibm.swg.im.dashdb.security.doc/doc/iam.html). To confirm: \n+        1. Click Run Sql\n+        1. Enter the SQL\n+            ``` sql\n+            SELECT CASE WHEN VALUE = 'IBMIAMauth' THEN 1 ELSE 0 END AS IAM_ENABLED FROM SYSIBMADM.DBMCFG WHERE NAME = 'srvcon_gssplugin_list'\n+            ```\n+        1. You see `0` if not IAM enabled. \n \n-### Testing the Connection\n+1. Click Add. A panel opens on the right-hand side.\n \n-The Db2 driver jar contains a main which can be executed to test the connection - very convenient for checking the API-key/Service-Id/Db2-User-Id configuration is correct.\n+1. Select Add IBMid User at the top.\n \n-``` bash\n-java -cp /path/to/db2jcc4.jar com.ibm.db2.jcc.DB2Jcc  -url \"jdbc:db2://<DB2-HOSTNAME>:50001/BLUDB:apiKey=<API-KEY>;securityMechanism=15;sslConnection=true;sslTrustStoreLocation=/path/to/truststore.jks;sslTrustStorePassword=<TRUSTSTORE-PASSWORD>;\"\n-```\n+    - User ID: FHIRSERVER\n \n-- `<DB-HOSTNAME>`: the hostname of your Db2 service from the Service Credentials page\n-- `<API-KEY>`: the API key value created in the previous section\n-- `<TRUSTSTORE-PASSWORD>`: the password for your truststore\n+    - IBMid: paste the service id `fhir-server-id` from the Service Id created previously.\n \n-Notes:\n-  1. Don't forget the trailing `;` in the URL. Some of the documented examples don't include it, but it is required in order for the connection to work, although this may be fixed in a future driver release. This only affects this test URL, not the actual FHIR server configuration.\n-  2. When using an API Key, no username needs to be provided. This is because the API Key maps to a ServiceId, and that ServiceId is mapped to the Db2 user.\n+    - Note (1): The page forces the value to lower-case, so `ServiceId` becomes `serviceid`. Don't be alarmed, it still works.\n \n-### Configuring a Liberty Datasource with API Key\n+    - Note (2): Do NOT select Administrator. One should follow the least-privelege principal for the FHIRSERVER user.\n \n-The IBM FHIR Server Import/Export feature utilizes Java Batch (JSR-352) provided by the batch-1.0 feature in Liberty Profile. The persistence layer can be configured to use Db2 as follows:\n+1. Click `Create`.\n \n-Create a Db2 user (e.g. FHIRBATCH) and associate it with a ServiceId (no need to create an Administration user, a simple user has sufficient privileges). Using a valid API-KEY for the given ServiceId, configure a new datasource and the Java Batch persistence layer as follows:\n+You are now able to connect to the database as the FHIRSERVER user using only the API key created above.\n \n-``` xml\n-    <dataSource id=\"fhirbatchDS\" jndiName=\"jdbc/fhirbatchDB\">\n-        <jdbcDriver libraryRef=\"fhirSharedLib\"/>\n-        <properties.db2.jcc\n-            serverName=\"dashdb-txn-flex-************.services.dal.bluemix.net\"\n-            portNumber=\"50001\"\n-            apiKey=\"<API-KEY>\"\n-            securityMechanism=\"15\"\n-            pluginName=\"IBMIAMauth\"\n-            databaseName=\"BLUDB\"\n-            currentSchema=\"JBATCH\"\n-            driverType=\"4\" sslConnection=\"true\" sslTrustStoreLocation=\"resources/security/dbTruststore.jks\" sslTrustStorePassword=\"<TRUSTSTORE-PASSWORD>\"/>\n-    </dataSource>\n+### **Testing the Connection**\n \n-    <batchPersistence jobStoreRef=\"BatchDatabaseStore\" />\n-    <databaseStore id=\"BatchDatabaseStore\" dataSourceRef=\"fhirbatchDS\" schema=\"JBATCH\" tablePrefix=\"\" />\n-```\n+The [Db2 driver](https://repo1.maven.org/maven2/com/ibm/db2/jcc/11.5.0.0/jcc-11.5.0.0.jar) is able to execute a connectivity test to check the configuration of the combo of API-key/Service-Id/Db2-User-Id.\n+\n+1. Copy the command to your code editor\n \n-Note, the Java Batch is configured in batchDs.xml  and included from the default server.xml that gets installed to the `{wlp}/usr/server/fhir-server`.\n+    ``` bash\n+    java -cp /path/to/db2jcc4.jar com.ibm.db2.jcc.DB2Jcc  -url \"jdbc:db2://<DB2-HOSTNAME>:50001/BLUDB:apiKey=<API-KEY>;securityMechanism=15;sslConnection=true;sslTrustStoreLocation=/path/to/truststore.jks;sslTrustStorePassword=<TRUSTSTORE-PASSWORD>;\"\n+    ```\n \n-### Configuring FHIR Datasource\n+    - Note: Don't forget the trailing `;` in the URL. Some of the documented examples don't include it, but it is required in order for the connection to work, although this may be fixed in a future driver release. This only affects this test URL, not the actual FHIR server configuration.\n \n-The FHIR server uses a proxy datasource mechanism, allowing new datasources to be added at runtime without requiring a (Liberty Profile) server restart. To configure a FHIR tenant datasource using an API-KEY, use the following template:\n+1. Replace the following values with your service details:\n+    - `/path/to/db2jcc4.jar` : replace with the path to your driver jar. \n+    - `<DB-HOSTNAME>`: the hostname of your Db2 service from the Service Credentials page\n+    - `<API-KEY>`: the API key value created in the previous section\n+    - `<TRUSTSTORE-PASSWORD>`: the password for your truststore\n+   \n+    - Note: When using an API Key, no username needs to be provided. This is because the API Key maps to a ServiceId, and that ServiceId is mapped to the Db2 user.\n+\n+1. Run in your favorite terminal, and you should see no errors in the output. You should see output like: \n+\n+```\n+[jcc][10516][13709]Test Connection Successful.\n+```\n+\n+### **Configuring IBM FHIR Server Datasource**\n+\n+The IBM FHIR server uses a proxy datasource mechanism, allowing new datasources to be added at runtime without requiring a (Liberty Profile) server restart. To configure a FHIR tenant datasource using an API-KEY, use the following template:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 258}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE3NTc3OA==", "bodyText": "I've now added.", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403175778", "createdAt": "2020-04-03T17:32:07Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. \n+      \n+1. Create `Create`\n \n-You can use the Lite plan for development or evaluation workloads. This plan has a limit of 5 concurrent connections; the IBM FHIR server connection-pool needs to be sized accordingly to avoid failures.\n+Your instance is now creating or created.\n \n-### Scale the Instance\n+### **Scale the Instance**\n \n-If you chose Flex, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Scaling the instance requires a service restart.\n+If you chose the Flex plan, you may want to scale the instance after it has been created (e.g. 4 cores, 16GB). The instance can be scaled more than once, so it doesn't matter if you don't get the sizing right first time. Please note, the scaling of the instance requires a service restart.\n \n-### Create the Administrator Credential\n+### **Create the Administrator Credential**\n \n-The administrator will be BLUADMIN but you need to create a credential. Open the `Service credentials` panel for the Db2 instance resource you just created. If you don't yet have any service credentials in the table at the bottom of the page, create a new one by clicking the `New credential (+)` button. Any name will do.\n+The administrator is `BLUADMIN` but you need to create a credential. \n \n-To access the credential, select View Credentials for the entry you just created. The result will be a block of JSON full of secrets (blanked out here):\n+1. Navigate to the Db2 instance you created. \n \n-``` json\n-{\n-  \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n-  \"password\": \"bluadmin-password-very-secret\",\n-  \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n-  \"port\": 50000,\n-  \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n-  \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n-  \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n-  \"db\": \"BLUDB\",\n-  \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n-  \"username\": \"bluadmin\",\n-  \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n-}\n-```\n+1. Click on the `Service credentials` panel. \n+    - If the list of service credentials is empty, create a new one.\n+        1. Click `New credential (+)`\n+        1. Enter the Name. Any name works for example, `ibm-fhir-server-db2`.\n+        1. Click Add\n \n-These properties are needed to deploy and manage the IBM FHIR Server schema.\n+1. Access the credential, select View Credentials. The entry you just created looks like the following block of JSON(the secrets are blanked out here):\n \n+    ``` json\n+    {\n+        \"hostname\": \"dashdb-txn-flex-.***********.services.dal.bluemix.net\",\n+        \"password\": \"bluadmin-password-very-secret\",\n+        \"https_url\": \"https://dashdb-txn-flex-************.services.dal.bluemix.net:8443\",\n+        \"port\": 50000,\n+        \"ssldsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50001;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;Security=SSL;\",\n+        \"host\": \"dashdb-txn-flex-************.services.dal.bluemix.net\",\n+        \"jdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"uri\": \"db2://bluadmin:bluadmin-password-very-secret@dashdb-txn-flex-************.services.dal.bluemix.net:50000/BLUDB\",\n+        \"db\": \"BLUDB\",\n+        \"dsn\": \"DATABASE=BLUDB;HOSTNAME=dashdb-txn-flex-************.services.dal.bluemix.net;PORT=50000;PROTOCOL=TCPIP;UID=bluadmin;PWD=bluadmin-password-very-secret;\",\n+        \"username\": \"bluadmin\",\n+        \"ssljdbcurl\": \"jdbc:db2://dashdb-txn-flex-************.services.dal.bluemix.net:50001/BLUDB:sslConnection=true;\"\n+    }\n+    ```\n \n-### FHIRSERVER User and API Key\n+4. Save these details for later, as these properties are needed to deploy and manage the IBM FHIR Server schema.\n \n-The **BLUADMIN** user is used to deploy the initial schema objects (tables, indexes, stored procedures etc). Following the least-privilege principle, the FHIR server itself does not use **BLUADMIN**. The FHIR server uses an API Key associated with an IAM Service Id. This Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n+This **BLUADMIN** user is used to deploy the schema objects (tables, indexes, stored procedures etc) only. \n \n-```\n-    API KEY -------> Service Id -------> DB2 User ------> SELECT/UPDATE/EXECUTE etc Privileges\n- (FHIR Config)          (IAM)              (DB2)                          (DB2)\n-```\n+### **Add the FHIRSERVER User and API Key**\n \n-On the IBM Cloud console, select Manage / Access (IAM).\n+Following the least-privilege principle, the IBM FHIR server itself does not use **BLUADMIN**. The IBM FHIR server uses an API Key associated with an [IAM Service Id](https://cloud.ibm.com/iam/serviceids). The IAM Service Id is mapped to a Db2 user which is granted explicit privileges to the tables and stored procedures.\n \n-Select the [Service IDs panel](https://cloud.ibm.com/iam/serviceids).\n+The IBM FHIR Server uses the access flow: \n \n-Wait for the table to populate. If you do not yet have an appropriate service id, click `Create (+)`\n+1. Read API Key from the fhir-server-config.json\n+2. Connect to IAM which maps the ServiceId to a Db2 User\n+3. Connect to Db2 to access authorized data\n \n-Specify a meaningful name and description. After creating the Service ID, record the ID value which will start with `ServiceId-...`.\n+The steps to create the API key are: \n \n-Select the API keys tab on the Service ID management page. Note that this is not the `IBM Cloud API keys` on the left.\n+1. On the IBM Cloud console, select `Manage` > `Access (IAM)`.\n \n-Select `Create (+)` to add a new API key. Copy or download the key. If you mess up and don't retain a copy, don't panic - you can simply delete the API key and create a new one. API keys are designed to support rolling so you can add as many as you need and delete others if you need to revoke access for any reason.\n+1. Select the [Service IDs panel](https://cloud.ibm.com/iam/serviceids).\n \n-The API key is used in the database configuration section of the `fhir-server-config.json` file.\n+1. Click `Create (+)`\n+    \n+    1. Enter a meaningful name, such as `fhir-service-id`.\n+    1. Enter a description, such as `for instance db2-ho`.\n+    1. Click the `Create`.\n+    \n+    - Note (1): If you have already created the entry, click the entry. \n+    - Note (2): You may have to wait for the table to populate. \n \n-Before the API key can be used, we need to create a Db2 user and associate it with the new ServiceId.\n+1. Select the `API keys` tab. \n+    - Note: This tab is not the same `IBM Cloud API keys` on the left.\n \n-Navigate to the IBM Cloud Db2 resource page for your instance and select Manage. Click Open Console to access the IBM Db2 on Cloud console.\n+1. To create an API Key, select `Create (+)`.\n \n-Select SETTINGS > Manage Users.\n+    1. Enter a name for the api key, for example, `fhir-server-api`.\n+    1. Click `Create`.\n+    1. Copy or download the key. \n+    \n+    - Note: if you don't retain a copy, don't panic - you can simply delete the API key and create a new one. API keys are designed to support additions and deletions, so you add as many as you need and delete others for any reason.\n \n-Click Add. This opens a panel on the right-hand side.\n+This API key is used in the database configuration section of the `fhir-server-config.json` file.\n \n-Select Add IBMid User at the top.\n+Before the API key can be used, you need to create a Db2 user and associate it with the new ServiceId.\n \n-- User ID: FHIRSERVER\n+1. Navigate to the [Resources](https://cloud.ibm.com/resources) page\n \n-- IBMid: paste the ServiceId-... value from the Service Id created previously.\n+1. Find and click on your IBM Db2 on Cloud instance. \n \n-The page forces the value to lower-case, so `ServiceId` becomes `serviceid`. Don't be alarmed, it still works.\n+1. Click on Manage.\n \n-Do NOT select Administrator. One should follow the least-privelege principal for the FHIRSERVER user.\n+1. Click on Open Console.\n \n-Click Create.\n+1. Click `SETTINGS` > `Manage Users`.\n \n-You should now be able to connect to the database as the FHIRSERVER user using only the API key created above.\n+    - Note: If you do not see `Manage Users`, you are probably using a [non-IAM instance](https://www.ibm.com/support/knowledgecenter/SS6NHC/com.ibm.swg.im.dashdb.security.doc/doc/iam.html). To confirm: \n+        1. Click Run Sql\n+        1. Enter the SQL\n+            ``` sql\n+            SELECT CASE WHEN VALUE = 'IBMIAMauth' THEN 1 ELSE 0 END AS IAM_ENABLED FROM SYSIBMADM.DBMCFG WHERE NAME = 'srvcon_gssplugin_list'\n+            ```\n+        1. You see `0` if not IAM enabled. \n \n-### Testing the Connection\n+1. Click Add. A panel opens on the right-hand side.\n \n-The Db2 driver jar contains a main which can be executed to test the connection - very convenient for checking the API-key/Service-Id/Db2-User-Id configuration is correct.\n+1. Select Add IBMid User at the top.\n \n-``` bash\n-java -cp /path/to/db2jcc4.jar com.ibm.db2.jcc.DB2Jcc  -url \"jdbc:db2://<DB2-HOSTNAME>:50001/BLUDB:apiKey=<API-KEY>;securityMechanism=15;sslConnection=true;sslTrustStoreLocation=/path/to/truststore.jks;sslTrustStorePassword=<TRUSTSTORE-PASSWORD>;\"\n-```\n+    - User ID: FHIRSERVER\n \n-- `<DB-HOSTNAME>`: the hostname of your Db2 service from the Service Credentials page\n-- `<API-KEY>`: the API key value created in the previous section\n-- `<TRUSTSTORE-PASSWORD>`: the password for your truststore\n+    - IBMid: paste the service id `fhir-server-id` from the Service Id created previously.\n \n-Notes:\n-  1. Don't forget the trailing `;` in the URL. Some of the documented examples don't include it, but it is required in order for the connection to work, although this may be fixed in a future driver release. This only affects this test URL, not the actual FHIR server configuration.\n-  2. When using an API Key, no username needs to be provided. This is because the API Key maps to a ServiceId, and that ServiceId is mapped to the Db2 user.\n+    - Note (1): The page forces the value to lower-case, so `ServiceId` becomes `serviceid`. Don't be alarmed, it still works.\n \n-### Configuring a Liberty Datasource with API Key\n+    - Note (2): Do NOT select Administrator. One should follow the least-privelege principal for the FHIRSERVER user.\n \n-The IBM FHIR Server Import/Export feature utilizes Java Batch (JSR-352) provided by the batch-1.0 feature in Liberty Profile. The persistence layer can be configured to use Db2 as follows:\n+1. Click `Create`.\n \n-Create a Db2 user (e.g. FHIRBATCH) and associate it with a ServiceId (no need to create an Administration user, a simple user has sufficient privileges). Using a valid API-KEY for the given ServiceId, configure a new datasource and the Java Batch persistence layer as follows:\n+You are now able to connect to the database as the FHIRSERVER user using only the API key created above.\n \n-``` xml\n-    <dataSource id=\"fhirbatchDS\" jndiName=\"jdbc/fhirbatchDB\">\n-        <jdbcDriver libraryRef=\"fhirSharedLib\"/>\n-        <properties.db2.jcc\n-            serverName=\"dashdb-txn-flex-************.services.dal.bluemix.net\"\n-            portNumber=\"50001\"\n-            apiKey=\"<API-KEY>\"\n-            securityMechanism=\"15\"\n-            pluginName=\"IBMIAMauth\"\n-            databaseName=\"BLUDB\"\n-            currentSchema=\"JBATCH\"\n-            driverType=\"4\" sslConnection=\"true\" sslTrustStoreLocation=\"resources/security/dbTruststore.jks\" sslTrustStorePassword=\"<TRUSTSTORE-PASSWORD>\"/>\n-    </dataSource>\n+### **Testing the Connection**\n \n-    <batchPersistence jobStoreRef=\"BatchDatabaseStore\" />\n-    <databaseStore id=\"BatchDatabaseStore\" dataSourceRef=\"fhirbatchDS\" schema=\"JBATCH\" tablePrefix=\"\" />\n-```\n+The [Db2 driver](https://repo1.maven.org/maven2/com/ibm/db2/jcc/11.5.0.0/jcc-11.5.0.0.jar) is able to execute a connectivity test to check the configuration of the combo of API-key/Service-Id/Db2-User-Id.\n+\n+1. Copy the command to your code editor\n \n-Note, the Java Batch is configured in batchDs.xml  and included from the default server.xml that gets installed to the `{wlp}/usr/server/fhir-server`.\n+    ``` bash\n+    java -cp /path/to/db2jcc4.jar com.ibm.db2.jcc.DB2Jcc  -url \"jdbc:db2://<DB2-HOSTNAME>:50001/BLUDB:apiKey=<API-KEY>;securityMechanism=15;sslConnection=true;sslTrustStoreLocation=/path/to/truststore.jks;sslTrustStorePassword=<TRUSTSTORE-PASSWORD>;\"\n+    ```\n \n-### Configuring FHIR Datasource\n+    - Note: Don't forget the trailing `;` in the URL. Some of the documented examples don't include it, but it is required in order for the connection to work, although this may be fixed in a future driver release. This only affects this test URL, not the actual FHIR server configuration.\n \n-The FHIR server uses a proxy datasource mechanism, allowing new datasources to be added at runtime without requiring a (Liberty Profile) server restart. To configure a FHIR tenant datasource using an API-KEY, use the following template:\n+1. Replace the following values with your service details:\n+    - `/path/to/db2jcc4.jar` : replace with the path to your driver jar. \n+    - `<DB-HOSTNAME>`: the hostname of your Db2 service from the Service Credentials page\n+    - `<API-KEY>`: the API key value created in the previous section\n+    - `<TRUSTSTORE-PASSWORD>`: the password for your truststore\n+   \n+    - Note: When using an API Key, no username needs to be provided. This is because the API Key maps to a ServiceId, and that ServiceId is mapped to the Db2 user.\n+\n+1. Run in your favorite terminal, and you should see no errors in the output. You should see output like: \n+\n+```\n+[jcc][10516][13709]Test Connection Successful.\n+```\n+\n+### **Configuring IBM FHIR Server Datasource**\n+\n+The IBM FHIR server uses a proxy datasource mechanism, allowing new datasources to be added at runtime without requiring a (Liberty Profile) server restart. To configure a FHIR tenant datasource using an API-KEY, use the following template:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzNzMyMw=="}, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 258}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDQxMDg2OnYy", "diffSide": "RIGHT", "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjo0NTo0MVrOGAdn-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNzoyNTozOFrOGAfjug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzODU1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. and associate it with a ServiceId (no need to create an Administration user, a simple user has sufficient privileges). \n          \n          \n            \n            1. Associate it with a ServiceId (no need to create an Administration user, a simple user has sufficient privileges) using the same procedure you followed for the fhir-server ServiceId user.", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403138554", "createdAt": "2020-04-03T16:45:41Z", "author": {"login": "lmsurpre"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -191,14 +218,52 @@ Use the following table to populate your datasource.\n \n Note, no username properties are given, because the authentication module only requires the API-KEY.\n \n-### SSL Certificate\n+### **Configuring a BulkData's Liberty Datasource with API key**\n \n-The Db2 certificate should be added to the Liberty Profile truststore. *Be sure to use the same Java runtime that Liberty Profile uses when manipulating any keystores.*\n+The IBM FHIR Server Bulk Data modules utilize Java Batch (JSR-352) from the Liberty Profile feature - `batch-1.0`. The batch feature is configured to use Db2 as follows:\n \n+1. Create a Db2 user (e.g. FHIRBATCH)\n \n-### Encrypt Secrets\n+1. and associate it with a ServiceId (no need to create an Administration user, a simple user has sufficient privileges). ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 275}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE3MDIzNA==", "bodyText": "grabbing in local commit", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403170234", "createdAt": "2020-04-03T17:25:38Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -191,14 +218,52 @@ Use the following table to populate your datasource.\n \n Note, no username properties are given, because the authentication module only requires the API-KEY.\n \n-### SSL Certificate\n+### **Configuring a BulkData's Liberty Datasource with API key**\n \n-The Db2 certificate should be added to the Liberty Profile truststore. *Be sure to use the same Java runtime that Liberty Profile uses when manipulating any keystores.*\n+The IBM FHIR Server Bulk Data modules utilize Java Batch (JSR-352) from the Liberty Profile feature - `batch-1.0`. The batch feature is configured to use Db2 as follows:\n \n+1. Create a Db2 user (e.g. FHIRBATCH)\n \n-### Encrypt Secrets\n+1. and associate it with a ServiceId (no need to create an Administration user, a simple user has sufficient privileges). ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzODU1NA=="}, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 275}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDQxODczOnYy", "diffSide": "RIGHT", "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjo0ODowNFrOGAds9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNzoyNTowMlrOGAfh2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzOTgyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - Note: The Java Batch is configured in `batchDs.xml` and included from the IBM FHIR Server's `server.xml` which is installed to the `{wlp}/usr/server/fhir-server`.\n          \n          \n            \n            - Note: The Java Batch is configured in `batchDs.xml` and included from the IBM FHIR Server's `server.xml` which is installed to `{wlp}/usr/server/fhir-server/`.", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403139829", "createdAt": "2020-04-03T16:48:04Z", "author": {"login": "lmsurpre"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -191,14 +218,52 @@ Use the following table to populate your datasource.\n \n Note, no username properties are given, because the authentication module only requires the API-KEY.\n \n-### SSL Certificate\n+### **Configuring a BulkData's Liberty Datasource with API key**\n \n-The Db2 certificate should be added to the Liberty Profile truststore. *Be sure to use the same Java runtime that Liberty Profile uses when manipulating any keystores.*\n+The IBM FHIR Server Bulk Data modules utilize Java Batch (JSR-352) from the Liberty Profile feature - `batch-1.0`. The batch feature is configured to use Db2 as follows:\n \n+1. Create a Db2 user (e.g. FHIRBATCH)\n \n-### Encrypt Secrets\n+1. and associate it with a ServiceId (no need to create an Administration user, a simple user has sufficient privileges). \n+\n+1. Using a valid API-KEY for the given ServiceId, configure a new datasource and the Java Batch persistence layer as follows:\n+\n+``` xml\n+    <dataSource id=\"fhirbatchDS\" jndiName=\"jdbc/fhirbatchDB\">\n+        <jdbcDriver libraryRef=\"fhirSharedLib\"/>\n+        <properties.db2.jcc\n+            serverName=\"dashdb-txn-flex-************.services.dal.bluemix.net\"\n+            portNumber=\"50001\"\n+            apiKey=\"<API-KEY>\"\n+            securityMechanism=\"15\"\n+            pluginName=\"IBMIAMauth\"\n+            databaseName=\"BLUDB\"\n+            currentSchema=\"JBATCH\"\n+            driverType=\"4\" sslConnection=\"true\" sslTrustStoreLocation=\"resources/security/dbTruststore.jks\" sslTrustStorePassword=\"<TRUSTSTORE-PASSWORD>\"/>\n+    </dataSource>\n+\n+    <batchPersistence jobStoreRef=\"BatchDatabaseStore\" />\n+    <databaseStore id=\"BatchDatabaseStore\" dataSourceRef=\"fhirbatchDS\" schema=\"JBATCH\" tablePrefix=\"\" />\n+```\n+\n+- Note: The Java Batch is configured in `batchDs.xml` and included from the IBM FHIR Server's `server.xml` which is installed to the `{wlp}/usr/server/fhir-server`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 297}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE2OTc1NA==", "bodyText": "I'm grabbing this in my local commit for simplicity", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403169754", "createdAt": "2020-04-03T17:25:02Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -191,14 +218,52 @@ Use the following table to populate your datasource.\n \n Note, no username properties are given, because the authentication module only requires the API-KEY.\n \n-### SSL Certificate\n+### **Configuring a BulkData's Liberty Datasource with API key**\n \n-The Db2 certificate should be added to the Liberty Profile truststore. *Be sure to use the same Java runtime that Liberty Profile uses when manipulating any keystores.*\n+The IBM FHIR Server Bulk Data modules utilize Java Batch (JSR-352) from the Liberty Profile feature - `batch-1.0`. The batch feature is configured to use Db2 as follows:\n \n+1. Create a Db2 user (e.g. FHIRBATCH)\n \n-### Encrypt Secrets\n+1. and associate it with a ServiceId (no need to create an Administration user, a simple user has sufficient privileges). \n+\n+1. Using a valid API-KEY for the given ServiceId, configure a new datasource and the Java Batch persistence layer as follows:\n+\n+``` xml\n+    <dataSource id=\"fhirbatchDS\" jndiName=\"jdbc/fhirbatchDB\">\n+        <jdbcDriver libraryRef=\"fhirSharedLib\"/>\n+        <properties.db2.jcc\n+            serverName=\"dashdb-txn-flex-************.services.dal.bluemix.net\"\n+            portNumber=\"50001\"\n+            apiKey=\"<API-KEY>\"\n+            securityMechanism=\"15\"\n+            pluginName=\"IBMIAMauth\"\n+            databaseName=\"BLUDB\"\n+            currentSchema=\"JBATCH\"\n+            driverType=\"4\" sslConnection=\"true\" sslTrustStoreLocation=\"resources/security/dbTruststore.jks\" sslTrustStorePassword=\"<TRUSTSTORE-PASSWORD>\"/>\n+    </dataSource>\n+\n+    <batchPersistence jobStoreRef=\"BatchDatabaseStore\" />\n+    <databaseStore id=\"BatchDatabaseStore\" dataSourceRef=\"fhirbatchDS\" schema=\"JBATCH\" tablePrefix=\"\" />\n+```\n+\n+- Note: The Java Batch is configured in `batchDs.xml` and included from the IBM FHIR Server's `server.xml` which is installed to the `{wlp}/usr/server/fhir-server`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEzOTgyOQ=="}, "originalCommit": {"oid": "7b58b14afa2ee799ac4b2b548787bf43345eac46"}, "originalPosition": 297}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDQyMzc0OnYy", "diffSide": "RIGHT", "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjo0OTozMlrOGAdwEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNzoyMDo0MFrOGAfTLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0MDYyNA==", "bodyText": "did you actually try this?  last time i tried it with the 'Lite' plan, it ran out of room.  this is why we have #819", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403140624", "createdAt": "2020-04-03T16:49:32Z", "author": {"login": "lmsurpre"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>`.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1de929fb16680beb69c58fc6abaf8fb597f912a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE1OTYxOQ==", "bodyText": "Yeah - I wanted to check on this.  I think took what we had there. and move it around . Let me move this to the appendix with additional details.", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403159619", "createdAt": "2020-04-03T17:13:35Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>`.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0MDYyNA=="}, "originalCommit": {"oid": "c1de929fb16680beb69c58fc6abaf8fb597f912a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE2NTk5Ng==", "bodyText": "Updated (in coming commit)", "url": "https://github.com/IBM/FHIR/pull/892#discussion_r403165996", "createdAt": "2020-04-03T17:20:40Z", "author": {"login": "prb112"}, "path": "docs/src/pages/guides/DB2OnCloudSetup.md", "diffHunk": "@@ -2,146 +2,173 @@\n layout: post\n title:  Setup for IBM Db2 on Cloud\n description: Setup for IBM Db2 on Cloud\n-date:   2020-03-27 09:59:05 -0400\n-permalink: /db2oncloudsetup/\n+date:   2020-04-03 09:59:05 -0400\n+permalink: /FHIR/guides/DB2OnCloudSetup\n ---\n \n ## Using Db2 for persistence\n \n-This document walks a developer or administrator through the steps necessary to setup and configure IBM Db2 on IBM Cloud for the IBM FHIR Server.\n+This document guides a developer or administrator through the steps necessary to setup and configure [IBM Db2 on IBM Cloud](https://cloud.ibm.com/catalog/services/db2) as a persistence layer for the IBM FHIR Server.\n \n-### Create a Db2 instance\n+### **Create a Db2 instance**\n \n-Log in to your IBM Cloud account https://cloud.ibm.com/.\n+1. Log in to your IBM Cloud account [Link](https://cloud.ibm.com/).\n \n-Click `Create resource`.\n+1. Click `Create resource`.\n \n-Choose `Db2 (transactional)`.\n+1. Choose `Db2 (transactional)`.\n \n-Select the instance size. Flex is the best choice for a basic production workload.\n+1. Select the Pricing Plan: \n+    - The IBM FHIR Server recommends the Flex plan for a production workload.\n+    - The IBM FHIR Server recommends the Flex plan for development, however, the Lite plan is possible for the development and evaluation. \n+      - **Note** The Lite plan has a limit of 5 concurrent connections, and the IBM FHIR Server `fhirProxyDataSource` needs to be updated to avoid failures. One should update the server.xml connectionManager with maxPoolSize - `<connectionManager maxPoolSize=\"5\"/>`.  Further, your instance may not be enabled with IAM enabled, and you may use the `Service Credentials` that are created to connect to configure the datasource. This is only acceptable with **development** and **experimentation**. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0MDYyNA=="}, "originalCommit": {"oid": "c1de929fb16680beb69c58fc6abaf8fb597f912a"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 163, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}