{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4ODIwNTI5", "number": 984, "title": "BulkData $bulkdata-status DELETE API must stop first #952", "bodyText": "Update REST Operation with method DELETE (takes no content)\nImproved the ImportOperationTest\nUpdate CosExportImpl\nImprove error conditions of DELETE support for the Java Batch\nFramework\n\nI executed the QA using injected code into the Import operation to test the behaviors and error conditions, as this could introduce risk in the resulting code I removed before I checked in.\nSigned-off-by: Paul Bastide pbastide@us.ibm.com", "createdAt": "2020-04-25T00:41:27Z", "url": "https://github.com/IBM/FHIR/pull/984", "merged": true, "mergeCommit": {"oid": "e136edce3d01c84de7beb97c3b0e0baa7a423068"}, "closed": true, "closedAt": "2020-04-28T18:04:39Z", "author": {"login": "prb112"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABca7G1xgH2gAyNDA4ODIwNTI5OmVkYmI4MWIzZDcwZjhlN2EzNDVkNGU5NzJhMjMxOGUzMDMyZjA5NjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccHxeMAFqTQwMjA4MTAyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "edbb81b3d70f8e7a345d4e972a2318e3032f0966", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/edbb81b3d70f8e7a345d4e972a2318e3032f0966", "committedDate": "2020-04-25T00:39:59Z", "message": "BulkData $bulkdata-status DELETE API must stop first #952\n\n- Update REST Operation with method DELETE (takes no content)\n- Improved the ImportOperationTest\n- Update CosExportImpl\n- Improve error conditions of DELETE support for the Java Batch\nFramework\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwOTc1MDI0", "url": "https://github.com/IBM/FHIR/pull/984#pullrequestreview-400975024", "createdAt": "2020-04-27T13:54:51Z", "commit": {"oid": "edbb81b3d70f8e7a345d4e972a2318e3032f0966"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzo1NDo1MVrOGMkcBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzo1NDo1MVrOGMkcBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzMzA5Mg==", "bodyText": "the function name sounds a little bit strange ...  maybe runStopJobForTenant() is better...", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415833092", "createdAt": "2020-04-27T13:54:51Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/client/BulkDataClient.java", "diffHunk": "@@ -312,11 +309,139 @@ public PollingLocationResponse status(String job) throws Exception {\n \n     /**\n      * @param job\n-     * @return\n+     * @return status code\n      * @throws Exception\n      */\n-    public void delete(String job) throws Exception {\n-        // Example: https://localhost:9443/ibm/api/batch/jobexecutions/9\n+    public Response.Status delete(String job) throws Exception {\n+        // <b>Code Flow</b>\n+        // 1 - Check if the Job Exists and is Valid\n+        // 2 - Check if the Tenant is expected\n+        // 3 - Try to immediately DELETE (Optimistic)\n+        //      A - SC_NO_CONTENT = SUCCESS GO_TO End\n+        //      B - !SC_INTERNAL_ERROR GO_TO STOP \n+        //      C - ERROR GO_TO Error \n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        // RETURN - ACCEPTED: SC_ACCEPTED - STILL PROCESSING\n+        // RETURN - DONE: SC_OK - DONE DELETING\n+\n+        // 1 and 2 (We know it exists)\n+        runVerificationOfTenantForJob(job);\n+\n+        // 3 optimistic delete (empty)\n+        Response.Status status = runDeleteOfTenantForJob(job);\n+\n+        // Check 3 (B), else fall through (A).\n+        // Default Response is Accepted (202)\n+        // The Alternative Response is 200\n+\n+        // Check for a server-side error\n+        if (HttpStatus.SC_INTERNAL_SERVER_ERROR == status.getStatusCode()) {\n+            // 3.C - ERROR Condition\n+            // The Server hit an error \n+            throw BulkDataExportUtil.buildOperationException(\n+                    \"Deleting the job has failed; the content is not abandonded\", IssueType.EXCEPTION);\n+        } else if (HttpStatus.SC_NO_CONTENT != status.getStatusCode()) {\n+            // The Delete is unsuccessful (SC_NO_CONTENT)\n+            // 3.B - STOP Condition and now step 4 in the flow.\n+            status = runStopOfTenantForJob(job);\n+        }\n+        return status;\n+    }\n+\n+    /*\n+     * stops the job (local or remote batch processor).\n+     */\n+    private Response.Status runStopOfTenantForJob(String job) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edbb81b3d70f8e7a345d4e972a2318e3032f0966"}, "originalPosition": 89}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwOTc1OTAz", "url": "https://github.com/IBM/FHIR/pull/984#pullrequestreview-400975903", "createdAt": "2020-04-27T13:55:43Z", "commit": {"oid": "edbb81b3d70f8e7a345d4e972a2318e3032f0966"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzo1NTo0M1rOGMkeyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzo1NTo0M1rOGMkeyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzMzgwMQ==", "bodyText": "the function name sounds a little bit weird, maybe runDeleteJobForTenant?", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415833801", "createdAt": "2020-04-27T13:55:43Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/client/BulkDataClient.java", "diffHunk": "@@ -312,11 +309,139 @@ public PollingLocationResponse status(String job) throws Exception {\n \n     /**\n      * @param job\n-     * @return\n+     * @return status code\n      * @throws Exception\n      */\n-    public void delete(String job) throws Exception {\n-        // Example: https://localhost:9443/ibm/api/batch/jobexecutions/9\n+    public Response.Status delete(String job) throws Exception {\n+        // <b>Code Flow</b>\n+        // 1 - Check if the Job Exists and is Valid\n+        // 2 - Check if the Tenant is expected\n+        // 3 - Try to immediately DELETE (Optimistic)\n+        //      A - SC_NO_CONTENT = SUCCESS GO_TO End\n+        //      B - !SC_INTERNAL_ERROR GO_TO STOP \n+        //      C - ERROR GO_TO Error \n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        // RETURN - ACCEPTED: SC_ACCEPTED - STILL PROCESSING\n+        // RETURN - DONE: SC_OK - DONE DELETING\n+\n+        // 1 and 2 (We know it exists)\n+        runVerificationOfTenantForJob(job);\n+\n+        // 3 optimistic delete (empty)\n+        Response.Status status = runDeleteOfTenantForJob(job);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edbb81b3d70f8e7a345d4e972a2318e3032f0966"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwOTc2Nzkz", "url": "https://github.com/IBM/FHIR/pull/984#pullrequestreview-400976793", "createdAt": "2020-04-27T13:56:33Z", "commit": {"oid": "edbb81b3d70f8e7a345d4e972a2318e3032f0966"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzo1NjozM1rOGMkhxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzo1NjozM1rOGMkhxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzNDU2Ng==", "bodyText": "this is a little bit strange, because in my tests, I did use put to stop my job request.", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415834566", "createdAt": "2020-04-27T13:56:33Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/client/BulkDataClient.java", "diffHunk": "@@ -312,11 +309,139 @@ public PollingLocationResponse status(String job) throws Exception {\n \n     /**\n      * @param job\n-     * @return\n+     * @return status code\n      * @throws Exception\n      */\n-    public void delete(String job) throws Exception {\n-        // Example: https://localhost:9443/ibm/api/batch/jobexecutions/9\n+    public Response.Status delete(String job) throws Exception {\n+        // <b>Code Flow</b>\n+        // 1 - Check if the Job Exists and is Valid\n+        // 2 - Check if the Tenant is expected\n+        // 3 - Try to immediately DELETE (Optimistic)\n+        //      A - SC_NO_CONTENT = SUCCESS GO_TO End\n+        //      B - !SC_INTERNAL_ERROR GO_TO STOP \n+        //      C - ERROR GO_TO Error \n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        // RETURN - ACCEPTED: SC_ACCEPTED - STILL PROCESSING\n+        // RETURN - DONE: SC_OK - DONE DELETING\n+\n+        // 1 and 2 (We know it exists)\n+        runVerificationOfTenantForJob(job);\n+\n+        // 3 optimistic delete (empty)\n+        Response.Status status = runDeleteOfTenantForJob(job);\n+\n+        // Check 3 (B), else fall through (A).\n+        // Default Response is Accepted (202)\n+        // The Alternative Response is 200\n+\n+        // Check for a server-side error\n+        if (HttpStatus.SC_INTERNAL_SERVER_ERROR == status.getStatusCode()) {\n+            // 3.C - ERROR Condition\n+            // The Server hit an error \n+            throw BulkDataExportUtil.buildOperationException(\n+                    \"Deleting the job has failed; the content is not abandonded\", IssueType.EXCEPTION);\n+        } else if (HttpStatus.SC_NO_CONTENT != status.getStatusCode()) {\n+            // The Delete is unsuccessful (SC_NO_CONTENT)\n+            // 3.B - STOP Condition and now step 4 in the flow.\n+            status = runStopOfTenantForJob(job);\n+        }\n+        return status;\n+    }\n+\n+    /*\n+     * stops the job (local or remote batch processor).\n+     */\n+    private Response.Status runStopOfTenantForJob(String job) throws Exception {\n+        // 4 - Check the State of the Job (batchStatus)\n+        //      - batchStatus - STARTING, STARTED, STOPPING, STOPPED, FAILED, COMPLETED, ABANDONED\n+\n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        Response.Status status = Response.Status.NO_CONTENT;\n+        try {\n+            // NOT_LOCAL - follow location \n+            String baseUrl =\n+                    properties.get(BulkDataConfigUtil.BATCH_URL).replace(\"jobinstances\", \"jobexecutions\") + \"/\" + job\n+                            + \"?action=stop\";\n+            WebTarget target = getWebTarget(baseUrl);\n+\n+            // The documentation says this is a PUT, however in practice it's actually a get.\n+            // @see https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__http_return_codes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edbb81b3d70f8e7a345d4e972a2318e3032f0966"}, "originalPosition": 107}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwOTgwMTQ4", "url": "https://github.com/IBM/FHIR/pull/984#pullrequestreview-400980148", "createdAt": "2020-04-27T14:00:03Z", "commit": {"oid": "edbb81b3d70f8e7a345d4e972a2318e3032f0966"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNDowMDowM1rOGMksXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNDowMDowM1rOGMksXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzNzI3Nw==", "bodyText": "maybe better to change the function name...", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415837277", "createdAt": "2020-04-27T14:00:03Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/client/BulkDataClient.java", "diffHunk": "@@ -312,11 +309,139 @@ public PollingLocationResponse status(String job) throws Exception {\n \n     /**\n      * @param job\n-     * @return\n+     * @return status code\n      * @throws Exception\n      */\n-    public void delete(String job) throws Exception {\n-        // Example: https://localhost:9443/ibm/api/batch/jobexecutions/9\n+    public Response.Status delete(String job) throws Exception {\n+        // <b>Code Flow</b>\n+        // 1 - Check if the Job Exists and is Valid\n+        // 2 - Check if the Tenant is expected\n+        // 3 - Try to immediately DELETE (Optimistic)\n+        //      A - SC_NO_CONTENT = SUCCESS GO_TO End\n+        //      B - !SC_INTERNAL_ERROR GO_TO STOP \n+        //      C - ERROR GO_TO Error \n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        // RETURN - ACCEPTED: SC_ACCEPTED - STILL PROCESSING\n+        // RETURN - DONE: SC_OK - DONE DELETING\n+\n+        // 1 and 2 (We know it exists)\n+        runVerificationOfTenantForJob(job);\n+\n+        // 3 optimistic delete (empty)\n+        Response.Status status = runDeleteOfTenantForJob(job);\n+\n+        // Check 3 (B), else fall through (A).\n+        // Default Response is Accepted (202)\n+        // The Alternative Response is 200\n+\n+        // Check for a server-side error\n+        if (HttpStatus.SC_INTERNAL_SERVER_ERROR == status.getStatusCode()) {\n+            // 3.C - ERROR Condition\n+            // The Server hit an error \n+            throw BulkDataExportUtil.buildOperationException(\n+                    \"Deleting the job has failed; the content is not abandonded\", IssueType.EXCEPTION);\n+        } else if (HttpStatus.SC_NO_CONTENT != status.getStatusCode()) {\n+            // The Delete is unsuccessful (SC_NO_CONTENT)\n+            // 3.B - STOP Condition and now step 4 in the flow.\n+            status = runStopOfTenantForJob(job);\n+        }\n+        return status;\n+    }\n+\n+    /*\n+     * stops the job (local or remote batch processor).\n+     */\n+    private Response.Status runStopOfTenantForJob(String job) throws Exception {\n+        // 4 - Check the State of the Job (batchStatus)\n+        //      - batchStatus - STARTING, STARTED, STOPPING, STOPPED, FAILED, COMPLETED, ABANDONED\n+\n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        Response.Status status = Response.Status.NO_CONTENT;\n+        try {\n+            // NOT_LOCAL - follow location \n+            String baseUrl =\n+                    properties.get(BulkDataConfigUtil.BATCH_URL).replace(\"jobinstances\", \"jobexecutions\") + \"/\" + job\n+                            + \"?action=stop\";\n+            WebTarget target = getWebTarget(baseUrl);\n+\n+            // The documentation says this is a PUT, however in practice it's actually a get.\n+            // @see https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__http_return_codes\n+            Response r = target.request().get();\n+            String responseStr = r.readEntity(String.class);\n+\n+            if (HttpStatus.SC_MOVED_TEMPORARILY == r.getStatus()) {\n+                // It's on a different server, and must be in the cluster.\n+                // If not, we're going to connect to location, and try a put.\n+                String location = r.getHeaderString(\"location\");\n+                if (location != null) {\n+                    // No matter what, tell people we accepted the call.\n+                    target = getWebTarget(location + \"?action=stop\");\n+                    // no assignment intentionally.\n+                    target.request().get();\n+                }\n+                // Here, we could easily respond with an Exception/OperationOutcome, however An unexpected error has \n+                // occurred while stopping/deleting the job on a batch cluster member\n+                status = Response.Status.ACCEPTED;\n+            } else if (HttpStatus.SC_OK == r.getStatus()) {\n+                // Check if the Status is GOOD\n+                JobExecutionResponse response = JobExecutionResponse.Parser.parse(responseStr);\n+                if (response.getBatchStatus().contains(\"STOPPING\")) {\n+                    // Signal that we're in a stopping condition.\n+                    status = Response.Status.ACCEPTED;\n+                }\n+                // Don't Delete, let the client flow through again and DELETE.\n+            } else if (HttpStatus.SC_CONFLICT == r.getStatus()) {\n+                status = Response.Status.ACCEPTED;\n+            } else {\n+                // Error Condition\n+                throw BulkDataExportUtil.buildOperationException(\n+                        \"An unexpected error has ocurred while stopping/deleting the job\", IssueType.TRANSIENT);\n+            }\n+\n+        } catch (FHIROperationException ex) {\n+            throw ex;\n+        } catch (Exception ex) {\n+            throw BulkDataExportUtil.buildOperationException(\"An unexpected error has ocurred while deleting the job\",\n+                    IssueType.TRANSIENT);\n+        }\n+        return status;\n+    }\n+\n+    /*\n+     * deletes the job\n+     */\n+    private Response.Status runDeleteOfTenantForJob(String job) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edbb81b3d70f8e7a345d4e972a2318e3032f0966"}, "originalPosition": 152}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f70f2b28f35dea0eb876b7708ad4abfa074a3760", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/f70f2b28f35dea0eb876b7708ad4abfa074a3760", "committedDate": "2020-04-27T14:02:45Z", "message": "BulkData $bulkdata-status DELETE API must stop first #952\n\nPer code review\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwOTkwOTM4", "url": "https://github.com/IBM/FHIR/pull/984#pullrequestreview-400990938", "createdAt": "2020-04-27T14:11:24Z", "commit": {"oid": "edbb81b3d70f8e7a345d4e972a2318e3032f0966"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNDoxMToyNVrOGMlP_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNDoxMToyNVrOGMlP_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg0NjM5OQ==", "bodyText": "maybe we should propose change to the bulkdata spec to add the 200 OK response for deletion. currently, in the spec, there is only 202 accepted for deletion.", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415846399", "createdAt": "2020-04-27T14:11:25Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/client/BulkDataClient.java", "diffHunk": "@@ -312,11 +309,139 @@ public PollingLocationResponse status(String job) throws Exception {\n \n     /**\n      * @param job\n-     * @return\n+     * @return status code\n      * @throws Exception\n      */\n-    public void delete(String job) throws Exception {\n-        // Example: https://localhost:9443/ibm/api/batch/jobexecutions/9\n+    public Response.Status delete(String job) throws Exception {\n+        // <b>Code Flow</b>\n+        // 1 - Check if the Job Exists and is Valid\n+        // 2 - Check if the Tenant is expected\n+        // 3 - Try to immediately DELETE (Optimistic)\n+        //      A - SC_NO_CONTENT = SUCCESS GO_TO End\n+        //      B - !SC_INTERNAL_ERROR GO_TO STOP \n+        //      C - ERROR GO_TO Error \n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        // RETURN - ACCEPTED: SC_ACCEPTED - STILL PROCESSING\n+        // RETURN - DONE: SC_OK - DONE DELETING", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edbb81b3d70f8e7a345d4e972a2318e3032f0966"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwOTk4NTQ3", "url": "https://github.com/IBM/FHIR/pull/984#pullrequestreview-400998547", "createdAt": "2020-04-27T14:19:09Z", "commit": {"oid": "f70f2b28f35dea0eb876b7708ad4abfa074a3760"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNDoxOToxMFrOGMlpOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNDoxOToxMFrOGMlpOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1Mjg1Nw==", "bodyText": "this is really a big surprise for me, because in my test, I always have to use PUT to stop the job, using GET only returns the current status of the job...", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415852857", "createdAt": "2020-04-27T14:19:10Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/client/BulkDataClient.java", "diffHunk": "@@ -312,11 +309,139 @@ public PollingLocationResponse status(String job) throws Exception {\n \n     /**\n      * @param job\n-     * @return\n+     * @return status code\n      * @throws Exception\n      */\n-    public void delete(String job) throws Exception {\n-        // Example: https://localhost:9443/ibm/api/batch/jobexecutions/9\n+    public Response.Status delete(String job) throws Exception {\n+        // <b>Code Flow</b>\n+        // 1 - Check if the Job Exists and is Valid\n+        // 2 - Check if the Tenant is expected\n+        // 3 - Try to immediately DELETE (Optimistic)\n+        //      A - SC_NO_CONTENT = SUCCESS GO_TO End\n+        //      B - !SC_INTERNAL_ERROR GO_TO STOP \n+        //      C - ERROR GO_TO Error \n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        // RETURN - ACCEPTED: SC_ACCEPTED - STILL PROCESSING\n+        // RETURN - DONE: SC_OK - DONE DELETING\n+\n+        // 1 and 2 (We know it exists)\n+        runVerificationOfTenantForJob(job);\n+\n+        // 3 optimistic delete (empty)\n+        Response.Status status = runDeleteJobForTenant(job);\n+\n+        // Check 3 (B), else fall through (A).\n+        // Default Response is Accepted (202)\n+        // The Alternative Response is 200\n+\n+        // Check for a server-side error\n+        if (HttpStatus.SC_INTERNAL_SERVER_ERROR == status.getStatusCode()) {\n+            // 3.C - ERROR Condition\n+            // The Server hit an error \n+            throw BulkDataExportUtil.buildOperationException(\n+                    \"Deleting the job has failed; the content is not abandonded\", IssueType.EXCEPTION);\n+        } else if (HttpStatus.SC_NO_CONTENT != status.getStatusCode()) {\n+            // The Delete is unsuccessful (SC_NO_CONTENT)\n+            // 3.B - STOP Condition and now step 4 in the flow.\n+            status = runStopOfTenantJob(job);\n+        }\n+        return status;\n+    }\n+\n+    /*\n+     * stops the job (local or remote batch processor).\n+     */\n+    private Response.Status runStopOfTenantJob(String job) throws Exception {\n+        // 4 - Check the State of the Job (batchStatus)\n+        //      - batchStatus - STARTING, STARTED, STOPPING, STOPPED, FAILED, COMPLETED, ABANDONED\n+\n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        Response.Status status = Response.Status.NO_CONTENT;\n+        try {\n+            // NOT_LOCAL - follow location \n+            String baseUrl =\n+                    properties.get(BulkDataConfigUtil.BATCH_URL).replace(\"jobinstances\", \"jobexecutions\") + \"/\" + job\n+                            + \"?action=stop\";\n+            WebTarget target = getWebTarget(baseUrl);\n+\n+            // The documentation says this is a PUT, however in practice it's actually a get.\n+            // @see https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__http_return_codes\n+            Response r = target.request().get();\n+            String responseStr = r.readEntity(String.class);\n+\n+            if (HttpStatus.SC_MOVED_TEMPORARILY == r.getStatus()) {\n+                // It's on a different server, and must be in the cluster.\n+                // If not, we're going to connect to location, and try a put.\n+                String location = r.getHeaderString(\"location\");\n+                if (location != null) {\n+                    // No matter what, tell people we accepted the call.\n+                    target = getWebTarget(location + \"?action=stop\");\n+                    // no assignment intentionally.\n+                    target.request().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f70f2b28f35dea0eb876b7708ad4abfa074a3760"}, "originalPosition": 119}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwOTk5OTE3", "url": "https://github.com/IBM/FHIR/pull/984#pullrequestreview-400999917", "createdAt": "2020-04-27T14:20:36Z", "commit": {"oid": "f70f2b28f35dea0eb876b7708ad4abfa074a3760"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNDoyMDozNlrOGMltkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNDoyMDozNlrOGMltkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1Mzk3MQ==", "bodyText": "when this error can happen? just curious", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r415853971", "createdAt": "2020-04-27T14:20:36Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-operation-bulkdata/src/main/java/com/ibm/fhir/operation/bulkdata/client/BulkDataClient.java", "diffHunk": "@@ -312,11 +309,139 @@ public PollingLocationResponse status(String job) throws Exception {\n \n     /**\n      * @param job\n-     * @return\n+     * @return status code\n      * @throws Exception\n      */\n-    public void delete(String job) throws Exception {\n-        // Example: https://localhost:9443/ibm/api/batch/jobexecutions/9\n+    public Response.Status delete(String job) throws Exception {\n+        // <b>Code Flow</b>\n+        // 1 - Check if the Job Exists and is Valid\n+        // 2 - Check if the Tenant is expected\n+        // 3 - Try to immediately DELETE (Optimistic)\n+        //      A - SC_NO_CONTENT = SUCCESS GO_TO End\n+        //      B - !SC_INTERNAL_ERROR GO_TO STOP \n+        //      C - ERROR GO_TO Error \n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        // RETURN - ACCEPTED: SC_ACCEPTED - STILL PROCESSING\n+        // RETURN - DONE: SC_OK - DONE DELETING\n+\n+        // 1 and 2 (We know it exists)\n+        runVerificationOfTenantForJob(job);\n+\n+        // 3 optimistic delete (empty)\n+        Response.Status status = runDeleteJobForTenant(job);\n+\n+        // Check 3 (B), else fall through (A).\n+        // Default Response is Accepted (202)\n+        // The Alternative Response is 200\n+\n+        // Check for a server-side error\n+        if (HttpStatus.SC_INTERNAL_SERVER_ERROR == status.getStatusCode()) {\n+            // 3.C - ERROR Condition\n+            // The Server hit an error \n+            throw BulkDataExportUtil.buildOperationException(\n+                    \"Deleting the job has failed; the content is not abandonded\", IssueType.EXCEPTION);\n+        } else if (HttpStatus.SC_NO_CONTENT != status.getStatusCode()) {\n+            // The Delete is unsuccessful (SC_NO_CONTENT)\n+            // 3.B - STOP Condition and now step 4 in the flow.\n+            status = runStopOfTenantJob(job);\n+        }\n+        return status;\n+    }\n+\n+    /*\n+     * stops the job (local or remote batch processor).\n+     */\n+    private Response.Status runStopOfTenantJob(String job) throws Exception {\n+        // 4 - Check the State of the Job (batchStatus)\n+        //      - batchStatus - STARTING, STARTED, STOPPING, STOPPED, FAILED, COMPLETED, ABANDONED\n+\n+        // 4 - Try to stop the PUT /ibm/api/batch/jobinstances/<job>?action=stop\n+        //     A - SC_CONTENT_REDIRECT (302) GO_TO Location to PUT\n+        //       - Stop requests sent to the batch REST API must be sent directly to the executor where the job is running.\n+        //       - Link - https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__STOP_requests\n+        //     B - SC_ACCEPTED (202) GO_TO ACCEPTED\n+        Response.Status status = Response.Status.NO_CONTENT;\n+        try {\n+            // NOT_LOCAL - follow location \n+            String baseUrl =\n+                    properties.get(BulkDataConfigUtil.BATCH_URL).replace(\"jobinstances\", \"jobexecutions\") + \"/\" + job\n+                            + \"?action=stop\";\n+            WebTarget target = getWebTarget(baseUrl);\n+\n+            // The documentation says this is a PUT, however in practice it's actually a get.\n+            // @see https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/rwlp_batch_rest_api.html#rwlp_batch_rest_api__http_return_codes\n+            Response r = target.request().get();\n+            String responseStr = r.readEntity(String.class);\n+\n+            if (HttpStatus.SC_MOVED_TEMPORARILY == r.getStatus()) {\n+                // It's on a different server, and must be in the cluster.\n+                // If not, we're going to connect to location, and try a put.\n+                String location = r.getHeaderString(\"location\");\n+                if (location != null) {\n+                    // No matter what, tell people we accepted the call.\n+                    target = getWebTarget(location + \"?action=stop\");\n+                    // no assignment intentionally.\n+                    target.request().get();\n+                }\n+                // Here, we could easily respond with an Exception/OperationOutcome, however An unexpected error has \n+                // occurred while stopping/deleting the job on a batch cluster member\n+                status = Response.Status.ACCEPTED;\n+            } else if (HttpStatus.SC_OK == r.getStatus()) {\n+                // Check if the Status is GOOD\n+                JobExecutionResponse response = JobExecutionResponse.Parser.parse(responseStr);\n+                if (response.getBatchStatus().contains(\"STOPPING\")) {\n+                    // Signal that we're in a stopping condition.\n+                    status = Response.Status.ACCEPTED;\n+                }\n+                // Don't Delete, let the client flow through again and DELETE.\n+            } else if (HttpStatus.SC_CONFLICT == r.getStatus()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f70f2b28f35dea0eb876b7708ad4abfa074a3760"}, "originalPosition": 132}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMjkwNzkw", "url": "https://github.com/IBM/FHIR/pull/984#pullrequestreview-401290790", "createdAt": "2020-04-27T20:13:08Z", "commit": {"oid": "f70f2b28f35dea0eb876b7708ad4abfa074a3760"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMDoxMzowOFrOGM1tTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMDoxMzowOFrOGM1tTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjExNjA0NA==", "bodyText": "the wording of this comment seemed a bit odd to me...is there a better way to say it?", "url": "https://github.com/IBM/FHIR/pull/984#discussion_r416116044", "createdAt": "2020-04-27T20:13:08Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/Operation.java", "diffHunk": "@@ -130,6 +131,49 @@ public Response invoke(@PathParam(\"operationName\") String operationName, Resourc\n         }\n     }\n \n+    @DELETE\n+    @Path(\"${operationName}\")\n+    public Response invokeDelete(@PathParam(\"operationName\") String operationName) {\n+        // This operation is at a top-level, there are no extra values passed through.\n+        // This feature is used by operations to execute a specific operation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f70f2b28f35dea0eb876b7708ad4abfa074a3760"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMjkxNjgx", "url": "https://github.com/IBM/FHIR/pull/984#pullrequestreview-401291681", "createdAt": "2020-04-27T20:14:25Z", "commit": {"oid": "f70f2b28f35dea0eb876b7708ad4abfa074a3760"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18f3ba1ad8ddab02f3f368f6d6f9dc6cf40bff56", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/18f3ba1ad8ddab02f3f368f6d6f9dc6cf40bff56", "committedDate": "2020-04-28T16:44:29Z", "message": "Merge branch 'master' into issue-952"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "829cb5390a8f1a9e77914071e74725145e8fa06d", "author": {"user": {"login": "prb112", "name": "Paul Bastide"}}, "url": "https://github.com/IBM/FHIR/commit/829cb5390a8f1a9e77914071e74725145e8fa06d", "committedDate": "2020-04-28T17:42:31Z", "message": "BulkData $bulkdata-status DELETE API must stop first #952\n\n- Refined the comment in Operation.java to indicate a clear purpose for\nthe System-Level Operation call to DELETE\n- Updated per discussion with Albert the behavior of the call to the\nSTOP/PUT action.\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMDgxMDIz", "url": "https://github.com/IBM/FHIR/pull/984#pullrequestreview-402081023", "createdAt": "2020-04-28T17:59:20Z", "commit": {"oid": "829cb5390a8f1a9e77914071e74725145e8fa06d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 398, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}