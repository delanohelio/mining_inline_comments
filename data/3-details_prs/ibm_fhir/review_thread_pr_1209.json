{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMDE2MTQ3", "number": 1209, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOToyODo0NlrOEEBidg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDowMDozNFrOEECKoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjU0OTY2OnYy", "diffSide": "RIGHT", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOToyODo0NlrOGhZFZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOToyOToyNlrOGhZGsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY2NzE3NQ==", "bodyText": "took me a second to follow this, but looks OK.", "url": "https://github.com/IBM/FHIR/pull/1209#discussion_r437667175", "createdAt": "2020-06-09T19:28:46Z", "author": {"login": "prb112"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "diffHunk": "@@ -154,12 +156,20 @@ protected void fillChunkDataBuffer(List<String> patientIds) throws Exception {\n                 if (!searchCriteria.isEmpty()) {\n                     queryParameters.put(Constants.FHIR_SEARCH_LASTUPDATED, searchCriteria);\n                 }\n-\n                 queryParameters.put(\"_sort\", Arrays.asList(new String[] { Constants.FHIR_SEARCH_LASTUPDATED }));\n \n-                for (String patientId : patientIds) {\n+                List<String> compartmentSearchCriterias = CompartmentUtil.getCompartmentResourceTypeInclusionCriteria(\"Patient\", resourceType.getSimpleName());\n+                if (compartmentSearchCriterias.size() > 1) {\n+                    isDoDuplicationCheck = true;\n+                }\n+\n+                for (String compartmentSearchCriteria: compartmentSearchCriterias) {\n+                    HashMap<String, List<String>> queryTmpParameters = new HashMap<>();\n+                    queryTmpParameters.putAll(queryParameters);\n+\n+                    queryTmpParameters.put(compartmentSearchCriteria, Arrays.asList(new String[] {String.join(\",\", patientIds)}));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e67865eeb1e3aefb1338acf76abbd751d538209e"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY2NzUwNQ==", "bodyText": ":)", "url": "https://github.com/IBM/FHIR/pull/1209#discussion_r437667505", "createdAt": "2020-06-09T19:29:26Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "diffHunk": "@@ -154,12 +156,20 @@ protected void fillChunkDataBuffer(List<String> patientIds) throws Exception {\n                 if (!searchCriteria.isEmpty()) {\n                     queryParameters.put(Constants.FHIR_SEARCH_LASTUPDATED, searchCriteria);\n                 }\n-\n                 queryParameters.put(\"_sort\", Arrays.asList(new String[] { Constants.FHIR_SEARCH_LASTUPDATED }));\n \n-                for (String patientId : patientIds) {\n+                List<String> compartmentSearchCriterias = CompartmentUtil.getCompartmentResourceTypeInclusionCriteria(\"Patient\", resourceType.getSimpleName());\n+                if (compartmentSearchCriterias.size() > 1) {\n+                    isDoDuplicationCheck = true;\n+                }\n+\n+                for (String compartmentSearchCriteria: compartmentSearchCriterias) {\n+                    HashMap<String, List<String>> queryTmpParameters = new HashMap<>();\n+                    queryTmpParameters.putAll(queryParameters);\n+\n+                    queryTmpParameters.put(compartmentSearchCriteria, Arrays.asList(new String[] {String.join(\",\", patientIds)}));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY2NzE3NQ=="}, "originalCommit": {"oid": "e67865eeb1e3aefb1338acf76abbd751d538209e"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjYzNjk4OnYy", "diffSide": "RIGHT", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo1NjowMlrOGhZ9Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMDo0NTowOFrOGhvR0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MTQ5MA==", "bodyText": "maybe add a TODO with a link to Issue #300 so that we remember to remove this line when we get to that?", "url": "https://github.com/IBM/FHIR/pull/1209#discussion_r437681490", "createdAt": "2020-06-09T19:56:02Z", "author": {"login": "lmsurpre"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "diffHunk": "@@ -133,6 +134,7 @@ protected void fillChunkDataBuffer(List<String> patientIds) throws Exception {\n         FHIRSearchContext searchContext;\n \n         if (chunkData != null) {\n+            patientIds.replaceAll(x -> \"Patient/\" + x);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e67865eeb1e3aefb1338acf76abbd751d538209e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAzMDgwMQ==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/1209#discussion_r438030801", "createdAt": "2020-06-10T10:45:08Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "diffHunk": "@@ -133,6 +134,7 @@ protected void fillChunkDataBuffer(List<String> patientIds) throws Exception {\n         FHIRSearchContext searchContext;\n \n         if (chunkData != null) {\n+            patientIds.replaceAll(x -> \"Patient/\" + x);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MTQ5MA=="}, "originalCommit": {"oid": "e67865eeb1e3aefb1338acf76abbd751d538209e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjY1MDYxOnYy", "diffSide": "RIGHT", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo1OTo1OFrOGhaF2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMDo0NzozNlrOGhvWpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MzY3Mw==", "bodyText": "where is this used?", "url": "https://github.com/IBM/FHIR/pull/1209#discussion_r437683673", "createdAt": "2020-06-09T19:59:58Z", "author": {"login": "lmsurpre"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "diffHunk": "@@ -154,12 +156,20 @@ protected void fillChunkDataBuffer(List<String> patientIds) throws Exception {\n                 if (!searchCriteria.isEmpty()) {\n                     queryParameters.put(Constants.FHIR_SEARCH_LASTUPDATED, searchCriteria);\n                 }\n-\n                 queryParameters.put(\"_sort\", Arrays.asList(new String[] { Constants.FHIR_SEARCH_LASTUPDATED }));\n \n-                for (String patientId : patientIds) {\n+                List<String> compartmentSearchCriterias = CompartmentUtil.getCompartmentResourceTypeInclusionCriteria(\"Patient\", resourceType.getSimpleName());\n+                if (compartmentSearchCriterias.size() > 1) {\n+                    isDoDuplicationCheck = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e67865eeb1e3aefb1338acf76abbd751d538209e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAzMjAzOA==", "bodyText": "used in following resources loop, because _typeFilters, and compartmentsearchCriterias search results can have duplication, this was why the duplication removing codes was added..", "url": "https://github.com/IBM/FHIR/pull/1209#discussion_r438032038", "createdAt": "2020-06-10T10:47:36Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "diffHunk": "@@ -154,12 +156,20 @@ protected void fillChunkDataBuffer(List<String> patientIds) throws Exception {\n                 if (!searchCriteria.isEmpty()) {\n                     queryParameters.put(Constants.FHIR_SEARCH_LASTUPDATED, searchCriteria);\n                 }\n-\n                 queryParameters.put(\"_sort\", Arrays.asList(new String[] { Constants.FHIR_SEARCH_LASTUPDATED }));\n \n-                for (String patientId : patientIds) {\n+                List<String> compartmentSearchCriterias = CompartmentUtil.getCompartmentResourceTypeInclusionCriteria(\"Patient\", resourceType.getSimpleName());\n+                if (compartmentSearchCriterias.size() > 1) {\n+                    isDoDuplicationCheck = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MzY3Mw=="}, "originalCommit": {"oid": "e67865eeb1e3aefb1338acf76abbd751d538209e"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjY1MjQ4OnYy", "diffSide": "RIGHT", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDowMDozNFrOGhaHIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDowMjo0N1rOGhaLwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4NDAwMA==", "bodyText": "should this be outside the for loop?", "url": "https://github.com/IBM/FHIR/pull/1209#discussion_r437684000", "createdAt": "2020-06-09T20:00:34Z", "author": {"login": "lmsurpre"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "diffHunk": "@@ -154,12 +156,20 @@ protected void fillChunkDataBuffer(List<String> patientIds) throws Exception {\n                 if (!searchCriteria.isEmpty()) {\n                     queryParameters.put(Constants.FHIR_SEARCH_LASTUPDATED, searchCriteria);\n                 }\n-\n                 queryParameters.put(\"_sort\", Arrays.asList(new String[] { Constants.FHIR_SEARCH_LASTUPDATED }));\n \n-                for (String patientId : patientIds) {\n+                List<String> compartmentSearchCriterias = CompartmentUtil.getCompartmentResourceTypeInclusionCriteria(\"Patient\", resourceType.getSimpleName());\n+                if (compartmentSearchCriterias.size() > 1) {\n+                    isDoDuplicationCheck = true;\n+                }\n+\n+                for (String compartmentSearchCriteria: compartmentSearchCriterias) {\n+                    HashMap<String, List<String>> queryTmpParameters = new HashMap<>();\n+                    queryTmpParameters.putAll(queryParameters);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e67865eeb1e3aefb1338acf76abbd751d538209e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4NTE4NA==", "bodyText": "never mind, now I see that each compartmentSearchCriteria gets its own search query...i was thinking it was all combined into a single query", "url": "https://github.com/IBM/FHIR/pull/1209#discussion_r437685184", "createdAt": "2020-06-09T20:02:47Z", "author": {"login": "lmsurpre"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/patient/ChunkReader.java", "diffHunk": "@@ -154,12 +156,20 @@ protected void fillChunkDataBuffer(List<String> patientIds) throws Exception {\n                 if (!searchCriteria.isEmpty()) {\n                     queryParameters.put(Constants.FHIR_SEARCH_LASTUPDATED, searchCriteria);\n                 }\n-\n                 queryParameters.put(\"_sort\", Arrays.asList(new String[] { Constants.FHIR_SEARCH_LASTUPDATED }));\n \n-                for (String patientId : patientIds) {\n+                List<String> compartmentSearchCriterias = CompartmentUtil.getCompartmentResourceTypeInclusionCriteria(\"Patient\", resourceType.getSimpleName());\n+                if (compartmentSearchCriterias.size() > 1) {\n+                    isDoDuplicationCheck = true;\n+                }\n+\n+                for (String compartmentSearchCriteria: compartmentSearchCriterias) {\n+                    HashMap<String, List<String>> queryTmpParameters = new HashMap<>();\n+                    queryTmpParameters.putAll(queryParameters);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4NDAwMA=="}, "originalCommit": {"oid": "e67865eeb1e3aefb1338acf76abbd751d538209e"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4880, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}