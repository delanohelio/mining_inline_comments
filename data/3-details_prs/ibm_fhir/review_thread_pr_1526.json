{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MjQxMjM5", "number": 1526, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo0MTowNlrOEoK-Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjozNDoyM1rOEohvuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTU4MjQ3OnYy", "diffSide": "LEFT", "path": "conformance/fhir-ig-davinci-pdex-plan-net/src/main/java/com/ibm/fhir/ig/davinci/pdex/plan/net/util/IndexGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo0MTowNlrOHZG2fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjoxNzo0MFrOHZqQug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA4ODcwMA==", "bodyText": "not related to the other changes, but thought I might as well include it anyway", "url": "https://github.com/IBM/FHIR/pull/1526#discussion_r496088700", "createdAt": "2020-09-28T16:41:06Z", "author": {"login": "lmsurpre"}, "path": "conformance/fhir-ig-davinci-pdex-plan-net/src/main/java/com/ibm/fhir/ig/davinci/pdex/plan/net/util/IndexGenerator.java", "diffHunk": "@@ -23,7 +23,6 @@\n public class IndexGenerator {\n     public static void main(String[] args) throws Exception {\n         buildAndWriteIndex(\"hl7/fhir/us/davinci-pdex-plan-net\");\n-        buildAndWriteIndex(\"hl7/fhir/uv/vhdir\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1877485ecf0d6e843af4198ef45b3fc11b0482b5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2ODg1OA==", "bodyText": "sounds good", "url": "https://github.com/IBM/FHIR/pull/1526#discussion_r496668858", "createdAt": "2020-09-29T12:17:40Z", "author": {"login": "prb112"}, "path": "conformance/fhir-ig-davinci-pdex-plan-net/src/main/java/com/ibm/fhir/ig/davinci/pdex/plan/net/util/IndexGenerator.java", "diffHunk": "@@ -23,7 +23,6 @@\n public class IndexGenerator {\n     public static void main(String[] args) throws Exception {\n         buildAndWriteIndex(\"hl7/fhir/us/davinci-pdex-plan-net\");\n-        buildAndWriteIndex(\"hl7/fhir/uv/vhdir\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA4ODcwMA=="}, "originalCommit": {"oid": "1877485ecf0d6e843af4198ef45b3fc11b0482b5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTI3NDk4OnYy", "diffSide": "RIGHT", "path": "fhir-server/liberty-config/config/default/fhir-server-config.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjoyNDozMlrOHZqgyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjozODowMFrOHZrBTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3Mjk2OA==", "bodyText": "If we require at least one auth mechanism to be selected, maybe adding a comment here to highlight it in the security block/json object", "url": "https://github.com/IBM/FHIR/pull/1526#discussion_r496672968", "createdAt": "2020-09-29T12:24:32Z", "author": {"login": "prb112"}, "path": "fhir-server/liberty-config/config/default/fhir-server-config.json", "diffHunk": "@@ -8,15 +8,29 @@\n             \"conditionalDeleteMaxNumber\": 10,\n             \"serverRegistryResourceProviderEnabled\": true\n         },\n-        \"authFilter\": {\n-            \"enabled\": false,\n-            \"authorizedClientCertClientCN\": \"\",\n-            \"authorizedClientCertIssuerOU\": \"\"\n-        },\n-        \"oauth\": {\n-            \"regUrl\": \"https://<host>:9443/oauth2/endpoint/oauth2-provider/registration\",\n-            \"authUrl\": \"https://<host>:9443/oauth2/endpoint/oauth2-provider/authorize\",\n-            \"tokenUrl\": \"https://<host>:9443/oauth2/endpoint/oauth2-provider/token\"\n+        \"security\": {\n+            \"cors\": true,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9adabdd2f0df8e373c28762dc509d126ba6363ef"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY4MTI5NQ==", "bodyText": "Remember, this is the \"advertised\" security capabilities (shows up in our CapabilityStatement), which doesn't necessarily need to match the real security used from the liberty config (e.g. server.xml).\nFor example, even with issue #1020 unresolved, its possible to use basic auth on the server but to add that auth via some proxy so that it appears \"open\" to end users.\nThus, I think its allowed to advertise no security mechanism.", "url": "https://github.com/IBM/FHIR/pull/1526#discussion_r496681295", "createdAt": "2020-09-29T12:38:00Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/liberty-config/config/default/fhir-server-config.json", "diffHunk": "@@ -8,15 +8,29 @@\n             \"conditionalDeleteMaxNumber\": 10,\n             \"serverRegistryResourceProviderEnabled\": true\n         },\n-        \"authFilter\": {\n-            \"enabled\": false,\n-            \"authorizedClientCertClientCN\": \"\",\n-            \"authorizedClientCertIssuerOU\": \"\"\n-        },\n-        \"oauth\": {\n-            \"regUrl\": \"https://<host>:9443/oauth2/endpoint/oauth2-provider/registration\",\n-            \"authUrl\": \"https://<host>:9443/oauth2/endpoint/oauth2-provider/authorize\",\n-            \"tokenUrl\": \"https://<host>:9443/oauth2/endpoint/oauth2-provider/token\"\n+        \"security\": {\n+            \"cors\": true,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3Mjk2OA=="}, "originalCommit": {"oid": "9adabdd2f0df8e373c28762dc509d126ba6363ef"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTI4MTM5OnYy", "diffSide": "RIGHT", "path": "fhir-server/liberty-config/server.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjoyNjowNlrOHZqktA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjo0OTowMVrOHZreJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3Mzk3Mg==", "bodyText": "I don't think this is a best practice.\nWe should probably limit to localhost or externalize the variable.", "url": "https://github.com/IBM/FHIR/pull/1526#discussion_r496673972", "createdAt": "2020-09-29T12:26:06Z", "author": {"login": "prb112"}, "path": "fhir-server/liberty-config/server.xml", "diffHunk": "@@ -99,6 +99,12 @@\n     </dataSource>\n \n     <webAppSecurity allowFailOverToBasicAuth=\"true\" singleSignonEnabled=\"false\"/>\n+    \n+    <cors domain=\"/\"\n+        allowedOrigins=\"*\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9adabdd2f0df8e373c28762dc509d126ba6363ef"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY4NDYwMg==", "bodyText": "I've heard this before too, although I'm not familiar with the downsides of allowing all origins.\nThe spec specifically calls out * as the \"easiest option\", although it does stop short of saying that it is recommended / not recommended.\nhttps://www.hl7.org/fhir/capabilitystatement-definitions.html#CapabilityStatement.rest.security.cors", "url": "https://github.com/IBM/FHIR/pull/1526#discussion_r496684602", "createdAt": "2020-09-29T12:42:36Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/liberty-config/server.xml", "diffHunk": "@@ -99,6 +99,12 @@\n     </dataSource>\n \n     <webAppSecurity allowFailOverToBasicAuth=\"true\" singleSignonEnabled=\"false\"/>\n+    \n+    <cors domain=\"/\"\n+        allowedOrigins=\"*\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3Mzk3Mg=="}, "originalCommit": {"oid": "9adabdd2f0df8e373c28762dc509d126ba6363ef"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY4ODY3Ng==", "bodyText": "interesting... https://advancedweb.hu/is-access-control-allow-origin-star-insecure/ it's not all that bad from this article", "url": "https://github.com/IBM/FHIR/pull/1526#discussion_r496688676", "createdAt": "2020-09-29T12:49:01Z", "author": {"login": "prb112"}, "path": "fhir-server/liberty-config/server.xml", "diffHunk": "@@ -99,6 +99,12 @@\n     </dataSource>\n \n     <webAppSecurity allowFailOverToBasicAuth=\"true\" singleSignonEnabled=\"false\"/>\n+    \n+    <cors domain=\"/\"\n+        allowedOrigins=\"*\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3Mzk3Mg=="}, "originalCommit": {"oid": "9adabdd2f0df8e373c28762dc509d126ba6363ef"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTI4NjQ3OnYy", "diffSide": "RIGHT", "path": "fhir-server/liberty-config/server.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjoyNzoyNVrOHZqnwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjo0MzoxN1rOHZrP7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3NDc1Mg==", "bodyText": "I'm not sure about the wildcard here, I think it's a-ok to have '*'", "url": "https://github.com/IBM/FHIR/pull/1526#discussion_r496674752", "createdAt": "2020-09-29T12:27:25Z", "author": {"login": "prb112"}, "path": "fhir-server/liberty-config/server.xml", "diffHunk": "@@ -99,6 +99,12 @@\n     </dataSource>\n \n     <webAppSecurity allowFailOverToBasicAuth=\"true\" singleSignonEnabled=\"false\"/>\n+    \n+    <cors domain=\"/\"\n+        allowedOrigins=\"*\"\n+        allowedMethods=\"GET, DELETE, POST, PUT, HEAD\"\n+        allowedHeaders=\"*\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9adabdd2f0df8e373c28762dc509d126ba6363ef"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY4NTAzOQ==", "bodyText": "Its allowed per the liberty docs.  Not sure if there are security ramifications or not, but I didn't see any reason to restrict which headers are allowed at this time.", "url": "https://github.com/IBM/FHIR/pull/1526#discussion_r496685039", "createdAt": "2020-09-29T12:43:17Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/liberty-config/server.xml", "diffHunk": "@@ -99,6 +99,12 @@\n     </dataSource>\n \n     <webAppSecurity allowFailOverToBasicAuth=\"true\" singleSignonEnabled=\"false\"/>\n+    \n+    <cors domain=\"/\"\n+        allowedOrigins=\"*\"\n+        allowedMethods=\"GET, DELETE, POST, PUT, HEAD\"\n+        allowedHeaders=\"*\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3NDc1Mg=="}, "originalCommit": {"oid": "9adabdd2f0df8e373c28762dc509d126ba6363ef"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTI5MDY4OnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/FHIRApplication.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjoyODozNFrOHZqqbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjo0Njo1NFrOHZrY4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3NTQzOQ==", "bodyText": "confirmation, if OAuth doesn't exist, we don't add and advertise?", "url": "https://github.com/IBM/FHIR/pull/1526#discussion_r496675439", "createdAt": "2020-09-29T12:28:34Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/FHIRApplication.java", "diffHunk": "@@ -61,7 +63,9 @@ public FHIRApplication() {\n                 classes.add(Search.class);\n                 classes.add(Update.class);\n                 classes.add(VRead.class);\n-                classes.add(WellKnown.class);\n+                if (FHIRConfigHelper.getBooleanProperty(FHIRConfiguration.PROPERTY_SECURITY_OAUTH_SMART_ENABLED, false)) {\n+                    classes.add(WellKnown.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9adabdd2f0df8e373c28762dc509d126ba6363ef"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY4NzMzMQ==", "bodyText": "the smart_enabled property lives UNDER oauth, so yes, if oauth field is missing, this smart field will be missing too (and thus false).  and yes, the idea is we shouldn't advertise SMART capabilities in this case.\nhowever, it is possible to have the fhir-server-config oauth field present and set to false, while the underlying smart_enabled field is set to true.\nIn this case, we will advertise the wellknown endpoint, but we won't advertise the oauth endpoints in the CapabilityStatement.  I considered changing this if to check that BOTH are enabled, but decided that this behavior would probably be acceptable (and maybe even useful in rare circumstances).", "url": "https://github.com/IBM/FHIR/pull/1526#discussion_r496687331", "createdAt": "2020-09-29T12:46:54Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/FHIRApplication.java", "diffHunk": "@@ -61,7 +63,9 @@ public FHIRApplication() {\n                 classes.add(Search.class);\n                 classes.add(Update.class);\n                 classes.add(VRead.class);\n-                classes.add(WellKnown.class);\n+                if (FHIRConfigHelper.getBooleanProperty(FHIRConfiguration.PROPERTY_SECURITY_OAUTH_SMART_ENABLED, false)) {\n+                    classes.add(WellKnown.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3NTQzOQ=="}, "originalCommit": {"oid": "9adabdd2f0df8e373c28762dc509d126ba6363ef"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTMxMzg1OnYy", "diffSide": "RIGHT", "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/WellKnown.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjozNDoyM1rOHZq4hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTo1NjoxN1rOHZ0-ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3OTA0Nw==", "bodyText": "does this deserve a backlog issue?", "url": "https://github.com/IBM/FHIR/pull/1526#discussion_r496679047", "createdAt": "2020-09-29T12:34:23Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/WellKnown.java", "diffHunk": "@@ -99,41 +107,36 @@ private JsonObject buildSmartConfig() throws Exception {\n         JsonObjectBuilder responseBuilder = Json.createObjectBuilder();\n \n         if (regURL != null && !regURL.isEmpty()) {\n-            responseBuilder.add(\"registration_endpoint\", regURL);\n+            responseBuilder.add(\"registration_endpoint\", regURL); // recommended\n         }\n \n-        return responseBuilder\n-                .add(\"authorization_endpoint\", authURL) // required\n-                .add(\"token_endpoint\", tokenURL) // required\n-                .add(\"scopes_supported\", Json.createArrayBuilder() // recommended\n-                    .add(\"openid\")\n-                    .add(\"profile\")\n-                    .add(\"offline_access\")\n-                    // TODO\n-//                    .add(\"launch\")\n-//                    .add(\"launch/patient\")\n-//                    .add(\"user/*.*\")\n-//                    .add(\"patient/*.*\")\n-                    .build())\n-                .add(\"response_types\", Json.createArrayBuilder() // recommended\n-                    .add(\"code\")\n-                    .add(\"token\")\n-                    .add(\"id_token token\")\n-                    .build())\n-                .add(\"capabilities\", Json.createArrayBuilder() // required\n-                    .add(\"launch-standalone\")\n-                    .add(\"client-public\")\n-                    .add(\"client-confidential-symmetric\")\n-                    .add(\"permission-offline\")\n-                    // TODO\n-//                    .add(\"context-standalone-patient\")\n-//                    .add(\"context-standalone-encounter\")\n-//                    .add(\"permission-user\")\n-//                    .add(\"permission-patient\")\n-                    .build())\n+        responseBuilder.add(\"authorization_endpoint\", authURL); // required\n+        responseBuilder.add(\"token_endpoint\", tokenURL); // required\n+\n+        if (supportedScopes != null && !supportedScopes.isEmpty()) {\n+            responseBuilder.add(\"scopes_supported\", Json.createArrayBuilder(supportedScopes).build()); // recommended\n+        }\n+\n+        responseBuilder.add(\"response_types\", Json.createArrayBuilder() // recommended\n+                .add(\"code\")\n+                .add(\"token\")\n+                .add(\"id_token token\")\n+                .build());\n+        responseBuilder.add(\"capabilities\", Json.createArrayBuilder() // required\n+                .add(\"launch-standalone\")\n+                .add(\"client-public\")\n+                .add(\"client-confidential-symmetric\")\n+                .add(\"permission-offline\")\n+                // TODO: make this configurable\n+                .add(\"context-standalone-patient\")\n+                .add(\"permission-patient\")\n+//                .add(\"context-standalone-encounter\")\n+//                .add(\"permission-user\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9adabdd2f0df8e373c28762dc509d126ba6363ef"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY5MTUyNQ==", "bodyText": "I could maybe just \"fix\" it by adding another property to the config.  let me just do that now.", "url": "https://github.com/IBM/FHIR/pull/1526#discussion_r496691525", "createdAt": "2020-09-29T12:53:27Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/WellKnown.java", "diffHunk": "@@ -99,41 +107,36 @@ private JsonObject buildSmartConfig() throws Exception {\n         JsonObjectBuilder responseBuilder = Json.createObjectBuilder();\n \n         if (regURL != null && !regURL.isEmpty()) {\n-            responseBuilder.add(\"registration_endpoint\", regURL);\n+            responseBuilder.add(\"registration_endpoint\", regURL); // recommended\n         }\n \n-        return responseBuilder\n-                .add(\"authorization_endpoint\", authURL) // required\n-                .add(\"token_endpoint\", tokenURL) // required\n-                .add(\"scopes_supported\", Json.createArrayBuilder() // recommended\n-                    .add(\"openid\")\n-                    .add(\"profile\")\n-                    .add(\"offline_access\")\n-                    // TODO\n-//                    .add(\"launch\")\n-//                    .add(\"launch/patient\")\n-//                    .add(\"user/*.*\")\n-//                    .add(\"patient/*.*\")\n-                    .build())\n-                .add(\"response_types\", Json.createArrayBuilder() // recommended\n-                    .add(\"code\")\n-                    .add(\"token\")\n-                    .add(\"id_token token\")\n-                    .build())\n-                .add(\"capabilities\", Json.createArrayBuilder() // required\n-                    .add(\"launch-standalone\")\n-                    .add(\"client-public\")\n-                    .add(\"client-confidential-symmetric\")\n-                    .add(\"permission-offline\")\n-                    // TODO\n-//                    .add(\"context-standalone-patient\")\n-//                    .add(\"context-standalone-encounter\")\n-//                    .add(\"permission-user\")\n-//                    .add(\"permission-patient\")\n-                    .build())\n+        responseBuilder.add(\"authorization_endpoint\", authURL); // required\n+        responseBuilder.add(\"token_endpoint\", tokenURL); // required\n+\n+        if (supportedScopes != null && !supportedScopes.isEmpty()) {\n+            responseBuilder.add(\"scopes_supported\", Json.createArrayBuilder(supportedScopes).build()); // recommended\n+        }\n+\n+        responseBuilder.add(\"response_types\", Json.createArrayBuilder() // recommended\n+                .add(\"code\")\n+                .add(\"token\")\n+                .add(\"id_token token\")\n+                .build());\n+        responseBuilder.add(\"capabilities\", Json.createArrayBuilder() // required\n+                .add(\"launch-standalone\")\n+                .add(\"client-public\")\n+                .add(\"client-confidential-symmetric\")\n+                .add(\"permission-offline\")\n+                // TODO: make this configurable\n+                .add(\"context-standalone-patient\")\n+                .add(\"permission-patient\")\n+//                .add(\"context-standalone-encounter\")\n+//                .add(\"permission-user\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3OTA0Nw=="}, "originalCommit": {"oid": "9adabdd2f0df8e373c28762dc509d126ba6363ef"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY5MzA1NA==", "bodyText": "no worries, just trying to take a critical eye to any change", "url": "https://github.com/IBM/FHIR/pull/1526#discussion_r496693054", "createdAt": "2020-09-29T12:55:35Z", "author": {"login": "prb112"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/WellKnown.java", "diffHunk": "@@ -99,41 +107,36 @@ private JsonObject buildSmartConfig() throws Exception {\n         JsonObjectBuilder responseBuilder = Json.createObjectBuilder();\n \n         if (regURL != null && !regURL.isEmpty()) {\n-            responseBuilder.add(\"registration_endpoint\", regURL);\n+            responseBuilder.add(\"registration_endpoint\", regURL); // recommended\n         }\n \n-        return responseBuilder\n-                .add(\"authorization_endpoint\", authURL) // required\n-                .add(\"token_endpoint\", tokenURL) // required\n-                .add(\"scopes_supported\", Json.createArrayBuilder() // recommended\n-                    .add(\"openid\")\n-                    .add(\"profile\")\n-                    .add(\"offline_access\")\n-                    // TODO\n-//                    .add(\"launch\")\n-//                    .add(\"launch/patient\")\n-//                    .add(\"user/*.*\")\n-//                    .add(\"patient/*.*\")\n-                    .build())\n-                .add(\"response_types\", Json.createArrayBuilder() // recommended\n-                    .add(\"code\")\n-                    .add(\"token\")\n-                    .add(\"id_token token\")\n-                    .build())\n-                .add(\"capabilities\", Json.createArrayBuilder() // required\n-                    .add(\"launch-standalone\")\n-                    .add(\"client-public\")\n-                    .add(\"client-confidential-symmetric\")\n-                    .add(\"permission-offline\")\n-                    // TODO\n-//                    .add(\"context-standalone-patient\")\n-//                    .add(\"context-standalone-encounter\")\n-//                    .add(\"permission-user\")\n-//                    .add(\"permission-patient\")\n-                    .build())\n+        responseBuilder.add(\"authorization_endpoint\", authURL); // required\n+        responseBuilder.add(\"token_endpoint\", tokenURL); // required\n+\n+        if (supportedScopes != null && !supportedScopes.isEmpty()) {\n+            responseBuilder.add(\"scopes_supported\", Json.createArrayBuilder(supportedScopes).build()); // recommended\n+        }\n+\n+        responseBuilder.add(\"response_types\", Json.createArrayBuilder() // recommended\n+                .add(\"code\")\n+                .add(\"token\")\n+                .add(\"id_token token\")\n+                .build());\n+        responseBuilder.add(\"capabilities\", Json.createArrayBuilder() // required\n+                .add(\"launch-standalone\")\n+                .add(\"client-public\")\n+                .add(\"client-confidential-symmetric\")\n+                .add(\"permission-offline\")\n+                // TODO: make this configurable\n+                .add(\"context-standalone-patient\")\n+                .add(\"permission-patient\")\n+//                .add(\"context-standalone-encounter\")\n+//                .add(\"permission-user\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3OTA0Nw=="}, "originalCommit": {"oid": "9adabdd2f0df8e373c28762dc509d126ba6363ef"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njg0NDQ0Ng==", "bodyText": "done", "url": "https://github.com/IBM/FHIR/pull/1526#discussion_r496844446", "createdAt": "2020-09-29T15:56:17Z", "author": {"login": "lmsurpre"}, "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/WellKnown.java", "diffHunk": "@@ -99,41 +107,36 @@ private JsonObject buildSmartConfig() throws Exception {\n         JsonObjectBuilder responseBuilder = Json.createObjectBuilder();\n \n         if (regURL != null && !regURL.isEmpty()) {\n-            responseBuilder.add(\"registration_endpoint\", regURL);\n+            responseBuilder.add(\"registration_endpoint\", regURL); // recommended\n         }\n \n-        return responseBuilder\n-                .add(\"authorization_endpoint\", authURL) // required\n-                .add(\"token_endpoint\", tokenURL) // required\n-                .add(\"scopes_supported\", Json.createArrayBuilder() // recommended\n-                    .add(\"openid\")\n-                    .add(\"profile\")\n-                    .add(\"offline_access\")\n-                    // TODO\n-//                    .add(\"launch\")\n-//                    .add(\"launch/patient\")\n-//                    .add(\"user/*.*\")\n-//                    .add(\"patient/*.*\")\n-                    .build())\n-                .add(\"response_types\", Json.createArrayBuilder() // recommended\n-                    .add(\"code\")\n-                    .add(\"token\")\n-                    .add(\"id_token token\")\n-                    .build())\n-                .add(\"capabilities\", Json.createArrayBuilder() // required\n-                    .add(\"launch-standalone\")\n-                    .add(\"client-public\")\n-                    .add(\"client-confidential-symmetric\")\n-                    .add(\"permission-offline\")\n-                    // TODO\n-//                    .add(\"context-standalone-patient\")\n-//                    .add(\"context-standalone-encounter\")\n-//                    .add(\"permission-user\")\n-//                    .add(\"permission-patient\")\n-                    .build())\n+        responseBuilder.add(\"authorization_endpoint\", authURL); // required\n+        responseBuilder.add(\"token_endpoint\", tokenURL); // required\n+\n+        if (supportedScopes != null && !supportedScopes.isEmpty()) {\n+            responseBuilder.add(\"scopes_supported\", Json.createArrayBuilder(supportedScopes).build()); // recommended\n+        }\n+\n+        responseBuilder.add(\"response_types\", Json.createArrayBuilder() // recommended\n+                .add(\"code\")\n+                .add(\"token\")\n+                .add(\"id_token token\")\n+                .build());\n+        responseBuilder.add(\"capabilities\", Json.createArrayBuilder() // required\n+                .add(\"launch-standalone\")\n+                .add(\"client-public\")\n+                .add(\"client-confidential-symmetric\")\n+                .add(\"permission-offline\")\n+                // TODO: make this configurable\n+                .add(\"context-standalone-patient\")\n+                .add(\"permission-patient\")\n+//                .add(\"context-standalone-encounter\")\n+//                .add(\"permission-user\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3OTA0Nw=="}, "originalCommit": {"oid": "9adabdd2f0df8e373c28762dc509d126ba6363ef"}, "originalPosition": 97}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4687, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}