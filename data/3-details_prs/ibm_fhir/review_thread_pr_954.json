{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2Mjk4MDc4", "number": 954, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMTowMzowNlrODz7BxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMTowMzowNlrODz7BxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NzcxMDc3OnYy", "diffSide": "RIGHT", "path": "fhir-profile/src/main/java/com/ibm/fhir/profile/ConstraintGenerator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMTowMzowNlrOGInlhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMToxNToxMFrOGIn_yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY5MDM3Mg==", "bodyText": "is there a bug this fixes?\nworth adding to the summary for the release?", "url": "https://github.com/IBM/FHIR/pull/954#discussion_r411690372", "createdAt": "2020-04-20T21:03:06Z", "author": {"login": "lmsurpre"}, "path": "fhir-profile/src/main/java/com/ibm/fhir/profile/ConstraintGenerator.java", "diffHunk": "@@ -340,6 +340,8 @@ private String generateReferenceTypeConstraint(ElementDefinition elementDefiniti\n \n         if (isOptional(elementDefinition)) {\n             sb.append(identifier).append(\".exists()\").append(\" implies (\");\n+        } else {\n+            sb.append(identifier).append(\".exists()\").append(\" and \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fbf121939830da907352f37da05e168db8673fa"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY5NzA5Nw==", "bodyText": "No formal issue was created for this but I think it makes sense to add it to the summary.", "url": "https://github.com/IBM/FHIR/pull/954#discussion_r411697097", "createdAt": "2020-04-20T21:15:10Z", "author": {"login": "JohnTimm"}, "path": "fhir-profile/src/main/java/com/ibm/fhir/profile/ConstraintGenerator.java", "diffHunk": "@@ -340,6 +340,8 @@ private String generateReferenceTypeConstraint(ElementDefinition elementDefiniti\n \n         if (isOptional(elementDefinition)) {\n             sb.append(identifier).append(\".exists()\").append(\" implies (\");\n+        } else {\n+            sb.append(identifier).append(\".exists()\").append(\" and \");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY5MDM3Mg=="}, "originalCommit": {"oid": "9fbf121939830da907352f37da05e168db8673fa"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4961, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}