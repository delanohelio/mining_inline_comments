{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MjA2NDU3", "number": 788, "title": "Issue #833 - prototype migration and add automated migration test", "bodyText": "Add support for arbitrary database migration logic.\nThis proof-of-concept extends our fhir-database-utils project with the\nability to define migration steps for tables within the schema and should\nextend to other object \"types\" as well.\nIt also illustrates the usage in two places:\n\ndrop the indices that were using the DATE_VALUE column\ndrop the ENFORCED FK constraints in all X_COMPOSITES tables (and add the new unenforced ones)", "createdAt": "2020-03-16T12:35:28Z", "url": "https://github.com/IBM/FHIR/pull/788", "merged": true, "mergeCommit": {"oid": "93f38edaee8c548dac2287182a6bcde82cd8d7a3"}, "closed": true, "closedAt": "2020-03-27T17:53:20Z", "author": {"login": "lmsurpre"}, "timelineItems": {"totalCount": 67, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcON2qxABqjMxMzMxMDcwNjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcR0GYtABqjMxNzMzNTExNzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4021cd53c3b138c63481f1bffb4abf1c1a829570", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/4021cd53c3b138c63481f1bffb4abf1c1a829570", "committedDate": "2020-03-16T07:19:36Z", "message": "Add support for arbitrary database migration logic\n\nThis proof-of-concept extends our fhir-database-utils project with the\nability to define pre and post-migration steps for cases where an\nidempotent \"apply\" just isn't enough.\n\nIt also illustrates the usage in two places:\n1. drop the DATE_VALUE column and reorg all X_DATE_VALUES tables\n2. drop the ENFORCED FK constraints in all X_COMPOSITES tables\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}, "afterCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/f6477fb3a5371be4631b11a5eae13e9bc36b33a8", "committedDate": "2020-03-16T13:09:22Z", "message": "Add support for arbitrary database migration logic\n\nThis proof-of-concept extends our fhir-database-utils project with the\nability to define pre and post-migration steps for cases where an\nidempotent \"apply\" just isn't enough.\n\nIt also illustrates the usage in two places:\n1. drop the DATE_VALUE column and reorg all X_DATE_VALUES tables\n2. drop the ENFORCED FK constraints in all X_COMPOSITES tables\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDE2MDc2", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376016076", "createdAt": "2020-03-17T13:09:12Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzowOToxMlrOF3bcQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzowOToxMlrOF3bcQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY2NTYwMg==", "bodyText": "I think you need to run this... https://dba.stackexchange.com/a/30233/202822\nI think this should be a second set of parameters.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393665602", "createdAt": "2020-03-17T13:09:12Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/ReorgTable.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * (C) Copyright IBM Corp. 2019\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.database.utils.common;\n+\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+import com.ibm.fhir.database.utils.api.IDatabaseStatement;\n+import com.ibm.fhir.database.utils.api.IDatabaseTranslator;\n+\n+/**\n+ * Reorg the schema.table\n+ */\n+public class ReorgTable implements IDatabaseStatement {\n+    private final String schemaName;\n+    private final String tableName;\n+\n+    /**\n+     * Public constructor\n+     * @param schemaName\n+     * @param tableName\n+     */\n+    public ReorgTable(String schemaName, String tableName) {\n+        DataDefinitionUtil.assertValidName(schemaName);\n+        DataDefinitionUtil.assertValidName(tableName);\n+        this.schemaName = schemaName;\n+        this.tableName = tableName;\n+    }\n+\n+    @Override\n+    public void run(IDatabaseTranslator translator, Connection c) {\n+        final String qname = DataDefinitionUtil.getQualifiedName(schemaName, tableName);\n+        final String ddl = \"CALL SYSPROC.ADMIN_CMD ('REORG TABLE \" + qname + \"')\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDE4NDA0", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376018404", "createdAt": "2020-03-17T13:12:11Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzoxMjoxMVrOF3bjqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzoxMjoxMVrOF3bjqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY2NzQ5Ng==", "bodyText": "might as well push this into the interface as a default implementation.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393667496", "createdAt": "2020-03-17T13:12:11Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/NopObject.java", "diffHunk": "@@ -33,6 +33,11 @@ public void apply(IDatabaseAdapter target) {\n         // We're NOP so we do nothing on purpose\n     }\n \n+    @Override\n+    public void apply(Integer priorVersion, IDatabaseAdapter target) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDIwMjIx", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376020221", "createdAt": "2020-03-17T13:14:31Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzoxNDozMVrOF3bo9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzoxNDozMVrOF3bo9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY2ODg1NQ==", "bodyText": "don't do anything here. we shouldn't make a new tablespace, or alter here.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393668855", "createdAt": "2020-03-17T13:14:31Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/Tablespace.java", "diffHunk": "@@ -44,6 +44,17 @@ public void apply(IDatabaseAdapter target) {\n         }\n     }\n \n+    @Override\n+    public void apply(Integer priorVersion, IDatabaseAdapter target) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDMzOTIx", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376033921", "createdAt": "2020-03-17T13:30:25Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozMDoyNVrOF3cSlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozMDoyNVrOF3cSlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY3OTUwOA==", "bodyText": "I've been reading through the steps included.  I think we should add Migration to the VERSION_HISTORY tracking table and DatabaseObjectType.\nWithout these steps, it'd be impossible to resume the specific migration in a deterministic way.  For instance, alter table would not work again, and fail.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393679508", "createdAt": "2020-03-17T13:30:25Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/BaseObject.java", "diffHunk": "@@ -31,28 +31,34 @@\n  * BaseObject\n  */\n public abstract class BaseObject implements IDatabaseObject {\n-    \n+\n     private static final Logger logger = Logger.getLogger(BaseObject.class.getName());\n-    \n+\n     // Used to randomize a sleep after a deadlock failure\n     private static final SecureRandom random = new SecureRandom();\n-    \n+\n     private final String schemaName;\n     private final String objectName;\n     private final DatabaseObjectType objectType;\n-    \n+\n     // tag map\n     private final Map<String,String> tags = new HashMap<>();\n-    \n+\n     // the database objects we depend on\n     private final Set<IDatabaseObject> dependencies = new HashSet<>();\n \n     // The privileges granted to different types of user\n     private final Map<String, Set<Privilege>> userPrivilegeMap = new HashMap<>();\n-    \n+\n     // The version number of the application schema this object applies to\n     private final int version;\n-    \n+\n+    // Steps to perform before updating from a previous version of this object\n+    protected final List<Migration> preSteps;\n+\n+    // Steps to perform after updating from a previous version of this object\n+    protected final List<Migration> postSteps;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDM2MTM1", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376036135", "createdAt": "2020-03-17T13:33:01Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozMzowMVrOF3cZFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozMzowMVrOF3cZFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4MTE3Mg==", "bodyText": "I like this approach 1..* instead of one at a time.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393681172", "createdAt": "2020-03-17T13:33:01Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/DropForeignKeyConstraint.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * (C) Copyright IBM Corp. 2019\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.database.utils.common;\n+\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import com.ibm.fhir.database.utils.api.IDatabaseStatement;\n+import com.ibm.fhir.database.utils.api.IDatabaseTranslator;\n+\n+/**\n+ * Drop columns from the schema.table\n+ */\n+public class DropForeignKeyConstraint implements IDatabaseStatement {\n+    private final String schemaName;\n+    private final String tableName;\n+    private final List<String> constraintNames;\n+\n+    /**\n+     * Public constructor\n+     * @param schemaName\n+     * @param tableName\n+     */\n+    public DropForeignKeyConstraint(String schemaName, String tableName, String... constraintName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDM2MjIz", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376036223", "createdAt": "2020-03-17T13:33:07Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozMzowN1rOF3cZWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozMzowN1rOF3cZWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4MTI0Mw==", "bodyText": "2020\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * (C) Copyright IBM Corp. 2019\n          \n          \n            \n             * (C) Copyright IBM Corp. 2019, 2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393681243", "createdAt": "2020-03-17T13:33:07Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/DropForeignKeyConstraint.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * (C) Copyright IBM Corp. 2019", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDM2NjAw", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376036600", "createdAt": "2020-03-17T13:33:32Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozMzozMlrOF3cagw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozMzozMlrOF3cagw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4MTUzOQ==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393681539", "createdAt": "2020-03-17T13:33:32Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/api/AllVersionHistoryService.java", "diffHunk": "@@ -22,4 +22,10 @@ public boolean applies(String objectSchema, String objectType, String objectName\n         return true;\n     }\n \n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDM2Nzcw", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376036770", "createdAt": "2020-03-17T13:33:42Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozMzo0MlrOF3cbFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozMzo0MlrOF3cbFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4MTY4Ng==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393681686", "createdAt": "2020-03-17T13:33:42Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/api/IVersionHistoryService.java", "diffHunk": "@@ -7,7 +7,7 @@\n package com.ibm.fhir.database.utils.api;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDM2OTQ1", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376036945", "createdAt": "2020-03-17T13:33:57Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozMzo1N1rOF3cbpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozMzo1N1rOF3cbpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4MTgzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * (C) Copyright IBM Corp. 2019\n          \n          \n            \n             * (C) Copyright IBM Corp. 2019, 2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393681830", "createdAt": "2020-03-17T13:33:57Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/DropColumn.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * (C) Copyright IBM Corp. 2019", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDM4MTMw", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376038130", "createdAt": "2020-03-17T13:35:17Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozNToxN1rOF3cfUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozNToxN1rOF3cfUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4Mjc2OA==", "bodyText": "I'm leaning towards NOT dropping columns...\n1 - we always leave a rollback point with the original data, and we can MOVE the data at any point, or re-index.\n2 - it should be relatively transparent.\nThoughts?", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393682768", "createdAt": "2020-03-17T13:35:17Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/DropColumn.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * (C) Copyright IBM Corp. 2019\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.database.utils.common;\n+\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import com.ibm.fhir.database.utils.api.IDatabaseStatement;\n+import com.ibm.fhir.database.utils.api.IDatabaseTranslator;\n+\n+/**\n+ * Drop columns from the schema.table\n+ */\n+public class DropColumn implements IDatabaseStatement {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDM5MDYw", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376039060", "createdAt": "2020-03-17T13:36:21Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozNjoyMVrOF3ciFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozNjoyMVrOF3ciFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4MzQ3Ng==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393683476", "createdAt": "2020-03-17T13:36:21Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/IDatabaseObject.java", "diffHunk": "@@ -16,7 +16,7 @@\n import com.ibm.fhir.task.api.ITaskGroup;\n \n /**\n- * Defines the Database Object's expected methods. \n+ * Defines the Database Object's expected methods.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDM5Njg5", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376039689", "createdAt": "2020-03-17T13:37:04Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozNzowNFrOF3cj-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozNzowNFrOF3cj-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4Mzk2Mg==", "bodyText": "I'd say add a NO OP default here.  It'll be fairly repeatable for StoredProcedures or other NO OP content such as Tablespaces.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393683962", "createdAt": "2020-03-17T13:37:04Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/IDatabaseObject.java", "diffHunk": "@@ -25,21 +25,29 @@\n      * @return\n      */\n     public int getVersion();\n-    \n+\n     /**\n      * Apply the DDL for this object to the target database\n+     * @param priorVersion\n      * @param target the database target\n      */\n     public void apply(IDatabaseAdapter target);\n-    \n+\n+    /**\n+     * Apply migration logic to bring the target database to the current level of this object\n+     * @param priorVersion\n+     * @param target the database target\n+     */\n+    public void apply(Integer priorVersion, IDatabaseAdapter target);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQxNDQ1", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376041445", "createdAt": "2020-03-17T13:38:59Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozODo1OVrOF3co_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozODo1OVrOF3co_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4NTI0NQ==", "bodyText": "I think documenting the method.\nStarting from the prior version, the Migration implements as a set of steps that are sequentially executed.\nAlso the set of IDatabaseStatements, maybe they should indicate if each step is idempotent.\nAlso a minor comment, to be consistent in this code base, shouldn't it be IMigration.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393685245", "createdAt": "2020-03-17T13:38:59Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/Migration.java", "diffHunk": "@@ -0,0 +1,17 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package com.ibm.fhir.database.utils.model;\n+\n+import java.util.List;\n+\n+import com.ibm.fhir.database.utils.api.IDatabaseStatement;\n+\n+/**\n+ * A database migration step\n+ */\n+public interface Migration {\n+    public List<IDatabaseStatement> migrateFrom(Integer priorVersion);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQxODUz", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376041853", "createdAt": "2020-03-17T13:39:30Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozOTozMFrOF3cqMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozOTozMFrOF3cqMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4NTU1NQ==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393685555", "createdAt": "2020-03-17T13:39:30Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/ObjectGroup.java", "diffHunk": "@@ -22,10 +22,10 @@\n \n     // the list of objects in our group\n     private final List<IDatabaseObject> group = new ArrayList<>();\n-    \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQyMTMz", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376042133", "createdAt": "2020-03-17T13:39:48Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozOTo0OVrOF3cq6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozOTo0OVrOF3cq6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4NTczOA==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393685738", "createdAt": "2020-03-17T13:39:49Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/PhysicalDataModel.java", "diffHunk": "@@ -32,27 +32,27 @@\n  */\n public class PhysicalDataModel implements IDataModel {\n     private static final Logger logger = Logger.getLogger(PhysicalDataModel.class.getName());\n-    \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQyMjkw", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376042290", "createdAt": "2020-03-17T13:39:59Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozOTo1OVrOF3crUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozOTo1OVrOF3crUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4NTg0MQ==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393685841", "createdAt": "2020-03-17T13:39:59Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/ProcedureDef.java", "diffHunk": "@@ -12,14 +12,13 @@\n import com.ibm.fhir.database.utils.api.IDatabaseAdapter;\n \n /**\n- * The definition of a stored procedure, whose content is provided by a Supplier<String>\n- * function\n+ * The definition of a stored procedure, whose content is provided by a Supplier<String> function", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQyODE5", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376042819", "createdAt": "2020-03-17T13:40:34Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0MDozNFrOF3cs1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0MDozNFrOF3cs1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4NjIyOA==", "bodyText": "Yes, pre-migration logic makes sense here.\nAs does post-migration logic.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393686228", "createdAt": "2020-03-17T13:40:34Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/ProcedureDef.java", "diffHunk": "@@ -44,17 +40,23 @@ public void apply(IDatabaseAdapter target) {\n         }\n     }\n \n-    /* (non-Javadoc)\n-     * @see com.ibm.fhir.database.utils.model.IDatabaseObject#drop(com.ibm.fhir.database.utils.api.IDatabaseAdapter)\n-     */\n+    @Override\n+    public void apply(Integer priorVersion, IDatabaseAdapter target) {\n+        // Serialize the execution of the procedure, to try and avoid the\n+        // horrible deadlocks we keep getting\n+        synchronized(target) {\n+            // TODO migration logic here?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQzNTQx", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376043541", "createdAt": "2020-03-17T13:41:23Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0MToyNFrOF3cvKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0MToyNFrOF3cvKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4NjgyNA==", "bodyText": "how does synchronized help with deadlocks here? it's synchronized in java code? I realize you are not the original person to author it... but if you know...", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393686824", "createdAt": "2020-03-17T13:41:24Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/ProcedureDef.java", "diffHunk": "@@ -44,17 +40,23 @@ public void apply(IDatabaseAdapter target) {\n         }\n     }\n \n-    /* (non-Javadoc)\n-     * @see com.ibm.fhir.database.utils.model.IDatabaseObject#drop(com.ibm.fhir.database.utils.api.IDatabaseAdapter)\n-     */\n+    @Override\n+    public void apply(Integer priorVersion, IDatabaseAdapter target) {\n+        // Serialize the execution of the procedure, to try and avoid the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQ0MjYy", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376044262", "createdAt": "2020-03-17T13:42:14Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0MjoxNFrOF3cxOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0MjoxNFrOF3cxOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4NzM1NA==", "bodyText": "I actually agree with Reorg.\nI don't think it should be Reorg Table\nYou can reorg indices as well and other database objects.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393687354", "createdAt": "2020-03-17T13:42:14Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/Reorg.java", "diffHunk": "@@ -1,14 +0,0 @@\n-/*\n- * (C) Copyright IBM Corp. 2019\n- *\n- * SPDX-License-Identifier: Apache-2.0\n- */\n-\n-package com.ibm.fhir.database.utils.model;\n-\n-/**\n- * Representing the SQL function\n- */\n-public class Reorg {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQ1MzA4", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376045308", "createdAt": "2020-03-17T13:43:21Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0MzoyMlrOF3c0Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0MzoyMlrOF3c0Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4ODE0Mw==", "bodyText": "we should leave a note here to make it intentional that grants should be carefully evaluated to see if there is an update required in the Migration step, such as a change to the operational user.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393688143", "createdAt": "2020-03-17T13:43:22Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/ProcedureDef.java", "diffHunk": "@@ -44,17 +40,23 @@ public void apply(IDatabaseAdapter target) {\n         }\n     }\n \n-    /* (non-Javadoc)\n-     * @see com.ibm.fhir.database.utils.model.IDatabaseObject#drop(com.ibm.fhir.database.utils.api.IDatabaseAdapter)\n-     */\n+    @Override\n+    public void apply(Integer priorVersion, IDatabaseAdapter target) {\n+        // Serialize the execution of the procedure, to try and avoid the\n+        // horrible deadlocks we keep getting\n+        synchronized(target) {\n+            // TODO migration logic here?\n+            target.createProcedure(getSchemaName(), getObjectName(), supplier);\n+        }\n+    }\n+\n     @Override\n     public void drop(IDatabaseAdapter target) {\n         target.dropProcedure(getSchemaName(), getObjectName());\n     }\n-    \n-       @Override\n-       protected void grantGroupPrivileges(IDatabaseAdapter target, Set<Privilege> group, String toUser) {\n-            target.grantProcedurePrivileges(getSchemaName(), getObjectName(), group, toUser);\n-        }\n \n+    @Override\n+    protected void grantGroupPrivileges(IDatabaseAdapter target, Set<Privilege> group, String toUser) {\n+        target.grantProcedurePrivileges(getSchemaName(), getObjectName(), group, toUser);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQ2MDk3", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376046097", "createdAt": "2020-03-17T13:44:17Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0NDoxN1rOF3c2vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0NDoxN1rOF3c2vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4ODc2NA==", "bodyText": "I think we should pass in DatabaseObject and choose the object name to reorg or inherit off of the Reorg object (see Reorg below)", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393688764", "createdAt": "2020-03-17T13:44:17Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/ReorgTable.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * (C) Copyright IBM Corp. 2019\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.database.utils.common;\n+\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+import com.ibm.fhir.database.utils.api.IDatabaseStatement;\n+import com.ibm.fhir.database.utils.api.IDatabaseTranslator;\n+\n+/**\n+ * Reorg the schema.table\n+ */\n+public class ReorgTable implements IDatabaseStatement {\n+    private final String schemaName;\n+    private final String tableName;\n+\n+    /**\n+     * Public constructor\n+     * @param schemaName\n+     * @param tableName\n+     */\n+    public ReorgTable(String schemaName, String tableName) {\n+        DataDefinitionUtil.assertValidName(schemaName);\n+        DataDefinitionUtil.assertValidName(tableName);\n+        this.schemaName = schemaName;\n+        this.tableName = tableName;\n+    }\n+\n+    @Override\n+    public void run(IDatabaseTranslator translator, Connection c) {\n+        final String qname = DataDefinitionUtil.getQualifiedName(schemaName, tableName);\n+        final String ddl = \"CALL SYSPROC.ADMIN_CMD ('REORG TABLE \" + qname + \"')\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQ2ODUz", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376046853", "createdAt": "2020-03-17T13:45:08Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0NTowOFrOF3c46g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0NTowOFrOF3c46g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4OTMyMg==", "bodyText": "We should only create this one time. I actually don't even think this is in our schema today.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393689322", "createdAt": "2020-03-17T13:45:08Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/RowArrayType.java", "diffHunk": "@@ -39,6 +39,11 @@ public void apply(IDatabaseAdapter target) {\n         target.createArrType(getSchemaName(), getObjectName(), rowTypeName, arraySize);\n     }\n \n+    @Override\n+    public void apply(Integer priorVersion, IDatabaseAdapter target) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQ3MTQ2", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376047146", "createdAt": "2020-03-17T13:45:28Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0NToyOFrOF3c5zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0NToyOFrOF3c5zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4OTU1MQ==", "bodyText": "similar comment to RowType.  we don't actually use it right now.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393689551", "createdAt": "2020-03-17T13:45:28Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/RowType.java", "diffHunk": "@@ -29,22 +29,27 @@ public void apply(IDatabaseAdapter target) {\n         target.createRowType(getSchemaName(), getObjectName(), columns);\n     }\n \n+    @Override\n+    public void apply(Integer priorVersion, IDatabaseAdapter target) {\n+        target.createRowType(getSchemaName(), getObjectName(), columns);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQ3NjA0", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376047604", "createdAt": "2020-03-17T13:46:01Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0NjowMVrOF3c7PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0NjowMVrOF3c7PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4OTkxNw==", "bodyText": "I firmly believe we should have a NoOp here.  we should not create a sequence again.  only one time.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393689917", "createdAt": "2020-03-17T13:46:01Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/Sequence.java", "diffHunk": "@@ -32,11 +32,16 @@ public void apply(IDatabaseAdapter target) {\n         target.createSequence(getSchemaName(), getObjectName(), this.cache);\n     }\n \n+    @Override\n+    public void apply(Integer priorVersion, IDatabaseAdapter target) {\n+        target.createSequence(getSchemaName(), getObjectName(), this.cache);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQ3Nzg1", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376047785", "createdAt": "2020-03-17T13:46:13Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0NjoxM1rOF3c70w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0NjoxM1rOF3c70w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5MDA2Nw==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393690067", "createdAt": "2020-03-17T13:46:13Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/RowType.java", "diffHunk": "@@ -18,7 +18,7 @@\n  */\n public class RowType extends BaseObject {\n     private final List<ColumnBase> columns = new ArrayList<>();\n-    \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQ4MDA4", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376048008", "createdAt": "2020-03-17T13:46:28Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0NjoyOFrOF3c8fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0NjoyOFrOF3c8fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5MDIzOA==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393690238", "createdAt": "2020-03-17T13:46:28Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/RowArrayType.java", "diffHunk": "@@ -39,6 +39,11 @@ public void apply(IDatabaseAdapter target) {\n         target.createArrType(getSchemaName(), getObjectName(), rowTypeName, arraySize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQ4MjY4", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376048268", "createdAt": "2020-03-17T13:46:44Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0Njo0NFrOF3c9aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0Njo0NFrOF3c9aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5MDQ3Mw==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393690473", "createdAt": "2020-03-17T13:46:44Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/Sequence.java", "diffHunk": "@@ -32,11 +32,16 @@ public void apply(IDatabaseAdapter target) {\n         target.createSequence(getSchemaName(), getObjectName(), this.cache);\n     }\n \n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQ5MTU3", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376049157", "createdAt": "2020-03-17T13:47:41Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0Nzo0MVrOF3c_6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0Nzo0MVrOF3c_6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5MTExMw==", "bodyText": "we should not have logic here to apply a new version.  Only the first time. it's like a sequence, very integral to the overall operation.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393691113", "createdAt": "2020-03-17T13:47:41Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/SessionVariableDef.java", "diffHunk": "@@ -12,35 +12,31 @@\n \n /**\n  * Adds a session variable to the database\n-\n- *\n  */\n public class SessionVariableDef extends BaseObject {\n-    \n+\n     public SessionVariableDef(String schemaName, String variableName, int version) {\n         super(schemaName, variableName, DatabaseObjectType.VARIABLE, version);\n     }\n-    \n \n-    /* (non-Javadoc)\n-     * @see com.ibm.fhir.database.utils.model.IDatabaseObject#apply(com.ibm.fhir.database.utils.api.IDatabaseAdapter)\n-     */\n     @Override\n     public void apply(IDatabaseAdapter target) {\n         target.createIntVariable(getSchemaName(), getObjectName());\n     }\n \n-    /* (non-Javadoc)\n-     * @see com.ibm.fhir.database.utils.model.IDatabaseObject#drop(com.ibm.fhir.database.utils.api.IDatabaseAdapter)\n-     */\n+    @Override\n+    public void apply(Integer priorVersion, IDatabaseAdapter target) {\n+        target.createIntVariable(getSchemaName(), getObjectName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQ5MjUx", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376049251", "createdAt": "2020-03-17T13:47:47Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0Nzo0OFrOF3dAIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0Nzo0OFrOF3dAIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5MTE3MQ==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393691171", "createdAt": "2020-03-17T13:47:48Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/SessionVariableDef.java", "diffHunk": "@@ -12,35 +12,31 @@\n \n /**\n  * Adds a session variable to the database\n-\n- *\n  */\n public class SessionVariableDef extends BaseObject {\n-    \n+\n     public SessionVariableDef(String schemaName, String variableName, int version) {\n         super(schemaName, variableName, DatabaseObjectType.VARIABLE, version);\n     }\n-    \n \n-    /* (non-Javadoc)\n-     * @see com.ibm.fhir.database.utils.model.IDatabaseObject#apply(com.ibm.fhir.database.utils.api.IDatabaseAdapter)\n-     */\n     @Override\n     public void apply(IDatabaseAdapter target) {\n         target.createIntVariable(getSchemaName(), getObjectName());\n     }\n \n-    /* (non-Javadoc)\n-     * @see com.ibm.fhir.database.utils.model.IDatabaseObject#drop(com.ibm.fhir.database.utils.api.IDatabaseAdapter)\n-     */\n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQ5NDIx", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376049421", "createdAt": "2020-03-17T13:48:00Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0ODowMFrOF3dApA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0ODowMFrOF3dApA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5MTMwMA==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393691300", "createdAt": "2020-03-17T13:48:00Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/Tablespace.java", "diffHunk": "@@ -18,8 +18,8 @@\n /**\n  * Used to create and drop tablespaces within a database\n  */\n-public class Tablespace extends DatabaseObject {    \n-    \n+public class Tablespace extends DatabaseObject {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDQ5Nzg3", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376049787", "createdAt": "2020-03-17T13:48:27Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0ODoyOFrOF3dBtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0ODoyOFrOF3dBtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5MTU3Mw==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393691573", "createdAt": "2020-03-17T13:48:28Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/version/VersionHistoryService.java", "diffHunk": "@@ -24,10 +24,10 @@\n \n     // The name of the admin schema we are working with\n     private final String adminSchemaName;\n-    \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDUxMjc3", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376051277", "createdAt": "2020-03-17T13:50:08Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1MDowOFrOF3dGJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1MDowOFrOF3dGJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5MjcwOQ==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393692709", "createdAt": "2020-03-17T13:50:08Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/test/java/com/ibm/fhir/schema/control/VersionHistoryServiceTest.java", "diffHunk": "@@ -23,24 +23,17 @@\n     // history information collected during schema application\n     private final ConcurrentHashMap<String, Integer> newHistory = new ConcurrentHashMap<>();\n \n-    /* (non-Javadoc)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDUyNDM1", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376052435", "createdAt": "2020-03-17T13:51:30Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1MTozMFrOF3dJug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1MTozMFrOF3dJug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5MzYyNg==", "bodyText": "Is this really testing VersionHistory service? shouldn't it return -1 or something to confirm?", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393693626", "createdAt": "2020-03-17T13:51:30Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/test/java/com/ibm/fhir/schema/control/VersionHistoryServiceTest.java", "diffHunk": "@@ -64,4 +57,12 @@ public void addTestHistory(String objectSchema, String objectType, String object\n     public static String makeKey(String objectSchema, String objectType, String objectName) {\n         return objectSchema + \":\" + objectType + \":\" + objectName;\n     }\n+\n+    /**\n+     * Always returns null\n+     */\n+    @Override\n+    public Integer getVersion(String objectSchema, String objectType, String objectName) {\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDU2NDIw", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376056420", "createdAt": "2020-03-17T13:55:51Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1NTo1MVrOF3dVpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1NTo1MVrOF3dVpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5NjY3Nw==", "bodyText": "if you apply this (say 2 steps)\nstep 1 alter table add column succeeds\nstep 2 move content (say these are in pre-steps)\nwhat happens to the above.\nis it idempotent? is it in a deterministic state?  right now I don't think we could successfully migrate beyond one step one version in a deterministic way.\nI think we have to track the migration steps in VERSION_HISTORY and filter the successful steps.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393696677", "createdAt": "2020-03-17T13:55:51Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/Table.java", "diffHunk": "@@ -137,6 +137,17 @@ public void apply(IDatabaseAdapter target) {\n         }\n     }\n \n+    @Override\n+    public void apply(Integer priorVersion, IDatabaseAdapter target) {\n+        for (Migration step : preSteps) {\n+            step.migrateFrom(priorVersion).stream().forEachOrdered(target::runStatement);\n+        }\n+        apply(target);\n+        for (Migration step : postSteps) {\n+            step.migrateFrom(priorVersion).stream().forEachOrdered(target::runStatement);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDU3NDA3", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376057407", "createdAt": "2020-03-17T13:56:55Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1Njo1NVrOF3dYgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1Njo1NVrOF3dYgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5NzQxMA==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393697410", "createdAt": "2020-03-17T13:56:55Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/VersionedSchemaObject.java", "diffHunk": "@@ -6,6 +6,9 @@\n \n package com.ibm.fhir.database.utils.model;\n \n+import java.util.Arrays;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDU4MjAy", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376058202", "createdAt": "2020-03-17T13:57:47Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1Nzo0N1rOF3dayA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1Nzo0N1rOF3dayA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5Nzk5Mg==", "bodyText": "The Title of the Java class makes me realize that we don't VERSION Indices.  I think we should (we have altered the signatures of a few of them without renaming them - drop-add)", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393697992", "createdAt": "2020-03-17T13:57:47Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/VersionedSchemaObject.java", "diffHunk": "@@ -6,6 +6,9 @@\n \n package com.ibm.fhir.database.utils.model;\n \n+import java.util.Arrays;\n+import java.util.List;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDU5NTQ3", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376059547", "createdAt": "2020-03-17T13:59:13Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1OToxM1rOF3detQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1OToxM1rOF3detQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5ODk5Nw==", "bodyText": "I think the addPostStep should be backed by an ArrayList (I know we talked about a queue as well.  As long as all the statements are deterministic).", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393698997", "createdAt": "2020-03-17T13:59:13Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirResourceTableGroup.java", "diffHunk": "@@ -397,6 +400,14 @@ public void addDateValues(List<IDatabaseObject> group, String prefix) {\n                 .setTablespace(fhirTablespace)\n                 .addPrivileges(resourceTablePrivileges)\n                 .enableAccessControl(this.sessionVariable)\n+                .addPostStep(priorVersion -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDYwMDU5", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-376060059", "createdAt": "2020-03-17T13:59:46Z", "commit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1OTo0NlrOF3dgHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo1OTo0NlrOF3dgHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5OTM1OA==", "bodyText": "I don't think we should drop this column.  I think we leave it for a minimum number of versions.", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r393699358", "createdAt": "2020-03-17T13:59:46Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirResourceTableGroup.java", "diffHunk": "@@ -397,6 +400,14 @@ public void addDateValues(List<IDatabaseObject> group, String prefix) {\n                 .setTablespace(fhirTablespace)\n                 .addPrivileges(resourceTablePrivileges)\n                 .enableAccessControl(this.sessionVariable)\n+                .addPostStep(priorVersion -> {\n+                    List<IDatabaseStatement> statements = new ArrayList<>();\n+                    if (priorVersion == 1) {\n+                        statements.add(new DropColumn(schemaName, tableName, \"DATE_VALUE\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6477fb3a5371be4631b11a5eae13e9bc36b33a8"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "928858a4bbae18a460438940d49353a97b98b82c", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/928858a4bbae18a460438940d49353a97b98b82c", "committedDate": "2020-03-18T15:59:53Z", "message": "Moved table reorg into db2Adapter and sandwhiched it with runstats\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}, "afterCommit": {"oid": "56f95af848d679bfbab31afa4128e6fca2ffffcf", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/56f95af848d679bfbab31afa4128e6fca2ffffcf", "committedDate": "2020-03-26T18:54:57Z", "message": "issue #833 - prototype migration and add automated migration test\n\n1. added support for derby in `com.ibm.fhir.schema.app.Main`\n    * dropped Db2 from the ResourceTypes-related class names since they\n      are not really specific to Db2\n\n2. added support for generating only a subset of the resource types from\nFhirSchemaGenerator\n\n3. refactored DerbyMaster to re-use a single connection (instead of\ncreating a new one for each apply) and added a constructor for passing a\nVersionHistoryService instead of just always using the fake one\n(AllVersionHistoryService)\n\n4. added DerbyMigrationTest for testing migrations\n    * uses dblook to infer the ddl from the db, then sorts the rows and\n      compares them\n    * copied the 4.0.1 FhirSchemaGenerator, FhirResourceTableGroup into\n      the test folder (and prefixed with \"Old\" to disambiguate).  In the\n      future we can use the cli jars to create the historic version of\n      the schema instead\n\n5. added placeholder script for downloading and deploying previous\nversions of the fhir-persistence-schema cli jar to test migrations\n    * once thats working, we should remove the \"Old*\" classes I added to\n      fhir-persistence-schema/src/test/com/ibm/fhir/schema/derby and use\n      the all-in-one cli jars to create them instead\n\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56f95af848d679bfbab31afa4128e6fca2ffffcf", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/56f95af848d679bfbab31afa4128e6fca2ffffcf", "committedDate": "2020-03-26T18:54:57Z", "message": "issue #833 - prototype migration and add automated migration test\n\n1. added support for derby in `com.ibm.fhir.schema.app.Main`\n    * dropped Db2 from the ResourceTypes-related class names since they\n      are not really specific to Db2\n\n2. added support for generating only a subset of the resource types from\nFhirSchemaGenerator\n\n3. refactored DerbyMaster to re-use a single connection (instead of\ncreating a new one for each apply) and added a constructor for passing a\nVersionHistoryService instead of just always using the fake one\n(AllVersionHistoryService)\n\n4. added DerbyMigrationTest for testing migrations\n    * uses dblook to infer the ddl from the db, then sorts the rows and\n      compares them\n    * copied the 4.0.1 FhirSchemaGenerator, FhirResourceTableGroup into\n      the test folder (and prefixed with \"Old\" to disambiguate).  In the\n      future we can use the cli jars to create the historic version of\n      the schema instead\n\n5. added placeholder script for downloading and deploying previous\nversions of the fhir-persistence-schema cli jar to test migrations\n    * once thats working, we should remove the \"Old*\" classes I added to\n      fhir-persistence-schema/src/test/com/ibm/fhir/schema/derby and use\n      the all-in-one cli jars to create them instead\n\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}, "afterCommit": {"oid": "6cca2e090b34d3286af03ad9e6ce49c34e628fe2", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/6cca2e090b34d3286af03ad9e6ce49c34e628fe2", "committedDate": "2020-03-26T19:00:44Z", "message": "issue #833 - prototype migration and add automated migration test\n\n1. added support for derby in `com.ibm.fhir.schema.app.Main`\n    * dropped Db2 from the ResourceTypes-related class names since they\n      are not really specific to Db2\n\n2. added support for generating only a subset of the resource types from\nFhirSchemaGenerator\n\n3. refactored DerbyMaster to re-use a single connection (instead of\ncreating a new one for each apply) and added a constructor for passing a\nVersionHistoryService instead of just always using the fake one\n(AllVersionHistoryService)\n\n4. added DerbyMigrationTest for testing migrations\n    * uses dblook to infer the ddl from the db, then sorts the rows and\n      compares them\n    * copied the 4.0.1 FhirSchemaGenerator, FhirResourceTableGroup into\n      the test folder (and prefixed with \"Old\" to disambiguate).  In the\n      future we can use the cli jars to create the historic version of\n      the schema instead\n\n5. added placeholder script for downloading and deploying previous\nversions of the fhir-persistence-schema cli jar to test migrations\n    * once thats working, we should remove the \"Old*\" classes I added to\n      fhir-persistence-schema/src/test/com/ibm/fhir/schema/derby and use\n      the all-in-one cli jars to create them instead\n\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMzMxMTc0", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-382331174", "createdAt": "2020-03-26T19:08:47Z", "commit": {"oid": "6cca2e090b34d3286af03ad9e6ce49c34e628fe2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTowODo0N1rOF8WVIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTowODo0N1rOF8WVIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgyNDczOQ==", "bodyText": "I didn't change this to 1000, should we change to 1000 here?", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r398824739", "createdAt": "2020-03-26T19:08:47Z", "author": {"login": "prb112"}, "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/derby/DerbyAdapter.java", "diffHunk": "@@ -174,12 +181,12 @@ public boolean doesTableExist(String schemaName, String tableName) {\n \n     @Override\n     public void createSequence(String schemaName, String sequenceName, int cache) {\n-        /*CREATE SEQUENCE fhir_sequence\n-             AS BIGINT\n-     START WITH 1\n-          CACHE 1000\n-       NO CYCLE;\n-    */\n+        /* CREATE SEQUENCE fhir_sequence\n+         *     AS BIGINT\n+         *     START WITH 1\n+         *     CACHE 1000\n+         *     NO CYCLE;\n+        */\n         // Derby doesn't support CACHE\n         final String sname = DataDefinitionUtil.getQualifiedName(schemaName, sequenceName);\n         final String ddl = \"CREATE SEQUENCE \" + sname + \" AS BIGINT START WITH 1 NO CYCLE\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cca2e090b34d3286af03ad9e6ce49c34e628fe2"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMzM5NDgx", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-382339481", "createdAt": "2020-03-26T19:20:19Z", "commit": {"oid": "6cca2e090b34d3286af03ad9e6ce49c34e628fe2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOToyMDoyMFrOF8WwIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOToyMDoyMFrOF8WwIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgzMTY1MQ==", "bodyText": "how about we use the ant plugin here.\nit'd be platform agnostic.\nthe commandline args below don't necessarily work on Windows", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r398831651", "createdAt": "2020-03-26T19:20:20Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/pom.xml", "diffHunk": "@@ -45,24 +45,35 @@\n \n     <build>\n         <plugins>\n+            <!-- <plugin>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cca2e090b34d3286af03ad9e6ce49c34e628fe2"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMzM5ODE0", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-382339814", "createdAt": "2020-03-26T19:20:46Z", "commit": {"oid": "6cca2e090b34d3286af03ad9e6ce49c34e628fe2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOToyMDo0N1rOF8WxPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOToyMDo0N1rOF8WxPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgzMTkzMw==", "bodyText": "are we removing it on each build?", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r398831933", "createdAt": "2020-03-26T19:20:47Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/pom.xml", "diffHunk": "@@ -45,24 +45,35 @@\n \n     <build>\n         <plugins>\n+            <!-- <plugin>\n+                <artifactId>exec-maven-plugin</artifactId>\n+                <version>1.6.0</version>\n+                <groupId>org.codehaus.mojo</groupId>\n+                <executions>\n+                    <execution>\n+                        <id>deployPriorVersions</id>\n+                        <phase>test</phase>\n+                        <goals>\n+                            <goal>exec</goal>\n+                        </goals>\n+                        <configuration>\n+                            <executable>bash</executable>\n+                            <commandlineArgs>deployPriorVersions.sh</commandlineArgs>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin> -->\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-clean-plugin</artifactId>\n                 <configuration>\n                     <filesets>\n-                        <fileset>\n-                            <directory>derby</directory>\n-                            <followSymlinks>false</followSymlinks>\n-                            <useDefaultExcludes>true</useDefaultExcludes>\n-                            <includes>\n-                                <include>**/*</include>\n-                            </includes>\n-                        </fileset>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cca2e090b34d3286af03ad9e6ce49c34e628fe2"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMzQwMjI2", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-382340226", "createdAt": "2020-03-26T19:21:22Z", "commit": {"oid": "6cca2e090b34d3286af03ad9e6ce49c34e628fe2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOToyMToyMlrOF8WyfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOToyMToyMlrOF8WyfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgzMjI1Mw==", "bodyText": "2020", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r398832253", "createdAt": "2020-03-26T19:21:22Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/app/Main.java", "diffHunk": "@@ -36,13 +36,17 @@\n import com.ibm.fhir.database.utils.api.TenantStatus;\n import com.ibm.fhir.database.utils.common.DataDefinitionUtil;\n import com.ibm.fhir.database.utils.common.JdbcConnectionProvider;\n+import com.ibm.fhir.database.utils.common.JdbcPropertyAdapter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cca2e090b34d3286af03ad9e6ce49c34e628fe2"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMzQxNjQw", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-382341640", "createdAt": "2020-03-26T19:23:27Z", "commit": {"oid": "6cca2e090b34d3286af03ad9e6ce49c34e628fe2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOToyMzoyN1rOF8W3LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOToyMzoyN1rOF8W3LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgzMzQ1Mg==", "bodyText": "add a comment on this class purpose", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r398833452", "createdAt": "2020-03-26T19:23:27Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/test/java/com/ibm/fhir/schema/derby/OldFhirResourceTableGroup.java", "diffHunk": "@@ -0,0 +1,706 @@\n+/*\n+ * (C) Copyright IBM Corp. 2019\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.schema.derby;\n+\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.CODE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.CODE_SYSTEMS;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.CODE_SYSTEM_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.CURRENT_ALLERGIES_LIST;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.CURRENT_DRUG_ALLERGIES_LIST;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.CURRENT_MEDICATIONS_LIST;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.CURRENT_PROBLEMS_LIST;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.CURRENT_RESOURCE_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.DATA;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.DATE_END;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.DATE_START;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.FK;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.IDX;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.IS_DELETED;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.ITEM_LOGICAL_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.LAST_UPDATED;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.LATITUDE_VALUE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.LIST_LOGICAL_RESOURCES;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.LIST_LOGICAL_RESOURCE_ITEMS;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.LOGICAL_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.LOGICAL_ID_BYTES;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.LOGICAL_RESOURCES;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.LOGICAL_RESOURCE_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.LONGITUDE_VALUE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.MAX_SEARCH_STRING_BYTES;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.MT_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.NUMBER_VALUE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.NUMBER_VALUE_HIGH;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.NUMBER_VALUE_LOW;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.PARAMETER_NAMES;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.PARAMETER_NAME_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.PATIENT_CURRENT_REFS;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.PATIENT_LOGICAL_RESOURCES;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.PK;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.QUANTITY_VALUE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.QUANTITY_VALUE_HIGH;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.QUANTITY_VALUE_LOW;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.RESOURCE_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.RESOURCE_TYPES;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.RESOURCE_TYPE_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.STR_VALUE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.STR_VALUE_LCASE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.TOKEN_VALUE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.VERSION_ID;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Set;\n+\n+import com.ibm.fhir.database.utils.model.Generated;\n+import com.ibm.fhir.database.utils.model.GroupPrivilege;\n+import com.ibm.fhir.database.utils.model.IDatabaseObject;\n+import com.ibm.fhir.database.utils.model.ObjectGroup;\n+import com.ibm.fhir.database.utils.model.PhysicalDataModel;\n+import com.ibm.fhir.database.utils.model.SessionVariableDef;\n+import com.ibm.fhir.database.utils.model.Table;\n+import com.ibm.fhir.database.utils.model.Tablespace;\n+import com.ibm.fhir.schema.control.FhirSchemaTags;\n+\n+/**\n+ * Utility to create all the tables associated with a particular resource type", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cca2e090b34d3286af03ad9e6ce49c34e628fe2"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMzQxOTY3", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-382341967", "createdAt": "2020-03-26T19:23:55Z", "commit": {"oid": "6cca2e090b34d3286af03ad9e6ce49c34e628fe2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOToyMzo1NVrOF8W4Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOToyMzo1NVrOF8W4Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgzMzc0Ng==", "bodyText": "add a comment on this class purpose", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r398833746", "createdAt": "2020-03-26T19:23:55Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/test/java/com/ibm/fhir/schema/derby/OldFhirSchemaGenerator.java", "diffHunk": "@@ -0,0 +1,790 @@\n+/*\n+ * (C) Copyright IBM Corp. 2019, 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.schema.derby;\n+\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.CODE_SYSTEMS;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.CODE_SYSTEM_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.CODE_SYSTEM_NAME;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.DATE_END;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.DATE_START;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.DATE_VALUES;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.FHIR_REF_SEQUENCE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.FHIR_SEQUENCE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.FK;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.IDX;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.LATITUDE_VALUE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.LOGICAL_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.LOGICAL_ID_BYTES;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.LOGICAL_RESOURCES;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.LOGICAL_RESOURCE_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.LONGITUDE_VALUE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.MAX_SEARCH_STRING_BYTES;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.MAX_TOKEN_VALUE_BYTES;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.MT_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.PARAMETER_NAME;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.PARAMETER_NAMES;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.PARAMETER_NAME_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.RESOURCE_TYPE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.RESOURCE_TYPES;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.RESOURCE_TYPE_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.STR_VALUE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.STR_VALUES;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.STR_VALUE_LCASE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.TENANTS;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.TENANT_HASH;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.TENANT_KEYS;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.TENANT_KEY_ID;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.TENANT_NAME;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.TENANT_SALT;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.TENANT_SEQUENCE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.TENANT_STATUS;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.TOKEN_VALUE;\n+import static com.ibm.fhir.schema.control.FhirSchemaConstants.TOKEN_VALUES;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.function.Consumer;\n+import java.util.stream.Collectors;\n+\n+import com.ibm.fhir.database.utils.model.GroupPrivilege;\n+import com.ibm.fhir.database.utils.model.IDatabaseObject;\n+import com.ibm.fhir.database.utils.model.NopObject;\n+import com.ibm.fhir.database.utils.model.ObjectGroup;\n+import com.ibm.fhir.database.utils.model.PhysicalDataModel;\n+import com.ibm.fhir.database.utils.model.Privilege;\n+import com.ibm.fhir.database.utils.model.ProcedureDef;\n+import com.ibm.fhir.database.utils.model.RowArrayType;\n+import com.ibm.fhir.database.utils.model.RowTypeBuilder;\n+import com.ibm.fhir.database.utils.model.Sequence;\n+import com.ibm.fhir.database.utils.model.SessionVariableDef;\n+import com.ibm.fhir.database.utils.model.Table;\n+import com.ibm.fhir.database.utils.model.Tablespace;\n+import com.ibm.fhir.model.type.code.FHIRResourceType;\n+import com.ibm.fhir.schema.control.FhirSchemaConstants;\n+import com.ibm.fhir.schema.control.Replacer;\n+import com.ibm.fhir.schema.control.SchemaGeneratorUtil;\n+\n+/**\n+ * Encapsulates the generation of the FHIR schema artifacts from IBM FHIR Server version 4.0.1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cca2e090b34d3286af03ad9e6ce49c34e628fe2"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMzQyNDY3", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-382342467", "createdAt": "2020-03-26T19:24:39Z", "commit": {"oid": "6cca2e090b34d3286af03ad9e6ce49c34e628fe2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOToyNDozOVrOF8W6OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOToyNDozOVrOF8W6OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgzNDIzMw==", "bodyText": "does the set variable work for derby?", "url": "https://github.com/IBM/FHIR/pull/788#discussion_r398834233", "createdAt": "2020-03-26T19:24:39Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/PopulateResourceTypes.java", "diffHunk": "@@ -50,7 +50,7 @@ public void run(IDatabaseTranslator translator, Connection c) {\n         try (Statement s = c.createStatement(); PreparedStatement batch = c.prepareStatement(stmtResourceTypeInsert)) {\n             s.execute(stmtVariable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cca2e090b34d3286af03ad9e6ce49c34e628fe2"}, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d6f7581fd2d0ef5724534ffe931b1095c9775ab4", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/d6f7581fd2d0ef5724534ffe931b1095c9775ab4", "committedDate": "2020-03-26T21:12:07Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. cleaned up logic in `Table.apply(priorVersion, target)`\n\n3. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}, "afterCommit": {"oid": "b6b3f6e1d4d59d5850cbfd27cf50d536defe90ff", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/b6b3f6e1d4d59d5850cbfd27cf50d536defe90ff", "committedDate": "2020-03-26T21:59:40Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b6b3f6e1d4d59d5850cbfd27cf50d536defe90ff", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/b6b3f6e1d4d59d5850cbfd27cf50d536defe90ff", "committedDate": "2020-03-26T21:59:40Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}, "afterCommit": {"oid": "1da779489c078b21d281562cf507706e8d08cf53", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/1da779489c078b21d281562cf507706e8d08cf53", "committedDate": "2020-03-26T22:03:15Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "020bea2e5500c101eb4a83c380270ab0235f8f22", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/020bea2e5500c101eb4a83c380270ab0235f8f22", "committedDate": "2020-03-26T22:20:39Z", "message": "Add support for arbitrary database migration logic\n\nThis proof-of-concept extends our fhir-database-utils project with the\nability to define pre and post-migration steps for cases where an\nidempotent \"apply\" just isn't enough.\n\nIt also illustrates the usage in two places:\n1. drop the DATE_VALUE column and reorg all X_DATE_VALUES tables\n2. drop the ENFORCED FK constraints in all X_COMPOSITES tables\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8518ff1851ace075632c499e4a63a2f75d94806", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/d8518ff1851ace075632c499e4a63a2f75d94806", "committedDate": "2020-03-26T22:20:40Z", "message": "Moved table reorg into db2Adapter and sandwhiched it with runstats\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "851622b1891f83dbe77036afa10877b721fdd2dc", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/851622b1891f83dbe77036afa10877b721fdd2dc", "committedDate": "2020-03-26T22:20:40Z", "message": "issue #833 - prototype migration and add automated migration test\n\n1. added support for derby in `com.ibm.fhir.schema.app.Main`\n    * dropped Db2 from the ResourceTypes-related class names since they\n      are not really specific to Db2\n\n2. added support for generating only a subset of the resource types from\nFhirSchemaGenerator\n\n3. refactored DerbyMaster to re-use a single connection (instead of\ncreating a new one for each apply) and added a constructor for passing a\nVersionHistoryService instead of just always using the fake one\n(AllVersionHistoryService)\n\n4. added DerbyMigrationTest for testing migrations\n    * uses dblook to infer the ddl from the db, then sorts the rows and\n      compares them\n    * copied the 4.0.1 FhirSchemaGenerator, FhirResourceTableGroup into\n      the test folder (and prefixed with \"Old\" to disambiguate).  In the\n      future we can use the cli jars to create the historic version of\n      the schema instead\n\n5. added placeholder script for downloading and deploying previous\nversions of the fhir-persistence-schema cli jar to test migrations\n    * once thats working, we should remove the \"Old*\" classes I added to\n      fhir-persistence-schema/src/test/com/ibm/fhir/schema/derby and use\n      the all-in-one cli jars to create them instead\n\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1da779489c078b21d281562cf507706e8d08cf53", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/1da779489c078b21d281562cf507706e8d08cf53", "committedDate": "2020-03-26T22:03:15Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}, "afterCommit": {"oid": "01afcda8528a7c3b2f0a1151c59730ff677bb939", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/01afcda8528a7c3b2f0a1151c59730ff677bb939", "committedDate": "2020-03-26T22:20:41Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "01afcda8528a7c3b2f0a1151c59730ff677bb939", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/01afcda8528a7c3b2f0a1151c59730ff677bb939", "committedDate": "2020-03-26T22:20:41Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}, "afterCommit": {"oid": "6def9cd7523b16280531242ca959bb9bf8e4268e", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/6def9cd7523b16280531242ca959bb9bf8e4268e", "committedDate": "2020-03-26T22:34:20Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. added javadoc to Migration.migrateFrom\n\n6. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6def9cd7523b16280531242ca959bb9bf8e4268e", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/6def9cd7523b16280531242ca959bb9bf8e4268e", "committedDate": "2020-03-26T22:34:20Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. added javadoc to Migration.migrateFrom\n\n6. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}, "afterCommit": {"oid": "4a02493911ef05651cc69d16f7cdf01a2ca385c4", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/4a02493911ef05651cc69d16f7cdf01a2ca385c4", "committedDate": "2020-03-26T22:52:11Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. added javadoc to Migration.migrateFrom\n\n6. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4a02493911ef05651cc69d16f7cdf01a2ca385c4", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/4a02493911ef05651cc69d16f7cdf01a2ca385c4", "committedDate": "2020-03-26T22:52:11Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. added javadoc to Migration.migrateFrom\n\n6. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}, "afterCommit": {"oid": "c0ab3c857a40430fc0c72b1edf932578dfec61e3", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/c0ab3c857a40430fc0c72b1edf932578dfec61e3", "committedDate": "2020-03-26T23:09:03Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. added javadoc to Migration.migrateFrom\n\n6. renamed `IDatabaseAdapter.createProcedure` to\n`createOrReplaceProcedure` to make it more clear that we don't need\nnormally need migration steps for procedures\n\n7. added warning to `ProcedureDef.apply(priorVersion, target)` when one\nor more migrations exist...we havn't worked out what the exact behavior\nshould be for Procedures yet\n\n8. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c0ab3c857a40430fc0c72b1edf932578dfec61e3", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/c0ab3c857a40430fc0c72b1edf932578dfec61e3", "committedDate": "2020-03-26T23:09:03Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. added javadoc to Migration.migrateFrom\n\n6. renamed `IDatabaseAdapter.createProcedure` to\n`createOrReplaceProcedure` to make it more clear that we don't need\nnormally need migration steps for procedures\n\n7. added warning to `ProcedureDef.apply(priorVersion, target)` when one\nor more migrations exist...we havn't worked out what the exact behavior\nshould be for Procedures yet\n\n8. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}, "afterCommit": {"oid": "8c9b90c2a2b44bd7048963b9a4005c7523ab6b87", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/8c9b90c2a2b44bd7048963b9a4005c7523ab6b87", "committedDate": "2020-03-26T23:27:14Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. added javadoc to Migration.migrateFrom\n\n6. renamed `IDatabaseAdapter.createProcedure` to\n`createOrReplaceProcedure` to make it more clear that we don't need\nnormally need migration steps for procedures\n\n7. added warning to `ProcedureDef.apply(priorVersion, target)` when one\nor more migrations exist...we havn't worked out what the exact behavior\nshould be for Procedures yet\n\n8. renamed Db2ReorgTable back to Db2Reorg\n\n9. throw UnsupportedOperationException if apply(priorVersion, target) is\ncalled for RowArrayTypes that need a migration\n\n10. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c9b90c2a2b44bd7048963b9a4005c7523ab6b87", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/8c9b90c2a2b44bd7048963b9a4005c7523ab6b87", "committedDate": "2020-03-26T23:27:14Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. added javadoc to Migration.migrateFrom\n\n6. renamed `IDatabaseAdapter.createProcedure` to\n`createOrReplaceProcedure` to make it more clear that we don't need\nnormally need migration steps for procedures\n\n7. added warning to `ProcedureDef.apply(priorVersion, target)` when one\nor more migrations exist...we havn't worked out what the exact behavior\nshould be for Procedures yet\n\n8. renamed Db2ReorgTable back to Db2Reorg\n\n9. throw UnsupportedOperationException if apply(priorVersion, target) is\ncalled for RowArrayTypes that need a migration\n\n10. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}, "afterCommit": {"oid": "06717900804163e5a059a8bf5e63e931e4160b7d", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/06717900804163e5a059a8bf5e63e931e4160b7d", "committedDate": "2020-03-26T23:29:33Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. added javadoc to Migration.migrateFrom\n\n6. renamed `IDatabaseAdapter.createProcedure` to\n`createOrReplaceProcedure` to make it more clear that we don't need\nnormally need migration steps for procedures\n\n7. added warning to `ProcedureDef.apply(priorVersion, target)` when one\nor more migrations exist...we havn't worked out what the exact behavior\nshould be for Procedures yet\n\n8. renamed Db2ReorgTable back to Db2Reorg\n\n9. throw UnsupportedOperationException if apply(priorVersion, target) is\ncalled for RowTypes or RowArrayTypes that need a migration (not\ncurrently used in our schema)\n\n10. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c3df79ba33766691bbabdd4731821b90f7f5bf5", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/2c3df79ba33766691bbabdd4731821b90f7f5bf5", "committedDate": "2020-03-26T23:30:23Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. added javadoc to Migration.migrateFrom\n\n6. renamed `IDatabaseAdapter.createProcedure` to\n`createOrReplaceProcedure` to make it more clear that we don't need\nnormally need migration steps for procedures\n\n7. added warning to `ProcedureDef.apply(priorVersion, target)` when one\nor more migrations exist...we havn't worked out what the exact behavior\nshould be for Procedures yet\n\n8. renamed Db2ReorgTable back to Db2Reorg\n\n9. throw UnsupportedOperationException if apply(priorVersion, target) is\ncalled for RowTypes or RowArrayTypes that need a migration (not\ncurrently used in our schema)\n\n10. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "06717900804163e5a059a8bf5e63e931e4160b7d", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/06717900804163e5a059a8bf5e63e931e4160b7d", "committedDate": "2020-03-26T23:29:33Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. added javadoc to Migration.migrateFrom\n\n6. renamed `IDatabaseAdapter.createProcedure` to\n`createOrReplaceProcedure` to make it more clear that we don't need\nnormally need migration steps for procedures\n\n7. added warning to `ProcedureDef.apply(priorVersion, target)` when one\nor more migrations exist...we havn't worked out what the exact behavior\nshould be for Procedures yet\n\n8. renamed Db2ReorgTable back to Db2Reorg\n\n9. throw UnsupportedOperationException if apply(priorVersion, target) is\ncalled for RowTypes or RowArrayTypes that need a migration (not\ncurrently used in our schema)\n\n10. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}, "afterCommit": {"oid": "2c3df79ba33766691bbabdd4731821b90f7f5bf5", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/2c3df79ba33766691bbabdd4731821b90f7f5bf5", "committedDate": "2020-03-26T23:30:23Z", "message": "issue #833 - updates per team review\n\n1. added implNote to Old* classes in fhir-persistence-schema test dir\n\n2. moved from `--derby` argument to a `--db-type` argument with values\nfrom the new DbType enum (currently just \"derby\" or \"db2\")\n\n3. cleaned up logic in `Table.apply(priorVersion, target)`\n\n4. added a sample derby.properties file for use with the\nfhir-persistence-schema Main method\n\n5. added javadoc to Migration.migrateFrom\n\n6. renamed `IDatabaseAdapter.createProcedure` to\n`createOrReplaceProcedure` to make it more clear that we don't need\nnormally need migration steps for procedures\n\n7. added warning to `ProcedureDef.apply(priorVersion, target)` when one\nor more migrations exist...we havn't worked out what the exact behavior\nshould be for Procedures yet\n\n8. renamed Db2ReorgTable back to Db2Reorg\n\n9. throw UnsupportedOperationException if apply(priorVersion, target) is\ncalled for RowTypes or RowArrayTypes that need a migration (not\ncurrently used in our schema)\n\n10. one last copyright update\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efaf62ea99fbf5b022d4b94450c252775271f6ad", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/efaf62ea99fbf5b022d4b94450c252775271f6ad", "committedDate": "2020-03-27T15:25:03Z", "message": "issue #833 - add the DROP Column back in\n\nremoving the DROP of the DATE_VALUES column made the migrated 4.0.1\nschema different from the 4.1.0 schema, which causes the migration test\nto fail, so this commit adds the DROP back in\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d0f74cd4a46aebaf77ffcd2751ab781b6fe811fb", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/d0f74cd4a46aebaf77ffcd2751ab781b6fe811fb", "committedDate": "2020-03-27T15:10:03Z", "message": "issue #833 - add the DROP Column back in\n\nremoving the DROP of the DATE_VALUES column made the migrated 4.0.1\nschema different from the 4.1.0 schema, which causes the migration test\nto fail, so this commit adds the DROP back in\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}, "afterCommit": {"oid": "efaf62ea99fbf5b022d4b94450c252775271f6ad", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/efaf62ea99fbf5b022d4b94450c252775271f6ad", "committedDate": "2020-03-27T15:25:03Z", "message": "issue #833 - add the DROP Column back in\n\nremoving the DROP of the DATE_VALUES column made the migrated 4.0.1\nschema different from the 4.1.0 schema, which causes the migration test\nto fail, so this commit adds the DROP back in\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMDM2NTM2", "url": "https://github.com/IBM/FHIR/pull/788#pullrequestreview-383036536", "createdAt": "2020-03-27T16:54:49Z", "commit": {"oid": "efaf62ea99fbf5b022d4b94450c252775271f6ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20433f6b748b815a0dfd4acab40f53a3310afc2c", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/20433f6b748b815a0dfd4acab40f53a3310afc2c", "committedDate": "2020-03-27T17:06:42Z", "message": "issue #833 - add migration logic for #706 and more\n\nPreviously, I forgot we made this schema change early in the 4.1.0 cycle\nand so the migration test was starting with a schema that didn't exactly\nmatch 4.0.1.\n\nTo make migration match the schema exactly (same columns in the same\norder), I had to move these two \"new\" number columns from the middle of\nthe table definition to the end.\n\nAdditionally, I found that FhirSchemaGenerator was still including the\nretired `DATE_VALUES` column in the global/resource-level DATES table.\nWhile that table isn't used, I updated it to match the resource-specific\nones.\n\nAlso added an `@implNote` to PopulateResourceTypes per review comment.\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}, "afterCommit": {"oid": "10b7b1992a8ad17b6bde98c2fa9e9b7827334664", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/10b7b1992a8ad17b6bde98c2fa9e9b7827334664", "committedDate": "2020-03-27T17:19:30Z", "message": "issue #833 - add migration logic for #706 and more\n\nPreviously, I forgot we made this schema change early in the 4.1.0 cycle\nand so the migration test was starting with a schema that didn't exactly\nmatch 4.0.1.\n\nTo make migration match the schema exactly (same columns in the same\norder), I had to move these two \"new\" number columns from the middle of\nthe table definition to the end.\n\nAdditionally, I found that FhirSchemaGenerator was still including the\nretired `DATE_VALUES` column in the global/resource-level DATES table.\nWhile that table isn't used, I updated it to match the resource-specific\nones.\n\nAlso added an `@implNote` to PopulateResourceTypes per review comment.\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b40e4be39457c7e1d674f75dd6537e1cebe59807", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/b40e4be39457c7e1d674f75dd6537e1cebe59807", "committedDate": "2020-03-27T17:24:41Z", "message": "issue #833 - add migration logic for #706 and more\n\nPreviously, I forgot we made this schema change early in the 4.1.0 cycle\nand so the migration test was starting with a schema that didn't exactly\nmatch 4.0.1.\n\nTo make migration match the schema exactly (same columns in the same\norder), I had to move these two \"new\" number columns from the middle of\nthe table definition to the end.\n\nAdditionally, I found that FhirSchemaGenerator was still including the\nretired `DATE_VALUES` column in the global/resource-level DATES table.\nWhile that table isn't used, I updated it to match the resource-specific\nones.\n\nAlso added an `@implNote` to PopulateResourceTypes per review comment.\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10b7b1992a8ad17b6bde98c2fa9e9b7827334664", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/10b7b1992a8ad17b6bde98c2fa9e9b7827334664", "committedDate": "2020-03-27T17:19:30Z", "message": "issue #833 - add migration logic for #706 and more\n\nPreviously, I forgot we made this schema change early in the 4.1.0 cycle\nand so the migration test was starting with a schema that didn't exactly\nmatch 4.0.1.\n\nTo make migration match the schema exactly (same columns in the same\norder), I had to move these two \"new\" number columns from the middle of\nthe table definition to the end.\n\nAdditionally, I found that FhirSchemaGenerator was still including the\nretired `DATE_VALUES` column in the global/resource-level DATES table.\nWhile that table isn't used, I updated it to match the resource-specific\nones.\n\nAlso added an `@implNote` to PopulateResourceTypes per review comment.\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}, "afterCommit": {"oid": "b40e4be39457c7e1d674f75dd6537e1cebe59807", "author": {"user": {"login": "lmsurpre", "name": "Lee Surprenant"}}, "url": "https://github.com/IBM/FHIR/commit/b40e4be39457c7e1d674f75dd6537e1cebe59807", "committedDate": "2020-03-27T17:24:41Z", "message": "issue #833 - add migration logic for #706 and more\n\nPreviously, I forgot we made this schema change early in the 4.1.0 cycle\nand so the migration test was starting with a schema that didn't exactly\nmatch 4.0.1.\n\nTo make migration match the schema exactly (same columns in the same\norder), I had to move these two \"new\" number columns from the middle of\nthe table definition to the end.\n\nAdditionally, I found that FhirSchemaGenerator was still including the\nretired `DATE_VALUES` column in the global/resource-level DATES table.\nWhile that table isn't used, I updated it to match the resource-specific\nones.\n\nAlso added an `@implNote` to PopulateResourceTypes per review comment.\n\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 514, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}