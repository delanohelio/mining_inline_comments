{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMzg4MzIx", "number": 1153, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToxOTo0NVrOD_0C4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToyMDozMlrOD_0D-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjM5NTg2OnYy", "diffSide": "RIGHT", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/system/ChunkWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToxOTo0NVrOGaswlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTozMDo1OVrOGatHoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0OTQ5NQ==", "bodyText": "WE could pass this in as a part of the job parameters", "url": "https://github.com/IBM/FHIR/pull/1153#discussion_r430649495", "createdAt": "2020-05-26T19:19:45Z", "author": {"login": "prb112"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/system/ChunkWriter.java", "diffHunk": "@@ -200,4 +201,11 @@ public void writeItems(List<java.lang.Object> arg0) throws Exception {\n             }\n         }\n     }\n+\n+    @Override\n+    public void open(Serializable checkpoint) throws Exception\n+    {\n+        isExportPublic = FHIRConfigHelper.getBooleanProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_ISEXPORTPUBLIC, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e08453865f7bdd80851911dcae5979de551580"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY1NTM5Mw==", "bodyText": "I thought about this also and then finally wanted to make it simpler to allow the the job pick up the configuration by itself. we already have so many job parameters. :)", "url": "https://github.com/IBM/FHIR/pull/1153#discussion_r430655393", "createdAt": "2020-05-26T19:30:59Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/system/ChunkWriter.java", "diffHunk": "@@ -200,4 +201,11 @@ public void writeItems(List<java.lang.Object> arg0) throws Exception {\n             }\n         }\n     }\n+\n+    @Override\n+    public void open(Serializable checkpoint) throws Exception\n+    {\n+        isExportPublic = FHIRConfigHelper.getBooleanProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_ISEXPORTPUBLIC, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0OTQ5NQ=="}, "originalCommit": {"oid": "e4e08453865f7bdd80851911dcae5979de551580"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjM5NzAwOnYy", "diffSide": "RIGHT", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/system/ChunkWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToyMDowNlrOGasxVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTozMTozM1rOGatI9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0OTY4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void open(Serializable checkpoint) throws Exception\n          \n          \n            \n                {\n          \n          \n            \n                public void open(Serializable checkpoint) throws Exception  {", "url": "https://github.com/IBM/FHIR/pull/1153#discussion_r430649687", "createdAt": "2020-05-26T19:20:06Z", "author": {"login": "prb112"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/system/ChunkWriter.java", "diffHunk": "@@ -200,4 +201,11 @@ public void writeItems(List<java.lang.Object> arg0) throws Exception {\n             }\n         }\n     }\n+\n+    @Override\n+    public void open(Serializable checkpoint) throws Exception\n+    {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e08453865f7bdd80851911dcae5979de551580"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY1NTczNQ==", "bodyText": "ha, good catch.", "url": "https://github.com/IBM/FHIR/pull/1153#discussion_r430655735", "createdAt": "2020-05-26T19:31:33Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/system/ChunkWriter.java", "diffHunk": "@@ -200,4 +201,11 @@ public void writeItems(List<java.lang.Object> arg0) throws Exception {\n             }\n         }\n     }\n+\n+    @Override\n+    public void open(Serializable checkpoint) throws Exception\n+    {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0OTY4Nw=="}, "originalCommit": {"oid": "e4e08453865f7bdd80851911dcae5979de551580"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjM5ODY1OnYy", "diffSide": "RIGHT", "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/common/CheckPointAlgorithm.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToyMDozMlrOGasyVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToyMDozMlrOGasyVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0OTk0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        int cosFileMaxSize = FHIRConfigHelper.getIntProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_COSFILEMAXSIZE  , Constants.DEFAULT_COSFILE_MAX_SIZE);\n          \n          \n            \n                        int cosFileMaxSize = FHIRConfigHelper.getIntProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_COSFILEMAXSIZE , Constants.DEFAULT_COSFILE_MAX_SIZE);", "url": "https://github.com/IBM/FHIR/pull/1153#discussion_r430649940", "createdAt": "2020-05-26T19:20:32Z", "author": {"login": "prb112"}, "path": "fhir-bulkimportexport-webapp/src/main/java/com/ibm/fhir/bulkexport/common/CheckPointAlgorithm.java", "diffHunk": "@@ -53,38 +51,28 @@ public CheckPointAlgorithm() {\n      // Nothing to do here at present\n     }\n \n-    /**\n-     * @see CheckpointAlgorithm#checkpointTimeout()\n-     */\n     @Override\n     public int checkpointTimeout() {\n         return 0;\n     }\n \n-    /**\n-     * @see CheckpointAlgorithm#endCheckpoint()\n-     */\n     @Override\n     public void endCheckpoint() {\n         // Nothing to do here at present\n     }\n \n-    /**\n-     * @see CheckpointAlgorithm#beginCheckpoint()\n-     */\n     @Override\n     public void beginCheckpoint() {\n         // Nothing to do here at present\n     }\n \n-    /**\n-     * @see CheckpointAlgorithm#isReadyToCheckpoint()\n-     */\n     @Override\n     public boolean isReadyToCheckpoint() {\n         TransientUserData chunkData = (TransientUserData) stepCtx.getTransientUserData();\n \n         if (chunkData != null) {\n+            int cosFileMaxResources = FHIRConfigHelper.getIntProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_COSFILEMAXRESOURCES, Constants.DEFAULT_COSFILE_MAX_RESOURCESNUMBER);\n+            int cosFileMaxSize = FHIRConfigHelper.getIntProperty(FHIRConfiguration.PROPERTY_BULKDATA_BATCHJOB_COSFILEMAXSIZE  , Constants.DEFAULT_COSFILE_MAX_SIZE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e08453865f7bdd80851911dcae5979de551580"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4854, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}