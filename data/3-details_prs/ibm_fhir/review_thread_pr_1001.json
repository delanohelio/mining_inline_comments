{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwOTE4OTMz", "number": 1001, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo1NzoyNVrOD3x4Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDoxNzo1NFrOD5Jh-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODE1NTIyOnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/src/main/resources/add_any_resource.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo1NzoyNVrOGOOtRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDowMjo0MVrOGOO5EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NDIxNA==", "bodyText": "only change copyright year?", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417574214", "createdAt": "2020-04-29T19:57:25Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/resources/add_any_resource.sql", "diffHunk": "@@ -1,5 +1,5 @@\n -------------------------------------------------------------------------------\n--- (C) Copyright IBM Corp. 2016, 2019\n+-- (C) Copyright IBM Corp. 2016, 2020\n --\n -- SPDX-License-Identifier: Apache-2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70861600a29f6ec171eccffc922a652ea0ed15b3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NzIzMw==", "bodyText": "Yes, as I started with your branch, I think it's an artifact.", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417577233", "createdAt": "2020-04-29T20:02:41Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/resources/add_any_resource.sql", "diffHunk": "@@ -1,5 +1,5 @@\n -------------------------------------------------------------------------------\n--- (C) Copyright IBM Corp. 2016, 2019\n+-- (C) Copyright IBM Corp. 2016, 2020\n --\n -- SPDX-License-Identifier: Apache-2.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NDIxNA=="}, "originalCommit": {"oid": "70861600a29f6ec171eccffc922a652ea0ed15b3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODE1NzM4OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/src/main/resources/add_parameter_name.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo1ODowMlrOGOOuqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDowMjo0NVrOGOO5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NDU2OQ==", "bodyText": "only update copyright year?", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417574569", "createdAt": "2020-04-29T19:58:02Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/resources/add_parameter_name.sql", "diffHunk": "@@ -1,5 +1,5 @@\n -------------------------------------------------------------------------------\n--- (C) Copyright IBM Corp. 2016\n+-- (C) Copyright IBM Corp. 2016, 2020\n --\n -- SPDX-License-Identifier: Apache-2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70861600a29f6ec171eccffc922a652ea0ed15b3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NzI2OA==", "bodyText": "Yes, as I started with your branch, I think it's an artifact.", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417577268", "createdAt": "2020-04-29T20:02:45Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/resources/add_parameter_name.sql", "diffHunk": "@@ -1,5 +1,5 @@\n -------------------------------------------------------------------------------\n--- (C) Copyright IBM Corp. 2016\n+-- (C) Copyright IBM Corp. 2016, 2020\n --\n -- SPDX-License-Identifier: Apache-2.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NDU2OQ=="}, "originalCommit": {"oid": "70861600a29f6ec171eccffc922a652ea0ed15b3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODE2Mjc4OnYy", "diffSide": "LEFT", "path": "fhir-persistence-schema/src/main/resources/add_resource_template.sql", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTo1OTozMFrOGOOyBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOTo0MjowM1rOGOhu1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NTQzMA==", "bodyText": "I'm wondering, is this store procedure really used?", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417575430", "createdAt": "2020-04-29T19:59:30Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/resources/add_resource_template.sql", "diffHunk": "@@ -58,11 +58,6 @@ BEGIN\n   SELECT t.tenant_id INTO {{SCHEMA_NAME}}.session_tenant\n     FROM {{SCHEMA_NAME}}.tenants t\n    WHERE t.tenant_name = p_tenant_data_id;\n-  \n-  -- Stop right here if we don't have a valid tenant\n-  IF ({{SCHEMA_NAME}}.session_tenant IS NULL) THEN\n-  \tSIGNAL SQLSTATE '99401' SET MESSAGE_TEXT = 'NOT AUTHORIZED: INVALID TENANT ID';\n-  END IF;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70861600a29f6ec171eccffc922a652ea0ed15b3"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NzY5MQ==", "bodyText": "I think that was the original and replaced by add_any_resource\n2020-04-29 15:05:36.966 00000001    INFO   com.ibm.fhir.schema.app.Main Opening connection to: jdbc:db2://localhost:50000/FHIRDB\n2020-04-29 15:05:37.585 00000001    INFO .database.utils.db2.Db2Adapter Create or replace procedure FHIR_ADMIN.SET_TENANT\n2020-04-29 15:05:37.648 00000001    INFO .database.utils.db2.Db2Adapter Create or replace procedure FHIRDATA.ADD_CODE_SYSTEM\n2020-04-29 15:05:37.722 00000001    INFO .database.utils.db2.Db2Adapter Create or replace procedure FHIRDATA.ADD_PARAMETER_NAME\n2020-04-29 15:05:37.752 00000001    INFO .database.utils.db2.Db2Adapter Create or replace procedure FHIRDATA.ADD_RESOURCE_TYPE\n2020-04-29 15:05:37.781 00000001    INFO .database.utils.db2.Db2Adapter Create or replace procedure FHIRDATA.ADD_ANY_RESOURCE", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417577691", "createdAt": "2020-04-29T20:03:30Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/resources/add_resource_template.sql", "diffHunk": "@@ -58,11 +58,6 @@ BEGIN\n   SELECT t.tenant_id INTO {{SCHEMA_NAME}}.session_tenant\n     FROM {{SCHEMA_NAME}}.tenants t\n    WHERE t.tenant_name = p_tenant_data_id;\n-  \n-  -- Stop right here if we don't have a valid tenant\n-  IF ({{SCHEMA_NAME}}.session_tenant IS NULL) THEN\n-  \tSIGNAL SQLSTATE '99401' SET MESSAGE_TEXT = 'NOT AUTHORIZED: INVALID TENANT ID';\n-  END IF;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NTQzMA=="}, "originalCommit": {"oid": "70861600a29f6ec171eccffc922a652ea0ed15b3"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg4NTkwOQ==", "bodyText": "I'm going to unresolve, confirm and remove", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417885909", "createdAt": "2020-04-30T09:42:03Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/resources/add_resource_template.sql", "diffHunk": "@@ -58,11 +58,6 @@ BEGIN\n   SELECT t.tenant_id INTO {{SCHEMA_NAME}}.session_tenant\n     FROM {{SCHEMA_NAME}}.tenants t\n    WHERE t.tenant_name = p_tenant_data_id;\n-  \n-  -- Stop right here if we don't have a valid tenant\n-  IF ({{SCHEMA_NAME}}.session_tenant IS NULL) THEN\n-  \tSIGNAL SQLSTATE '99401' SET MESSAGE_TEXT = 'NOT AUTHORIZED: INVALID TENANT ID';\n-  END IF;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NTQzMA=="}, "originalCommit": {"oid": "70861600a29f6ec171eccffc922a652ea0ed15b3"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODE2NTAyOnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/src/main/resources/add_resource_type.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDowMDowMVrOGOOzSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDowMzo0N1rOGOO7Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NTc1NQ==", "bodyText": "only copyright change?", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417575755", "createdAt": "2020-04-29T20:00:01Z", "author": {"login": "albertwang-ibm"}, "path": "fhir-persistence-schema/src/main/resources/add_resource_type.sql", "diffHunk": "@@ -1,5 +1,5 @@\n -------------------------------------------------------------------------------\n--- (C) Copyright IBM Corp. 2016\n+-- (C) Copyright IBM Corp. 2016, 2020", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70861600a29f6ec171eccffc922a652ea0ed15b3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NzgyNw==", "bodyText": "right, as I started with the existing branch", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417577827", "createdAt": "2020-04-29T20:03:47Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/resources/add_resource_type.sql", "diffHunk": "@@ -1,5 +1,5 @@\n -------------------------------------------------------------------------------\n--- (C) Copyright IBM Corp. 2016\n+-- (C) Copyright IBM Corp. 2016, 2020", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU3NTc1NQ=="}, "originalCommit": {"oid": "70861600a29f6ec171eccffc922a652ea0ed15b3"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODQzNzc3OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/src/main/resources/set_tenant.sql", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMToyMjowMlrOGORfpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDowMjowNVrOGOVPIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYxOTg3OQ==", "bodyText": "sorry, what does SELECT -1 INTO v_not_found do?", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417619879", "createdAt": "2020-04-29T21:22:02Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-schema/src/main/resources/set_tenant.sql", "diffHunk": "@@ -20,26 +20,39 @@ BEGIN\n       -- preventing accidental exposure of tenant-specific data\n       SET fhir_admin.sv_tenant_id = NULL;\n   ELSE\n-\t  -- set the sv_tenant_id session variable for the \n-\t  -- given tenant_name, but only if the correct key\n-\t  -- is provided\n-\t  SELECT t.mt_id, t.tenant_status INTO fhir_admin.sv_tenant_id, v_tenant_status\n-\t    FROM fhir_admin.tenants t\n-\t   WHERE t.tenant_name = p_tenant_name\n-\t     AND EXISTS (SELECT 1 FROM fhir_admin.tenant_keys tk WHERE tk.mt_id = t.mt_id\n-\t     AND tk.tenant_hash = sysibm.hash(tk.tenant_salt || p_tenant_key, 2));\n-\t\n-\t  IF v_not_found = 1\n-\t  THEN\n-\t    -- applications should not be passing invalid keys, so treat this as\n-\t    -- an exception\n-\t    SIGNAL SQLSTATE '99401' SET MESSAGE_TEXT = 'NOT AUTHORIZED: INVALID TENANT ID';\n-\t  ELSEIF v_tenant_status = 'FROZEN'\n-\t  THEN\n-\t    -- the tenant_key is valid, but the status of tenant has been set to frozen\n-\t    -- which means the tenant data should not be accessible\n-\t    SIGNAL SQLSTATE '99401' SET MESSAGE_TEXT = 'NOT AUTHORIZED: TENANT IS FROZEN';\n-\t  END IF;\n-  END IF;\n+      -- set the sv_tenant_id session variable for the \n+      -- given tenant_name, but only if the correct key\n+      -- is provided\n+      SELECT t.mt_id, t.tenant_status INTO fhir_admin.sv_tenant_id, v_tenant_status\n+      FROM fhir_admin.tenants t\n+      WHERE t.tenant_name = p_tenant_name\n+            AND EXISTS (SELECT 1 FROM fhir_admin.tenant_keys tk WHERE tk.mt_id = t.mt_id\n+            AND tk.tenant_hash = sysibm.hash(tk.tenant_salt || p_tenant_key, 2));\n+\n+      IF v_not_found = 1\n+      THEN\n+        -- If v_not_found, we check only one of the conditions above to see if it is valid\n+        -- applications should not be passing invalid keys, so treat this as\n+        -- an exception\n \n-END\n+        -- Check the cause... bad tenant_name\n+        SELECT -1 INTO v_not_found\n+        FROM fhir_admin.tenants t\n+            WHERE t.tenant_name = p_tenant_name;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70861600a29f6ec171eccffc922a652ea0ed15b3"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYyMDQ1OQ==", "bodyText": "I guess it only sets if WHERE selects one or more rows?", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417620459", "createdAt": "2020-04-29T21:23:13Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-schema/src/main/resources/set_tenant.sql", "diffHunk": "@@ -20,26 +20,39 @@ BEGIN\n       -- preventing accidental exposure of tenant-specific data\n       SET fhir_admin.sv_tenant_id = NULL;\n   ELSE\n-\t  -- set the sv_tenant_id session variable for the \n-\t  -- given tenant_name, but only if the correct key\n-\t  -- is provided\n-\t  SELECT t.mt_id, t.tenant_status INTO fhir_admin.sv_tenant_id, v_tenant_status\n-\t    FROM fhir_admin.tenants t\n-\t   WHERE t.tenant_name = p_tenant_name\n-\t     AND EXISTS (SELECT 1 FROM fhir_admin.tenant_keys tk WHERE tk.mt_id = t.mt_id\n-\t     AND tk.tenant_hash = sysibm.hash(tk.tenant_salt || p_tenant_key, 2));\n-\t\n-\t  IF v_not_found = 1\n-\t  THEN\n-\t    -- applications should not be passing invalid keys, so treat this as\n-\t    -- an exception\n-\t    SIGNAL SQLSTATE '99401' SET MESSAGE_TEXT = 'NOT AUTHORIZED: INVALID TENANT ID';\n-\t  ELSEIF v_tenant_status = 'FROZEN'\n-\t  THEN\n-\t    -- the tenant_key is valid, but the status of tenant has been set to frozen\n-\t    -- which means the tenant data should not be accessible\n-\t    SIGNAL SQLSTATE '99401' SET MESSAGE_TEXT = 'NOT AUTHORIZED: TENANT IS FROZEN';\n-\t  END IF;\n-  END IF;\n+      -- set the sv_tenant_id session variable for the \n+      -- given tenant_name, but only if the correct key\n+      -- is provided\n+      SELECT t.mt_id, t.tenant_status INTO fhir_admin.sv_tenant_id, v_tenant_status\n+      FROM fhir_admin.tenants t\n+      WHERE t.tenant_name = p_tenant_name\n+            AND EXISTS (SELECT 1 FROM fhir_admin.tenant_keys tk WHERE tk.mt_id = t.mt_id\n+            AND tk.tenant_hash = sysibm.hash(tk.tenant_salt || p_tenant_key, 2));\n+\n+      IF v_not_found = 1\n+      THEN\n+        -- If v_not_found, we check only one of the conditions above to see if it is valid\n+        -- applications should not be passing invalid keys, so treat this as\n+        -- an exception\n \n-END\n+        -- Check the cause... bad tenant_name\n+        SELECT -1 INTO v_not_found\n+        FROM fhir_admin.tenants t\n+            WHERE t.tenant_name = p_tenant_name;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYxOTg3OQ=="}, "originalCommit": {"oid": "70861600a29f6ec171eccffc922a652ea0ed15b3"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4MTE4NA==", "bodyText": "this is to find out the cause is either tenant_name or other.\nthis allows for a differentiated signal back from the stored procedure.\nYes, that's right", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r417681184", "createdAt": "2020-04-30T00:02:05Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/resources/set_tenant.sql", "diffHunk": "@@ -20,26 +20,39 @@ BEGIN\n       -- preventing accidental exposure of tenant-specific data\n       SET fhir_admin.sv_tenant_id = NULL;\n   ELSE\n-\t  -- set the sv_tenant_id session variable for the \n-\t  -- given tenant_name, but only if the correct key\n-\t  -- is provided\n-\t  SELECT t.mt_id, t.tenant_status INTO fhir_admin.sv_tenant_id, v_tenant_status\n-\t    FROM fhir_admin.tenants t\n-\t   WHERE t.tenant_name = p_tenant_name\n-\t     AND EXISTS (SELECT 1 FROM fhir_admin.tenant_keys tk WHERE tk.mt_id = t.mt_id\n-\t     AND tk.tenant_hash = sysibm.hash(tk.tenant_salt || p_tenant_key, 2));\n-\t\n-\t  IF v_not_found = 1\n-\t  THEN\n-\t    -- applications should not be passing invalid keys, so treat this as\n-\t    -- an exception\n-\t    SIGNAL SQLSTATE '99401' SET MESSAGE_TEXT = 'NOT AUTHORIZED: INVALID TENANT ID';\n-\t  ELSEIF v_tenant_status = 'FROZEN'\n-\t  THEN\n-\t    -- the tenant_key is valid, but the status of tenant has been set to frozen\n-\t    -- which means the tenant data should not be accessible\n-\t    SIGNAL SQLSTATE '99401' SET MESSAGE_TEXT = 'NOT AUTHORIZED: TENANT IS FROZEN';\n-\t  END IF;\n-  END IF;\n+      -- set the sv_tenant_id session variable for the \n+      -- given tenant_name, but only if the correct key\n+      -- is provided\n+      SELECT t.mt_id, t.tenant_status INTO fhir_admin.sv_tenant_id, v_tenant_status\n+      FROM fhir_admin.tenants t\n+      WHERE t.tenant_name = p_tenant_name\n+            AND EXISTS (SELECT 1 FROM fhir_admin.tenant_keys tk WHERE tk.mt_id = t.mt_id\n+            AND tk.tenant_hash = sysibm.hash(tk.tenant_salt || p_tenant_key, 2));\n+\n+      IF v_not_found = 1\n+      THEN\n+        -- If v_not_found, we check only one of the conditions above to see if it is valid\n+        -- applications should not be passing invalid keys, so treat this as\n+        -- an exception\n \n-END\n+        -- Check the cause... bad tenant_name\n+        SELECT -1 INTO v_not_found\n+        FROM fhir_admin.tenants t\n+            WHERE t.tenant_name = p_tenant_name;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYxOTg3OQ=="}, "originalCommit": {"oid": "70861600a29f6ec171eccffc922a652ea0ed15b3"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjQxOTY0OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/AdminSchemaGenerator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTo0OTo0M1rOGQPpaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDowMzowM1rOGQQFig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY4Njc2MA==", "bodyText": "this worked ok to automatically update the stored procedure as part of --update-schema, right?\ndoes it work the same as calling --update-procs?", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r419686760", "createdAt": "2020-05-04T19:49:43Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/AdminSchemaGenerator.java", "diffHunk": "@@ -106,7 +106,10 @@ public void buildSchema(PhysicalDataModel model) {\n         this.allTablesComplete.addDependencies(procedureDependencies);\n         model.addObject(allTablesComplete);\n \n-        model.addProcedure(this.adminSchemaName, SET_TENANT, FhirSchemaConstants.INITIAL_VERSION, () -> SchemaGeneratorUtil.readTemplate(adminSchemaName, adminSchemaName, SET_TENANT.toLowerCase() + \".sql\", null), Arrays.asList(allTablesComplete), procedurePrivileges);\n+        model.addProcedure(this.adminSchemaName, SET_TENANT, 2,\n+                () -> SchemaGeneratorUtil.readTemplate(adminSchemaName, adminSchemaName,\n+                        SET_TENANT.toLowerCase() + \".sql\", null),\n+                Arrays.asList(allTablesComplete), procedurePrivileges);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4677e77ac2d01bd9cbd520284f6b96629dbb3314"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5MjUzNQ==", "bodyText": "ack it's in two spots.", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r419692535", "createdAt": "2020-05-04T20:00:19Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/AdminSchemaGenerator.java", "diffHunk": "@@ -106,7 +106,10 @@ public void buildSchema(PhysicalDataModel model) {\n         this.allTablesComplete.addDependencies(procedureDependencies);\n         model.addObject(allTablesComplete);\n \n-        model.addProcedure(this.adminSchemaName, SET_TENANT, FhirSchemaConstants.INITIAL_VERSION, () -> SchemaGeneratorUtil.readTemplate(adminSchemaName, adminSchemaName, SET_TENANT.toLowerCase() + \".sql\", null), Arrays.asList(allTablesComplete), procedurePrivileges);\n+        model.addProcedure(this.adminSchemaName, SET_TENANT, 2,\n+                () -> SchemaGeneratorUtil.readTemplate(adminSchemaName, adminSchemaName,\n+                        SET_TENANT.toLowerCase() + \".sql\", null),\n+                Arrays.asList(allTablesComplete), procedurePrivileges);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY4Njc2MA=="}, "originalCommit": {"oid": "4677e77ac2d01bd9cbd520284f6b96629dbb3314"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5Mzg0Mw==", "bodyText": "Yes, it's OK. it also happens to be in two spots.", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r419693843", "createdAt": "2020-05-04T20:02:50Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/AdminSchemaGenerator.java", "diffHunk": "@@ -106,7 +106,10 @@ public void buildSchema(PhysicalDataModel model) {\n         this.allTablesComplete.addDependencies(procedureDependencies);\n         model.addObject(allTablesComplete);\n \n-        model.addProcedure(this.adminSchemaName, SET_TENANT, FhirSchemaConstants.INITIAL_VERSION, () -> SchemaGeneratorUtil.readTemplate(adminSchemaName, adminSchemaName, SET_TENANT.toLowerCase() + \".sql\", null), Arrays.asList(allTablesComplete), procedurePrivileges);\n+        model.addProcedure(this.adminSchemaName, SET_TENANT, 2,\n+                () -> SchemaGeneratorUtil.readTemplate(adminSchemaName, adminSchemaName,\n+                        SET_TENANT.toLowerCase() + \".sql\", null),\n+                Arrays.asList(allTablesComplete), procedurePrivileges);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY4Njc2MA=="}, "originalCommit": {"oid": "4677e77ac2d01bd9cbd520284f6b96629dbb3314"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5Mzk2Mg==", "bodyText": "newest commit adds the second spot", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r419693962", "createdAt": "2020-05-04T20:03:03Z", "author": {"login": "prb112"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/AdminSchemaGenerator.java", "diffHunk": "@@ -106,7 +106,10 @@ public void buildSchema(PhysicalDataModel model) {\n         this.allTablesComplete.addDependencies(procedureDependencies);\n         model.addObject(allTablesComplete);\n \n-        model.addProcedure(this.adminSchemaName, SET_TENANT, FhirSchemaConstants.INITIAL_VERSION, () -> SchemaGeneratorUtil.readTemplate(adminSchemaName, adminSchemaName, SET_TENANT.toLowerCase() + \".sql\", null), Arrays.asList(allTablesComplete), procedurePrivileges);\n+        model.addProcedure(this.adminSchemaName, SET_TENANT, 2,\n+                () -> SchemaGeneratorUtil.readTemplate(adminSchemaName, adminSchemaName,\n+                        SET_TENANT.toLowerCase() + \".sql\", null),\n+                Arrays.asList(allTablesComplete), procedurePrivileges);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY4Njc2MA=="}, "originalCommit": {"oid": "4677e77ac2d01bd9cbd520284f6b96629dbb3314"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjUxNTc2OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirSchemaGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDoxNzo1NFrOGQQk-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDoxNzo1NFrOGQQk-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcwMjAxMQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/IBM/FHIR/pull/1001#discussion_r419702011", "createdAt": "2020-05-04T20:17:54Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-schema/src/main/java/com/ibm/fhir/schema/control/FhirSchemaGenerator.java", "diffHunk": "@@ -231,8 +230,7 @@ public void buildAdminSchema(PhysicalDataModel model) {\n \n         // The set_tenant procedure can be created after all the admin tables are done\n         ProcedureDef setTenant = model.addProcedure(this.adminSchemaName,\n-                SET_TENANT,\n-                FhirSchemaConstants.INITIAL_VERSION,\n+                        SET_TENANT, 2,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0117d0b550f82358315f1d40fc34d04f44328881"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 22, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}