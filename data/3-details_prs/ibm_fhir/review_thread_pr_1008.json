{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExODg2MzQz", "number": 1008, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNTo1ODowNVrOD4aABA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjo1MToxOVrOD4a4kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNDcyODM2OnYy", "diffSide": "RIGHT", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNTo1ODowNVrOGPNrVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNTo1ODowNVrOGPNrVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYwNTkxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Integer resourceTypeId;\n          \n          \n            \n                    // Get resourceTypeId from ResourceTypesCache first.\n          \n          \n            \n                    resourceTypeId = ResourceTypesCache.getResourceTypeId(resourceType);\n          \n          \n            \n                    // If no found, then get resourceTypeId from local newResourceTypeIds in case this id is already in newResourceTypeIds\n          \n          \n            \n                    // Get resourceTypeId from ResourceTypesCache first.\n          \n          \n            \n                    Integer resourceTypeId= ResourceTypesCache.getResourceTypeId(resourceType);\n          \n          \n            \n                    // If not found, then get resourceTypeId from local newResourceTypeIds in case this id is already in newResourceTypeIds\n          \n      \n    \n    \n  \n\nhonestly, it should never hit newResourceTypeIds with the change in PR1010, but seems reasonable.\nsmall edits above", "url": "https://github.com/IBM/FHIR/pull/1008#discussion_r418605911", "createdAt": "2020-05-01T15:58:05Z", "author": {"login": "prb112"}, "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -460,6 +460,19 @@ public void addResourceTypeCacheCandidate(String resourceType, Integer resourceT\n         log.exiting(CLASSNAME, METHODNAME);\n \n     }\n+    \n+    protected  Integer getResourceTypeIdFromCaches(String resourceType) {\n+        Integer resourceTypeId;\n+        // Get resourceTypeId from ResourceTypesCache first.\n+        resourceTypeId = ResourceTypesCache.getResourceTypeId(resourceType);\n+        // If no found, then get resourceTypeId from local newResourceTypeIds in case this id is already in newResourceTypeIds", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "702e443ecfe53bf66b475793396c41acfe5cbdd2"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNDg3MzEyOnYy", "diffSide": "RIGHT", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/postgresql/PostgreSqlParameterNamesDAO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjo1MToxOVrOGPPGqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjo1MToxOVrOGPPGqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYyOTI5MQ==", "bodyText": "Maybe a bit more description in the error message?   Like \"Error while getting or inserting parameterName '\" + parameterName + \"'\" ?", "url": "https://github.com/IBM/FHIR/pull/1008#discussion_r418629291", "createdAt": "2020-05-01T16:51:19Z", "author": {"login": "lmsurpre"}, "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/postgresql/PostgreSqlParameterNamesDAO.java", "diffHunk": "@@ -42,18 +42,7 @@ public int readOrAddParameterNameId(String parameterName) throws FHIRPersistence\n                     stmt.executeUpdate();\n                 }\n             } catch (SQLException e) {\n-                if (\"23505\".equals(e.getSQLState())) {\n-                    // another thread snuck in and created the record, so we need to fetch the correct id\n-                    result = getParameterId(parameterName);\n-\n-                    if (result == null) {\n-                        // would be extremely weird, but good to protect against anyway\n-                        throw new IllegalStateException(\"No parameter id returned after duplicate found!\");\n-                    }\n-                }\n-                else {\n-                    throw new FHIRPersistenceDataAccessException(\"parameterName=\" + parameterName, e);\n-                }\n+                throw new FHIRPersistenceDataAccessException(\"parameterName=\" + parameterName, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "702e443ecfe53bf66b475793396c41acfe5cbdd2"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 24, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}