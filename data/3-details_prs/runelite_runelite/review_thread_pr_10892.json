{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMTU3MDk3", "number": 10892, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNjo0NToxNFrODjtf2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMTozMjoxN1rODo5UYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NzcyMTg0OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsOverlay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNjo0NToxNFrOFvq9_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNjo0NToxNFrOFvq9_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUzMTM5MA==", "bodyText": "Rather than effectively writing the code for the start of the world string twice, append the region string on a successful world service lookup.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \t\t\tString worldString;\n          \n          \n            \n            \t\t\tWorldResult worldResult = worldService.getWorlds();\n          \n          \n            \n            \t\t\tif (worldResult != null)\n          \n          \n            \n            \t\t\t{\n          \n          \n            \n            \t\t\t\tWorld currentWorld = worldResult.findWorld(client.getWorld());\n          \n          \n            \n            \t\t\t\tString worldRegion = getRegion(currentWorld.getLocation());\n          \n          \n            \n            \t\t\t\tworldString = \"W\" + currentWorld.getId() + \" (\" + worldRegion + \")\";\n          \n          \n            \n            \t\t\t}\n          \n          \n            \n            \t\t\telse\n          \n          \n            \n            \t\t\t{\n          \n          \n            \n            \t\t\t\tworldString = \"W\" + client.getWorld();\n          \n          \n            \n            \t\t\t}\n          \n          \n            \n            \t\t\tString worldString = \"W\" + client.getWorld();\n          \n          \n            \n            \n          \n          \n            \n            \t\t\tWorldResult worldResult = worldService.getWorlds();\n          \n          \n            \n            \t\t\tif (worldResult != null)\n          \n          \n            \n            \t\t\t{\n          \n          \n            \n            \t\t\t\tString worldRegion = getRegion(currentWorld.getLocation());\n          \n          \n            \n            \t\t\t\tworldString += \" (\" + worldRegion + ')';\n          \n          \n            \n            \t\t\t}", "url": "https://github.com/runelite/runelite/pull/10892#discussion_r385531390", "createdAt": "2020-02-28T06:45:14Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsOverlay.java", "diffHunk": "@@ -113,7 +119,20 @@ public Dimension render(Graphics2D graphics)\n \t\t\tcolor = Color.RED;\n \t\t\tClanMemberManager clanMemberManager = client.getClanMemberManager();\n \t\t\tFontMetrics metrics = graphics.getFontMetrics();\n-\t\t\tString worldString = \"W\" + client.getWorld();\n+\n+\t\t\tString worldString;\n+\t\t\tWorldResult worldResult = worldService.getWorlds();\n+\t\t\tif (worldResult != null)\n+\t\t\t{\n+\t\t\t\tWorld currentWorld = worldResult.findWorld(client.getWorld());\n+\t\t\t\tString worldRegion = getRegion(currentWorld.getLocation());\n+\t\t\t\tworldString = \"W\" + currentWorld.getId() + \" (\" + worldRegion + \")\";\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\tworldString = \"W\" + client.getWorld();\n+\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b0147660b46031c2aa64c19544d2666f4a4b82c"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NzcyMjI4OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsOverlay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNjo0NTo0MFrOFvq-Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNjo0NTo0MFrOFvq-Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUzMTQ2Nw==", "bodyText": "This should be defined in an enum somewhere.", "url": "https://github.com/runelite/runelite/pull/10892#discussion_r385531467", "createdAt": "2020-02-28T06:45:40Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsOverlay.java", "diffHunk": "@@ -188,4 +207,19 @@ else if (plugin.getRoomBlacklist().contains(room.getName().toLowerCase()))\n \n \t\treturn panelComponent.render(graphics);\n \t}\n+\n+\tprivate String getRegion(int locationId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b0147660b46031c2aa64c19544d2666f4a4b82c"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NzcyMzM3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsOverlay.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNjo0NjoxOFrOFvq-7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNjo0NjoxOFrOFvq-7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUzMTYzMA==", "bodyText": "What number is this default case? This seems very unsafe in the event new regions are added.", "url": "https://github.com/runelite/runelite/pull/10892#discussion_r385531630", "createdAt": "2020-02-28T06:46:18Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/raids/RaidsOverlay.java", "diffHunk": "@@ -188,4 +207,19 @@ else if (plugin.getRoomBlacklist().contains(room.getName().toLowerCase()))\n \n \t\treturn panelComponent.render(graphics);\n \t}\n+\n+\tprivate String getRegion(int locationId)\n+\t{\n+\t\tswitch (locationId)\n+\t\t{\n+\t\t\tcase 0:\n+\t\t\t\treturn \"US\";\n+\t\t\tcase 1:\n+\t\t\t\treturn \"UK\";\n+\t\t\tcase 3:\n+\t\t\t\treturn \"AUS\";\n+\t\t\tdefault:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b0147660b46031c2aa64c19544d2666f4a4b82c"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjQzMjczOnYy", "diffSide": "RIGHT", "path": "http-api/src/main/java/net/runelite/http/api/worlds/WorldRegion.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMzozOTo1NlrOFzS8gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMzozOTo1NlrOFzS8gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzMjA5Nw==", "bodyText": "Instead of adding a comment at the top of the enum's body explaining the fields, add javadoc to the fields needing explaining. (renaming the field would make that clearer as well)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate final String twoLetterCode;\n          \n          \n            \n            \t/**\n          \n          \n            \n            \t * ISO-3166-1 alpha-2 country code\n          \n          \n            \n            \t */\n          \n          \n            \n            \tprivate final String alpha2;", "url": "https://github.com/runelite/runelite/pull/10892#discussion_r389332097", "createdAt": "2020-03-08T03:39:56Z", "author": {"login": "Nightfirecat"}, "path": "http-api/src/main/java/net/runelite/http/api/worlds/WorldRegion.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.http.api.worlds;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+/**\n+ * Holds the data for each world's region (location)\n+ */\n+@AllArgsConstructor\n+@Getter\n+public enum WorldRegion\n+{\n+\t// ISO-3166-1 alpha-2 and alpha-3 standard for country codes\n+\tUNITED_STATES_OF_AMERICA(0, \"US\", \"USA\"),\n+\tUNITED_KINGDOM(1, \"GB\", \"GBR\"),\n+\tAUSTRALIA(3, \"AU\", \"AUS\"),\n+\tGERMANY(7, \"DE\", \"DEU\");\n+\n+\tprivate final int id;\n+\tprivate final String twoLetterCode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5044a63edb1e72beada8c4990f25cf6e0961efc2"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjQzMzM2OnYy", "diffSide": "RIGHT", "path": "http-api/src/main/java/net/runelite/http/api/worlds/WorldRegion.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMzo0MTowN1rOFzS8xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMzo0MTowN1rOFzS8xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzMjE2NQ==", "bodyText": "Same here\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate final String threeLetterCode;\n          \n          \n            \n            \t/**\n          \n          \n            \n            \t * ISO-3166-1 alpha-3 country code\n          \n          \n            \n            \t */\n          \n          \n            \n            \tprivate final String alpha3;", "url": "https://github.com/runelite/runelite/pull/10892#discussion_r389332165", "createdAt": "2020-03-08T03:41:07Z", "author": {"login": "Nightfirecat"}, "path": "http-api/src/main/java/net/runelite/http/api/worlds/WorldRegion.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.http.api.worlds;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+/**\n+ * Holds the data for each world's region (location)\n+ */\n+@AllArgsConstructor\n+@Getter\n+public enum WorldRegion\n+{\n+\t// ISO-3166-1 alpha-2 and alpha-3 standard for country codes\n+\tUNITED_STATES_OF_AMERICA(0, \"US\", \"USA\"),\n+\tUNITED_KINGDOM(1, \"GB\", \"GBR\"),\n+\tAUSTRALIA(3, \"AU\", \"AUS\"),\n+\tGERMANY(7, \"DE\", \"DEU\");\n+\n+\tprivate final int id;\n+\tprivate final String twoLetterCode;\n+\tprivate final String threeLetterCode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5044a63edb1e72beada8c4990f25cf6e0961efc2"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjQzNDAyOnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldTableRow.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMzo0Mjo1NVrOFzS9FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMzo0Mjo1NVrOFzS9FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzMjI0NA==", "bodyText": "This change would duplicate the icon/image initialization per table row generated. Instead, cache the icons in a static block (like was done before) using a Map<WorldRegion, ImageIcon>.", "url": "https://github.com/runelite/runelite/pull/10892#discussion_r389332244", "createdAt": "2020-03-08T03:42:55Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldTableRow.java", "diffHunk": "@@ -326,26 +313,12 @@ private JPanel buildWorldField()\n \r\n \t\tworldField = new JLabel(world.getId() + \"\");\r\n \r\n-\t\tJLabel flag = new JLabel(getFlag(world.getLocation()));\r\n+\t\tJLabel flag = new JLabel(new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class,\r\n+\t\t\t\"flag_\" + world.getLocation().getTwoLetterCode().toLowerCase() + \".png\")));\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5044a63edb1e72beada8c4990f25cf6e0961efc2"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjQzNDU3OnYy", "diffSide": "RIGHT", "path": "http-api/src/main/java/net/runelite/http/api/worlds/WorldRegion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQwMzo0Mzo0NFrOFzS9Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxMjo1NDoyMVrOFzVD4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzMjMwNg==", "bodyText": "Mark this @Nullable\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic static WorldRegion valueOf(int locationId)\n          \n          \n            \n            \t@Nullable\n          \n          \n            \n            \tpublic static WorldRegion valueOf(int locationId)", "url": "https://github.com/runelite/runelite/pull/10892#discussion_r389332306", "createdAt": "2020-03-08T03:43:44Z", "author": {"login": "Nightfirecat"}, "path": "http-api/src/main/java/net/runelite/http/api/worlds/WorldRegion.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.http.api.worlds;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+/**\n+ * Holds the data for each world's region (location)\n+ */\n+@AllArgsConstructor\n+@Getter\n+public enum WorldRegion\n+{\n+\t// ISO-3166-1 alpha-2 and alpha-3 standard for country codes\n+\tUNITED_STATES_OF_AMERICA(0, \"US\", \"USA\"),\n+\tUNITED_KINGDOM(1, \"GB\", \"GBR\"),\n+\tAUSTRALIA(3, \"AU\", \"AUS\"),\n+\tGERMANY(7, \"DE\", \"DEU\");\n+\n+\tprivate final int id;\n+\tprivate final String twoLetterCode;\n+\tprivate final String threeLetterCode;\n+\n+\tprivate static final Map<Integer, WorldRegion> REGIONS = new HashMap<>();\n+\n+\tstatic\n+\t{\n+\t\tfor (final WorldRegion worldRegion : WorldRegion.values())\n+\t\t{\n+\t\t\tREGIONS.put(worldRegion.id, worldRegion);\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Gets the region using the location id\n+\t * {@link WorldRegion} value.\n+\t *\n+\t * @param locationId the location id of world\n+\t * @return WorldRegion the region of the world\n+\t */\n+\tpublic static WorldRegion valueOf(int locationId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5044a63edb1e72beada8c4990f25cf6e0961efc2"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM2Njc1NQ==", "bodyText": "@Nullable doesn't seem to be available in http-api as travis was throwing out errors that it couldn't find com.sun.istack.internal", "url": "https://github.com/runelite/runelite/pull/10892#discussion_r389366755", "createdAt": "2020-03-08T12:54:21Z", "author": {"login": "melkypie"}, "path": "http-api/src/main/java/net/runelite/http/api/worlds/WorldRegion.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright (c) 2020, melky <https://github.com/melkypie>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.http.api.worlds;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+/**\n+ * Holds the data for each world's region (location)\n+ */\n+@AllArgsConstructor\n+@Getter\n+public enum WorldRegion\n+{\n+\t// ISO-3166-1 alpha-2 and alpha-3 standard for country codes\n+\tUNITED_STATES_OF_AMERICA(0, \"US\", \"USA\"),\n+\tUNITED_KINGDOM(1, \"GB\", \"GBR\"),\n+\tAUSTRALIA(3, \"AU\", \"AUS\"),\n+\tGERMANY(7, \"DE\", \"DEU\");\n+\n+\tprivate final int id;\n+\tprivate final String twoLetterCode;\n+\tprivate final String threeLetterCode;\n+\n+\tprivate static final Map<Integer, WorldRegion> REGIONS = new HashMap<>();\n+\n+\tstatic\n+\t{\n+\t\tfor (final WorldRegion worldRegion : WorldRegion.values())\n+\t\t{\n+\t\t\tREGIONS.put(worldRegion.id, worldRegion);\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Gets the region using the location id\n+\t * {@link WorldRegion} value.\n+\t *\n+\t * @param locationId the location id of world\n+\t * @return WorldRegion the region of the world\n+\t */\n+\tpublic static WorldRegion valueOf(int locationId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMzMjMwNg=="}, "originalCommit": {"oid": "5044a63edb1e72beada8c4990f25cf6e0961efc2"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjg5MTY3OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldTableRow.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxNzo0NDoxOVrOFzWhBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxODoxNDowNFrOFzWpTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5MDU5OQ==", "bodyText": "This should follow constant naming conventions.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate static final Map<WorldRegion, ImageIcon> flags;\n          \n          \n            \n            \tprivate static final Map<WorldRegion, ImageIcon> FLAGS;", "url": "https://github.com/runelite/runelite/pull/10892#discussion_r389390599", "createdAt": "2020-03-08T17:44:19Z", "author": {"login": "Nightfirecat"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldTableRow.java", "diffHunk": "@@ -64,12 +62,17 @@\n \tprivate static final Color FREE_WORLD = new Color(200, 200, 200);\r\n \tprivate static final Color LEAGUE_WORLD = new Color(157, 237, 1);\r\n \r\n+\tprivate static final Map<WorldRegion, ImageIcon> flags;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2fce0ec48c9654bdb1019007ee7cd4790793f95"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5MjcxOA==", "bodyText": "Fixed", "url": "https://github.com/runelite/runelite/pull/10892#discussion_r389392718", "createdAt": "2020-03-08T18:14:04Z", "author": {"login": "melkypie"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldTableRow.java", "diffHunk": "@@ -64,12 +62,17 @@\n \tprivate static final Color FREE_WORLD = new Color(200, 200, 200);\r\n \tprivate static final Color LEAGUE_WORLD = new Color(157, 237, 1);\r\n \r\n+\tprivate static final Map<WorldRegion, ImageIcon> flags;\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5MDU5OQ=="}, "originalCommit": {"oid": "d2fce0ec48c9654bdb1019007ee7cd4790793f95"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjA4NzM5OnYy", "diffSide": "RIGHT", "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldTableRow.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMTozMjoxN1rOF3u0Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNDozNjowMFrOF4H5Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk4MzA1OQ==", "bodyText": "This type of thing becomes easy to miss later when adding a new world region. Keeping the previous code and changing getFlag to getFlag(WorldRegion region) can compile-time error due to the switch if you cover all possible enum values.", "url": "https://github.com/runelite/runelite/pull/10892#discussion_r393983059", "createdAt": "2020-03-17T21:32:17Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldTableRow.java", "diffHunk": "@@ -64,12 +62,17 @@\n \tprivate static final Color FREE_WORLD = new Color(200, 200, 200);\r\n \tprivate static final Color LEAGUE_WORLD = new Color(157, 237, 1);\r\n \r\n+\tprivate static final Map<WorldRegion, ImageIcon> FLAGS;\r\n+\r\n \tstatic\r\n \t{\r\n-\t\tFLAG_AUS = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_aus.png\"));\r\n-\t\tFLAG_UK = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_uk.png\"));\r\n-\t\tFLAG_US = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_us.png\"));\r\n-\t\tFLAG_GER = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_ger.png\"));\r\n+\t\tImmutableMap.Builder<WorldRegion, ImageIcon> builder = new ImmutableMap.Builder<>();\r\n+\t\tfor (WorldRegion worldRegion : WorldRegion.values())\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f254d9d82ab0150a9aaec64d040978a02f380d6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk4NjYwNA==", "bodyText": "Wouldn't it still throw an error since it couldn't find the file, if only an enum entry was added?", "url": "https://github.com/runelite/runelite/pull/10892#discussion_r393986604", "createdAt": "2020-03-17T21:40:16Z", "author": {"login": "melkypie"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldTableRow.java", "diffHunk": "@@ -64,12 +62,17 @@\n \tprivate static final Color FREE_WORLD = new Color(200, 200, 200);\r\n \tprivate static final Color LEAGUE_WORLD = new Color(157, 237, 1);\r\n \r\n+\tprivate static final Map<WorldRegion, ImageIcon> FLAGS;\r\n+\r\n \tstatic\r\n \t{\r\n-\t\tFLAG_AUS = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_aus.png\"));\r\n-\t\tFLAG_UK = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_uk.png\"));\r\n-\t\tFLAG_US = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_us.png\"));\r\n-\t\tFLAG_GER = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_ger.png\"));\r\n+\t\tImmutableMap.Builder<WorldRegion, ImageIcon> builder = new ImmutableMap.Builder<>();\r\n+\t\tfor (WorldRegion worldRegion : WorldRegion.values())\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk4MzA1OQ=="}, "originalCommit": {"oid": "1f254d9d82ab0150a9aaec64d040978a02f380d6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAxOTkxNw==", "bodyText": "If it was run yes, but I don't think this is even tested so we wouldn't notice.", "url": "https://github.com/runelite/runelite/pull/10892#discussion_r394019917", "createdAt": "2020-03-17T23:02:56Z", "author": {"login": "Adam-"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldTableRow.java", "diffHunk": "@@ -64,12 +62,17 @@\n \tprivate static final Color FREE_WORLD = new Color(200, 200, 200);\r\n \tprivate static final Color LEAGUE_WORLD = new Color(157, 237, 1);\r\n \r\n+\tprivate static final Map<WorldRegion, ImageIcon> FLAGS;\r\n+\r\n \tstatic\r\n \t{\r\n-\t\tFLAG_AUS = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_aus.png\"));\r\n-\t\tFLAG_UK = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_uk.png\"));\r\n-\t\tFLAG_US = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_us.png\"));\r\n-\t\tFLAG_GER = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_ger.png\"));\r\n+\t\tImmutableMap.Builder<WorldRegion, ImageIcon> builder = new ImmutableMap.Builder<>();\r\n+\t\tfor (WorldRegion worldRegion : WorldRegion.values())\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk4MzA1OQ=="}, "originalCommit": {"oid": "1f254d9d82ab0150a9aaec64d040978a02f380d6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM5Mzg5MQ==", "bodyText": "Added a test that would check for this", "url": "https://github.com/runelite/runelite/pull/10892#discussion_r394393891", "createdAt": "2020-03-18T14:36:00Z", "author": {"login": "melkypie"}, "path": "runelite-client/src/main/java/net/runelite/client/plugins/worldhopper/WorldTableRow.java", "diffHunk": "@@ -64,12 +62,17 @@\n \tprivate static final Color FREE_WORLD = new Color(200, 200, 200);\r\n \tprivate static final Color LEAGUE_WORLD = new Color(157, 237, 1);\r\n \r\n+\tprivate static final Map<WorldRegion, ImageIcon> FLAGS;\r\n+\r\n \tstatic\r\n \t{\r\n-\t\tFLAG_AUS = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_aus.png\"));\r\n-\t\tFLAG_UK = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_uk.png\"));\r\n-\t\tFLAG_US = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_us.png\"));\r\n-\t\tFLAG_GER = new ImageIcon(ImageUtil.getResourceStreamFromClass(WorldHopperPlugin.class, \"flag_ger.png\"));\r\n+\t\tImmutableMap.Builder<WorldRegion, ImageIcon> builder = new ImmutableMap.Builder<>();\r\n+\t\tfor (WorldRegion worldRegion : WorldRegion.values())\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk4MzA1OQ=="}, "originalCommit": {"oid": "1f254d9d82ab0150a9aaec64d040978a02f380d6"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3849, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}